

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 16 01:47:24 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95  0000                     
    96                           ; Version 2.20
    97                           ; Generated 05/05/2020 GMT
    98                           ; 
    99                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F45K22 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	eeprom_data
   132  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   133  0000                     
   134                           	psect	idataBANK1
   135  005408                     __pidataBANK1:
   136                           	callstack 0
   137                           
   138                           ;initializer for _KD@fs_speed_controller$F2357
   139  005408  0000               	dw	0
   140  00540A  3F80               	dw	16256
   141                           
   142                           ;initializer for _KP@fs_speed_controller$F2356
   143  00540C  CCCD               	dw	52429
   144  00540E  3E4C               	dw	15948
   145                           
   146                           ;initializer for _KD@fs_speed_controller$F2204
   147  005410  0000               	dw	0
   148  005412  3F80               	dw	16256
   149                           
   150                           ;initializer for _KP@fs_speed_controller$F2203
   151  005414  CCCD               	dw	52429
   152  005416  3E4C               	dw	15948
   153                           
   154                           ;initializer for _KD@fs_speed_controller$F2073
   155  005418  0000               	dw	0
   156  00541A  3F80               	dw	16256
   157                           
   158                           ;initializer for _KP@fs_speed_controller$F2072
   159  00541C  CCCD               	dw	52429
   160  00541E  3E4C               	dw	15948
   161                           
   162                           ;initializer for _KD@fs_speed_controller$F1839
   163  005420  0000               	dw	0
   164  005422  3F80               	dw	16256
   165                           
   166                           ;initializer for _KP@fs_speed_controller$F1838
   167  005424  CCCD               	dw	52429
   168  005426  3E4C               	dw	15948
   169                           
   170                           ;initializer for _KD@fs_speed_controller$F1339
   171  005428  0000               	dw	0
   172  00542A  3F80               	dw	16256
   173                           
   174                           ;initializer for _KP@fs_speed_controller$F1338
   175  00542C  CCCD               	dw	52429
   176  00542E  3E4C               	dw	15948
   177                           
   178                           ;initializer for _KD@fs_speed_controller$F1164
   179  005430  0000               	dw	0
   180  005432  3F80               	dw	16256
   181                           
   182                           ;initializer for _KP@fs_speed_controller$F1163
   183  005434  CCCD               	dw	52429
   184  005436  3E4C               	dw	15948
   185                           
   186                           ;initializer for _KD@fs_speed_controller$F950
   187  005438  0000               	dw	0
   188  00543A  3F80               	dw	16256
   189                           
   190                           ;initializer for _KP@fs_speed_controller$F949
   191  00543C  CCCD               	dw	52429
   192  00543E  3E4C               	dw	15948
   193                           
   194                           ;initializer for _KD
   195  005440  0000               	dw	0
   196  005442  3F80               	dw	16256
   197                           
   198                           ;initializer for _KP
   199  005444  CCCD               	dw	52429
   200  005446  3E4C               	dw	15948
   201  0000                     _ANSELCbits	set	3898
   202  0000                     _ANSELBbits	set	3897
   203  0000                     _ANSELDbits	set	3899
   204  0000                     _ANSELEbits	set	3900
   205  0000                     _ANSELAbits	set	3896
   206  0000                     _T0CON	set	4053
   207  0000                     _TMR0L	set	4054
   208  0000                     _TMR0H	set	4055
   209  0000                     _INTCONbits	set	4082
   210  0000                     _CCPR2L	set	3943
   211  0000                     _CCPR1L	set	4030
   212  0000                     _PR2	set	4027
   213  0000                     _TMR2	set	4028
   214  0000                     _T2CONbits	set	4026
   215  0000                     _CCP2CON	set	3942
   216  0000                     _CCP1CON	set	4029
   217  0000                     _LATCbits	set	3979
   218  0000                     _LATDbits	set	3980
   219  0000                     _TRISCbits	set	3988
   220  0000                     _OSCTUNEbits	set	3995
   221  0000                     _OSCCONbits	set	4051
   222  0000                     _TRISBbits	set	3987
   223  0000                     _TRISDbits	set	3989
   224  0000                     _PORTDbits	set	3971
   225  0000                     _PORTBbits	set	3969
   226  0000                     _PIR2bits	set	4001
   227  0000                     _EECON2	set	4007
   228  0000                     _EEDATA	set	4008
   229  0000                     _EECON1bits	set	4006
   230  0000                     _EEADR	set	4009
   231  0000                     _ADCON2bits	set	4032
   232  0000                     _ADCON1	set	4033
   233  0000                     _ADCON0	set	4034
   234  0000                     _TRISEbits	set	3990
   235  0000                     _TRISAbits	set	3986
   236  0000                     _ADRESL	set	4035
   237  0000                     _ADRESH	set	4036
   238  0000                     _ADCON0bits	set	4034
   239                           
   240                           	psect	mediumconst
   241  007EF6                     __pmediumconst:
   242                           	callstack 0
   243  007EF6  00                 	db	0
   244  007EF7                     STR_14:
   245  007EF7  25                 	db	37
   246  007EF8  64                 	db	100	;'d'
   247  007EF9  20                 	db	32
   248  007EFA  20                 	db	32
   249  007EFB  20                 	db	32
   250  007EFC  20                 	db	32
   251  007EFD  20                 	db	32
   252  007EFE  20                 	db	32
   253  007EFF  20                 	db	32
   254  007F00  20                 	db	32
   255  007F01  20                 	db	32
   256  007F02  20                 	db	32
   257  007F03  20                 	db	32
   258  007F04  20                 	db	32
   259  007F05  20                 	db	32
   260  007F06  20                 	db	32
   261  007F07  20                 	db	32
   262  007F08  00                 	db	0
   263  007F09                     STR_9:
   264  007F09  50                 	db	80	;'P'
   265  007F0A  49                 	db	73	;'I'
   266  007F0B  44                 	db	68	;'D'
   267  007F0C  20                 	db	32
   268  007F0D  50                 	db	80	;'P'
   269  007F0E  41                 	db	65	;'A'
   270  007F0F  52                 	db	82	;'R'
   271  007F10  41                 	db	65	;'A'
   272  007F11  4D                 	db	77	;'M'
   273  007F12  20                 	db	32
   274  007F13  20                 	db	32
   275  007F14  20                 	db	32
   276  007F15  20                 	db	32
   277  007F16  20                 	db	32
   278  007F17  20                 	db	32
   279  007F18  20                 	db	32
   280  007F19  00                 	db	0
   281  007F1A                     STR_13:
   282  007F1A  48                 	db	72	;'H'
   283  007F1B  49                 	db	73	;'I'
   284  007F1C  5A                 	db	90	;'Z'
   285  007F1D  20                 	db	32
   286  007F1E  4C                 	db	76	;'L'
   287  007F1F  69                 	db	105	;'i'
   288  007F20  4D                 	db	77	;'M'
   289  007F21  69                 	db	105	;'i'
   290  007F22  54                 	db	84	;'T'
   291  007F23  69                 	db	105	;'i'
   292  007F24  20                 	db	32
   293  007F25  20                 	db	32
   294  007F26  20                 	db	32
   295  007F27  20                 	db	32
   296  007F28  20                 	db	32
   297  007F29  20                 	db	32
   298  007F2A  00                 	db	0
   299  007F2B                     STR_3:
   300  007F2B  4B                 	db	75	;'K'
   301  007F2C  41                 	db	65	;'A'
   302  007F2D  4C                 	db	76	;'L'
   303  007F2E  41                 	db	65	;'A'
   304  007F2F  4E                 	db	78	;'N'
   305  007F30  20                 	db	32
   306  007F31  5A                 	db	90	;'Z'
   307  007F32  41                 	db	65	;'A'
   308  007F33  4D                 	db	77	;'M'
   309  007F34  41                 	db	65	;'A'
   310  007F35  4E                 	db	78	;'N'
   311  007F36  20                 	db	32
   312  007F37  20                 	db	32
   313  007F38  20                 	db	32
   314  007F39  20                 	db	32
   315  007F3A  20                 	db	32
   316  007F3B  00                 	db	0
   317  007F3C                     STR_5:
   318  007F3C  5A                 	db	90	;'Z'
   319  007F3D  41                 	db	65	;'A'
   320  007F3E  4D                 	db	77	;'M'
   321  007F3F  41                 	db	65	;'A'
   322  007F40  4E                 	db	78	;'N'
   323  007F41  20                 	db	32
   324  007F42  44                 	db	68	;'D'
   325  007F43  4F                 	db	79	;'O'
   326  007F44  4C                 	db	76	;'L'
   327  007F45  44                 	db	68	;'D'
   328  007F46  55                 	db	85	;'U'
   329  007F47  20                 	db	32
   330  007F48  20                 	db	32
   331  007F49  20                 	db	32
   332  007F4A  20                 	db	32
   333  007F4B  20                 	db	32
   334  007F4C  00                 	db	0
   335  007F4D                     STR_7:
   336  007F4D  48                 	db	72	;'H'
   337  007F4E  41                 	db	65	;'A'
   338  007F4F  52                 	db	82	;'R'
   339  007F50  45                 	db	69	;'E'
   340  007F51  4B                 	db	75	;'K'
   341  007F52  45                 	db	69	;'E'
   342  007F53  54                 	db	84	;'T'
   343  007F54  20                 	db	32
   344  007F55  44                 	db	68	;'D'
   345  007F56  55                 	db	85	;'U'
   346  007F57  52                 	db	82	;'R'
   347  007F58  44                 	db	68	;'D'
   348  007F59  55                 	db	85	;'U'
   349  007F5A  20                 	db	32
   350  007F5B  20                 	db	32
   351  007F5C  20                 	db	32
   352  007F5D  00                 	db	0
   353  007F5E                     STR_17:
   354  007F5E  48                 	db	72	;'H'
   355  007F5F  41                 	db	65	;'A'
   356  007F60  52                 	db	82	;'R'
   357  007F61  45                 	db	69	;'E'
   358  007F62  4B                 	db	75	;'K'
   359  007F63  54                 	db	84	;'T'
   360  007F64  20                 	db	32
   361  007F65  5A                 	db	90	;'Z'
   362  007F66  41                 	db	65	;'A'
   363  007F67  4D                 	db	77	;'M'
   364  007F68  41                 	db	65	;'A'
   365  007F69  4E                 	db	78	;'N'
   366  007F6A  49                 	db	73	;'I'
   367  007F6B  20                 	db	32
   368  007F6C  64                 	db	100	;'d'
   369  007F6D  6B                 	db	107	;'k'
   370  007F6E  00                 	db	0
   371  007F6F                     STR_15:
   372  007F6F  44                 	db	68	;'D'
   373  007F70  55                 	db	85	;'U'
   374  007F71  52                 	db	82	;'R'
   375  007F72  4D                 	db	77	;'M'
   376  007F73  41                 	db	65	;'A'
   377  007F74  20                 	db	32
   378  007F75  5A                 	db	90	;'Z'
   379  007F76  41                 	db	65	;'A'
   380  007F77  4D                 	db	77	;'M'
   381  007F78  41                 	db	65	;'A'
   382  007F79  4E                 	db	78	;'N'
   383  007F7A  49                 	db	73	;'I'
   384  007F7B  20                 	db	32
   385  007F7C  20                 	db	32
   386  007F7D  6D                 	db	109	;'m'
   387  007F7E  73                 	db	115	;'s'
   388  007F7F  00                 	db	0
   389  007F80                     STR_2:
   390  007F80  20                 	db	32
   391  007F81  69                 	db	105	;'i'
   392  007F82  59                 	db	89	;'Y'
   393  007F83  69                 	db	105	;'i'
   394  007F84  20                 	db	32
   395  007F85  45                 	db	69	;'E'
   396  007F86  67                 	db	103	;'g'
   397  007F87  6C                 	db	108	;'l'
   398  007F88  65                 	db	101	;'e'
   399  007F89  6E                 	db	110	;'n'
   400  007F8A  63                 	db	99	;'c'
   401  007F8B  65                 	db	101	;'e'
   402  007F8C  6C                 	db	108	;'l'
   403  007F8D  65                 	db	101	;'e'
   404  007F8E  72                 	db	114	;'r'
   405  007F8F  20                 	db	32
   406  007F90  00                 	db	0
   407  007F91                     STR_16:
   408  007F91  25                 	db	37
   409  007F92  64                 	db	100	;'d'
   410  007F93  20                 	db	32
   411  007F94  20                 	db	32
   412  007F95  20                 	db	32
   413  007F96  20                 	db	32
   414  007F97  20                 	db	32
   415  007F98  20                 	db	32
   416  007F99  20                 	db	32
   417  007F9A  20                 	db	32
   418  007F9B  20                 	db	32
   419  007F9C  20                 	db	32
   420  007F9D  20                 	db	32
   421  007F9E  20                 	db	32
   422  007F9F  20                 	db	32
   423  007FA0  00                 	db	0
   424  007FA1                     STR_6:
   425  007FA1  20                 	db	32
   426  007FA2  20                 	db	32
   427  007FA3  20                 	db	32
   428  007FA4  20                 	db	32
   429  007FA5  20                 	db	32
   430  007FA6  20                 	db	32
   431  007FA7  25                 	db	37
   432  007FA8  64                 	db	100	;'d'
   433  007FA9  3A                 	db	58	;':'
   434  007FAA  25                 	db	37
   435  007FAB  64                 	db	100	;'d'
   436  007FAC  20                 	db	32
   437  007FAD  20                 	db	32
   438  007FAE  20                 	db	32
   439  007FAF  20                 	db	32
   440  007FB0  00                 	db	0
   441  007FB1                     STR_1:
   442  007FB1  20                 	db	32
   443  007FB2  20                 	db	32
   444  007FB3  20                 	db	32
   445  007FB4  45                 	db	69	;'E'
   446  007FB5  72                 	db	114	;'r'
   447  007FB6  67                 	db	103	;'g'
   448  007FB7  69                 	db	105	;'i'
   449  007FB8  6E                 	db	110	;'n'
   450  007FB9  20                 	db	32
   451  007FBA  4F                 	db	79	;'O'
   452  007FBB  79                 	db	121	;'y'
   453  007FBC  75                 	db	117	;'u'
   454  007FBD  6E                 	db	110	;'n'
   455  007FBE  20                 	db	32
   456  007FBF  20                 	db	32
   457  007FC0  00                 	db	0
   458  007FC1                     STR_4:
   459  007FC1  20                 	db	32
   460  007FC2  20                 	db	32
   461  007FC3  20                 	db	32
   462  007FC4  20                 	db	32
   463  007FC5  20                 	db	32
   464  007FC6  20                 	db	32
   465  007FC7  25                 	db	37
   466  007FC8  64                 	db	100	;'d'
   467  007FC9  3A                 	db	58	;':'
   468  007FCA  25                 	db	37
   469  007FCB  64                 	db	100	;'d'
   470  007FCC  20                 	db	32
   471  007FCD  20                 	db	32
   472  007FCE  20                 	db	32
   473  007FCF  00                 	db	0
   474  007FD0                     STR_10:
   475  007FD0  4B                 	db	75	;'K'
   476  007FD1  70                 	db	112	;'p'
   477  007FD2  3A                 	db	58	;':'
   478  007FD3  25                 	db	37
   479  007FD4  35                 	db	53	;'5'
   480  007FD5  2E                 	db	46
   481  007FD6  31                 	db	49	;'1'
   482  007FD7  66                 	db	102	;'f'
   483  007FD8  20                 	db	32
   484  007FD9  20                 	db	32
   485  007FDA  20                 	db	32
   486  007FDB  20                 	db	32
   487  007FDC  20                 	db	32
   488  007FDD  00                 	db	0
   489  007FDE                     STR_12:
   490  007FDE  4B                 	db	75	;'K'
   491  007FDF  64                 	db	100	;'d'
   492  007FE0  3A                 	db	58	;':'
   493  007FE1  25                 	db	37
   494  007FE2  35                 	db	53	;'5'
   495  007FE3  2E                 	db	46
   496  007FE4  31                 	db	49	;'1'
   497  007FE5  66                 	db	102	;'f'
   498  007FE6  20                 	db	32
   499  007FE7  20                 	db	32
   500  007FE8  20                 	db	32
   501  007FE9  20                 	db	32
   502  007FEA  00                 	db	0
   503  007FEB                     STR_19:
   504  007FEB  49                 	db	73	;'I'
   505  007FEC  4E                 	db	78	;'N'
   506  007FED  46                 	db	70	;'F'
   507  007FEE  00                 	db	0
   508  007FEF                     STR_23:
   509  007FEF  4E                 	db	78	;'N'
   510  007FF0  41                 	db	65	;'A'
   511  007FF1  4E                 	db	78	;'N'
   512  007FF2  00                 	db	0
   513  007FF3                     STR_20:
   514  007FF3  69                 	db	105	;'i'
   515  007FF4  6E                 	db	110	;'n'
   516  007FF5  66                 	db	102	;'f'
   517  007FF6  00                 	db	0
   518  007FF7                     STR_24:
   519  007FF7  6E                 	db	110	;'n'
   520  007FF8  61                 	db	97	;'a'
   521  007FF9  6E                 	db	110	;'n'
   522  007FFA  00                 	db	0
   523  007FFB                     STR_27:
   524  007FFB  6C                 	db	108	;'l'
   525  007FFC  66                 	db	102	;'f'
   526  007FFD  00                 	db	0
   527  007FFE  00                 	db	0	; dummy byte at the end
   528  0000                     
   529                           ; #config settings
   530                           
   531                           	psect	cinit
   532  0051FC                     __pcinit:
   533                           	callstack 0
   534  0051FC                     start_initialization:
   535                           	callstack 0
   536  0051FC                     __initialization:
   537                           	callstack 0
   538                           
   539                           ; Initialize objects allocated to BANK1 (64 bytes)
   540                           ; load TBLPTR registers with __pidataBANK1
   541  0051FC  0E08               	movlw	low __pidataBANK1
   542  0051FE  6EF6               	movwf	tblptrl,c
   543  005200  0E54               	movlw	high __pidataBANK1
   544  005202  6EF7               	movwf	tblptrh,c
   545  005204  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   546  005206  6EF8               	movwf	tblptru,c
   547  005208  EE01  F0B3         	lfsr	0,__pdataBANK1
   548  00520C  EE10 F040          	lfsr	1,64
   549  005210                     copy_data0:
   550  005210  0009               	tblrd		*+
   551  005212  CFF5 FFEE          	movff	tablat,postinc0
   552  005216  50E5               	movf	postdec1,w,c
   553  005218  50E1               	movf	fsr1l,w,c
   554  00521A  E1FA               	bnz	copy_data0
   555                           
   556                           ; Clear objects allocated to BANK2 (176 bytes)
   557  00521C  EE02  F000         	lfsr	0,__pbssBANK2
   558  005220  0EB0               	movlw	176
   559  005222                     clear_0:
   560  005222  6AEE               	clrf	postinc0,c
   561  005224  06E8               	decf	wreg,f,c
   562  005226  E1FD               	bnz	clear_0
   563                           
   564                           ; Clear objects allocated to BANK1 (179 bytes)
   565  005228  EE01  F000         	lfsr	0,__pbssBANK1
   566  00522C  0EB3               	movlw	179
   567  00522E                     clear_1:
   568  00522E  6AEE               	clrf	postinc0,c
   569  005230  06E8               	decf	wreg,f,c
   570  005232  E1FD               	bnz	clear_1
   571                           
   572                           ; Clear objects allocated to BANK0 (13 bytes)
   573  005234  EE00  F0F3         	lfsr	0,__pbssBANK0
   574  005238  0E0D               	movlw	13
   575  00523A                     clear_2:
   576  00523A  6AEE               	clrf	postinc0,c
   577  00523C  06E8               	decf	wreg,f,c
   578  00523E  E1FD               	bnz	clear_2
   579  005240                     end_of_initialization:
   580                           	callstack 0
   581  005240                     __end_of__initialization:
   582                           	callstack 0
   583  005240  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   584  005242  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   585  005244  0E00               	movlw	low (__Lmediumconst shr (0+16))
   586  005246  6EF8               	movwf	tblptru,c
   587  005248  0100               	movlb	0
   588  00524A  EFD7  F022         	goto	_main	;jump to C main() function
   589                           
   590                           	psect	bssBANK0
   591  0000F3                     __pbssBANK0:
   592                           	callstack 0
   593  0000F3                     _menu_value:
   594                           	callstack 0
   595  0000F3                     	ds	3
   596  0000F6                     _prec:
   597                           	callstack 0
   598  0000F6                     	ds	2
   599  0000F8                     _flags:
   600                           	callstack 0
   601  0000F8                     	ds	2
   602  0000FA                     _timer_counter_flag:
   603                           	callstack 0
   604  0000FA                     	ds	1
   605  0000FB                     _menu_selected:
   606                           	callstack 0
   607  0000FB                     	ds	1
   608  0000FC                     _secretMenuCounter:
   609                           	callstack 0
   610  0000FC                     	ds	1
   611  0000FD                     _stopIsClick:
   612                           	callstack 0
   613  0000FD                     	ds	1
   614  0000FE                     _startIsClick:
   615                           	callstack 0
   616  0000FE                     	ds	1
   617  0000FF                     _pauseIsClick:
   618                           	callstack 0
   619  0000FF                     	ds	1
   620                           
   621                           	psect	bssBANK1
   622  000100                     __pbssBANK1:
   623                           	callstack 0
   624  000100                     _convert_data:
   625                           	callstack 0
   626  000100                     	ds	48
   627  000130                     _procces_data:
   628                           	callstack 0
   629  000130                     	ds	32
   630  000150                     _controller:
   631                           	callstack 0
   632  000150                     	ds	19
   633  000163                     	ds	16
   634  000173                     _adc_raw_data:
   635                           	callstack 0
   636  000173                     	ds	16
   637  000183                     _driver_limit:
   638                           	callstack 0
   639  000183                     	ds	12
   640  00018F                     _timer_value:
   641                           	callstack 0
   642  00018F                     	ds	8
   643  000197                     _menu_flags:
   644                           	callstack 0
   645  000197                     	ds	6
   646  00019D                     _button_bounce_controller:
   647                           	callstack 0
   648  00019D                     	ds	6
   649  0001A3                     floorf@F524:
   650                           	callstack 0
   651  0001A3                     	ds	4
   652  0001A7                     ___fpclassifyf@F463:
   653                           	callstack 0
   654  0001A7                     	ds	4
   655  0001AB                     fabsf@F463:
   656                           	callstack 0
   657  0001AB                     	ds	4
   658  0001AF                     _nout:
   659                           	callstack 0
   660  0001AF                     	ds	2
   661  0001B1                     _width:
   662                           	callstack 0
   663  0001B1                     	ds	2
   664                           
   665                           	psect	dataBANK1
   666  0001B3                     __pdataBANK1:
   667                           	callstack 0
   668  0001B3                     	ds	4
   669  0001B7                     	ds	4
   670  0001BB                     	ds	4
   671  0001BF                     	ds	4
   672  0001C3                     	ds	4
   673  0001C7                     	ds	4
   674  0001CB                     _KD@fs_speed_controller$F1839:
   675                           	callstack 0
   676  0001CB                     	ds	4
   677  0001CF                     _KP@fs_speed_controller$F1838:
   678                           	callstack 0
   679  0001CF                     	ds	4
   680  0001D3                     	ds	4
   681  0001D7                     	ds	4
   682  0001DB                     	ds	4
   683  0001DF                     	ds	4
   684  0001E3                     	ds	4
   685  0001E7                     	ds	4
   686  0001EB                     	ds	4
   687  0001EF                     	ds	4
   688                           
   689                           	psect	bssBANK2
   690  000200                     __pbssBANK2:
   691                           	callstack 0
   692  000200                     	ds	16
   693  000210                     	ds	16
   694  000220                     	ds	16
   695  000230                     	ds	16
   696  000240                     	ds	16
   697  000250                     	ds	16
   698  000260                     _dbuf:
   699                           	callstack 0
   700  000260                     	ds	80
   701                           
   702                           	psect	cstackBANK0
   703  000060                     __pcstackBANK0:
   704                           	callstack 0
   705  000060                     floorf@m:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x0
   709  000060                     	ds	4
   710  000064                     floorf@e:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x4
   714  000064                     	ds	2
   715  000066                     floorf@u:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x6
   719  000066                     	ds	4
   720  00006A                     ??_efgtoa:
   721                           
   722                           ; 1 bytes @ 0xA
   723  00006A                     	ds	5
   724  00006F                     efgtoa@ou:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0xF
   728  00006F                     	ds	4
   729  000073                     _efgtoa$2979:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x13
   733  000073                     	ds	2
   734  000075                     _efgtoa$2980:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x15
   738  000075                     	ds	2
   739  000077                     _efgtoa$2984:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x17
   743  000077                     	ds	2
   744  000079                     _efgtoa$2988:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x19
   748  000079                     	ds	2
   749  00007B                     _efgtoa$2989:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x1B
   753  00007B                     	ds	2
   754  00007D                     _efgtoa$2990:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1D
   758  00007D                     	ds	2
   759  00007F                     efgtoa@t:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1F
   763  00007F                     	ds	2
   764  000081                     efgtoa@pp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x21
   768  000081                     	ds	2
   769  000083                     efgtoa@m:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x23
   773  000083                     	ds	2
   774  000085                     efgtoa@ne:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x25
   778  000085                     	ds	2
   779  000087                     efgtoa@d:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x27
   783  000087                     	ds	2
   784  000089                     efgtoa@sign:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x29
   788  000089                     	ds	2
   789  00008B                     efgtoa@p:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x2B
   793  00008B                     	ds	2
   794  00008D                     efgtoa@nmode:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x2D
   798  00008D                     	ds	1
   799  00008E                     efgtoa@w:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x2E
   803  00008E                     	ds	2
   804  000090                     efgtoa@mode:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x30
   808  000090                     	ds	1
   809  000091                     efgtoa@h:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x31
   813  000091                     	ds	4
   814  000095                     efgtoa@l:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x35
   818  000095                     	ds	4
   819  000099                     efgtoa@i:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x39
   823  000099                     	ds	2
   824  00009B                     efgtoa@g:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x3B
   828  00009B                     	ds	4
   829  00009F                     efgtoa@e:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x3F
   833  00009F                     	ds	2
   834  0000A1                     efgtoa@n:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x41
   838  0000A1                     	ds	2
   839  0000A3                     efgtoa@u:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x43
   843  0000A3                     	ds	4
   844  0000A7                     ?_vfpfcnvrt:
   845                           	callstack 0
   846  0000A7                     vfpfcnvrt@fp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x47
   850  0000A7                     	ds	2
   851  0000A9                     vfpfcnvrt@fmt:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x49
   855  0000A9                     	ds	2
   856  0000AB                     vfpfcnvrt@ap:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x4B
   860  0000AB                     	ds	2
   861  0000AD                     ??_vfpfcnvrt:
   862                           
   863                           ; 1 bytes @ 0x4D
   864  0000AD                     	ds	4
   865  0000B1                     vfpfcnvrt@ll:
   866                           	callstack 0
   867                           
   868                           ; 8 bytes @ 0x51
   869  0000B1                     	ds	8
   870  0000B9                     _vfpfcnvrt$3004:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x59
   874  0000B9                     	ds	2
   875  0000BB                     _vfpfcnvrt$3005:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x5B
   879  0000BB                     	ds	2
   880  0000BD                     _vfpfcnvrt$3010:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x5D
   884  0000BD                     	ds	2
   885  0000BF                     vfpfcnvrt@f:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x5F
   889  0000BF                     	ds	4
   890  0000C3                     vfpfcnvrt@ct:
   891                           	callstack 0
   892                           
   893                           ; 3 bytes @ 0x63
   894  0000C3                     	ds	3
   895  0000C6                     vfpfcnvrt@c:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x66
   899  0000C6                     	ds	1
   900  0000C7                     ?_vfprintf:
   901                           	callstack 0
   902  0000C7                     vfprintf@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x67
   906  0000C7                     	ds	2
   907  0000C9                     vfprintf@fmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x69
   911  0000C9                     	ds	2
   912  0000CB                     vfprintf@ap:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x6B
   916  0000CB                     	ds	2
   917  0000CD                     vfprintf@cfmt:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x6D
   921  0000CD                     	ds	2
   922  0000CF                     ?_sprintf:
   923                           	callstack 0
   924  0000CF                     sprintf@s:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x6F
   928  0000CF                     	ds	2
   929  0000D1                     sprintf@fmt:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x71
   933  0000D1                     	ds	8
   934  0000D9                     sprintf@ap:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x79
   938  0000D9                     	ds	2
   939  0000DB                     sprintf@f:
   940                           	callstack 0
   941                           
   942                           ; 6 bytes @ 0x7B
   943  0000DB                     	ds	6
   944  0000E1                     mainMenu@textCursor2:
   945                           	callstack 0
   946  0000E1                     stopMenu@textCursor2:
   947                           	callstack 0
   948  0000E1                     pauseMenu@textCursor2:
   949                           	callstack 0
   950  0000E1                     secretMenu@textCursor2:
   951                           	callstack 0
   952  0000E1                     speedLimitSettingMenu@textCursor2:
   953                           	callstack 0
   954  0000E1                     stopTimeSettingMenu@textCursor2:
   955                           	callstack 0
   956  0000E1                     driverTimeSettingMenu@textCursor2:
   957                           	callstack 0
   958                           
   959                           ; 16 bytes @ 0x81
   960  0000E1                     	ds	16
   961  0000F1                     ??_stateMachine:
   962                           
   963                           ; 1 bytes @ 0x91
   964  0000F1                     	ds	2
   965                           
   966                           	psect	cstackCOMRAM
   967  000001                     __pcstackCOMRAM:
   968                           	callstack 0
   969  000001                     ?_strlen:
   970                           	callstack 0
   971  000001                     ?___fpclassifyf:
   972                           	callstack 0
   973  000001                     ?_isupper:
   974                           	callstack 0
   975  000001                     ?_isdigit:
   976                           	callstack 0
   977  000001                     ?_strncmp:
   978                           	callstack 0
   979  000001                     ?_isspace:
   980                           	callstack 0
   981  000001                     ?_readAdcValue:
   982                           	callstack 0
   983  000001                     ?___wmul:
   984                           	callstack 0
   985  000001                     ?___awdiv:
   986                           	callstack 0
   987  000001                     ?___awmod:
   988                           	callstack 0
   989  000001                     ?___lmul:
   990                           	callstack 0
   991  000001                     ?___lldiv:
   992                           	callstack 0
   993  000001                     ?___flneg:
   994                           	callstack 0
   995  000001                     ?___aodiv:
   996                           	callstack 0
   997  000001                     ?___aomod:
   998                           	callstack 0
   999  000001                     eepromRead@address:
  1000                           	callstack 0
  1001  000001                     eepromWrite@data:
  1002                           	callstack 0
  1003  000001                     Lcd_Port@a:
  1004                           	callstack 0
  1005  000001                     ___wmul@multiplier:
  1006                           	callstack 0
  1007  000001                     ___awdiv@dividend:
  1008                           	callstack 0
  1009  000001                     ___awmod@dividend:
  1010                           	callstack 0
  1011  000001                     isdigit@c:
  1012                           	callstack 0
  1013  000001                     isspace@c:
  1014                           	callstack 0
  1015  000001                     isupper@c:
  1016                           	callstack 0
  1017  000001                     fputc@c:
  1018                           	callstack 0
  1019  000001                     strcpy@dest:
  1020                           	callstack 0
  1021  000001                     strlen@s:
  1022                           	callstack 0
  1023  000001                     strncmp@_l:
  1024                           	callstack 0
  1025  000001                     ___lmul@multiplier:
  1026                           	callstack 0
  1027  000001                     ___lldiv@dividend:
  1028                           	callstack 0
  1029  000001                     ___fleq@ff1:
  1030                           	callstack 0
  1031  000001                     ___flneg@f1:
  1032                           	callstack 0
  1033  000001                     ___fpclassifyf@x:
  1034                           	callstack 0
  1035  000001                     ___aodiv@dividend:
  1036                           	callstack 0
  1037  000001                     ___aomod@dividend:
  1038                           	callstack 0
  1039                           
  1040                           ; 8 bytes @ 0x0
  1041  000001                     	ds	1
  1042  000002                     ??_system_init:
  1043  000002                     ??_Lcd_Cmd:
  1044  000002                     eepromWrite@address:
  1045                           	callstack 0
  1046  000002                     Lcd_Write_Char@temp:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x1
  1050  000002                     	ds	1
  1051  000003                     ??_isupper:
  1052  000003                     ??_isdigit:
  1053  000003                     ??_isspace:
  1054  000003                     ??_readAdcValue:
  1055  000003                     Lcd_Cmd@a:
  1056                           	callstack 0
  1057  000003                     Lcd_Write_Char@y:
  1058                           	callstack 0
  1059  000003                     ___wmul@multiplicand:
  1060                           	callstack 0
  1061  000003                     ___awdiv@divisor:
  1062                           	callstack 0
  1063  000003                     ___awmod@divisor:
  1064                           	callstack 0
  1065  000003                     fputc@fp:
  1066                           	callstack 0
  1067  000003                     strcpy@src:
  1068                           	callstack 0
  1069  000003                     strlen@a:
  1070                           	callstack 0
  1071  000003                     strncmp@_r:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x2
  1075  000003                     	ds	1
  1076  000004                     ??_lcd_init:
  1077  000004                     Lcd_Set_Cursor@b:
  1078                           	callstack 0
  1079  000004                     Lcd_Write_Char@a:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x3
  1083  000004                     	ds	1
  1084  000005                     ??_fputc:
  1085  000005                     ??___fpclassifyf:
  1086  000005                     ??_strcpy:
  1087  000005                     readAdcValue@adcChannel:
  1088                           	callstack 0
  1089  000005                     Lcd_Set_Cursor@a:
  1090                           	callstack 0
  1091  000005                     ___awdiv@counter:
  1092                           	callstack 0
  1093  000005                     ___awmod@counter:
  1094                           	callstack 0
  1095  000005                     Lcd_Write_String@a:
  1096                           	callstack 0
  1097  000005                     ___wmul@product:
  1098                           	callstack 0
  1099  000005                     strncmp@n:
  1100                           	callstack 0
  1101  000005                     ___lmul@multiplicand:
  1102                           	callstack 0
  1103  000005                     ___lldiv@divisor:
  1104                           	callstack 0
  1105  000005                     ___fleq@ff2:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x4
  1109  000005                     	ds	1
  1110  000006                     Lcd_Set_Cursor@z:
  1111                           	callstack 0
  1112  000006                     ___awdiv@sign:
  1113                           	callstack 0
  1114  000006                     ___awmod@sign:
  1115                           	callstack 0
  1116  000006                     readAdcValue@adcValue:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x5
  1120  000006                     	ds	1
  1121  000007                     ??_strncmp:
  1122  000007                     ??_Lcd_Write_String:
  1123  000007                     ?_tolower:
  1124                           	callstack 0
  1125  000007                     Lcd_Set_Cursor@y:
  1126                           	callstack 0
  1127  000007                     _isspace$3077:
  1128                           	callstack 0
  1129  000007                     ___awdiv@quotient:
  1130                           	callstack 0
  1131  000007                     strcpy@s:
  1132                           	callstack 0
  1133  000007                     tolower@c:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x6
  1137  000007                     	ds	1
  1138  000008                     ?_atoi:
  1139                           	callstack 0
  1140  000008                     Lcd_Set_Cursor@temp:
  1141                           	callstack 0
  1142  000008                     atoi@s:
  1143                           	callstack 0
  1144  000008                     strncmp@l:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x7
  1148  000008                     	ds	1
  1149  000009                     ??_tolower:
  1150  000009                     ??___fleq:
  1151  000009                     Lcd_Write_String@i:
  1152                           	callstack 0
  1153  000009                     ___fpclassifyf@e:
  1154                           	callstack 0
  1155  000009                     strcpy@d:
  1156                           	callstack 0
  1157  000009                     ___lmul@product:
  1158                           	callstack 0
  1159  000009                     ___lldiv@quotient:
  1160                           	callstack 0
  1161  000009                     ___aodiv@divisor:
  1162                           	callstack 0
  1163  000009                     ___aomod@divisor:
  1164                           	callstack 0
  1165                           
  1166                           ; 8 bytes @ 0x8
  1167  000009                     	ds	1
  1168  00000A                     ??_atoi:
  1169  00000A                     fputs@s:
  1170                           	callstack 0
  1171  00000A                     strncmp@r:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x9
  1175  00000A                     	ds	1
  1176  00000B                     ??_openLCD_Script:
  1177  00000B                     ___fpclassifyf@u:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0xA
  1181  00000B                     	ds	1
  1182  00000C                     fputs@fp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0xB
  1186  00000C                     	ds	1
  1187  00000D                     ___lldiv@counter:
  1188                           	callstack 0
  1189  00000D                     _tolower$3141:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0xC
  1193  00000D                     	ds	1
  1194  00000E                     ?___xxtofl:
  1195                           	callstack 0
  1196  00000E                     fputs@c:
  1197                           	callstack 0
  1198  00000E                     atoi@neg:
  1199                           	callstack 0
  1200  00000E                     ___xxtofl@val:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0xD
  1204  00000E                     	ds	1
  1205  00000F                     fputs@i:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0xE
  1209  00000F                     	ds	1
  1210  000010                     _atoi$3046:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0xF
  1214  000010                     	ds	1
  1215  000011                     ?_pad:
  1216                           	callstack 0
  1217  000011                     ___aodiv@counter:
  1218                           	callstack 0
  1219  000011                     ___aomod@counter:
  1220                           	callstack 0
  1221  000011                     pad@fp:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x10
  1225  000011                     	ds	1
  1226  000012                     ??___xxtofl:
  1227  000012                     ___aodiv@sign:
  1228                           	callstack 0
  1229  000012                     ___aomod@sign:
  1230                           	callstack 0
  1231  000012                     _atoi$3048:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x11
  1235  000012                     	ds	1
  1236  000013                     ?_abs:
  1237                           	callstack 0
  1238  000013                     pad@buf:
  1239                           	callstack 0
  1240  000013                     abs@a:
  1241                           	callstack 0
  1242  000013                     ___aodiv@quotient:
  1243                           	callstack 0
  1244                           
  1245                           ; 8 bytes @ 0x12
  1246  000013                     	ds	1
  1247  000014                     _atoi$3047:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0x13
  1251  000014                     	ds	1
  1252  000015                     ??_abs:
  1253  000015                     pad@p:
  1254                           	callstack 0
  1255  000015                     atoi@n:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x14
  1259  000015                     	ds	1
  1260  000016                     ___xxtofl@sign:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x15
  1264  000016                     	ds	1
  1265  000017                     ??_pad:
  1266  000017                     ___xxtofl@exp:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x16
  1270  000017                     	ds	1
  1271  000018                     pad@i:
  1272                           	callstack 0
  1273  000018                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x17
  1277  000018                     	ds	2
  1278  00001A                     pad@w:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x19
  1282  00001A                     	ds	2
  1283  00001C                     ??_calculatedAverageValue:
  1284  00001C                     ?_dtoa:
  1285                           	callstack 0
  1286  00001C                     ?_fabsf:
  1287                           	callstack 0
  1288  00001C                     ?___flmul:
  1289                           	callstack 0
  1290  00001C                     dtoa@fp:
  1291                           	callstack 0
  1292  00001C                     ___flmul@b:
  1293                           	callstack 0
  1294  00001C                     fabsf@x:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x1B
  1298  00001C                     	ds	2
  1299  00001E                     dtoa@d:
  1300                           	callstack 0
  1301                           
  1302                           ; 8 bytes @ 0x1D
  1303  00001E                     	ds	2
  1304  000020                     ___flmul@a:
  1305                           	callstack 0
  1306  000020                     fabsf@u:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x1F
  1310  000020                     	ds	4
  1311  000024                     ??___flmul:
  1312                           
  1313                           ; 1 bytes @ 0x23
  1314  000024                     	ds	2
  1315  000026                     ??_dtoa:
  1316                           
  1317                           ; 1 bytes @ 0x25
  1318  000026                     	ds	2
  1319  000028                     ___flmul@sign:
  1320                           	callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x27
  1323  000028                     	ds	1
  1324  000029                     ___flmul@grs:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x28
  1328  000029                     	ds	4
  1329  00002D                     ___flmul@aexp:
  1330                           	callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x2C
  1333  00002D                     	ds	1
  1334  00002E                     ___flmul@bexp:
  1335                           	callstack 0
  1336  00002E                     _dtoa$2955:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x2D
  1340  00002E                     	ds	1
  1341  00002F                     ___flmul@prod:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x2E
  1345  00002F                     	ds	1
  1346  000030                     dtoa@p:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x2F
  1350  000030                     	ds	2
  1351  000032                     dtoa@w:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x31
  1355  000032                     	ds	1
  1356  000033                     ___flmul@temp:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x32
  1360  000033                     	ds	1
  1361  000034                     dtoa@s:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x33
  1365  000034                     	ds	1
  1366  000035                     ?___fladd:
  1367                           	callstack 0
  1368  000035                     ?___fldiv:
  1369                           	callstack 0
  1370  000035                     ___flge@ff1:
  1371                           	callstack 0
  1372  000035                     ___fladd@b:
  1373                           	callstack 0
  1374  000035                     ___fldiv@b:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x34
  1378  000035                     	ds	1
  1379  000036                     dtoa@n:
  1380                           	callstack 0
  1381                           
  1382                           ; 8 bytes @ 0x35
  1383  000036                     	ds	3
  1384  000039                     ___flge@ff2:
  1385                           	callstack 0
  1386  000039                     ___fladd@a:
  1387                           	callstack 0
  1388  000039                     ___fldiv@a:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x38
  1392  000039                     	ds	4
  1393  00003D                     ??___fladd:
  1394  00003D                     ??___fldiv:
  1395  00003D                     ??___flge:
  1396                           
  1397                           ; 1 bytes @ 0x3C
  1398  00003D                     	ds	1
  1399  00003E                     dtoa@i:
  1400                           	callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x3D
  1403  00003E                     	ds	3
  1404  000041                     ___fladd@signs:
  1405                           	callstack 0
  1406  000041                     ___fldiv@rem:
  1407                           	callstack 0
  1408                           
  1409                           ; 4 bytes @ 0x40
  1410  000041                     	ds	1
  1411  000042                     ___fladd@aexp:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x41
  1415  000042                     	ds	1
  1416  000043                     ___fladd@bexp:
  1417                           	callstack 0
  1418                           
  1419                           ; 1 bytes @ 0x42
  1420  000043                     	ds	1
  1421  000044                     ___fladd@grs:
  1422                           	callstack 0
  1423                           
  1424                           ; 1 bytes @ 0x43
  1425  000044                     	ds	1
  1426  000045                     ?___flsub:
  1427                           	callstack 0
  1428  000045                     ___fldiv@sign:
  1429                           	callstack 0
  1430  000045                     ___flsub@b:
  1431                           	callstack 0
  1432                           
  1433                           ; 4 bytes @ 0x44
  1434  000045                     	ds	1
  1435  000046                     ___fldiv@new_exp:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x45
  1439  000046                     	ds	2
  1440  000048                     ___fldiv@grs:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x47
  1444  000048                     	ds	1
  1445  000049                     ___flsub@a:
  1446                           	callstack 0
  1447                           
  1448                           ; 4 bytes @ 0x48
  1449  000049                     	ds	3
  1450  00004C                     ___fldiv@bexp:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x4B
  1454  00004C                     	ds	1
  1455  00004D                     ___fldiv@aexp:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x4C
  1459  00004D                     	ds	1
  1460  00004E                     ?_floorf:
  1461                           	callstack 0
  1462  00004E                     ?___fltol:
  1463                           	callstack 0
  1464  00004E                     ___fltol@f1:
  1465                           	callstack 0
  1466  00004E                     floorf@x:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x4D
  1470  00004E                     	ds	4
  1471  000052                     ??_floorf:
  1472  000052                     ??___fltol:
  1473                           
  1474                           ; 1 bytes @ 0x51
  1475  000052                     	ds	4
  1476  000056                     ___fltol@sign1:
  1477                           	callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x55
  1480  000056                     	ds	1
  1481  000057                     ___fltol@exp1:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x56
  1485  000057                     	ds	1
  1486  000058                     ??_scanAdcConversion:
  1487  000058                     ?_efgtoa:
  1488                           	callstack 0
  1489  000058                     PWM1_setDC@dutycycle:
  1490                           	callstack 0
  1491  000058                     PWM2_setDC@dutycycle:
  1492                           	callstack 0
  1493  000058                     efgtoa@fp:
  1494                           	callstack 0
  1495  000058                     speedControl@position:
  1496                           	callstack 0
  1497                           
  1498                           ; 4 bytes @ 0x57
  1499  000058                     	ds	2
  1500  00005A                     ??_PWM1_setDC:
  1501  00005A                     ??_PWM2_setDC:
  1502  00005A                     efgtoa@f:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x59
  1506  00005A                     	ds	2
  1507  00005C                     ??_speedControl:
  1508  00005C                     PWM1_setDC@duty:
  1509                           	callstack 0
  1510  00005C                     PWM2_setDC@duty:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x5B
  1514  00005C                     	ds	2
  1515  00005E                     efgtoa@c:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x5D
  1519  00005E                     	ds	1
  1520  00005F                     
  1521                           ; 1 bytes @ 0x5E
  1522 ;;
  1523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1524 ;;
  1525 ;; *************** function _main *****************
  1526 ;; Defined at:
  1527 ;;		line 40 in file "fs_main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1541 ;;      Params:         0       0       0       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0
  1544 ;;      Totals:         0       0       0       0       0       0       0
  1545 ;;Total ram usage:        0 bytes
  1546 ;; Hardware stack levels required when called:   12
  1547 ;; This function calls:
  1548 ;;		_Lcd_Clear
  1549 ;;		_PWM1_setDC
  1550 ;;		_PWM2_setDC
  1551 ;;		_PWM_Init
  1552 ;;		_adcInit
  1553 ;;		_lcd_init
  1554 ;;		_mcu_init
  1555 ;;		_menuControl
  1556 ;;		_menuInitialize
  1557 ;;		_openLCD_Script
  1558 ;;		_system_init
  1559 ;;		_timer_0_init
  1560 ;; This function is called by:
  1561 ;;		Startup code after reset
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text0
  1566  0045AE                     __ptext0:
  1567                           	callstack 0
  1568  0045AE                     _main:
  1569                           	callstack 19
  1570  0045AE                     
  1571                           ;fs_main.c: 42:     mcu_init();
  1572  0045AE  ECBE  F02B         	call	_mcu_init	;wreg free
  1573  0045B2                     
  1574                           ;fs_main.c: 43:     menuInitialize();
  1575  0045B2  EC58  F02B         	call	_menuInitialize	;wreg free
  1576  0045B6                     
  1577                           ;fs_main.c: 45:     adcInit();
  1578  0045B6  EC44  F02A         	call	_adcInit	;wreg free
  1579  0045BA                     
  1580                           ;fs_main.c: 47:     timer_0_init();
  1581  0045BA  ECC9  F02B         	call	_timer_0_init	;wreg free
  1582  0045BE                     
  1583                           ;fs_main.c: 48:     lcd_init();
  1584  0045BE  EC96  F026         	call	_lcd_init	;wreg free
  1585  0045C2                     
  1586                           ;fs_main.c: 49:     system_init();
  1587  0045C2  ECBD  F01F         	call	_system_init	;wreg free
  1588  0045C6                     
  1589                           ;fs_main.c: 50:     Lcd_Clear();
  1590  0045C6  ECD2  F02B         	call	_Lcd_Clear	;wreg free
  1591  0045CA                     
  1592                           ;fs_main.c: 52:     PWM_Init();
  1593  0045CA  EC6C  F02B         	call	_PWM_Init	;wreg free
  1594  0045CE                     
  1595                           ;fs_main.c: 53:     PWM1_setDC(0);
  1596  0045CE  0E00               	movlw	0
  1597  0045D0  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1598  0045D2  0E00               	movlw	0
  1599  0045D4  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1600  0045D6  EC5D  F027         	call	_PWM1_setDC	;wreg free
  1601  0045DA                     
  1602                           ;fs_main.c: 54:     PWM2_setDC(0);
  1603  0045DA  0E00               	movlw	0
  1604  0045DC  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1605  0045DE  0E00               	movlw	0
  1606  0045E0  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1607  0045E2  EC20  F027         	call	_PWM2_setDC	;wreg free
  1608  0045E6                     
  1609                           ;fs_main.c: 55:     openLCD_Script();
  1610  0045E6  EC79  F029         	call	_openLCD_Script	;wreg free
  1611  0045EA                     l6490:
  1612                           
  1613                           ;fs_main.c: 58: {;fs_main.c: 59:     if (timer_counter_flag.one_second_flag == 1)
  1614  0045EA  0100               	movlb	0	; () banked
  1615  0045EC  A1FA               	btfss	_timer_counter_flag& (0+255),0,b
  1616  0045EE  EFFB  F022         	goto	u7841
  1617  0045F2  EFFD  F022         	goto	u7840
  1618  0045F6                     u7841:
  1619  0045F6  EF3C  F023         	goto	l6516
  1620  0045FA                     u7840:
  1621  0045FA                     
  1622                           ; BSR set to: 0
  1623                           ;fs_main.c: 60:     {;fs_main.c: 61:         timer_counter_flag.one_second_flag = 0;
  1624  0045FA  91FA               	bcf	_timer_counter_flag& (0+255),0,b
  1625  0045FC                     
  1626                           ; BSR set to: 0
  1627                           ;fs_main.c: 63:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1628  0045FC  05FE               	decf	_startIsClick& (0+255),w,b
  1629  0045FE  A4D8               	btfss	status,2,c
  1630  004600  EF04  F023         	goto	u7851
  1631  004604  EF06  F023         	goto	u7850
  1632  004608                     u7851:
  1633  004608  EF3C  F023         	goto	l6516
  1634  00460C                     u7850:
  1635  00460C                     
  1636                           ; BSR set to: 0
  1637  00460C  51FF               	movf	_pauseIsClick& (0+255),w,b
  1638  00460E  A4D8               	btfss	status,2,c
  1639  004610  EF0C  F023         	goto	u7861
  1640  004614  EF0E  F023         	goto	u7860
  1641  004618                     u7861:
  1642  004618  EF3C  F023         	goto	l6516
  1643  00461C                     u7860:
  1644  00461C                     
  1645                           ; BSR set to: 0
  1646  00461C  51FD               	movf	_stopIsClick& (0+255),w,b
  1647  00461E  A4D8               	btfss	status,2,c
  1648  004620  EF14  F023         	goto	u7871
  1649  004624  EF16  F023         	goto	u7870
  1650  004628                     u7871:
  1651  004628  EF3C  F023         	goto	l6516
  1652  00462C                     u7870:
  1653  00462C                     
  1654                           ; BSR set to: 0
  1655  00462C  51FB               	movf	_menu_selected& (0+255),w,b
  1656  00462E  A4D8               	btfss	status,2,c
  1657  004630  EF1C  F023         	goto	u7881
  1658  004634  EF1E  F023         	goto	u7880
  1659  004638                     u7881:
  1660  004638  EF3C  F023         	goto	l6516
  1661  00463C                     u7880:
  1662  00463C                     
  1663                           ; BSR set to: 0
  1664                           ;fs_main.c: 64:         {;fs_main.c: 65:             timer_value.second++;
  1665  00463C  0101               	movlb	1	; () banked
  1666  00463E  2B8F               	incf	_timer_value& (0+255),f,b
  1667  004640                     
  1668                           ; BSR set to: 1
  1669                           ;fs_main.c: 66:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1670  004640  518F               	movf	_timer_value& (0+255),w,b
  1671  004642  083C               	sublw	60
  1672  004644  6F91               	movwf	(_timer_value+2)& (0+255),b
  1673  004646                     
  1674                           ; BSR set to: 1
  1675                           ;fs_main.c: 68:             if (timer_value.remainingSecond == 59 )
  1676  004646  0E3B               	movlw	59
  1677  004648  1991               	xorwf	(_timer_value+2)& (0+255),w,b
  1678  00464A  A4D8               	btfss	status,2,c
  1679  00464C  EF2A  F023         	goto	u7891
  1680  004650  EF2C  F023         	goto	u7890
  1681  004654                     u7891:
  1682  004654  EF32  F023         	goto	l6512
  1683  004658                     u7890:
  1684  004658                     
  1685                           ; BSR set to: 1
  1686                           ;fs_main.c: 69:             {;fs_main.c: 70:                 timer_value.minute++;
  1687  004658  2B90               	incf	(_timer_value+1)& (0+255),f,b
  1688  00465A                     
  1689                           ; BSR set to: 1
  1690                           ;fs_main.c: 71:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1691  00465A  5190               	movf	(_timer_value+1)& (0+255),w,b
  1692  00465C  0100               	movlb	0	; () banked
  1693  00465E  5DF3               	subwf	_menu_value& (0+255),w,b
  1694  004660  0101               	movlb	1	; () banked
  1695  004662  6F92               	movwf	(_timer_value+3)& (0+255),b
  1696  004664                     l6512:
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;fs_main.c: 74:             if (timer_value.second > 59)
  1700  004664  0E3B               	movlw	59
  1701  004666  658F               	cpfsgt	_timer_value& (0+255),b
  1702  004668  EF38  F023         	goto	u7901
  1703  00466C  EF3A  F023         	goto	u7900
  1704  004670                     u7901:
  1705  004670  EF3C  F023         	goto	l6516
  1706  004674                     u7900:
  1707  004674                     
  1708                           ; BSR set to: 1
  1709                           ;fs_main.c: 75:             {;fs_main.c: 76:                 timer_value.second = 0;
  1710  004674  0E00               	movlw	0
  1711  004676  6F8F               	movwf	_timer_value& (0+255),b
  1712  004678                     l6516:
  1713                           
  1714                           ;fs_main.c: 81:     menuControl();
  1715  004678  EC9A  F027         	call	_menuControl	;wreg free
  1716  00467C  EFF5  F022         	goto	l6490
  1717  004680  EF4D  F000         	goto	start
  1718  004684                     __end_of_main:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _timer_0_init *****************
  1722 ;; Defined at:
  1723 ;;		line 72 in file "fs_timer.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1737 ;;      Params:         0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text1
  1752  005792                     __ptext1:
  1753                           	callstack 0
  1754  005792                     _timer_0_init:
  1755                           	callstack 29
  1756  005792                     
  1757                           ;fs_timer.c: 74:   T0CON = 0x81;
  1758  005792  0E81               	movlw	129
  1759  005794  6ED5               	movwf	213,c	;volatile
  1760                           
  1761                           ;fs_timer.c: 75:   TMR0H = 0x63;
  1762  005796  0E63               	movlw	99
  1763  005798  6ED7               	movwf	215,c	;volatile
  1764                           
  1765                           ;fs_timer.c: 76:   TMR0L = 0xC0;
  1766  00579A  0EC0               	movlw	192
  1767  00579C  6ED6               	movwf	214,c	;volatile
  1768  00579E                     
  1769                           ;fs_timer.c: 77:   INTCONbits.GIE = 1;
  1770  00579E  8EF2               	bsf	242,7,c	;volatile
  1771  0057A0                     
  1772                           ;fs_timer.c: 78:   INTCONbits.TMR0IE = 1;
  1773  0057A0  8AF2               	bsf	242,5,c	;volatile
  1774  0057A2  0012               	return		;funcret
  1775  0057A4                     __end_of_timer_0_init:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _system_init *****************
  1779 ;; Defined at:
  1780 ;;		line 51 in file "fs_mcu.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1794 ;;      Params:         0       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0
  1796 ;;      Temps:          2       0       0       0       0       0       0
  1797 ;;      Totals:         2       0       0       0       0       0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    2
  1801 ;; This function calls:
  1802 ;;		_eepromRead
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text2
  1809  003F7A                     __ptext2:
  1810                           	callstack 0
  1811  003F7A                     _system_init:
  1812                           	callstack 28
  1813  003F7A                     
  1814                           ;fs_mcu.c: 53:     driver_limit.pay = 0;
  1815  003F7A  0E00               	movlw	0
  1816  003F7C  0101               	movlb	1	; () banked
  1817  003F7E  6F83               	movwf	_driver_limit& (0+255),b
  1818  003F80  0E00               	movlw	0
  1819  003F82  6F84               	movwf	(_driver_limit+1)& (0+255),b
  1820  003F84  0E00               	movlw	0
  1821  003F86  6F85               	movwf	(_driver_limit+2)& (0+255),b
  1822  003F88  0E00               	movlw	0
  1823  003F8A  6F86               	movwf	(_driver_limit+3)& (0+255),b
  1824                           
  1825                           ;fs_mcu.c: 54:     driver_limit.payda = 0;
  1826  003F8C  0E00               	movlw	0
  1827  003F8E  6F87               	movwf	(_driver_limit+4)& (0+255),b
  1828  003F90  0E00               	movlw	0
  1829  003F92  6F88               	movwf	(_driver_limit+5)& (0+255),b
  1830  003F94  0E00               	movlw	0
  1831  003F96  6F89               	movwf	(_driver_limit+6)& (0+255),b
  1832  003F98  0E00               	movlw	0
  1833  003F9A  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  1834                           
  1835                           ;fs_mcu.c: 55:     driver_limit.ortalama = 0;
  1836  003F9C  0E00               	movlw	0
  1837  003F9E  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  1838  003FA0  0E00               	movlw	0
  1839  003FA2  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  1840  003FA4  0E00               	movlw	0
  1841  003FA6  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  1842  003FA8  0E00               	movlw	0
  1843  003FAA  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  1844                           
  1845                           ;fs_mcu.c: 56:     convert_data.convert_channel_0 = 0;
  1846  003FAC  0E00               	movlw	0
  1847  003FAE  6F00               	movwf	_convert_data& (0+255),b
  1848  003FB0  0E00               	movlw	0
  1849  003FB2  6F01               	movwf	(_convert_data+1)& (0+255),b
  1850  003FB4  0E00               	movlw	0
  1851  003FB6  6F02               	movwf	(_convert_data+2)& (0+255),b
  1852  003FB8  0E00               	movlw	0
  1853  003FBA  6F03               	movwf	(_convert_data+3)& (0+255),b
  1854                           
  1855                           ;fs_mcu.c: 57:     convert_data.convert_channel_1 = 0;
  1856  003FBC  0E00               	movlw	0
  1857  003FBE  6F04               	movwf	(_convert_data+4)& (0+255),b
  1858  003FC0  0E00               	movlw	0
  1859  003FC2  6F05               	movwf	(_convert_data+5)& (0+255),b
  1860  003FC4  0E00               	movlw	0
  1861  003FC6  6F06               	movwf	(_convert_data+6)& (0+255),b
  1862  003FC8  0E00               	movlw	0
  1863  003FCA  6F07               	movwf	(_convert_data+7)& (0+255),b
  1864                           
  1865                           ;fs_mcu.c: 58:     convert_data.convert_channel_2 = 0;
  1866  003FCC  0E00               	movlw	0
  1867  003FCE  6F08               	movwf	(_convert_data+8)& (0+255),b
  1868  003FD0  0E00               	movlw	0
  1869  003FD2  6F09               	movwf	(_convert_data+9)& (0+255),b
  1870  003FD4  0E00               	movlw	0
  1871  003FD6  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1872  003FD8  0E00               	movlw	0
  1873  003FDA  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1874                           
  1875                           ;fs_mcu.c: 59:     convert_data.convert_channel_3 = 0;
  1876  003FDC  0E00               	movlw	0
  1877  003FDE  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1878  003FE0  0E00               	movlw	0
  1879  003FE2  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1880  003FE4  0E00               	movlw	0
  1881  003FE6  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1882  003FE8  0E00               	movlw	0
  1883  003FEA  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1884                           
  1885                           ;fs_mcu.c: 60:     convert_data.convert_channel_4 = 0;
  1886  003FEC  0E00               	movlw	0
  1887  003FEE  6F10               	movwf	(_convert_data+16)& (0+255),b
  1888  003FF0  0E00               	movlw	0
  1889  003FF2  6F11               	movwf	(_convert_data+17)& (0+255),b
  1890  003FF4  0E00               	movlw	0
  1891  003FF6  6F12               	movwf	(_convert_data+18)& (0+255),b
  1892  003FF8  0E00               	movlw	0
  1893  003FFA  6F13               	movwf	(_convert_data+19)& (0+255),b
  1894                           
  1895                           ;fs_mcu.c: 61:     convert_data.convert_channel_5 = 0;
  1896  003FFC  0E00               	movlw	0
  1897  003FFE  6F14               	movwf	(_convert_data+20)& (0+255),b
  1898  004000  0E00               	movlw	0
  1899  004002  6F15               	movwf	(_convert_data+21)& (0+255),b
  1900  004004  0E00               	movlw	0
  1901  004006  6F16               	movwf	(_convert_data+22)& (0+255),b
  1902  004008  0E00               	movlw	0
  1903  00400A  6F17               	movwf	(_convert_data+23)& (0+255),b
  1904                           
  1905                           ;fs_mcu.c: 62:     convert_data.convert_channel_6 = 0;
  1906  00400C  0E00               	movlw	0
  1907  00400E  6F18               	movwf	(_convert_data+24)& (0+255),b
  1908  004010  0E00               	movlw	0
  1909  004012  6F19               	movwf	(_convert_data+25)& (0+255),b
  1910  004014  0E00               	movlw	0
  1911  004016  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1912  004018  0E00               	movlw	0
  1913  00401A  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1914                           
  1915                           ;fs_mcu.c: 63:     convert_data.convert_channel_7 = 0;
  1916  00401C  0E00               	movlw	0
  1917  00401E  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1918  004020  0E00               	movlw	0
  1919  004022  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1920  004024  0E00               	movlw	0
  1921  004026  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1922  004028  0E00               	movlw	0
  1923  00402A  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1924                           
  1925                           ;fs_mcu.c: 64:     controller.leftMotorSpeed = 0;
  1926  00402C  0E00               	movlw	0
  1927  00402E  6F57               	movwf	(_controller+7)& (0+255),b
  1928  004030  0E00               	movlw	0
  1929  004032  6F56               	movwf	(_controller+6)& (0+255),b
  1930                           
  1931                           ;fs_mcu.c: 65:     controller.rightMotorSpeed = 0;
  1932  004034  0E00               	movlw	0
  1933  004036  6F59               	movwf	(_controller+9)& (0+255),b
  1934  004038  0E00               	movlw	0
  1935  00403A  6F58               	movwf	(_controller+8)& (0+255),b
  1936                           
  1937                           ;fs_mcu.c: 66:     timer_value.adc_conversion_time = 0;
  1938  00403C  0E00               	movlw	0
  1939  00403E  6F94               	movwf	(_timer_value+5)& (0+255),b
  1940                           
  1941                           ;fs_mcu.c: 67:     controller.error = 0;
  1942  004040  0E00               	movlw	0
  1943  004042  6F51               	movwf	(_controller+1)& (0+255),b
  1944  004044  0E00               	movlw	0
  1945  004046  6F50               	movwf	_controller& (0+255),b
  1946                           
  1947                           ;fs_mcu.c: 69:     button_bounce_controller.menu = 0;
  1948  004048  0E00               	movlw	0
  1949  00404A  6F9D               	movwf	_button_bounce_controller& (0+255),b
  1950                           
  1951                           ;fs_mcu.c: 70:     button_bounce_controller.pause = 0;
  1952  00404C  0E00               	movlw	0
  1953  00404E  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
  1954                           
  1955                           ;fs_mcu.c: 71:     button_bounce_controller.start = 0;
  1956  004050  0E00               	movlw	0
  1957  004052  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
  1958                           
  1959                           ;fs_mcu.c: 72:     button_bounce_controller.stop = 0;
  1960  004054  0E00               	movlw	0
  1961  004056  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
  1962  004058                     
  1963                           ; BSR set to: 1
  1964                           ;fs_mcu.c: 73:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1965  004058  0E00               	movlw	0
  1966  00405A  EC93  F02B         	call	_eepromRead
  1967  00405E  0100               	movlb	0	; () banked
  1968  004060  6FF3               	movwf	_menu_value& (0+255),b
  1969  004062                     
  1970                           ; BSR set to: 0
  1971                           ;fs_mcu.c: 74:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1972  004062  0E01               	movlw	1
  1973  004064  EC93  F02B         	call	_eepromRead
  1974  004068  0100               	movlb	0	; () banked
  1975  00406A  6FF4               	movwf	(_menu_value+1)& (0+255),b
  1976  00406C                     
  1977                           ; BSR set to: 0
  1978                           ;fs_mcu.c: 75:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1979  00406C  0E02               	movlw	2
  1980  00406E  EC93  F02B         	call	_eepromRead
  1981  004072  0100               	movlb	0	; () banked
  1982  004074  6FF5               	movwf	(_menu_value+2)& (0+255),b
  1983  004076                     
  1984                           ; BSR set to: 0
  1985                           ;fs_mcu.c: 77:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1986  004076  0E39               	movlw	57
  1987  004078  6E03               	movwf	(??_system_init+1)^0,c
  1988  00407A  0ED2               	movlw	210
  1989  00407C  6E02               	movwf	??_system_init^0,c
  1990  00407E  0E4C               	movlw	76
  1991  004080                     u7977:
  1992  004080  2EE8               	decfsz	wreg,f,c
  1993  004082  D7FE               	bra	u7977
  1994  004084  2E02               	decfsz	??_system_init^0,f,c
  1995  004086  D7FC               	bra	u7977
  1996  004088  2E03               	decfsz	(??_system_init+1)^0,f,c
  1997  00408A  D7FA               	bra	u7977
  1998  00408C  D000               	nop2	
  1999  00408E                     
  2000                           ;fs_mcu.c: 78:     timer_value.remainingMinute = menu_value.driver_time;
  2001  00408E  C0F3  F192         	movff	_menu_value,_timer_value+3
  2002  004092                     
  2003                           ;fs_mcu.c: 79:     timer_value.remainingSecond = 0;
  2004  004092  0E00               	movlw	0
  2005  004094  0101               	movlb	1	; () banked
  2006  004096  6F91               	movwf	(_timer_value+2)& (0+255),b
  2007  004098                     
  2008                           ; BSR set to: 1
  2009  004098  0012               	return		;funcret
  2010  00409A                     __end_of_system_init:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _eepromRead *****************
  2014 ;; Defined at:
  2015 ;;		line 36 in file "fs_eeprom.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  address         1    wreg     unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  address         1    0[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2029 ;;      Params:         0       0       0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0
  2032 ;;      Totals:         1       0       0       0       0       0       0
  2033 ;;Total ram usage:        1 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_system_init
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text3
  2044  005726                     __ptext3:
  2045                           	callstack 0
  2046  005726                     _eepromRead:
  2047                           	callstack 28
  2048                           
  2049                           ; BSR set to: 1
  2050                           ;incstack = 0
  2051                           ;eepromRead@address stored from wreg
  2052  005726  6E01               	movwf	eepromRead@address^0,c
  2053  005728                     
  2054                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 48
      +                          :     EEADR = (uint8_t)address;
  2055  005728  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  2056  00572C                     
  2057                           ;fs_eeprom.c: 50:     EECON1bits.EEPGD = 0;
  2058  00572C  9EA6               	bcf	166,7,c	;volsfr
  2059  00572E                     
  2060                           ;fs_eeprom.c: 51:     EECON1bits.CFGS = 0;
  2061  00572E  9CA6               	bcf	166,6,c	;volsfr
  2062  005730                     
  2063                           ;fs_eeprom.c: 52:     EECON1bits.RD = 1;
  2064  005730  80A6               	bsf	166,0,c	;volsfr
  2065  005732                     l92:
  2066  005732  B0A6               	btfsc	166,0,c	;volsfr
  2067  005734  EF9E  F02B         	goto	u7551
  2068  005738  EFA0  F02B         	goto	u7550
  2069  00573C                     u7551:
  2070  00573C  EF99  F02B         	goto	l92
  2071  005740                     u7550:
  2072  005740                     
  2073                           ;fs_eeprom.c: 58:     return EEDATA;
  2074  005740  50A8               	movf	168,w,c	;volatile
  2075  005742  0012               	return		;funcret
  2076  005744                     __end_of_eepromRead:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _openLCD_Script *****************
  2080 ;; Defined at:
  2081 ;;		line 89 in file "fs_mcu.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2095 ;;      Params:         0       0       0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0
  2097 ;;      Temps:          2       0       0       0       0       0       0
  2098 ;;      Totals:         2       0       0       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    4
  2102 ;; This function calls:
  2103 ;;		_Lcd_Clear
  2104 ;;		_Lcd_Set_Cursor
  2105 ;;		_Lcd_Write_String
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text4
  2112  0052F2                     __ptext4:
  2113                           	callstack 0
  2114  0052F2                     _openLCD_Script:
  2115                           	callstack 26
  2116  0052F2                     
  2117                           ;fs_mcu.c: 91:     Lcd_Set_Cursor(1,1);
  2118  0052F2  0E01               	movlw	1
  2119  0052F4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2120  0052F6  0E01               	movlw	1
  2121  0052F8  EC3F  F028         	call	_Lcd_Set_Cursor
  2122  0052FC                     
  2123                           ;fs_mcu.c: 92:     Lcd_Write_String("   Ergin Oyun  ");
  2124  0052FC  0EB1               	movlw	low STR_1
  2125  0052FE  6E05               	movwf	Lcd_Write_String@a^0,c
  2126  005300  0E7F               	movlw	high STR_1
  2127  005302  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2128  005304  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  2129  005308                     
  2130                           ;fs_mcu.c: 93:     Lcd_Set_Cursor(2,1);
  2131  005308  0E01               	movlw	1
  2132  00530A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2133  00530C  0E02               	movlw	2
  2134  00530E  EC3F  F028         	call	_Lcd_Set_Cursor
  2135                           
  2136                           ;fs_mcu.c: 94:     Lcd_Write_String(" iYi Eglenceler ");
  2137  005312  0E80               	movlw	low STR_2
  2138  005314  6E05               	movwf	Lcd_Write_String@a^0,c
  2139  005316  0E7F               	movlw	high STR_2
  2140  005318  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2141  00531A  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  2142  00531E                     
  2143                           ;fs_mcu.c: 95:     _delay((unsigned long)((2500)*(64000000UL/4000.0)));
  2144  00531E  0ECB               	movlw	203
  2145  005320  6E0C               	movwf	(??_openLCD_Script+1)^0,c
  2146  005322  0EEC               	movlw	236
  2147  005324  6E0B               	movwf	??_openLCD_Script^0,c
  2148  005326  0E84               	movlw	132
  2149  005328                     u7987:
  2150  005328  2EE8               	decfsz	wreg,f,c
  2151  00532A  D7FE               	bra	u7987
  2152  00532C  2E0B               	decfsz	??_openLCD_Script^0,f,c
  2153  00532E  D7FC               	bra	u7987
  2154  005330  2E0C               	decfsz	(??_openLCD_Script+1)^0,f,c
  2155  005332  D7FA               	bra	u7987
  2156  005334  D000               	nop2	
  2157  005336                     
  2158                           ;fs_mcu.c: 96:     Lcd_Clear();
  2159  005336  ECD2  F02B         	call	_Lcd_Clear	;wreg free
  2160  00533A  0012               	return		;funcret
  2161  00533C                     __end_of_openLCD_Script:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _Lcd_Clear *****************
  2165 ;; Defined at:
  2166 ;;		line 48 in file "fs_lcd.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2180 ;;      Params:         0       0       0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		_Lcd_Cmd
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;;		_openLCD_Script
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text5
  2196  0057A4                     __ptext5:
  2197                           	callstack 0
  2198  0057A4                     _Lcd_Clear:
  2199                           	callstack 26
  2200  0057A4                     
  2201                           ;fs_lcd.c: 50:    Lcd_Cmd(0);
  2202  0057A4  0E00               	movlw	0
  2203  0057A6  ECA2  F02B         	call	_Lcd_Cmd
  2204                           
  2205                           ;fs_lcd.c: 51:    Lcd_Cmd(1);
  2206  0057AA  0E01               	movlw	1
  2207  0057AC  ECA2  F02B         	call	_Lcd_Cmd
  2208  0057B0  0012               	return		;funcret
  2209  0057B2                     __end_of_Lcd_Clear:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _menuInitialize *****************
  2213 ;; Defined at:
  2214 ;;		line 35 in file "fs_menu_controller.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		None
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2228 ;;      Params:         0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text6
  2243  0056B0                     __ptext6:
  2244                           	callstack 0
  2245  0056B0                     _menuInitialize:
  2246                           	callstack 29
  2247  0056B0                     
  2248                           ;fs_menu_controller.c: 38:     TRISBbits.RB6 = 1;
  2249  0056B0  8C93               	bsf	147,6,c	;volatile
  2250                           
  2251                           ;fs_menu_controller.c: 41:     TRISBbits.RB7 = 1;
  2252  0056B2  8E93               	bsf	147,7,c	;volatile
  2253                           
  2254                           ;fs_menu_controller.c: 43:     ANSELDbits.ANSD4 = 0;
  2255  0056B4  010F               	movlb	15	; () banked
  2256  0056B6  993B               	bcf	59,4,b	;volatile
  2257                           
  2258                           ;fs_menu_controller.c: 44:     TRISDbits.RD4 = 1;
  2259  0056B8  8895               	bsf	149,4,c	;volatile
  2260                           
  2261                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD0 = 0;
  2262  0056BA  913B               	bcf	59,0,b	;volatile
  2263                           
  2264                           ;fs_menu_controller.c: 47:     TRISDbits.RD0 = 1;
  2265  0056BC  8095               	bsf	149,0,c	;volatile
  2266                           
  2267                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD1 = 0;
  2268  0056BE  933B               	bcf	59,1,b	;volatile
  2269                           
  2270                           ;fs_menu_controller.c: 50:     TRISDbits.RD1 = 1;
  2271  0056C0  8295               	bsf	149,1,c	;volatile
  2272                           
  2273                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD2 = 0;
  2274  0056C2  953B               	bcf	59,2,b	;volatile
  2275                           
  2276                           ;fs_menu_controller.c: 53:     TRISDbits.RD2 = 1;
  2277  0056C4  8495               	bsf	149,2,c	;volatile
  2278                           
  2279                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD3 = 0;
  2280  0056C6  973B               	bcf	59,3,b	;volatile
  2281                           
  2282                           ;fs_menu_controller.c: 56:     TRISDbits.RD3 = 1;
  2283  0056C8  8695               	bsf	149,3,c	;volatile
  2284                           
  2285                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD5 = 0;
  2286  0056CA  9B3B               	bcf	59,5,b	;volatile
  2287                           
  2288                           ;fs_menu_controller.c: 59:     TRISDbits.RD5 = 0;
  2289  0056CC  9A95               	bcf	149,5,c	;volatile
  2290                           
  2291                           ;fs_menu_controller.c: 61:     ANSELCbits.ANSC5 = 0;
  2292  0056CE  9B3A               	bcf	58,5,b	;volatile
  2293                           
  2294                           ;fs_menu_controller.c: 62:     TRISCbits.RC5 = 0;
  2295  0056D0  9A94               	bcf	148,5,c	;volatile
  2296                           
  2297                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC4 = 0;
  2298  0056D2  993A               	bcf	58,4,b	;volatile
  2299                           
  2300                           ;fs_menu_controller.c: 65:     TRISCbits.RC4 = 0;
  2301  0056D4  9894               	bcf	148,4,c	;volatile
  2302  0056D6                     
  2303                           ; BSR set to: 15
  2304  0056D6  0012               	return		;funcret
  2305  0056D8                     __end_of_menuInitialize:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _menuControl *****************
  2309 ;; Defined at:
  2310 ;;		line 159 in file "fs_menu_controller.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:   11
  2331 ;; This function calls:
  2332 ;;		_buttonControlFlags
  2333 ;;		_stateMachine
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text7
  2340  004F34                     __ptext7:
  2341                           	callstack 0
  2342  004F34                     _menuControl:
  2343                           	callstack 19
  2344  004F34                     
  2345                           ;fs_menu_controller.c: 161:     buttonControlFlags();
  2346  004F34  ECE5  F018         	call	_buttonControlFlags	;wreg free
  2347  004F38                     
  2348                           ;fs_menu_controller.c: 162:     stateMachine();
  2349  004F38  EC3E  F025         	call	_stateMachine	;wreg free
  2350  004F3C                     
  2351                           ;fs_menu_controller.c: 164:     if (menu_flags.menu_start_flag == 1)
  2352  004F3C  0101               	movlb	1	; () banked
  2353  004F3E  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2354  004F40  A4D8               	btfss	status,2,c
  2355  004F42  EFA5  F027         	goto	u7811
  2356  004F46  EFA7  F027         	goto	u7810
  2357  004F4A                     u7811:
  2358  004F4A  EFB0  F027         	goto	l6456
  2359  004F4E                     u7810:
  2360  004F4E                     
  2361                           ; BSR set to: 1
  2362                           ;fs_menu_controller.c: 165:     {;fs_menu_controller.c: 166:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2363  004F4E  0E00               	movlw	0
  2364  004F50  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2365                           
  2366                           ;fs_menu_controller.c: 167:         startIsClick = 1;
  2367  004F52  0E01               	movlw	1
  2368  004F54  0100               	movlb	0	; () banked
  2369  004F56  6FFE               	movwf	_startIsClick& (0+255),b
  2370                           
  2371                           ;fs_menu_controller.c: 168:         pauseIsClick = 0;
  2372  004F58  0E00               	movlw	0
  2373  004F5A  6FFF               	movwf	_pauseIsClick& (0+255),b
  2374                           
  2375                           ;fs_menu_controller.c: 169:         stopIsClick = 0;
  2376  004F5C  0E00               	movlw	0
  2377  004F5E  6FFD               	movwf	_stopIsClick& (0+255),b
  2378  004F60                     l6456:
  2379                           
  2380                           ;fs_menu_controller.c: 172:     if (menu_flags.menu_pause_flag == 1)
  2381  004F60  0101               	movlb	1	; () banked
  2382  004F62  059A               	decf	(_menu_flags+3)& (0+255),w,b
  2383  004F64  A4D8               	btfss	status,2,c
  2384  004F66  EFB7  F027         	goto	u7821
  2385  004F6A  EFB9  F027         	goto	u7820
  2386  004F6E                     u7821:
  2387  004F6E  EFC2  F027         	goto	l6460
  2388  004F72                     u7820:
  2389  004F72                     
  2390                           ; BSR set to: 1
  2391                           ;fs_menu_controller.c: 173:     {;fs_menu_controller.c: 174:         menu_flags.menu_pau
      +                          se_flag = 0;
  2392  004F72  0E00               	movlw	0
  2393  004F74  6F9A               	movwf	(_menu_flags+3)& (0+255),b
  2394                           
  2395                           ;fs_menu_controller.c: 175:         pauseIsClick = 1;
  2396  004F76  0E01               	movlw	1
  2397  004F78  0100               	movlb	0	; () banked
  2398  004F7A  6FFF               	movwf	_pauseIsClick& (0+255),b
  2399                           
  2400                           ;fs_menu_controller.c: 176:         startIsClick = 0;
  2401  004F7C  0E00               	movlw	0
  2402  004F7E  6FFE               	movwf	_startIsClick& (0+255),b
  2403                           
  2404                           ;fs_menu_controller.c: 177:         stopIsClick = 0;
  2405  004F80  0E00               	movlw	0
  2406  004F82  6FFD               	movwf	_stopIsClick& (0+255),b
  2407  004F84                     l6460:
  2408                           
  2409                           ;fs_menu_controller.c: 180:     if (menu_flags.menu_stop_flag == 1)
  2410  004F84  0101               	movlb	1	; () banked
  2411  004F86  0599               	decf	(_menu_flags+2)& (0+255),w,b
  2412  004F88  A4D8               	btfss	status,2,c
  2413  004F8A  EFC9  F027         	goto	u7831
  2414  004F8E  EFCB  F027         	goto	u7830
  2415  004F92                     u7831:
  2416  004F92  EFD4  F027         	goto	l428
  2417  004F96                     u7830:
  2418  004F96                     
  2419                           ; BSR set to: 1
  2420                           ;fs_menu_controller.c: 181:     {;fs_menu_controller.c: 182:         menu_flags.menu_sto
      +                          p_flag = 0;
  2421  004F96  0E00               	movlw	0
  2422  004F98  6F99               	movwf	(_menu_flags+2)& (0+255),b
  2423                           
  2424                           ;fs_menu_controller.c: 183:         pauseIsClick = 0;
  2425  004F9A  0E00               	movlw	0
  2426  004F9C  0100               	movlb	0	; () banked
  2427  004F9E  6FFF               	movwf	_pauseIsClick& (0+255),b
  2428                           
  2429                           ;fs_menu_controller.c: 184:         startIsClick = 0;
  2430  004FA0  0E00               	movlw	0
  2431  004FA2  6FFE               	movwf	_startIsClick& (0+255),b
  2432                           
  2433                           ;fs_menu_controller.c: 185:         stopIsClick = 1;
  2434  004FA4  0E01               	movlw	1
  2435  004FA6  6FFD               	movwf	_stopIsClick& (0+255),b
  2436  004FA8                     l428:
  2437  004FA8  0012               	return		;funcret
  2438  004FAA                     __end_of_menuControl:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _stateMachine *****************
  2442 ;; Defined at:
  2443 ;;		line 196 in file "fs_menu_controller.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0
  2459 ;;      Temps:          0       2       0       0       0       0       0
  2460 ;;      Totals:         0       2       0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:   10
  2464 ;; This function calls:
  2465 ;;		_driverTimeSettingMenu
  2466 ;;		_exitLine
  2467 ;;		_mainMenu
  2468 ;;		_pauseMenu
  2469 ;;		_secretMenu
  2470 ;;		_speedLimitSettingMenu
  2471 ;;		_startMenu
  2472 ;;		_stopMenu
  2473 ;;		_stopTimeSettingMenu
  2474 ;; This function is called by:
  2475 ;;		_menuControl
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text8
  2480  004A7C                     __ptext8:
  2481                           	callstack 0
  2482  004A7C                     _stateMachine:
  2483                           	callstack 19
  2484  004A7C                     
  2485                           ;fs_menu_controller.c: 198:     switch (menu_selected)
  2486  004A7C  EF64  F025         	goto	l6364
  2487  004A80                     l6344:
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;fs_menu_controller.c: 201:             mainMenu();
  2491  004A80  EC84  F01B         	call	_mainMenu	;wreg free
  2492                           
  2493                           ;fs_menu_controller.c: 202:         break;
  2494  004A84  EF96  F025         	goto	l442
  2495  004A88                     l6346:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;fs_menu_controller.c: 205:             driverTimeSettingMenu();
  2499  004A88  EC29  F01F         	call	_driverTimeSettingMenu	;wreg free
  2500                           
  2501                           ;fs_menu_controller.c: 206:         break;
  2502  004A8C  EF96  F025         	goto	l442
  2503  004A90                     l6348:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;fs_menu_controller.c: 209:             stopTimeSettingMenu();
  2507  004A90  EC4D  F020         	call	_stopTimeSettingMenu	;wreg free
  2508                           
  2509                           ;fs_menu_controller.c: 210:         break;
  2510  004A94  EF96  F025         	goto	l442
  2511  004A98                     l6350:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;fs_menu_controller.c: 213:             speedLimitSettingMenu();
  2515  004A98  EC54  F021         	call	_speedLimitSettingMenu	;wreg free
  2516                           
  2517                           ;fs_menu_controller.c: 214:         break;
  2518  004A9C  EF96  F025         	goto	l442
  2519  004AA0                     l6352:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;fs_menu_controller.c: 217:             stopMenu();
  2523  004AA0  ECAD  F023         	call	_stopMenu	;wreg free
  2524                           
  2525                           ;fs_menu_controller.c: 218:         break;
  2526  004AA4  EF96  F025         	goto	l442
  2527  004AA8                     l6354:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;fs_menu_controller.c: 221:             startMenu();
  2531  004AA8  ECB1  F02B         	call	_startMenu	;wreg free
  2532                           
  2533                           ;fs_menu_controller.c: 222:         break;
  2534  004AAC  EF96  F025         	goto	l442
  2535  004AB0                     l6356:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;fs_menu_controller.c: 225:             pauseMenu();
  2539  004AB0  EC8E  F01E         	call	_pauseMenu	;wreg free
  2540                           
  2541                           ;fs_menu_controller.c: 226:         break;
  2542  004AB4  EF96  F025         	goto	l442
  2543  004AB8                     l6358:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;fs_menu_controller.c: 229:             exitLine();
  2547  004AB8  ECD9  F02B         	call	_exitLine	;wreg free
  2548                           
  2549                           ;fs_menu_controller.c: 230:         break;
  2550  004ABC  EF96  F025         	goto	l442
  2551  004AC0                     l6360:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;fs_menu_controller.c: 233:             secretMenu();
  2555  004AC0  EC70  F016         	call	_secretMenu	;wreg free
  2556                           
  2557                           ;fs_menu_controller.c: 234:         break;
  2558  004AC4  EF96  F025         	goto	l442
  2559  004AC8                     l6364:
  2560  004AC8  0100               	movlb	0	; () banked
  2561  004ACA  51FB               	movf	_menu_selected& (0+255),w,b
  2562  004ACC  6FF1               	movwf	??_stateMachine& (0+255),b
  2563  004ACE  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  004AD0  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  2573  004AD2  0A00               	xorlw	0	; case 0
  2574  004AD4  B4D8               	btfsc	status,2,c
  2575  004AD6  EF6F  F025         	goto	l6616
  2576  004ADA  EF96  F025         	goto	l442
  2577  004ADE                     l6616:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 9, Range of values is 0 to 8
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte           28    15 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  004ADE  51F1               	movf	??_stateMachine& (0+255),w,b
  2587  004AE0  0A00               	xorlw	0	; case 0
  2588  004AE2  B4D8               	btfsc	status,2,c
  2589  004AE4  EF40  F025         	goto	l6344
  2590  004AE8  0A01               	xorlw	1	; case 1
  2591  004AEA  B4D8               	btfsc	status,2,c
  2592  004AEC  EF44  F025         	goto	l6346
  2593  004AF0  0A03               	xorlw	3	; case 2
  2594  004AF2  B4D8               	btfsc	status,2,c
  2595  004AF4  EF48  F025         	goto	l6348
  2596  004AF8  0A01               	xorlw	1	; case 3
  2597  004AFA  B4D8               	btfsc	status,2,c
  2598  004AFC  EF4C  F025         	goto	l6350
  2599  004B00  0A07               	xorlw	7	; case 4
  2600  004B02  B4D8               	btfsc	status,2,c
  2601  004B04  EF50  F025         	goto	l6352
  2602  004B08  0A01               	xorlw	1	; case 5
  2603  004B0A  B4D8               	btfsc	status,2,c
  2604  004B0C  EF54  F025         	goto	l6354
  2605  004B10  0A03               	xorlw	3	; case 6
  2606  004B12  B4D8               	btfsc	status,2,c
  2607  004B14  EF58  F025         	goto	l6356
  2608  004B18  0A01               	xorlw	1	; case 7
  2609  004B1A  B4D8               	btfsc	status,2,c
  2610  004B1C  EF5C  F025         	goto	l6358
  2611  004B20  0A0F               	xorlw	15	; case 8
  2612  004B22  B4D8               	btfsc	status,2,c
  2613  004B24  EF60  F025         	goto	l6360
  2614  004B28  EF96  F025         	goto	l442
  2615  004B2C                     l442:
  2616  004B2C  0012               	return		;funcret
  2617  004B2E                     __end_of_stateMachine:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _stopTimeSettingMenu *****************
  2621 ;; Defined at:
  2622 ;;		line 531 in file "fs_menu_controller.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2636 ;;      Params:         0       0       0       0       0       0       0
  2637 ;;      Locals:         0      16       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0
  2639 ;;      Totals:         0      16       0       0       0       0       0
  2640 ;;Total ram usage:       16 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    9
  2643 ;; This function calls:
  2644 ;;		_Lcd_Set_Cursor
  2645 ;;		_Lcd_Write_String
  2646 ;;		_eepromWrite
  2647 ;;		_sprintf
  2648 ;;		_stopMotor
  2649 ;; This function is called by:
  2650 ;;		_stateMachine
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text9
  2655  00409A                     __ptext9:
  2656                           	callstack 0
  2657  00409A                     _stopTimeSettingMenu:
  2658                           	callstack 19
  2659  00409A                     
  2660                           ;fs_menu_controller.c: 533:     char textCursor2[16] = {0};
  2661  00409A  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2662  00409E  0E0F               	movlw	15
  2663  0040A0                     u7151:
  2664  0040A0  6ADE               	clrf	postinc2,c
  2665  0040A2  06E8               	decf	wreg,f,c
  2666  0040A4  E2FD               	bc	u7151
  2667  0040A6                     
  2668                           ;fs_menu_controller.c: 535:     stopMotor();
  2669  0040A6  EC63  F02A         	call	_stopMotor	;wreg free
  2670  0040AA                     
  2671                           ;fs_menu_controller.c: 537:     if (menu_flags.menu_input_flag == 1)
  2672  0040AA  0101               	movlb	1	; () banked
  2673  0040AC  0597               	decf	_menu_flags& (0+255),w,b
  2674  0040AE  A4D8               	btfss	status,2,c
  2675  0040B0  EF5C  F020         	goto	u7161
  2676  0040B4  EF5E  F020         	goto	u7160
  2677  0040B8                     u7161:
  2678  0040B8  EF63  F020         	goto	l6046
  2679  0040BC                     u7160:
  2680  0040BC                     
  2681                           ; BSR set to: 1
  2682                           ;fs_menu_controller.c: 538:     {;fs_menu_controller.c: 539:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2683  0040BC  0E00               	movlw	0
  2684  0040BE  6F97               	movwf	_menu_flags& (0+255),b
  2685                           
  2686                           ;fs_menu_controller.c: 540:         menu_selected = SPEED_LIMIT_SETTING;
  2687  0040C0  0E03               	movlw	3
  2688  0040C2  0100               	movlb	0	; () banked
  2689  0040C4  6FFB               	movwf	_menu_selected& (0+255),b
  2690  0040C6                     l6046:
  2691                           
  2692                           ;fs_menu_controller.c: 543:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2693  0040C6  0101               	movlb	1	; () banked
  2694  0040C8  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2695  0040CA  A4D8               	btfss	status,2,c
  2696  0040CC  EF6A  F020         	goto	u7171
  2697  0040D0  EF6C  F020         	goto	u7170
  2698  0040D4                     u7171:
  2699  0040D4  EF80  F020         	goto	l6056
  2700  0040D8                     u7170:
  2701  0040D8                     
  2702                           ; BSR set to: 1
  2703  0040D8  0EFA               	movlw	250
  2704  0040DA  0100               	movlb	0	; () banked
  2705  0040DC  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2706  0040DE  EF73  F020         	goto	u7181
  2707  0040E2  EF75  F020         	goto	u7180
  2708  0040E6                     u7181:
  2709  0040E6  EF80  F020         	goto	l6056
  2710  0040EA                     u7180:
  2711  0040EA                     
  2712                           ; BSR set to: 0
  2713                           ;fs_menu_controller.c: 544:     {;fs_menu_controller.c: 545:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2714  0040EA  0E00               	movlw	0
  2715  0040EC  0101               	movlb	1	; () banked
  2716  0040EE  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2717  0040F0                     
  2718                           ; BSR set to: 1
  2719                           ;fs_menu_controller.c: 546:         menu_value.stop_time += 10;
  2720  0040F0  0E0A               	movlw	10
  2721  0040F2  0100               	movlb	0	; () banked
  2722  0040F4  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2723  0040F6                     
  2724                           ; BSR set to: 0
  2725                           ;fs_menu_controller.c: 547:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2726  0040F6  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2727  0040FA  0E01               	movlw	1
  2728  0040FC  EC41  F02B         	call	_eepromWrite
  2729  004100                     l6056:
  2730                           
  2731                           ;fs_menu_controller.c: 550:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2732  004100  0101               	movlb	1	; () banked
  2733  004102  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2734  004104  A4D8               	btfss	status,2,c
  2735  004106  EF87  F020         	goto	u7191
  2736  00410A  EF89  F020         	goto	u7190
  2737  00410E                     u7191:
  2738  00410E  EF9D  F020         	goto	l501
  2739  004112                     u7190:
  2740  004112                     
  2741                           ; BSR set to: 1
  2742  004112  0E0A               	movlw	10
  2743  004114  0100               	movlb	0	; () banked
  2744  004116  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2745  004118  EF90  F020         	goto	u7201
  2746  00411C  EF92  F020         	goto	u7200
  2747  004120                     u7201:
  2748  004120  EF9D  F020         	goto	l501
  2749  004124                     u7200:
  2750  004124                     
  2751                           ; BSR set to: 0
  2752                           ;fs_menu_controller.c: 551:     {;fs_menu_controller.c: 552:          menu_flags.menu_de
      +                          crease_flag = 0;
  2753  004124  0E00               	movlw	0
  2754  004126  0101               	movlb	1	; () banked
  2755  004128  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2756  00412A                     
  2757                           ; BSR set to: 1
  2758                           ;fs_menu_controller.c: 553:          menu_value.stop_time -= 10;
  2759  00412A  0E0A               	movlw	10
  2760  00412C  0100               	movlb	0	; () banked
  2761  00412E  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2762  004130                     
  2763                           ; BSR set to: 0
  2764                           ;fs_menu_controller.c: 554:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2765  004130  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2766  004134  0E01               	movlw	1
  2767  004136  EC41  F02B         	call	_eepromWrite
  2768  00413A                     l501:
  2769                           
  2770                           ;fs_menu_controller.c: 556:     Lcd_Set_Cursor(1,1);
  2771  00413A  0E01               	movlw	1
  2772  00413C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2773  00413E  0E01               	movlw	1
  2774  004140  EC3F  F028         	call	_Lcd_Set_Cursor
  2775  004144                     
  2776                           ;fs_menu_controller.c: 557:     Lcd_Write_String("DURMA ZAMANI  ms");
  2777  004144  0E6F               	movlw	low STR_15
  2778  004146  6E05               	movwf	Lcd_Write_String@a^0,c
  2779  004148  0E7F               	movlw	high STR_15
  2780  00414A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2781  00414C  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  2782  004150                     
  2783                           ;fs_menu_controller.c: 558:     Lcd_Set_Cursor(2,1);
  2784  004150  0E01               	movlw	1
  2785  004152  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2786  004154  0E02               	movlw	2
  2787  004156  EC3F  F028         	call	_Lcd_Set_Cursor
  2788  00415A                     
  2789                           ;fs_menu_controller.c: 559:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2790  00415A  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2791  00415C  0100               	movlb	0	; () banked
  2792  00415E  6FCF               	movwf	sprintf@s& (0+255),b
  2793  004160  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2794  004162  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2795  004164  0E91               	movlw	low STR_16
  2796  004166  6FD1               	movwf	sprintf@fmt& (0+255),b
  2797  004168  0E7F               	movlw	high STR_16
  2798  00416A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2799  00416C  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2800  004170  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2801  004172  EC27  F029         	call	_sprintf	;wreg free
  2802  004176                     
  2803                           ;fs_menu_controller.c: 560:     Lcd_Write_String(textCursor2);
  2804  004176  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2805  004178  6E05               	movwf	Lcd_Write_String@a^0,c
  2806  00417A  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2807  00417C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2808  00417E  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  2809  004182                     
  2810                           ;fs_menu_controller.c: 562:     if(timer_value.menu_login_delay == 100)
  2811  004182  0E64               	movlw	100
  2812  004184  0101               	movlb	1	; () banked
  2813  004186  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2814  004188  A4D8               	btfss	status,2,c
  2815  00418A  EFC9  F020         	goto	u7211
  2816  00418E  EFCB  F020         	goto	u7210
  2817  004192                     u7211:
  2818  004192  EFD0  F020         	goto	l503
  2819  004196                     u7210:
  2820  004196                     
  2821                           ; BSR set to: 1
  2822                           ;fs_menu_controller.c: 563:     {;fs_menu_controller.c: 564:         timer_value.menu_lo
      +                          gin_delay = 0;
  2823  004196  0E00               	movlw	0
  2824  004198  6F93               	movwf	(_timer_value+4)& (0+255),b
  2825                           
  2826                           ;fs_menu_controller.c: 565:         menu_selected = PAUSE_MENU;
  2827  00419A  0E06               	movlw	6
  2828  00419C  0100               	movlb	0	; () banked
  2829  00419E  6FFB               	movwf	_menu_selected& (0+255),b
  2830  0041A0                     l503:
  2831  0041A0  0012               	return		;funcret
  2832  0041A2                     __end_of_stopTimeSettingMenu:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _stopMenu *****************
  2836 ;; Defined at:
  2837 ;;		line 303 in file "fs_menu_controller.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         0       0       0       0       0       0       0
  2852 ;;      Locals:         0      16       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0
  2854 ;;      Totals:         0      16       0       0       0       0       0
  2855 ;;Total ram usage:       16 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    9
  2858 ;; This function calls:
  2859 ;;		_Lcd_Set_Cursor
  2860 ;;		_Lcd_Write_String
  2861 ;;		_sprintf
  2862 ;;		_stopMotor
  2863 ;; This function is called by:
  2864 ;;		_stateMachine
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text10
  2869  00475A                     __ptext10:
  2870                           	callstack 0
  2871  00475A                     _stopMenu:
  2872                           	callstack 19
  2873  00475A                     
  2874                           ;fs_menu_controller.c: 305:     char textCursor2[16] = {0};
  2875  00475A  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2876  00475E  0E0F               	movlw	15
  2877  004760                     u7291:
  2878  004760  6ADE               	clrf	postinc2,c
  2879  004762  06E8               	decf	wreg,f,c
  2880  004764  E2FD               	bc	u7291
  2881  004766                     
  2882                           ;fs_menu_controller.c: 307:     startIsClick = 0;
  2883  004766  0E00               	movlw	0
  2884  004768  0100               	movlb	0	; () banked
  2885  00476A  6FFE               	movwf	_startIsClick& (0+255),b
  2886  00476C                     
  2887                           ; BSR set to: 0
  2888                           ;fs_menu_controller.c: 308:     pauseIsClick = 0;
  2889  00476C  0E00               	movlw	0
  2890  00476E  6FFF               	movwf	_pauseIsClick& (0+255),b
  2891  004770                     
  2892                           ; BSR set to: 0
  2893                           ;fs_menu_controller.c: 309:     stopIsClick = 1;
  2894  004770  0E01               	movlw	1
  2895  004772  6FFD               	movwf	_stopIsClick& (0+255),b
  2896  004774                     
  2897                           ; BSR set to: 0
  2898                           ;fs_menu_controller.c: 311:     Lcd_Set_Cursor(1,1);
  2899  004774  0E01               	movlw	1
  2900  004776  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2901  004778  0E01               	movlw	1
  2902  00477A  EC3F  F028         	call	_Lcd_Set_Cursor
  2903  00477E                     
  2904                           ;fs_menu_controller.c: 312:     Lcd_Write_String("ZAMAN DOLDU     ");
  2905  00477E  0E3C               	movlw	low STR_5
  2906  004780  6E05               	movwf	Lcd_Write_String@a^0,c
  2907  004782  0E7F               	movlw	high STR_5
  2908  004784  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2909  004786  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  2910  00478A                     
  2911                           ;fs_menu_controller.c: 314:     timer_value.remainingSecond = 0;
  2912  00478A  0E00               	movlw	0
  2913  00478C  0101               	movlb	1	; () banked
  2914  00478E  6F91               	movwf	(_timer_value+2)& (0+255),b
  2915  004790                     
  2916                           ; BSR set to: 1
  2917                           ;fs_menu_controller.c: 315:     timer_value.remainingMinute = 0;
  2918  004790  0E00               	movlw	0
  2919  004792  6F92               	movwf	(_timer_value+3)& (0+255),b
  2920  004794                     
  2921                           ; BSR set to: 1
  2922                           ;fs_menu_controller.c: 317:     Lcd_Set_Cursor(2,1);
  2923  004794  0E01               	movlw	1
  2924  004796  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2925  004798  0E02               	movlw	2
  2926  00479A  EC3F  F028         	call	_Lcd_Set_Cursor
  2927  00479E                     
  2928                           ;fs_menu_controller.c: 318:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2929  00479E  0EE1               	movlw	low stopMenu@textCursor2
  2930  0047A0  0100               	movlb	0	; () banked
  2931  0047A2  6FCF               	movwf	sprintf@s& (0+255),b
  2932  0047A4  0E00               	movlw	high stopMenu@textCursor2
  2933  0047A6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2934  0047A8  0EA1               	movlw	low STR_6
  2935  0047AA  6FD1               	movwf	sprintf@fmt& (0+255),b
  2936  0047AC  0E7F               	movlw	high STR_6
  2937  0047AE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2938  0047B0  0101               	movlb	1	; () banked
  2939  0047B2  5192               	movf	(_timer_value+3)& (0+255),w,b
  2940  0047B4  0100               	movlb	0	; () banked
  2941  0047B6  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2942  0047B8  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2943  0047BA  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2944  0047BC  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2945  0047BE  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  2946  0047C2  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2947  0047C4  EC27  F029         	call	_sprintf	;wreg free
  2948  0047C8                     
  2949                           ;fs_menu_controller.c: 319:     Lcd_Write_String(textCursor2);
  2950  0047C8  0EE1               	movlw	low stopMenu@textCursor2
  2951  0047CA  6E05               	movwf	Lcd_Write_String@a^0,c
  2952  0047CC  0E00               	movlw	high stopMenu@textCursor2
  2953  0047CE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2954  0047D0  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  2955  0047D4                     
  2956                           ;fs_menu_controller.c: 321:     if (menu_flags.menu_start_flag == 1)
  2957  0047D4  0101               	movlb	1	; () banked
  2958  0047D6  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2959  0047D8  A4D8               	btfss	status,2,c
  2960  0047DA  EFF1  F023         	goto	u7301
  2961  0047DE  EFF3  F023         	goto	u7300
  2962  0047E2                     u7301:
  2963  0047E2  EF03  F024         	goto	l6146
  2964  0047E6                     u7300:
  2965  0047E6                     
  2966                           ; BSR set to: 1
  2967                           ;fs_menu_controller.c: 322:     {;fs_menu_controller.c: 323:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2968  0047E6  0E00               	movlw	0
  2969  0047E8  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2970                           
  2971                           ;fs_menu_controller.c: 324:         menu_selected = START_MENU;
  2972  0047EA  0E05               	movlw	5
  2973  0047EC  0100               	movlb	0	; () banked
  2974  0047EE  6FFB               	movwf	_menu_selected& (0+255),b
  2975                           
  2976                           ;fs_menu_controller.c: 326:         startIsClick = 1;
  2977  0047F0  0E01               	movlw	1
  2978  0047F2  6FFE               	movwf	_startIsClick& (0+255),b
  2979                           
  2980                           ;fs_menu_controller.c: 327:         pauseIsClick = 0;
  2981  0047F4  0E00               	movlw	0
  2982  0047F6  6FFF               	movwf	_pauseIsClick& (0+255),b
  2983                           
  2984                           ;fs_menu_controller.c: 328:         stopIsClick = 0;
  2985  0047F8  0E00               	movlw	0
  2986  0047FA  6FFD               	movwf	_stopIsClick& (0+255),b
  2987                           
  2988                           ;fs_menu_controller.c: 329:         timer_value.second = 0;
  2989  0047FC  0E00               	movlw	0
  2990  0047FE  0101               	movlb	1	; () banked
  2991  004800  6F8F               	movwf	_timer_value& (0+255),b
  2992                           
  2993                           ;fs_menu_controller.c: 330:         timer_value.minute = 0;
  2994  004802  0E00               	movlw	0
  2995  004804  6F90               	movwf	(_timer_value+1)& (0+255),b
  2996  004806                     l6146:
  2997                           
  2998                           ; BSR set to: 1
  2999                           ;fs_menu_controller.c: 333:     if ( timer_value.menu_login_delay == 100)
  3000  004806  0E64               	movlw	100
  3001  004808  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3002  00480A  A4D8               	btfss	status,2,c
  3003  00480C  EF0A  F024         	goto	u7311
  3004  004810  EF0C  F024         	goto	u7310
  3005  004814                     u7311:
  3006  004814  EF11  F024         	goto	l6150
  3007  004818                     u7310:
  3008  004818                     
  3009                           ; BSR set to: 1
  3010                           ;fs_menu_controller.c: 334:     {;fs_menu_controller.c: 335:         timer_value.menu_lo
      +                          gin_delay = 0;
  3011  004818  0E00               	movlw	0
  3012  00481A  6F93               	movwf	(_timer_value+4)& (0+255),b
  3013                           
  3014                           ;fs_menu_controller.c: 336:         menu_selected = DRIVER_TIME_SETTING;
  3015  00481C  0E01               	movlw	1
  3016  00481E  0100               	movlb	0	; () banked
  3017  004820  6FFB               	movwf	_menu_selected& (0+255),b
  3018  004822                     l6150:
  3019                           
  3020                           ;fs_menu_controller.c: 338: stopMotor();
  3021  004822  EC63  F02A         	call	_stopMotor	;wreg free
  3022  004826  0012               	return		;funcret
  3023  004828                     __end_of_stopMenu:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _startMenu *****************
  3027 ;; Defined at:
  3028 ;;		line 401 in file "fs_menu_controller.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3042 ;;      Params:         0       0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_stateMachine
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text11
  3057  005762                     __ptext11:
  3058                           	callstack 0
  3059  005762                     _startMenu:
  3060                           	callstack 27
  3061  005762                     
  3062                           ;fs_menu_controller.c: 403:     timer_value.remainingMinute = menu_value.driver_time;
  3063  005762  C0F3  F192         	movff	_menu_value,_timer_value+3
  3064  005766                     
  3065                           ;fs_menu_controller.c: 404:     timer_value.remainingSecond = 0;
  3066  005766  0E00               	movlw	0
  3067  005768  0101               	movlb	1	; () banked
  3068  00576A  6F91               	movwf	(_timer_value+2)& (0+255),b
  3069                           
  3070                           ;fs_menu_controller.c: 405:     startIsClick = 1;
  3071  00576C  0E01               	movlw	1
  3072  00576E  0100               	movlb	0	; () banked
  3073  005770  6FFE               	movwf	_startIsClick& (0+255),b
  3074                           
  3075                           ;fs_menu_controller.c: 406:     stopIsClick = 0;
  3076  005772  0E00               	movlw	0
  3077  005774  6FFD               	movwf	_stopIsClick& (0+255),b
  3078                           
  3079                           ;fs_menu_controller.c: 407:     menu_selected = MAIN_MENU;
  3080  005776  0E00               	movlw	0
  3081  005778  6FFB               	movwf	_menu_selected& (0+255),b
  3082  00577A                     
  3083                           ; BSR set to: 0
  3084  00577A  0012               	return		;funcret
  3085  00577C                     __end_of_startMenu:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _speedLimitSettingMenu *****************
  3089 ;; Defined at:
  3090 ;;		line 488 in file "fs_menu_controller.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         0       0       0       0       0       0       0
  3105 ;;      Locals:         0      16       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         0      16       0       0       0       0       0
  3108 ;;Total ram usage:       16 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    9
  3111 ;; This function calls:
  3112 ;;		_Lcd_Set_Cursor
  3113 ;;		_Lcd_Write_String
  3114 ;;		_eepromWrite
  3115 ;;		_sprintf
  3116 ;;		_stopMotor
  3117 ;; This function is called by:
  3118 ;;		_stateMachine
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text12
  3123  0042A8                     __ptext12:
  3124                           	callstack 0
  3125  0042A8                     _speedLimitSettingMenu:
  3126                           	callstack 19
  3127  0042A8                     
  3128                           ;fs_menu_controller.c: 490:     char textCursor2[16] = {0};
  3129  0042A8  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  3130  0042AC  0E0F               	movlw	15
  3131  0042AE                     u7221:
  3132  0042AE  6ADE               	clrf	postinc2,c
  3133  0042B0  06E8               	decf	wreg,f,c
  3134  0042B2  E2FD               	bc	u7221
  3135  0042B4                     
  3136                           ;fs_menu_controller.c: 491:     stopMotor();
  3137  0042B4  EC63  F02A         	call	_stopMotor	;wreg free
  3138  0042B8                     
  3139                           ;fs_menu_controller.c: 493:     if (menu_flags.menu_input_flag == 1)
  3140  0042B8  0101               	movlb	1	; () banked
  3141  0042BA  0597               	decf	_menu_flags& (0+255),w,b
  3142  0042BC  A4D8               	btfss	status,2,c
  3143  0042BE  EF63  F021         	goto	u7231
  3144  0042C2  EF65  F021         	goto	u7230
  3145  0042C6                     u7231:
  3146  0042C6  EF6A  F021         	goto	l6086
  3147  0042CA                     u7230:
  3148  0042CA                     
  3149                           ; BSR set to: 1
  3150                           ;fs_menu_controller.c: 494:     {;fs_menu_controller.c: 495:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3151  0042CA  0E00               	movlw	0
  3152  0042CC  6F97               	movwf	_menu_flags& (0+255),b
  3153                           
  3154                           ;fs_menu_controller.c: 496:         menu_selected = DRIVER_TIME_SETTING;
  3155  0042CE  0E01               	movlw	1
  3156  0042D0  0100               	movlb	0	; () banked
  3157  0042D2  6FFB               	movwf	_menu_selected& (0+255),b
  3158  0042D4                     l6086:
  3159                           
  3160                           ;fs_menu_controller.c: 499:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  3161  0042D4  0101               	movlb	1	; () banked
  3162  0042D6  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3163  0042D8  A4D8               	btfss	status,2,c
  3164  0042DA  EF71  F021         	goto	u7241
  3165  0042DE  EF73  F021         	goto	u7240
  3166  0042E2                     u7241:
  3167  0042E2  EF86  F021         	goto	l6096
  3168  0042E6                     u7240:
  3169  0042E6                     
  3170                           ; BSR set to: 1
  3171  0042E6  0E05               	movlw	5
  3172  0042E8  0100               	movlb	0	; () banked
  3173  0042EA  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  3174  0042EC  EF7A  F021         	goto	u7251
  3175  0042F0  EF7C  F021         	goto	u7250
  3176  0042F4                     u7251:
  3177  0042F4  EF86  F021         	goto	l6096
  3178  0042F8                     u7250:
  3179  0042F8                     
  3180                           ; BSR set to: 0
  3181                           ;fs_menu_controller.c: 500:     {;fs_menu_controller.c: 501:         menu_flags.menu_inc
      +                          rease_flag = 0;
  3182  0042F8  0E00               	movlw	0
  3183  0042FA  0101               	movlb	1	; () banked
  3184  0042FC  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3185  0042FE                     
  3186                           ; BSR set to: 1
  3187                           ;fs_menu_controller.c: 502:         menu_value.speed_limit += 1;
  3188  0042FE  0100               	movlb	0	; () banked
  3189  004300  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  3190  004302                     
  3191                           ; BSR set to: 0
  3192                           ;fs_menu_controller.c: 503:         eepromWrite(0x02,menu_value.speed_limit);
  3193  004302  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3194  004306  0E02               	movlw	2
  3195  004308  EC41  F02B         	call	_eepromWrite
  3196  00430C                     l6096:
  3197                           
  3198                           ;fs_menu_controller.c: 506:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  3199  00430C  0101               	movlb	1	; () banked
  3200  00430E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3201  004310  A4D8               	btfss	status,2,c
  3202  004312  EF8D  F021         	goto	u7261
  3203  004316  EF8F  F021         	goto	u7260
  3204  00431A                     u7261:
  3205  00431A  EFA2  F021         	goto	l6106
  3206  00431E                     u7260:
  3207  00431E                     
  3208                           ; BSR set to: 1
  3209  00431E  0E01               	movlw	1
  3210  004320  0100               	movlb	0	; () banked
  3211  004322  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  3212  004324  EF96  F021         	goto	u7271
  3213  004328  EF98  F021         	goto	u7270
  3214  00432C                     u7271:
  3215  00432C  EFA2  F021         	goto	l6106
  3216  004330                     u7270:
  3217  004330                     
  3218                           ; BSR set to: 0
  3219                           ;fs_menu_controller.c: 507:     {;fs_menu_controller.c: 508:          menu_flags.menu_de
      +                          crease_flag = 0;
  3220  004330  0E00               	movlw	0
  3221  004332  0101               	movlb	1	; () banked
  3222  004334  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3223  004336                     
  3224                           ; BSR set to: 1
  3225                           ;fs_menu_controller.c: 509:          menu_value.speed_limit -= 1;
  3226  004336  0100               	movlb	0	; () banked
  3227  004338  07F5               	decf	(_menu_value+2)& (0+255),f,b
  3228  00433A                     
  3229                           ; BSR set to: 0
  3230                           ;fs_menu_controller.c: 510:          eepromWrite(0x02,menu_value.speed_limit);
  3231  00433A  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3232  00433E  0E02               	movlw	2
  3233  004340  EC41  F02B         	call	_eepromWrite
  3234  004344                     l6106:
  3235                           
  3236                           ;fs_menu_controller.c: 512:     Lcd_Set_Cursor(1,1);
  3237  004344  0E01               	movlw	1
  3238  004346  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3239  004348  0E01               	movlw	1
  3240  00434A  EC3F  F028         	call	_Lcd_Set_Cursor
  3241  00434E                     
  3242                           ;fs_menu_controller.c: 513:     Lcd_Write_String("HIZ LiMiTi      ");
  3243  00434E  0E1A               	movlw	low STR_13
  3244  004350  6E05               	movwf	Lcd_Write_String@a^0,c
  3245  004352  0E7F               	movlw	high STR_13
  3246  004354  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3247  004356  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3248  00435A                     
  3249                           ;fs_menu_controller.c: 514:     Lcd_Set_Cursor(2,1);
  3250  00435A  0E01               	movlw	1
  3251  00435C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3252  00435E  0E02               	movlw	2
  3253  004360  EC3F  F028         	call	_Lcd_Set_Cursor
  3254  004364                     
  3255                           ;fs_menu_controller.c: 515:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  3256  004364  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3257  004366  0100               	movlb	0	; () banked
  3258  004368  6FCF               	movwf	sprintf@s& (0+255),b
  3259  00436A  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3260  00436C  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3261  00436E  0EF7               	movlw	low STR_14
  3262  004370  6FD1               	movwf	sprintf@fmt& (0+255),b
  3263  004372  0E7E               	movlw	high STR_14
  3264  004374  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3265  004376  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  3266  00437A  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3267  00437C  EC27  F029         	call	_sprintf	;wreg free
  3268  004380                     
  3269                           ;fs_menu_controller.c: 516:     Lcd_Write_String(textCursor2);
  3270  004380  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3271  004382  6E05               	movwf	Lcd_Write_String@a^0,c
  3272  004384  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3273  004386  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3274  004388  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3275  00438C                     
  3276                           ;fs_menu_controller.c: 518:     if(timer_value.menu_login_delay == 100)
  3277  00438C  0E64               	movlw	100
  3278  00438E  0101               	movlb	1	; () banked
  3279  004390  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3280  004392  A4D8               	btfss	status,2,c
  3281  004394  EFCE  F021         	goto	u7281
  3282  004398  EFD0  F021         	goto	u7280
  3283  00439C                     u7281:
  3284  00439C  EFD5  F021         	goto	l494
  3285  0043A0                     u7280:
  3286  0043A0                     
  3287                           ; BSR set to: 1
  3288                           ;fs_menu_controller.c: 519:     {;fs_menu_controller.c: 520:         timer_value.menu_lo
      +                          gin_delay = 0;
  3289  0043A0  0E00               	movlw	0
  3290  0043A2  6F93               	movwf	(_timer_value+4)& (0+255),b
  3291                           
  3292                           ;fs_menu_controller.c: 521:         menu_selected = PAUSE_MENU;
  3293  0043A4  0E06               	movlw	6
  3294  0043A6  0100               	movlb	0	; () banked
  3295  0043A8  6FFB               	movwf	_menu_selected& (0+255),b
  3296  0043AA                     l494:
  3297  0043AA  0012               	return		;funcret
  3298  0043AC                     __end_of_speedLimitSettingMenu:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function _secretMenu *****************
  3302 ;; Defined at:
  3303 ;;		line 416 in file "fs_menu_controller.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3317 ;;      Params:         0       0       0       0       0       0       0
  3318 ;;      Locals:         0      16       0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0
  3320 ;;      Totals:         0      16       0       0       0       0       0
  3321 ;;Total ram usage:       16 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    9
  3324 ;; This function calls:
  3325 ;;		_Lcd_Set_Cursor
  3326 ;;		_Lcd_Write_String
  3327 ;;		___fladd
  3328 ;;		___flge
  3329 ;;		___flsub
  3330 ;;		_sprintf
  3331 ;;		_stopMotor
  3332 ;; This function is called by:
  3333 ;;		_stateMachine
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text13
  3338  002CE0                     __ptext13:
  3339                           	callstack 0
  3340  002CE0                     _secretMenu:
  3341                           	callstack 19
  3342  002CE0                     
  3343                           ;fs_menu_controller.c: 418:     char textCursor2[16] = {0};
  3344  002CE0  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  3345  002CE4  0E0F               	movlw	15
  3346  002CE6                     u7411:
  3347  002CE6  6ADE               	clrf	postinc2,c
  3348  002CE8  06E8               	decf	wreg,f,c
  3349  002CEA  E2FD               	bc	u7411
  3350  002CEC                     
  3351                           ;fs_menu_controller.c: 420:     stopMotor();
  3352  002CEC  EC63  F02A         	call	_stopMotor	;wreg free
  3353  002CF0                     
  3354                           ;fs_menu_controller.c: 422:     if (menu_flags.menu_input_flag == 1)
  3355  002CF0  0101               	movlb	1	; () banked
  3356  002CF2  0597               	decf	_menu_flags& (0+255),w,b
  3357  002CF4  A4D8               	btfss	status,2,c
  3358  002CF6  EF7F  F016         	goto	u7421
  3359  002CFA  EF81  F016         	goto	u7420
  3360  002CFE                     u7421:
  3361  002CFE  EF8F  F016         	goto	l6210
  3362  002D02                     u7420:
  3363  002D02                     
  3364                           ; BSR set to: 1
  3365                           ;fs_menu_controller.c: 423:     {;fs_menu_controller.c: 424:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3366  002D02  0E00               	movlw	0
  3367  002D04  6F97               	movwf	_menu_flags& (0+255),b
  3368  002D06                     
  3369                           ; BSR set to: 1
  3370                           ;fs_menu_controller.c: 425:         secretMenuCounter++;
  3371  002D06  0100               	movlb	0	; () banked
  3372  002D08  2BFC               	incf	_secretMenuCounter& (0+255),f,b
  3373  002D0A                     
  3374                           ; BSR set to: 0
  3375                           ;fs_menu_controller.c: 427:         if (secretMenuCounter >2)
  3376  002D0A  0E02               	movlw	2
  3377  002D0C  65FC               	cpfsgt	_secretMenuCounter& (0+255),b
  3378  002D0E  EF8B  F016         	goto	u7431
  3379  002D12  EF8D  F016         	goto	u7430
  3380  002D16                     u7431:
  3381  002D16  EF8F  F016         	goto	l6210
  3382  002D1A                     u7430:
  3383  002D1A                     
  3384                           ; BSR set to: 0
  3385                           ;fs_menu_controller.c: 428:         {;fs_menu_controller.c: 429:             secretMenuC
      +                          ounter = 1;
  3386  002D1A  0E01               	movlw	1
  3387  002D1C  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3388  002D1E                     l6210:
  3389                           
  3390                           ;fs_menu_controller.c: 433:     if (secretMenuCounter == 1)
  3391  002D1E  0100               	movlb	0	; () banked
  3392  002D20  05FC               	decf	_secretMenuCounter& (0+255),w,b
  3393  002D22  A4D8               	btfss	status,2,c
  3394  002D24  EF96  F016         	goto	u7441
  3395  002D28  EF98  F016         	goto	u7440
  3396  002D2C                     u7441:
  3397  002D2C  EF2C  F017         	goto	l6238
  3398  002D30                     u7440:
  3399  002D30                     
  3400                           ; BSR set to: 0
  3401                           ;fs_menu_controller.c: 434:     {;fs_menu_controller.c: 435:         Lcd_Set_Cursor(1,1)
      +                          ;
  3402  002D30  0E01               	movlw	1
  3403  002D32  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3404  002D34  0E01               	movlw	1
  3405  002D36  EC3F  F028         	call	_Lcd_Set_Cursor
  3406  002D3A                     
  3407                           ;fs_menu_controller.c: 436:         Lcd_Write_String("PID PARAM       ");
  3408  002D3A  0E09               	movlw	low STR_9
  3409  002D3C  6E05               	movwf	Lcd_Write_String@a^0,c
  3410  002D3E  0E7F               	movlw	high STR_9
  3411  002D40  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3412  002D42  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3413  002D46                     
  3414                           ;fs_menu_controller.c: 437:         Lcd_Set_Cursor(2,1);
  3415  002D46  0E01               	movlw	1
  3416  002D48  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3417  002D4A  0E02               	movlw	2
  3418  002D4C  EC3F  F028         	call	_Lcd_Set_Cursor
  3419  002D50                     
  3420                           ;fs_menu_controller.c: 438:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3421  002D50  0EE1               	movlw	low secretMenu@textCursor2
  3422  002D52  0100               	movlb	0	; () banked
  3423  002D54  6FCF               	movwf	sprintf@s& (0+255),b
  3424  002D56  0E00               	movlw	high secretMenu@textCursor2
  3425  002D58  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3426  002D5A  0ED0               	movlw	low STR_10
  3427  002D5C  6FD1               	movwf	sprintf@fmt& (0+255),b
  3428  002D5E  0E7F               	movlw	high STR_10
  3429  002D60  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3430  002D62  C1CF  F0D3         	movff	_KP@fs_speed_controller$F1838,?_sprintf+4
  3431  002D66  C1D0  F0D4         	movff	_KP@fs_speed_controller$F1838+1,?_sprintf+5
  3432  002D6A  C1D1  F0D5         	movff	_KP@fs_speed_controller$F1838+2,?_sprintf+6
  3433  002D6E  C1D2  F0D6         	movff	_KP@fs_speed_controller$F1838+3,?_sprintf+7
  3434  002D72  EC27  F029         	call	_sprintf	;wreg free
  3435  002D76                     
  3436                           ;fs_menu_controller.c: 439:         Lcd_Write_String(textCursor2);
  3437  002D76  0EE1               	movlw	low secretMenu@textCursor2
  3438  002D78  6E05               	movwf	Lcd_Write_String@a^0,c
  3439  002D7A  0E00               	movlw	high secretMenu@textCursor2
  3440  002D7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3441  002D7E  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3442  002D82                     
  3443                           ;fs_menu_controller.c: 441:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  3444  002D82  0101               	movlb	1	; () banked
  3445  002D84  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3446  002D86  A4D8               	btfss	status,2,c
  3447  002D88  EFC8  F016         	goto	u7451
  3448  002D8C  EFCA  F016         	goto	u7450
  3449  002D90                     u7451:
  3450  002D90  EF00  F017         	goto	l6230
  3451  002D94                     u7450:
  3452  002D94                     
  3453                           ; BSR set to: 1
  3454  002D94  C1CF  F035         	movff	_KP@fs_speed_controller$F1838,___flge@ff1
  3455  002D98  C1D0  F036         	movff	_KP@fs_speed_controller$F1838+1,___flge@ff1+1
  3456  002D9C  C1D1  F037         	movff	_KP@fs_speed_controller$F1838+2,___flge@ff1+2
  3457  002DA0  C1D2  F038         	movff	_KP@fs_speed_controller$F1838+3,___flge@ff1+3
  3458  002DA4  0E00               	movlw	0
  3459  002DA6  6E39               	movwf	___flge@ff2^0,c
  3460  002DA8  0E00               	movlw	0
  3461  002DAA  6E3A               	movwf	(___flge@ff2+1)^0,c
  3462  002DAC  0E20               	movlw	32
  3463  002DAE  6E3B               	movwf	(___flge@ff2+2)^0,c
  3464  002DB0  0E40               	movlw	64
  3465  002DB2  6E3C               	movwf	(___flge@ff2+3)^0,c
  3466  002DB4  ECD6  F021         	call	___flge	;wreg free
  3467  002DB8  B0D8               	btfsc	status,0,c
  3468  002DBA  EFE1  F016         	goto	u7461
  3469  002DBE  EFE3  F016         	goto	u7460
  3470  002DC2                     u7461:
  3471  002DC2  EF00  F017         	goto	l6230
  3472  002DC6                     u7460:
  3473  002DC6                     
  3474                           ;fs_menu_controller.c: 442:         {;fs_menu_controller.c: 443:             menu_flags.
      +                          menu_increase_flag = 0;
  3475  002DC6  0E00               	movlw	0
  3476  002DC8  0101               	movlb	1	; () banked
  3477  002DCA  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3478  002DCC                     
  3479                           ; BSR set to: 1
  3480                           ;fs_menu_controller.c: 444:             KP += 0.1;
  3481  002DCC  C1CF  F035         	movff	_KP@fs_speed_controller$F1838,___fladd@b
  3482  002DD0  C1D0  F036         	movff	_KP@fs_speed_controller$F1838+1,___fladd@b+1
  3483  002DD4  C1D1  F037         	movff	_KP@fs_speed_controller$F1838+2,___fladd@b+2
  3484  002DD8  C1D2  F038         	movff	_KP@fs_speed_controller$F1838+3,___fladd@b+3
  3485  002DDC  0ECD               	movlw	205
  3486  002DDE  6E39               	movwf	___fladd@a^0,c
  3487  002DE0  0ECC               	movlw	204
  3488  002DE2  6E3A               	movwf	(___fladd@a+1)^0,c
  3489  002DE4  0ECC               	movlw	204
  3490  002DE6  6E3B               	movwf	(___fladd@a+2)^0,c
  3491  002DE8  0E3D               	movlw	61
  3492  002DEA  6E3C               	movwf	(___fladd@a+3)^0,c
  3493  002DEC  EC49  F00D         	call	___fladd	;wreg free
  3494  002DF0  C035  F1CF         	movff	?___fladd,_KP@fs_speed_controller$F1838
  3495  002DF4  C036  F1D0         	movff	?___fladd+1,_KP@fs_speed_controller$F1838+1
  3496  002DF8  C037  F1D1         	movff	?___fladd+2,_KP@fs_speed_controller$F1838+2
  3497  002DFC  C038  F1D2         	movff	?___fladd+3,_KP@fs_speed_controller$F1838+3
  3498  002E00                     l6230:
  3499                           
  3500                           ;fs_menu_controller.c: 447:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  3501  002E00  0101               	movlb	1	; () banked
  3502  002E02  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3503  002E04  A4D8               	btfss	status,2,c
  3504  002E06  EF07  F017         	goto	u7471
  3505  002E0A  EF09  F017         	goto	u7470
  3506  002E0E                     u7471:
  3507  002E0E  EF2C  F017         	goto	l6238
  3508  002E12                     u7470:
  3509  002E12                     
  3510                           ; BSR set to: 1
  3511  002E12  BFD2               	btfsc	(_KP@fs_speed_controller$F1838+3)& (0+255),7,b
  3512  002E14  EF0E  F017         	goto	u7481
  3513  002E18  EF10  F017         	goto	u7480
  3514  002E1C                     u7481:
  3515  002E1C  EF2C  F017         	goto	l6238
  3516  002E20                     u7480:
  3517  002E20                     
  3518                           ; BSR set to: 1
  3519                           ;fs_menu_controller.c: 448:         {;fs_menu_controller.c: 449:             menu_flags.
      +                          menu_decrease_flag = 0;
  3520  002E20  0E00               	movlw	0
  3521  002E22  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3522  002E24                     
  3523                           ; BSR set to: 1
  3524                           ;fs_menu_controller.c: 450:              KP -= 0.1;
  3525  002E24  C1CF  F045         	movff	_KP@fs_speed_controller$F1838,___flsub@b
  3526  002E28  C1D0  F046         	movff	_KP@fs_speed_controller$F1838+1,___flsub@b+1
  3527  002E2C  C1D1  F047         	movff	_KP@fs_speed_controller$F1838+2,___flsub@b+2
  3528  002E30  C1D2  F048         	movff	_KP@fs_speed_controller$F1838+3,___flsub@b+3
  3529  002E34  0ECD               	movlw	205
  3530  002E36  6E49               	movwf	___flsub@a^0,c
  3531  002E38  0ECC               	movlw	204
  3532  002E3A  6E4A               	movwf	(___flsub@a+1)^0,c
  3533  002E3C  0ECC               	movlw	204
  3534  002E3E  6E4B               	movwf	(___flsub@a+2)^0,c
  3535  002E40  0E3D               	movlw	61
  3536  002E42  6E4C               	movwf	(___flsub@a+3)^0,c
  3537  002E44  EC9E  F029         	call	___flsub	;wreg free
  3538  002E48  C045  F1CF         	movff	?___flsub,_KP@fs_speed_controller$F1838
  3539  002E4C  C046  F1D0         	movff	?___flsub+1,_KP@fs_speed_controller$F1838+1
  3540  002E50  C047  F1D1         	movff	?___flsub+2,_KP@fs_speed_controller$F1838+2
  3541  002E54  C048  F1D2         	movff	?___flsub+3,_KP@fs_speed_controller$F1838+3
  3542  002E58                     l6238:
  3543                           
  3544                           ;fs_menu_controller.c: 454:     if (secretMenuCounter == 2)
  3545  002E58  0E02               	movlw	2
  3546  002E5A  0100               	movlb	0	; () banked
  3547  002E5C  19FC               	xorwf	_secretMenuCounter& (0+255),w,b
  3548  002E5E  A4D8               	btfss	status,2,c
  3549  002E60  EF34  F017         	goto	u7491
  3550  002E64  EF36  F017         	goto	u7490
  3551  002E68                     u7491:
  3552  002E68  EFCA  F017         	goto	l6266
  3553  002E6C                     u7490:
  3554  002E6C                     
  3555                           ; BSR set to: 0
  3556                           ;fs_menu_controller.c: 455:     {;fs_menu_controller.c: 456:         Lcd_Set_Cursor(1,1)
      +                          ;
  3557  002E6C  0E01               	movlw	1
  3558  002E6E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3559  002E70  0E01               	movlw	1
  3560  002E72  EC3F  F028         	call	_Lcd_Set_Cursor
  3561  002E76                     
  3562                           ;fs_menu_controller.c: 457:         Lcd_Write_String("PID PARAM       ");
  3563  002E76  0E09               	movlw	low STR_9
  3564  002E78  6E05               	movwf	Lcd_Write_String@a^0,c
  3565  002E7A  0E7F               	movlw	high STR_9
  3566  002E7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3567  002E7E  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3568  002E82                     
  3569                           ;fs_menu_controller.c: 458:         Lcd_Set_Cursor(2,1);
  3570  002E82  0E01               	movlw	1
  3571  002E84  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3572  002E86  0E02               	movlw	2
  3573  002E88  EC3F  F028         	call	_Lcd_Set_Cursor
  3574  002E8C                     
  3575                           ;fs_menu_controller.c: 459:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3576  002E8C  0EE1               	movlw	low secretMenu@textCursor2
  3577  002E8E  0100               	movlb	0	; () banked
  3578  002E90  6FCF               	movwf	sprintf@s& (0+255),b
  3579  002E92  0E00               	movlw	high secretMenu@textCursor2
  3580  002E94  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3581  002E96  0EDE               	movlw	low STR_12
  3582  002E98  6FD1               	movwf	sprintf@fmt& (0+255),b
  3583  002E9A  0E7F               	movlw	high STR_12
  3584  002E9C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3585  002E9E  C1CB  F0D3         	movff	_KD@fs_speed_controller$F1839,?_sprintf+4
  3586  002EA2  C1CC  F0D4         	movff	_KD@fs_speed_controller$F1839+1,?_sprintf+5
  3587  002EA6  C1CD  F0D5         	movff	_KD@fs_speed_controller$F1839+2,?_sprintf+6
  3588  002EAA  C1CE  F0D6         	movff	_KD@fs_speed_controller$F1839+3,?_sprintf+7
  3589  002EAE  EC27  F029         	call	_sprintf	;wreg free
  3590  002EB2                     
  3591                           ;fs_menu_controller.c: 460:         Lcd_Write_String(textCursor2);
  3592  002EB2  0EE1               	movlw	low secretMenu@textCursor2
  3593  002EB4  6E05               	movwf	Lcd_Write_String@a^0,c
  3594  002EB6  0E00               	movlw	high secretMenu@textCursor2
  3595  002EB8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3596  002EBA  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3597  002EBE                     
  3598                           ;fs_menu_controller.c: 462:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3599  002EBE  0101               	movlb	1	; () banked
  3600  002EC0  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3601  002EC2  A4D8               	btfss	status,2,c
  3602  002EC4  EF66  F017         	goto	u7501
  3603  002EC8  EF68  F017         	goto	u7500
  3604  002ECC                     u7501:
  3605  002ECC  EF9E  F017         	goto	l6258
  3606  002ED0                     u7500:
  3607  002ED0                     
  3608                           ; BSR set to: 1
  3609  002ED0  C1CB  F035         	movff	_KD@fs_speed_controller$F1839,___flge@ff1
  3610  002ED4  C1CC  F036         	movff	_KD@fs_speed_controller$F1839+1,___flge@ff1+1
  3611  002ED8  C1CD  F037         	movff	_KD@fs_speed_controller$F1839+2,___flge@ff1+2
  3612  002EDC  C1CE  F038         	movff	_KD@fs_speed_controller$F1839+3,___flge@ff1+3
  3613  002EE0  0E00               	movlw	0
  3614  002EE2  6E39               	movwf	___flge@ff2^0,c
  3615  002EE4  0E00               	movlw	0
  3616  002EE6  6E3A               	movwf	(___flge@ff2+1)^0,c
  3617  002EE8  0E20               	movlw	32
  3618  002EEA  6E3B               	movwf	(___flge@ff2+2)^0,c
  3619  002EEC  0E40               	movlw	64
  3620  002EEE  6E3C               	movwf	(___flge@ff2+3)^0,c
  3621  002EF0  ECD6  F021         	call	___flge	;wreg free
  3622  002EF4  B0D8               	btfsc	status,0,c
  3623  002EF6  EF7F  F017         	goto	u7511
  3624  002EFA  EF81  F017         	goto	u7510
  3625  002EFE                     u7511:
  3626  002EFE  EF9E  F017         	goto	l6258
  3627  002F02                     u7510:
  3628  002F02                     
  3629                           ;fs_menu_controller.c: 463:         {;fs_menu_controller.c: 464:             menu_flags.
      +                          menu_increase_flag = 0;
  3630  002F02  0E00               	movlw	0
  3631  002F04  0101               	movlb	1	; () banked
  3632  002F06  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3633  002F08                     
  3634                           ; BSR set to: 1
  3635                           ;fs_menu_controller.c: 465:             KD += 0.1;
  3636  002F08  C1CB  F035         	movff	_KD@fs_speed_controller$F1839,___fladd@b
  3637  002F0C  C1CC  F036         	movff	_KD@fs_speed_controller$F1839+1,___fladd@b+1
  3638  002F10  C1CD  F037         	movff	_KD@fs_speed_controller$F1839+2,___fladd@b+2
  3639  002F14  C1CE  F038         	movff	_KD@fs_speed_controller$F1839+3,___fladd@b+3
  3640  002F18  0ECD               	movlw	205
  3641  002F1A  6E39               	movwf	___fladd@a^0,c
  3642  002F1C  0ECC               	movlw	204
  3643  002F1E  6E3A               	movwf	(___fladd@a+1)^0,c
  3644  002F20  0ECC               	movlw	204
  3645  002F22  6E3B               	movwf	(___fladd@a+2)^0,c
  3646  002F24  0E3D               	movlw	61
  3647  002F26  6E3C               	movwf	(___fladd@a+3)^0,c
  3648  002F28  EC49  F00D         	call	___fladd	;wreg free
  3649  002F2C  C035  F1CB         	movff	?___fladd,_KD@fs_speed_controller$F1839
  3650  002F30  C036  F1CC         	movff	?___fladd+1,_KD@fs_speed_controller$F1839+1
  3651  002F34  C037  F1CD         	movff	?___fladd+2,_KD@fs_speed_controller$F1839+2
  3652  002F38  C038  F1CE         	movff	?___fladd+3,_KD@fs_speed_controller$F1839+3
  3653  002F3C                     l6258:
  3654                           
  3655                           ;fs_menu_controller.c: 468:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3656  002F3C  0101               	movlb	1	; () banked
  3657  002F3E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3658  002F40  A4D8               	btfss	status,2,c
  3659  002F42  EFA5  F017         	goto	u7521
  3660  002F46  EFA7  F017         	goto	u7520
  3661  002F4A                     u7521:
  3662  002F4A  EFCA  F017         	goto	l6266
  3663  002F4E                     u7520:
  3664  002F4E                     
  3665                           ; BSR set to: 1
  3666  002F4E  BFCE               	btfsc	(_KD@fs_speed_controller$F1839+3)& (0+255),7,b
  3667  002F50  EFAC  F017         	goto	u7531
  3668  002F54  EFAE  F017         	goto	u7530
  3669  002F58                     u7531:
  3670  002F58  EFCA  F017         	goto	l6266
  3671  002F5C                     u7530:
  3672  002F5C                     
  3673                           ; BSR set to: 1
  3674                           ;fs_menu_controller.c: 469:         {;fs_menu_controller.c: 470:             menu_flags.
      +                          menu_decrease_flag = 0;
  3675  002F5C  0E00               	movlw	0
  3676  002F5E  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3677  002F60                     
  3678                           ; BSR set to: 1
  3679                           ;fs_menu_controller.c: 471:              KD -= 0.1;
  3680  002F60  C1CB  F045         	movff	_KD@fs_speed_controller$F1839,___flsub@b
  3681  002F64  C1CC  F046         	movff	_KD@fs_speed_controller$F1839+1,___flsub@b+1
  3682  002F68  C1CD  F047         	movff	_KD@fs_speed_controller$F1839+2,___flsub@b+2
  3683  002F6C  C1CE  F048         	movff	_KD@fs_speed_controller$F1839+3,___flsub@b+3
  3684  002F70  0ECD               	movlw	205
  3685  002F72  6E49               	movwf	___flsub@a^0,c
  3686  002F74  0ECC               	movlw	204
  3687  002F76  6E4A               	movwf	(___flsub@a+1)^0,c
  3688  002F78  0ECC               	movlw	204
  3689  002F7A  6E4B               	movwf	(___flsub@a+2)^0,c
  3690  002F7C  0E3D               	movlw	61
  3691  002F7E  6E4C               	movwf	(___flsub@a+3)^0,c
  3692  002F80  EC9E  F029         	call	___flsub	;wreg free
  3693  002F84  C045  F1CB         	movff	?___flsub,_KD@fs_speed_controller$F1839
  3694  002F88  C046  F1CC         	movff	?___flsub+1,_KD@fs_speed_controller$F1839+1
  3695  002F8C  C047  F1CD         	movff	?___flsub+2,_KD@fs_speed_controller$F1839+2
  3696  002F90  C048  F1CE         	movff	?___flsub+3,_KD@fs_speed_controller$F1839+3
  3697  002F94                     l6266:
  3698                           
  3699                           ;fs_menu_controller.c: 475:     if ( timer_value.menu_login_delay == 100)
  3700  002F94  0E64               	movlw	100
  3701  002F96  0101               	movlb	1	; () banked
  3702  002F98  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3703  002F9A  A4D8               	btfss	status,2,c
  3704  002F9C  EFD2  F017         	goto	u7541
  3705  002FA0  EFD4  F017         	goto	u7540
  3706  002FA4                     u7541:
  3707  002FA4  EFD9  F017         	goto	l485
  3708  002FA8                     u7540:
  3709  002FA8                     
  3710                           ; BSR set to: 1
  3711                           ;fs_menu_controller.c: 476:     {;fs_menu_controller.c: 477:         timer_value.menu_lo
      +                          gin_delay = 0;
  3712  002FA8  0E00               	movlw	0
  3713  002FAA  6F93               	movwf	(_timer_value+4)& (0+255),b
  3714                           
  3715                           ;fs_menu_controller.c: 478:         menu_selected = PAUSE_MENU;
  3716  002FAC  0E06               	movlw	6
  3717  002FAE  0100               	movlb	0	; () banked
  3718  002FB0  6FFB               	movwf	_menu_selected& (0+255),b
  3719  002FB2                     l485:
  3720  002FB2  0012               	return		;funcret
  3721  002FB4                     __end_of_secretMenu:
  3722                           	callstack 0
  3723                           
  3724 ;; *************** function _pauseMenu *****************
  3725 ;; Defined at:
  3726 ;;		line 348 in file "fs_menu_controller.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         0       0       0       0       0       0       0
  3741 ;;      Locals:         0      16       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0
  3743 ;;      Totals:         0      16       0       0       0       0       0
  3744 ;;Total ram usage:       16 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    9
  3747 ;; This function calls:
  3748 ;;		_Lcd_Set_Cursor
  3749 ;;		_Lcd_Write_String
  3750 ;;		_sprintf
  3751 ;;		_stopMotor
  3752 ;; This function is called by:
  3753 ;;		_stateMachine
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text14
  3758  003D1C                     __ptext14:
  3759                           	callstack 0
  3760  003D1C                     _pauseMenu:
  3761                           	callstack 19
  3762  003D1C                     
  3763                           ;fs_menu_controller.c: 350:     char textCursor2[16] = {0};
  3764  003D1C  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3765  003D20  0E0F               	movlw	15
  3766  003D22                     u7321:
  3767  003D22  6ADE               	clrf	postinc2,c
  3768  003D24  06E8               	decf	wreg,f,c
  3769  003D26  E2FD               	bc	u7321
  3770  003D28                     
  3771                           ;fs_menu_controller.c: 352:     startIsClick = 0;
  3772  003D28  0E00               	movlw	0
  3773  003D2A  0100               	movlb	0	; () banked
  3774  003D2C  6FFE               	movwf	_startIsClick& (0+255),b
  3775  003D2E                     
  3776                           ; BSR set to: 0
  3777                           ;fs_menu_controller.c: 356:     Lcd_Set_Cursor(1,1);
  3778  003D2E  0E01               	movlw	1
  3779  003D30  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3780  003D32  0E01               	movlw	1
  3781  003D34  EC3F  F028         	call	_Lcd_Set_Cursor
  3782  003D38                     
  3783                           ;fs_menu_controller.c: 357:     Lcd_Write_String("HAREKET DURDU   ");
  3784  003D38  0E4D               	movlw	low STR_7
  3785  003D3A  6E05               	movwf	Lcd_Write_String@a^0,c
  3786  003D3C  0E7F               	movlw	high STR_7
  3787  003D3E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3788  003D40  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3789  003D44                     
  3790                           ;fs_menu_controller.c: 358:     Lcd_Set_Cursor(2,1);
  3791  003D44  0E01               	movlw	1
  3792  003D46  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3793  003D48  0E02               	movlw	2
  3794  003D4A  EC3F  F028         	call	_Lcd_Set_Cursor
  3795  003D4E                     
  3796                           ;fs_menu_controller.c: 359:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3797  003D4E  0EE1               	movlw	low pauseMenu@textCursor2
  3798  003D50  0100               	movlb	0	; () banked
  3799  003D52  6FCF               	movwf	sprintf@s& (0+255),b
  3800  003D54  0E00               	movlw	high pauseMenu@textCursor2
  3801  003D56  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3802  003D58  0EA1               	movlw	low STR_6
  3803  003D5A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3804  003D5C  0E7F               	movlw	high STR_6
  3805  003D5E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3806  003D60  0101               	movlb	1	; () banked
  3807  003D62  5192               	movf	(_timer_value+3)& (0+255),w,b
  3808  003D64  0100               	movlb	0	; () banked
  3809  003D66  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3810  003D68  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3811  003D6A  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3812  003D6C  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3813  003D6E  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3814  003D72  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3815  003D74  EC27  F029         	call	_sprintf	;wreg free
  3816  003D78                     
  3817                           ;fs_menu_controller.c: 360:     Lcd_Write_String(textCursor2);
  3818  003D78  0EE1               	movlw	low pauseMenu@textCursor2
  3819  003D7A  6E05               	movwf	Lcd_Write_String@a^0,c
  3820  003D7C  0E00               	movlw	high pauseMenu@textCursor2
  3821  003D7E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3822  003D80  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  3823  003D84                     
  3824                           ;fs_menu_controller.c: 362:     if (menu_flags.menu_start_flag == 1)
  3825  003D84  0101               	movlb	1	; () banked
  3826  003D86  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3827  003D88  A4D8               	btfss	status,2,c
  3828  003D8A  EFC9  F01E         	goto	u7331
  3829  003D8E  EFCB  F01E         	goto	u7330
  3830  003D92                     u7331:
  3831  003D92  EFD6  F01E         	goto	l464
  3832  003D96                     u7330:
  3833  003D96                     
  3834                           ; BSR set to: 1
  3835                           ;fs_menu_controller.c: 363:     {;fs_menu_controller.c: 364:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3836  003D96  0E00               	movlw	0
  3837  003D98  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3838                           
  3839                           ;fs_menu_controller.c: 365:         menu_selected = MAIN_MENU;
  3840  003D9A  0E00               	movlw	0
  3841  003D9C  0100               	movlb	0	; () banked
  3842  003D9E  6FFB               	movwf	_menu_selected& (0+255),b
  3843                           
  3844                           ;fs_menu_controller.c: 367:         startIsClick = 1;
  3845  003DA0  0E01               	movlw	1
  3846  003DA2  6FFE               	movwf	_startIsClick& (0+255),b
  3847                           
  3848                           ;fs_menu_controller.c: 368:         pauseIsClick = 0;
  3849  003DA4  0E00               	movlw	0
  3850  003DA6  6FFF               	movwf	_pauseIsClick& (0+255),b
  3851                           
  3852                           ;fs_menu_controller.c: 369:         stopIsClick = 0;
  3853  003DA8  0E00               	movlw	0
  3854  003DAA  6FFD               	movwf	_stopIsClick& (0+255),b
  3855  003DAC                     l464:
  3856                           
  3857                           ;fs_menu_controller.c: 372:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3858  003DAC  0100               	movlb	0	; () banked
  3859  003DAE  51FE               	movf	_startIsClick& (0+255),w,b
  3860  003DB0  A4D8               	btfss	status,2,c
  3861  003DB2  EFDD  F01E         	goto	u7341
  3862  003DB6  EFDF  F01E         	goto	u7340
  3863  003DBA                     u7341:
  3864  003DBA  EF01  F01F         	goto	l6184
  3865  003DBE                     u7340:
  3866  003DBE                     
  3867                           ; BSR set to: 0
  3868  003DBE  51FF               	movf	_pauseIsClick& (0+255),w,b
  3869  003DC0  A4D8               	btfss	status,2,c
  3870  003DC2  EFE5  F01E         	goto	u7351
  3871  003DC6  EFE7  F01E         	goto	u7350
  3872  003DCA                     u7351:
  3873  003DCA  EF01  F01F         	goto	l6184
  3874  003DCE                     u7350:
  3875  003DCE                     
  3876                           ; BSR set to: 0
  3877  003DCE  05FD               	decf	_stopIsClick& (0+255),w,b
  3878  003DD0  A4D8               	btfss	status,2,c
  3879  003DD2  EFED  F01E         	goto	u7361
  3880  003DD6  EFEF  F01E         	goto	u7360
  3881  003DDA                     u7361:
  3882  003DDA  EF01  F01F         	goto	l6184
  3883  003DDE                     u7360:
  3884  003DDE                     
  3885                           ; BSR set to: 0
  3886  003DDE  0E06               	movlw	6
  3887  003DE0  19FB               	xorwf	_menu_selected& (0+255),w,b
  3888  003DE2  A4D8               	btfss	status,2,c
  3889  003DE4  EFF6  F01E         	goto	u7371
  3890  003DE8  EFF8  F01E         	goto	u7370
  3891  003DEC                     u7371:
  3892  003DEC  EF01  F01F         	goto	l6184
  3893  003DF0                     u7370:
  3894  003DF0                     
  3895                           ; BSR set to: 0
  3896                           ;fs_menu_controller.c: 373:     {;fs_menu_controller.c: 374:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3897  003DF0  C0F3  F192         	movff	_menu_value,_timer_value+3
  3898  003DF4                     
  3899                           ; BSR set to: 0
  3900                           ;fs_menu_controller.c: 375:          timer_value.remainingSecond = 0;
  3901  003DF4  0E00               	movlw	0
  3902  003DF6  0101               	movlb	1	; () banked
  3903  003DF8  6F91               	movwf	(_timer_value+2)& (0+255),b
  3904                           
  3905                           ;fs_menu_controller.c: 376:          timer_value.second = 0;
  3906  003DFA  0E00               	movlw	0
  3907  003DFC  6F8F               	movwf	_timer_value& (0+255),b
  3908                           
  3909                           ;fs_menu_controller.c: 377:          timer_value.minute = 0;
  3910  003DFE  0E00               	movlw	0
  3911  003E00  6F90               	movwf	(_timer_value+1)& (0+255),b
  3912  003E02                     l6184:
  3913                           
  3914                           ;fs_menu_controller.c: 380:     if ( timer_value.menu_login_delay == 100)
  3915  003E02  0E64               	movlw	100
  3916  003E04  0101               	movlb	1	; () banked
  3917  003E06  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3918  003E08  A4D8               	btfss	status,2,c
  3919  003E0A  EF09  F01F         	goto	u7381
  3920  003E0E  EF0B  F01F         	goto	u7380
  3921  003E12                     u7381:
  3922  003E12  EF10  F01F         	goto	l6188
  3923  003E16                     u7380:
  3924  003E16                     
  3925                           ; BSR set to: 1
  3926                           ;fs_menu_controller.c: 381:     {;fs_menu_controller.c: 382:         timer_value.menu_lo
      +                          gin_delay = 0;
  3927  003E16  0E00               	movlw	0
  3928  003E18  6F93               	movwf	(_timer_value+4)& (0+255),b
  3929                           
  3930                           ;fs_menu_controller.c: 383:         menu_selected = DRIVER_TIME_SETTING;
  3931  003E1A  0E01               	movlw	1
  3932  003E1C  0100               	movlb	0	; () banked
  3933  003E1E  6FFB               	movwf	_menu_selected& (0+255),b
  3934  003E20                     l6188:
  3935                           
  3936                           ;fs_menu_controller.c: 386:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3937  003E20  0101               	movlb	1	; () banked
  3938  003E22  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3939  003E24  A4D8               	btfss	status,2,c
  3940  003E26  EF17  F01F         	goto	u7391
  3941  003E2A  EF19  F01F         	goto	u7390
  3942  003E2E                     u7391:
  3943  003E2E  EF26  F01F         	goto	l6194
  3944  003E32                     u7390:
  3945  003E32                     
  3946                           ; BSR set to: 1
  3947  003E32  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3948  003E34  A4D8               	btfss	status,2,c
  3949  003E36  EF1F  F01F         	goto	u7401
  3950  003E3A  EF21  F01F         	goto	u7400
  3951  003E3E                     u7401:
  3952  003E3E  EF26  F01F         	goto	l6194
  3953  003E42                     u7400:
  3954  003E42                     
  3955                           ; BSR set to: 1
  3956                           ;fs_menu_controller.c: 387:     {;fs_menu_controller.c: 388:         menu_selected = SEC
      +                          RET_MENU;
  3957  003E42  0E08               	movlw	8
  3958  003E44  0100               	movlb	0	; () banked
  3959  003E46  6FFB               	movwf	_menu_selected& (0+255),b
  3960                           
  3961                           ;fs_menu_controller.c: 389:         secretMenuCounter = 1;
  3962  003E48  0E01               	movlw	1
  3963  003E4A  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3964  003E4C                     l6194:
  3965                           
  3966                           ;fs_menu_controller.c: 391:     stopMotor();
  3967  003E4C  EC63  F02A         	call	_stopMotor	;wreg free
  3968  003E50  0012               	return		;funcret
  3969  003E52                     __end_of_pauseMenu:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _mainMenu *****************
  3973 ;; Defined at:
  3974 ;;		line 245 in file "fs_menu_controller.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3988 ;;      Params:         0       0       0       0       0       0       0
  3989 ;;      Locals:         0      16       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0
  3991 ;;      Totals:         0      16       0       0       0       0       0
  3992 ;;Total ram usage:       16 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    9
  3995 ;; This function calls:
  3996 ;;		_Lcd_Set_Cursor
  3997 ;;		_Lcd_Write_String
  3998 ;;		_sprintf
  3999 ;;		_startMotor
  4000 ;; This function is called by:
  4001 ;;		_stateMachine
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text15
  4006  003708                     __ptext15:
  4007                           	callstack 0
  4008  003708                     _mainMenu:
  4009                           	callstack 19
  4010  003708                     
  4011                           ;fs_menu_controller.c: 247:     char textCursor2[16] = {0};
  4012  003708  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  4013  00370C  0E0F               	movlw	15
  4014  00370E                     u6931:
  4015  00370E  6ADE               	clrf	postinc2,c
  4016  003710  06E8               	decf	wreg,f,c
  4017  003712  E2FD               	bc	u6931
  4018  003714                     
  4019                           ;fs_menu_controller.c: 249:     Lcd_Set_Cursor(1,1);
  4020  003714  0E01               	movlw	1
  4021  003716  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  4022  003718  0E01               	movlw	1
  4023  00371A  EC3F  F028         	call	_Lcd_Set_Cursor
  4024  00371E                     
  4025                           ;fs_menu_controller.c: 250:     Lcd_Write_String("KALAN ZAMAN     ");
  4026  00371E  0E2B               	movlw	low STR_3
  4027  003720  6E05               	movwf	Lcd_Write_String@a^0,c
  4028  003722  0E7F               	movlw	high STR_3
  4029  003724  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  4030  003726  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  4031  00372A                     
  4032                           ;fs_menu_controller.c: 251:     Lcd_Set_Cursor(2,1);
  4033  00372A  0E01               	movlw	1
  4034  00372C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  4035  00372E  0E02               	movlw	2
  4036  003730  EC3F  F028         	call	_Lcd_Set_Cursor
  4037  003734                     
  4038                           ;fs_menu_controller.c: 252:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  4039  003734  0EE1               	movlw	low mainMenu@textCursor2
  4040  003736  0100               	movlb	0	; () banked
  4041  003738  6FCF               	movwf	sprintf@s& (0+255),b
  4042  00373A  0E00               	movlw	high mainMenu@textCursor2
  4043  00373C  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  4044  00373E  0EC1               	movlw	low STR_4
  4045  003740  6FD1               	movwf	sprintf@fmt& (0+255),b
  4046  003742  0E7F               	movlw	high STR_4
  4047  003744  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  4048  003746  0101               	movlb	1	; () banked
  4049  003748  5192               	movf	(_timer_value+3)& (0+255),w,b
  4050  00374A  0100               	movlb	0	; () banked
  4051  00374C  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  4052  00374E  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  4053  003750  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  4054  003752  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  4055  003754  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  4056  003758  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  4057  00375A  EC27  F029         	call	_sprintf	;wreg free
  4058  00375E                     
  4059                           ;fs_menu_controller.c: 253:     Lcd_Write_String(textCursor2);
  4060  00375E  0EE1               	movlw	low mainMenu@textCursor2
  4061  003760  6E05               	movwf	Lcd_Write_String@a^0,c
  4062  003762  0E00               	movlw	high mainMenu@textCursor2
  4063  003764  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  4064  003766  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  4065  00376A                     
  4066                           ;fs_menu_controller.c: 255:     if ( timer_value.menu_login_delay == 100)
  4067  00376A  0E64               	movlw	100
  4068  00376C  0101               	movlb	1	; () banked
  4069  00376E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  4070  003770  A4D8               	btfss	status,2,c
  4071  003772  EFBD  F01B         	goto	u6941
  4072  003776  EFBF  F01B         	goto	u6940
  4073  00377A                     u6941:
  4074  00377A  EFC4  F01B         	goto	l5930
  4075  00377E                     u6940:
  4076  00377E                     
  4077                           ; BSR set to: 1
  4078                           ;fs_menu_controller.c: 256:     {;fs_menu_controller.c: 257:         timer_value.menu_lo
      +                          gin_delay = 0;
  4079  00377E  0E00               	movlw	0
  4080  003780  6F93               	movwf	(_timer_value+4)& (0+255),b
  4081                           
  4082                           ;fs_menu_controller.c: 258:         menu_selected = DRIVER_TIME_SETTING;
  4083  003782  0E01               	movlw	1
  4084  003784  0100               	movlb	0	; () banked
  4085  003786  6FFB               	movwf	_menu_selected& (0+255),b
  4086  003788                     l5930:
  4087                           
  4088                           ;fs_menu_controller.c: 261:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  4089  003788  0101               	movlb	1	; () banked
  4090  00378A  5192               	movf	(_timer_value+3)& (0+255),w,b
  4091  00378C  0A80               	xorlw	128
  4092  00378E  0F7F               	addlw	-129
  4093  003790  B0D8               	btfsc	status,0,c
  4094  003792  EFCD  F01B         	goto	u6951
  4095  003796  EFCF  F01B         	goto	u6950
  4096  00379A                     u6951:
  4097  00379A  EFDD  F01B         	goto	l448
  4098  00379E                     u6950:
  4099  00379E                     
  4100                           ; BSR set to: 1
  4101  00379E  5191               	movf	(_timer_value+2)& (0+255),w,b
  4102  0037A0  A4D8               	btfss	status,2,c
  4103  0037A2  EFD5  F01B         	goto	u6961
  4104  0037A6  EFD7  F01B         	goto	u6960
  4105  0037AA                     u6961:
  4106  0037AA  EFDD  F01B         	goto	l448
  4107  0037AE                     u6960:
  4108  0037AE                     
  4109                           ; BSR set to: 1
  4110                           ;fs_menu_controller.c: 262:     {;fs_menu_controller.c: 263:             menu_selected =
      +                           STOP_MENU;
  4111  0037AE  0E04               	movlw	4
  4112  0037B0  0100               	movlb	0	; () banked
  4113  0037B2  6FFB               	movwf	_menu_selected& (0+255),b
  4114                           
  4115                           ;fs_menu_controller.c: 264:             timer_value.minute = 0;
  4116  0037B4  0E00               	movlw	0
  4117  0037B6  0101               	movlb	1	; () banked
  4118  0037B8  6F90               	movwf	(_timer_value+1)& (0+255),b
  4119  0037BA                     l448:
  4120                           
  4121                           ; BSR set to: 1
  4122                           ;fs_menu_controller.c: 267:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  4123  0037BA  0100               	movlb	0	; () banked
  4124  0037BC  51FE               	movf	_startIsClick& (0+255),w,b
  4125  0037BE  A4D8               	btfss	status,2,c
  4126  0037C0  EFE4  F01B         	goto	u6971
  4127  0037C4  EFE6  F01B         	goto	u6970
  4128  0037C8                     u6971:
  4129  0037C8  EF05  F01C         	goto	l449
  4130  0037CC                     u6970:
  4131  0037CC                     
  4132                           ; BSR set to: 0
  4133  0037CC  05FF               	decf	_pauseIsClick& (0+255),w,b
  4134  0037CE  A4D8               	btfss	status,2,c
  4135  0037D0  EFEC  F01B         	goto	u6981
  4136  0037D4  EFEE  F01B         	goto	u6980
  4137  0037D8                     u6981:
  4138  0037D8  EF05  F01C         	goto	l449
  4139  0037DC                     u6980:
  4140  0037DC                     
  4141                           ; BSR set to: 0
  4142  0037DC  51FD               	movf	_stopIsClick& (0+255),w,b
  4143  0037DE  A4D8               	btfss	status,2,c
  4144  0037E0  EFF4  F01B         	goto	u6991
  4145  0037E4  EFF6  F01B         	goto	u6990
  4146  0037E8                     u6991:
  4147  0037E8  EF05  F01C         	goto	l449
  4148  0037EC                     u6990:
  4149  0037EC                     
  4150                           ; BSR set to: 0
  4151  0037EC  51FB               	movf	_menu_selected& (0+255),w,b
  4152  0037EE  A4D8               	btfss	status,2,c
  4153  0037F0  EFFC  F01B         	goto	u7001
  4154  0037F4  EFFE  F01B         	goto	u7000
  4155  0037F8                     u7001:
  4156  0037F8  EF05  F01C         	goto	l449
  4157  0037FC                     u7000:
  4158  0037FC                     
  4159                           ; BSR set to: 0
  4160                           ;fs_menu_controller.c: 268:     {;fs_menu_controller.c: 269:         menu_selected = PAU
      +                          SE_MENU;
  4161  0037FC  0E06               	movlw	6
  4162  0037FE  6FFB               	movwf	_menu_selected& (0+255),b
  4163  003800                     
  4164                           ; BSR set to: 0
  4165                           ;fs_menu_controller.c: 270:         LATDbits.LATD5 = 0;
  4166  003800  9A8C               	bcf	140,5,c	;volatile
  4167  003802                     
  4168                           ; BSR set to: 0
  4169                           ;fs_menu_controller.c: 271:         LATCbits.LATC5 = 0;
  4170  003802  9A8B               	bcf	139,5,c	;volatile
  4171  003804                     
  4172                           ; BSR set to: 0
  4173                           ;fs_menu_controller.c: 272:         LATCbits.LATC4 = 0;
  4174  003804  988B               	bcf	139,4,c	;volatile
  4175                           
  4176                           ;fs_menu_controller.c: 273:         startIsClick = 0;
  4177  003806  0E00               	movlw	0
  4178  003808  6FFE               	movwf	_startIsClick& (0+255),b
  4179  00380A                     l449:
  4180                           
  4181                           ; BSR set to: 0
  4182                           ;fs_menu_controller.c: 276:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  4183  00380A  51FE               	movf	_startIsClick& (0+255),w,b
  4184  00380C  A4D8               	btfss	status,2,c
  4185  00380E  EF0B  F01C         	goto	u7011
  4186  003812  EF0D  F01C         	goto	u7010
  4187  003816                     u7011:
  4188  003816  EF31  F01C         	goto	l5966
  4189  00381A                     u7010:
  4190  00381A                     
  4191                           ; BSR set to: 0
  4192  00381A  51FF               	movf	_pauseIsClick& (0+255),w,b
  4193  00381C  A4D8               	btfss	status,2,c
  4194  00381E  EF13  F01C         	goto	u7021
  4195  003822  EF15  F01C         	goto	u7020
  4196  003826                     u7021:
  4197  003826  EF31  F01C         	goto	l5966
  4198  00382A                     u7020:
  4199  00382A                     
  4200                           ; BSR set to: 0
  4201  00382A  05FD               	decf	_stopIsClick& (0+255),w,b
  4202  00382C  A4D8               	btfss	status,2,c
  4203  00382E  EF1B  F01C         	goto	u7031
  4204  003832  EF1D  F01C         	goto	u7030
  4205  003836                     u7031:
  4206  003836  EF31  F01C         	goto	l5966
  4207  00383A                     u7030:
  4208  00383A                     
  4209                           ; BSR set to: 0
  4210  00383A  51FB               	movf	_menu_selected& (0+255),w,b
  4211  00383C  A4D8               	btfss	status,2,c
  4212  00383E  EF23  F01C         	goto	u7041
  4213  003842  EF25  F01C         	goto	u7040
  4214  003846                     u7041:
  4215  003846  EF31  F01C         	goto	l5966
  4216  00384A                     u7040:
  4217  00384A                     
  4218                           ; BSR set to: 0
  4219                           ;fs_menu_controller.c: 277:     {;fs_menu_controller.c: 278:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  4220  00384A  C0F3  F192         	movff	_menu_value,_timer_value+3
  4221  00384E                     
  4222                           ; BSR set to: 0
  4223                           ;fs_menu_controller.c: 279:          timer_value.remainingSecond = 0;
  4224  00384E  0E00               	movlw	0
  4225  003850  0101               	movlb	1	; () banked
  4226  003852  6F91               	movwf	(_timer_value+2)& (0+255),b
  4227                           
  4228                           ;fs_menu_controller.c: 280:          timer_value.second = 0;
  4229  003854  0E00               	movlw	0
  4230  003856  6F8F               	movwf	_timer_value& (0+255),b
  4231                           
  4232                           ;fs_menu_controller.c: 281:          timer_value.minute = 0;
  4233  003858  0E00               	movlw	0
  4234  00385A  6F90               	movwf	(_timer_value+1)& (0+255),b
  4235  00385C                     
  4236                           ; BSR set to: 1
  4237                           ;fs_menu_controller.c: 282:          LATDbits.LATD5 = 0;
  4238  00385C  9A8C               	bcf	140,5,c	;volatile
  4239  00385E                     
  4240                           ; BSR set to: 1
  4241                           ;fs_menu_controller.c: 283:          LATCbits.LATC5 = 0;
  4242  00385E  9A8B               	bcf	139,5,c	;volatile
  4243  003860                     
  4244                           ; BSR set to: 1
  4245                           ;fs_menu_controller.c: 284:          LATCbits.LATC4 = 0;
  4246  003860  988B               	bcf	139,4,c	;volatile
  4247  003862                     l5966:
  4248                           
  4249                           ;fs_menu_controller.c: 287:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  4250  003862  0100               	movlb	0	; () banked
  4251  003864  05FE               	decf	_startIsClick& (0+255),w,b
  4252  003866  A4D8               	btfss	status,2,c
  4253  003868  EF38  F01C         	goto	u7051
  4254  00386C  EF3A  F01C         	goto	u7050
  4255  003870                     u7051:
  4256  003870  EF4F  F01C         	goto	l452
  4257  003874                     u7050:
  4258  003874                     
  4259                           ; BSR set to: 0
  4260  003874  51FF               	movf	_pauseIsClick& (0+255),w,b
  4261  003876  A4D8               	btfss	status,2,c
  4262  003878  EF40  F01C         	goto	u7061
  4263  00387C  EF42  F01C         	goto	u7060
  4264  003880                     u7061:
  4265  003880  EF4F  F01C         	goto	l452
  4266  003884                     u7060:
  4267  003884                     
  4268                           ; BSR set to: 0
  4269  003884  51FD               	movf	_stopIsClick& (0+255),w,b
  4270  003886  A4D8               	btfss	status,2,c
  4271  003888  EF48  F01C         	goto	u7071
  4272  00388C  EF4A  F01C         	goto	u7070
  4273  003890                     u7071:
  4274  003890  EF4F  F01C         	goto	l452
  4275  003894                     u7070:
  4276  003894                     
  4277                           ; BSR set to: 0
  4278                           ;fs_menu_controller.c: 288:     {;fs_menu_controller.c: 289:         startMotor();
  4279  003894  ECF1  F02A         	call	_startMotor	;wreg free
  4280  003898                     
  4281                           ;fs_menu_controller.c: 290:         LATDbits.LATD5 = 1;
  4282  003898  8A8C               	bsf	140,5,c	;volatile
  4283  00389A                     
  4284                           ;fs_menu_controller.c: 291:         LATCbits.LATC5 = 1;
  4285  00389A  8A8B               	bsf	139,5,c	;volatile
  4286  00389C                     
  4287                           ;fs_menu_controller.c: 292:         LATCbits.LATC4 = 1;
  4288  00389C  888B               	bsf	139,4,c	;volatile
  4289  00389E                     l452:
  4290  00389E  0012               	return		;funcret
  4291  0038A0                     __end_of_mainMenu:
  4292                           	callstack 0
  4293                           
  4294 ;; *************** function _startMotor *****************
  4295 ;; Defined at:
  4296 ;;		line 93 in file "fs_speed_controller.c"
  4297 ;; Parameters:    Size  Location     Type
  4298 ;;		None
  4299 ;; Auto vars:     Size  Location     Type
  4300 ;;		None
  4301 ;; Return value:  Size  Location     Type
  4302 ;;                  1    wreg      void 
  4303 ;; Registers used:
  4304 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4305 ;; Tracked objects:
  4306 ;;		On entry : 0/0
  4307 ;;		On exit  : 0/0
  4308 ;;		Unchanged: 0/0
  4309 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4310 ;;      Params:         0       0       0       0       0       0       0
  4311 ;;      Locals:         0       0       0       0       0       0       0
  4312 ;;      Temps:          0       0       0       0       0       0       0
  4313 ;;      Totals:         0       0       0       0       0       0       0
  4314 ;;Total ram usage:        0 bytes
  4315 ;; Hardware stack levels used:    1
  4316 ;; Hardware stack levels required when called:    3
  4317 ;; This function calls:
  4318 ;;		_PWM1_setDC
  4319 ;;		_PWM2_setDC
  4320 ;;		_calculatedAverageValue
  4321 ;;		_scanAdcConversion
  4322 ;;		_speedControl
  4323 ;; This function is called by:
  4324 ;;		_mainMenu
  4325 ;; This function uses a non-reentrant model
  4326 ;;
  4327                           
  4328                           	psect	text16
  4329  0055E2                     __ptext16:
  4330                           	callstack 0
  4331  0055E2                     _startMotor:
  4332                           	callstack 24
  4333  0055E2                     
  4334                           ;fs_speed_controller.c: 95:         scanAdcConversion();
  4335  0055E2  EC27  F006         	call	_scanAdcConversion	;wreg free
  4336  0055E6                     
  4337                           ;fs_speed_controller.c: 96:         calculatedAverageValue();
  4338  0055E6  EC8B  F013         	call	_calculatedAverageValue	;wreg free
  4339  0055EA                     
  4340                           ;fs_speed_controller.c: 97:         speedControl(driver_limit.ortalama);
  4341  0055EA  C18B  F058         	movff	_driver_limit+8,speedControl@position
  4342  0055EE  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  4343  0055F2  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  4344  0055F6  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  4345  0055FA  ECCB  F019         	call	_speedControl	;wreg free
  4346                           
  4347                           ;fs_speed_controller.c: 98:         PWM1_setDC(controller.leftMotorSpeed);
  4348  0055FE  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  4349  005602  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  4350  005606  EC5D  F027         	call	_PWM1_setDC	;wreg free
  4351                           
  4352                           ;fs_speed_controller.c: 99:         PWM2_setDC(controller.rightMotorSpeed);
  4353  00560A  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  4354  00560E  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  4355  005612  EC20  F027         	call	_PWM2_setDC	;wreg free
  4356  005616  0012               	return		;funcret
  4357  005618                     __end_of_startMotor:
  4358                           	callstack 0
  4359                           
  4360 ;; *************** function _speedControl *****************
  4361 ;; Defined at:
  4362 ;;		line 36 in file "fs_speed_controller.c"
  4363 ;; Parameters:    Size  Location     Type
  4364 ;;  position        4   87[COMRAM] float 
  4365 ;; Auto vars:     Size  Location     Type
  4366 ;;  pos             4    0        float 
  4367 ;; Return value:  Size  Location     Type
  4368 ;;                  1    wreg      void 
  4369 ;; Registers used:
  4370 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4371 ;; Tracked objects:
  4372 ;;		On entry : 0/0
  4373 ;;		On exit  : 0/0
  4374 ;;		Unchanged: 0/0
  4375 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4376 ;;      Params:         4       0       0       0       0       0       0
  4377 ;;      Locals:         0       4       0       0       0       0       0
  4378 ;;      Temps:          2       0       0       0       0       0       0
  4379 ;;      Totals:         6       4       0       0       0       0       0
  4380 ;;Total ram usage:       10 bytes
  4381 ;; Hardware stack levels used:    1
  4382 ;; Hardware stack levels required when called:    2
  4383 ;; This function calls:
  4384 ;;		___fladd
  4385 ;;		___flmul
  4386 ;;		___fltol
  4387 ;;		___xxtofl
  4388 ;; This function is called by:
  4389 ;;		_startMotor
  4390 ;; This function uses a non-reentrant model
  4391 ;;
  4392                           
  4393                           	psect	text17
  4394  003396                     __ptext17:
  4395                           	callstack 0
  4396  003396                     _speedControl:
  4397                           	callstack 24
  4398  003396                     
  4399                           ;fs_speed_controller.c: 42:     controller.error = (int16_t)(position - 3400.0);
  4400  003396  0E00               	movlw	0
  4401  003398  6E39               	movwf	___fladd@a^0,c
  4402  00339A  0E80               	movlw	128
  4403  00339C  6E3A               	movwf	(___fladd@a+1)^0,c
  4404  00339E  0E54               	movlw	84
  4405  0033A0  6E3B               	movwf	(___fladd@a+2)^0,c
  4406  0033A2  0EC5               	movlw	197
  4407  0033A4  6E3C               	movwf	(___fladd@a+3)^0,c
  4408  0033A6  C058  F035         	movff	speedControl@position,___fladd@b
  4409  0033AA  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4410  0033AE  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4411  0033B2  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4412  0033B6  EC49  F00D         	call	___fladd	;wreg free
  4413  0033BA  C035  F04E         	movff	?___fladd,___fltol@f1
  4414  0033BE  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4415  0033C2  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4416  0033C6  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4417  0033CA  ECD1  F020         	call	___fltol	;wreg free
  4418  0033CE  C04E  F150         	movff	?___fltol,_controller
  4419  0033D2  C04F  F151         	movff	?___fltol+1,_controller+1
  4420  0033D6  0E00               	movlw	0
  4421  0033D8  6E20               	movwf	___flmul@a^0,c
  4422  0033DA  0E00               	movlw	0
  4423  0033DC  6E21               	movwf	(___flmul@a+1)^0,c
  4424  0033DE  0E80               	movlw	128
  4425  0033E0  6E22               	movwf	(___flmul@a+2)^0,c
  4426  0033E2  0E3F               	movlw	63
  4427  0033E4  6E23               	movwf	(___flmul@a+3)^0,c
  4428  0033E6  0101               	movlb	1	; () banked
  4429  0033E8  5152               	movf	(_controller+2)& (0+255),w,b
  4430  0033EA  5D50               	subwf	_controller& (0+255),w,b
  4431  0033EC  6E5C               	movwf	??_speedControl^0,c
  4432  0033EE  5153               	movf	(_controller+3)& (0+255),w,b
  4433  0033F0  5951               	subwfb	(_controller+1)& (0+255),w,b
  4434  0033F2  6E5D               	movwf	(??_speedControl+1)^0,c
  4435  0033F4  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4436  0033F8  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4437  0033FC  0E00               	movlw	0
  4438  0033FE  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4439  003400  0EFF               	movlw	-1
  4440  003402  6E10               	movwf	(___xxtofl@val+2)^0,c
  4441  003404  6E11               	movwf	(___xxtofl@val+3)^0,c
  4442  003406  0E01               	movlw	1
  4443  003408  ECAA  F01A         	call	___xxtofl
  4444  00340C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4445  003410  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4446  003414  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4447  003418  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4448  00341C  ECA9  F00F         	call	___flmul	;wreg free
  4449  003420  C01C  F039         	movff	?___flmul,___fladd@a
  4450  003424  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4451  003428  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4452  00342C  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4453  003430  0ECD               	movlw	205
  4454  003432  6E20               	movwf	___flmul@a^0,c
  4455  003434  0ECC               	movlw	204
  4456  003436  6E21               	movwf	(___flmul@a+1)^0,c
  4457  003438  0E4C               	movlw	76
  4458  00343A  6E22               	movwf	(___flmul@a+2)^0,c
  4459  00343C  0E3E               	movlw	62
  4460  00343E  6E23               	movwf	(___flmul@a+3)^0,c
  4461  003440  C150  F00E         	movff	_controller,___xxtofl@val
  4462  003444  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4463  003448  0E00               	movlw	0
  4464  00344A  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4465  00344C  0EFF               	movlw	-1
  4466  00344E  6E10               	movwf	(___xxtofl@val+2)^0,c
  4467  003450  6E11               	movwf	(___xxtofl@val+3)^0,c
  4468  003452  0E01               	movlw	1
  4469  003454  ECAA  F01A         	call	___xxtofl
  4470  003458  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4471  00345C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4472  003460  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4473  003464  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4474  003468  ECA9  F00F         	call	___flmul	;wreg free
  4475  00346C  C01C  F035         	movff	?___flmul,___fladd@b
  4476  003470  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4477  003474  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4478  003478  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4479  00347C  EC49  F00D         	call	___fladd	;wreg free
  4480  003480  C035  F04E         	movff	?___fladd,___fltol@f1
  4481  003484  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4482  003488  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4483  00348C  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4484  003490  ECD1  F020         	call	___fltol	;wreg free
  4485  003494  C04E  F154         	movff	?___fltol,_controller+4
  4486  003498  C04F  F155         	movff	?___fltol+1,_controller+5
  4487  00349C                     
  4488                           ;fs_speed_controller.c: 44:     controller.lastError = controller.error;
  4489  00349C  C150  F152         	movff	_controller,_controller+2
  4490  0034A0  C151  F153         	movff	_controller+1,_controller+3
  4491  0034A4                     
  4492                           ;fs_speed_controller.c: 46:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4493  0034A4  0E0E               	movlw	14
  4494  0034A6  0101               	movlb	1	; () banked
  4495  0034A8  2554               	addwf	(_controller+4)& (0+255),w,b
  4496  0034AA  6F56               	movwf	(_controller+6)& (0+255),b
  4497  0034AC  0E01               	movlw	1
  4498  0034AE  2155               	addwfc	(_controller+5)& (0+255),w,b
  4499  0034B0  6F57               	movwf	(_controller+7)& (0+255),b
  4500  0034B2                     
  4501                           ; BSR set to: 1
  4502                           ;fs_speed_controller.c: 47:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4503  0034B2  5154               	movf	(_controller+4)& (0+255),w,b
  4504  0034B4  08C8               	sublw	200
  4505  0034B6  6F58               	movwf	(_controller+8)& (0+255),b
  4506  0034B8  5155               	movf	(_controller+5)& (0+255),w,b
  4507  0034BA  A0D8               	btfss	status,0,c
  4508  0034BC  2AE8               	incf	wreg,f,c
  4509  0034BE  0800               	sublw	0
  4510  0034C0  6F59               	movwf	(_controller+9)& (0+255),b
  4511  0034C2                     
  4512                           ; BSR set to: 1
  4513                           ;fs_speed_controller.c: 49:     if (controller.leftMotorSpeed < 50)
  4514  0034C2  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4515  0034C4  EF6F  F01A         	goto	u6820
  4516  0034C8  5157               	movf	(_controller+7)& (0+255),w,b
  4517  0034CA  E107               	bnz	u6821
  4518  0034CC  0E32               	movlw	50
  4519  0034CE  5D56               	subwf	(_controller+6)& (0+255),w,b
  4520  0034D0  B0D8               	btfsc	status,0,c
  4521  0034D2  EF6D  F01A         	goto	u6821
  4522  0034D6  EF6F  F01A         	goto	u6820
  4523  0034DA                     u6821:
  4524  0034DA  EF73  F01A         	goto	l5830
  4525  0034DE                     u6820:
  4526  0034DE                     
  4527                           ; BSR set to: 1
  4528                           ;fs_speed_controller.c: 50:     {;fs_speed_controller.c: 51:         controller.leftMoto
      +                          rSpeed = 50;
  4529  0034DE  0E00               	movlw	0
  4530  0034E0  6F57               	movwf	(_controller+7)& (0+255),b
  4531  0034E2  0E32               	movlw	50
  4532  0034E4  6F56               	movwf	(_controller+6)& (0+255),b
  4533  0034E6                     l5830:
  4534                           
  4535                           ; BSR set to: 1
  4536                           ;fs_speed_controller.c: 54:     if (controller.rightMotorSpeed < 50)
  4537  0034E6  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4538  0034E8  EF81  F01A         	goto	u6830
  4539  0034EC  5159               	movf	(_controller+9)& (0+255),w,b
  4540  0034EE  E107               	bnz	u6831
  4541  0034F0  0E32               	movlw	50
  4542  0034F2  5D58               	subwf	(_controller+8)& (0+255),w,b
  4543  0034F4  B0D8               	btfsc	status,0,c
  4544  0034F6  EF7F  F01A         	goto	u6831
  4545  0034FA  EF81  F01A         	goto	u6830
  4546  0034FE                     u6831:
  4547  0034FE  EF85  F01A         	goto	l5834
  4548  003502                     u6830:
  4549  003502                     
  4550                           ; BSR set to: 1
  4551                           ;fs_speed_controller.c: 55:     {;fs_speed_controller.c: 56:       controller.rightMotor
      +                          Speed = 50;
  4552  003502  0E00               	movlw	0
  4553  003504  6F59               	movwf	(_controller+9)& (0+255),b
  4554  003506  0E32               	movlw	50
  4555  003508  6F58               	movwf	(_controller+8)& (0+255),b
  4556  00350A                     l5834:
  4557                           
  4558                           ; BSR set to: 1
  4559                           ;fs_speed_controller.c: 59:     if (controller.leftMotorSpeed > 350)
  4560  00350A  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4561  00350C  EF91  F01A         	goto	u6841
  4562  003510  0E5F               	movlw	95
  4563  003512  5D56               	subwf	(_controller+6)& (0+255),w,b
  4564  003514  0E01               	movlw	1
  4565  003516  5957               	subwfb	(_controller+7)& (0+255),w,b
  4566  003518  A0D8               	btfss	status,0,c
  4567  00351A  EF91  F01A         	goto	u6841
  4568  00351E  EF93  F01A         	goto	u6840
  4569  003522                     u6841:
  4570  003522  EF97  F01A         	goto	l5838
  4571  003526                     u6840:
  4572  003526                     
  4573                           ; BSR set to: 1
  4574                           ;fs_speed_controller.c: 60:    {;fs_speed_controller.c: 61:         controller.leftMotor
      +                          Speed = 350;
  4575  003526  0E01               	movlw	1
  4576  003528  6F57               	movwf	(_controller+7)& (0+255),b
  4577  00352A  0E5E               	movlw	94
  4578  00352C  6F56               	movwf	(_controller+6)& (0+255),b
  4579  00352E                     l5838:
  4580                           
  4581                           ; BSR set to: 1
  4582                           ;fs_speed_controller.c: 64:     if (controller.rightMotorSpeed > 350)
  4583  00352E  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4584  003530  EFA3  F01A         	goto	u6851
  4585  003534  0E5F               	movlw	95
  4586  003536  5D58               	subwf	(_controller+8)& (0+255),w,b
  4587  003538  0E01               	movlw	1
  4588  00353A  5959               	subwfb	(_controller+9)& (0+255),w,b
  4589  00353C  A0D8               	btfss	status,0,c
  4590  00353E  EFA3  F01A         	goto	u6851
  4591  003542  EFA5  F01A         	goto	u6850
  4592  003546                     u6851:
  4593  003546  EFA9  F01A         	goto	l627
  4594  00354A                     u6850:
  4595  00354A                     
  4596                           ; BSR set to: 1
  4597                           ;fs_speed_controller.c: 65:     {;fs_speed_controller.c: 66:         controller.rightMot
      +                          orSpeed = 350;
  4598  00354A  0E01               	movlw	1
  4599  00354C  6F59               	movwf	(_controller+9)& (0+255),b
  4600  00354E  0E5E               	movlw	94
  4601  003550  6F58               	movwf	(_controller+8)& (0+255),b
  4602  003552                     l627:
  4603                           
  4604                           ; BSR set to: 1
  4605  003552  0012               	return		;funcret
  4606  003554                     __end_of_speedControl:
  4607                           	callstack 0
  4608                           
  4609 ;; *************** function _scanAdcConversion *****************
  4610 ;; Defined at:
  4611 ;;		line 93 in file "fs_adc.c"
  4612 ;; Parameters:    Size  Location     Type
  4613 ;;		None
  4614 ;; Auto vars:     Size  Location     Type
  4615 ;;		None
  4616 ;; Return value:  Size  Location     Type
  4617 ;;                  1    wreg      void 
  4618 ;; Registers used:
  4619 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4620 ;; Tracked objects:
  4621 ;;		On entry : 0/0
  4622 ;;		On exit  : 0/0
  4623 ;;		Unchanged: 0/0
  4624 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4625 ;;      Params:         0       0       0       0       0       0       0
  4626 ;;      Locals:         0       0       0       0       0       0       0
  4627 ;;      Temps:          2       0       0       0       0       0       0
  4628 ;;      Totals:         2       0       0       0       0       0       0
  4629 ;;Total ram usage:        2 bytes
  4630 ;; Hardware stack levels used:    1
  4631 ;; Hardware stack levels required when called:    2
  4632 ;; This function calls:
  4633 ;;		___fldiv
  4634 ;;		___flmul
  4635 ;;		___fltol
  4636 ;;		___xxtofl
  4637 ;;		_readAdcValue
  4638 ;; This function is called by:
  4639 ;;		_startMotor
  4640 ;; This function uses a non-reentrant model
  4641 ;;
  4642                           
  4643                           	psect	text18
  4644  000C4E                     __ptext18:
  4645                           	callstack 0
  4646  000C4E                     _scanAdcConversion:
  4647                           	callstack 24
  4648  000C4E                     
  4649                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  4650  000C4E  EFFB  F009         	goto	l5748
  4651  000C52                     l5696:
  4652                           
  4653                           ; BSR set to: 1
  4654                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4655  000C52  0E00               	movlw	0
  4656  000C54  ECE3  F029         	call	_readAdcValue
  4657  000C58  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4658  000C5C  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4659  000C60                     
  4660                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4661  000C60  0E00               	movlw	0
  4662  000C62  6E20               	movwf	___flmul@a^0,c
  4663  000C64  0E00               	movlw	0
  4664  000C66  6E21               	movwf	(___flmul@a+1)^0,c
  4665  000C68  0EA0               	movlw	160
  4666  000C6A  6E22               	movwf	(___flmul@a+2)^0,c
  4667  000C6C  0E40               	movlw	64
  4668  000C6E  6E23               	movwf	(___flmul@a+3)^0,c
  4669  000C70  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4670  000C74  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4671  000C78  6A10               	clrf	(___xxtofl@val+2)^0,c
  4672  000C7A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4673  000C7C  0E00               	movlw	0
  4674  000C7E  ECAA  F01A         	call	___xxtofl
  4675  000C82  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4676  000C86  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4677  000C8A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4678  000C8E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4679  000C92  ECA9  F00F         	call	___flmul	;wreg free
  4680  000C96  C01C  F035         	movff	?___flmul,___fldiv@b
  4681  000C9A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4682  000C9E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4683  000CA2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4684  000CA6  0E00               	movlw	0
  4685  000CA8  6E39               	movwf	___fldiv@a^0,c
  4686  000CAA  0E00               	movlw	0
  4687  000CAC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4688  000CAE  0E80               	movlw	128
  4689  000CB0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4690  000CB2  0E44               	movlw	68
  4691  000CB4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4692  000CB6  ECBE  F011         	call	___fldiv	;wreg free
  4693  000CBA  C035  F130         	movff	?___fldiv,_procces_data
  4694  000CBE  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4695  000CC2  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4696  000CC6  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4697  000CCA                     
  4698                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4699  000CCA  0E00               	movlw	0
  4700  000CCC  6E39               	movwf	___fldiv@a^0,c
  4701  000CCE  0E00               	movlw	0
  4702  000CD0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4703  000CD2  0EA0               	movlw	160
  4704  000CD4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4705  000CD6  0E40               	movlw	64
  4706  000CD8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4707  000CDA  0E00               	movlw	0
  4708  000CDC  6E20               	movwf	___flmul@a^0,c
  4709  000CDE  0EC0               	movlw	192
  4710  000CE0  6E21               	movwf	(___flmul@a+1)^0,c
  4711  000CE2  0E79               	movlw	121
  4712  000CE4  6E22               	movwf	(___flmul@a+2)^0,c
  4713  000CE6  0E44               	movlw	68
  4714  000CE8  6E23               	movwf	(___flmul@a+3)^0,c
  4715  000CEA  C130  F01C         	movff	_procces_data,___flmul@b
  4716  000CEE  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4717  000CF2  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4718  000CF6  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4719  000CFA  ECA9  F00F         	call	___flmul	;wreg free
  4720  000CFE  C01C  F035         	movff	?___flmul,___fldiv@b
  4721  000D02  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4722  000D06  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4723  000D0A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4724  000D0E  ECBE  F011         	call	___fldiv	;wreg free
  4725  000D12  C035  F04E         	movff	?___fldiv,___fltol@f1
  4726  000D16  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4727  000D1A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4728  000D1E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4729  000D22  ECD1  F020         	call	___fltol	;wreg free
  4730  000D26  C04E  F100         	movff	?___fltol,_convert_data
  4731  000D2A  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4732  000D2E  C050  F102         	movff	?___fltol+2,_convert_data+2
  4733  000D32  C051  F103         	movff	?___fltol+3,_convert_data+3
  4734                           
  4735                           ;fs_adc.c: 101:         break;
  4736  000D36  EF29  F00A         	goto	l76
  4737  000D3A                     l5702:
  4738                           
  4739                           ; BSR set to: 1
  4740                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4741  000D3A  0E01               	movlw	1
  4742  000D3C  ECE3  F029         	call	_readAdcValue
  4743  000D40  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4744  000D44  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4745  000D48                     
  4746                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4747  000D48  0E00               	movlw	0
  4748  000D4A  6E20               	movwf	___flmul@a^0,c
  4749  000D4C  0E00               	movlw	0
  4750  000D4E  6E21               	movwf	(___flmul@a+1)^0,c
  4751  000D50  0EA0               	movlw	160
  4752  000D52  6E22               	movwf	(___flmul@a+2)^0,c
  4753  000D54  0E40               	movlw	64
  4754  000D56  6E23               	movwf	(___flmul@a+3)^0,c
  4755  000D58  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4756  000D5C  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4757  000D60  6A10               	clrf	(___xxtofl@val+2)^0,c
  4758  000D62  6A11               	clrf	(___xxtofl@val+3)^0,c
  4759  000D64  0E00               	movlw	0
  4760  000D66  ECAA  F01A         	call	___xxtofl
  4761  000D6A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4762  000D6E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4763  000D72  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4764  000D76  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4765  000D7A  ECA9  F00F         	call	___flmul	;wreg free
  4766  000D7E  C01C  F035         	movff	?___flmul,___fldiv@b
  4767  000D82  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4768  000D86  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4769  000D8A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4770  000D8E  0E00               	movlw	0
  4771  000D90  6E39               	movwf	___fldiv@a^0,c
  4772  000D92  0E00               	movlw	0
  4773  000D94  6E3A               	movwf	(___fldiv@a+1)^0,c
  4774  000D96  0E80               	movlw	128
  4775  000D98  6E3B               	movwf	(___fldiv@a+2)^0,c
  4776  000D9A  0E44               	movlw	68
  4777  000D9C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4778  000D9E  ECBE  F011         	call	___fldiv	;wreg free
  4779  000DA2  C035  F134         	movff	?___fldiv,_procces_data+4
  4780  000DA6  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4781  000DAA  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4782  000DAE  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4783  000DB2                     
  4784                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4785  000DB2  0E00               	movlw	0
  4786  000DB4  6E39               	movwf	___fldiv@a^0,c
  4787  000DB6  0E00               	movlw	0
  4788  000DB8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4789  000DBA  0EA0               	movlw	160
  4790  000DBC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4791  000DBE  0E40               	movlw	64
  4792  000DC0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4793  000DC2  0E00               	movlw	0
  4794  000DC4  6E20               	movwf	___flmul@a^0,c
  4795  000DC6  0EC0               	movlw	192
  4796  000DC8  6E21               	movwf	(___flmul@a+1)^0,c
  4797  000DCA  0E79               	movlw	121
  4798  000DCC  6E22               	movwf	(___flmul@a+2)^0,c
  4799  000DCE  0E44               	movlw	68
  4800  000DD0  6E23               	movwf	(___flmul@a+3)^0,c
  4801  000DD2  C134  F01C         	movff	_procces_data+4,___flmul@b
  4802  000DD6  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4803  000DDA  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4804  000DDE  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4805  000DE2  ECA9  F00F         	call	___flmul	;wreg free
  4806  000DE6  C01C  F035         	movff	?___flmul,___fldiv@b
  4807  000DEA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4808  000DEE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4809  000DF2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4810  000DF6  ECBE  F011         	call	___fldiv	;wreg free
  4811  000DFA  C035  F04E         	movff	?___fldiv,___fltol@f1
  4812  000DFE  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4813  000E02  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4814  000E06  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4815  000E0A  ECD1  F020         	call	___fltol	;wreg free
  4816  000E0E  C04E  F104         	movff	?___fltol,_convert_data+4
  4817  000E12  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4818  000E16  C050  F106         	movff	?___fltol+2,_convert_data+6
  4819  000E1A  C051  F107         	movff	?___fltol+3,_convert_data+7
  4820                           
  4821                           ;fs_adc.c: 107:         break;
  4822  000E1E  EF29  F00A         	goto	l76
  4823  000E22                     l5708:
  4824                           
  4825                           ; BSR set to: 1
  4826                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4827  000E22  0E02               	movlw	2
  4828  000E24  ECE3  F029         	call	_readAdcValue
  4829  000E28  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4830  000E2C  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4831  000E30                     
  4832                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4833  000E30  0E00               	movlw	0
  4834  000E32  6E20               	movwf	___flmul@a^0,c
  4835  000E34  0E00               	movlw	0
  4836  000E36  6E21               	movwf	(___flmul@a+1)^0,c
  4837  000E38  0EA0               	movlw	160
  4838  000E3A  6E22               	movwf	(___flmul@a+2)^0,c
  4839  000E3C  0E40               	movlw	64
  4840  000E3E  6E23               	movwf	(___flmul@a+3)^0,c
  4841  000E40  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4842  000E44  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4843  000E48  6A10               	clrf	(___xxtofl@val+2)^0,c
  4844  000E4A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4845  000E4C  0E00               	movlw	0
  4846  000E4E  ECAA  F01A         	call	___xxtofl
  4847  000E52  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4848  000E56  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4849  000E5A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4850  000E5E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4851  000E62  ECA9  F00F         	call	___flmul	;wreg free
  4852  000E66  C01C  F035         	movff	?___flmul,___fldiv@b
  4853  000E6A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4854  000E6E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4855  000E72  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4856  000E76  0E00               	movlw	0
  4857  000E78  6E39               	movwf	___fldiv@a^0,c
  4858  000E7A  0E00               	movlw	0
  4859  000E7C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4860  000E7E  0E80               	movlw	128
  4861  000E80  6E3B               	movwf	(___fldiv@a+2)^0,c
  4862  000E82  0E44               	movlw	68
  4863  000E84  6E3C               	movwf	(___fldiv@a+3)^0,c
  4864  000E86  ECBE  F011         	call	___fldiv	;wreg free
  4865  000E8A  C035  F138         	movff	?___fldiv,_procces_data+8
  4866  000E8E  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4867  000E92  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4868  000E96  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4869  000E9A                     
  4870                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4871  000E9A  0E00               	movlw	0
  4872  000E9C  6E39               	movwf	___fldiv@a^0,c
  4873  000E9E  0E00               	movlw	0
  4874  000EA0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4875  000EA2  0EA0               	movlw	160
  4876  000EA4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4877  000EA6  0E40               	movlw	64
  4878  000EA8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4879  000EAA  0E00               	movlw	0
  4880  000EAC  6E20               	movwf	___flmul@a^0,c
  4881  000EAE  0EC0               	movlw	192
  4882  000EB0  6E21               	movwf	(___flmul@a+1)^0,c
  4883  000EB2  0E79               	movlw	121
  4884  000EB4  6E22               	movwf	(___flmul@a+2)^0,c
  4885  000EB6  0E44               	movlw	68
  4886  000EB8  6E23               	movwf	(___flmul@a+3)^0,c
  4887  000EBA  C138  F01C         	movff	_procces_data+8,___flmul@b
  4888  000EBE  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4889  000EC2  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4890  000EC6  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4891  000ECA  ECA9  F00F         	call	___flmul	;wreg free
  4892  000ECE  C01C  F035         	movff	?___flmul,___fldiv@b
  4893  000ED2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4894  000ED6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4895  000EDA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4896  000EDE  ECBE  F011         	call	___fldiv	;wreg free
  4897  000EE2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4898  000EE6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4899  000EEA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4900  000EEE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4901  000EF2  ECD1  F020         	call	___fltol	;wreg free
  4902  000EF6  C04E  F108         	movff	?___fltol,_convert_data+8
  4903  000EFA  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4904  000EFE  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4905  000F02  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4906  000F06                     
  4907                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4908  000F06  0E00               	movlw	0
  4909  000F08  6E39               	movwf	___fldiv@a^0,c
  4910  000F0A  0E00               	movlw	0
  4911  000F0C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4912  000F0E  0EA0               	movlw	160
  4913  000F10  6E3B               	movwf	(___fldiv@a+2)^0,c
  4914  000F12  0E40               	movlw	64
  4915  000F14  6E3C               	movwf	(___fldiv@a+3)^0,c
  4916  000F16  0E00               	movlw	0
  4917  000F18  6E20               	movwf	___flmul@a^0,c
  4918  000F1A  0EC0               	movlw	192
  4919  000F1C  6E21               	movwf	(___flmul@a+1)^0,c
  4920  000F1E  0E79               	movlw	121
  4921  000F20  6E22               	movwf	(___flmul@a+2)^0,c
  4922  000F22  0E44               	movlw	68
  4923  000F24  6E23               	movwf	(___flmul@a+3)^0,c
  4924  000F26  C138  F01C         	movff	_procces_data+8,___flmul@b
  4925  000F2A  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4926  000F2E  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4927  000F32  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4928  000F36  ECA9  F00F         	call	___flmul	;wreg free
  4929  000F3A  C01C  F035         	movff	?___flmul,___fldiv@b
  4930  000F3E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4931  000F42  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4932  000F46  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4933  000F4A  ECBE  F011         	call	___fldiv	;wreg free
  4934  000F4E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4935  000F52  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4936  000F56  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4937  000F5A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4938  000F5E  ECD1  F020         	call	___fltol	;wreg free
  4939  000F62  C04E  F124         	movff	?___fltol,_convert_data+36
  4940  000F66  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4941                           
  4942                           ;fs_adc.c: 114:         break;
  4943  000F6A  EF29  F00A         	goto	l76
  4944  000F6E                     l5716:
  4945                           
  4946                           ; BSR set to: 1
  4947                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4948  000F6E  0E03               	movlw	3
  4949  000F70  ECE3  F029         	call	_readAdcValue
  4950  000F74  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4951  000F78  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4952  000F7C                     
  4953                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4954  000F7C  0E00               	movlw	0
  4955  000F7E  6E20               	movwf	___flmul@a^0,c
  4956  000F80  0E00               	movlw	0
  4957  000F82  6E21               	movwf	(___flmul@a+1)^0,c
  4958  000F84  0EA0               	movlw	160
  4959  000F86  6E22               	movwf	(___flmul@a+2)^0,c
  4960  000F88  0E40               	movlw	64
  4961  000F8A  6E23               	movwf	(___flmul@a+3)^0,c
  4962  000F8C  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4963  000F90  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4964  000F94  6A10               	clrf	(___xxtofl@val+2)^0,c
  4965  000F96  6A11               	clrf	(___xxtofl@val+3)^0,c
  4966  000F98  0E00               	movlw	0
  4967  000F9A  ECAA  F01A         	call	___xxtofl
  4968  000F9E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4969  000FA2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4970  000FA6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4971  000FAA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4972  000FAE  ECA9  F00F         	call	___flmul	;wreg free
  4973  000FB2  C01C  F035         	movff	?___flmul,___fldiv@b
  4974  000FB6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4975  000FBA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4976  000FBE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4977  000FC2  0E00               	movlw	0
  4978  000FC4  6E39               	movwf	___fldiv@a^0,c
  4979  000FC6  0E00               	movlw	0
  4980  000FC8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4981  000FCA  0E80               	movlw	128
  4982  000FCC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4983  000FCE  0E44               	movlw	68
  4984  000FD0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4985  000FD2  ECBE  F011         	call	___fldiv	;wreg free
  4986  000FD6  C035  F13C         	movff	?___fldiv,_procces_data+12
  4987  000FDA  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4988  000FDE  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4989  000FE2  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4990  000FE6                     
  4991                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4992  000FE6  0E00               	movlw	0
  4993  000FE8  6E39               	movwf	___fldiv@a^0,c
  4994  000FEA  0E00               	movlw	0
  4995  000FEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4996  000FEE  0EA0               	movlw	160
  4997  000FF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4998  000FF2  0E40               	movlw	64
  4999  000FF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  5000  000FF6  0E00               	movlw	0
  5001  000FF8  6E20               	movwf	___flmul@a^0,c
  5002  000FFA  0EC0               	movlw	192
  5003  000FFC  6E21               	movwf	(___flmul@a+1)^0,c
  5004  000FFE  0E79               	movlw	121
  5005  001000  6E22               	movwf	(___flmul@a+2)^0,c
  5006  001002  0E44               	movlw	68
  5007  001004  6E23               	movwf	(___flmul@a+3)^0,c
  5008  001006  C13C  F01C         	movff	_procces_data+12,___flmul@b
  5009  00100A  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  5010  00100E  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  5011  001012  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  5012  001016  ECA9  F00F         	call	___flmul	;wreg free
  5013  00101A  C01C  F035         	movff	?___flmul,___fldiv@b
  5014  00101E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5015  001022  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5016  001026  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5017  00102A  ECBE  F011         	call	___fldiv	;wreg free
  5018  00102E  C035  F04E         	movff	?___fldiv,___fltol@f1
  5019  001032  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5020  001036  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5021  00103A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5022  00103E  ECD1  F020         	call	___fltol	;wreg free
  5023  001042  C04E  F10C         	movff	?___fltol,_convert_data+12
  5024  001046  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  5025  00104A  C050  F10E         	movff	?___fltol+2,_convert_data+14
  5026  00104E  C051  F10F         	movff	?___fltol+3,_convert_data+15
  5027                           
  5028                           ;fs_adc.c: 120:         break;
  5029  001052  EF29  F00A         	goto	l76
  5030  001056                     l5722:
  5031                           
  5032                           ; BSR set to: 1
  5033                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  5034  001056  0E04               	movlw	4
  5035  001058  ECE3  F029         	call	_readAdcValue
  5036  00105C  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  5037  001060  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  5038  001064                     
  5039                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  5040  001064  0E00               	movlw	0
  5041  001066  6E20               	movwf	___flmul@a^0,c
  5042  001068  0E00               	movlw	0
  5043  00106A  6E21               	movwf	(___flmul@a+1)^0,c
  5044  00106C  0EA0               	movlw	160
  5045  00106E  6E22               	movwf	(___flmul@a+2)^0,c
  5046  001070  0E40               	movlw	64
  5047  001072  6E23               	movwf	(___flmul@a+3)^0,c
  5048  001074  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  5049  001078  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  5050  00107C  6A10               	clrf	(___xxtofl@val+2)^0,c
  5051  00107E  6A11               	clrf	(___xxtofl@val+3)^0,c
  5052  001080  0E00               	movlw	0
  5053  001082  ECAA  F01A         	call	___xxtofl
  5054  001086  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5055  00108A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5056  00108E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5057  001092  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5058  001096  ECA9  F00F         	call	___flmul	;wreg free
  5059  00109A  C01C  F035         	movff	?___flmul,___fldiv@b
  5060  00109E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5061  0010A2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5062  0010A6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5063  0010AA  0E00               	movlw	0
  5064  0010AC  6E39               	movwf	___fldiv@a^0,c
  5065  0010AE  0E00               	movlw	0
  5066  0010B0  6E3A               	movwf	(___fldiv@a+1)^0,c
  5067  0010B2  0E80               	movlw	128
  5068  0010B4  6E3B               	movwf	(___fldiv@a+2)^0,c
  5069  0010B6  0E44               	movlw	68
  5070  0010B8  6E3C               	movwf	(___fldiv@a+3)^0,c
  5071  0010BA  ECBE  F011         	call	___fldiv	;wreg free
  5072  0010BE  C035  F140         	movff	?___fldiv,_procces_data+16
  5073  0010C2  C036  F141         	movff	?___fldiv+1,_procces_data+17
  5074  0010C6  C037  F142         	movff	?___fldiv+2,_procces_data+18
  5075  0010CA  C038  F143         	movff	?___fldiv+3,_procces_data+19
  5076  0010CE                     
  5077                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  5078  0010CE  0E00               	movlw	0
  5079  0010D0  6E39               	movwf	___fldiv@a^0,c
  5080  0010D2  0E00               	movlw	0
  5081  0010D4  6E3A               	movwf	(___fldiv@a+1)^0,c
  5082  0010D6  0EA0               	movlw	160
  5083  0010D8  6E3B               	movwf	(___fldiv@a+2)^0,c
  5084  0010DA  0E40               	movlw	64
  5085  0010DC  6E3C               	movwf	(___fldiv@a+3)^0,c
  5086  0010DE  0E00               	movlw	0
  5087  0010E0  6E20               	movwf	___flmul@a^0,c
  5088  0010E2  0EC0               	movlw	192
  5089  0010E4  6E21               	movwf	(___flmul@a+1)^0,c
  5090  0010E6  0E79               	movlw	121
  5091  0010E8  6E22               	movwf	(___flmul@a+2)^0,c
  5092  0010EA  0E44               	movlw	68
  5093  0010EC  6E23               	movwf	(___flmul@a+3)^0,c
  5094  0010EE  C140  F01C         	movff	_procces_data+16,___flmul@b
  5095  0010F2  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  5096  0010F6  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  5097  0010FA  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  5098  0010FE  ECA9  F00F         	call	___flmul	;wreg free
  5099  001102  C01C  F035         	movff	?___flmul,___fldiv@b
  5100  001106  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5101  00110A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5102  00110E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5103  001112  ECBE  F011         	call	___fldiv	;wreg free
  5104  001116  C035  F04E         	movff	?___fldiv,___fltol@f1
  5105  00111A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5106  00111E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5107  001122  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5108  001126  ECD1  F020         	call	___fltol	;wreg free
  5109  00112A  C04E  F110         	movff	?___fltol,_convert_data+16
  5110  00112E  C04F  F111         	movff	?___fltol+1,_convert_data+17
  5111  001132  C050  F112         	movff	?___fltol+2,_convert_data+18
  5112  001136  C051  F113         	movff	?___fltol+3,_convert_data+19
  5113                           
  5114                           ;fs_adc.c: 126:         break;
  5115  00113A  EF29  F00A         	goto	l76
  5116  00113E                     l5728:
  5117                           
  5118                           ; BSR set to: 1
  5119                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  5120  00113E  0E05               	movlw	5
  5121  001140  ECE3  F029         	call	_readAdcValue
  5122  001144  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  5123  001148  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  5124  00114C                     
  5125                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  5126  00114C  0E00               	movlw	0
  5127  00114E  6E20               	movwf	___flmul@a^0,c
  5128  001150  0E00               	movlw	0
  5129  001152  6E21               	movwf	(___flmul@a+1)^0,c
  5130  001154  0EA0               	movlw	160
  5131  001156  6E22               	movwf	(___flmul@a+2)^0,c
  5132  001158  0E40               	movlw	64
  5133  00115A  6E23               	movwf	(___flmul@a+3)^0,c
  5134  00115C  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  5135  001160  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  5136  001164  6A10               	clrf	(___xxtofl@val+2)^0,c
  5137  001166  6A11               	clrf	(___xxtofl@val+3)^0,c
  5138  001168  0E00               	movlw	0
  5139  00116A  ECAA  F01A         	call	___xxtofl
  5140  00116E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5141  001172  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5142  001176  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5143  00117A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5144  00117E  ECA9  F00F         	call	___flmul	;wreg free
  5145  001182  C01C  F035         	movff	?___flmul,___fldiv@b
  5146  001186  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5147  00118A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5148  00118E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5149  001192  0E00               	movlw	0
  5150  001194  6E39               	movwf	___fldiv@a^0,c
  5151  001196  0E00               	movlw	0
  5152  001198  6E3A               	movwf	(___fldiv@a+1)^0,c
  5153  00119A  0E80               	movlw	128
  5154  00119C  6E3B               	movwf	(___fldiv@a+2)^0,c
  5155  00119E  0E44               	movlw	68
  5156  0011A0  6E3C               	movwf	(___fldiv@a+3)^0,c
  5157  0011A2  ECBE  F011         	call	___fldiv	;wreg free
  5158  0011A6  C035  F144         	movff	?___fldiv,_procces_data+20
  5159  0011AA  C036  F145         	movff	?___fldiv+1,_procces_data+21
  5160  0011AE  C037  F146         	movff	?___fldiv+2,_procces_data+22
  5161  0011B2  C038  F147         	movff	?___fldiv+3,_procces_data+23
  5162  0011B6                     
  5163                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  5164  0011B6  0E00               	movlw	0
  5165  0011B8  6E39               	movwf	___fldiv@a^0,c
  5166  0011BA  0E00               	movlw	0
  5167  0011BC  6E3A               	movwf	(___fldiv@a+1)^0,c
  5168  0011BE  0EA0               	movlw	160
  5169  0011C0  6E3B               	movwf	(___fldiv@a+2)^0,c
  5170  0011C2  0E40               	movlw	64
  5171  0011C4  6E3C               	movwf	(___fldiv@a+3)^0,c
  5172  0011C6  0E00               	movlw	0
  5173  0011C8  6E20               	movwf	___flmul@a^0,c
  5174  0011CA  0EC0               	movlw	192
  5175  0011CC  6E21               	movwf	(___flmul@a+1)^0,c
  5176  0011CE  0E79               	movlw	121
  5177  0011D0  6E22               	movwf	(___flmul@a+2)^0,c
  5178  0011D2  0E44               	movlw	68
  5179  0011D4  6E23               	movwf	(___flmul@a+3)^0,c
  5180  0011D6  C144  F01C         	movff	_procces_data+20,___flmul@b
  5181  0011DA  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  5182  0011DE  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  5183  0011E2  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  5184  0011E6  ECA9  F00F         	call	___flmul	;wreg free
  5185  0011EA  C01C  F035         	movff	?___flmul,___fldiv@b
  5186  0011EE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5187  0011F2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5188  0011F6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5189  0011FA  ECBE  F011         	call	___fldiv	;wreg free
  5190  0011FE  C035  F04E         	movff	?___fldiv,___fltol@f1
  5191  001202  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5192  001206  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5193  00120A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5194  00120E  ECD1  F020         	call	___fltol	;wreg free
  5195  001212  C04E  F114         	movff	?___fltol,_convert_data+20
  5196  001216  C04F  F115         	movff	?___fltol+1,_convert_data+21
  5197  00121A  C050  F116         	movff	?___fltol+2,_convert_data+22
  5198  00121E  C051  F117         	movff	?___fltol+3,_convert_data+23
  5199                           
  5200                           ;fs_adc.c: 132:         break;
  5201  001222  EF29  F00A         	goto	l76
  5202  001226                     l5734:
  5203                           
  5204                           ; BSR set to: 1
  5205                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  5206  001226  0E06               	movlw	6
  5207  001228  ECE3  F029         	call	_readAdcValue
  5208  00122C  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  5209  001230  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  5210  001234                     
  5211                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  5212  001234  0E00               	movlw	0
  5213  001236  6E20               	movwf	___flmul@a^0,c
  5214  001238  0E00               	movlw	0
  5215  00123A  6E21               	movwf	(___flmul@a+1)^0,c
  5216  00123C  0EA0               	movlw	160
  5217  00123E  6E22               	movwf	(___flmul@a+2)^0,c
  5218  001240  0E40               	movlw	64
  5219  001242  6E23               	movwf	(___flmul@a+3)^0,c
  5220  001244  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  5221  001248  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  5222  00124C  6A10               	clrf	(___xxtofl@val+2)^0,c
  5223  00124E  6A11               	clrf	(___xxtofl@val+3)^0,c
  5224  001250  0E00               	movlw	0
  5225  001252  ECAA  F01A         	call	___xxtofl
  5226  001256  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5227  00125A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5228  00125E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5229  001262  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5230  001266  ECA9  F00F         	call	___flmul	;wreg free
  5231  00126A  C01C  F035         	movff	?___flmul,___fldiv@b
  5232  00126E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5233  001272  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5234  001276  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5235  00127A  0E00               	movlw	0
  5236  00127C  6E39               	movwf	___fldiv@a^0,c
  5237  00127E  0E00               	movlw	0
  5238  001280  6E3A               	movwf	(___fldiv@a+1)^0,c
  5239  001282  0E80               	movlw	128
  5240  001284  6E3B               	movwf	(___fldiv@a+2)^0,c
  5241  001286  0E44               	movlw	68
  5242  001288  6E3C               	movwf	(___fldiv@a+3)^0,c
  5243  00128A  ECBE  F011         	call	___fldiv	;wreg free
  5244  00128E  C035  F148         	movff	?___fldiv,_procces_data+24
  5245  001292  C036  F149         	movff	?___fldiv+1,_procces_data+25
  5246  001296  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  5247  00129A  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  5248  00129E                     
  5249                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  5250  00129E  0E00               	movlw	0
  5251  0012A0  6E39               	movwf	___fldiv@a^0,c
  5252  0012A2  0E00               	movlw	0
  5253  0012A4  6E3A               	movwf	(___fldiv@a+1)^0,c
  5254  0012A6  0EA0               	movlw	160
  5255  0012A8  6E3B               	movwf	(___fldiv@a+2)^0,c
  5256  0012AA  0E40               	movlw	64
  5257  0012AC  6E3C               	movwf	(___fldiv@a+3)^0,c
  5258  0012AE  0E00               	movlw	0
  5259  0012B0  6E20               	movwf	___flmul@a^0,c
  5260  0012B2  0EC0               	movlw	192
  5261  0012B4  6E21               	movwf	(___flmul@a+1)^0,c
  5262  0012B6  0E79               	movlw	121
  5263  0012B8  6E22               	movwf	(___flmul@a+2)^0,c
  5264  0012BA  0E44               	movlw	68
  5265  0012BC  6E23               	movwf	(___flmul@a+3)^0,c
  5266  0012BE  C148  F01C         	movff	_procces_data+24,___flmul@b
  5267  0012C2  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  5268  0012C6  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  5269  0012CA  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  5270  0012CE  ECA9  F00F         	call	___flmul	;wreg free
  5271  0012D2  C01C  F035         	movff	?___flmul,___fldiv@b
  5272  0012D6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5273  0012DA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5274  0012DE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5275  0012E2  ECBE  F011         	call	___fldiv	;wreg free
  5276  0012E6  C035  F04E         	movff	?___fldiv,___fltol@f1
  5277  0012EA  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5278  0012EE  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5279  0012F2  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5280  0012F6  ECD1  F020         	call	___fltol	;wreg free
  5281  0012FA  C04E  F118         	movff	?___fltol,_convert_data+24
  5282  0012FE  C04F  F119         	movff	?___fltol+1,_convert_data+25
  5283  001302  C050  F11A         	movff	?___fltol+2,_convert_data+26
  5284  001306  C051  F11B         	movff	?___fltol+3,_convert_data+27
  5285                           
  5286                           ;fs_adc.c: 138:         break;
  5287  00130A  EF29  F00A         	goto	l76
  5288  00130E                     l5740:
  5289                           
  5290                           ; BSR set to: 1
  5291                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  5292  00130E  0E07               	movlw	7
  5293  001310  ECE3  F029         	call	_readAdcValue
  5294  001314  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  5295  001318  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  5296  00131C                     
  5297                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  5298  00131C  0E00               	movlw	0
  5299  00131E  6E20               	movwf	___flmul@a^0,c
  5300  001320  0E00               	movlw	0
  5301  001322  6E21               	movwf	(___flmul@a+1)^0,c
  5302  001324  0EA0               	movlw	160
  5303  001326  6E22               	movwf	(___flmul@a+2)^0,c
  5304  001328  0E40               	movlw	64
  5305  00132A  6E23               	movwf	(___flmul@a+3)^0,c
  5306  00132C  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  5307  001330  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  5308  001334  6A10               	clrf	(___xxtofl@val+2)^0,c
  5309  001336  6A11               	clrf	(___xxtofl@val+3)^0,c
  5310  001338  0E00               	movlw	0
  5311  00133A  ECAA  F01A         	call	___xxtofl
  5312  00133E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5313  001342  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5314  001346  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5315  00134A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5316  00134E  ECA9  F00F         	call	___flmul	;wreg free
  5317  001352  C01C  F035         	movff	?___flmul,___fldiv@b
  5318  001356  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5319  00135A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5320  00135E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5321  001362  0E00               	movlw	0
  5322  001364  6E39               	movwf	___fldiv@a^0,c
  5323  001366  0E00               	movlw	0
  5324  001368  6E3A               	movwf	(___fldiv@a+1)^0,c
  5325  00136A  0E80               	movlw	128
  5326  00136C  6E3B               	movwf	(___fldiv@a+2)^0,c
  5327  00136E  0E44               	movlw	68
  5328  001370  6E3C               	movwf	(___fldiv@a+3)^0,c
  5329  001372  ECBE  F011         	call	___fldiv	;wreg free
  5330  001376  C035  F14C         	movff	?___fldiv,_procces_data+28
  5331  00137A  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  5332  00137E  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  5333  001382  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  5334  001386                     
  5335                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  5336  001386  0E00               	movlw	0
  5337  001388  6E39               	movwf	___fldiv@a^0,c
  5338  00138A  0E00               	movlw	0
  5339  00138C  6E3A               	movwf	(___fldiv@a+1)^0,c
  5340  00138E  0EA0               	movlw	160
  5341  001390  6E3B               	movwf	(___fldiv@a+2)^0,c
  5342  001392  0E40               	movlw	64
  5343  001394  6E3C               	movwf	(___fldiv@a+3)^0,c
  5344  001396  0E00               	movlw	0
  5345  001398  6E20               	movwf	___flmul@a^0,c
  5346  00139A  0EC0               	movlw	192
  5347  00139C  6E21               	movwf	(___flmul@a+1)^0,c
  5348  00139E  0E79               	movlw	121
  5349  0013A0  6E22               	movwf	(___flmul@a+2)^0,c
  5350  0013A2  0E44               	movlw	68
  5351  0013A4  6E23               	movwf	(___flmul@a+3)^0,c
  5352  0013A6  C14C  F01C         	movff	_procces_data+28,___flmul@b
  5353  0013AA  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  5354  0013AE  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  5355  0013B2  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  5356  0013B6  ECA9  F00F         	call	___flmul	;wreg free
  5357  0013BA  C01C  F035         	movff	?___flmul,___fldiv@b
  5358  0013BE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5359  0013C2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5360  0013C6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5361  0013CA  ECBE  F011         	call	___fldiv	;wreg free
  5362  0013CE  C035  F04E         	movff	?___fldiv,___fltol@f1
  5363  0013D2  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5364  0013D6  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5365  0013DA  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5366  0013DE  ECD1  F020         	call	___fltol	;wreg free
  5367  0013E2  C04E  F11C         	movff	?___fltol,_convert_data+28
  5368  0013E6  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5369  0013EA  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5370  0013EE  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5371                           
  5372                           ;fs_adc.c: 144:         break;
  5373  0013F2  EF29  F00A         	goto	l76
  5374  0013F6                     l5748:
  5375  0013F6  0101               	movlb	1	; () banked
  5376  0013F8  5194               	movf	(_timer_value+5)& (0+255),w,b
  5377  0013FA  6E58               	movwf	??_scanAdcConversion^0,c
  5378  0013FC  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5379                           
  5380                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5381                           ; Switch size 1, requested type "simple"
  5382                           ; Number of cases is 1, Range of values is 0 to 0
  5383                           ; switch strategies available:
  5384                           ; Name         Instructions Cycles
  5385                           ; simple_byte            4     3 (average)
  5386                           ;	Chosen strategy is simple_byte
  5387  0013FE  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5388  001400  0A00               	xorlw	0	; case 0
  5389  001402  B4D8               	btfsc	status,2,c
  5390  001404  EF06  F00A         	goto	l6618
  5391  001408  EF29  F00A         	goto	l76
  5392  00140C                     l6618:
  5393                           
  5394                           ; BSR set to: 1
  5395                           ; Switch size 1, requested type "simple"
  5396                           ; Number of cases is 8, Range of values is 1 to 8
  5397                           ; switch strategies available:
  5398                           ; Name         Instructions Cycles
  5399                           ; simple_byte           25    13 (average)
  5400                           ;	Chosen strategy is simple_byte
  5401  00140C  5058               	movf	??_scanAdcConversion^0,w,c
  5402  00140E  0A01               	xorlw	1	; case 1
  5403  001410  B4D8               	btfsc	status,2,c
  5404  001412  EF29  F006         	goto	l5696
  5405  001416  0A03               	xorlw	3	; case 2
  5406  001418  B4D8               	btfsc	status,2,c
  5407  00141A  EF9D  F006         	goto	l5702
  5408  00141E  0A01               	xorlw	1	; case 3
  5409  001420  B4D8               	btfsc	status,2,c
  5410  001422  EF11  F007         	goto	l5708
  5411  001426  0A07               	xorlw	7	; case 4
  5412  001428  B4D8               	btfsc	status,2,c
  5413  00142A  EFB7  F007         	goto	l5716
  5414  00142E  0A01               	xorlw	1	; case 5
  5415  001430  B4D8               	btfsc	status,2,c
  5416  001432  EF2B  F008         	goto	l5722
  5417  001436  0A03               	xorlw	3	; case 6
  5418  001438  B4D8               	btfsc	status,2,c
  5419  00143A  EF9F  F008         	goto	l5728
  5420  00143E  0A01               	xorlw	1	; case 7
  5421  001440  B4D8               	btfsc	status,2,c
  5422  001442  EF13  F009         	goto	l5734
  5423  001446  0A0F               	xorlw	15	; case 8
  5424  001448  B4D8               	btfsc	status,2,c
  5425  00144A  EF87  F009         	goto	l5740
  5426  00144E  EF29  F00A         	goto	l76
  5427  001452                     l76:
  5428  001452  0012               	return		;funcret
  5429  001454                     __end_of_scanAdcConversion:
  5430                           	callstack 0
  5431                           
  5432 ;; *************** function _readAdcValue *****************
  5433 ;; Defined at:
  5434 ;;		line 34 in file "fs_adc.c"
  5435 ;; Parameters:    Size  Location     Type
  5436 ;;  adcChannel      1    wreg     unsigned char 
  5437 ;; Auto vars:     Size  Location     Type
  5438 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5439 ;;  adcValue        2    5[COMRAM] unsigned short 
  5440 ;; Return value:  Size  Location     Type
  5441 ;;                  2    0[COMRAM] unsigned short 
  5442 ;; Registers used:
  5443 ;;		wreg, status,2, status,0
  5444 ;; Tracked objects:
  5445 ;;		On entry : 0/0
  5446 ;;		On exit  : 0/0
  5447 ;;		Unchanged: 0/0
  5448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5449 ;;      Params:         2       0       0       0       0       0       0
  5450 ;;      Locals:         3       0       0       0       0       0       0
  5451 ;;      Temps:          2       0       0       0       0       0       0
  5452 ;;      Totals:         7       0       0       0       0       0       0
  5453 ;;Total ram usage:        7 bytes
  5454 ;; Hardware stack levels used:    1
  5455 ;; Hardware stack levels required when called:    1
  5456 ;; This function calls:
  5457 ;;		Nothing
  5458 ;; This function is called by:
  5459 ;;		_scanAdcConversion
  5460 ;; This function uses a non-reentrant model
  5461 ;;
  5462                           
  5463                           	psect	text19
  5464  0053C6                     __ptext19:
  5465                           	callstack 0
  5466  0053C6                     _readAdcValue:
  5467                           	callstack 24
  5468                           
  5469                           ;incstack = 0
  5470                           ;readAdcValue@adcChannel stored from wreg
  5471  0053C6  6E05               	movwf	readAdcValue@adcChannel^0,c
  5472  0053C8                     
  5473                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5474  0053C8  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5475  0053CC  4603               	rlncf	??_readAdcValue^0,f,c
  5476  0053CE  4603               	rlncf	??_readAdcValue^0,f,c
  5477  0053D0  50C2               	movf	194,w,c	;volatile
  5478  0053D2  1803               	xorwf	??_readAdcValue^0,w,c
  5479  0053D4  0B83               	andlw	-125
  5480  0053D6  1803               	xorwf	??_readAdcValue^0,w,c
  5481  0053D8  6EC2               	movwf	194,c	;volatile
  5482  0053DA                     
  5483                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5484  0053DA  80C2               	bsf	194,0,c	;volatile
  5485  0053DC                     
  5486                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5487  0053DC  82C2               	bsf	194,1,c	;volatile
  5488  0053DE                     l57:
  5489  0053DE  B2C2               	btfsc	194,1,c	;volatile
  5490  0053E0  EFF4  F029         	goto	u6391
  5491  0053E4  EFF6  F029         	goto	u6390
  5492  0053E8                     u6391:
  5493  0053E8  EFEF  F029         	goto	l57
  5494  0053EC                     u6390:
  5495  0053EC                     
  5496                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5497  0053EC  50C4               	movf	196,w,c	;volatile
  5498  0053EE  6E04               	movwf	(??_readAdcValue+1)^0,c
  5499  0053F0  6A03               	clrf	??_readAdcValue^0,c
  5500  0053F2  50C3               	movf	195,w,c	;volatile
  5501  0053F4  2403               	addwf	??_readAdcValue^0,w,c
  5502  0053F6  6E06               	movwf	readAdcValue@adcValue^0,c
  5503  0053F8  0E00               	movlw	0
  5504  0053FA  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5505  0053FC  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5506  0053FE                     
  5507                           ;fs_adc.c: 43:     return adcValue;
  5508  0053FE  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5509  005402  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5510  005406  0012               	return		;funcret
  5511  005408                     __end_of_readAdcValue:
  5512                           	callstack 0
  5513                           
  5514 ;; *************** function _calculatedAverageValue *****************
  5515 ;; Defined at:
  5516 ;;		line 154 in file "fs_adc.c"
  5517 ;; Parameters:    Size  Location     Type
  5518 ;;		None
  5519 ;; Auto vars:     Size  Location     Type
  5520 ;;		None
  5521 ;; Return value:  Size  Location     Type
  5522 ;;                  1    wreg      void 
  5523 ;; Registers used:
  5524 ;;		wreg, status,2, status,0, cstack
  5525 ;; Tracked objects:
  5526 ;;		On entry : 0/0
  5527 ;;		On exit  : 0/0
  5528 ;;		Unchanged: 0/0
  5529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5530 ;;      Params:         0       0       0       0       0       0       0
  5531 ;;      Locals:         0       0       0       0       0       0       0
  5532 ;;      Temps:         24       0       0       0       0       0       0
  5533 ;;      Totals:        24       0       0       0       0       0       0
  5534 ;;Total ram usage:       24 bytes
  5535 ;; Hardware stack levels used:    1
  5536 ;; Hardware stack levels required when called:    2
  5537 ;; This function calls:
  5538 ;;		___lldiv
  5539 ;;		___lmul
  5540 ;;		___xxtofl
  5541 ;; This function is called by:
  5542 ;;		_startMotor
  5543 ;; This function uses a non-reentrant model
  5544 ;;
  5545                           
  5546                           	psect	text20
  5547  002716                     __ptext20:
  5548                           	callstack 0
  5549  002716                     _calculatedAverageValue:
  5550                           	callstack 24
  5551  002716                     
  5552                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5553  002716  0E00               	movlw	0
  5554  002718  0101               	movlb	1	; () banked
  5555  00271A  6F83               	movwf	_driver_limit& (0+255),b
  5556  00271C  0E00               	movlw	0
  5557  00271E  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5558  002720  0E00               	movlw	0
  5559  002722  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5560  002724  0E00               	movlw	0
  5561  002726  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5562                           
  5563                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5564  002728  0E00               	movlw	0
  5565  00272A  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5566  00272C  0E00               	movlw	0
  5567  00272E  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5568  002730  0E00               	movlw	0
  5569  002732  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5570  002734  0E00               	movlw	0
  5571  002736  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5572                           
  5573                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5574  002738  0E00               	movlw	0
  5575  00273A  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5576  00273C  0E00               	movlw	0
  5577  00273E  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5578  002740  0E00               	movlw	0
  5579  002742  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5580  002744  0E00               	movlw	0
  5581  002746  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5582  002748                     
  5583                           ; BSR set to: 1
  5584                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5585  002748  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5586  00274C  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5587  002750  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5588  002754  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5589  002758  0EB8               	movlw	184
  5590  00275A  6E05               	movwf	___lmul@multiplicand^0,c
  5591  00275C  0E0B               	movlw	11
  5592  00275E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5593  002760  0E00               	movlw	0
  5594  002762  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5595  002764  0E00               	movlw	0
  5596  002766  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5597  002768  ECD5  F027         	call	___lmul	;wreg free
  5598  00276C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5599  002770  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5600  002774  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5601  002778  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5602  00277C  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5603  002780  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5604  002784  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5605  002788  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5606  00278C  0ED0               	movlw	208
  5607  00278E  6E05               	movwf	___lmul@multiplicand^0,c
  5608  002790  0E07               	movlw	7
  5609  002792  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5610  002794  0E00               	movlw	0
  5611  002796  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5612  002798  0E00               	movlw	0
  5613  00279A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5614  00279C  ECD5  F027         	call	___lmul	;wreg free
  5615  0027A0  5001               	movf	?___lmul^0,w,c
  5616  0027A2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5617  0027A4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5618  0027A6  5002               	movf	(?___lmul+1)^0,w,c
  5619  0027A8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5620  0027AA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5621  0027AC  5003               	movf	(?___lmul+2)^0,w,c
  5622  0027AE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5623  0027B0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5624  0027B2  5004               	movf	(?___lmul+3)^0,w,c
  5625  0027B4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5626  0027B6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5627  0027B8  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5628  0027BC  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5629  0027C0  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5630  0027C4  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5631  0027C8  0EE8               	movlw	232
  5632  0027CA  6E05               	movwf	___lmul@multiplicand^0,c
  5633  0027CC  0E03               	movlw	3
  5634  0027CE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5635  0027D0  0E00               	movlw	0
  5636  0027D2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5637  0027D4  0E00               	movlw	0
  5638  0027D6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5639  0027D8  ECD5  F027         	call	___lmul	;wreg free
  5640  0027DC  5001               	movf	?___lmul^0,w,c
  5641  0027DE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5642  0027E0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5643  0027E2  5002               	movf	(?___lmul+1)^0,w,c
  5644  0027E4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5645  0027E6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5646  0027E8  5003               	movf	(?___lmul+2)^0,w,c
  5647  0027EA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5648  0027EC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5649  0027EE  5004               	movf	(?___lmul+3)^0,w,c
  5650  0027F0  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5651  0027F2  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5652  0027F4  0101               	movlb	1	; () banked
  5653  0027F6  5100               	movf	_convert_data& (0+255),w,b
  5654  0027F8  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5655  0027FA  6F83               	movwf	_driver_limit& (0+255),b
  5656  0027FC  5101               	movf	(_convert_data+1)& (0+255),w,b
  5657  0027FE  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5658  002800  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5659  002802  5102               	movf	(_convert_data+2)& (0+255),w,b
  5660  002804  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5661  002806  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5662  002808  5103               	movf	(_convert_data+3)& (0+255),w,b
  5663  00280A  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5664  00280C  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5665  00280E                     
  5666                           ; BSR set to: 1
  5667                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5668  00280E  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5669  002812  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5670  002816  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5671  00281A  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5672  00281E  0E58               	movlw	88
  5673  002820  6E05               	movwf	___lmul@multiplicand^0,c
  5674  002822  0E1B               	movlw	27
  5675  002824  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5676  002826  0E00               	movlw	0
  5677  002828  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5678  00282A  0E00               	movlw	0
  5679  00282C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5680  00282E  ECD5  F027         	call	___lmul	;wreg free
  5681  002832  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5682  002836  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5683  00283A  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5684  00283E  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5685  002842  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5686  002846  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5687  00284A  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5688  00284E  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5689  002852  0E70               	movlw	112
  5690  002854  6E05               	movwf	___lmul@multiplicand^0,c
  5691  002856  0E17               	movlw	23
  5692  002858  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5693  00285A  0E00               	movlw	0
  5694  00285C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5695  00285E  0E00               	movlw	0
  5696  002860  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5697  002862  ECD5  F027         	call	___lmul	;wreg free
  5698  002866  5001               	movf	?___lmul^0,w,c
  5699  002868  241C               	addwf	??_calculatedAverageValue^0,w,c
  5700  00286A  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5701  00286C  5002               	movf	(?___lmul+1)^0,w,c
  5702  00286E  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5703  002870  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5704  002872  5003               	movf	(?___lmul+2)^0,w,c
  5705  002874  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5706  002876  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5707  002878  5004               	movf	(?___lmul+3)^0,w,c
  5708  00287A  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5709  00287C  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5710  00287E  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5711  002882  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5712  002886  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5713  00288A  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5714  00288E  0E88               	movlw	136
  5715  002890  6E05               	movwf	___lmul@multiplicand^0,c
  5716  002892  0E13               	movlw	19
  5717  002894  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5718  002896  0E00               	movlw	0
  5719  002898  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5720  00289A  0E00               	movlw	0
  5721  00289C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5722  00289E  ECD5  F027         	call	___lmul	;wreg free
  5723  0028A2  5001               	movf	?___lmul^0,w,c
  5724  0028A4  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5725  0028A6  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5726  0028A8  5002               	movf	(?___lmul+1)^0,w,c
  5727  0028AA  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5728  0028AC  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5729  0028AE  5003               	movf	(?___lmul+2)^0,w,c
  5730  0028B0  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5731  0028B2  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5732  0028B4  5004               	movf	(?___lmul+3)^0,w,c
  5733  0028B6  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5734  0028B8  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5735  0028BA  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5736  0028BE  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5737  0028C2  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5738  0028C6  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5739  0028CA  0EA0               	movlw	160
  5740  0028CC  6E05               	movwf	___lmul@multiplicand^0,c
  5741  0028CE  0E0F               	movlw	15
  5742  0028D0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5743  0028D2  0E00               	movlw	0
  5744  0028D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5745  0028D6  0E00               	movlw	0
  5746  0028D8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5747  0028DA  ECD5  F027         	call	___lmul	;wreg free
  5748  0028DE  5001               	movf	?___lmul^0,w,c
  5749  0028E0  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5750  0028E2  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5751  0028E4  5002               	movf	(?___lmul+1)^0,w,c
  5752  0028E6  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5753  0028E8  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5754  0028EA  5003               	movf	(?___lmul+2)^0,w,c
  5755  0028EC  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5756  0028EE  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5757  0028F0  5004               	movf	(?___lmul+3)^0,w,c
  5758  0028F2  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5759  0028F4  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5760  0028F6  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5761  0028F8  0101               	movlb	1	; () banked
  5762  0028FA  2783               	addwf	_driver_limit& (0+255),f,b
  5763  0028FC  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5764  0028FE  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5765  002900  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5766  002902  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5767  002904  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5768  002906  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5769  002908                     
  5770                           ; BSR set to: 1
  5771                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5772  002908  5108               	movf	(_convert_data+8)& (0+255),w,b
  5773  00290A  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5774  00290C  6E1C               	movwf	??_calculatedAverageValue^0,c
  5775  00290E  5109               	movf	(_convert_data+9)& (0+255),w,b
  5776  002910  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5777  002912  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5778  002914  510A               	movf	(_convert_data+10)& (0+255),w,b
  5779  002916  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5780  002918  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5781  00291A  510B               	movf	(_convert_data+11)& (0+255),w,b
  5782  00291C  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5783  00291E  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5784  002920  510C               	movf	(_convert_data+12)& (0+255),w,b
  5785  002922  241C               	addwf	??_calculatedAverageValue^0,w,c
  5786  002924  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5787  002926  510D               	movf	(_convert_data+13)& (0+255),w,b
  5788  002928  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5789  00292A  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5790  00292C  510E               	movf	(_convert_data+14)& (0+255),w,b
  5791  00292E  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5792  002930  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5793  002932  510F               	movf	(_convert_data+15)& (0+255),w,b
  5794  002934  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5795  002936  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5796  002938  5110               	movf	(_convert_data+16)& (0+255),w,b
  5797  00293A  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5798  00293C  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5799  00293E  5111               	movf	(_convert_data+17)& (0+255),w,b
  5800  002940  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5801  002942  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5802  002944  5112               	movf	(_convert_data+18)& (0+255),w,b
  5803  002946  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5804  002948  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5805  00294A  5113               	movf	(_convert_data+19)& (0+255),w,b
  5806  00294C  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5807  00294E  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5808  002950  5114               	movf	(_convert_data+20)& (0+255),w,b
  5809  002952  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5810  002954  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5811  002956  5115               	movf	(_convert_data+21)& (0+255),w,b
  5812  002958  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5813  00295A  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5814  00295C  5116               	movf	(_convert_data+22)& (0+255),w,b
  5815  00295E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5816  002960  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5817  002962  5117               	movf	(_convert_data+23)& (0+255),w,b
  5818  002964  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5819  002966  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5820  002968  5118               	movf	(_convert_data+24)& (0+255),w,b
  5821  00296A  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5822  00296C  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5823  00296E  5119               	movf	(_convert_data+25)& (0+255),w,b
  5824  002970  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5825  002972  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5826  002974  511A               	movf	(_convert_data+26)& (0+255),w,b
  5827  002976  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5828  002978  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5829  00297A  511B               	movf	(_convert_data+27)& (0+255),w,b
  5830  00297C  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5831  00297E  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5832  002980  511C               	movf	(_convert_data+28)& (0+255),w,b
  5833  002982  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5834  002984  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5835  002986  511D               	movf	(_convert_data+29)& (0+255),w,b
  5836  002988  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5837  00298A  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5838  00298C  511E               	movf	(_convert_data+30)& (0+255),w,b
  5839  00298E  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5840  002990  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5841  002992  511F               	movf	(_convert_data+31)& (0+255),w,b
  5842  002994  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5843  002996  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5844  002998  5100               	movf	_convert_data& (0+255),w,b
  5845  00299A  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5846  00299C  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5847  00299E  5101               	movf	(_convert_data+1)& (0+255),w,b
  5848  0029A0  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5849  0029A2  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5850  0029A4  5102               	movf	(_convert_data+2)& (0+255),w,b
  5851  0029A6  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5852  0029A8  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5853  0029AA  5103               	movf	(_convert_data+3)& (0+255),w,b
  5854  0029AC  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5855  0029AE  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5856  0029B0                     
  5857                           ; BSR set to: 1
  5858                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5859  0029B0  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5860  0029B4  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5861  0029B8  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5862  0029BC  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5863  0029C0  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5864  0029C4  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5865  0029C8  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5866  0029CC  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5867  0029D0  EC44  F026         	call	___lldiv	;wreg free
  5868  0029D4  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5869  0029D8  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5870  0029DC  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5871  0029E0  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5872  0029E4  0E00               	movlw	0
  5873  0029E6  ECAA  F01A         	call	___xxtofl
  5874  0029EA  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5875  0029EE  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5876  0029F2  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5877  0029F6  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5878  0029FA  0012               	return		;funcret
  5879  0029FC                     __end_of_calculatedAverageValue:
  5880                           	callstack 0
  5881                           
  5882 ;; *************** function ___lmul *****************
  5883 ;; Defined at:
  5884 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5885 ;; Parameters:    Size  Location     Type
  5886 ;;  multiplier      4    0[COMRAM] unsigned long 
  5887 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5888 ;; Auto vars:     Size  Location     Type
  5889 ;;  product         4    8[COMRAM] unsigned long 
  5890 ;; Return value:  Size  Location     Type
  5891 ;;                  4    0[COMRAM] unsigned long 
  5892 ;; Registers used:
  5893 ;;		wreg, status,2, status,0
  5894 ;; Tracked objects:
  5895 ;;		On entry : 0/0
  5896 ;;		On exit  : 0/0
  5897 ;;		Unchanged: 0/0
  5898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5899 ;;      Params:         8       0       0       0       0       0       0
  5900 ;;      Locals:         4       0       0       0       0       0       0
  5901 ;;      Temps:          0       0       0       0       0       0       0
  5902 ;;      Totals:        12       0       0       0       0       0       0
  5903 ;;Total ram usage:       12 bytes
  5904 ;; Hardware stack levels used:    1
  5905 ;; Hardware stack levels required when called:    1
  5906 ;; This function calls:
  5907 ;;		Nothing
  5908 ;; This function is called by:
  5909 ;;		_calculatedAverageValue
  5910 ;; This function uses a non-reentrant model
  5911 ;;
  5912                           
  5913                           	psect	text21
  5914  004FAA                     __ptext21:
  5915                           	callstack 0
  5916  004FAA                     ___lmul:
  5917                           	callstack 24
  5918  004FAA  0E00               	movlw	0
  5919  004FAC  6E09               	movwf	___lmul@product^0,c
  5920  004FAE  0E00               	movlw	0
  5921  004FB0  6E0A               	movwf	(___lmul@product+1)^0,c
  5922  004FB2  0E00               	movlw	0
  5923  004FB4  6E0B               	movwf	(___lmul@product+2)^0,c
  5924  004FB6  0E00               	movlw	0
  5925  004FB8  6E0C               	movwf	(___lmul@product+3)^0,c
  5926  004FBA                     l5500:
  5927  004FBA  A001               	btfss	___lmul@multiplier^0,0,c
  5928  004FBC  EFE2  F027         	goto	u6441
  5929  004FC0  EFE4  F027         	goto	u6440
  5930  004FC4                     u6441:
  5931  004FC4  EFEC  F027         	goto	l5504
  5932  004FC8                     u6440:
  5933  004FC8  5005               	movf	___lmul@multiplicand^0,w,c
  5934  004FCA  2609               	addwf	___lmul@product^0,f,c
  5935  004FCC  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5936  004FCE  220A               	addwfc	(___lmul@product+1)^0,f,c
  5937  004FD0  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5938  004FD2  220B               	addwfc	(___lmul@product+2)^0,f,c
  5939  004FD4  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5940  004FD6  220C               	addwfc	(___lmul@product+3)^0,f,c
  5941  004FD8                     l5504:
  5942  004FD8  90D8               	bcf	status,0,c
  5943  004FDA  3605               	rlcf	___lmul@multiplicand^0,f,c
  5944  004FDC  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5945  004FDE  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5946  004FE0  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5947  004FE2  90D8               	bcf	status,0,c
  5948  004FE4  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5949  004FE6  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5950  004FE8  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5951  004FEA  3201               	rrcf	___lmul@multiplier^0,f,c
  5952  004FEC  5001               	movf	___lmul@multiplier^0,w,c
  5953  004FEE  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5954  004FF0  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5955  004FF2  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5956  004FF4  A4D8               	btfss	status,2,c
  5957  004FF6  EFFF  F027         	goto	u6451
  5958  004FFA  EF01  F028         	goto	u6450
  5959  004FFE                     u6451:
  5960  004FFE  EFDD  F027         	goto	l5500
  5961  005002                     u6450:
  5962  005002  C009  F001         	movff	___lmul@product,?___lmul
  5963  005006  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5964  00500A  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5965  00500E  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5966  005012  0012               	return		;funcret
  5967  005014                     __end_of___lmul:
  5968                           	callstack 0
  5969                           
  5970 ;; *************** function ___lldiv *****************
  5971 ;; Defined at:
  5972 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5973 ;; Parameters:    Size  Location     Type
  5974 ;;  dividend        4    0[COMRAM] unsigned long 
  5975 ;;  divisor         4    4[COMRAM] unsigned long 
  5976 ;; Auto vars:     Size  Location     Type
  5977 ;;  quotient        4    8[COMRAM] unsigned long 
  5978 ;;  counter         1   12[COMRAM] unsigned char 
  5979 ;; Return value:  Size  Location     Type
  5980 ;;                  4    0[COMRAM] unsigned long 
  5981 ;; Registers used:
  5982 ;;		wreg, status,2, status,0
  5983 ;; Tracked objects:
  5984 ;;		On entry : 0/0
  5985 ;;		On exit  : 0/0
  5986 ;;		Unchanged: 0/0
  5987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5988 ;;      Params:         8       0       0       0       0       0       0
  5989 ;;      Locals:         5       0       0       0       0       0       0
  5990 ;;      Temps:          0       0       0       0       0       0       0
  5991 ;;      Totals:        13       0       0       0       0       0       0
  5992 ;;Total ram usage:       13 bytes
  5993 ;; Hardware stack levels used:    1
  5994 ;; Hardware stack levels required when called:    1
  5995 ;; This function calls:
  5996 ;;		Nothing
  5997 ;; This function is called by:
  5998 ;;		_calculatedAverageValue
  5999 ;; This function uses a non-reentrant model
  6000 ;;
  6001                           
  6002                           	psect	text22
  6003  004C88                     __ptext22:
  6004                           	callstack 0
  6005  004C88                     ___lldiv:
  6006                           	callstack 24
  6007  004C88  0E00               	movlw	0
  6008  004C8A  6E09               	movwf	___lldiv@quotient^0,c
  6009  004C8C  0E00               	movlw	0
  6010  004C8E  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6011  004C90  0E00               	movlw	0
  6012  004C92  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6013  004C94  0E00               	movlw	0
  6014  004C96  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6015  004C98  5005               	movf	___lldiv@divisor^0,w,c
  6016  004C9A  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6017  004C9C  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6018  004C9E  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6019  004CA0  B4D8               	btfsc	status,2,c
  6020  004CA2  EF55  F026         	goto	u6461
  6021  004CA6  EF57  F026         	goto	u6460
  6022  004CAA                     u6461:
  6023  004CAA  EF8D  F026         	goto	l718
  6024  004CAE                     u6460:
  6025  004CAE  0E01               	movlw	1
  6026  004CB0  6E0D               	movwf	___lldiv@counter^0,c
  6027  004CB2  EF61  F026         	goto	l5516
  6028  004CB6                     l5514:
  6029  004CB6  90D8               	bcf	status,0,c
  6030  004CB8  3605               	rlcf	___lldiv@divisor^0,f,c
  6031  004CBA  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6032  004CBC  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6033  004CBE  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6034  004CC0  2A0D               	incf	___lldiv@counter^0,f,c
  6035  004CC2                     l5516:
  6036  004CC2  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6037  004CC4  EF66  F026         	goto	u6471
  6038  004CC8  EF68  F026         	goto	u6470
  6039  004CCC                     u6471:
  6040  004CCC  EF5B  F026         	goto	l5514
  6041  004CD0                     u6470:
  6042  004CD0                     l5518:
  6043  004CD0  90D8               	bcf	status,0,c
  6044  004CD2  3609               	rlcf	___lldiv@quotient^0,f,c
  6045  004CD4  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6046  004CD6  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6047  004CD8  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6048  004CDA  5005               	movf	___lldiv@divisor^0,w,c
  6049  004CDC  5C01               	subwf	___lldiv@dividend^0,w,c
  6050  004CDE  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6051  004CE0  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6052  004CE2  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6053  004CE4  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6054  004CE6  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6055  004CE8  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6056  004CEA  A0D8               	btfss	status,0,c
  6057  004CEC  EF7A  F026         	goto	u6481
  6058  004CF0  EF7C  F026         	goto	u6480
  6059  004CF4                     u6481:
  6060  004CF4  EF85  F026         	goto	l5526
  6061  004CF8                     u6480:
  6062  004CF8  5005               	movf	___lldiv@divisor^0,w,c
  6063  004CFA  5E01               	subwf	___lldiv@dividend^0,f,c
  6064  004CFC  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6065  004CFE  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6066  004D00  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6067  004D02  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6068  004D04  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6069  004D06  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6070  004D08  8009               	bsf	___lldiv@quotient^0,0,c
  6071  004D0A                     l5526:
  6072  004D0A  90D8               	bcf	status,0,c
  6073  004D0C  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6074  004D0E  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6075  004D10  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6076  004D12  3205               	rrcf	___lldiv@divisor^0,f,c
  6077  004D14  2E0D               	decfsz	___lldiv@counter^0,f,c
  6078  004D16  EF68  F026         	goto	l5518
  6079  004D1A                     l718:
  6080  004D1A  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6081  004D1E  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6082  004D22  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6083  004D26  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6084  004D2A  0012               	return		;funcret
  6085  004D2C                     __end_of___lldiv:
  6086                           	callstack 0
  6087                           
  6088 ;; *************** function _exitLine *****************
  6089 ;; Defined at:
  6090 ;;		line 629 in file "fs_menu_controller.c"
  6091 ;; Parameters:    Size  Location     Type
  6092 ;;		None
  6093 ;; Auto vars:     Size  Location     Type
  6094 ;;		None
  6095 ;; Return value:  Size  Location     Type
  6096 ;;                  1    wreg      void 
  6097 ;; Registers used:
  6098 ;;		None
  6099 ;; Tracked objects:
  6100 ;;		On entry : 0/0
  6101 ;;		On exit  : 0/0
  6102 ;;		Unchanged: 0/0
  6103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6104 ;;      Params:         0       0       0       0       0       0       0
  6105 ;;      Locals:         0       0       0       0       0       0       0
  6106 ;;      Temps:          0       0       0       0       0       0       0
  6107 ;;      Totals:         0       0       0       0       0       0       0
  6108 ;;Total ram usage:        0 bytes
  6109 ;; Hardware stack levels used:    1
  6110 ;; Hardware stack levels required when called:    1
  6111 ;; This function calls:
  6112 ;;		Nothing
  6113 ;; This function is called by:
  6114 ;;		_stateMachine
  6115 ;; This function uses a non-reentrant model
  6116 ;;
  6117                           
  6118                           	psect	text23
  6119  0057B2                     __ptext23:
  6120                           	callstack 0
  6121  0057B2                     _exitLine:
  6122                           	callstack 27
  6123  0057B2  0012               	return		;funcret
  6124  0057B4                     __end_of_exitLine:
  6125                           	callstack 0
  6126                           
  6127 ;; *************** function _driverTimeSettingMenu *****************
  6128 ;; Defined at:
  6129 ;;		line 576 in file "fs_menu_controller.c"
  6130 ;; Parameters:    Size  Location     Type
  6131 ;;		None
  6132 ;; Auto vars:     Size  Location     Type
  6133 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  6134 ;; Return value:  Size  Location     Type
  6135 ;;                  1    wreg      void 
  6136 ;; Registers used:
  6137 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6138 ;; Tracked objects:
  6139 ;;		On entry : 0/0
  6140 ;;		On exit  : 0/0
  6141 ;;		Unchanged: 0/0
  6142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6143 ;;      Params:         0       0       0       0       0       0       0
  6144 ;;      Locals:         0      16       0       0       0       0       0
  6145 ;;      Temps:          0       0       0       0       0       0       0
  6146 ;;      Totals:         0      16       0       0       0       0       0
  6147 ;;Total ram usage:       16 bytes
  6148 ;; Hardware stack levels used:    1
  6149 ;; Hardware stack levels required when called:    9
  6150 ;; This function calls:
  6151 ;;		_Lcd_Set_Cursor
  6152 ;;		_Lcd_Write_String
  6153 ;;		_eepromWrite
  6154 ;;		_sprintf
  6155 ;;		_stopMotor
  6156 ;; This function is called by:
  6157 ;;		_stateMachine
  6158 ;; This function uses a non-reentrant model
  6159 ;;
  6160                           
  6161                           	psect	text24
  6162  003E52                     __ptext24:
  6163                           	callstack 0
  6164  003E52                     _driverTimeSettingMenu:
  6165                           	callstack 19
  6166  003E52                     
  6167                           ;fs_menu_controller.c: 578:     char textCursor2[16] = {0};
  6168  003E52  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  6169  003E56  0E0F               	movlw	15
  6170  003E58                     u7081:
  6171  003E58  6ADE               	clrf	postinc2,c
  6172  003E5A  06E8               	decf	wreg,f,c
  6173  003E5C  E2FD               	bc	u7081
  6174  003E5E                     
  6175                           ;fs_menu_controller.c: 580:     stopMotor();
  6176  003E5E  EC63  F02A         	call	_stopMotor	;wreg free
  6177  003E62                     
  6178                           ;fs_menu_controller.c: 582:     if (menu_flags.menu_input_flag == 1)
  6179  003E62  0101               	movlb	1	; () banked
  6180  003E64  0597               	decf	_menu_flags& (0+255),w,b
  6181  003E66  A4D8               	btfss	status,2,c
  6182  003E68  EF38  F01F         	goto	u7091
  6183  003E6C  EF3A  F01F         	goto	u7090
  6184  003E70                     u7091:
  6185  003E70  EF3F  F01F         	goto	l5988
  6186  003E74                     u7090:
  6187  003E74                     
  6188                           ; BSR set to: 1
  6189                           ;fs_menu_controller.c: 583:     {;fs_menu_controller.c: 584:         menu_flags.menu_inp
      +                          ut_flag = 0;
  6190  003E74  0E00               	movlw	0
  6191  003E76  6F97               	movwf	_menu_flags& (0+255),b
  6192                           
  6193                           ;fs_menu_controller.c: 585:         menu_selected = STOP_TIME_SETTING;
  6194  003E78  0E02               	movlw	2
  6195  003E7A  0100               	movlb	0	; () banked
  6196  003E7C  6FFB               	movwf	_menu_selected& (0+255),b
  6197  003E7E                     l5988:
  6198                           
  6199                           ;fs_menu_controller.c: 588:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  6200  003E7E  0101               	movlb	1	; () banked
  6201  003E80  059B               	decf	(_menu_flags+4)& (0+255),w,b
  6202  003E82  A4D8               	btfss	status,2,c
  6203  003E84  EF46  F01F         	goto	u7101
  6204  003E88  EF48  F01F         	goto	u7100
  6205  003E8C                     u7101:
  6206  003E8C  EF64  F01F         	goto	l6006
  6207  003E90                     u7100:
  6208  003E90                     
  6209                           ; BSR set to: 1
  6210  003E90  0E1E               	movlw	30
  6211  003E92  0100               	movlb	0	; () banked
  6212  003E94  61F3               	cpfslt	_menu_value& (0+255),b
  6213  003E96  EF4F  F01F         	goto	u7111
  6214  003E9A  EF51  F01F         	goto	u7110
  6215  003E9E                     u7111:
  6216  003E9E  EF64  F01F         	goto	l6006
  6217  003EA2                     u7110:
  6218  003EA2                     
  6219                           ; BSR set to: 0
  6220                           ;fs_menu_controller.c: 589:     {;fs_menu_controller.c: 590:         menu_flags.menu_inc
      +                          rease_flag = 0;
  6221  003EA2  0E00               	movlw	0
  6222  003EA4  0101               	movlb	1	; () banked
  6223  003EA6  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  6224  003EA8                     
  6225                           ; BSR set to: 1
  6226                           ;fs_menu_controller.c: 591:         menu_value.driver_time++;
  6227  003EA8  0100               	movlb	0	; () banked
  6228  003EAA  2BF3               	incf	_menu_value& (0+255),f,b
  6229  003EAC                     
  6230                           ; BSR set to: 0
  6231                           ;fs_menu_controller.c: 592:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6232  003EAC  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6233  003EB0  0E00               	movlw	0
  6234  003EB2  EC41  F02B         	call	_eepromWrite
  6235  003EB6                     
  6236                           ;fs_menu_controller.c: 593:         timer_value.minute =0 ;
  6237  003EB6  0E00               	movlw	0
  6238  003EB8  0101               	movlb	1	; () banked
  6239  003EBA  6F90               	movwf	(_timer_value+1)& (0+255),b
  6240  003EBC                     
  6241                           ; BSR set to: 1
  6242                           ;fs_menu_controller.c: 594:         timer_value.second = 0;
  6243  003EBC  0E00               	movlw	0
  6244  003EBE  6F8F               	movwf	_timer_value& (0+255),b
  6245  003EC0                     
  6246                           ; BSR set to: 1
  6247                           ;fs_menu_controller.c: 595:         timer_value.remainingSecond = 0;
  6248  003EC0  0E00               	movlw	0
  6249  003EC2  6F91               	movwf	(_timer_value+2)& (0+255),b
  6250  003EC4                     
  6251                           ; BSR set to: 1
  6252                           ;fs_menu_controller.c: 596:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  6253  003EC4  C0F3  F192         	movff	_menu_value,_timer_value+3
  6254  003EC8                     l6006:
  6255                           
  6256                           ;fs_menu_controller.c: 599:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  6257  003EC8  0101               	movlb	1	; () banked
  6258  003ECA  059C               	decf	(_menu_flags+5)& (0+255),w,b
  6259  003ECC  A4D8               	btfss	status,2,c
  6260  003ECE  EF6B  F01F         	goto	u7121
  6261  003ED2  EF6D  F01F         	goto	u7120
  6262  003ED6                     u7121:
  6263  003ED6  EF89  F01F         	goto	l6024
  6264  003EDA                     u7120:
  6265  003EDA                     
  6266                           ; BSR set to: 1
  6267  003EDA  0100               	movlb	0	; () banked
  6268  003EDC  51F3               	movf	_menu_value& (0+255),w,b
  6269  003EDE  B4D8               	btfsc	status,2,c
  6270  003EE0  EF74  F01F         	goto	u7131
  6271  003EE4  EF76  F01F         	goto	u7130
  6272  003EE8                     u7131:
  6273  003EE8  EF89  F01F         	goto	l6024
  6274  003EEC                     u7130:
  6275  003EEC                     
  6276                           ; BSR set to: 0
  6277                           ;fs_menu_controller.c: 600:     {;fs_menu_controller.c: 601:          menu_flags.menu_de
      +                          crease_flag = 0;
  6278  003EEC  0E00               	movlw	0
  6279  003EEE  0101               	movlb	1	; () banked
  6280  003EF0  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  6281  003EF2                     
  6282                           ; BSR set to: 1
  6283                           ;fs_menu_controller.c: 602:          menu_value.driver_time--;
  6284  003EF2  0100               	movlb	0	; () banked
  6285  003EF4  07F3               	decf	_menu_value& (0+255),f,b
  6286  003EF6                     
  6287                           ; BSR set to: 0
  6288                           ;fs_menu_controller.c: 603:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6289  003EF6  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6290  003EFA  0E00               	movlw	0
  6291  003EFC  EC41  F02B         	call	_eepromWrite
  6292  003F00                     
  6293                           ;fs_menu_controller.c: 604:          timer_value.minute =0 ;
  6294  003F00  0E00               	movlw	0
  6295  003F02  0101               	movlb	1	; () banked
  6296  003F04  6F90               	movwf	(_timer_value+1)& (0+255),b
  6297  003F06                     
  6298                           ; BSR set to: 1
  6299                           ;fs_menu_controller.c: 605:          timer_value.second = 0;
  6300  003F06  0E00               	movlw	0
  6301  003F08  6F8F               	movwf	_timer_value& (0+255),b
  6302  003F0A                     
  6303                           ; BSR set to: 1
  6304                           ;fs_menu_controller.c: 606:          timer_value.remainingSecond = 0;
  6305  003F0A  0E00               	movlw	0
  6306  003F0C  6F91               	movwf	(_timer_value+2)& (0+255),b
  6307  003F0E                     
  6308                           ; BSR set to: 1
  6309                           ;fs_menu_controller.c: 607:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  6310  003F0E  C0F3  F192         	movff	_menu_value,_timer_value+3
  6311  003F12                     l6024:
  6312                           
  6313                           ;fs_menu_controller.c: 609:     Lcd_Set_Cursor(1,1);
  6314  003F12  0E01               	movlw	1
  6315  003F14  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6316  003F16  0E01               	movlw	1
  6317  003F18  EC3F  F028         	call	_Lcd_Set_Cursor
  6318  003F1C                     
  6319                           ;fs_menu_controller.c: 610:     Lcd_Write_String("HAREKT ZAMANI dk");
  6320  003F1C  0E5E               	movlw	low STR_17
  6321  003F1E  6E05               	movwf	Lcd_Write_String@a^0,c
  6322  003F20  0E7F               	movlw	high STR_17
  6323  003F22  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6324  003F24  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  6325  003F28                     
  6326                           ;fs_menu_controller.c: 611:     Lcd_Set_Cursor(2,1);
  6327  003F28  0E01               	movlw	1
  6328  003F2A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6329  003F2C  0E02               	movlw	2
  6330  003F2E  EC3F  F028         	call	_Lcd_Set_Cursor
  6331  003F32                     
  6332                           ;fs_menu_controller.c: 612:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  6333  003F32  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6334  003F34  0100               	movlb	0	; () banked
  6335  003F36  6FCF               	movwf	sprintf@s& (0+255),b
  6336  003F38  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6337  003F3A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  6338  003F3C  0EF7               	movlw	low STR_14
  6339  003F3E  6FD1               	movwf	sprintf@fmt& (0+255),b
  6340  003F40  0E7E               	movlw	high STR_14
  6341  003F42  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  6342  003F44  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  6343  003F48  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  6344  003F4A  EC27  F029         	call	_sprintf	;wreg free
  6345  003F4E                     
  6346                           ;fs_menu_controller.c: 613:     Lcd_Write_String(textCursor2);
  6347  003F4E  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6348  003F50  6E05               	movwf	Lcd_Write_String@a^0,c
  6349  003F52  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6350  003F54  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6351  003F56  ECE1  F026         	call	_Lcd_Write_String	;wreg free
  6352  003F5A                     
  6353                           ;fs_menu_controller.c: 615:     if(timer_value.menu_login_delay == 100)
  6354  003F5A  0E64               	movlw	100
  6355  003F5C  0101               	movlb	1	; () banked
  6356  003F5E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  6357  003F60  A4D8               	btfss	status,2,c
  6358  003F62  EFB5  F01F         	goto	u7141
  6359  003F66  EFB7  F01F         	goto	u7140
  6360  003F6A                     u7141:
  6361  003F6A  EFBC  F01F         	goto	l512
  6362  003F6E                     u7140:
  6363  003F6E                     
  6364                           ; BSR set to: 1
  6365                           ;fs_menu_controller.c: 616:     {;fs_menu_controller.c: 617:         timer_value.menu_lo
      +                          gin_delay = 0;
  6366  003F6E  0E00               	movlw	0
  6367  003F70  6F93               	movwf	(_timer_value+4)& (0+255),b
  6368                           
  6369                           ;fs_menu_controller.c: 618:         menu_selected = PAUSE_MENU;
  6370  003F72  0E06               	movlw	6
  6371  003F74  0100               	movlb	0	; () banked
  6372  003F76  6FFB               	movwf	_menu_selected& (0+255),b
  6373  003F78                     l512:
  6374  003F78  0012               	return		;funcret
  6375  003F7A                     __end_of_driverTimeSettingMenu:
  6376                           	callstack 0
  6377                           
  6378 ;; *************** function _stopMotor *****************
  6379 ;; Defined at:
  6380 ;;		line 77 in file "fs_speed_controller.c"
  6381 ;; Parameters:    Size  Location     Type
  6382 ;;		None
  6383 ;; Auto vars:     Size  Location     Type
  6384 ;;		None
  6385 ;; Return value:  Size  Location     Type
  6386 ;;                  1    wreg      void 
  6387 ;; Registers used:
  6388 ;;		wreg, status,2, status,0, cstack
  6389 ;; Tracked objects:
  6390 ;;		On entry : 0/0
  6391 ;;		On exit  : 0/0
  6392 ;;		Unchanged: 0/0
  6393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6394 ;;      Params:         0       0       0       0       0       0       0
  6395 ;;      Locals:         0       0       0       0       0       0       0
  6396 ;;      Temps:          0       0       0       0       0       0       0
  6397 ;;      Totals:         0       0       0       0       0       0       0
  6398 ;;Total ram usage:        0 bytes
  6399 ;; Hardware stack levels used:    1
  6400 ;; Hardware stack levels required when called:    3
  6401 ;; This function calls:
  6402 ;;		_PWM1_setDC
  6403 ;;		_PWM2_setDC
  6404 ;; This function is called by:
  6405 ;;		_stopMenu
  6406 ;;		_pauseMenu
  6407 ;;		_secretMenu
  6408 ;;		_speedLimitSettingMenu
  6409 ;;		_stopTimeSettingMenu
  6410 ;;		_driverTimeSettingMenu
  6411 ;; This function uses a non-reentrant model
  6412 ;;
  6413                           
  6414                           	psect	text25
  6415  0054C6                     __ptext25:
  6416                           	callstack 0
  6417  0054C6                     _stopMotor:
  6418                           	callstack 24
  6419  0054C6                     
  6420                           ;fs_speed_controller.c: 79:     controller.rightMotorSpeed = 0;
  6421  0054C6  0E00               	movlw	0
  6422  0054C8  0101               	movlb	1	; () banked
  6423  0054CA  6F59               	movwf	(_controller+9)& (0+255),b
  6424  0054CC  0E00               	movlw	0
  6425  0054CE  6F58               	movwf	(_controller+8)& (0+255),b
  6426                           
  6427                           ;fs_speed_controller.c: 80:     controller.leftMotorSpeed = 0;
  6428  0054D0  0E00               	movlw	0
  6429  0054D2  6F57               	movwf	(_controller+7)& (0+255),b
  6430  0054D4  0E00               	movlw	0
  6431  0054D6  6F56               	movwf	(_controller+6)& (0+255),b
  6432                           
  6433                           ;fs_speed_controller.c: 81:     driver_limit.ortalama = 0;
  6434  0054D8  0E00               	movlw	0
  6435  0054DA  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  6436  0054DC  0E00               	movlw	0
  6437  0054DE  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  6438  0054E0  0E00               	movlw	0
  6439  0054E2  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  6440  0054E4  0E00               	movlw	0
  6441  0054E6  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  6442  0054E8                     
  6443                           ; BSR set to: 1
  6444                           ;fs_speed_controller.c: 82:     PWM1_setDC(controller.leftMotorSpeed);
  6445  0054E8  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  6446  0054EC  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  6447  0054F0  EC5D  F027         	call	_PWM1_setDC	;wreg free
  6448  0054F4                     
  6449                           ;fs_speed_controller.c: 83:     PWM2_setDC(controller.rightMotorSpeed);
  6450  0054F4  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  6451  0054F8  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  6452  0054FC  EC20  F027         	call	_PWM2_setDC	;wreg free
  6453  005500  0012               	return		;funcret
  6454  005502                     __end_of_stopMotor:
  6455                           	callstack 0
  6456                           
  6457 ;; *************** function _PWM2_setDC *****************
  6458 ;; Defined at:
  6459 ;;		line 76 in file "fs_pwm.c"
  6460 ;; Parameters:    Size  Location     Type
  6461 ;;  dutycycle       2   87[COMRAM] short 
  6462 ;; Auto vars:     Size  Location     Type
  6463 ;;  duty            2   91[COMRAM] unsigned short 
  6464 ;; Return value:  Size  Location     Type
  6465 ;;                  1    wreg      void 
  6466 ;; Registers used:
  6467 ;;		wreg, status,2, status,0, cstack
  6468 ;; Tracked objects:
  6469 ;;		On entry : 0/0
  6470 ;;		On exit  : 0/0
  6471 ;;		Unchanged: 0/0
  6472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6473 ;;      Params:         2       0       0       0       0       0       0
  6474 ;;      Locals:         2       0       0       0       0       0       0
  6475 ;;      Temps:          2       0       0       0       0       0       0
  6476 ;;      Totals:         6       0       0       0       0       0       0
  6477 ;;Total ram usage:        6 bytes
  6478 ;; Hardware stack levels used:    1
  6479 ;; Hardware stack levels required when called:    2
  6480 ;; This function calls:
  6481 ;;		___fltol
  6482 ;;		___xxtofl
  6483 ;;		_fabsf
  6484 ;; This function is called by:
  6485 ;;		_main
  6486 ;;		_stopMotor
  6487 ;;		_startMotor
  6488 ;; This function uses a non-reentrant model
  6489 ;;
  6490                           
  6491                           	psect	text26
  6492  004E40                     __ptext26:
  6493                           	callstack 0
  6494  004E40                     _PWM2_setDC:
  6495                           	callstack 24
  6496  004E40                     
  6497                           ;fs_pwm.c: 80:     if (dutycycle <= 1023)
  6498  004E40  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  6499  004E42  EF2C  F027         	goto	u6810
  6500  004E46  0E04               	movlw	4
  6501  004E48  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  6502  004E4A  B0D8               	btfsc	status,0,c
  6503  004E4C  EF2A  F027         	goto	u6811
  6504  004E50  EF2C  F027         	goto	u6810
  6505  004E54                     u6811:
  6506  004E54  EF5C  F027         	goto	l578
  6507  004E58                     u6810:
  6508  004E58                     
  6509                           ;fs_pwm.c: 81:     {;fs_pwm.c: 82:         duty = (uint16_t) fabsf(dutycycle);
  6510  004E58  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  6511  004E5C  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  6512  004E60  0E00               	movlw	0
  6513  004E62  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6514  004E64  0EFF               	movlw	-1
  6515  004E66  6E10               	movwf	(___xxtofl@val+2)^0,c
  6516  004E68  6E11               	movwf	(___xxtofl@val+3)^0,c
  6517  004E6A  0E01               	movlw	1
  6518  004E6C  ECAA  F01A         	call	___xxtofl
  6519  004E70  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6520  004E74  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6521  004E78  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6522  004E7C  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6523  004E80  EC27  F02B         	call	_fabsf	;wreg free
  6524  004E84  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6525  004E88  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6526  004E8C  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6527  004E90  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6528  004E94  ECD1  F020         	call	___fltol	;wreg free
  6529  004E98  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  6530  004E9C  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  6531  004EA0                     
  6532                           ;fs_pwm.c: 83:         CCPR2L = duty>>2;
  6533  004EA0  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  6534  004EA4  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  6535  004EA8  90D8               	bcf	status,0,c
  6536  004EAA  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6537  004EAC  325A               	rrcf	??_PWM2_setDC^0,f,c
  6538  004EAE  90D8               	bcf	status,0,c
  6539  004EB0  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6540  004EB2  325A               	rrcf	??_PWM2_setDC^0,f,c
  6541  004EB4  505A               	movf	??_PWM2_setDC^0,w,c
  6542  004EB6  6E67               	movwf	103,c	;volatile
  6543  004EB8                     l578:
  6544  004EB8  0012               	return		;funcret
  6545  004EBA                     __end_of_PWM2_setDC:
  6546                           	callstack 0
  6547                           
  6548 ;; *************** function _PWM1_setDC *****************
  6549 ;; Defined at:
  6550 ;;		line 60 in file "fs_pwm.c"
  6551 ;; Parameters:    Size  Location     Type
  6552 ;;  dutycycle       2   87[COMRAM] short 
  6553 ;; Auto vars:     Size  Location     Type
  6554 ;;  duty            2   91[COMRAM] unsigned short 
  6555 ;; Return value:  Size  Location     Type
  6556 ;;                  1    wreg      void 
  6557 ;; Registers used:
  6558 ;;		wreg, status,2, status,0, cstack
  6559 ;; Tracked objects:
  6560 ;;		On entry : 0/0
  6561 ;;		On exit  : 0/0
  6562 ;;		Unchanged: 0/0
  6563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6564 ;;      Params:         2       0       0       0       0       0       0
  6565 ;;      Locals:         2       0       0       0       0       0       0
  6566 ;;      Temps:          2       0       0       0       0       0       0
  6567 ;;      Totals:         6       0       0       0       0       0       0
  6568 ;;Total ram usage:        6 bytes
  6569 ;; Hardware stack levels used:    1
  6570 ;; Hardware stack levels required when called:    2
  6571 ;; This function calls:
  6572 ;;		___fltol
  6573 ;;		___xxtofl
  6574 ;;		_fabsf
  6575 ;; This function is called by:
  6576 ;;		_main
  6577 ;;		_stopMotor
  6578 ;;		_startMotor
  6579 ;; This function uses a non-reentrant model
  6580 ;;
  6581                           
  6582                           	psect	text27
  6583  004EBA                     __ptext27:
  6584                           	callstack 0
  6585  004EBA                     _PWM1_setDC:
  6586                           	callstack 24
  6587  004EBA                     
  6588                           ;fs_pwm.c: 64:     if (dutycycle <= 1023)
  6589  004EBA  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  6590  004EBC  EF69  F027         	goto	u6800
  6591  004EC0  0E04               	movlw	4
  6592  004EC2  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  6593  004EC4  B0D8               	btfsc	status,0,c
  6594  004EC6  EF67  F027         	goto	u6801
  6595  004ECA  EF69  F027         	goto	u6800
  6596  004ECE                     u6801:
  6597  004ECE  EF99  F027         	goto	l574
  6598  004ED2                     u6800:
  6599  004ED2                     
  6600                           ;fs_pwm.c: 65:     {;fs_pwm.c: 66:         duty = (uint16_t) fabsf(dutycycle);
  6601  004ED2  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  6602  004ED6  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  6603  004EDA  0E00               	movlw	0
  6604  004EDC  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6605  004EDE  0EFF               	movlw	-1
  6606  004EE0  6E10               	movwf	(___xxtofl@val+2)^0,c
  6607  004EE2  6E11               	movwf	(___xxtofl@val+3)^0,c
  6608  004EE4  0E01               	movlw	1
  6609  004EE6  ECAA  F01A         	call	___xxtofl
  6610  004EEA  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6611  004EEE  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6612  004EF2  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6613  004EF6  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6614  004EFA  EC27  F02B         	call	_fabsf	;wreg free
  6615  004EFE  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6616  004F02  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6617  004F06  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6618  004F0A  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6619  004F0E  ECD1  F020         	call	___fltol	;wreg free
  6620  004F12  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  6621  004F16  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  6622  004F1A                     
  6623                           ;fs_pwm.c: 67:         CCPR1L = duty>>2;
  6624  004F1A  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  6625  004F1E  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  6626  004F22  90D8               	bcf	status,0,c
  6627  004F24  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6628  004F26  325A               	rrcf	??_PWM1_setDC^0,f,c
  6629  004F28  90D8               	bcf	status,0,c
  6630  004F2A  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6631  004F2C  325A               	rrcf	??_PWM1_setDC^0,f,c
  6632  004F2E  505A               	movf	??_PWM1_setDC^0,w,c
  6633  004F30  6EBE               	movwf	190,c	;volatile
  6634  004F32                     l574:
  6635  004F32  0012               	return		;funcret
  6636  004F34                     __end_of_PWM1_setDC:
  6637                           	callstack 0
  6638                           
  6639 ;; *************** function _fabsf *****************
  6640 ;; Defined at:
  6641 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  6642 ;; Parameters:    Size  Location     Type
  6643 ;;  x               4   27[COMRAM] float 
  6644 ;; Auto vars:     Size  Location     Type
  6645 ;;  u               4   31[COMRAM] struct .
  6646 ;; Return value:  Size  Location     Type
  6647 ;;                  4   27[COMRAM] float 
  6648 ;; Registers used:
  6649 ;;		status,2, status,0
  6650 ;; Tracked objects:
  6651 ;;		On entry : 0/0
  6652 ;;		On exit  : 0/0
  6653 ;;		Unchanged: 0/0
  6654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6655 ;;      Params:         4       0       0       0       0       0       0
  6656 ;;      Locals:         4       0       0       0       0       0       0
  6657 ;;      Temps:          0       0       0       0       0       0       0
  6658 ;;      Totals:         8       0       0       0       0       0       0
  6659 ;;Total ram usage:        8 bytes
  6660 ;; Hardware stack levels used:    1
  6661 ;; Hardware stack levels required when called:    1
  6662 ;; This function calls:
  6663 ;;		Nothing
  6664 ;; This function is called by:
  6665 ;;		_PWM1_setDC
  6666 ;;		_PWM2_setDC
  6667 ;; This function uses a non-reentrant model
  6668 ;;
  6669                           
  6670                           	psect	text28
  6671  00564E                     __ptext28:
  6672                           	callstack 0
  6673  00564E                     _fabsf:
  6674                           	callstack 24
  6675  00564E  C1AB  F020         	movff	fabsf@F463,fabsf@u
  6676  005652  C1AC  F021         	movff	fabsf@F463+1,fabsf@u+1
  6677  005656  C1AD  F022         	movff	fabsf@F463+2,fabsf@u+2
  6678  00565A  C1AE  F023         	movff	fabsf@F463+3,fabsf@u+3
  6679  00565E  C01C  F020         	movff	fabsf@x,fabsf@u
  6680  005662  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  6681  005666  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  6682  00566A  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  6683  00566E  9E23               	bcf	(fabsf@u+3)^0,7,c
  6684  005670  C020  F01C         	movff	fabsf@u,?_fabsf
  6685  005674  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  6686  005678  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  6687  00567C  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  6688  005680  0012               	return		;funcret
  6689  005682                     __end_of_fabsf:
  6690                           	callstack 0
  6691                           
  6692 ;; *************** function ___xxtofl *****************
  6693 ;; Defined at:
  6694 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  6695 ;; Parameters:    Size  Location     Type
  6696 ;;  sign            1    wreg     unsigned char 
  6697 ;;  val             4   13[COMRAM] long 
  6698 ;; Auto vars:     Size  Location     Type
  6699 ;;  sign            1   21[COMRAM] unsigned char 
  6700 ;;  arg             4   23[COMRAM] unsigned long 
  6701 ;;  exp             1   22[COMRAM] unsigned char 
  6702 ;; Return value:  Size  Location     Type
  6703 ;;                  4   13[COMRAM] unsigned char 
  6704 ;; Registers used:
  6705 ;;		wreg, status,2, status,0
  6706 ;; Tracked objects:
  6707 ;;		On entry : 0/0
  6708 ;;		On exit  : 0/0
  6709 ;;		Unchanged: 0/0
  6710 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6711 ;;      Params:         4       0       0       0       0       0       0
  6712 ;;      Locals:         6       0       0       0       0       0       0
  6713 ;;      Temps:          4       0       0       0       0       0       0
  6714 ;;      Totals:        14       0       0       0       0       0       0
  6715 ;;Total ram usage:       14 bytes
  6716 ;; Hardware stack levels used:    1
  6717 ;; Hardware stack levels required when called:    1
  6718 ;; This function calls:
  6719 ;;		Nothing
  6720 ;; This function is called by:
  6721 ;;		_scanAdcConversion
  6722 ;;		_calculatedAverageValue
  6723 ;;		_PWM1_setDC
  6724 ;;		_PWM2_setDC
  6725 ;;		_speedControl
  6726 ;; This function uses a non-reentrant model
  6727 ;;
  6728                           
  6729                           	psect	text29
  6730  003554                     __ptext29:
  6731                           	callstack 0
  6732  003554                     ___xxtofl:
  6733                           	callstack 24
  6734                           
  6735                           ;incstack = 0
  6736                           ;___xxtofl@sign stored from wreg
  6737  003554  6E16               	movwf	___xxtofl@sign^0,c
  6738  003556  5016               	movf	___xxtofl@sign^0,w,c
  6739  003558  B4D8               	btfsc	status,2,c
  6740  00355A  EFB1  F01A         	goto	u6491
  6741  00355E  EFB3  F01A         	goto	u6490
  6742  003562                     u6491:
  6743  003562  EFD5  F01A         	goto	l1346
  6744  003566                     u6490:
  6745  003566  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6746  003568  EFBA  F01A         	goto	u6500
  6747  00356C  EFB8  F01A         	goto	u6501
  6748  003570                     u6501:
  6749  003570  EFD5  F01A         	goto	l1346
  6750  003574                     u6500:
  6751  003574  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6752  003578  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6753  00357C  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6754  003580  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6755  003584  1E12               	comf	??___xxtofl^0,f,c
  6756  003586  1E13               	comf	(??___xxtofl+1)^0,f,c
  6757  003588  1E14               	comf	(??___xxtofl+2)^0,f,c
  6758  00358A  1E15               	comf	(??___xxtofl+3)^0,f,c
  6759  00358C  2A12               	incf	??___xxtofl^0,f,c
  6760  00358E  0E00               	movlw	0
  6761  003590  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6762  003592  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6763  003594  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6764  003596  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6765  00359A  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6766  00359E  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6767  0035A2  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6768  0035A6  EFDD  F01A         	goto	l5536
  6769  0035AA                     l1346:
  6770  0035AA  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6771  0035AE  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6772  0035B2  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6773  0035B6  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6774  0035BA                     l5536:
  6775  0035BA  500E               	movf	___xxtofl@val^0,w,c
  6776  0035BC  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6777  0035BE  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6778  0035C0  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6779  0035C2  A4D8               	btfss	status,2,c
  6780  0035C4  EFE6  F01A         	goto	u6511
  6781  0035C8  EFE8  F01A         	goto	u6510
  6782  0035CC                     u6511:
  6783  0035CC  EFF2  F01A         	goto	l5542
  6784  0035D0                     u6510:
  6785  0035D0  0E00               	movlw	0
  6786  0035D2  6E0E               	movwf	?___xxtofl^0,c
  6787  0035D4  0E00               	movlw	0
  6788  0035D6  6E0F               	movwf	(?___xxtofl+1)^0,c
  6789  0035D8  0E00               	movlw	0
  6790  0035DA  6E10               	movwf	(?___xxtofl+2)^0,c
  6791  0035DC  0E00               	movlw	0
  6792  0035DE  6E11               	movwf	(?___xxtofl+3)^0,c
  6793  0035E0  EF83  F01B         	goto	l1349
  6794  0035E4                     l5542:
  6795  0035E4  0E96               	movlw	150
  6796  0035E6  6E17               	movwf	___xxtofl@exp^0,c
  6797  0035E8  EFFC  F01A         	goto	l5546
  6798  0035EC                     l5544:
  6799  0035EC  2A17               	incf	___xxtofl@exp^0,f,c
  6800  0035EE  90D8               	bcf	status,0,c
  6801  0035F0  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6802  0035F2  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6803  0035F4  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6804  0035F6  3218               	rrcf	___xxtofl@arg^0,f,c
  6805  0035F8                     l5546:
  6806  0035F8  0E00               	movlw	0
  6807  0035FA  1418               	andwf	___xxtofl@arg^0,w,c
  6808  0035FC  6E12               	movwf	??___xxtofl^0,c
  6809  0035FE  0E00               	movlw	0
  6810  003600  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6811  003602  6E13               	movwf	(??___xxtofl+1)^0,c
  6812  003604  0E00               	movlw	0
  6813  003606  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6814  003608  6E14               	movwf	(??___xxtofl+2)^0,c
  6815  00360A  0EFE               	movlw	254
  6816  00360C  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6817  00360E  6E15               	movwf	(??___xxtofl+3)^0,c
  6818  003610  5012               	movf	??___xxtofl^0,w,c
  6819  003612  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6820  003614  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6821  003616  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6822  003618  A4D8               	btfss	status,2,c
  6823  00361A  EF11  F01B         	goto	u6521
  6824  00361E  EF13  F01B         	goto	u6520
  6825  003622                     u6521:
  6826  003622  EFF6  F01A         	goto	l5544
  6827  003626                     u6520:
  6828  003626  EF21  F01B         	goto	l1353
  6829  00362A                     l5548:
  6830  00362A  2A17               	incf	___xxtofl@exp^0,f,c
  6831  00362C  0E01               	movlw	1
  6832  00362E  2618               	addwf	___xxtofl@arg^0,f,c
  6833  003630  0E00               	movlw	0
  6834  003632  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6835  003634  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6836  003636  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6837  003638  90D8               	bcf	status,0,c
  6838  00363A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6839  00363C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6840  00363E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6841  003640  3218               	rrcf	___xxtofl@arg^0,f,c
  6842  003642                     l1353:
  6843  003642  0E00               	movlw	0
  6844  003644  1418               	andwf	___xxtofl@arg^0,w,c
  6845  003646  6E12               	movwf	??___xxtofl^0,c
  6846  003648  0E00               	movlw	0
  6847  00364A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6848  00364C  6E13               	movwf	(??___xxtofl+1)^0,c
  6849  00364E  0E00               	movlw	0
  6850  003650  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6851  003652  6E14               	movwf	(??___xxtofl+2)^0,c
  6852  003654  0EFF               	movlw	255
  6853  003656  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6854  003658  6E15               	movwf	(??___xxtofl+3)^0,c
  6855  00365A  5012               	movf	??___xxtofl^0,w,c
  6856  00365C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6857  00365E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6858  003660  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6859  003662  A4D8               	btfss	status,2,c
  6860  003664  EF36  F01B         	goto	u6531
  6861  003668  EF38  F01B         	goto	u6530
  6862  00366C                     u6531:
  6863  00366C  EF15  F01B         	goto	l5548
  6864  003670                     u6530:
  6865  003670  EF40  F01B         	goto	l5556
  6866  003674                     l5554:
  6867  003674  0617               	decf	___xxtofl@exp^0,f,c
  6868  003676  90D8               	bcf	status,0,c
  6869  003678  3618               	rlcf	___xxtofl@arg^0,f,c
  6870  00367A  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6871  00367C  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6872  00367E  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6873  003680                     l5556:
  6874  003680  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6875  003682  EF45  F01B         	goto	u6541
  6876  003686  EF47  F01B         	goto	u6540
  6877  00368A                     u6541:
  6878  00368A  EF4F  F01B         	goto	l1360
  6879  00368E                     u6540:
  6880  00368E  0E02               	movlw	2
  6881  003690  6017               	cpfslt	___xxtofl@exp^0,c
  6882  003692  EF4D  F01B         	goto	u6551
  6883  003696  EF4F  F01B         	goto	u6550
  6884  00369A                     u6551:
  6885  00369A  EF3A  F01B         	goto	l5554
  6886  00369E                     u6550:
  6887  00369E                     l1360:
  6888  00369E  B017               	btfsc	___xxtofl@exp^0,0,c
  6889  0036A0  EF54  F01B         	goto	u6561
  6890  0036A4  EF56  F01B         	goto	u6560
  6891  0036A8                     u6561:
  6892  0036A8  EF57  F01B         	goto	l5562
  6893  0036AC                     u6560:
  6894  0036AC  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6895  0036AE                     l5562:
  6896  0036AE  90D8               	bcf	status,0,c
  6897  0036B0  3217               	rrcf	___xxtofl@exp^0,f,c
  6898  0036B2  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6899  0036B6  6A13               	clrf	(??___xxtofl+1)^0,c
  6900  0036B8  6A14               	clrf	(??___xxtofl+2)^0,c
  6901  0036BA  6A15               	clrf	(??___xxtofl+3)^0,c
  6902  0036BC  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6903  0036C0  6A14               	clrf	(??___xxtofl+2)^0,c
  6904  0036C2  6A13               	clrf	(??___xxtofl+1)^0,c
  6905  0036C4  6A12               	clrf	??___xxtofl^0,c
  6906  0036C6  5012               	movf	??___xxtofl^0,w,c
  6907  0036C8  1218               	iorwf	___xxtofl@arg^0,f,c
  6908  0036CA  5013               	movf	(??___xxtofl+1)^0,w,c
  6909  0036CC  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6910  0036CE  5014               	movf	(??___xxtofl+2)^0,w,c
  6911  0036D0  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6912  0036D2  5015               	movf	(??___xxtofl+3)^0,w,c
  6913  0036D4  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6914  0036D6  5016               	movf	___xxtofl@sign^0,w,c
  6915  0036D8  B4D8               	btfsc	status,2,c
  6916  0036DA  EF71  F01B         	goto	u6571
  6917  0036DE  EF73  F01B         	goto	u6570
  6918  0036E2                     u6571:
  6919  0036E2  EF7B  F01B         	goto	l5572
  6920  0036E6                     u6570:
  6921  0036E6  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6922  0036E8  EF7A  F01B         	goto	u6580
  6923  0036EC  EF78  F01B         	goto	u6581
  6924  0036F0                     u6581:
  6925  0036F0  EF7B  F01B         	goto	l5572
  6926  0036F4                     u6580:
  6927  0036F4  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6928  0036F6                     l5572:
  6929  0036F6  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6930  0036FA  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6931  0036FE  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6932  003702  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6933  003706                     l1349:
  6934  003706  0012               	return		;funcret
  6935  003708                     __end_of___xxtofl:
  6936                           	callstack 0
  6937                           
  6938 ;; *************** function _sprintf *****************
  6939 ;; Defined at:
  6940 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6941 ;; Parameters:    Size  Location     Type
  6942 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6943 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  6944 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  6945 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6946 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  6947 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6948 ;; Auto vars:     Size  Location     Type
  6949 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6950 ;;  ap              2  121[BANK0 ] PTR void [1]
  6951 ;;		 -> ?_sprintf(2), 
  6952 ;;  ret             2    0        int 
  6953 ;; Return value:  Size  Location     Type
  6954 ;;                  2  111[BANK0 ] int 
  6955 ;; Registers used:
  6956 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6957 ;; Tracked objects:
  6958 ;;		On entry : 0/0
  6959 ;;		On exit  : 0/0
  6960 ;;		Unchanged: 0/0
  6961 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6962 ;;      Params:         0       8       0       0       0       0       0
  6963 ;;      Locals:         0      10       0       0       0       0       0
  6964 ;;      Temps:          0       0       0       0       0       0       0
  6965 ;;      Totals:         0      18       0       0       0       0       0
  6966 ;;Total ram usage:       18 bytes
  6967 ;; Hardware stack levels used:    1
  6968 ;; Hardware stack levels required when called:    8
  6969 ;; This function calls:
  6970 ;;		_vfprintf
  6971 ;; This function is called by:
  6972 ;;		_mainMenu
  6973 ;;		_stopMenu
  6974 ;;		_pauseMenu
  6975 ;;		_secretMenu
  6976 ;;		_speedLimitSettingMenu
  6977 ;;		_stopTimeSettingMenu
  6978 ;;		_driverTimeSettingMenu
  6979 ;; This function uses a non-reentrant model
  6980 ;;
  6981                           
  6982                           	psect	text30
  6983  00524E                     __ptext30:
  6984                           	callstack 0
  6985  00524E                     _sprintf:
  6986                           	callstack 19
  6987  00524E  0ED3               	movlw	low (?_sprintf+4)
  6988  005250  0100               	movlb	0	; () banked
  6989  005252  6FD9               	movwf	sprintf@ap& (0+255),b
  6990  005254  0E00               	movlw	high (?_sprintf+4)
  6991  005256  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6992  005258  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6993  00525C  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6994  005260                     
  6995                           ; BSR set to: 0
  6996  005260  0E00               	movlw	0
  6997  005262  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6998  005264  0E00               	movlw	0
  6999  005266  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  7000  005268                     
  7001                           ; BSR set to: 0
  7002  005268  0E00               	movlw	0
  7003  00526A  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  7004  00526C  0E00               	movlw	0
  7005  00526E  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7006  005270                     
  7007                           ; BSR set to: 0
  7008  005270  0EDB               	movlw	low sprintf@f
  7009  005272  6FC7               	movwf	vfprintf@fp& (0+255),b
  7010  005274  0E00               	movlw	high sprintf@f
  7011  005276  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  7012  005278  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7013  00527C  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7014  005280  0ED9               	movlw	low sprintf@ap
  7015  005282  6FCB               	movwf	vfprintf@ap& (0+255),b
  7016  005284  0E00               	movlw	high sprintf@ap
  7017  005286  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  7018  005288  EC0A  F028         	call	_vfprintf	;wreg free
  7019  00528C  0100               	movlb	0	; () banked
  7020  00528E  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  7021  005290  25CF               	addwf	sprintf@s& (0+255),w,b
  7022  005292  6ED9               	movwf	fsr2l,c
  7023  005294  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7024  005296  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  7025  005298  6EDA               	movwf	fsr2h,c
  7026  00529A  0E00               	movlw	0
  7027  00529C  6EDF               	movwf	indf2,c
  7028  00529E                     
  7029                           ; BSR set to: 0
  7030  00529E  0012               	return		;funcret
  7031  0052A0                     __end_of_sprintf:
  7032                           	callstack 0
  7033                           
  7034 ;; *************** function _vfprintf *****************
  7035 ;; Defined at:
  7036 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7037 ;; Parameters:    Size  Location     Type
  7038 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7039 ;;		 -> sprintf@f(6), 
  7040 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7041 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  7042 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  7043 ;;  ap              2  107[BANK0 ] PTR PTR void 
  7044 ;;		 -> sprintf@ap(2), 
  7045 ;; Auto vars:     Size  Location     Type
  7046 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  7047 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  7048 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  7049 ;; Return value:  Size  Location     Type
  7050 ;;                  2  103[BANK0 ] int 
  7051 ;; Registers used:
  7052 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7053 ;; Tracked objects:
  7054 ;;		On entry : 0/0
  7055 ;;		On exit  : 0/0
  7056 ;;		Unchanged: 0/0
  7057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7058 ;;      Params:         0       6       0       0       0       0       0
  7059 ;;      Locals:         0       2       0       0       0       0       0
  7060 ;;      Temps:          0       0       0       0       0       0       0
  7061 ;;      Totals:         0       8       0       0       0       0       0
  7062 ;;Total ram usage:        8 bytes
  7063 ;; Hardware stack levels used:    1
  7064 ;; Hardware stack levels required when called:    7
  7065 ;; This function calls:
  7066 ;;		_vfpfcnvrt
  7067 ;; This function is called by:
  7068 ;;		_sprintf
  7069 ;; This function uses a non-reentrant model
  7070 ;;
  7071                           
  7072                           	psect	text31
  7073  005014                     __ptext31:
  7074                           	callstack 0
  7075  005014                     _vfprintf:
  7076                           	callstack 19
  7077  005014                     
  7078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7079  005014  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  7080  005018  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7081  00501C                     
  7082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  7083  00501C  0E00               	movlw	0
  7084  00501E  0101               	movlb	1	; () banked
  7085  005020  6FB0               	movwf	(_nout+1)& (0+255),b
  7086  005022  0E00               	movlw	0
  7087  005024  6FAF               	movwf	_nout& (0+255),b
  7088                           
  7089                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  7090  005026  EF2C  F028         	goto	l5848
  7091  00502A                     l5846:
  7092                           
  7093                           ; BSR set to: 1
  7094                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7095  00502A  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  7096  00502E  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7097  005032  0ECD               	movlw	low vfprintf@cfmt
  7098  005034  0100               	movlb	0	; () banked
  7099  005036  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  7100  005038  0E00               	movlw	high vfprintf@cfmt
  7101  00503A  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7102  00503C  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  7103  005040  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7104  005044  EC2A  F00A         	call	_vfpfcnvrt	;wreg free
  7105  005048  0100               	movlb	0	; () banked
  7106  00504A  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  7107  00504C  0101               	movlb	1	; () banked
  7108  00504E  27AF               	addwf	_nout& (0+255),f,b
  7109  005050  0100               	movlb	0	; () banked
  7110  005052  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7111  005054  0101               	movlb	1	; () banked
  7112  005056  23B0               	addwfc	(_nout+1)& (0+255),f,b
  7113  005058                     l5848:
  7114                           
  7115                           ; BSR set to: 1
  7116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  7117  005058  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  7118  00505C  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7119  005060                     	if	0	;tblptru may be non-zero
  7120  005060                     	endif
  7121  005060                     	if	0	;tblptru may be non-zero
  7122  005060                     	endif
  7123  005060  0008               	tblrd		*
  7124  005062  50F5               	movf	tablat,w,c
  7125  005064  0900               	iorlw	0
  7126  005066  A4D8               	btfss	status,2,c
  7127  005068  EF38  F028         	goto	u6861
  7128  00506C  EF3A  F028         	goto	u6860
  7129  005070                     u6861:
  7130  005070  EF15  F028         	goto	l5846
  7131  005074                     u6860:
  7132  005074                     
  7133                           ; BSR set to: 1
  7134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  7135  005074  C1AF  F0C7         	movff	_nout,?_vfprintf
  7136  005078  C1B0  F0C8         	movff	_nout+1,?_vfprintf+1
  7137  00507C                     
  7138                           ; BSR set to: 1
  7139  00507C  0012               	return		;funcret
  7140  00507E                     __end_of_vfprintf:
  7141                           	callstack 0
  7142                           
  7143 ;; *************** function _vfpfcnvrt *****************
  7144 ;; Defined at:
  7145 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7146 ;; Parameters:    Size  Location     Type
  7147 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  7148 ;;		 -> sprintf@f(6), 
  7149 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  7150 ;;		 -> vfprintf@cfmt(2), 
  7151 ;;  ap              2   75[BANK0 ] PTR PTR void 
  7152 ;;		 -> sprintf@ap(2), 
  7153 ;; Auto vars:     Size  Location     Type
  7154 ;;  ll              8   81[BANK0 ] long long 
  7155 ;;  llu             8    0        unsigned long long 
  7156 ;;  f               4   95[BANK0 ] unsigned long long 
  7157 ;;  ct              3   99[BANK0 ] unsigned char [3]
  7158 ;;  vp              3    0        PTR void 
  7159 ;;  cp              3    0        PTR unsigned char 
  7160 ;;  i               2    0        int 
  7161 ;;  done            2    0        int 
  7162 ;;  c               1  102[BANK0 ] unsigned char 
  7163 ;; Return value:  Size  Location     Type
  7164 ;;                  2   71[BANK0 ] int 
  7165 ;; Registers used:
  7166 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7167 ;; Tracked objects:
  7168 ;;		On entry : 0/0
  7169 ;;		On exit  : 0/0
  7170 ;;		Unchanged: 0/0
  7171 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7172 ;;      Params:         0       6       0       0       0       0       0
  7173 ;;      Locals:         0      22       0       0       0       0       0
  7174 ;;      Temps:          0       4       0       0       0       0       0
  7175 ;;      Totals:         0      32       0       0       0       0       0
  7176 ;;Total ram usage:       32 bytes
  7177 ;; Hardware stack levels used:    1
  7178 ;; Hardware stack levels required when called:    6
  7179 ;; This function calls:
  7180 ;;		_atoi
  7181 ;;		_dtoa
  7182 ;;		_efgtoa
  7183 ;;		_fputc
  7184 ;;		_isdigit
  7185 ;;		_isupper
  7186 ;;		_strncmp
  7187 ;;		_tolower
  7188 ;; This function is called by:
  7189 ;;		_vfprintf
  7190 ;; This function uses a non-reentrant model
  7191 ;;
  7192                           
  7193                           	psect	text32
  7194  001454                     __ptext32:
  7195                           	callstack 0
  7196  001454                     _vfpfcnvrt:
  7197                           	callstack 19
  7198  001454                     
  7199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  7200  001454  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7201  001458  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7202  00145C  CFDE FFF6          	movff	postinc2,tblptrl
  7203  001460  CFDD FFF7          	movff	postdec2,tblptrh
  7204  001464                     	if	0	;tblptru may be non-zero
  7205  001464                     	endif
  7206  001464                     	if	0	;tblptru may be non-zero
  7207  001464                     	endif
  7208  001464  0008               	tblrd		*
  7209  001466  50F5               	movf	tablat,w,c
  7210  001468  0A25               	xorlw	37
  7211  00146A  A4D8               	btfss	status,2,c
  7212  00146C  EF3A  F00A         	goto	u6591
  7213  001470  EF3C  F00A         	goto	u6590
  7214  001474                     u6591:
  7215  001474  EF2D  F00D         	goto	l5686
  7216  001478                     u6590:
  7217  001478                     
  7218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  7219  001478  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7220  00147C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7221  001480  2ADE               	incf	postinc2,f,c
  7222  001482  0E00               	movlw	0
  7223  001484  22DD               	addwfc	postdec2,f,c
  7224  001486                     
  7225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  7226  001486  0E00               	movlw	0
  7227  001488  0101               	movlb	1	; () banked
  7228  00148A  6FB2               	movwf	(_width+1)& (0+255),b
  7229  00148C  0E00               	movlw	0
  7230  00148E  6FB1               	movwf	_width& (0+255),b
  7231  001490  C1B1  F0F8         	movff	_width,_flags
  7232  001494  C1B2  F0F9         	movff	_width+1,_flags+1
  7233  001498                     
  7234                           ; BSR set to: 1
  7235                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  7236  001498  0100               	movlb	0	; () banked
  7237  00149A  69F6               	setf	_prec& (0+255),b
  7238  00149C  69F7               	setf	(_prec+1)& (0+255),b
  7239  00149E                     
  7240                           ; BSR set to: 0
  7241                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  7242  00149E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7243  0014A2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7244  0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  7245  0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  7246  0014AE                     	if	0	;tblptru may be non-zero
  7247  0014AE                     	endif
  7248  0014AE                     	if	0	;tblptru may be non-zero
  7249  0014AE                     	endif
  7250  0014AE  0008               	tblrd		*
  7251  0014B0  50F5               	movf	tablat,w,c
  7252  0014B2  0A2A               	xorlw	42
  7253  0014B4  A4D8               	btfss	status,2,c
  7254  0014B6  EF5F  F00A         	goto	u6601
  7255  0014BA  EF61  F00A         	goto	u6600
  7256  0014BE                     u6601:
  7257  0014BE  EF8D  F00A         	goto	l5592
  7258  0014C2                     u6600:
  7259  0014C2                     
  7260                           ; BSR set to: 0
  7261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  7262  0014C2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7263  0014C6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7264  0014CA  2ADE               	incf	postinc2,f,c
  7265  0014CC  0E00               	movlw	0
  7266  0014CE  22DD               	addwfc	postdec2,f,c
  7267                           
  7268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7269  0014D0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7270  0014D4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7271  0014D8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7272  0014DC  0E02               	movlw	2
  7273  0014DE  26DE               	addwf	postinc2,f,c
  7274  0014E0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7275  0014E4  0E00               	movlw	0
  7276  0014E6  22DD               	addwfc	postdec2,f,c
  7277  0014E8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7278  0014EC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7279  0014F0  CFDE F1B1          	movff	postinc2,_width
  7280  0014F4  CFDD F1B2          	movff	postdec2,_width+1
  7281  0014F8                     
  7282                           ; BSR set to: 0
  7283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  7284  0014F8  0101               	movlb	1	; () banked
  7285  0014FA  BFB2               	btfsc	(_width+1)& (0+255),7,b
  7286  0014FC  EF84  F00A         	goto	u6610
  7287  001500  EF82  F00A         	goto	u6611
  7288  001504                     u6611:
  7289  001504  EFD1  F00A         	goto	l5602
  7290  001508                     u6610:
  7291  001508                     
  7292                           ; BSR set to: 1
  7293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  7294  001508  0100               	movlb	0	; () banked
  7295  00150A  81F8               	bsf	_flags& (0+255),0,b
  7296                           
  7297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  7298  00150C  0101               	movlb	1	; () banked
  7299  00150E  6DB1               	negf	_width& (0+255),b
  7300  001510  1FB2               	comf	(_width+1)& (0+255),f,b
  7301  001512  B0D8               	btfsc	status,0,c
  7302  001514  2BB2               	incf	(_width+1)& (0+255),f,b
  7303  001516  EFD1  F00A         	goto	l5602
  7304  00151A                     l5592:
  7305                           
  7306                           ; BSR set to: 0
  7307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  7308  00151A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7309  00151E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7310  001522  CFDE F008          	movff	postinc2,atoi@s
  7311  001526  CFDD F009          	movff	postdec2,atoi@s+1
  7312  00152A  EC50  F01C         	call	_atoi	;wreg free
  7313  00152E  C008  F1B1         	movff	?_atoi,_width
  7314  001532  C009  F1B2         	movff	?_atoi+1,_width+1
  7315                           
  7316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7317  001536  EFA4  F00A         	goto	l5596
  7318  00153A                     l5594:
  7319                           
  7320                           ; BSR set to: 0
  7321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  7322  00153A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7323  00153E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7324  001542  2ADE               	incf	postinc2,f,c
  7325  001544  0E00               	movlw	0
  7326  001546  22DD               	addwfc	postdec2,f,c
  7327  001548                     l5596:
  7328  001548  0ED0               	movlw	208
  7329  00154A  0100               	movlb	0	; () banked
  7330  00154C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7331  00154E  0EFF               	movlw	255
  7332  001550  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7333  001552  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7334  001556  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7335  00155A  CFDE FFF6          	movff	postinc2,tblptrl
  7336  00155E  CFDD FFF7          	movff	postdec2,tblptrh
  7337  001562                     	if	0	;tblptru may be non-zero
  7338  001562                     	endif
  7339  001562                     	if	0	;tblptru may be non-zero
  7340  001562                     	endif
  7341  001562  0008               	tblrd		*
  7342  001564  50F5               	movf	tablat,w,c
  7343  001566  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7344  001568  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7345  00156A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7346  00156C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7347  00156E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7348  001570  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7349  001572  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7350  001574  E10A               	bnz	u6620
  7351  001576  0E0A               	movlw	10
  7352  001578  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7353  00157A  A0D8               	btfss	status,0,c
  7354  00157C  EFC2  F00A         	goto	u6621
  7355  001580  EFC5  F00A         	goto	u6620
  7356  001584                     u6621:
  7357  001584  0E01               	movlw	1
  7358  001586  EFC6  F00A         	goto	u6630
  7359  00158A                     u6620:
  7360  00158A  0E00               	movlw	0
  7361  00158C                     u6630:
  7362  00158C  6FB9               	movwf	_vfpfcnvrt$3004& (0+255),b
  7363  00158E  6BBA               	clrf	(_vfpfcnvrt$3004+1)& (0+255),b
  7364  001590                     
  7365                           ; BSR set to: 0
  7366  001590  51B9               	movf	_vfpfcnvrt$3004& (0+255),w,b
  7367  001592  11BA               	iorwf	(_vfpfcnvrt$3004+1)& (0+255),w,b
  7368  001594  A4D8               	btfss	status,2,c
  7369  001596  EFCF  F00A         	goto	u6641
  7370  00159A  EFD1  F00A         	goto	u6640
  7371  00159E                     u6641:
  7372  00159E  EF9D  F00A         	goto	l5594
  7373  0015A2                     u6640:
  7374  0015A2                     l5602:
  7375                           
  7376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  7377  0015A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7378  0015A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7379  0015AA  CFDE FFF6          	movff	postinc2,tblptrl
  7380  0015AE  CFDD FFF7          	movff	postdec2,tblptrh
  7381  0015B2                     	if	0	;tblptru may be non-zero
  7382  0015B2                     	endif
  7383  0015B2                     	if	0	;tblptru may be non-zero
  7384  0015B2                     	endif
  7385  0015B2  0008               	tblrd		*
  7386  0015B4  50F5               	movf	tablat,w,c
  7387  0015B6  0A2E               	xorlw	46
  7388  0015B8  A4D8               	btfss	status,2,c
  7389  0015BA  EFE1  F00A         	goto	u6651
  7390  0015BE  EFE3  F00A         	goto	u6650
  7391  0015C2                     u6651:
  7392  0015C2  EF62  F00B         	goto	l5622
  7393  0015C6                     u6650:
  7394  0015C6                     
  7395                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  7396  0015C6  0E00               	movlw	0
  7397  0015C8  0100               	movlb	0	; () banked
  7398  0015CA  6FF7               	movwf	(_prec+1)& (0+255),b
  7399  0015CC  0E00               	movlw	0
  7400  0015CE  6FF6               	movwf	_prec& (0+255),b
  7401  0015D0                     
  7402                           ; BSR set to: 0
  7403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  7404  0015D0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7405  0015D4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7406  0015D8  2ADE               	incf	postinc2,f,c
  7407  0015DA  0E00               	movlw	0
  7408  0015DC  22DD               	addwfc	postdec2,f,c
  7409  0015DE                     
  7410                           ; BSR set to: 0
  7411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  7412  0015DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7413  0015E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7414  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  7415  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  7416  0015EE                     	if	0	;tblptru may be non-zero
  7417  0015EE                     	endif
  7418  0015EE                     	if	0	;tblptru may be non-zero
  7419  0015EE                     	endif
  7420  0015EE  0008               	tblrd		*
  7421  0015F0  50F5               	movf	tablat,w,c
  7422  0015F2  0A2A               	xorlw	42
  7423  0015F4  A4D8               	btfss	status,2,c
  7424  0015F6  EFFF  F00A         	goto	u6661
  7425  0015FA  EF01  F00B         	goto	u6660
  7426  0015FE                     u6661:
  7427  0015FE  EF1E  F00B         	goto	l5612
  7428  001602                     u6660:
  7429  001602                     
  7430                           ; BSR set to: 0
  7431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  7432  001602  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7433  001606  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7434  00160A  2ADE               	incf	postinc2,f,c
  7435  00160C  0E00               	movlw	0
  7436  00160E  22DD               	addwfc	postdec2,f,c
  7437                           
  7438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7439  001610  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7440  001614  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7441  001618  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7442  00161C  0E02               	movlw	2
  7443  00161E  26DE               	addwf	postinc2,f,c
  7444  001620  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7445  001624  0E00               	movlw	0
  7446  001626  22DD               	addwfc	postdec2,f,c
  7447  001628  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7448  00162C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7449  001630  CFDE F0F6          	movff	postinc2,_prec
  7450  001634  CFDD F0F7          	movff	postdec2,_prec+1
  7451                           
  7452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  7453  001638  EF62  F00B         	goto	l5622
  7454  00163C                     l5612:
  7455                           
  7456                           ; BSR set to: 0
  7457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  7458  00163C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7459  001640  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7460  001644  CFDE F008          	movff	postinc2,atoi@s
  7461  001648  CFDD F009          	movff	postdec2,atoi@s+1
  7462  00164C  EC50  F01C         	call	_atoi	;wreg free
  7463  001650  C008  F0F6         	movff	?_atoi,_prec
  7464  001654  C009  F0F7         	movff	?_atoi+1,_prec+1
  7465                           
  7466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7467  001658  EF35  F00B         	goto	l5616
  7468  00165C                     l5614:
  7469                           
  7470                           ; BSR set to: 0
  7471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  7472  00165C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7473  001660  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7474  001664  2ADE               	incf	postinc2,f,c
  7475  001666  0E00               	movlw	0
  7476  001668  22DD               	addwfc	postdec2,f,c
  7477  00166A                     l5616:
  7478  00166A  0ED0               	movlw	208
  7479  00166C  0100               	movlb	0	; () banked
  7480  00166E  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7481  001670  0EFF               	movlw	255
  7482  001672  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7483  001674  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7484  001678  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7485  00167C  CFDE FFF6          	movff	postinc2,tblptrl
  7486  001680  CFDD FFF7          	movff	postdec2,tblptrh
  7487  001684                     	if	0	;tblptru may be non-zero
  7488  001684                     	endif
  7489  001684                     	if	0	;tblptru may be non-zero
  7490  001684                     	endif
  7491  001684  0008               	tblrd		*
  7492  001686  50F5               	movf	tablat,w,c
  7493  001688  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7494  00168A  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7495  00168C  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7496  00168E  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7497  001690  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7498  001692  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7499  001694  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7500  001696  E10A               	bnz	u6670
  7501  001698  0E0A               	movlw	10
  7502  00169A  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7503  00169C  A0D8               	btfss	status,0,c
  7504  00169E  EF53  F00B         	goto	u6671
  7505  0016A2  EF56  F00B         	goto	u6670
  7506  0016A6                     u6671:
  7507  0016A6  0E01               	movlw	1
  7508  0016A8  EF57  F00B         	goto	u6680
  7509  0016AC                     u6670:
  7510  0016AC  0E00               	movlw	0
  7511  0016AE                     u6680:
  7512  0016AE  6FBB               	movwf	_vfpfcnvrt$3005& (0+255),b
  7513  0016B0  6BBC               	clrf	(_vfpfcnvrt$3005+1)& (0+255),b
  7514  0016B2                     
  7515                           ; BSR set to: 0
  7516  0016B2  51BB               	movf	_vfpfcnvrt$3005& (0+255),w,b
  7517  0016B4  11BC               	iorwf	(_vfpfcnvrt$3005+1)& (0+255),w,b
  7518  0016B6  A4D8               	btfss	status,2,c
  7519  0016B8  EF60  F00B         	goto	u6691
  7520  0016BC  EF62  F00B         	goto	u6690
  7521  0016C0                     u6691:
  7522  0016C0  EF2E  F00B         	goto	l5614
  7523  0016C4                     u6690:
  7524  0016C4                     l5622:
  7525                           
  7526                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  7527  0016C4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7528  0016C8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7529  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  7530  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  7531  0016D4                     	if	0	;tblptru may be non-zero
  7532  0016D4                     	endif
  7533  0016D4                     	if	0	;tblptru may be non-zero
  7534  0016D4                     	endif
  7535  0016D4  0008               	tblrd		*
  7536  0016D6  50F5               	movf	tablat,w,c
  7537  0016D8  6E07               	movwf	tolower@c^0,c
  7538  0016DA  6A08               	clrf	(tolower@c+1)^0,c
  7539  0016DC  EC72  F028         	call	_tolower	;wreg free
  7540  0016E0  5007               	movf	?_tolower^0,w,c
  7541  0016E2  0100               	movlb	0	; () banked
  7542  0016E4  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  7543  0016E6                     
  7544                           ; BSR set to: 0
  7545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  7546  0016E6  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  7547  0016E8  B4D8               	btfsc	status,2,c
  7548  0016EA  EF79  F00B         	goto	u6701
  7549  0016EE  EF7B  F00B         	goto	u6700
  7550  0016F2                     u6701:
  7551  0016F2  EFB5  F00B         	goto	l5632
  7552  0016F6                     u6700:
  7553  0016F6                     
  7554                           ; BSR set to: 0
  7555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  7556  0016F6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7557  0016FA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7558  0016FE  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7559  001702  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7560  001706  0E01               	movlw	1
  7561  001708  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7562  00170A  0E00               	movlw	0
  7563  00170C  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7564  00170E  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7565  001712  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7566  001716                     	if	0	;tblptru may be non-zero
  7567  001716                     	endif
  7568  001716                     	if	0	;tblptru may be non-zero
  7569  001716                     	endif
  7570  001716  0008               	tblrd		*
  7571  001718  50F5               	movf	tablat,w,c
  7572  00171A  6E07               	movwf	tolower@c^0,c
  7573  00171C  6A08               	clrf	(tolower@c+1)^0,c
  7574  00171E  EC72  F028         	call	_tolower	;wreg free
  7575  001722  5007               	movf	?_tolower^0,w,c
  7576  001724  0100               	movlb	0	; () banked
  7577  001726  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  7578  001728                     
  7579                           ; BSR set to: 0
  7580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  7581  001728  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  7582  00172A  B4D8               	btfsc	status,2,c
  7583  00172C  EF9A  F00B         	goto	u6711
  7584  001730  EF9C  F00B         	goto	u6710
  7585  001734                     u6711:
  7586  001734  EFB5  F00B         	goto	l5632
  7587  001738                     u6710:
  7588  001738                     
  7589                           ; BSR set to: 0
  7590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  7591  001738  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7592  00173C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7593  001740  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7594  001744  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7595  001748  0E02               	movlw	2
  7596  00174A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7597  00174C  0E00               	movlw	0
  7598  00174E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7599  001750  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7600  001754  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7601  001758                     	if	0	;tblptru may be non-zero
  7602  001758                     	endif
  7603  001758                     	if	0	;tblptru may be non-zero
  7604  001758                     	endif
  7605  001758  0008               	tblrd		*
  7606  00175A  50F5               	movf	tablat,w,c
  7607  00175C  6E07               	movwf	tolower@c^0,c
  7608  00175E  6A08               	clrf	(tolower@c+1)^0,c
  7609  001760  EC72  F028         	call	_tolower	;wreg free
  7610  001764  5007               	movf	?_tolower^0,w,c
  7611  001766  0100               	movlb	0	; () banked
  7612  001768  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  7613  00176A                     l5632:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7617  00176A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7618  00176E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7619  001772  CFDE FFF6          	movff	postinc2,tblptrl
  7620  001776  CFDD FFF7          	movff	postdec2,tblptrh
  7621  00177A                     	if	0	;tblptru may be non-zero
  7622  00177A                     	endif
  7623  00177A                     	if	0	;tblptru may be non-zero
  7624  00177A                     	endif
  7625  00177A  0008               	tblrd		*
  7626  00177C  50F5               	movf	tablat,w,c
  7627  00177E  0A64               	xorlw	100
  7628  001780  B4D8               	btfsc	status,2,c
  7629  001782  EFC5  F00B         	goto	u6721
  7630  001786  EFC7  F00B         	goto	u6720
  7631  00178A                     u6721:
  7632  00178A  EFD9  F00B         	goto	l5636
  7633  00178E                     u6720:
  7634  00178E                     
  7635                           ; BSR set to: 0
  7636  00178E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7637  001792  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7638  001796  CFDE FFF6          	movff	postinc2,tblptrl
  7639  00179A  CFDD FFF7          	movff	postdec2,tblptrh
  7640  00179E                     	if	0	;tblptru may be non-zero
  7641  00179E                     	endif
  7642  00179E                     	if	0	;tblptru may be non-zero
  7643  00179E                     	endif
  7644  00179E  0008               	tblrd		*
  7645  0017A0  50F5               	movf	tablat,w,c
  7646  0017A2  0A69               	xorlw	105
  7647  0017A4  A4D8               	btfss	status,2,c
  7648  0017A6  EFD7  F00B         	goto	u6731
  7649  0017AA  EFD9  F00B         	goto	u6730
  7650  0017AE                     u6731:
  7651  0017AE  EF19  F00C         	goto	l5642
  7652  0017B2                     u6730:
  7653  0017B2                     l5636:
  7654                           
  7655                           ; BSR set to: 0
  7656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  7657  0017B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7658  0017B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7659  0017BA  2ADE               	incf	postinc2,f,c
  7660  0017BC  0E00               	movlw	0
  7661  0017BE  22DD               	addwfc	postdec2,f,c
  7662                           
  7663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7664  0017C0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7665  0017C4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7666  0017C8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7667  0017CC  0E02               	movlw	2
  7668  0017CE  26DE               	addwf	postinc2,f,c
  7669  0017D0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7670  0017D4  0E00               	movlw	0
  7671  0017D6  22DD               	addwfc	postdec2,f,c
  7672  0017D8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7673  0017DC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7674  0017E0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  7675  0017E4  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  7676  0017E8  0E00               	movlw	0
  7677  0017EA  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7678  0017EC  0EFF               	movlw	-1
  7679  0017EE  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7680  0017F0  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7681  0017F2  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7682  0017F4  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7683  0017F6  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7684  0017F8  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7685  0017FA                     
  7686                           ; BSR set to: 0
  7687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  7688  0017FA  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7689  0017FE  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7690  001802  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7691  001806  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7692  00180A  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7693  00180E  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7694  001812  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7695  001816  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7696  00181A  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7697  00181E  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7698  001822  ECFE  F014         	call	_dtoa	;wreg free
  7699  001826  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  7700  00182A  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7701  00182E  EF48  F00D         	goto	l1568
  7702  001832                     l5642:
  7703                           
  7704                           ; BSR set to: 0
  7705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  7706  001832  0E66               	movlw	102
  7707  001834  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  7708  001836  A4D8               	btfss	status,2,c
  7709  001838  EF20  F00C         	goto	u6741
  7710  00183C  EF22  F00C         	goto	u6740
  7711  001840                     u6741:
  7712  001840  EF62  F00C         	goto	l5654
  7713  001844                     u6740:
  7714  001844                     
  7715                           ; BSR set to: 0
  7716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  7717  001844  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7718  001848  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7719  00184C  CFDE FFF6          	movff	postinc2,tblptrl
  7720  001850  CFDD FFF7          	movff	postdec2,tblptrh
  7721  001854                     	if	0	;tblptru may be non-zero
  7722  001854                     	endif
  7723  001854                     	if	0	;tblptru may be non-zero
  7724  001854                     	endif
  7725  001854  0008               	tblrd		*
  7726  001856  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7727  00185A                     
  7728                           ; BSR set to: 0
  7729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  7730  00185A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7731  00185E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7732  001862  2ADE               	incf	postinc2,f,c
  7733  001864  0E00               	movlw	0
  7734  001866  22DD               	addwfc	postdec2,f,c
  7735  001868                     
  7736                           ; BSR set to: 0
  7737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7738  001868  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7739  00186C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7740  001870  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7741  001874  0E04               	movlw	4
  7742  001876  26DE               	addwf	postinc2,f,c
  7743  001878  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7744  00187C  0E00               	movlw	0
  7745  00187E  22DD               	addwfc	postdec2,f,c
  7746  001880  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7747  001884  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7748  001888  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7749  00188C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7750  001890  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7751  001894  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7752  001898                     l5650:
  7753                           
  7754                           ; BSR set to: 0
  7755                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7756  001898  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7757  00189C  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7758  0018A0  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7759  0018A4  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7760  0018A8  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7761  0018AC  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7762  0018B0  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7763  0018B4  EC4F  F000         	call	_efgtoa	;wreg free
  7764  0018B8  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7765  0018BC  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7766  0018C0  EF48  F00D         	goto	l1568
  7767  0018C4                     l5654:
  7768                           
  7769                           ; BSR set to: 0
  7770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7771  0018C4  0EC3               	movlw	low vfpfcnvrt@ct
  7772  0018C6  6E01               	movwf	strncmp@_l^0,c
  7773  0018C8  0E00               	movlw	high vfpfcnvrt@ct
  7774  0018CA  6E02               	movwf	(strncmp@_l+1)^0,c
  7775  0018CC  0EFB               	movlw	low STR_27
  7776  0018CE  6E03               	movwf	strncmp@_r^0,c
  7777  0018D0  0E7F               	movlw	high STR_27
  7778  0018D2  6E04               	movwf	(strncmp@_r+1)^0,c
  7779  0018D4  0E00               	movlw	0
  7780  0018D6  6E06               	movwf	(strncmp@n+1)^0,c
  7781  0018D8  0E02               	movlw	2
  7782  0018DA  6E05               	movwf	strncmp@n^0,c
  7783  0018DC  EC42  F023         	call	_strncmp	;wreg free
  7784  0018E0  5001               	movf	?_strncmp^0,w,c
  7785  0018E2  1002               	iorwf	(?_strncmp+1)^0,w,c
  7786  0018E4  A4D8               	btfss	status,2,c
  7787  0018E6  EF77  F00C         	goto	u6751
  7788  0018EA  EF79  F00C         	goto	u6750
  7789  0018EE                     u6751:
  7790  0018EE  EFF5  F00C         	goto	l5670
  7791  0018F2                     u6750:
  7792  0018F2                     
  7793                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7794  0018F2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7795  0018F6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7796  0018FA  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7797  0018FE  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7798  001902  0E01               	movlw	1
  7799  001904  0100               	movlb	0	; () banked
  7800  001906  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7801  001908  0E00               	movlw	0
  7802  00190A  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7803  00190C  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7804  001910  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7805  001914                     	if	0	;tblptru may be non-zero
  7806  001914                     	endif
  7807  001914                     	if	0	;tblptru may be non-zero
  7808  001914                     	endif
  7809  001914  0008               	tblrd		*
  7810  001916  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7811  00191A  0EBF               	movlw	191
  7812  00191C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7813  00191E  0EFF               	movlw	255
  7814  001920  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7815  001922  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7816  001926  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7817  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  7818  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  7819  001932                     	if	0	;tblptru may be non-zero
  7820  001932                     	endif
  7821  001932                     	if	0	;tblptru may be non-zero
  7822  001932                     	endif
  7823  001932  0008               	tblrd		*
  7824  001934  50F5               	movf	tablat,w,c
  7825  001936  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7826  001938  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7827  00193A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7828  00193C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7829  00193E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7830  001940  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7831  001942  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7832  001944  E10A               	bnz	u6760
  7833  001946  0E1A               	movlw	26
  7834  001948  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7835  00194A  A0D8               	btfss	status,0,c
  7836  00194C  EFAA  F00C         	goto	u6761
  7837  001950  EFAD  F00C         	goto	u6760
  7838  001954                     u6761:
  7839  001954  0E01               	movlw	1
  7840  001956  EFAE  F00C         	goto	u6770
  7841  00195A                     u6760:
  7842  00195A  0E00               	movlw	0
  7843  00195C                     u6770:
  7844  00195C  6FBD               	movwf	_vfpfcnvrt$3010& (0+255),b
  7845  00195E  6BBE               	clrf	(_vfpfcnvrt$3010+1)& (0+255),b
  7846  001960                     
  7847                           ; BSR set to: 0
  7848  001960  51BD               	movf	_vfpfcnvrt$3010& (0+255),w,b
  7849  001962  11BE               	iorwf	(_vfpfcnvrt$3010+1)& (0+255),w,b
  7850  001964  B4D8               	btfsc	status,2,c
  7851  001966  EFB7  F00C         	goto	u6781
  7852  00196A  EFB9  F00C         	goto	u6780
  7853  00196E                     u6781:
  7854  00196E  EFD3  F00C         	goto	l5664
  7855  001972                     u6780:
  7856  001972                     
  7857                           ; BSR set to: 0
  7858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7859  001972  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7860  001976  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7861  00197A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7862  00197E  0E04               	movlw	4
  7863  001980  26DE               	addwf	postinc2,f,c
  7864  001982  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7865  001986  0E00               	movlw	0
  7866  001988  22DD               	addwfc	postdec2,f,c
  7867  00198A  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7868  00198E  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7869  001992  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7870  001996  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7871  00199A  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7872  00199E  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7873                           
  7874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7875  0019A2  EFEB  F00C         	goto	l1576
  7876  0019A6                     l5664:
  7877                           
  7878                           ; BSR set to: 0
  7879                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7880  0019A6  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7881  0019AA  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7882  0019AE  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7883  0019B2  0E04               	movlw	4
  7884  0019B4  26DE               	addwf	postinc2,f,c
  7885  0019B6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7886  0019BA  0E00               	movlw	0
  7887  0019BC  22DD               	addwfc	postdec2,f,c
  7888  0019BE  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7889  0019C2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7890  0019C6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7891  0019CA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7892  0019CE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7893  0019D2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7894  0019D6                     l1576:
  7895                           
  7896                           ; BSR set to: 0
  7897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7898  0019D6  0E02               	movlw	2
  7899  0019D8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7900  0019DC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7901  0019E0  26DE               	addwf	postinc2,f,c
  7902  0019E2  0E00               	movlw	0
  7903  0019E4  22DD               	addwfc	postdec2,f,c
  7904  0019E6  EF4C  F00C         	goto	l5650
  7905  0019EA                     l5670:
  7906                           
  7907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7908  0019EA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7909  0019EE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7910  0019F2  CFDE FFF6          	movff	postinc2,tblptrl
  7911  0019F6  CFDD FFF7          	movff	postdec2,tblptrh
  7912  0019FA                     	if	0	;tblptru may be non-zero
  7913  0019FA                     	endif
  7914  0019FA                     	if	0	;tblptru may be non-zero
  7915  0019FA                     	endif
  7916  0019FA  0008               	tblrd		*
  7917  0019FC  50F5               	movf	tablat,w,c
  7918  0019FE  0A25               	xorlw	37
  7919  001A00  A4D8               	btfss	status,2,c
  7920  001A02  EF05  F00D         	goto	u6791
  7921  001A06  EF07  F00D         	goto	u6790
  7922  001A0A                     u6791:
  7923  001A0A  EF1F  F00D         	goto	l5680
  7924  001A0E                     u6790:
  7925  001A0E                     
  7926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7927  001A0E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7928  001A12  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7929  001A16  2ADE               	incf	postinc2,f,c
  7930  001A18  0E00               	movlw	0
  7931  001A1A  22DD               	addwfc	postdec2,f,c
  7932  001A1C                     
  7933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7934  001A1C  0E00               	movlw	0
  7935  001A1E  6E02               	movwf	(fputc@c+1)^0,c
  7936  001A20  0E25               	movlw	37
  7937  001A22  6E01               	movwf	fputc@c^0,c
  7938  001A24  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7939  001A28  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7940  001A2C  EC14  F024         	call	_fputc	;wreg free
  7941  001A30                     l5676:
  7942                           
  7943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7944  001A30  0E00               	movlw	0
  7945  001A32  0100               	movlb	0	; () banked
  7946  001A34  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7947  001A36  0E01               	movlw	1
  7948  001A38  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7949  001A3A  EF48  F00D         	goto	l1568
  7950  001A3E                     l5680:
  7951                           
  7952                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7953  001A3E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7954  001A42  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7955  001A46  2ADE               	incf	postinc2,f,c
  7956  001A48  0E00               	movlw	0
  7957  001A4A  22DD               	addwfc	postdec2,f,c
  7958  001A4C                     
  7959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7960  001A4C  0E00               	movlw	0
  7961  001A4E  0100               	movlb	0	; () banked
  7962  001A50  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7963  001A52  0E00               	movlw	0
  7964  001A54  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7965  001A56  EF48  F00D         	goto	l1568
  7966  001A5A                     l5686:
  7967                           
  7968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7969  001A5A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7970  001A5E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7971  001A62  CFDE FFF6          	movff	postinc2,tblptrl
  7972  001A66  CFDD FFF7          	movff	postdec2,tblptrh
  7973  001A6A                     	if	0	;tblptru may be non-zero
  7974  001A6A                     	endif
  7975  001A6A                     	if	0	;tblptru may be non-zero
  7976  001A6A                     	endif
  7977  001A6A  0008               	tblrd		*
  7978  001A6C  50F5               	movf	tablat,w,c
  7979  001A6E  6E01               	movwf	fputc@c^0,c
  7980  001A70  6A02               	clrf	(fputc@c+1)^0,c
  7981  001A72  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7982  001A76  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7983  001A7A  EC14  F024         	call	_fputc	;wreg free
  7984  001A7E                     
  7985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7986  001A7E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7987  001A82  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7988  001A86  2ADE               	incf	postinc2,f,c
  7989  001A88  0E00               	movlw	0
  7990  001A8A  22DD               	addwfc	postdec2,f,c
  7991  001A8C  EF18  F00D         	goto	l5676
  7992  001A90                     l1568:
  7993  001A90  0012               	return		;funcret
  7994  001A92                     __end_of_vfpfcnvrt:
  7995                           	callstack 0
  7996                           
  7997 ;; *************** function _strncmp *****************
  7998 ;; Defined at:
  7999 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  8000 ;; Parameters:    Size  Location     Type
  8001 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  8002 ;;		 -> vfpfcnvrt@ct(3), 
  8003 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  8004 ;;		 -> STR_29(3), 
  8005 ;;  n               2    4[COMRAM] unsigned int 
  8006 ;; Auto vars:     Size  Location     Type
  8007 ;;  r               2    9[COMRAM] PTR const unsigned char 
  8008 ;;		 -> STR_29(3), 
  8009 ;;  l               2    7[COMRAM] PTR const unsigned char 
  8010 ;;		 -> vfpfcnvrt@ct(3), 
  8011 ;; Return value:  Size  Location     Type
  8012 ;;                  2    0[COMRAM] int 
  8013 ;; Registers used:
  8014 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8015 ;; Tracked objects:
  8016 ;;		On entry : 0/0
  8017 ;;		On exit  : 0/0
  8018 ;;		Unchanged: 0/0
  8019 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8020 ;;      Params:         6       0       0       0       0       0       0
  8021 ;;      Locals:         4       0       0       0       0       0       0
  8022 ;;      Temps:          1       0       0       0       0       0       0
  8023 ;;      Totals:        11       0       0       0       0       0       0
  8024 ;;Total ram usage:       11 bytes
  8025 ;; Hardware stack levels used:    1
  8026 ;; Hardware stack levels required when called:    1
  8027 ;; This function calls:
  8028 ;;		Nothing
  8029 ;; This function is called by:
  8030 ;;		_vfpfcnvrt
  8031 ;; This function uses a non-reentrant model
  8032 ;;
  8033                           
  8034                           	psect	text33
  8035  004684                     __ptext33:
  8036                           	callstack 0
  8037  004684                     _strncmp:
  8038                           	callstack 23
  8039  004684  C001  F008         	movff	strncmp@_l,strncmp@l
  8040  004688  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8041  00468C  C003  F00A         	movff	strncmp@_r,strncmp@r
  8042  004690  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8043  004694  0605               	decf	strncmp@n^0,f,c
  8044  004696  A0D8               	btfss	status,0,c
  8045  004698  0606               	decf	(strncmp@n+1)^0,f,c
  8046  00469A  2805               	incf	strncmp@n^0,w,c
  8047  00469C  E106               	bnz	u6341
  8048  00469E  2806               	incf	(strncmp@n+1)^0,w,c
  8049  0046A0  A4D8               	btfss	status,2,c
  8050  0046A2  EF55  F023         	goto	u6341
  8051  0046A6  EF57  F023         	goto	u6340
  8052  0046AA                     u6341:
  8053  0046AA  EF64  F023         	goto	l5448
  8054  0046AE                     u6340:
  8055  0046AE  0E00               	movlw	0
  8056  0046B0  6E02               	movwf	(?_strncmp+1)^0,c
  8057  0046B2  0E00               	movlw	0
  8058  0046B4  6E01               	movwf	?_strncmp^0,c
  8059  0046B6  EFAC  F023         	goto	l1704
  8060  0046BA                     l5446:
  8061  0046BA  4A08               	infsnz	strncmp@l^0,f,c
  8062  0046BC  2A09               	incf	(strncmp@l+1)^0,f,c
  8063  0046BE  4A0A               	infsnz	strncmp@r^0,f,c
  8064  0046C0  2A0B               	incf	(strncmp@r+1)^0,f,c
  8065  0046C2  0605               	decf	strncmp@n^0,f,c
  8066  0046C4  A0D8               	btfss	status,0,c
  8067  0046C6  0606               	decf	(strncmp@n+1)^0,f,c
  8068  0046C8                     l5448:
  8069  0046C8  C008  FFD9         	movff	strncmp@l,fsr2l
  8070  0046CC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8071  0046D0  50DF               	movf	indf2,w,c
  8072  0046D2  B4D8               	btfsc	status,2,c
  8073  0046D4  EF6E  F023         	goto	u6351
  8074  0046D8  EF70  F023         	goto	u6350
  8075  0046DC                     u6351:
  8076  0046DC  EF9B  F023         	goto	l5456
  8077  0046E0                     u6350:
  8078  0046E0  C00A  FFF6         	movff	strncmp@r,tblptrl
  8079  0046E4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8080  0046E8                     	if	0	;tblptru may be non-zero
  8081  0046E8                     	endif
  8082  0046E8                     	if	0	;tblptru may be non-zero
  8083  0046E8                     	endif
  8084  0046E8  0008               	tblrd		*
  8085  0046EA  50F5               	movf	tablat,w,c
  8086  0046EC  0900               	iorlw	0
  8087  0046EE  B4D8               	btfsc	status,2,c
  8088  0046F0  EF7C  F023         	goto	u6361
  8089  0046F4  EF7E  F023         	goto	u6360
  8090  0046F8                     u6361:
  8091  0046F8  EF9B  F023         	goto	l5456
  8092  0046FC                     u6360:
  8093  0046FC  5005               	movf	strncmp@n^0,w,c
  8094  0046FE  1006               	iorwf	(strncmp@n+1)^0,w,c
  8095  004700  B4D8               	btfsc	status,2,c
  8096  004702  EF85  F023         	goto	u6371
  8097  004706  EF87  F023         	goto	u6370
  8098  00470A                     u6371:
  8099  00470A  EF9B  F023         	goto	l5456
  8100  00470E                     u6370:
  8101  00470E  C008  FFD9         	movff	strncmp@l,fsr2l
  8102  004712  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8103  004716  50DF               	movf	indf2,w,c
  8104  004718  6E07               	movwf	??_strncmp^0,c
  8105  00471A  C00A  FFF6         	movff	strncmp@r,tblptrl
  8106  00471E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8107  004722                     	if	0	;tblptru may be non-zero
  8108  004722                     	endif
  8109  004722                     	if	0	;tblptru may be non-zero
  8110  004722                     	endif
  8111  004722  0008               	tblrd		*
  8112  004724  50F5               	movf	tablat,w,c
  8113  004726  1807               	xorwf	??_strncmp^0,w,c
  8114  004728  B4D8               	btfsc	status,2,c
  8115  00472A  EF99  F023         	goto	u6381
  8116  00472E  EF9B  F023         	goto	u6380
  8117  004732                     u6381:
  8118  004732  EF5D  F023         	goto	l5446
  8119  004736                     u6380:
  8120  004736                     l5456:
  8121  004736  C008  FFD9         	movff	strncmp@l,fsr2l
  8122  00473A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8123  00473E  50DF               	movf	indf2,w,c
  8124  004740  6E07               	movwf	??_strncmp^0,c
  8125  004742  C00A  FFF6         	movff	strncmp@r,tblptrl
  8126  004746  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8127  00474A                     	if	0	;tblptru may be non-zero
  8128  00474A                     	endif
  8129  00474A                     	if	0	;tblptru may be non-zero
  8130  00474A                     	endif
  8131  00474A  0008               	tblrd		*
  8132  00474C  50F5               	movf	tablat,w,c
  8133  00474E  5C07               	subwf	??_strncmp^0,w,c
  8134  004750  6E01               	movwf	?_strncmp^0,c
  8135  004752  6A02               	clrf	(?_strncmp+1)^0,c
  8136  004754  A0D8               	btfss	status,0,c
  8137  004756  0602               	decf	(?_strncmp+1)^0,f,c
  8138  004758                     l1704:
  8139  004758  0012               	return		;funcret
  8140  00475A                     __end_of_strncmp:
  8141                           	callstack 0
  8142                           
  8143 ;; *************** function _efgtoa *****************
  8144 ;; Defined at:
  8145 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8146 ;; Parameters:    Size  Location     Type
  8147 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  8148 ;;		 -> sprintf@f(6), 
  8149 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  8150 ;;  c               1   93[COMRAM] unsigned char 
  8151 ;; Auto vars:     Size  Location     Type
  8152 ;;  u               4   67[BANK0 ] unsigned char 
  8153 ;;  g               4   59[BANK0 ] unsigned char 
  8154 ;;  l               4   53[BANK0 ] unsigned char 
  8155 ;;  h               4   49[BANK0 ] unsigned char 
  8156 ;;  ou              4   15[BANK0 ] unsigned char 
  8157 ;;  n               2   65[BANK0 ] int 
  8158 ;;  e               2   63[BANK0 ] int 
  8159 ;;  i               2   57[BANK0 ] int 
  8160 ;;  w               2   46[BANK0 ] int 
  8161 ;;  p               2   43[BANK0 ] int 
  8162 ;;  sign            2   41[BANK0 ] int 
  8163 ;;  d               2   39[BANK0 ] int 
  8164 ;;  ne              2   37[BANK0 ] int 
  8165 ;;  m               2   35[BANK0 ] int 
  8166 ;;  pp              2   33[BANK0 ] int 
  8167 ;;  t               2   31[BANK0 ] int 
  8168 ;;  mode            1   48[BANK0 ] unsigned char 
  8169 ;;  nmode           1   45[BANK0 ] unsigned char 
  8170 ;; Return value:  Size  Location     Type
  8171 ;;                  2   87[COMRAM] int 
  8172 ;; Registers used:
  8173 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8174 ;; Tracked objects:
  8175 ;;		On entry : 0/0
  8176 ;;		On exit  : 0/0
  8177 ;;		Unchanged: 0/0
  8178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8179 ;;      Params:         7       0       0       0       0       0       0
  8180 ;;      Locals:         0      56       0       0       0       0       0
  8181 ;;      Temps:          0       5       0       0       0       0       0
  8182 ;;      Totals:         7      61       0       0       0       0       0
  8183 ;;Total ram usage:       68 bytes
  8184 ;; Hardware stack levels used:    1
  8185 ;; Hardware stack levels required when called:    5
  8186 ;; This function calls:
  8187 ;;		___awdiv
  8188 ;;		___awmod
  8189 ;;		___fladd
  8190 ;;		___fldiv
  8191 ;;		___fleq
  8192 ;;		___flge
  8193 ;;		___flmul
  8194 ;;		___flneg
  8195 ;;		___flsub
  8196 ;;		___fltol
  8197 ;;		___fpclassifyf
  8198 ;;		_floorf
  8199 ;;		_isupper
  8200 ;;		_pad
  8201 ;;		_strcpy
  8202 ;;		_tolower
  8203 ;; This function is called by:
  8204 ;;		_vfpfcnvrt
  8205 ;; This function uses a non-reentrant model
  8206 ;;
  8207                           
  8208                           	psect	text34
  8209  00009E                     __ptext34:
  8210                           	callstack 0
  8211  00009E                     _efgtoa:
  8212                           	callstack 19
  8213  00009E                     
  8214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  8215  00009E  0E00               	movlw	0
  8216  0000A0  0100               	movlb	0	; () banked
  8217  0000A2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8218  0000A4  0E00               	movlw	0
  8219  0000A6  6F89               	movwf	efgtoa@sign& (0+255),b
  8220  0000A8                     
  8221                           ; BSR set to: 0
  8222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  8223  0000A8  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  8224  0000AC  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  8225  0000B0  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  8226  0000B4  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  8227  0000B8                     
  8228                           ; BSR set to: 0
  8229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  8230  0000B8  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8231  0000BA  EF63  F000         	goto	u5750
  8232  0000BE  EF61  F000         	goto	u5751
  8233  0000C2                     u5751:
  8234  0000C2  EF79  F000         	goto	l5110
  8235  0000C6                     u5750:
  8236  0000C6                     
  8237                           ; BSR set to: 0
  8238                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  8239  0000C6  0E00               	movlw	0
  8240  0000C8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8241  0000CA  0E01               	movlw	1
  8242  0000CC  6F89               	movwf	efgtoa@sign& (0+255),b
  8243  0000CE                     
  8244                           ; BSR set to: 0
  8245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  8246  0000CE  C09B  F001         	movff	efgtoa@g,___flneg@f1
  8247  0000D2  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  8248  0000D6  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  8249  0000DA  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  8250  0000DE  EC9D  F02A         	call	___flneg	;wreg free
  8251  0000E2  C001  F09B         	movff	?___flneg,efgtoa@g
  8252  0000E6  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  8253  0000EA  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  8254  0000EE  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  8255  0000F2                     l5110:
  8256                           
  8257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  8258  0000F2  0E00               	movlw	0
  8259  0000F4  0100               	movlb	0	; () banked
  8260  0000F6  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  8261  0000F8  0E00               	movlw	0
  8262  0000FA  6FA1               	movwf	efgtoa@n& (0+255),b
  8263  0000FC                     
  8264                           ; BSR set to: 0
  8265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  8266  0000FC  C1B1  F08E         	movff	_width,efgtoa@w
  8267  000100  C1B2  F08F         	movff	_width+1,efgtoa@w+1
  8268  000104                     
  8269                           ; BSR set to: 0
  8270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  8271  000104  5189               	movf	efgtoa@sign& (0+255),w,b
  8272  000106  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8273  000108  A4D8               	btfss	status,2,c
  8274  00010A  EF89  F000         	goto	u5761
  8275  00010E  EF8B  F000         	goto	u5760
  8276  000112                     u5761:
  8277  000112  EF92  F000         	goto	l5118
  8278  000116                     u5760:
  8279  000116                     
  8280                           ; BSR set to: 0
  8281  000116  A5F8               	btfss	_flags& (0+255),2,b
  8282  000118  EF90  F000         	goto	u5771
  8283  00011C  EF92  F000         	goto	u5770
  8284  000120                     u5771:
  8285  000120  EFAC  F000         	goto	l5130
  8286  000124                     u5770:
  8287  000124                     l5118:
  8288                           
  8289                           ; BSR set to: 0
  8290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  8291  000124  5189               	movf	efgtoa@sign& (0+255),w,b
  8292  000126  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8293  000128  A4D8               	btfss	status,2,c
  8294  00012A  EF99  F000         	goto	u5781
  8295  00012E  EF9B  F000         	goto	u5780
  8296  000132                     u5781:
  8297  000132  EFA1  F000         	goto	l5122
  8298  000136                     u5780:
  8299  000136                     
  8300                           ; BSR set to: 0
  8301  000136  0E00               	movlw	0
  8302  000138  6F74               	movwf	(_efgtoa$2979+1)& (0+255),b
  8303  00013A  0E2B               	movlw	43
  8304  00013C  6F73               	movwf	_efgtoa$2979& (0+255),b
  8305  00013E  EFA5  F000         	goto	l5124
  8306  000142                     l5122:
  8307                           
  8308                           ; BSR set to: 0
  8309  000142  0E00               	movlw	0
  8310  000144  6F74               	movwf	(_efgtoa$2979+1)& (0+255),b
  8311  000146  0E2D               	movlw	45
  8312  000148  6F73               	movwf	_efgtoa$2979& (0+255),b
  8313  00014A                     l5124:
  8314                           
  8315                           ; BSR set to: 0
  8316  00014A  C073  F260         	movff	_efgtoa$2979,_dbuf
  8317  00014E                     
  8318                           ; BSR set to: 0
  8319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  8320  00014E  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8321  000150  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8322  000152                     
  8323                           ; BSR set to: 0
  8324                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  8325  000152  078E               	decf	efgtoa@w& (0+255),f,b
  8326  000154  A0D8               	btfss	status,0,c
  8327  000156  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8328  000158                     l5130:
  8329                           
  8330                           ; BSR set to: 0
  8331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8332  000158  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8333  00015C  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8334  000160  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8335  000164  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8336  000168  EC58  F022         	call	___fpclassifyf	;wreg free
  8337  00016C  0401               	decf	?___fpclassifyf^0,w,c
  8338  00016E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8339  000170  A4D8               	btfss	status,2,c
  8340  000172  EFBD  F000         	goto	u5791
  8341  000176  EFBF  F000         	goto	u5790
  8342  00017A                     u5791:
  8343  00017A  EF16  F001         	goto	l5148
  8344  00017E                     u5790:
  8345  00017E  0EBF               	movlw	191
  8346  000180  0100               	movlb	0	; () banked
  8347  000182  6F6A               	movwf	??_efgtoa& (0+255),b
  8348  000184  0EFF               	movlw	255
  8349  000186  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8350  000188  505E               	movf	efgtoa@c^0,w,c
  8351  00018A  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8352  00018C  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8353  00018E  516A               	movf	??_efgtoa& (0+255),w,b
  8354  000190  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8355  000192  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8356  000194  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8357  000196  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8358  000198  E10A               	bnz	u5800
  8359  00019A  0E1A               	movlw	26
  8360  00019C  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8361  00019E  A0D8               	btfss	status,0,c
  8362  0001A0  EFD4  F000         	goto	u5801
  8363  0001A4  EFD7  F000         	goto	u5800
  8364  0001A8                     u5801:
  8365  0001A8  0E01               	movlw	1
  8366  0001AA  EFD8  F000         	goto	u5810
  8367  0001AE                     u5800:
  8368  0001AE  0E00               	movlw	0
  8369  0001B0                     u5810:
  8370  0001B0  6F75               	movwf	_efgtoa$2980& (0+255),b
  8371  0001B2  6B76               	clrf	(_efgtoa$2980+1)& (0+255),b
  8372  0001B4                     
  8373                           ; BSR set to: 0
  8374  0001B4  5175               	movf	_efgtoa$2980& (0+255),w,b
  8375  0001B6  1176               	iorwf	(_efgtoa$2980+1)& (0+255),w,b
  8376  0001B8  B4D8               	btfsc	status,2,c
  8377  0001BA  EFE1  F000         	goto	u5821
  8378  0001BE  EFE3  F000         	goto	u5820
  8379  0001C2                     u5821:
  8380  0001C2  EFF1  F000         	goto	l5140
  8381  0001C6                     u5820:
  8382  0001C6                     
  8383                           ; BSR set to: 0
  8384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  8385  0001C6  0E60               	movlw	low _dbuf
  8386  0001C8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8387  0001CA  6E01               	movwf	strcpy@dest^0,c
  8388  0001CC  0E02               	movlw	high _dbuf
  8389  0001CE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8390  0001D0  6E02               	movwf	(strcpy@dest+1)^0,c
  8391  0001D2  0EEB               	movlw	low STR_19
  8392  0001D4  6E03               	movwf	strcpy@src^0,c
  8393  0001D6  0E7F               	movlw	high STR_19
  8394  0001D8  6E04               	movwf	(strcpy@src+1)^0,c
  8395  0001DA  ECA2  F028         	call	_strcpy	;wreg free
  8396                           
  8397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  8398  0001DE  EFFD  F000         	goto	l5142
  8399  0001E2                     l5140:
  8400                           
  8401                           ; BSR set to: 0
  8402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  8403  0001E2  0E60               	movlw	low _dbuf
  8404  0001E4  25A1               	addwf	efgtoa@n& (0+255),w,b
  8405  0001E6  6E01               	movwf	strcpy@dest^0,c
  8406  0001E8  0E02               	movlw	high _dbuf
  8407  0001EA  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8408  0001EC  6E02               	movwf	(strcpy@dest+1)^0,c
  8409  0001EE  0EF3               	movlw	low STR_20
  8410  0001F0  6E03               	movwf	strcpy@src^0,c
  8411  0001F2  0E7F               	movlw	high STR_20
  8412  0001F4  6E04               	movwf	(strcpy@src+1)^0,c
  8413  0001F6  ECA2  F028         	call	_strcpy	;wreg free
  8414  0001FA                     l5142:
  8415                           
  8416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8417  0001FA  0100               	movlb	0	; () banked
  8418  0001FC  0EFD               	movlw	253
  8419  0001FE  278E               	addwf	efgtoa@w& (0+255),f,b
  8420  000200  0EFF               	movlw	255
  8421  000202  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8422  000204                     l5144:
  8423                           
  8424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8425  000204  C058  F011         	movff	efgtoa@fp,pad@fp
  8426  000208  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  8427  00020C  0E60               	movlw	low _dbuf
  8428  00020E  6E13               	movwf	pad@buf^0,c
  8429  000210  0E02               	movlw	high _dbuf
  8430  000212  6E14               	movwf	(pad@buf+1)^0,c
  8431  000214  C08E  F015         	movff	efgtoa@w,pad@p
  8432  000218  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  8433  00021C  EC79  F024         	call	_pad	;wreg free
  8434  000220  C011  F058         	movff	?_pad,?_efgtoa
  8435  000224  C012  F059         	movff	?_pad+1,?_efgtoa+1
  8436  000228  EF26  F006         	goto	l1466
  8437  00022C                     l5148:
  8438                           
  8439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8440  00022C  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8441  000230  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8442  000234  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8443  000238  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8444  00023C  EC58  F022         	call	___fpclassifyf	;wreg free
  8445  000240  5001               	movf	?___fpclassifyf^0,w,c
  8446  000242  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8447  000244  A4D8               	btfss	status,2,c
  8448  000246  EF27  F001         	goto	u5831
  8449  00024A  EF29  F001         	goto	u5830
  8450  00024E                     u5831:
  8451  00024E  EF69  F001         	goto	l5166
  8452  000252                     u5830:
  8453  000252  0EBF               	movlw	191
  8454  000254  0100               	movlb	0	; () banked
  8455  000256  6F6A               	movwf	??_efgtoa& (0+255),b
  8456  000258  0EFF               	movlw	255
  8457  00025A  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8458  00025C  505E               	movf	efgtoa@c^0,w,c
  8459  00025E  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8460  000260  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8461  000262  516A               	movf	??_efgtoa& (0+255),w,b
  8462  000264  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8463  000266  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8464  000268  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8465  00026A  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8466  00026C  E10A               	bnz	u5840
  8467  00026E  0E1A               	movlw	26
  8468  000270  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8469  000272  A0D8               	btfss	status,0,c
  8470  000274  EF3E  F001         	goto	u5841
  8471  000278  EF41  F001         	goto	u5840
  8472  00027C                     u5841:
  8473  00027C  0E01               	movlw	1
  8474  00027E  EF42  F001         	goto	u5850
  8475  000282                     u5840:
  8476  000282  0E00               	movlw	0
  8477  000284                     u5850:
  8478  000284  6F77               	movwf	_efgtoa$2984& (0+255),b
  8479  000286  6B78               	clrf	(_efgtoa$2984+1)& (0+255),b
  8480  000288                     
  8481                           ; BSR set to: 0
  8482  000288  5177               	movf	_efgtoa$2984& (0+255),w,b
  8483  00028A  1178               	iorwf	(_efgtoa$2984+1)& (0+255),w,b
  8484  00028C  B4D8               	btfsc	status,2,c
  8485  00028E  EF4B  F001         	goto	u5861
  8486  000292  EF4D  F001         	goto	u5860
  8487  000296                     u5861:
  8488  000296  EF5B  F001         	goto	l5158
  8489  00029A                     u5860:
  8490  00029A                     
  8491                           ; BSR set to: 0
  8492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  8493  00029A  0E60               	movlw	low _dbuf
  8494  00029C  25A1               	addwf	efgtoa@n& (0+255),w,b
  8495  00029E  6E01               	movwf	strcpy@dest^0,c
  8496  0002A0  0E02               	movlw	high _dbuf
  8497  0002A2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8498  0002A4  6E02               	movwf	(strcpy@dest+1)^0,c
  8499  0002A6  0EEF               	movlw	low STR_23
  8500  0002A8  6E03               	movwf	strcpy@src^0,c
  8501  0002AA  0E7F               	movlw	high STR_23
  8502  0002AC  6E04               	movwf	(strcpy@src+1)^0,c
  8503  0002AE  ECA2  F028         	call	_strcpy	;wreg free
  8504                           
  8505                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  8506  0002B2  EFFD  F000         	goto	l5142
  8507  0002B6                     l5158:
  8508                           
  8509                           ; BSR set to: 0
  8510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  8511  0002B6  0E60               	movlw	low _dbuf
  8512  0002B8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8513  0002BA  6E01               	movwf	strcpy@dest^0,c
  8514  0002BC  0E02               	movlw	high _dbuf
  8515  0002BE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8516  0002C0  6E02               	movwf	(strcpy@dest+1)^0,c
  8517  0002C2  0EF7               	movlw	low STR_24
  8518  0002C4  6E03               	movwf	strcpy@src^0,c
  8519  0002C6  0E7F               	movlw	high STR_24
  8520  0002C8  6E04               	movwf	(strcpy@src+1)^0,c
  8521  0002CA  ECA2  F028         	call	_strcpy	;wreg free
  8522  0002CE  EFFD  F000         	goto	l5142
  8523  0002D2                     l5166:
  8524                           
  8525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  8526  0002D2  0E00               	movlw	0
  8527  0002D4  0100               	movlb	0	; () banked
  8528  0002D6  6FA3               	movwf	efgtoa@u& (0+255),b
  8529  0002D8  0E00               	movlw	0
  8530  0002DA  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8531  0002DC  0E80               	movlw	128
  8532  0002DE  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8533  0002E0  0E3F               	movlw	63
  8534  0002E2  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8535                           
  8536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  8537  0002E4  0E00               	movlw	0
  8538  0002E6  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8539  0002E8  0E00               	movlw	0
  8540  0002EA  6F9F               	movwf	efgtoa@e& (0+255),b
  8541  0002EC                     
  8542                           ; BSR set to: 0
  8543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  8544  0002EC  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  8545  0002F0  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  8546  0002F4  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  8547  0002F8  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  8548  0002FC  0E00               	movlw	0
  8549  0002FE  6E05               	movwf	___fleq@ff2^0,c
  8550  000300  0E00               	movlw	0
  8551  000302  6E06               	movwf	(___fleq@ff2+1)^0,c
  8552  000304  0E00               	movlw	0
  8553  000306  6E07               	movwf	(___fleq@ff2+2)^0,c
  8554  000308  0E00               	movlw	0
  8555  00030A  6E08               	movwf	(___fleq@ff2+3)^0,c
  8556  00030C  ECEF  F025         	call	___fleq	;wreg free
  8557  000310  B0D8               	btfsc	status,0,c
  8558  000312  EF8D  F001         	goto	u5871
  8559  000316  EF8F  F001         	goto	u5870
  8560  00031A                     u5871:
  8561  00031A  EF12  F002         	goto	l5184
  8562  00031E                     u5870:
  8563  00031E  EFAE  F001         	goto	l5176
  8564  000322                     l5172:
  8565                           
  8566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  8567  000322  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8568  000326  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8569  00032A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8570  00032E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8571  000332  0E00               	movlw	0
  8572  000334  6E20               	movwf	___flmul@a^0,c
  8573  000336  0E00               	movlw	0
  8574  000338  6E21               	movwf	(___flmul@a+1)^0,c
  8575  00033A  0E20               	movlw	32
  8576  00033C  6E22               	movwf	(___flmul@a+2)^0,c
  8577  00033E  0E41               	movlw	65
  8578  000340  6E23               	movwf	(___flmul@a+3)^0,c
  8579  000342  ECA9  F00F         	call	___flmul	;wreg free
  8580  000346  C01C  F0A3         	movff	?___flmul,efgtoa@u
  8581  00034A  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  8582  00034E  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  8583  000352  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  8584  000356                     
  8585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  8586  000356  0100               	movlb	0	; () banked
  8587  000358  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  8588  00035A  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8589  00035C                     l5176:
  8590                           
  8591                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  8592  00035C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8593  000360  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8594  000364  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8595  000368  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8596  00036C  0E00               	movlw	0
  8597  00036E  6E20               	movwf	___flmul@a^0,c
  8598  000370  0E00               	movlw	0
  8599  000372  6E21               	movwf	(___flmul@a+1)^0,c
  8600  000374  0E20               	movlw	32
  8601  000376  6E22               	movwf	(___flmul@a+2)^0,c
  8602  000378  0E41               	movlw	65
  8603  00037A  6E23               	movwf	(___flmul@a+3)^0,c
  8604  00037C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8605  000380  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8606  000384  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8607  000388  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8608  00038C  ECA9  F00F         	call	___flmul	;wreg free
  8609  000390  C01C  F039         	movff	?___flmul,___flge@ff2
  8610  000394  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  8611  000398  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  8612  00039C  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  8613  0003A0  ECD6  F021         	call	___flge	;wreg free
  8614  0003A4  B0D8               	btfsc	status,0,c
  8615  0003A6  EFD7  F001         	goto	u5881
  8616  0003AA  EFD9  F001         	goto	u5880
  8617  0003AE                     u5881:
  8618  0003AE  EF91  F001         	goto	l5172
  8619  0003B2                     u5880:
  8620  0003B2  EFF9  F001         	goto	l5182
  8621  0003B6                     l5178:
  8622                           
  8623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  8624  0003B6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8625  0003BA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8626  0003BE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8627  0003C2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8628  0003C6  0E00               	movlw	0
  8629  0003C8  6E39               	movwf	___fldiv@a^0,c
  8630  0003CA  0E00               	movlw	0
  8631  0003CC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8632  0003CE  0E20               	movlw	32
  8633  0003D0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8634  0003D2  0E41               	movlw	65
  8635  0003D4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8636  0003D6  ECBE  F011         	call	___fldiv	;wreg free
  8637  0003DA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8638  0003DE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8639  0003E2  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8640  0003E6  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8641  0003EA                     
  8642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  8643  0003EA  0100               	movlb	0	; () banked
  8644  0003EC  079F               	decf	efgtoa@e& (0+255),f,b
  8645  0003EE  A0D8               	btfss	status,0,c
  8646  0003F0  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  8647  0003F2                     l5182:
  8648                           
  8649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  8650  0003F2  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8651  0003F6  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8652  0003FA  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8653  0003FE  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8654  000402  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  8655  000406  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  8656  00040A  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  8657  00040E  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  8658  000412  ECD6  F021         	call	___flge	;wreg free
  8659  000416  A0D8               	btfss	status,0,c
  8660  000418  EF10  F002         	goto	u5891
  8661  00041C  EF12  F002         	goto	u5890
  8662  000420                     u5891:
  8663  000420  EFDB  F001         	goto	l5178
  8664  000424                     u5890:
  8665  000424                     l5184:
  8666                           
  8667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  8668  000424  C05E  F007         	movff	efgtoa@c,tolower@c
  8669  000428  6A08               	clrf	(tolower@c+1)^0,c
  8670  00042A  EC72  F028         	call	_tolower	;wreg free
  8671  00042E  5007               	movf	?_tolower^0,w,c
  8672  000430  0100               	movlb	0	; () banked
  8673  000432  6F90               	movwf	efgtoa@mode& (0+255),b
  8674  000434                     
  8675                           ; BSR set to: 0
  8676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  8677  000434  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  8678  000438                     
  8679                           ; BSR set to: 0
  8680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  8681  000438  0E67               	movlw	103
  8682  00043A  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8683  00043C  A4D8               	btfss	status,2,c
  8684  00043E  EF23  F002         	goto	u5901
  8685  000442  EF25  F002         	goto	u5900
  8686  000446                     u5901:
  8687  000446  EF4B  F002         	goto	l5198
  8688  00044A                     u5900:
  8689  00044A                     
  8690                           ; BSR set to: 0
  8691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  8692  00044A  51F6               	movf	_prec& (0+255),w,b
  8693  00044C  11F7               	iorwf	(_prec+1)& (0+255),w,b
  8694  00044E  A4D8               	btfss	status,2,c
  8695  000450  EF2C  F002         	goto	u5911
  8696  000454  EF2E  F002         	goto	u5910
  8697  000458                     u5911:
  8698  000458  EF32  F002         	goto	l5194
  8699  00045C                     u5910:
  8700  00045C                     
  8701                           ; BSR set to: 0
  8702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  8703  00045C  0E00               	movlw	0
  8704  00045E  6FF7               	movwf	(_prec+1)& (0+255),b
  8705  000460  0E01               	movlw	1
  8706  000462  6FF6               	movwf	_prec& (0+255),b
  8707  000464                     l5194:
  8708                           
  8709                           ; BSR set to: 0
  8710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  8711  000464  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8712  000466  EF3F  F002         	goto	u5920
  8713  00046A  51F7               	movf	(_prec+1)& (0+255),w,b
  8714  00046C  E106               	bnz	u5921
  8715  00046E  05F6               	decf	_prec& (0+255),w,b
  8716  000470  B0D8               	btfsc	status,0,c
  8717  000472  EF3D  F002         	goto	u5921
  8718  000476  EF3F  F002         	goto	u5920
  8719  00047A                     u5921:
  8720  00047A  EF45  F002         	goto	l1484
  8721  00047E                     u5920:
  8722  00047E                     l5196:
  8723                           
  8724                           ; BSR set to: 0
  8725  00047E  0E00               	movlw	0
  8726  000480  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8727  000482  0E06               	movlw	6
  8728  000484  6F8B               	movwf	efgtoa@p& (0+255),b
  8729  000486  EF54  F002         	goto	l5204
  8730  00048A                     l1484:
  8731                           
  8732                           ; BSR set to: 0
  8733  00048A  C0F6  F08B         	movff	_prec,efgtoa@p
  8734  00048E  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  8735  000492  EF54  F002         	goto	l5204
  8736  000496                     l5198:
  8737                           
  8738                           ; BSR set to: 0
  8739                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  8740  000496  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8741  000498  EF50  F002         	goto	u5931
  8742  00049C  EF52  F002         	goto	u5930
  8743  0004A0                     u5931:
  8744  0004A0  EF3F  F002         	goto	l5196
  8745  0004A4                     u5930:
  8746  0004A4  EF45  F002         	goto	l1484
  8747  0004A8                     l5204:
  8748                           
  8749                           ; BSR set to: 0
  8750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8751  0004A8  0E67               	movlw	103
  8752  0004AA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8753  0004AC  A4D8               	btfss	status,2,c
  8754  0004AE  EF5B  F002         	goto	u5941
  8755  0004B2  EF5D  F002         	goto	u5940
  8756  0004B6                     u5941:
  8757  0004B6  EF8C  F002         	goto	l5214
  8758  0004BA                     u5940:
  8759  0004BA                     
  8760                           ; BSR set to: 0
  8761                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8762  0004BA  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8763  0004BC  EF6B  F002         	goto	u5950
  8764  0004C0  0EFC               	movlw	252
  8765  0004C2  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8766  0004C4  0EFF               	movlw	255
  8767  0004C6  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8768  0004C8  A0D8               	btfss	status,0,c
  8769  0004CA  EF69  F002         	goto	u5951
  8770  0004CE  EF6B  F002         	goto	u5950
  8771  0004D2                     u5951:
  8772  0004D2  EF8A  F002         	goto	l5212
  8773  0004D6                     u5950:
  8774  0004D6                     
  8775                           ; BSR set to: 0
  8776  0004D6  0EFF               	movlw	255
  8777  0004D8  6F6A               	movwf	??_efgtoa& (0+255),b
  8778  0004DA  0EFF               	movlw	255
  8779  0004DC  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8780  0004DE  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8781  0004E2  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8782  0004E6  516A               	movf	??_efgtoa& (0+255),w,b
  8783  0004E8  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8784  0004EA  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8785  0004EC  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8786  0004EE  519F               	movf	efgtoa@e& (0+255),w,b
  8787  0004F0  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8788  0004F2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8789  0004F4  0A80               	xorlw	128
  8790  0004F6  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8791  0004F8  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8792  0004FA  0A80               	xorlw	128
  8793  0004FC  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8794  0004FE  A0D8               	btfss	status,0,c
  8795  000500  EF84  F002         	goto	u5961
  8796  000504  EF86  F002         	goto	u5960
  8797  000508                     u5961:
  8798  000508  EF8A  F002         	goto	l5212
  8799  00050C                     u5960:
  8800  00050C                     
  8801                           ; BSR set to: 0
  8802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8803  00050C  0E66               	movlw	102
  8804  00050E  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8805                           
  8806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8807  000510  EF8C  F002         	goto	l5214
  8808  000514                     l5212:
  8809                           
  8810                           ; BSR set to: 0
  8811                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8812  000514  0E65               	movlw	101
  8813  000516  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8814  000518                     l5214:
  8815                           
  8816                           ; BSR set to: 0
  8817                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8818  000518  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8819  00051C  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8820  000520                     
  8821                           ; BSR set to: 0
  8822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8823  000520  0E67               	movlw	103
  8824  000522  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8825  000524  A4D8               	btfss	status,2,c
  8826  000526  EF97  F002         	goto	u5971
  8827  00052A  EF99  F002         	goto	u5970
  8828  00052E                     u5971:
  8829  00052E  EFA9  F002         	goto	l5222
  8830  000532                     u5970:
  8831  000532                     
  8832                           ; BSR set to: 0
  8833  000532  0E66               	movlw	102
  8834  000534  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8835  000536  A4D8               	btfss	status,2,c
  8836  000538  EFA0  F002         	goto	u5981
  8837  00053C  EFA2  F002         	goto	u5980
  8838  000540                     u5981:
  8839  000540  EFAB  F002         	goto	l5224
  8840  000544                     u5980:
  8841  000544                     
  8842                           ; BSR set to: 0
  8843  000544  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8844  000546  EFA9  F002         	goto	u5990
  8845  00054A  EFA7  F002         	goto	u5991
  8846  00054E                     u5991:
  8847  00054E  EFAB  F002         	goto	l5224
  8848  000552                     u5990:
  8849  000552                     l5222:
  8850                           
  8851                           ; BSR set to: 0
  8852                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8853  000552  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8854  000554  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8855  000556                     l5224:
  8856                           
  8857                           ; BSR set to: 0
  8858                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8859  000556  0E66               	movlw	102
  8860  000558  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8861  00055A  A4D8               	btfss	status,2,c
  8862  00055C  EFB2  F002         	goto	u6001
  8863  000560  EFB4  F002         	goto	u6000
  8864  000564                     u6001:
  8865  000564  EFD4  F002         	goto	l5234
  8866  000568                     u6000:
  8867  000568                     
  8868                           ; BSR set to: 0
  8869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8870  000568  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8871  00056A  EFBB  F002         	goto	u6010
  8872  00056E  EFB9  F002         	goto	u6011
  8873  000572                     u6011:
  8874  000572  EFC7  F002         	goto	l5230
  8875  000576                     u6010:
  8876  000576                     
  8877                           ; BSR set to: 0
  8878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8879  000576  0E00               	movlw	0
  8880  000578  6FA3               	movwf	efgtoa@u& (0+255),b
  8881  00057A  0E00               	movlw	0
  8882  00057C  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8883  00057E  0E80               	movlw	128
  8884  000580  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8885  000582  0E3F               	movlw	63
  8886  000584  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8887                           
  8888                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8889  000586  0E00               	movlw	0
  8890  000588  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8891  00058A  0E00               	movlw	0
  8892  00058C  6F9F               	movwf	efgtoa@e& (0+255),b
  8893  00058E                     l5230:
  8894                           
  8895                           ; BSR set to: 0
  8896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8897  00058E  0E67               	movlw	103
  8898  000590  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8899  000592  B4D8               	btfsc	status,2,c
  8900  000594  EFCE  F002         	goto	u6021
  8901  000598  EFD0  F002         	goto	u6020
  8902  00059C                     u6021:
  8903  00059C  EFD4  F002         	goto	l5234
  8904  0005A0                     u6020:
  8905  0005A0                     
  8906                           ; BSR set to: 0
  8907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8908  0005A0  519F               	movf	efgtoa@e& (0+255),w,b
  8909  0005A2  2783               	addwf	efgtoa@m& (0+255),f,b
  8910  0005A4  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8911  0005A6  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8912  0005A8                     l5234:
  8913                           
  8914                           ; BSR set to: 0
  8915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8916  0005A8  0E00               	movlw	0
  8917  0005AA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8918  0005AC  0E00               	movlw	0
  8919  0005AE  6F99               	movwf	efgtoa@i& (0+255),b
  8920  0005B0                     
  8921                           ; BSR set to: 0
  8922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8923  0005B0  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8924  0005B4  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8925  0005B8  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8926  0005BC  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8927  0005C0                     
  8928                           ; BSR set to: 0
  8929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8930  0005C0  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8931  0005C4  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8932  0005C8  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8933  0005CC  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8934                           
  8935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8936  0005D0  EF65  F003         	goto	l5248
  8937  0005D4                     l5240:
  8938                           
  8939                           ; BSR set to: 0
  8940                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8941  0005D4  C091  F035         	movff	efgtoa@h,___fldiv@b
  8942  0005D8  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8943  0005DC  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8944  0005E0  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8945  0005E4  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8946  0005E8  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8947  0005EC  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8948  0005F0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8949  0005F4  ECBE  F011         	call	___fldiv	;wreg free
  8950  0005F8  C035  F04E         	movff	?___fldiv,floorf@x
  8951  0005FC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8952  000600  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8953  000604  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8954  000608  ECDA  F017         	call	_floorf	;wreg free
  8955  00060C  C04E  F095         	movff	?_floorf,efgtoa@l
  8956  000610  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8957  000614  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8958  000618  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8959                           
  8960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8961  00061C  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8962  000620  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8963  000624  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8964  000628  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8965  00062C  ECD1  F020         	call	___fltol	;wreg free
  8966  000630  C04E  F087         	movff	?___fltol,efgtoa@d
  8967  000634  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8968  000638                     
  8969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8970  000638  C091  F045         	movff	efgtoa@h,___flsub@b
  8971  00063C  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8972  000640  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8973  000644  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8974  000648  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8975  00064C  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8976  000650  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8977  000654  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8978  000658  C095  F01C         	movff	efgtoa@l,___flmul@b
  8979  00065C  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8980  000660  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8981  000664  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8982  000668  ECA9  F00F         	call	___flmul	;wreg free
  8983  00066C  C01C  F049         	movff	?___flmul,___flsub@a
  8984  000670  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8985  000674  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8986  000678  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8987  00067C  EC9E  F029         	call	___flsub	;wreg free
  8988  000680  C045  F091         	movff	?___flsub,efgtoa@h
  8989  000684  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8990  000688  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8991  00068C  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8992  000690                     
  8993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8994  000690  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8995  000694  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8996  000698  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8997  00069C  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8998  0006A0  0E00               	movlw	0
  8999  0006A2  6E39               	movwf	___fldiv@a^0,c
  9000  0006A4  0E00               	movlw	0
  9001  0006A6  6E3A               	movwf	(___fldiv@a+1)^0,c
  9002  0006A8  0E20               	movlw	32
  9003  0006AA  6E3B               	movwf	(___fldiv@a+2)^0,c
  9004  0006AC  0E41               	movlw	65
  9005  0006AE  6E3C               	movwf	(___fldiv@a+3)^0,c
  9006  0006B0  ECBE  F011         	call	___fldiv	;wreg free
  9007  0006B4  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9008  0006B8  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9009  0006BC  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9010  0006C0  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9011  0006C4                     
  9012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  9013  0006C4  0100               	movlb	0	; () banked
  9014  0006C6  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9015  0006C8  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9016  0006CA                     l5248:
  9017                           
  9018                           ; BSR set to: 0
  9019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  9020  0006CA  5183               	movf	efgtoa@m& (0+255),w,b
  9021  0006CC  5D99               	subwf	efgtoa@i& (0+255),w,b
  9022  0006CE  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9023  0006D0  0A80               	xorlw	128
  9024  0006D2  6F6A               	movwf	??_efgtoa& (0+255),b
  9025  0006D4  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9026  0006D6  0A80               	xorlw	128
  9027  0006D8  596A               	subwfb	??_efgtoa& (0+255),w,b
  9028  0006DA  A0D8               	btfss	status,0,c
  9029  0006DC  EF72  F003         	goto	u6031
  9030  0006E0  EF74  F003         	goto	u6030
  9031  0006E4                     u6031:
  9032  0006E4  EFEA  F002         	goto	l5240
  9033  0006E8                     u6030:
  9034  0006E8                     
  9035                           ; BSR set to: 0
  9036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  9037  0006E8  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  9038  0006EC  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  9039  0006F0  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  9040  0006F4  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  9041  0006F8  0E00               	movlw	0
  9042  0006FA  6E20               	movwf	___flmul@a^0,c
  9043  0006FC  0E00               	movlw	0
  9044  0006FE  6E21               	movwf	(___flmul@a+1)^0,c
  9045  000700  0EA0               	movlw	160
  9046  000702  6E22               	movwf	(___flmul@a+2)^0,c
  9047  000704  0E40               	movlw	64
  9048  000706  6E23               	movwf	(___flmul@a+3)^0,c
  9049  000708  ECA9  F00F         	call	___flmul	;wreg free
  9050  00070C  C01C  F095         	movff	?___flmul,efgtoa@l
  9051  000710  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  9052  000714  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  9053  000718  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  9054  00071C                     
  9055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  9056  00071C  C091  F035         	movff	efgtoa@h,___flge@ff1
  9057  000720  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  9058  000724  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  9059  000728  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  9060  00072C  C095  F039         	movff	efgtoa@l,___flge@ff2
  9061  000730  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  9062  000734  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  9063  000738  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  9064  00073C  ECD6  F021         	call	___flge	;wreg free
  9065  000740  B0D8               	btfsc	status,0,c
  9066  000742  EFA5  F003         	goto	u6041
  9067  000746  EFA7  F003         	goto	u6040
  9068  00074A                     u6041:
  9069  00074A  EFB2  F003         	goto	l5256
  9070  00074E                     u6040:
  9071  00074E                     
  9072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  9073  00074E  0E00               	movlw	0
  9074  000750  0100               	movlb	0	; () banked
  9075  000752  6F95               	movwf	efgtoa@l& (0+255),b
  9076  000754  0E00               	movlw	0
  9077  000756  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  9078  000758  0E00               	movlw	0
  9079  00075A  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  9080  00075C  0E00               	movlw	0
  9081  00075E  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  9082                           
  9083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  9084  000760  EFDB  F003         	goto	l5262
  9085  000764                     l5256:
  9086                           
  9087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  9088  000764  C091  F001         	movff	efgtoa@h,___fleq@ff1
  9089  000768  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  9090  00076C  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  9091  000770  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  9092  000774  C095  F005         	movff	efgtoa@l,___fleq@ff2
  9093  000778  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  9094  00077C  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  9095  000780  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  9096  000784  ECEF  F025         	call	___fleq	;wreg free
  9097  000788  A0D8               	btfss	status,0,c
  9098  00078A  EFC9  F003         	goto	u6051
  9099  00078E  EFCB  F003         	goto	u6050
  9100  000792                     u6051:
  9101  000792  EFDB  F003         	goto	l5262
  9102  000796                     u6050:
  9103  000796  0100               	movlb	0	; () banked
  9104  000798  B187               	btfsc	efgtoa@d& (0+255),0,b
  9105  00079A  EFD1  F003         	goto	u6061
  9106  00079E  EFD3  F003         	goto	u6060
  9107  0007A2                     u6061:
  9108  0007A2  EFDB  F003         	goto	l5262
  9109  0007A6                     u6060:
  9110  0007A6                     
  9111                           ; BSR set to: 0
  9112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  9113  0007A6  0E00               	movlw	0
  9114  0007A8  6F95               	movwf	efgtoa@l& (0+255),b
  9115  0007AA  0E00               	movlw	0
  9116  0007AC  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  9117  0007AE  0E00               	movlw	0
  9118  0007B0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  9119  0007B2  0E00               	movlw	0
  9120  0007B4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  9121  0007B6                     l5262:
  9122                           
  9123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  9124  0007B6  C09B  F035         	movff	efgtoa@g,___fladd@b
  9125  0007BA  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  9126  0007BE  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  9127  0007C2  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  9128  0007C6  C095  F039         	movff	efgtoa@l,___fladd@a
  9129  0007CA  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  9130  0007CE  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  9131  0007D2  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  9132  0007D6  EC49  F00D         	call	___fladd	;wreg free
  9133  0007DA  C035  F091         	movff	?___fladd,efgtoa@h
  9134  0007DE  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  9135  0007E2  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  9136  0007E6  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  9137  0007EA                     
  9138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  9139  0007EA  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  9140  0007EE  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  9141  0007F2  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  9142  0007F6  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  9143  0007FA                     
  9144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  9145  0007FA  0E65               	movlw	101
  9146  0007FC  0100               	movlb	0	; () banked
  9147  0007FE  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9148  000800  B4D8               	btfsc	status,2,c
  9149  000802  EF05  F004         	goto	u6071
  9150  000806  EF07  F004         	goto	u6070
  9151  00080A                     u6071:
  9152  00080A  EF0D  F004         	goto	l5270
  9153  00080E                     u6070:
  9154  00080E                     
  9155                           ; BSR set to: 0
  9156  00080E  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  9157  000812  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  9158  000816  EF11  F004         	goto	l1510
  9159  00081A                     l5270:
  9160                           
  9161                           ; BSR set to: 0
  9162  00081A  0E00               	movlw	0
  9163  00081C  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  9164  00081E  0E00               	movlw	0
  9165  000820  6F85               	movwf	efgtoa@ne& (0+255),b
  9166  000822                     l1510:
  9167                           
  9168                           ; BSR set to: 0
  9169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  9170  000822  0E00               	movlw	0
  9171  000824  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9172  000826  0E00               	movlw	0
  9173  000828  6F81               	movwf	efgtoa@pp& (0+255),b
  9174                           
  9175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  9176  00082A  0E00               	movlw	0
  9177  00082C  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  9178  00082E  0E00               	movlw	0
  9179  000830  6F7F               	movwf	efgtoa@t& (0+255),b
  9180                           
  9181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  9182  000832  0E00               	movlw	0
  9183  000834  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9184  000836  0E00               	movlw	0
  9185  000838  6F99               	movwf	efgtoa@i& (0+255),b
  9186                           
  9187                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9188  00083A  EF0C  F005         	goto	l5320
  9189  00083E                     l5272:
  9190                           
  9191                           ; BSR set to: 0
  9192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  9193  00083E  C091  F035         	movff	efgtoa@h,___fldiv@b
  9194  000842  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  9195  000846  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  9196  00084A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  9197  00084E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  9198  000852  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  9199  000856  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  9200  00085A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  9201  00085E  ECBE  F011         	call	___fldiv	;wreg free
  9202  000862  C035  F04E         	movff	?___fldiv,floorf@x
  9203  000866  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  9204  00086A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  9205  00086E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  9206  000872  ECDA  F017         	call	_floorf	;wreg free
  9207  000876  C04E  F095         	movff	?_floorf,efgtoa@l
  9208  00087A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  9209  00087E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  9210  000882  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  9211                           
  9212                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  9213  000886  C095  F04E         	movff	efgtoa@l,___fltol@f1
  9214  00088A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  9215  00088E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  9216  000892  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  9217  000896  ECD1  F020         	call	___fltol	;wreg free
  9218  00089A  C04E  F087         	movff	?___fltol,efgtoa@d
  9219  00089E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  9220  0008A2                     
  9221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9222  0008A2  0100               	movlb	0	; () banked
  9223  0008A4  B9F8               	btfsc	_flags& (0+255),4,b
  9224  0008A6  EF57  F004         	goto	u6081
  9225  0008AA  EF59  F004         	goto	u6080
  9226  0008AE                     u6081:
  9227  0008AE  EF76  F004         	goto	l5284
  9228  0008B2                     u6080:
  9229  0008B2                     
  9230                           ; BSR set to: 0
  9231  0008B2  5187               	movf	efgtoa@d& (0+255),w,b
  9232  0008B4  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9233  0008B6  A4D8               	btfss	status,2,c
  9234  0008B8  EF60  F004         	goto	u6091
  9235  0008BC  EF62  F004         	goto	u6090
  9236  0008C0                     u6091:
  9237  0008C0  EF76  F004         	goto	l5284
  9238  0008C4                     u6090:
  9239  0008C4                     
  9240                           ; BSR set to: 0
  9241  0008C4  0E67               	movlw	103
  9242  0008C6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  9243  0008C8  A4D8               	btfss	status,2,c
  9244  0008CA  EF69  F004         	goto	u6101
  9245  0008CE  EF6B  F004         	goto	u6100
  9246  0008D2                     u6101:
  9247  0008D2  EF76  F004         	goto	l5284
  9248  0008D6                     u6100:
  9249  0008D6                     
  9250                           ; BSR set to: 0
  9251  0008D6  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9252  0008D8  EF72  F004         	goto	u6110
  9253  0008DC  EF70  F004         	goto	u6111
  9254  0008E0                     u6111:
  9255  0008E0  EF76  F004         	goto	l5284
  9256  0008E4                     u6110:
  9257  0008E4                     
  9258                           ; BSR set to: 0
  9259                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  9260  0008E4  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  9261  0008E6  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  9262                           
  9263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  9264  0008E8  EFC0  F004         	goto	l5312
  9265  0008EC                     l5284:
  9266                           
  9267                           ; BSR set to: 0
  9268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  9269  0008EC  5181               	movf	efgtoa@pp& (0+255),w,b
  9270  0008EE  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9271  0008F0  A4D8               	btfss	status,2,c
  9272  0008F2  EF7D  F004         	goto	u6121
  9273  0008F6  EF7F  F004         	goto	u6120
  9274  0008FA                     u6121:
  9275  0008FA  EFA9  F004         	goto	l5304
  9276  0008FE                     u6120:
  9277  0008FE                     
  9278                           ; BSR set to: 0
  9279  0008FE  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9280  000900  EF86  F004         	goto	u6130
  9281  000904  EF84  F004         	goto	u6131
  9282  000908                     u6131:
  9283  000908  EFA9  F004         	goto	l5304
  9284  00090C                     u6130:
  9285  00090C                     
  9286                           ; BSR set to: 0
  9287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  9288  00090C  0E60               	movlw	low _dbuf
  9289  00090E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9290  000910  6ED9               	movwf	fsr2l,c
  9291  000912  0E02               	movlw	high _dbuf
  9292  000914  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9293  000916  6EDA               	movwf	fsr2h,c
  9294  000918  0E2E               	movlw	46
  9295  00091A  6EDF               	movwf	indf2,c
  9296  00091C                     
  9297                           ; BSR set to: 0
  9298  00091C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9299  00091E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9300  000920                     
  9301                           ; BSR set to: 0
  9302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  9303  000920  078E               	decf	efgtoa@w& (0+255),f,b
  9304  000922  A0D8               	btfss	status,0,c
  9305  000924  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9306  000926                     
  9307                           ; BSR set to: 0
  9308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  9309  000926  0E00               	movlw	0
  9310  000928  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9311  00092A  0E01               	movlw	1
  9312  00092C  6F81               	movwf	efgtoa@pp& (0+255),b
  9313  00092E  EFA9  F004         	goto	l5304
  9314  000932                     l5296:
  9315                           
  9316                           ; BSR set to: 0
  9317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  9318  000932  0E60               	movlw	low _dbuf
  9319  000934  25A1               	addwf	efgtoa@n& (0+255),w,b
  9320  000936  6ED9               	movwf	fsr2l,c
  9321  000938  0E02               	movlw	high _dbuf
  9322  00093A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9323  00093C  6EDA               	movwf	fsr2h,c
  9324  00093E  0E30               	movlw	48
  9325  000940  6EDF               	movwf	indf2,c
  9326  000942                     
  9327                           ; BSR set to: 0
  9328  000942  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9329  000944  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9330  000946                     
  9331                           ; BSR set to: 0
  9332                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  9333  000946  078E               	decf	efgtoa@w& (0+255),f,b
  9334  000948  A0D8               	btfss	status,0,c
  9335  00094A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9336  00094C                     
  9337                           ; BSR set to: 0
  9338                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  9339  00094C  077F               	decf	efgtoa@t& (0+255),f,b
  9340  00094E  A0D8               	btfss	status,0,c
  9341  000950  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  9342  000952                     l5304:
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  9346  000952  517F               	movf	efgtoa@t& (0+255),w,b
  9347  000954  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9348  000956  A4D8               	btfss	status,2,c
  9349  000958  EFB0  F004         	goto	u6141
  9350  00095C  EFB2  F004         	goto	u6140
  9351  000960                     u6141:
  9352  000960  EF99  F004         	goto	l5296
  9353  000964                     u6140:
  9354  000964                     
  9355                           ; BSR set to: 0
  9356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  9357  000964  0E60               	movlw	low _dbuf
  9358  000966  25A1               	addwf	efgtoa@n& (0+255),w,b
  9359  000968  6ED9               	movwf	fsr2l,c
  9360  00096A  0E02               	movlw	high _dbuf
  9361  00096C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9362  00096E  6EDA               	movwf	fsr2h,c
  9363  000970  5187               	movf	efgtoa@d& (0+255),w,b
  9364  000972  0F30               	addlw	48
  9365  000974  6EDF               	movwf	indf2,c
  9366  000976                     
  9367                           ; BSR set to: 0
  9368  000976  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9369  000978  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9370  00097A                     
  9371                           ; BSR set to: 0
  9372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  9373  00097A  078E               	decf	efgtoa@w& (0+255),f,b
  9374  00097C  A0D8               	btfss	status,0,c
  9375  00097E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9376  000980                     l5312:
  9377                           
  9378                           ; BSR set to: 0
  9379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  9380  000980  C091  F045         	movff	efgtoa@h,___flsub@b
  9381  000984  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  9382  000988  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  9383  00098C  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  9384  000990  C0A3  F020         	movff	efgtoa@u,___flmul@a
  9385  000994  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  9386  000998  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  9387  00099C  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  9388  0009A0  C095  F01C         	movff	efgtoa@l,___flmul@b
  9389  0009A4  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  9390  0009A8  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  9391  0009AC  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  9392  0009B0  ECA9  F00F         	call	___flmul	;wreg free
  9393  0009B4  C01C  F049         	movff	?___flmul,___flsub@a
  9394  0009B8  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  9395  0009BC  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  9396  0009C0  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  9397  0009C4  EC9E  F029         	call	___flsub	;wreg free
  9398  0009C8  C045  F091         	movff	?___flsub,efgtoa@h
  9399  0009CC  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  9400  0009D0  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  9401  0009D4  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  9402  0009D8                     
  9403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  9404  0009D8  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  9405  0009DC  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  9406  0009E0  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  9407  0009E4  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  9408  0009E8  0E00               	movlw	0
  9409  0009EA  6E39               	movwf	___fldiv@a^0,c
  9410  0009EC  0E00               	movlw	0
  9411  0009EE  6E3A               	movwf	(___fldiv@a+1)^0,c
  9412  0009F0  0E20               	movlw	32
  9413  0009F2  6E3B               	movwf	(___fldiv@a+2)^0,c
  9414  0009F4  0E41               	movlw	65
  9415  0009F6  6E3C               	movwf	(___fldiv@a+3)^0,c
  9416  0009F8  ECBE  F011         	call	___fldiv	;wreg free
  9417  0009FC  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9418  000A00  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9419  000A04  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9420  000A08  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9421  000A0C                     
  9422                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  9423  000A0C  0100               	movlb	0	; () banked
  9424  000A0E  0785               	decf	efgtoa@ne& (0+255),f,b
  9425  000A10  A0D8               	btfss	status,0,c
  9426  000A12  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  9427  000A14                     
  9428                           ; BSR set to: 0
  9429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  9430  000A14  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9431  000A16  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9432  000A18                     l5320:
  9433                           
  9434                           ; BSR set to: 0
  9435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9436  000A18  5183               	movf	efgtoa@m& (0+255),w,b
  9437  000A1A  5D99               	subwf	efgtoa@i& (0+255),w,b
  9438  000A1C  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9439  000A1E  0A80               	xorlw	128
  9440  000A20  6F6A               	movwf	??_efgtoa& (0+255),b
  9441  000A22  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9442  000A24  0A80               	xorlw	128
  9443  000A26  596A               	subwfb	??_efgtoa& (0+255),w,b
  9444  000A28  B0D8               	btfsc	status,0,c
  9445  000A2A  EF19  F005         	goto	u6151
  9446  000A2E  EF1B  F005         	goto	u6150
  9447  000A32                     u6151:
  9448  000A32  EF29  F005         	goto	l5324
  9449  000A36                     u6150:
  9450  000A36                     
  9451                           ; BSR set to: 0
  9452  000A36  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9453  000A38  EF27  F005         	goto	u6161
  9454  000A3C  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  9455  000A3E  E109               	bnz	u6160
  9456  000A40  0E4B               	movlw	75
  9457  000A42  5DA1               	subwf	efgtoa@n& (0+255),w,b
  9458  000A44  A0D8               	btfss	status,0,c
  9459  000A46  EF27  F005         	goto	u6161
  9460  000A4A  EF29  F005         	goto	u6160
  9461  000A4E                     u6161:
  9462  000A4E  EF1F  F004         	goto	l5272
  9463  000A52                     u6160:
  9464  000A52                     l5324:
  9465                           
  9466                           ; BSR set to: 0
  9467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  9468  000A52  5181               	movf	efgtoa@pp& (0+255),w,b
  9469  000A54  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9470  000A56  A4D8               	btfss	status,2,c
  9471  000A58  EF30  F005         	goto	u6171
  9472  000A5C  EF32  F005         	goto	u6170
  9473  000A60                     u6171:
  9474  000A60  EF43  F005         	goto	l5332
  9475  000A64                     u6170:
  9476  000A64                     
  9477                           ; BSR set to: 0
  9478  000A64  A9F8               	btfss	_flags& (0+255),4,b
  9479  000A66  EF37  F005         	goto	u6181
  9480  000A6A  EF39  F005         	goto	u6180
  9481  000A6E                     u6181:
  9482  000A6E  EF43  F005         	goto	l5332
  9483  000A72                     u6180:
  9484  000A72                     
  9485                           ; BSR set to: 0
  9486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  9487  000A72  0E60               	movlw	low _dbuf
  9488  000A74  25A1               	addwf	efgtoa@n& (0+255),w,b
  9489  000A76  6ED9               	movwf	fsr2l,c
  9490  000A78  0E02               	movlw	high _dbuf
  9491  000A7A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9492  000A7C  6EDA               	movwf	fsr2h,c
  9493  000A7E  0E2E               	movlw	46
  9494  000A80  6EDF               	movwf	indf2,c
  9495  000A82                     
  9496                           ; BSR set to: 0
  9497  000A82  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9498  000A84  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9499  000A86                     l5332:
  9500                           
  9501                           ; BSR set to: 0
  9502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  9503  000A86  0E60               	movlw	low _dbuf
  9504  000A88  25A1               	addwf	efgtoa@n& (0+255),w,b
  9505  000A8A  6ED9               	movwf	fsr2l,c
  9506  000A8C  0E02               	movlw	high _dbuf
  9507  000A8E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9508  000A90  6EDA               	movwf	fsr2h,c
  9509  000A92  0E00               	movlw	0
  9510  000A94  6EDF               	movwf	indf2,c
  9511  000A96                     
  9512                           ; BSR set to: 0
  9513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  9514  000A96  0E65               	movlw	101
  9515  000A98  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9516  000A9A  A4D8               	btfss	status,2,c
  9517  000A9C  EF52  F005         	goto	u6191
  9518  000AA0  EF54  F005         	goto	u6190
  9519  000AA4                     u6191:
  9520  000AA4  EF02  F001         	goto	l5144
  9521  000AA8                     u6190:
  9522  000AA8                     
  9523                           ; BSR set to: 0
  9524                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  9525  000AA8  0E00               	movlw	0
  9526  000AAA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9527  000AAC  0E4F               	movlw	79
  9528  000AAE  6F99               	movwf	efgtoa@i& (0+255),b
  9529  000AB0                     
  9530                           ; BSR set to: 0
  9531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  9532  000AB0  0E60               	movlw	low _dbuf
  9533  000AB2  2599               	addwf	efgtoa@i& (0+255),w,b
  9534  000AB4  6ED9               	movwf	fsr2l,c
  9535  000AB6  0E02               	movlw	high _dbuf
  9536  000AB8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9537  000ABA  6EDA               	movwf	fsr2h,c
  9538  000ABC  0E00               	movlw	0
  9539  000ABE  6EDF               	movwf	indf2,c
  9540  000AC0                     
  9541                           ; BSR set to: 0
  9542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  9543  000AC0  0E00               	movlw	0
  9544  000AC2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9545  000AC4  0E00               	movlw	0
  9546  000AC6  6F89               	movwf	efgtoa@sign& (0+255),b
  9547  000AC8                     
  9548                           ; BSR set to: 0
  9549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  9550  000AC8  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9551  000ACA  EF6B  F005         	goto	u6200
  9552  000ACE  EF69  F005         	goto	u6201
  9553  000AD2                     u6201:
  9554  000AD2  EF73  F005         	goto	l5348
  9555  000AD6                     u6200:
  9556  000AD6                     
  9557                           ; BSR set to: 0
  9558                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  9559  000AD6  0E00               	movlw	0
  9560  000AD8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9561  000ADA  0E01               	movlw	1
  9562  000ADC  6F89               	movwf	efgtoa@sign& (0+255),b
  9563  000ADE                     
  9564                           ; BSR set to: 0
  9565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  9566  000ADE  6D9F               	negf	efgtoa@e& (0+255),b
  9567  000AE0  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  9568  000AE2  B0D8               	btfsc	status,0,c
  9569  000AE4  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  9570  000AE6                     l5348:
  9571                           
  9572                           ; BSR set to: 0
  9573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  9574  000AE6  0E00               	movlw	0
  9575  000AE8  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  9576  000AEA  0E02               	movlw	2
  9577  000AEC  6F8B               	movwf	efgtoa@p& (0+255),b
  9578                           
  9579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9580  000AEE  EFA4  F005         	goto	l5360
  9581  000AF2                     l5350:
  9582                           
  9583                           ; BSR set to: 0
  9584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  9585  000AF2  0799               	decf	efgtoa@i& (0+255),f,b
  9586  000AF4  A0D8               	btfss	status,0,c
  9587  000AF6  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9588  000AF8                     
  9589                           ; BSR set to: 0
  9590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  9591  000AF8  0E60               	movlw	low _dbuf
  9592  000AFA  2599               	addwf	efgtoa@i& (0+255),w,b
  9593  000AFC  6ED9               	movwf	fsr2l,c
  9594  000AFE  0E02               	movlw	high _dbuf
  9595  000B00  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9596  000B02  6EDA               	movwf	fsr2h,c
  9597  000B04  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  9598  000B08  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  9599  000B0C  0E00               	movlw	0
  9600  000B0E  6E04               	movwf	(___awmod@divisor+1)^0,c
  9601  000B10  0E0A               	movlw	10
  9602  000B12  6E03               	movwf	___awmod@divisor^0,c
  9603  000B14  EC97  F025         	call	___awmod	;wreg free
  9604  000B18  5001               	movf	?___awmod^0,w,c
  9605  000B1A  0F30               	addlw	48
  9606  000B1C  6EDF               	movwf	indf2,c
  9607  000B1E                     
  9608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  9609  000B1E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  9610  000B22  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  9611  000B26  0E00               	movlw	0
  9612  000B28  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9613  000B2A  0E0A               	movlw	10
  9614  000B2C  6E03               	movwf	___awdiv@divisor^0,c
  9615  000B2E  ECDC  F024         	call	___awdiv	;wreg free
  9616  000B32  C001  F09F         	movff	?___awdiv,efgtoa@e
  9617  000B36  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  9618  000B3A                     
  9619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  9620  000B3A  0100               	movlb	0	; () banked
  9621  000B3C  078B               	decf	efgtoa@p& (0+255),f,b
  9622  000B3E  A0D8               	btfss	status,0,c
  9623  000B40  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  9624  000B42                     
  9625                           ; BSR set to: 0
  9626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  9627  000B42  078E               	decf	efgtoa@w& (0+255),f,b
  9628  000B44  A0D8               	btfss	status,0,c
  9629  000B46  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9630  000B48                     l5360:
  9631                           
  9632                           ; BSR set to: 0
  9633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9634  000B48  519F               	movf	efgtoa@e& (0+255),w,b
  9635  000B4A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9636  000B4C  A4D8               	btfss	status,2,c
  9637  000B4E  EFAB  F005         	goto	u6211
  9638  000B52  EFAD  F005         	goto	u6210
  9639  000B56                     u6211:
  9640  000B56  EF79  F005         	goto	l5350
  9641  000B5A                     u6210:
  9642  000B5A                     
  9643                           ; BSR set to: 0
  9644  000B5A  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9645  000B5C  EFBA  F005         	goto	u6220
  9646  000B60  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  9647  000B62  E106               	bnz	u6221
  9648  000B64  058B               	decf	efgtoa@p& (0+255),w,b
  9649  000B66  B0D8               	btfsc	status,0,c
  9650  000B68  EFB8  F005         	goto	u6221
  9651  000B6C  EFBA  F005         	goto	u6220
  9652  000B70                     u6221:
  9653  000B70  EF79  F005         	goto	l5350
  9654  000B74                     u6220:
  9655  000B74                     
  9656                           ; BSR set to: 0
  9657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  9658  000B74  0799               	decf	efgtoa@i& (0+255),f,b
  9659  000B76  A0D8               	btfss	status,0,c
  9660  000B78  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9661  000B7A                     
  9662                           ; BSR set to: 0
  9663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  9664  000B7A  5189               	movf	efgtoa@sign& (0+255),w,b
  9665  000B7C  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9666  000B7E  A4D8               	btfss	status,2,c
  9667  000B80  EFC4  F005         	goto	u6231
  9668  000B84  EFC6  F005         	goto	u6230
  9669  000B88                     u6231:
  9670  000B88  EFCC  F005         	goto	l5370
  9671  000B8C                     u6230:
  9672  000B8C                     
  9673                           ; BSR set to: 0
  9674  000B8C  0E00               	movlw	0
  9675  000B8E  6F7A               	movwf	(_efgtoa$2988+1)& (0+255),b
  9676  000B90  0E2B               	movlw	43
  9677  000B92  6F79               	movwf	_efgtoa$2988& (0+255),b
  9678  000B94  EFD0  F005         	goto	l5372
  9679  000B98                     l5370:
  9680                           
  9681                           ; BSR set to: 0
  9682  000B98  0E00               	movlw	0
  9683  000B9A  6F7A               	movwf	(_efgtoa$2988+1)& (0+255),b
  9684  000B9C  0E2D               	movlw	45
  9685  000B9E  6F79               	movwf	_efgtoa$2988& (0+255),b
  9686  000BA0                     l5372:
  9687                           
  9688                           ; BSR set to: 0
  9689  000BA0  0E60               	movlw	low _dbuf
  9690  000BA2  2599               	addwf	efgtoa@i& (0+255),w,b
  9691  000BA4  6ED9               	movwf	fsr2l,c
  9692  000BA6  0E02               	movlw	high _dbuf
  9693  000BA8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9694  000BAA  6EDA               	movwf	fsr2h,c
  9695  000BAC  C079  FFDF         	movff	_efgtoa$2988,indf2
  9696  000BB0                     
  9697                           ; BSR set to: 0
  9698                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  9699  000BB0  078E               	decf	efgtoa@w& (0+255),f,b
  9700  000BB2  A0D8               	btfss	status,0,c
  9701  000BB4  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9702  000BB6                     
  9703                           ; BSR set to: 0
  9704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9705  000BB6  0799               	decf	efgtoa@i& (0+255),f,b
  9706  000BB8  A0D8               	btfss	status,0,c
  9707  000BBA  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9708  000BBC                     
  9709                           ; BSR set to: 0
  9710  000BBC  0EBF               	movlw	191
  9711  000BBE  6F6A               	movwf	??_efgtoa& (0+255),b
  9712  000BC0  0EFF               	movlw	255
  9713  000BC2  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  9714  000BC4  505E               	movf	efgtoa@c^0,w,c
  9715  000BC6  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  9716  000BC8  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  9717  000BCA  516A               	movf	??_efgtoa& (0+255),w,b
  9718  000BCC  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  9719  000BCE  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  9720  000BD0  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9721  000BD2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  9722  000BD4  E10A               	bnz	u6240
  9723  000BD6  0E1A               	movlw	26
  9724  000BD8  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  9725  000BDA  A0D8               	btfss	status,0,c
  9726  000BDC  EFF2  F005         	goto	u6241
  9727  000BE0  EFF5  F005         	goto	u6240
  9728  000BE4                     u6241:
  9729  000BE4  0E01               	movlw	1
  9730  000BE6  EFF6  F005         	goto	u6250
  9731  000BEA                     u6240:
  9732  000BEA  0E00               	movlw	0
  9733  000BEC                     u6250:
  9734  000BEC  6F7D               	movwf	_efgtoa$2990& (0+255),b
  9735  000BEE  6B7E               	clrf	(_efgtoa$2990+1)& (0+255),b
  9736  000BF0                     
  9737                           ; BSR set to: 0
  9738  000BF0  517D               	movf	_efgtoa$2990& (0+255),w,b
  9739  000BF2  117E               	iorwf	(_efgtoa$2990+1)& (0+255),w,b
  9740  000BF4  A4D8               	btfss	status,2,c
  9741  000BF6  EFFF  F005         	goto	u6261
  9742  000BFA  EF01  F006         	goto	u6260
  9743  000BFE                     u6261:
  9744  000BFE  EF07  F006         	goto	l5386
  9745  000C02                     u6260:
  9746  000C02                     
  9747                           ; BSR set to: 0
  9748  000C02  0E00               	movlw	0
  9749  000C04  6F7C               	movwf	(_efgtoa$2989+1)& (0+255),b
  9750  000C06  0E65               	movlw	101
  9751  000C08  6F7B               	movwf	_efgtoa$2989& (0+255),b
  9752  000C0A  EF0B  F006         	goto	l5388
  9753  000C0E                     l5386:
  9754                           
  9755                           ; BSR set to: 0
  9756  000C0E  0E00               	movlw	0
  9757  000C10  6F7C               	movwf	(_efgtoa$2989+1)& (0+255),b
  9758  000C12  0E45               	movlw	69
  9759  000C14  6F7B               	movwf	_efgtoa$2989& (0+255),b
  9760  000C16                     l5388:
  9761                           
  9762                           ; BSR set to: 0
  9763  000C16  0E60               	movlw	low _dbuf
  9764  000C18  2599               	addwf	efgtoa@i& (0+255),w,b
  9765  000C1A  6ED9               	movwf	fsr2l,c
  9766  000C1C  0E02               	movlw	high _dbuf
  9767  000C1E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9768  000C20  6EDA               	movwf	fsr2h,c
  9769  000C22  C07B  FFDF         	movff	_efgtoa$2989,indf2
  9770  000C26                     
  9771                           ; BSR set to: 0
  9772                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9773  000C26  078E               	decf	efgtoa@w& (0+255),f,b
  9774  000C28  A0D8               	btfss	status,0,c
  9775  000C2A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9776  000C2C                     
  9777                           ; BSR set to: 0
  9778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9779  000C2C  0E60               	movlw	low _dbuf
  9780  000C2E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9781  000C30  6E01               	movwf	strcpy@dest^0,c
  9782  000C32  0E02               	movlw	high _dbuf
  9783  000C34  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9784  000C36  6E02               	movwf	(strcpy@dest+1)^0,c
  9785  000C38  0E60               	movlw	low _dbuf
  9786  000C3A  2599               	addwf	efgtoa@i& (0+255),w,b
  9787  000C3C  6E03               	movwf	strcpy@src^0,c
  9788  000C3E  0E02               	movlw	high _dbuf
  9789  000C40  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9790  000C42  6E04               	movwf	(strcpy@src+1)^0,c
  9791  000C44  ECA2  F028         	call	_strcpy	;wreg free
  9792  000C48  EF02  F001         	goto	l5144
  9793  000C4C                     l1466:
  9794  000C4C  0012               	return		;funcret
  9795  000C4E                     __end_of_efgtoa:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function _tolower *****************
  9799 ;; Defined at:
  9800 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  c               2    6[COMRAM] int 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;		None
  9805 ;; Return value:  Size  Location     Type
  9806 ;;                  2    6[COMRAM] int 
  9807 ;; Registers used:
  9808 ;;		wreg, status,2, status,0
  9809 ;; Tracked objects:
  9810 ;;		On entry : 0/0
  9811 ;;		On exit  : 0/0
  9812 ;;		Unchanged: 0/0
  9813 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9814 ;;      Params:         2       0       0       0       0       0       0
  9815 ;;      Locals:         2       0       0       0       0       0       0
  9816 ;;      Temps:          4       0       0       0       0       0       0
  9817 ;;      Totals:         8       0       0       0       0       0       0
  9818 ;;Total ram usage:        8 bytes
  9819 ;; Hardware stack levels used:    1
  9820 ;; Hardware stack levels required when called:    2
  9821 ;; This function calls:
  9822 ;;		_isupper
  9823 ;; This function is called by:
  9824 ;;		_efgtoa
  9825 ;;		_vfpfcnvrt
  9826 ;; This function uses a non-reentrant model
  9827 ;;
  9828                           
  9829                           	psect	text35
  9830  0050E4                     __ptext35:
  9831                           	callstack 0
  9832  0050E4                     _tolower:
  9833                           	callstack 22
  9834  0050E4  0EBF               	movlw	191
  9835  0050E6  6E09               	movwf	??_tolower^0,c
  9836  0050E8  0EFF               	movlw	255
  9837  0050EA  6E0A               	movwf	(??_tolower+1)^0,c
  9838  0050EC  C007  F00B         	movff	tolower@c,??_tolower+2
  9839  0050F0  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9840  0050F4  5009               	movf	??_tolower^0,w,c
  9841  0050F6  260B               	addwf	(??_tolower+2)^0,f,c
  9842  0050F8  500A               	movf	(??_tolower+1)^0,w,c
  9843  0050FA  220C               	addwfc	(??_tolower+3)^0,f,c
  9844  0050FC  500C               	movf	(??_tolower+3)^0,w,c
  9845  0050FE  E10A               	bnz	u5430
  9846  005100  0E1A               	movlw	26
  9847  005102  5C0B               	subwf	(??_tolower+2)^0,w,c
  9848  005104  A0D8               	btfss	status,0,c
  9849  005106  EF87  F028         	goto	u5431
  9850  00510A  EF8A  F028         	goto	u5430
  9851  00510E                     u5431:
  9852  00510E  0E01               	movlw	1
  9853  005110  EF8B  F028         	goto	u5440
  9854  005114                     u5430:
  9855  005114  0E00               	movlw	0
  9856  005116                     u5440:
  9857  005116  6E0D               	movwf	_tolower$3141^0,c
  9858  005118  6A0E               	clrf	(_tolower$3141+1)^0,c
  9859  00511A  500D               	movf	_tolower$3141^0,w,c
  9860  00511C  100E               	iorwf	(_tolower$3141+1)^0,w,c
  9861  00511E  B4D8               	btfsc	status,2,c
  9862  005120  EF94  F028         	goto	u5451
  9863  005124  EF96  F028         	goto	u5450
  9864  005128                     u5451:
  9865  005128  EF9D  F028         	goto	l1714
  9866  00512C                     u5450:
  9867  00512C  0E20               	movlw	32
  9868  00512E  1007               	iorwf	tolower@c^0,w,c
  9869  005130  6E07               	movwf	?_tolower^0,c
  9870  005132  5008               	movf	(tolower@c+1)^0,w,c
  9871  005134  6E08               	movwf	(?_tolower+1)^0,c
  9872  005136  EFA1  F028         	goto	l1719
  9873  00513A                     l1714:
  9874  00513A  C007  F007         	movff	tolower@c,?_tolower
  9875  00513E  C008  F008         	movff	tolower@c+1,?_tolower+1
  9876  005142                     l1719:
  9877  005142  0012               	return		;funcret
  9878  005144                     __end_of_tolower:
  9879                           	callstack 0
  9880                           
  9881 ;; *************** function _isupper *****************
  9882 ;; Defined at:
  9883 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9884 ;; Parameters:    Size  Location     Type
  9885 ;;  c               2    0[COMRAM] int 
  9886 ;; Auto vars:     Size  Location     Type
  9887 ;;		None
  9888 ;; Return value:  Size  Location     Type
  9889 ;;                  2    0[COMRAM] int 
  9890 ;; Registers used:
  9891 ;;		wreg, status,2, status,0
  9892 ;; Tracked objects:
  9893 ;;		On entry : 0/0
  9894 ;;		On exit  : 0/0
  9895 ;;		Unchanged: 0/0
  9896 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9897 ;;      Params:         2       0       0       0       0       0       0
  9898 ;;      Locals:         0       0       0       0       0       0       0
  9899 ;;      Temps:          4       0       0       0       0       0       0
  9900 ;;      Totals:         6       0       0       0       0       0       0
  9901 ;;Total ram usage:        6 bytes
  9902 ;; Hardware stack levels used:    1
  9903 ;; Hardware stack levels required when called:    1
  9904 ;; This function calls:
  9905 ;;		Nothing
  9906 ;; This function is called by:
  9907 ;;		_efgtoa
  9908 ;;		_vfpfcnvrt
  9909 ;;		_tolower
  9910 ;; This function uses a non-reentrant model
  9911 ;;
  9912                           
  9913                           	psect	text36
  9914  005502                     __ptext36:
  9915                           	callstack 0
  9916  005502                     _isupper:
  9917                           	callstack 22
  9918  005502  0EBF               	movlw	191
  9919  005504  6E03               	movwf	??_isupper^0,c
  9920  005506  0EFF               	movlw	255
  9921  005508  6E04               	movwf	(??_isupper+1)^0,c
  9922  00550A  C001  F005         	movff	isupper@c,??_isupper+2
  9923  00550E  C002  F006         	movff	isupper@c+1,??_isupper+3
  9924  005512  5003               	movf	??_isupper^0,w,c
  9925  005514  2605               	addwf	(??_isupper+2)^0,f,c
  9926  005516  5004               	movf	(??_isupper+1)^0,w,c
  9927  005518  2206               	addwfc	(??_isupper+3)^0,f,c
  9928  00551A  5006               	movf	(??_isupper+3)^0,w,c
  9929  00551C  E10A               	bnz	u4440
  9930  00551E  0E1A               	movlw	26
  9931  005520  5C05               	subwf	(??_isupper+2)^0,w,c
  9932  005522  A0D8               	btfss	status,0,c
  9933  005524  EF96  F02A         	goto	u4441
  9934  005528  EF99  F02A         	goto	u4440
  9935  00552C                     u4441:
  9936  00552C  0E01               	movlw	1
  9937  00552E  EF9A  F02A         	goto	u4450
  9938  005532                     u4440:
  9939  005532  0E00               	movlw	0
  9940  005534                     u4450:
  9941  005534  6E01               	movwf	?_isupper^0,c
  9942  005536  6A02               	clrf	(?_isupper+1)^0,c
  9943  005538  0012               	return		;funcret
  9944  00553A                     __end_of_isupper:
  9945                           	callstack 0
  9946                           
  9947 ;; *************** function _strcpy *****************
  9948 ;; Defined at:
  9949 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9950 ;; Parameters:    Size  Location     Type
  9951 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9952 ;;		 -> dbuf(80), 
  9953 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9954 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  9955 ;;		 -> dbuf(80), 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  d               2    8[COMRAM] PTR unsigned char 
  9958 ;;		 -> dbuf(80), 
  9959 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9960 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  9961 ;;		 -> dbuf(80), 
  9962 ;; Return value:  Size  Location     Type
  9963 ;;                  2    0[COMRAM] PTR unsigned char 
  9964 ;; Registers used:
  9965 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9966 ;; Tracked objects:
  9967 ;;		On entry : 0/0
  9968 ;;		On exit  : 0/0
  9969 ;;		Unchanged: 0/0
  9970 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9971 ;;      Params:         4       0       0       0       0       0       0
  9972 ;;      Locals:         4       0       0       0       0       0       0
  9973 ;;      Temps:          2       0       0       0       0       0       0
  9974 ;;      Totals:        10       0       0       0       0       0       0
  9975 ;;Total ram usage:       10 bytes
  9976 ;; Hardware stack levels used:    1
  9977 ;; Hardware stack levels required when called:    1
  9978 ;; This function calls:
  9979 ;;		Nothing
  9980 ;; This function is called by:
  9981 ;;		_efgtoa
  9982 ;; This function uses a non-reentrant model
  9983 ;;
  9984                           
  9985                           	psect	text37
  9986  005144                     __ptext37:
  9987                           	callstack 0
  9988  005144                     _strcpy:
  9989                           	callstack 22
  9990  005144  C003  F007         	movff	strcpy@src,strcpy@s
  9991  005148  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9992  00514C  C001  F009         	movff	strcpy@dest,strcpy@d
  9993  005150  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9994  005154                     l4982:
  9995  005154  5007               	movf	strcpy@s^0,w,c
  9996  005156  6E05               	movwf	??_strcpy^0,c
  9997  005158  5008               	movf	(strcpy@s+1)^0,w,c
  9998  00515A  6E06               	movwf	(??_strcpy+1)^0,c
  9999  00515C  4A07               	infsnz	strcpy@s^0,f,c
 10000  00515E  2A08               	incf	(strcpy@s+1)^0,f,c
 10001  005160  C005  FFF6         	movff	??_strcpy,tblptrl
 10002  005164  C006  FFF7         	movff	??_strcpy+1,tblptrh
 10003  005168  6AF8               	clrf	tblptru,c
 10004  00516A  C009  FFD9         	movff	strcpy@d,fsr2l
 10005  00516E  C00A  FFDA         	movff	strcpy@d+1,fsr2h
 10006  005172  4A09               	infsnz	strcpy@d^0,f,c
 10007  005174  2A0A               	incf	(strcpy@d+1)^0,f,c
 10008  005176  0E05               	movlw	(high __ramtop+-1)
 10009  005178  64F7               	cpfsgt	tblptrh,c
 10010  00517A  D003               	bra	u5417
 10011  00517C  0008               	tblrd		*
 10012  00517E  50F5               	movf	tablat,w,c
 10013  005180  D005               	bra	u5410
 10014  005182                     u5417:
 10015  005182  CFF6 FFE1          	movff	tblptrl,fsr1l
 10016  005186  CFF7 FFE2          	movff	tblptrh,fsr1h
 10017  00518A  50E7               	movf	indf1,w,c
 10018  00518C                     u5410:
 10019  00518C  6EDF               	movwf	indf2,c
 10020  00518E  50DF               	movf	indf2,w,c
 10021  005190  A4D8               	btfss	status,2,c
 10022  005192  EFCD  F028         	goto	u5421
 10023  005196  EFCF  F028         	goto	u5420
 10024  00519A                     u5421:
 10025  00519A  EFAA  F028         	goto	l4982
 10026  00519E                     u5420:
 10027  00519E  0012               	return		;funcret
 10028  0051A0                     __end_of_strcpy:
 10029                           	callstack 0
 10030                           
 10031 ;; *************** function _floorf *****************
 10032 ;; Defined at:
 10033 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
 10034 ;; Parameters:    Size  Location     Type
 10035 ;;  x               4   77[COMRAM] float 
 10036 ;; Auto vars:     Size  Location     Type
 10037 ;;  u               4    6[BANK0 ] struct .
 10038 ;;  m               4    0[BANK0 ] unsigned long 
 10039 ;;  e               2    4[BANK0 ] int 
 10040 ;; Return value:  Size  Location     Type
 10041 ;;                  4   77[COMRAM] float 
 10042 ;; Registers used:
 10043 ;;		wreg, status,2, status,0
 10044 ;; Tracked objects:
 10045 ;;		On entry : 0/0
 10046 ;;		On exit  : 0/0
 10047 ;;		Unchanged: 0/0
 10048 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10049 ;;      Params:         4       0       0       0       0       0       0
 10050 ;;      Locals:         0      10       0       0       0       0       0
 10051 ;;      Temps:          6       0       0       0       0       0       0
 10052 ;;      Totals:        10      10       0       0       0       0       0
 10053 ;;Total ram usage:       20 bytes
 10054 ;; Hardware stack levels used:    1
 10055 ;; Hardware stack levels required when called:    1
 10056 ;; This function calls:
 10057 ;;		Nothing
 10058 ;; This function is called by:
 10059 ;;		_efgtoa
 10060 ;; This function uses a non-reentrant model
 10061 ;;
 10062                           
 10063                           	psect	text38
 10064  002FB4                     __ptext38:
 10065                           	callstack 0
 10066  002FB4                     _floorf:
 10067                           	callstack 22
 10068  002FB4  C1A3  F066         	movff	floorf@F524,floorf@u
 10069  002FB8  C1A4  F067         	movff	floorf@F524+1,floorf@u+1
 10070  002FBC  C1A5  F068         	movff	floorf@F524+2,floorf@u+2
 10071  002FC0  C1A6  F069         	movff	floorf@F524+3,floorf@u+3
 10072  002FC4  C04E  F066         	movff	floorf@x,floorf@u
 10073  002FC8  C04F  F067         	movff	floorf@x+1,floorf@u+1
 10074  002FCC  C050  F068         	movff	floorf@x+2,floorf@u+2
 10075  002FD0  C051  F069         	movff	floorf@x+3,floorf@u+3
 10076  002FD4  0E81               	movlw	129
 10077  002FD6  6E52               	movwf	??_floorf^0,c
 10078  002FD8  0EFF               	movlw	255
 10079  002FDA  6E53               	movwf	(??_floorf+1)^0,c
 10080  002FDC  C066  F054         	movff	floorf@u,??_floorf+2
 10081  002FE0  C067  F055         	movff	floorf@u+1,??_floorf+3
 10082  002FE4  C068  F056         	movff	floorf@u+2,??_floorf+4
 10083  002FE8  C069  F057         	movff	floorf@u+3,??_floorf+5
 10084  002FEC  0E18               	movlw	24
 10085  002FEE  EFFE  F017         	goto	u5460
 10086  002FF2                     u5465:
 10087  002FF2  90D8               	bcf	status,0,c
 10088  002FF4  3257               	rrcf	(??_floorf+5)^0,f,c
 10089  002FF6  3256               	rrcf	(??_floorf+4)^0,f,c
 10090  002FF8  3255               	rrcf	(??_floorf+3)^0,f,c
 10091  002FFA  3254               	rrcf	(??_floorf+2)^0,f,c
 10092  002FFC                     u5460:
 10093  002FFC  2EE8               	decfsz	wreg,f,c
 10094  002FFE  EFF9  F017         	goto	u5465
 10095  003002  5054               	movf	(??_floorf+2)^0,w,c
 10096  003004  2452               	addwf	??_floorf^0,w,c
 10097  003006  0100               	movlb	0	; () banked
 10098  003008  6F64               	movwf	floorf@e& (0+255),b
 10099  00300A  0E00               	movlw	0
 10100  00300C  2053               	addwfc	(??_floorf+1)^0,w,c
 10101  00300E  6F65               	movwf	(floorf@e+1)& (0+255),b
 10102  003010  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10103  003012  EF14  F018         	goto	u5471
 10104  003016  5165               	movf	(floorf@e+1)& (0+255),w,b
 10105  003018  E109               	bnz	u5470
 10106  00301A  0E17               	movlw	23
 10107  00301C  5D64               	subwf	floorf@e& (0+255),w,b
 10108  00301E  A0D8               	btfss	status,0,c
 10109  003020  EF14  F018         	goto	u5471
 10110  003024  EF16  F018         	goto	u5470
 10111  003028                     u5471:
 10112  003028  EF20  F018         	goto	l5000
 10113  00302C                     u5470:
 10114  00302C                     l4998:
 10115                           
 10116                           ; BSR set to: 0
 10117  00302C  C04E  F04E         	movff	floorf@x,?_floorf
 10118  003030  C04F  F04F         	movff	floorf@x+1,?_floorf+1
 10119  003034  C050  F050         	movff	floorf@x+2,?_floorf+2
 10120  003038  C051  F051         	movff	floorf@x+3,?_floorf+3
 10121  00303C  EFE4  F018         	goto	l1638
 10122  003040                     l5000:
 10123                           
 10124                           ; BSR set to: 0
 10125  003040  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10126  003042  EF25  F018         	goto	u5481
 10127  003046  EF27  F018         	goto	u5480
 10128  00304A                     u5481:
 10129  00304A  EF98  F018         	goto	l5010
 10130  00304E                     u5480:
 10131  00304E                     
 10132                           ; BSR set to: 0
 10133  00304E  C064  F052         	movff	floorf@e,??_floorf
 10134  003052  0EFF               	movlw	255
 10135  003054  6E53               	movwf	(??_floorf+1)^0,c
 10136  003056  0EFF               	movlw	255
 10137  003058  6E54               	movwf	(??_floorf+2)^0,c
 10138  00305A  0E7F               	movlw	127
 10139  00305C  6E55               	movwf	(??_floorf+3)^0,c
 10140  00305E  0E00               	movlw	0
 10141  003060  6E56               	movwf	(??_floorf+4)^0,c
 10142  003062                     u5495:
 10143  003062  6652               	tstfsz	??_floorf^0,c
 10144  003064  EF36  F018         	goto	u5496
 10145  003068  EF3E  F018         	goto	u5497
 10146  00306C                     u5496:
 10147  00306C  3456               	rlcf	(??_floorf+4)^0,w,c
 10148  00306E  3256               	rrcf	(??_floorf+4)^0,f,c
 10149  003070  3255               	rrcf	(??_floorf+3)^0,f,c
 10150  003072  3254               	rrcf	(??_floorf+2)^0,f,c
 10151  003074  3253               	rrcf	(??_floorf+1)^0,f,c
 10152  003076  2E52               	decfsz	??_floorf^0,f,c
 10153  003078  EF31  F018         	goto	u5495
 10154  00307C                     u5497:
 10155  00307C  C053  F060         	movff	??_floorf+1,floorf@m
 10156  003080  C054  F061         	movff	??_floorf+2,floorf@m+1
 10157  003084  C055  F062         	movff	??_floorf+3,floorf@m+2
 10158  003088  C056  F063         	movff	??_floorf+4,floorf@m+3
 10159  00308C  0100               	movlb	0	; () banked
 10160  00308E  5160               	movf	floorf@m& (0+255),w,b
 10161  003090  1566               	andwf	floorf@u& (0+255),w,b
 10162  003092  6E52               	movwf	??_floorf^0,c
 10163  003094  5161               	movf	(floorf@m+1)& (0+255),w,b
 10164  003096  1567               	andwf	(floorf@u+1)& (0+255),w,b
 10165  003098  6E53               	movwf	(??_floorf+1)^0,c
 10166  00309A  5162               	movf	(floorf@m+2)& (0+255),w,b
 10167  00309C  1568               	andwf	(floorf@u+2)& (0+255),w,b
 10168  00309E  6E54               	movwf	(??_floorf+2)^0,c
 10169  0030A0  5163               	movf	(floorf@m+3)& (0+255),w,b
 10170  0030A2  1569               	andwf	(floorf@u+3)& (0+255),w,b
 10171  0030A4  6E55               	movwf	(??_floorf+3)^0,c
 10172  0030A6  5052               	movf	??_floorf^0,w,c
 10173  0030A8  1053               	iorwf	(??_floorf+1)^0,w,c
 10174  0030AA  1054               	iorwf	(??_floorf+2)^0,w,c
 10175  0030AC  1055               	iorwf	(??_floorf+3)^0,w,c
 10176  0030AE  A4D8               	btfss	status,2,c
 10177  0030B0  EF5C  F018         	goto	u5501
 10178  0030B4  EF5E  F018         	goto	u5500
 10179  0030B8                     u5501:
 10180  0030B8  EF60  F018         	goto	l5006
 10181  0030BC                     u5500:
 10182  0030BC  EF16  F018         	goto	l4998
 10183  0030C0                     l5006:
 10184                           
 10185                           ; BSR set to: 0
 10186  0030C0  C066  F052         	movff	floorf@u,??_floorf
 10187  0030C4  C067  F053         	movff	floorf@u+1,??_floorf+1
 10188  0030C8  C068  F054         	movff	floorf@u+2,??_floorf+2
 10189  0030CC  C069  F055         	movff	floorf@u+3,??_floorf+3
 10190  0030D0  0E20               	movlw	32
 10191  0030D2  EF70  F018         	goto	u5510
 10192  0030D6                     u5515:
 10193  0030D6  90D8               	bcf	status,0,c
 10194  0030D8  3255               	rrcf	(??_floorf+3)^0,f,c
 10195  0030DA  3254               	rrcf	(??_floorf+2)^0,f,c
 10196  0030DC  3253               	rrcf	(??_floorf+1)^0,f,c
 10197  0030DE  3252               	rrcf	??_floorf^0,f,c
 10198  0030E0                     u5510:
 10199  0030E0  2EE8               	decfsz	wreg,f,c
 10200  0030E2  EF6B  F018         	goto	u5515
 10201  0030E6  5052               	movf	??_floorf^0,w,c
 10202  0030E8  1053               	iorwf	(??_floorf+1)^0,w,c
 10203  0030EA  1054               	iorwf	(??_floorf+2)^0,w,c
 10204  0030EC  1055               	iorwf	(??_floorf+3)^0,w,c
 10205  0030EE  B4D8               	btfsc	status,2,c
 10206  0030F0  EF7C  F018         	goto	u5521
 10207  0030F4  EF7E  F018         	goto	u5520
 10208  0030F8                     u5521:
 10209  0030F8  EF86  F018         	goto	l1641
 10210  0030FC                     u5520:
 10211  0030FC                     
 10212                           ; BSR set to: 0
 10213  0030FC  5160               	movf	floorf@m& (0+255),w,b
 10214  0030FE  2766               	addwf	floorf@u& (0+255),f,b
 10215  003100  5161               	movf	(floorf@m+1)& (0+255),w,b
 10216  003102  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 10217  003104  5162               	movf	(floorf@m+2)& (0+255),w,b
 10218  003106  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 10219  003108  5163               	movf	(floorf@m+3)& (0+255),w,b
 10220  00310A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 10221  00310C                     l1641:
 10222                           
 10223                           ; BSR set to: 0
 10224  00310C  1D60               	comf	floorf@m& (0+255),w,b
 10225  00310E  6E52               	movwf	??_floorf^0,c
 10226  003110  1D61               	comf	(floorf@m+1)& (0+255),w,b
 10227  003112  6E53               	movwf	(??_floorf+1)^0,c
 10228  003114  1D62               	comf	(floorf@m+2)& (0+255),w,b
 10229  003116  6E54               	movwf	(??_floorf+2)^0,c
 10230  003118  1D63               	comf	(floorf@m+3)& (0+255),w,b
 10231  00311A  6E55               	movwf	(??_floorf+3)^0,c
 10232  00311C  5052               	movf	??_floorf^0,w,c
 10233  00311E  1766               	andwf	floorf@u& (0+255),f,b
 10234  003120  5053               	movf	(??_floorf+1)^0,w,c
 10235  003122  1767               	andwf	(floorf@u+1)& (0+255),f,b
 10236  003124  5054               	movf	(??_floorf+2)^0,w,c
 10237  003126  1768               	andwf	(floorf@u+2)& (0+255),f,b
 10238  003128  5055               	movf	(??_floorf+3)^0,w,c
 10239  00312A  1769               	andwf	(floorf@u+3)& (0+255),f,b
 10240  00312C  EFDC  F018         	goto	l5018
 10241  003130                     l5010:
 10242                           
 10243                           ; BSR set to: 0
 10244  003130  C066  F052         	movff	floorf@u,??_floorf
 10245  003134  C067  F053         	movff	floorf@u+1,??_floorf+1
 10246  003138  C068  F054         	movff	floorf@u+2,??_floorf+2
 10247  00313C  C069  F055         	movff	floorf@u+3,??_floorf+3
 10248  003140  0E20               	movlw	32
 10249  003142  EFA8  F018         	goto	u5530
 10250  003146                     u5535:
 10251  003146  90D8               	bcf	status,0,c
 10252  003148  3255               	rrcf	(??_floorf+3)^0,f,c
 10253  00314A  3254               	rrcf	(??_floorf+2)^0,f,c
 10254  00314C  3253               	rrcf	(??_floorf+1)^0,f,c
 10255  00314E  3252               	rrcf	??_floorf^0,f,c
 10256  003150                     u5530:
 10257  003150  2EE8               	decfsz	wreg,f,c
 10258  003152  EFA3  F018         	goto	u5535
 10259  003156  5052               	movf	??_floorf^0,w,c
 10260  003158  1053               	iorwf	(??_floorf+1)^0,w,c
 10261  00315A  1054               	iorwf	(??_floorf+2)^0,w,c
 10262  00315C  1055               	iorwf	(??_floorf+3)^0,w,c
 10263  00315E  A4D8               	btfss	status,2,c
 10264  003160  EFB4  F018         	goto	u5541
 10265  003164  EFB6  F018         	goto	u5540
 10266  003168                     u5541:
 10267  003168  EFC0  F018         	goto	l5014
 10268  00316C                     u5540:
 10269  00316C                     
 10270                           ; BSR set to: 0
 10271  00316C  0E00               	movlw	0
 10272  00316E  6F66               	movwf	floorf@u& (0+255),b
 10273  003170  0E00               	movlw	0
 10274  003172  6F67               	movwf	(floorf@u+1)& (0+255),b
 10275  003174  0E00               	movlw	0
 10276  003176  6F68               	movwf	(floorf@u+2)& (0+255),b
 10277  003178  0E00               	movlw	0
 10278  00317A  6F69               	movwf	(floorf@u+3)& (0+255),b
 10279  00317C  EFDC  F018         	goto	l5018
 10280  003180                     l5014:
 10281                           
 10282                           ; BSR set to: 0
 10283  003180  90D8               	bcf	status,0,c
 10284  003182  3566               	rlcf	floorf@u& (0+255),w,b
 10285  003184  6E52               	movwf	??_floorf^0,c
 10286  003186  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 10287  003188  6E53               	movwf	(??_floorf+1)^0,c
 10288  00318A  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 10289  00318C  6E54               	movwf	(??_floorf+2)^0,c
 10290  00318E  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 10291  003190  6E55               	movwf	(??_floorf+3)^0,c
 10292  003192  5052               	movf	??_floorf^0,w,c
 10293  003194  1053               	iorwf	(??_floorf+1)^0,w,c
 10294  003196  1054               	iorwf	(??_floorf+2)^0,w,c
 10295  003198  1055               	iorwf	(??_floorf+3)^0,w,c
 10296  00319A  B4D8               	btfsc	status,2,c
 10297  00319C  EFD2  F018         	goto	u5551
 10298  0031A0  EFD4  F018         	goto	u5550
 10299  0031A4                     u5551:
 10300  0031A4  EFDC  F018         	goto	l5018
 10301  0031A8                     u5550:
 10302  0031A8                     
 10303                           ; BSR set to: 0
 10304  0031A8  0E00               	movlw	0
 10305  0031AA  6F66               	movwf	floorf@u& (0+255),b
 10306  0031AC  0E00               	movlw	0
 10307  0031AE  6F67               	movwf	(floorf@u+1)& (0+255),b
 10308  0031B0  0E80               	movlw	128
 10309  0031B2  6F68               	movwf	(floorf@u+2)& (0+255),b
 10310  0031B4  0EBF               	movlw	191
 10311  0031B6  6F69               	movwf	(floorf@u+3)& (0+255),b
 10312  0031B8                     l5018:
 10313                           
 10314                           ; BSR set to: 0
 10315  0031B8  C066  F04E         	movff	floorf@u,?_floorf
 10316  0031BC  C067  F04F         	movff	floorf@u+1,?_floorf+1
 10317  0031C0  C068  F050         	movff	floorf@u+2,?_floorf+2
 10318  0031C4  C069  F051         	movff	floorf@u+3,?_floorf+3
 10319  0031C8                     l1638:
 10320                           
 10321                           ; BSR set to: 0
 10322  0031C8  0012               	return		;funcret
 10323  0031CA                     __end_of_floorf:
 10324                           	callstack 0
 10325                           
 10326 ;; *************** function ___fpclassifyf *****************
 10327 ;; Defined at:
 10328 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
 10329 ;; Parameters:    Size  Location     Type
 10330 ;;  x               4    0[COMRAM] float 
 10331 ;; Auto vars:     Size  Location     Type
 10332 ;;  u               4   10[COMRAM] struct .
 10333 ;;  e               2    8[COMRAM] int 
 10334 ;; Return value:  Size  Location     Type
 10335 ;;                  2    0[COMRAM] int 
 10336 ;; Registers used:
 10337 ;;		wreg, status,2, status,0
 10338 ;; Tracked objects:
 10339 ;;		On entry : 0/0
 10340 ;;		On exit  : 0/0
 10341 ;;		Unchanged: 0/0
 10342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10343 ;;      Params:         4       0       0       0       0       0       0
 10344 ;;      Locals:         6       0       0       0       0       0       0
 10345 ;;      Temps:          4       0       0       0       0       0       0
 10346 ;;      Totals:        14       0       0       0       0       0       0
 10347 ;;Total ram usage:       14 bytes
 10348 ;; Hardware stack levels used:    1
 10349 ;; Hardware stack levels required when called:    1
 10350 ;; This function calls:
 10351 ;;		Nothing
 10352 ;; This function is called by:
 10353 ;;		_efgtoa
 10354 ;; This function uses a non-reentrant model
 10355 ;;
 10356                           
 10357                           	psect	text39
 10358  0044B0                     __ptext39:
 10359                           	callstack 0
 10360  0044B0                     ___fpclassifyf:
 10361                           	callstack 22
 10362  0044B0  C1A7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10363  0044B4  C1A8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10364  0044B8  C1A9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10365  0044BC  C1AA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10366  0044C0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 10367  0044C4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10368  0044C8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10369  0044CC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10370  0044D0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10371  0044D4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10372  0044D8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10373  0044DC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10374  0044E0  0E18               	movlw	24
 10375  0044E2  EF78  F022         	goto	u5340
 10376  0044E6                     u5345:
 10377  0044E6  90D8               	bcf	status,0,c
 10378  0044E8  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 10379  0044EA  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 10380  0044EC  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 10381  0044EE  3205               	rrcf	??___fpclassifyf^0,f,c
 10382  0044F0                     u5340:
 10383  0044F0  2EE8               	decfsz	wreg,f,c
 10384  0044F2  EF73  F022         	goto	u5345
 10385  0044F6  5005               	movf	??___fpclassifyf^0,w,c
 10386  0044F8  6E09               	movwf	___fpclassifyf@e^0,c
 10387  0044FA  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 10388  0044FC  5009               	movf	___fpclassifyf@e^0,w,c
 10389  0044FE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10390  004500  A4D8               	btfss	status,2,c
 10391  004502  EF85  F022         	goto	u5351
 10392  004506  EF87  F022         	goto	u5350
 10393  00450A                     u5351:
 10394  00450A  EFA7  F022         	goto	l4970
 10395  00450E                     u5350:
 10396  00450E  90D8               	bcf	status,0,c
 10397  004510  340B               	rlcf	___fpclassifyf@u^0,w,c
 10398  004512  6E05               	movwf	??___fpclassifyf^0,c
 10399  004514  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10400  004516  6E06               	movwf	(??___fpclassifyf+1)^0,c
 10401  004518  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10402  00451A  6E07               	movwf	(??___fpclassifyf+2)^0,c
 10403  00451C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10404  00451E  6E08               	movwf	(??___fpclassifyf+3)^0,c
 10405  004520  5005               	movf	??___fpclassifyf^0,w,c
 10406  004522  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10407  004524  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10408  004526  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10409  004528  A4D8               	btfss	status,2,c
 10410  00452A  EF99  F022         	goto	u5361
 10411  00452E  EF9B  F022         	goto	u5360
 10412  004532                     u5361:
 10413  004532  EFA1  F022         	goto	l4966
 10414  004536                     u5360:
 10415  004536  0E00               	movlw	0
 10416  004538  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10417  00453A  0E02               	movlw	2
 10418  00453C  6E01               	movwf	?___fpclassifyf^0,c
 10419  00453E  EFD6  F022         	goto	l1593
 10420  004542                     l4966:
 10421  004542  0E00               	movlw	0
 10422  004544  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10423  004546  0E03               	movlw	3
 10424  004548  6E01               	movwf	?___fpclassifyf^0,c
 10425  00454A  EFD6  F022         	goto	l1593
 10426  00454E                     l4970:
 10427  00454E  2809               	incf	___fpclassifyf@e^0,w,c
 10428  004550  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10429  004552  A4D8               	btfss	status,2,c
 10430  004554  EFAE  F022         	goto	u5371
 10431  004558  EFB0  F022         	goto	u5370
 10432  00455C                     u5371:
 10433  00455C  EFD2  F022         	goto	l4976
 10434  004560                     u5370:
 10435  004560  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10436  004564  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10437  004568  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10438  00456C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10439  004570  0E09               	movlw	9
 10440  004572                     u5385:
 10441  004572  90D8               	bcf	status,0,c
 10442  004574  3605               	rlcf	??___fpclassifyf^0,f,c
 10443  004576  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 10444  004578  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 10445  00457A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 10446  00457C  2EE8               	decfsz	wreg,f,c
 10447  00457E  EFB9  F022         	goto	u5385
 10448  004582  5005               	movf	??___fpclassifyf^0,w,c
 10449  004584  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10450  004586  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10451  004588  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10452  00458A  B4D8               	btfsc	status,2,c
 10453  00458C  EFCA  F022         	goto	u5391
 10454  004590  EFCD  F022         	goto	u5390
 10455  004594                     u5391:
 10456  004594  0E01               	movlw	1
 10457  004596  EFCE  F022         	goto	u5400
 10458  00459A                     u5390:
 10459  00459A  0E00               	movlw	0
 10460  00459C                     u5400:
 10461  00459C  6E01               	movwf	?___fpclassifyf^0,c
 10462  00459E  6A02               	clrf	(?___fpclassifyf+1)^0,c
 10463  0045A0  EFD6  F022         	goto	l1593
 10464  0045A4                     l4976:
 10465  0045A4  0E00               	movlw	0
 10466  0045A6  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10467  0045A8  0E04               	movlw	4
 10468  0045AA  6E01               	movwf	?___fpclassifyf^0,c
 10469  0045AC                     l1593:
 10470  0045AC  0012               	return		;funcret
 10471  0045AE                     __end_of___fpclassifyf:
 10472                           	callstack 0
 10473                           
 10474 ;; *************** function ___fltol *****************
 10475 ;; Defined at:
 10476 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 10477 ;; Parameters:    Size  Location     Type
 10478 ;;  f1              4   77[COMRAM] int 
 10479 ;; Auto vars:     Size  Location     Type
 10480 ;;  exp1            1   86[COMRAM] unsigned char 
 10481 ;;  sign1           1   85[COMRAM] unsigned char 
 10482 ;; Return value:  Size  Location     Type
 10483 ;;                  4   77[COMRAM] long 
 10484 ;; Registers used:
 10485 ;;		wreg, status,2, status,0
 10486 ;; Tracked objects:
 10487 ;;		On entry : 0/0
 10488 ;;		On exit  : 0/0
 10489 ;;		Unchanged: 0/0
 10490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10491 ;;      Params:         4       0       0       0       0       0       0
 10492 ;;      Locals:         2       0       0       0       0       0       0
 10493 ;;      Temps:          4       0       0       0       0       0       0
 10494 ;;      Totals:        10       0       0       0       0       0       0
 10495 ;;Total ram usage:       10 bytes
 10496 ;; Hardware stack levels used:    1
 10497 ;; Hardware stack levels required when called:    1
 10498 ;; This function calls:
 10499 ;;		Nothing
 10500 ;; This function is called by:
 10501 ;;		_scanAdcConversion
 10502 ;;		_PWM1_setDC
 10503 ;;		_PWM2_setDC
 10504 ;;		_speedControl
 10505 ;;		_efgtoa
 10506 ;; This function uses a non-reentrant model
 10507 ;;
 10508                           
 10509                           	psect	text40
 10510  0041A2                     __ptext40:
 10511                           	callstack 0
 10512  0041A2                     ___fltol:
 10513                           	callstack 24
 10514  0041A2  3450               	rlcf	(___fltol@f1+2)^0,w,c
 10515  0041A4  3451               	rlcf	(___fltol@f1+3)^0,w,c
 10516  0041A6  6E57               	movwf	___fltol@exp1^0,c
 10517  0041A8  5057               	movf	___fltol@exp1^0,w,c
 10518  0041AA  A4D8               	btfss	status,2,c
 10519  0041AC  EFDA  F020         	goto	u5221
 10520  0041B0  EFDC  F020         	goto	u5220
 10521  0041B4                     u5221:
 10522  0041B4  EFE6  F020         	goto	l4894
 10523  0041B8                     u5220:
 10524  0041B8                     l4890:
 10525  0041B8  0E00               	movlw	0
 10526  0041BA  6E4E               	movwf	?___fltol^0,c
 10527  0041BC  0E00               	movlw	0
 10528  0041BE  6E4F               	movwf	(?___fltol+1)^0,c
 10529  0041C0  0E00               	movlw	0
 10530  0041C2  6E50               	movwf	(?___fltol+2)^0,c
 10531  0041C4  0E00               	movlw	0
 10532  0041C6  6E51               	movwf	(?___fltol+3)^0,c
 10533  0041C8  EF53  F021         	goto	l988
 10534  0041CC                     l4894:
 10535  0041CC  C04E  F052         	movff	___fltol@f1,??___fltol
 10536  0041D0  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 10537  0041D4  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 10538  0041D8  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 10539  0041DC  0E20               	movlw	32
 10540  0041DE  EFF6  F020         	goto	u5230
 10541  0041E2                     u5235:
 10542  0041E2  90D8               	bcf	status,0,c
 10543  0041E4  3255               	rrcf	(??___fltol+3)^0,f,c
 10544  0041E6  3254               	rrcf	(??___fltol+2)^0,f,c
 10545  0041E8  3253               	rrcf	(??___fltol+1)^0,f,c
 10546  0041EA  3252               	rrcf	??___fltol^0,f,c
 10547  0041EC                     u5230:
 10548  0041EC  2EE8               	decfsz	wreg,f,c
 10549  0041EE  EFF1  F020         	goto	u5235
 10550  0041F2  5052               	movf	??___fltol^0,w,c
 10551  0041F4  6E56               	movwf	___fltol@sign1^0,c
 10552  0041F6  8E50               	bsf	(___fltol@f1+2)^0,7,c
 10553  0041F8  0EFF               	movlw	255
 10554  0041FA  164E               	andwf	___fltol@f1^0,f,c
 10555  0041FC  0EFF               	movlw	255
 10556  0041FE  164F               	andwf	(___fltol@f1+1)^0,f,c
 10557  004200  0EFF               	movlw	255
 10558  004202  1650               	andwf	(___fltol@f1+2)^0,f,c
 10559  004204  0E00               	movlw	0
 10560  004206  1651               	andwf	(___fltol@f1+3)^0,f,c
 10561  004208  0E96               	movlw	150
 10562  00420A  5E57               	subwf	___fltol@exp1^0,f,c
 10563  00420C  BE57               	btfsc	___fltol@exp1^0,7,c
 10564  00420E  EF0D  F021         	goto	u5240
 10565  004212  EF0B  F021         	goto	u5241
 10566  004216                     u5241:
 10567  004216  EF23  F021         	goto	l4914
 10568  00421A                     u5240:
 10569  00421A  5057               	movf	___fltol@exp1^0,w,c
 10570  00421C  0A80               	xorlw	128
 10571  00421E  0F97               	addlw	151
 10572  004220  B0D8               	btfsc	status,0,c
 10573  004222  EF15  F021         	goto	u5251
 10574  004226  EF17  F021         	goto	u5250
 10575  00422A                     u5251:
 10576  00422A  EF19  F021         	goto	l4910
 10577  00422E                     u5250:
 10578  00422E  EFDC  F020         	goto	l4890
 10579  004232                     l4910:
 10580  004232  90D8               	bcf	status,0,c
 10581  004234  3251               	rrcf	(___fltol@f1+3)^0,f,c
 10582  004236  3250               	rrcf	(___fltol@f1+2)^0,f,c
 10583  004238  324F               	rrcf	(___fltol@f1+1)^0,f,c
 10584  00423A  324E               	rrcf	___fltol@f1^0,f,c
 10585  00423C  3E57               	incfsz	___fltol@exp1^0,f,c
 10586  00423E  EF19  F021         	goto	l4910
 10587  004242  EF3B  F021         	goto	l4924
 10588  004246                     l4914:
 10589  004246  0E1F               	movlw	31
 10590  004248  6457               	cpfsgt	___fltol@exp1^0,c
 10591  00424A  EF29  F021         	goto	u5261
 10592  00424E  EF2B  F021         	goto	u5260
 10593  004252                     u5261:
 10594  004252  EF33  F021         	goto	l4922
 10595  004256                     u5260:
 10596  004256  EFDC  F020         	goto	l4890
 10597  00425A                     l4920:
 10598  00425A  90D8               	bcf	status,0,c
 10599  00425C  364E               	rlcf	___fltol@f1^0,f,c
 10600  00425E  364F               	rlcf	(___fltol@f1+1)^0,f,c
 10601  004260  3650               	rlcf	(___fltol@f1+2)^0,f,c
 10602  004262  3651               	rlcf	(___fltol@f1+3)^0,f,c
 10603  004264  0657               	decf	___fltol@exp1^0,f,c
 10604  004266                     l4922:
 10605  004266  5057               	movf	___fltol@exp1^0,w,c
 10606  004268  A4D8               	btfss	status,2,c
 10607  00426A  EF39  F021         	goto	u5271
 10608  00426E  EF3B  F021         	goto	u5270
 10609  004272                     u5271:
 10610  004272  EF2D  F021         	goto	l4920
 10611  004276                     u5270:
 10612  004276                     l4924:
 10613  004276  5056               	movf	___fltol@sign1^0,w,c
 10614  004278  B4D8               	btfsc	status,2,c
 10615  00427A  EF41  F021         	goto	u5281
 10616  00427E  EF43  F021         	goto	u5280
 10617  004282                     u5281:
 10618  004282  EF4B  F021         	goto	l4928
 10619  004286                     u5280:
 10620  004286  1E51               	comf	(___fltol@f1+3)^0,f,c
 10621  004288  1E50               	comf	(___fltol@f1+2)^0,f,c
 10622  00428A  1E4F               	comf	(___fltol@f1+1)^0,f,c
 10623  00428C  6C4E               	negf	___fltol@f1^0,c
 10624  00428E  0E00               	movlw	0
 10625  004290  224F               	addwfc	(___fltol@f1+1)^0,f,c
 10626  004292  2250               	addwfc	(___fltol@f1+2)^0,f,c
 10627  004294  2251               	addwfc	(___fltol@f1+3)^0,f,c
 10628  004296                     l4928:
 10629  004296  C04E  F04E         	movff	___fltol@f1,?___fltol
 10630  00429A  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 10631  00429E  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 10632  0042A2  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 10633  0042A6                     l988:
 10634  0042A6  0012               	return		;funcret
 10635  0042A8                     __end_of___fltol:
 10636                           	callstack 0
 10637                           
 10638 ;; *************** function ___flsub *****************
 10639 ;; Defined at:
 10640 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;  b               4   68[COMRAM] long 
 10643 ;;  a               4   72[COMRAM] long 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;		None
 10646 ;; Return value:  Size  Location     Type
 10647 ;;                  4   68[COMRAM] long 
 10648 ;; Registers used:
 10649 ;;		wreg, status,2, status,0, cstack
 10650 ;; Tracked objects:
 10651 ;;		On entry : 0/0
 10652 ;;		On exit  : 0/0
 10653 ;;		Unchanged: 0/0
 10654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10655 ;;      Params:         8       0       0       0       0       0       0
 10656 ;;      Locals:         0       0       0       0       0       0       0
 10657 ;;      Temps:          0       0       0       0       0       0       0
 10658 ;;      Totals:         8       0       0       0       0       0       0
 10659 ;;Total ram usage:        8 bytes
 10660 ;; Hardware stack levels used:    1
 10661 ;; Hardware stack levels required when called:    2
 10662 ;; This function calls:
 10663 ;;		___fladd
 10664 ;; This function is called by:
 10665 ;;		_secretMenu
 10666 ;;		_efgtoa
 10667 ;; This function uses a non-reentrant model
 10668 ;;
 10669                           
 10670                           	psect	text41
 10671  00533C                     __ptext41:
 10672                           	callstack 0
 10673  00533C                     ___flsub:
 10674                           	callstack 21
 10675  00533C  0E00               	movlw	0
 10676  00533E  1A49               	xorwf	___flsub@a^0,f,c
 10677  005340  0E00               	movlw	0
 10678  005342  1A4A               	xorwf	(___flsub@a+1)^0,f,c
 10679  005344  0E00               	movlw	0
 10680  005346  1A4B               	xorwf	(___flsub@a+2)^0,f,c
 10681  005348  0E80               	movlw	128
 10682  00534A  1A4C               	xorwf	(___flsub@a+3)^0,f,c
 10683  00534C  C045  F035         	movff	___flsub@b,___fladd@b
 10684  005350  C046  F036         	movff	___flsub@b+1,___fladd@b+1
 10685  005354  C047  F037         	movff	___flsub@b+2,___fladd@b+2
 10686  005358  C048  F038         	movff	___flsub@b+3,___fladd@b+3
 10687  00535C  C049  F039         	movff	___flsub@a,___fladd@a
 10688  005360  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
 10689  005364  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
 10690  005368  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
 10691  00536C  EC49  F00D         	call	___fladd	;wreg free
 10692  005370  C035  F045         	movff	?___fladd,?___flsub
 10693  005374  C036  F046         	movff	?___fladd+1,?___flsub+1
 10694  005378  C037  F047         	movff	?___fladd+2,?___flsub+2
 10695  00537C  C038  F048         	movff	?___fladd+3,?___flsub+3
 10696  005380  0012               	return		;funcret
 10697  005382                     __end_of___flsub:
 10698                           	callstack 0
 10699                           
 10700 ;; *************** function ___fladd *****************
 10701 ;; Defined at:
 10702 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10703 ;; Parameters:    Size  Location     Type
 10704 ;;  b               4   52[COMRAM] long 
 10705 ;;  a               4   56[COMRAM] long 
 10706 ;; Auto vars:     Size  Location     Type
 10707 ;;  grs             1   67[COMRAM] unsigned char 
 10708 ;;  bexp            1   66[COMRAM] unsigned char 
 10709 ;;  aexp            1   65[COMRAM] unsigned char 
 10710 ;;  signs           1   64[COMRAM] unsigned char 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  4   52[COMRAM] unsigned char 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, status,0
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10720 ;;      Params:         8       0       0       0       0       0       0
 10721 ;;      Locals:         4       0       0       0       0       0       0
 10722 ;;      Temps:          4       0       0       0       0       0       0
 10723 ;;      Totals:        16       0       0       0       0       0       0
 10724 ;;Total ram usage:       16 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    1
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_secretMenu
 10731 ;;		_speedControl
 10732 ;;		___flsub
 10733 ;;		_efgtoa
 10734 ;; This function uses a non-reentrant model
 10735 ;;
 10736                           
 10737                           	psect	text42
 10738  001A92                     __ptext42:
 10739                           	callstack 0
 10740  001A92                     ___fladd:
 10741                           	callstack 21
 10742  001A92  5038               	movf	(___fladd@b+3)^0,w,c
 10743  001A94  0B80               	andlw	128
 10744  001A96  6E41               	movwf	___fladd@signs^0,c
 10745  001A98  5038               	movf	(___fladd@b+3)^0,w,c
 10746  001A9A  2438               	addwf	(___fladd@b+3)^0,w,c
 10747  001A9C  6E43               	movwf	___fladd@bexp^0,c
 10748  001A9E  AE37               	btfss	(___fladd@b+2)^0,7,c
 10749  001AA0  EF54  F00D         	goto	u4031
 10750  001AA4  EF56  F00D         	goto	u4030
 10751  001AA8                     u4031:
 10752  001AA8  EF57  F00D         	goto	l4184
 10753  001AAC                     u4030:
 10754  001AAC  8043               	bsf	___fladd@bexp^0,0,c
 10755  001AAE                     l4184:
 10756  001AAE  5043               	movf	___fladd@bexp^0,w,c
 10757  001AB0  B4D8               	btfsc	status,2,c
 10758  001AB2  EF5D  F00D         	goto	u4041
 10759  001AB6  EF5F  F00D         	goto	u4040
 10760  001ABA                     u4041:
 10761  001ABA  EF74  F00D         	goto	l4194
 10762  001ABE                     u4040:
 10763  001ABE  2843               	incf	___fladd@bexp^0,w,c
 10764  001AC0  A4D8               	btfss	status,2,c
 10765  001AC2  EF65  F00D         	goto	u4051
 10766  001AC6  EF67  F00D         	goto	u4050
 10767  001ACA                     u4051:
 10768  001ACA  EF6F  F00D         	goto	l4190
 10769  001ACE                     u4050:
 10770  001ACE  0E00               	movlw	0
 10771  001AD0  6E35               	movwf	___fladd@b^0,c
 10772  001AD2  0E00               	movlw	0
 10773  001AD4  6E36               	movwf	(___fladd@b+1)^0,c
 10774  001AD6  0E00               	movlw	0
 10775  001AD8  6E37               	movwf	(___fladd@b+2)^0,c
 10776  001ADA  0E00               	movlw	0
 10777  001ADC  6E38               	movwf	(___fladd@b+3)^0,c
 10778  001ADE                     l4190:
 10779  001ADE  8E37               	bsf	(___fladd@b+2)^0,7,c
 10780  001AE0  0E00               	movlw	0
 10781  001AE2  6E38               	movwf	(___fladd@b+3)^0,c
 10782  001AE4  EF7C  F00D         	goto	l4196
 10783  001AE8                     l4194:
 10784  001AE8  0E00               	movlw	0
 10785  001AEA  6E35               	movwf	___fladd@b^0,c
 10786  001AEC  0E00               	movlw	0
 10787  001AEE  6E36               	movwf	(___fladd@b+1)^0,c
 10788  001AF0  0E00               	movlw	0
 10789  001AF2  6E37               	movwf	(___fladd@b+2)^0,c
 10790  001AF4  0E00               	movlw	0
 10791  001AF6  6E38               	movwf	(___fladd@b+3)^0,c
 10792  001AF8                     l4196:
 10793  001AF8  503C               	movf	(___fladd@a+3)^0,w,c
 10794  001AFA  0B80               	andlw	128
 10795  001AFC  6E42               	movwf	___fladd@aexp^0,c
 10796  001AFE  5041               	movf	___fladd@signs^0,w,c
 10797  001B00  1842               	xorwf	___fladd@aexp^0,w,c
 10798  001B02  B4D8               	btfsc	status,2,c
 10799  001B04  EF86  F00D         	goto	u4061
 10800  001B08  EF88  F00D         	goto	u4060
 10801  001B0C                     u4061:
 10802  001B0C  EF89  F00D         	goto	l4202
 10803  001B10                     u4060:
 10804  001B10  8C41               	bsf	___fladd@signs^0,6,c
 10805  001B12                     l4202:
 10806  001B12  503C               	movf	(___fladd@a+3)^0,w,c
 10807  001B14  243C               	addwf	(___fladd@a+3)^0,w,c
 10808  001B16  6E42               	movwf	___fladd@aexp^0,c
 10809  001B18  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10810  001B1A  EF91  F00D         	goto	u4071
 10811  001B1E  EF93  F00D         	goto	u4070
 10812  001B22                     u4071:
 10813  001B22  EF94  F00D         	goto	l4208
 10814  001B26                     u4070:
 10815  001B26  8042               	bsf	___fladd@aexp^0,0,c
 10816  001B28                     l4208:
 10817  001B28  5042               	movf	___fladd@aexp^0,w,c
 10818  001B2A  B4D8               	btfsc	status,2,c
 10819  001B2C  EF9A  F00D         	goto	u4081
 10820  001B30  EF9C  F00D         	goto	u4080
 10821  001B34                     u4081:
 10822  001B34  EFB1  F00D         	goto	l4218
 10823  001B38                     u4080:
 10824  001B38  2842               	incf	___fladd@aexp^0,w,c
 10825  001B3A  A4D8               	btfss	status,2,c
 10826  001B3C  EFA2  F00D         	goto	u4091
 10827  001B40  EFA4  F00D         	goto	u4090
 10828  001B44                     u4091:
 10829  001B44  EFAC  F00D         	goto	l4214
 10830  001B48                     u4090:
 10831  001B48  0E00               	movlw	0
 10832  001B4A  6E39               	movwf	___fladd@a^0,c
 10833  001B4C  0E00               	movlw	0
 10834  001B4E  6E3A               	movwf	(___fladd@a+1)^0,c
 10835  001B50  0E00               	movlw	0
 10836  001B52  6E3B               	movwf	(___fladd@a+2)^0,c
 10837  001B54  0E00               	movlw	0
 10838  001B56  6E3C               	movwf	(___fladd@a+3)^0,c
 10839  001B58                     l4214:
 10840  001B58  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10841  001B5A  0E00               	movlw	0
 10842  001B5C  6E3C               	movwf	(___fladd@a+3)^0,c
 10843  001B5E  EFB9  F00D         	goto	l4220
 10844  001B62                     l4218:
 10845  001B62  0E00               	movlw	0
 10846  001B64  6E39               	movwf	___fladd@a^0,c
 10847  001B66  0E00               	movlw	0
 10848  001B68  6E3A               	movwf	(___fladd@a+1)^0,c
 10849  001B6A  0E00               	movlw	0
 10850  001B6C  6E3B               	movwf	(___fladd@a+2)^0,c
 10851  001B6E  0E00               	movlw	0
 10852  001B70  6E3C               	movwf	(___fladd@a+3)^0,c
 10853  001B72                     l4220:
 10854  001B72  5043               	movf	___fladd@bexp^0,w,c
 10855  001B74  5C42               	subwf	___fladd@aexp^0,w,c
 10856  001B76  B0D8               	btfsc	status,0,c
 10857  001B78  EFC0  F00D         	goto	u4101
 10858  001B7C  EFC2  F00D         	goto	u4100
 10859  001B80                     u4101:
 10860  001B80  EFE9  F00D         	goto	l4256
 10861  001B84                     u4100:
 10862  001B84  AC41               	btfss	___fladd@signs^0,6,c
 10863  001B86  EFC7  F00D         	goto	u4111
 10864  001B8A  EFC9  F00D         	goto	u4110
 10865  001B8E                     u4111:
 10866  001B8E  EFCB  F00D         	goto	l4226
 10867  001B92                     u4110:
 10868  001B92  0E80               	movlw	128
 10869  001B94  1A41               	xorwf	___fladd@signs^0,f,c
 10870  001B96                     l4226:
 10871  001B96  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10872  001B9A  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10873  001B9E  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10874  001BA2  C035  F044         	movff	___fladd@b,___fladd@grs
 10875  001BA6  C039  F035         	movff	___fladd@a,___fladd@b
 10876  001BAA  C044  F039         	movff	___fladd@grs,___fladd@a
 10877  001BAE  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10878  001BB2  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10879  001BB6  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10880  001BBA  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10881  001BBE  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10882  001BC2  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10883  001BC6  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10884  001BCA  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10885  001BCE  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10886  001BD2                     l4256:
 10887  001BD2  0E00               	movlw	0
 10888  001BD4  6E44               	movwf	___fladd@grs^0,c
 10889  001BD6  5043               	movf	___fladd@bexp^0,w,c
 10890  001BD8  C042  F03D         	movff	___fladd@aexp,??___fladd
 10891  001BDC  6A3E               	clrf	(??___fladd+1)^0,c
 10892  001BDE  5E3D               	subwf	??___fladd^0,f,c
 10893  001BE0  0E00               	movlw	0
 10894  001BE2  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10895  001BE4  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10896  001BE6  EFFE  F00D         	goto	u4121
 10897  001BEA  503E               	movf	(??___fladd+1)^0,w,c
 10898  001BEC  E109               	bnz	u4120
 10899  001BEE  0E1A               	movlw	26
 10900  001BF0  5C3D               	subwf	??___fladd^0,w,c
 10901  001BF2  A0D8               	btfss	status,0,c
 10902  001BF4  EFFE  F00D         	goto	u4121
 10903  001BF8  EF00  F00E         	goto	u4120
 10904  001BFC                     u4121:
 10905  001BFC  EF37  F00E         	goto	l1220
 10906  001C00                     u4120:
 10907  001C00  5035               	movf	___fladd@b^0,w,c
 10908  001C02  1036               	iorwf	(___fladd@b+1)^0,w,c
 10909  001C04  1037               	iorwf	(___fladd@b+2)^0,w,c
 10910  001C06  1038               	iorwf	(___fladd@b+3)^0,w,c
 10911  001C08  A4D8               	btfss	status,2,c
 10912  001C0A  EF09  F00E         	goto	u4131
 10913  001C0E  EF0C  F00E         	goto	u4130
 10914  001C12                     u4131:
 10915  001C12  0E01               	movlw	1
 10916  001C14  EF0D  F00E         	goto	u4140
 10917  001C18                     u4130:
 10918  001C18  0E00               	movlw	0
 10919  001C1A                     u4140:
 10920  001C1A  6E44               	movwf	___fladd@grs^0,c
 10921  001C1C  0E00               	movlw	0
 10922  001C1E  6E35               	movwf	___fladd@b^0,c
 10923  001C20  0E00               	movlw	0
 10924  001C22  6E36               	movwf	(___fladd@b+1)^0,c
 10925  001C24  0E00               	movlw	0
 10926  001C26  6E37               	movwf	(___fladd@b+2)^0,c
 10927  001C28  0E00               	movlw	0
 10928  001C2A  6E38               	movwf	(___fladd@b+3)^0,c
 10929  001C2C  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10930  001C30  EF40  F00E         	goto	l1219
 10931  001C34                     l1221:
 10932  001C34  A044               	btfss	___fladd@grs^0,0,c
 10933  001C36  EF1F  F00E         	goto	u4151
 10934  001C3A  EF21  F00E         	goto	u4150
 10935  001C3E                     u4151:
 10936  001C3E  EF27  F00E         	goto	l4268
 10937  001C42                     u4150:
 10938  001C42  90D8               	bcf	status,0,c
 10939  001C44  3044               	rrcf	___fladd@grs^0,w,c
 10940  001C46  0901               	iorlw	1
 10941  001C48  6E44               	movwf	___fladd@grs^0,c
 10942  001C4A  EF29  F00E         	goto	l4270
 10943  001C4E                     l4268:
 10944  001C4E  90D8               	bcf	status,0,c
 10945  001C50  3244               	rrcf	___fladd@grs^0,f,c
 10946  001C52                     l4270:
 10947  001C52  A035               	btfss	___fladd@b^0,0,c
 10948  001C54  EF2E  F00E         	goto	u4161
 10949  001C58  EF30  F00E         	goto	u4160
 10950  001C5C                     u4161:
 10951  001C5C  EF31  F00E         	goto	l4274
 10952  001C60                     u4160:
 10953  001C60  8E44               	bsf	___fladd@grs^0,7,c
 10954  001C62                     l4274:
 10955  001C62  3438               	rlcf	(___fladd@b+3)^0,w,c
 10956  001C64  3238               	rrcf	(___fladd@b+3)^0,f,c
 10957  001C66  3237               	rrcf	(___fladd@b+2)^0,f,c
 10958  001C68  3236               	rrcf	(___fladd@b+1)^0,f,c
 10959  001C6A  3235               	rrcf	___fladd@b^0,f,c
 10960  001C6C  2A43               	incf	___fladd@bexp^0,f,c
 10961  001C6E                     l1220:
 10962  001C6E  5042               	movf	___fladd@aexp^0,w,c
 10963  001C70  5C43               	subwf	___fladd@bexp^0,w,c
 10964  001C72  A0D8               	btfss	status,0,c
 10965  001C74  EF3E  F00E         	goto	u4171
 10966  001C78  EF40  F00E         	goto	u4170
 10967  001C7C                     u4171:
 10968  001C7C  EF1A  F00E         	goto	l1221
 10969  001C80                     u4170:
 10970  001C80                     l1219:
 10971  001C80  BC41               	btfsc	___fladd@signs^0,6,c
 10972  001C82  EF45  F00E         	goto	u4181
 10973  001C86  EF47  F00E         	goto	u4180
 10974  001C8A                     u4181:
 10975  001C8A  EF87  F00E         	goto	l4302
 10976  001C8E                     u4180:
 10977  001C8E  5043               	movf	___fladd@bexp^0,w,c
 10978  001C90  A4D8               	btfss	status,2,c
 10979  001C92  EF4D  F00E         	goto	u4191
 10980  001C96  EF4F  F00E         	goto	u4190
 10981  001C9A                     u4191:
 10982  001C9A  EF59  F00E         	goto	l4284
 10983  001C9E                     u4190:
 10984  001C9E  0E00               	movlw	0
 10985  001CA0  6E35               	movwf	?___fladd^0,c
 10986  001CA2  0E00               	movlw	0
 10987  001CA4  6E36               	movwf	(?___fladd+1)^0,c
 10988  001CA6  0E00               	movlw	0
 10989  001CA8  6E37               	movwf	(?___fladd+2)^0,c
 10990  001CAA  0E00               	movlw	0
 10991  001CAC  6E38               	movwf	(?___fladd+3)^0,c
 10992  001CAE  EFA8  F00F         	goto	l1228
 10993  001CB2                     l4284:
 10994  001CB2  5039               	movf	___fladd@a^0,w,c
 10995  001CB4  2635               	addwf	___fladd@b^0,f,c
 10996  001CB6  503A               	movf	(___fladd@a+1)^0,w,c
 10997  001CB8  2236               	addwfc	(___fladd@b+1)^0,f,c
 10998  001CBA  503B               	movf	(___fladd@a+2)^0,w,c
 10999  001CBC  2237               	addwfc	(___fladd@b+2)^0,f,c
 11000  001CBE  503C               	movf	(___fladd@a+3)^0,w,c
 11001  001CC0  2238               	addwfc	(___fladd@b+3)^0,f,c
 11002  001CC2  A038               	btfss	(___fladd@b+3)^0,0,c
 11003  001CC4  EF66  F00E         	goto	u4201
 11004  001CC8  EF68  F00E         	goto	u4200
 11005  001CCC                     u4201:
 11006  001CCC  EF14  F00F         	goto	l4338
 11007  001CD0                     u4200:
 11008  001CD0  A044               	btfss	___fladd@grs^0,0,c
 11009  001CD2  EF6D  F00E         	goto	u4211
 11010  001CD6  EF6F  F00E         	goto	u4210
 11011  001CDA                     u4211:
 11012  001CDA  EF75  F00E         	goto	l4292
 11013  001CDE                     u4210:
 11014  001CDE  90D8               	bcf	status,0,c
 11015  001CE0  3044               	rrcf	___fladd@grs^0,w,c
 11016  001CE2  0901               	iorlw	1
 11017  001CE4  6E44               	movwf	___fladd@grs^0,c
 11018  001CE6  EF77  F00E         	goto	l4294
 11019  001CEA                     l4292:
 11020  001CEA  90D8               	bcf	status,0,c
 11021  001CEC  3244               	rrcf	___fladd@grs^0,f,c
 11022  001CEE                     l4294:
 11023  001CEE  A035               	btfss	___fladd@b^0,0,c
 11024  001CF0  EF7C  F00E         	goto	u4221
 11025  001CF4  EF7E  F00E         	goto	u4220
 11026  001CF8                     u4221:
 11027  001CF8  EF7F  F00E         	goto	l4298
 11028  001CFC                     u4220:
 11029  001CFC  8E44               	bsf	___fladd@grs^0,7,c
 11030  001CFE                     l4298:
 11031  001CFE  3438               	rlcf	(___fladd@b+3)^0,w,c
 11032  001D00  3238               	rrcf	(___fladd@b+3)^0,f,c
 11033  001D02  3237               	rrcf	(___fladd@b+2)^0,f,c
 11034  001D04  3236               	rrcf	(___fladd@b+1)^0,f,c
 11035  001D06  3235               	rrcf	___fladd@b^0,f,c
 11036  001D08  2A43               	incf	___fladd@bexp^0,f,c
 11037  001D0A  EF14  F00F         	goto	l4338
 11038  001D0E                     l4302:
 11039  001D0E  5039               	movf	___fladd@a^0,w,c
 11040  001D10  5C35               	subwf	___fladd@b^0,w,c
 11041  001D12  503A               	movf	(___fladd@a+1)^0,w,c
 11042  001D14  5836               	subwfb	(___fladd@b+1)^0,w,c
 11043  001D16  503B               	movf	(___fladd@a+2)^0,w,c
 11044  001D18  5837               	subwfb	(___fladd@b+2)^0,w,c
 11045  001D1A  5038               	movf	(___fladd@b+3)^0,w,c
 11046  001D1C  0A80               	xorlw	128
 11047  001D1E  6E3D               	movwf	??___fladd^0,c
 11048  001D20  503C               	movf	(___fladd@a+3)^0,w,c
 11049  001D22  0A80               	xorlw	128
 11050  001D24  583D               	subwfb	??___fladd^0,w,c
 11051  001D26  B0D8               	btfsc	status,0,c
 11052  001D28  EF98  F00E         	goto	u4231
 11053  001D2C  EF9A  F00E         	goto	u4230
 11054  001D30                     u4231:
 11055  001D30  EFC5  F00E         	goto	l4312
 11056  001D34                     u4230:
 11057  001D34  5035               	movf	___fladd@b^0,w,c
 11058  001D36  5C39               	subwf	___fladd@a^0,w,c
 11059  001D38  6E3D               	movwf	??___fladd^0,c
 11060  001D3A  5036               	movf	(___fladd@b+1)^0,w,c
 11061  001D3C  583A               	subwfb	(___fladd@a+1)^0,w,c
 11062  001D3E  6E3E               	movwf	(??___fladd+1)^0,c
 11063  001D40  5037               	movf	(___fladd@b+2)^0,w,c
 11064  001D42  583B               	subwfb	(___fladd@a+2)^0,w,c
 11065  001D44  6E3F               	movwf	(??___fladd+2)^0,c
 11066  001D46  5038               	movf	(___fladd@b+3)^0,w,c
 11067  001D48  583C               	subwfb	(___fladd@a+3)^0,w,c
 11068  001D4A  6E40               	movwf	(??___fladd+3)^0,c
 11069  001D4C  0EFF               	movlw	255
 11070  001D4E  243D               	addwf	??___fladd^0,w,c
 11071  001D50  6E35               	movwf	___fladd@b^0,c
 11072  001D52  0EFF               	movlw	255
 11073  001D54  203E               	addwfc	(??___fladd+1)^0,w,c
 11074  001D56  6E36               	movwf	(___fladd@b+1)^0,c
 11075  001D58  0EFF               	movlw	255
 11076  001D5A  203F               	addwfc	(??___fladd+2)^0,w,c
 11077  001D5C  6E37               	movwf	(___fladd@b+2)^0,c
 11078  001D5E  0EFF               	movlw	255
 11079  001D60  2040               	addwfc	(??___fladd+3)^0,w,c
 11080  001D62  6E38               	movwf	(___fladd@b+3)^0,c
 11081  001D64  0E80               	movlw	128
 11082  001D66  1A41               	xorwf	___fladd@signs^0,f,c
 11083  001D68  6C44               	negf	___fladd@grs^0,c
 11084  001D6A  5044               	movf	___fladd@grs^0,w,c
 11085  001D6C  A4D8               	btfss	status,2,c
 11086  001D6E  EFBB  F00E         	goto	u4241
 11087  001D72  EFBD  F00E         	goto	u4240
 11088  001D76                     u4241:
 11089  001D76  EFCD  F00E         	goto	l1236
 11090  001D7A                     u4240:
 11091  001D7A  0E01               	movlw	1
 11092  001D7C  2635               	addwf	___fladd@b^0,f,c
 11093  001D7E  0E00               	movlw	0
 11094  001D80  2236               	addwfc	(___fladd@b+1)^0,f,c
 11095  001D82  2237               	addwfc	(___fladd@b+2)^0,f,c
 11096  001D84  2238               	addwfc	(___fladd@b+3)^0,f,c
 11097  001D86  EFCD  F00E         	goto	l1236
 11098  001D8A                     l4312:
 11099  001D8A  5039               	movf	___fladd@a^0,w,c
 11100  001D8C  5E35               	subwf	___fladd@b^0,f,c
 11101  001D8E  503A               	movf	(___fladd@a+1)^0,w,c
 11102  001D90  5A36               	subwfb	(___fladd@b+1)^0,f,c
 11103  001D92  503B               	movf	(___fladd@a+2)^0,w,c
 11104  001D94  5A37               	subwfb	(___fladd@b+2)^0,f,c
 11105  001D96  503C               	movf	(___fladd@a+3)^0,w,c
 11106  001D98  5A38               	subwfb	(___fladd@b+3)^0,f,c
 11107  001D9A                     l1236:
 11108  001D9A  5035               	movf	___fladd@b^0,w,c
 11109  001D9C  1036               	iorwf	(___fladd@b+1)^0,w,c
 11110  001D9E  1037               	iorwf	(___fladd@b+2)^0,w,c
 11111  001DA0  1038               	iorwf	(___fladd@b+3)^0,w,c
 11112  001DA2  A4D8               	btfss	status,2,c
 11113  001DA4  EFD6  F00E         	goto	u4251
 11114  001DA8  EFD8  F00E         	goto	u4250
 11115  001DAC                     u4251:
 11116  001DAC  EF0D  F00F         	goto	l4336
 11117  001DB0                     u4250:
 11118  001DB0  5044               	movf	___fladd@grs^0,w,c
 11119  001DB2  A4D8               	btfss	status,2,c
 11120  001DB4  EFDE  F00E         	goto	u4261
 11121  001DB8  EFE0  F00E         	goto	u4260
 11122  001DBC                     u4261:
 11123  001DBC  EF0D  F00F         	goto	l4336
 11124  001DC0                     u4260:
 11125  001DC0  0E00               	movlw	0
 11126  001DC2  6E35               	movwf	?___fladd^0,c
 11127  001DC4  0E00               	movlw	0
 11128  001DC6  6E36               	movwf	(?___fladd+1)^0,c
 11129  001DC8  0E00               	movlw	0
 11130  001DCA  6E37               	movwf	(?___fladd+2)^0,c
 11131  001DCC  0E00               	movlw	0
 11132  001DCE  6E38               	movwf	(?___fladd+3)^0,c
 11133  001DD0  EFA8  F00F         	goto	l1228
 11134  001DD4                     l4320:
 11135  001DD4  90D8               	bcf	status,0,c
 11136  001DD6  3635               	rlcf	___fladd@b^0,f,c
 11137  001DD8  3636               	rlcf	(___fladd@b+1)^0,f,c
 11138  001DDA  3637               	rlcf	(___fladd@b+2)^0,f,c
 11139  001DDC  3638               	rlcf	(___fladd@b+3)^0,f,c
 11140  001DDE  AE44               	btfss	___fladd@grs^0,7,c
 11141  001DE0  EFF4  F00E         	goto	u4271
 11142  001DE4  EFF6  F00E         	goto	u4270
 11143  001DE8                     u4271:
 11144  001DE8  EFF7  F00E         	goto	l4326
 11145  001DEC                     u4270:
 11146  001DEC  8035               	bsf	___fladd@b^0,0,c
 11147  001DEE                     l4326:
 11148  001DEE  A044               	btfss	___fladd@grs^0,0,c
 11149  001DF0  EFFC  F00E         	goto	u4281
 11150  001DF4  EFFE  F00E         	goto	u4280
 11151  001DF8                     u4281:
 11152  001DF8  EF02  F00F         	goto	l4330
 11153  001DFC                     u4280:
 11154  001DFC  80D8               	bsf	status,0,c
 11155  001DFE  3644               	rlcf	___fladd@grs^0,f,c
 11156  001E00  EF04  F00F         	goto	l4332
 11157  001E04                     l4330:
 11158  001E04  90D8               	bcf	status,0,c
 11159  001E06  3644               	rlcf	___fladd@grs^0,f,c
 11160  001E08                     l4332:
 11161  001E08  5043               	movf	___fladd@bexp^0,w,c
 11162  001E0A  B4D8               	btfsc	status,2,c
 11163  001E0C  EF0A  F00F         	goto	u4291
 11164  001E10  EF0C  F00F         	goto	u4290
 11165  001E14                     u4291:
 11166  001E14  EF0D  F00F         	goto	l4336
 11167  001E18                     u4290:
 11168  001E18  0643               	decf	___fladd@bexp^0,f,c
 11169  001E1A                     l4336:
 11170  001E1A  AE37               	btfss	(___fladd@b+2)^0,7,c
 11171  001E1C  EF12  F00F         	goto	u4301
 11172  001E20  EF14  F00F         	goto	u4300
 11173  001E24                     u4301:
 11174  001E24  EFEA  F00E         	goto	l4320
 11175  001E28                     u4300:
 11176  001E28                     l4338:
 11177  001E28  0E00               	movlw	0
 11178  001E2A  6E42               	movwf	___fladd@aexp^0,c
 11179  001E2C  AE44               	btfss	___fladd@grs^0,7,c
 11180  001E2E  EF1B  F00F         	goto	u4311
 11181  001E32  EF1D  F00F         	goto	u4310
 11182  001E36                     u4311:
 11183  001E36  EF35  F00F         	goto	l1245
 11184  001E3A                     u4310:
 11185  001E3A  C044  F03D         	movff	___fladd@grs,??___fladd
 11186  001E3E  0E7F               	movlw	127
 11187  001E40  163D               	andwf	??___fladd^0,f,c
 11188  001E42  B4D8               	btfsc	status,2,c
 11189  001E44  EF26  F00F         	goto	u4321
 11190  001E48  EF28  F00F         	goto	u4320
 11191  001E4C                     u4321:
 11192  001E4C  EF2C  F00F         	goto	l1246
 11193  001E50                     u4320:
 11194  001E50                     l4344:
 11195  001E50  0E01               	movlw	1
 11196  001E52  6E42               	movwf	___fladd@aexp^0,c
 11197  001E54  EF35  F00F         	goto	l1245
 11198  001E58                     l1246:
 11199  001E58  A035               	btfss	___fladd@b^0,0,c
 11200  001E5A  EF31  F00F         	goto	u4331
 11201  001E5E  EF33  F00F         	goto	u4330
 11202  001E62                     u4331:
 11203  001E62  EF35  F00F         	goto	l1245
 11204  001E66                     u4330:
 11205  001E66  EF28  F00F         	goto	l4344
 11206  001E6A                     l1245:
 11207  001E6A  5042               	movf	___fladd@aexp^0,w,c
 11208  001E6C  B4D8               	btfsc	status,2,c
 11209  001E6E  EF3B  F00F         	goto	u4341
 11210  001E72  EF3D  F00F         	goto	u4340
 11211  001E76                     u4341:
 11212  001E76  EF68  F00F         	goto	l4356
 11213  001E7A                     u4340:
 11214  001E7A  0E01               	movlw	1
 11215  001E7C  2635               	addwf	___fladd@b^0,f,c
 11216  001E7E  0E00               	movlw	0
 11217  001E80  2236               	addwfc	(___fladd@b+1)^0,f,c
 11218  001E82  2237               	addwfc	(___fladd@b+2)^0,f,c
 11219  001E84  2238               	addwfc	(___fladd@b+3)^0,f,c
 11220  001E86  A038               	btfss	(___fladd@b+3)^0,0,c
 11221  001E88  EF48  F00F         	goto	u4351
 11222  001E8C  EF4A  F00F         	goto	u4350
 11223  001E90                     u4351:
 11224  001E90  EF68  F00F         	goto	l4356
 11225  001E94                     u4350:
 11226  001E94  C035  F03D         	movff	___fladd@b,??___fladd
 11227  001E98  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 11228  001E9C  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 11229  001EA0  C038  F040         	movff	___fladd@b+3,??___fladd+3
 11230  001EA4  3440               	rlcf	(??___fladd+3)^0,w,c
 11231  001EA6  3240               	rrcf	(??___fladd+3)^0,f,c
 11232  001EA8  323F               	rrcf	(??___fladd+2)^0,f,c
 11233  001EAA  323E               	rrcf	(??___fladd+1)^0,f,c
 11234  001EAC  323D               	rrcf	??___fladd^0,f,c
 11235  001EAE  C03D  F035         	movff	??___fladd,___fladd@b
 11236  001EB2  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 11237  001EB6  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 11238  001EBA  C040  F038         	movff	??___fladd+3,___fladd@b+3
 11239  001EBE  2843               	incf	___fladd@bexp^0,w,c
 11240  001EC0  B4D8               	btfsc	status,2,c
 11241  001EC2  EF65  F00F         	goto	u4361
 11242  001EC6  EF67  F00F         	goto	u4360
 11243  001ECA                     u4361:
 11244  001ECA  EF68  F00F         	goto	l4356
 11245  001ECE                     u4360:
 11246  001ECE  2A43               	incf	___fladd@bexp^0,f,c
 11247  001ED0                     l4356:
 11248  001ED0  2843               	incf	___fladd@bexp^0,w,c
 11249  001ED2  B4D8               	btfsc	status,2,c
 11250  001ED4  EF6E  F00F         	goto	u4371
 11251  001ED8  EF70  F00F         	goto	u4370
 11252  001EDC                     u4371:
 11253  001EDC  EF78  F00F         	goto	l4360
 11254  001EE0                     u4370:
 11255  001EE0  5043               	movf	___fladd@bexp^0,w,c
 11256  001EE2  A4D8               	btfss	status,2,c
 11257  001EE4  EF76  F00F         	goto	u4381
 11258  001EE8  EF78  F00F         	goto	u4380
 11259  001EEC                     u4381:
 11260  001EEC  EF8A  F00F         	goto	l4364
 11261  001EF0                     u4380:
 11262  001EF0                     l4360:
 11263  001EF0  0E00               	movlw	0
 11264  001EF2  6E35               	movwf	___fladd@b^0,c
 11265  001EF4  0E00               	movlw	0
 11266  001EF6  6E36               	movwf	(___fladd@b+1)^0,c
 11267  001EF8  0E00               	movlw	0
 11268  001EFA  6E37               	movwf	(___fladd@b+2)^0,c
 11269  001EFC  0E00               	movlw	0
 11270  001EFE  6E38               	movwf	(___fladd@b+3)^0,c
 11271  001F00  5043               	movf	___fladd@bexp^0,w,c
 11272  001F02  A4D8               	btfss	status,2,c
 11273  001F04  EF86  F00F         	goto	u4391
 11274  001F08  EF88  F00F         	goto	u4390
 11275  001F0C                     u4391:
 11276  001F0C  EF8A  F00F         	goto	l4364
 11277  001F10                     u4390:
 11278  001F10  0E00               	movlw	0
 11279  001F12  6E41               	movwf	___fladd@signs^0,c
 11280  001F14                     l4364:
 11281  001F14  A043               	btfss	___fladd@bexp^0,0,c
 11282  001F16  EF8F  F00F         	goto	u4401
 11283  001F1A  EF91  F00F         	goto	u4400
 11284  001F1E                     u4401:
 11285  001F1E  EF94  F00F         	goto	l4368
 11286  001F22                     u4400:
 11287  001F22  8E37               	bsf	(___fladd@b+2)^0,7,c
 11288  001F24  EF95  F00F         	goto	l4370
 11289  001F28                     l4368:
 11290  001F28  9E37               	bcf	(___fladd@b+2)^0,7,c
 11291  001F2A                     l4370:
 11292  001F2A  90D8               	bcf	status,0,c
 11293  001F2C  3043               	rrcf	___fladd@bexp^0,w,c
 11294  001F2E  6E38               	movwf	(___fladd@b+3)^0,c
 11295  001F30  AE41               	btfss	___fladd@signs^0,7,c
 11296  001F32  EF9D  F00F         	goto	u4411
 11297  001F36  EF9F  F00F         	goto	u4410
 11298  001F3A                     u4411:
 11299  001F3A  EFA0  F00F         	goto	l4376
 11300  001F3E                     u4410:
 11301  001F3E  8E38               	bsf	(___fladd@b+3)^0,7,c
 11302  001F40                     l4376:
 11303  001F40  C035  F035         	movff	___fladd@b,?___fladd
 11304  001F44  C036  F036         	movff	___fladd@b+1,?___fladd+1
 11305  001F48  C037  F037         	movff	___fladd@b+2,?___fladd+2
 11306  001F4C  C038  F038         	movff	___fladd@b+3,?___fladd+3
 11307  001F50                     l1228:
 11308  001F50  0012               	return		;funcret
 11309  001F52                     __end_of___fladd:
 11310                           	callstack 0
 11311                           
 11312 ;; *************** function ___flneg *****************
 11313 ;; Defined at:
 11314 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 11315 ;; Parameters:    Size  Location     Type
 11316 ;;  f1              4    0[COMRAM] unsigned char 
 11317 ;; Auto vars:     Size  Location     Type
 11318 ;;		None
 11319 ;; Return value:  Size  Location     Type
 11320 ;;                  4    0[COMRAM] unsigned char 
 11321 ;; Registers used:
 11322 ;;		wreg, status,2, status,0
 11323 ;; Tracked objects:
 11324 ;;		On entry : 0/0
 11325 ;;		On exit  : 0/0
 11326 ;;		Unchanged: 0/0
 11327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11328 ;;      Params:         4       0       0       0       0       0       0
 11329 ;;      Locals:         0       0       0       0       0       0       0
 11330 ;;      Temps:          0       0       0       0       0       0       0
 11331 ;;      Totals:         4       0       0       0       0       0       0
 11332 ;;Total ram usage:        4 bytes
 11333 ;; Hardware stack levels used:    1
 11334 ;; Hardware stack levels required when called:    1
 11335 ;; This function calls:
 11336 ;;		Nothing
 11337 ;; This function is called by:
 11338 ;;		_efgtoa
 11339 ;; This function uses a non-reentrant model
 11340 ;;
 11341                           
 11342                           	psect	text43
 11343  00553A                     __ptext43:
 11344                           	callstack 0
 11345  00553A                     ___flneg:
 11346                           	callstack 22
 11347  00553A  5001               	movf	___flneg@f1^0,w,c
 11348  00553C  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11349  00553E  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11350  005540  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11351  005542  B4D8               	btfsc	status,2,c
 11352  005544  EFA6  F02A         	goto	u5211
 11353  005548  EFA8  F02A         	goto	u5210
 11354  00554C                     u5211:
 11355  00554C  EFB0  F02A         	goto	l4884
 11356  005550                     u5210:
 11357  005550  0E00               	movlw	0
 11358  005552  1A01               	xorwf	___flneg@f1^0,f,c
 11359  005554  0E00               	movlw	0
 11360  005556  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11361  005558  0E00               	movlw	0
 11362  00555A  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11363  00555C  0E80               	movlw	128
 11364  00555E  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11365  005560                     l4884:
 11366  005560  C001  F001         	movff	___flneg@f1,?___flneg
 11367  005564  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11368  005568  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11369  00556C  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11370  005570  0012               	return		;funcret
 11371  005572                     __end_of___flneg:
 11372                           	callstack 0
 11373                           
 11374 ;; *************** function ___flmul *****************
 11375 ;; Defined at:
 11376 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 11377 ;; Parameters:    Size  Location     Type
 11378 ;;  b               4   27[COMRAM] unsigned char 
 11379 ;;  a               4   31[COMRAM] unsigned char 
 11380 ;; Auto vars:     Size  Location     Type
 11381 ;;  prod            4   46[COMRAM] struct .
 11382 ;;  grs             4   40[COMRAM] unsigned long 
 11383 ;;  temp            2   50[COMRAM] struct .
 11384 ;;  bexp            1   45[COMRAM] unsigned char 
 11385 ;;  aexp            1   44[COMRAM] unsigned char 
 11386 ;;  sign            1   39[COMRAM] unsigned char 
 11387 ;; Return value:  Size  Location     Type
 11388 ;;                  4   27[COMRAM] unsigned char 
 11389 ;; Registers used:
 11390 ;;		wreg, status,2, status,0, prodl, prodh
 11391 ;; Tracked objects:
 11392 ;;		On entry : 0/0
 11393 ;;		On exit  : 0/0
 11394 ;;		Unchanged: 0/0
 11395 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11396 ;;      Params:         8       0       0       0       0       0       0
 11397 ;;      Locals:        13       0       0       0       0       0       0
 11398 ;;      Temps:          4       0       0       0       0       0       0
 11399 ;;      Totals:        25       0       0       0       0       0       0
 11400 ;;Total ram usage:       25 bytes
 11401 ;; Hardware stack levels used:    1
 11402 ;; Hardware stack levels required when called:    1
 11403 ;; This function calls:
 11404 ;;		Nothing
 11405 ;; This function is called by:
 11406 ;;		_scanAdcConversion
 11407 ;;		_speedControl
 11408 ;;		_efgtoa
 11409 ;; This function uses a non-reentrant model
 11410 ;;
 11411                           
 11412                           	psect	text44
 11413  001F52                     __ptext44:
 11414                           	callstack 0
 11415  001F52                     ___flmul:
 11416                           	callstack 22
 11417  001F52  501F               	movf	(___flmul@b+3)^0,w,c
 11418  001F54  0B80               	andlw	128
 11419  001F56  6E28               	movwf	___flmul@sign^0,c
 11420  001F58  501F               	movf	(___flmul@b+3)^0,w,c
 11421  001F5A  241F               	addwf	(___flmul@b+3)^0,w,c
 11422  001F5C  6E2E               	movwf	___flmul@bexp^0,c
 11423  001F5E  AE1E               	btfss	(___flmul@b+2)^0,7,c
 11424  001F60  EFB4  F00F         	goto	u4821
 11425  001F64  EFB6  F00F         	goto	u4820
 11426  001F68                     u4821:
 11427  001F68  EFB7  F00F         	goto	l4632
 11428  001F6C                     u4820:
 11429  001F6C  802E               	bsf	___flmul@bexp^0,0,c
 11430  001F6E                     l4632:
 11431  001F6E  502E               	movf	___flmul@bexp^0,w,c
 11432  001F70  B4D8               	btfsc	status,2,c
 11433  001F72  EFBD  F00F         	goto	u4831
 11434  001F76  EFBF  F00F         	goto	u4830
 11435  001F7A                     u4831:
 11436  001F7A  EFD2  F00F         	goto	l4640
 11437  001F7E                     u4830:
 11438  001F7E  282E               	incf	___flmul@bexp^0,w,c
 11439  001F80  A4D8               	btfss	status,2,c
 11440  001F82  EFC5  F00F         	goto	u4841
 11441  001F86  EFC7  F00F         	goto	u4840
 11442  001F8A                     u4841:
 11443  001F8A  EFCF  F00F         	goto	l4638
 11444  001F8E                     u4840:
 11445  001F8E  0E00               	movlw	0
 11446  001F90  6E1C               	movwf	___flmul@b^0,c
 11447  001F92  0E00               	movlw	0
 11448  001F94  6E1D               	movwf	(___flmul@b+1)^0,c
 11449  001F96  0E00               	movlw	0
 11450  001F98  6E1E               	movwf	(___flmul@b+2)^0,c
 11451  001F9A  0E00               	movlw	0
 11452  001F9C  6E1F               	movwf	(___flmul@b+3)^0,c
 11453  001F9E                     l4638:
 11454  001F9E  8E1E               	bsf	(___flmul@b+2)^0,7,c
 11455  001FA0  EFDA  F00F         	goto	l4642
 11456  001FA4                     l4640:
 11457  001FA4  0E00               	movlw	0
 11458  001FA6  6E1C               	movwf	___flmul@b^0,c
 11459  001FA8  0E00               	movlw	0
 11460  001FAA  6E1D               	movwf	(___flmul@b+1)^0,c
 11461  001FAC  0E00               	movlw	0
 11462  001FAE  6E1E               	movwf	(___flmul@b+2)^0,c
 11463  001FB0  0E00               	movlw	0
 11464  001FB2  6E1F               	movwf	(___flmul@b+3)^0,c
 11465  001FB4                     l4642:
 11466  001FB4  5023               	movf	(___flmul@a+3)^0,w,c
 11467  001FB6  0B80               	andlw	128
 11468  001FB8  1A28               	xorwf	___flmul@sign^0,f,c
 11469  001FBA  5023               	movf	(___flmul@a+3)^0,w,c
 11470  001FBC  2423               	addwf	(___flmul@a+3)^0,w,c
 11471  001FBE  6E2D               	movwf	___flmul@aexp^0,c
 11472  001FC0  AE22               	btfss	(___flmul@a+2)^0,7,c
 11473  001FC2  EFE5  F00F         	goto	u4851
 11474  001FC6  EFE7  F00F         	goto	u4850
 11475  001FCA                     u4851:
 11476  001FCA  EFE8  F00F         	goto	l4650
 11477  001FCE                     u4850:
 11478  001FCE  802D               	bsf	___flmul@aexp^0,0,c
 11479  001FD0                     l4650:
 11480  001FD0  502D               	movf	___flmul@aexp^0,w,c
 11481  001FD2  B4D8               	btfsc	status,2,c
 11482  001FD4  EFEE  F00F         	goto	u4861
 11483  001FD8  EFF0  F00F         	goto	u4860
 11484  001FDC                     u4861:
 11485  001FDC  EF03  F010         	goto	l4658
 11486  001FE0                     u4860:
 11487  001FE0  282D               	incf	___flmul@aexp^0,w,c
 11488  001FE2  A4D8               	btfss	status,2,c
 11489  001FE4  EFF6  F00F         	goto	u4871
 11490  001FE8  EFF8  F00F         	goto	u4870
 11491  001FEC                     u4871:
 11492  001FEC  EF00  F010         	goto	l4656
 11493  001FF0                     u4870:
 11494  001FF0  0E00               	movlw	0
 11495  001FF2  6E20               	movwf	___flmul@a^0,c
 11496  001FF4  0E00               	movlw	0
 11497  001FF6  6E21               	movwf	(___flmul@a+1)^0,c
 11498  001FF8  0E00               	movlw	0
 11499  001FFA  6E22               	movwf	(___flmul@a+2)^0,c
 11500  001FFC  0E00               	movlw	0
 11501  001FFE  6E23               	movwf	(___flmul@a+3)^0,c
 11502  002000                     l4656:
 11503  002000  8E22               	bsf	(___flmul@a+2)^0,7,c
 11504  002002  EF0B  F010         	goto	l1305
 11505  002006                     l4658:
 11506  002006  0E00               	movlw	0
 11507  002008  6E20               	movwf	___flmul@a^0,c
 11508  00200A  0E00               	movlw	0
 11509  00200C  6E21               	movwf	(___flmul@a+1)^0,c
 11510  00200E  0E00               	movlw	0
 11511  002010  6E22               	movwf	(___flmul@a+2)^0,c
 11512  002012  0E00               	movlw	0
 11513  002014  6E23               	movwf	(___flmul@a+3)^0,c
 11514  002016                     l1305:
 11515  002016  502D               	movf	___flmul@aexp^0,w,c
 11516  002018  B4D8               	btfsc	status,2,c
 11517  00201A  EF11  F010         	goto	u4881
 11518  00201E  EF13  F010         	goto	u4880
 11519  002022                     u4881:
 11520  002022  EF1B  F010         	goto	l4662
 11521  002026                     u4880:
 11522  002026  502E               	movf	___flmul@bexp^0,w,c
 11523  002028  A4D8               	btfss	status,2,c
 11524  00202A  EF19  F010         	goto	u4891
 11525  00202E  EF1B  F010         	goto	u4890
 11526  002032                     u4891:
 11527  002032  EF25  F010         	goto	l4666
 11528  002036                     u4890:
 11529  002036                     l4662:
 11530  002036  0E00               	movlw	0
 11531  002038  6E1C               	movwf	?___flmul^0,c
 11532  00203A  0E00               	movlw	0
 11533  00203C  6E1D               	movwf	(?___flmul+1)^0,c
 11534  00203E  0E00               	movlw	0
 11535  002040  6E1E               	movwf	(?___flmul+2)^0,c
 11536  002042  0E00               	movlw	0
 11537  002044  6E1F               	movwf	(?___flmul+3)^0,c
 11538  002046  EFBD  F011         	goto	l1309
 11539  00204A                     l4666:
 11540  00204A  5022               	movf	(___flmul@a+2)^0,w,c
 11541  00204C  021C               	mulwf	___flmul@b^0,c
 11542  00204E  CFF3 F033          	movff	prodl,___flmul@temp
 11543  002052  CFF4 F034          	movff	prodh,___flmul@temp+1
 11544  002056  5033               	movf	___flmul@temp^0,w,c
 11545  002058  6E29               	movwf	___flmul@grs^0,c
 11546  00205A  6A2A               	clrf	(___flmul@grs+1)^0,c
 11547  00205C  6A2B               	clrf	(___flmul@grs+2)^0,c
 11548  00205E  6A2C               	clrf	(___flmul@grs+3)^0,c
 11549  002060  5034               	movf	(___flmul@temp+1)^0,w,c
 11550  002062  6E2F               	movwf	___flmul@prod^0,c
 11551  002064  6A30               	clrf	(___flmul@prod+1)^0,c
 11552  002066  6A31               	clrf	(___flmul@prod+2)^0,c
 11553  002068  6A32               	clrf	(___flmul@prod+3)^0,c
 11554  00206A  5021               	movf	(___flmul@a+1)^0,w,c
 11555  00206C  021D               	mulwf	(___flmul@b+1)^0,c
 11556  00206E  CFF3 F033          	movff	prodl,___flmul@temp
 11557  002072  CFF4 F034          	movff	prodh,___flmul@temp+1
 11558  002076  5033               	movf	___flmul@temp^0,w,c
 11559  002078  2629               	addwf	___flmul@grs^0,f,c
 11560  00207A  0E00               	movlw	0
 11561  00207C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11562  00207E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11563  002080  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11564  002082  5034               	movf	(___flmul@temp+1)^0,w,c
 11565  002084  262F               	addwf	___flmul@prod^0,f,c
 11566  002086  0E00               	movlw	0
 11567  002088  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11568  00208A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11569  00208C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11570  00208E  5020               	movf	___flmul@a^0,w,c
 11571  002090  021E               	mulwf	(___flmul@b+2)^0,c
 11572  002092  CFF3 F033          	movff	prodl,___flmul@temp
 11573  002096  CFF4 F034          	movff	prodh,___flmul@temp+1
 11574  00209A  5033               	movf	___flmul@temp^0,w,c
 11575  00209C  2629               	addwf	___flmul@grs^0,f,c
 11576  00209E  0E00               	movlw	0
 11577  0020A0  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11578  0020A2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11579  0020A4  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11580  0020A6  5034               	movf	(___flmul@temp+1)^0,w,c
 11581  0020A8  262F               	addwf	___flmul@prod^0,f,c
 11582  0020AA  0E00               	movlw	0
 11583  0020AC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11584  0020AE  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11585  0020B0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11586  0020B2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11587  0020B6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11588  0020BA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11589  0020BE  6A29               	clrf	___flmul@grs^0,c
 11590  0020C0  5020               	movf	___flmul@a^0,w,c
 11591  0020C2  021D               	mulwf	(___flmul@b+1)^0,c
 11592  0020C4  CFF3 F033          	movff	prodl,___flmul@temp
 11593  0020C8  CFF4 F034          	movff	prodh,___flmul@temp+1
 11594  0020CC  5033               	movf	___flmul@temp^0,w,c
 11595  0020CE  2629               	addwf	___flmul@grs^0,f,c
 11596  0020D0  5034               	movf	(___flmul@temp+1)^0,w,c
 11597  0020D2  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11598  0020D4  0E00               	movlw	0
 11599  0020D6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11600  0020D8  0E00               	movlw	0
 11601  0020DA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11602  0020DC  5021               	movf	(___flmul@a+1)^0,w,c
 11603  0020DE  021C               	mulwf	___flmul@b^0,c
 11604  0020E0  CFF3 F033          	movff	prodl,___flmul@temp
 11605  0020E4  CFF4 F034          	movff	prodh,___flmul@temp+1
 11606  0020E8  5033               	movf	___flmul@temp^0,w,c
 11607  0020EA  2629               	addwf	___flmul@grs^0,f,c
 11608  0020EC  5034               	movf	(___flmul@temp+1)^0,w,c
 11609  0020EE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11610  0020F0  0E00               	movlw	0
 11611  0020F2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11612  0020F4  0E00               	movlw	0
 11613  0020F6  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11614  0020F8  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11615  0020FC  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11616  002100  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11617  002104  6A29               	clrf	___flmul@grs^0,c
 11618  002106  5020               	movf	___flmul@a^0,w,c
 11619  002108  021C               	mulwf	___flmul@b^0,c
 11620  00210A  CFF3 F033          	movff	prodl,___flmul@temp
 11621  00210E  CFF4 F034          	movff	prodh,___flmul@temp+1
 11622  002112  5033               	movf	___flmul@temp^0,w,c
 11623  002114  2629               	addwf	___flmul@grs^0,f,c
 11624  002116  5034               	movf	(___flmul@temp+1)^0,w,c
 11625  002118  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11626  00211A  0E00               	movlw	0
 11627  00211C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11628  00211E  0E00               	movlw	0
 11629  002120  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11630  002122  5022               	movf	(___flmul@a+2)^0,w,c
 11631  002124  021D               	mulwf	(___flmul@b+1)^0,c
 11632  002126  CFF3 F033          	movff	prodl,___flmul@temp
 11633  00212A  CFF4 F034          	movff	prodh,___flmul@temp+1
 11634  00212E  5033               	movf	___flmul@temp^0,w,c
 11635  002130  262F               	addwf	___flmul@prod^0,f,c
 11636  002132  5034               	movf	(___flmul@temp+1)^0,w,c
 11637  002134  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11638  002136  0E00               	movlw	0
 11639  002138  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11640  00213A  0E00               	movlw	0
 11641  00213C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11642  00213E  5021               	movf	(___flmul@a+1)^0,w,c
 11643  002140  021E               	mulwf	(___flmul@b+2)^0,c
 11644  002142  CFF3 F033          	movff	prodl,___flmul@temp
 11645  002146  CFF4 F034          	movff	prodh,___flmul@temp+1
 11646  00214A  5033               	movf	___flmul@temp^0,w,c
 11647  00214C  262F               	addwf	___flmul@prod^0,f,c
 11648  00214E  5034               	movf	(___flmul@temp+1)^0,w,c
 11649  002150  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11650  002152  0E00               	movlw	0
 11651  002154  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11652  002156  0E00               	movlw	0
 11653  002158  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11654  00215A  5022               	movf	(___flmul@a+2)^0,w,c
 11655  00215C  021E               	mulwf	(___flmul@b+2)^0,c
 11656  00215E  CFF3 F033          	movff	prodl,___flmul@temp
 11657  002162  CFF4 F034          	movff	prodh,___flmul@temp+1
 11658  002166  5033               	movf	___flmul@temp^0,w,c
 11659  002168  6E24               	movwf	??___flmul^0,c
 11660  00216A  5034               	movf	(___flmul@temp+1)^0,w,c
 11661  00216C  6E25               	movwf	(??___flmul+1)^0,c
 11662  00216E  6A26               	clrf	(??___flmul+2)^0,c
 11663  002170  6A27               	clrf	(??___flmul+3)^0,c
 11664  002172  C026  F027         	movff	??___flmul+2,??___flmul+3
 11665  002176  C025  F026         	movff	??___flmul+1,??___flmul+2
 11666  00217A  C024  F025         	movff	??___flmul,??___flmul+1
 11667  00217E  6A24               	clrf	??___flmul^0,c
 11668  002180  5024               	movf	??___flmul^0,w,c
 11669  002182  262F               	addwf	___flmul@prod^0,f,c
 11670  002184  5025               	movf	(??___flmul+1)^0,w,c
 11671  002186  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11672  002188  5026               	movf	(??___flmul+2)^0,w,c
 11673  00218A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11674  00218C  5027               	movf	(??___flmul+3)^0,w,c
 11675  00218E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11676  002190  C029  F024         	movff	___flmul@grs,??___flmul
 11677  002194  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 11678  002198  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 11679  00219C  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 11680  0021A0  0E19               	movlw	25
 11681  0021A2  EFD8  F010         	goto	u4900
 11682  0021A6                     u4905:
 11683  0021A6  90D8               	bcf	status,0,c
 11684  0021A8  3227               	rrcf	(??___flmul+3)^0,f,c
 11685  0021AA  3226               	rrcf	(??___flmul+2)^0,f,c
 11686  0021AC  3225               	rrcf	(??___flmul+1)^0,f,c
 11687  0021AE  3224               	rrcf	??___flmul^0,f,c
 11688  0021B0                     u4900:
 11689  0021B0  2EE8               	decfsz	wreg,f,c
 11690  0021B2  EFD3  F010         	goto	u4905
 11691  0021B6  5024               	movf	??___flmul^0,w,c
 11692  0021B8  262F               	addwf	___flmul@prod^0,f,c
 11693  0021BA  5025               	movf	(??___flmul+1)^0,w,c
 11694  0021BC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11695  0021BE  5026               	movf	(??___flmul+2)^0,w,c
 11696  0021C0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11697  0021C2  5027               	movf	(??___flmul+3)^0,w,c
 11698  0021C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11699  0021C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11700  0021CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11701  0021CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11702  0021D2  6A29               	clrf	___flmul@grs^0,c
 11703  0021D4  502D               	movf	___flmul@aexp^0,w,c
 11704  0021D6  C02E  F024         	movff	___flmul@bexp,??___flmul
 11705  0021DA  6A25               	clrf	(??___flmul+1)^0,c
 11706  0021DC  2624               	addwf	??___flmul^0,f,c
 11707  0021DE  0E00               	movlw	0
 11708  0021E0  2225               	addwfc	(??___flmul+1)^0,f,c
 11709  0021E2  0E82               	movlw	130
 11710  0021E4  2424               	addwf	??___flmul^0,w,c
 11711  0021E6  6E33               	movwf	___flmul@temp^0,c
 11712  0021E8  0EFF               	movlw	255
 11713  0021EA  2025               	addwfc	(??___flmul+1)^0,w,c
 11714  0021EC  6E34               	movwf	(___flmul@temp+1)^0,c
 11715  0021EE  EF0E  F011         	goto	l4714
 11716  0021F2                     l4708:
 11717  0021F2  90D8               	bcf	status,0,c
 11718  0021F4  362F               	rlcf	___flmul@prod^0,f,c
 11719  0021F6  3630               	rlcf	(___flmul@prod+1)^0,f,c
 11720  0021F8  3631               	rlcf	(___flmul@prod+2)^0,f,c
 11721  0021FA  3632               	rlcf	(___flmul@prod+3)^0,f,c
 11722  0021FC  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11723  0021FE  EF03  F011         	goto	u4911
 11724  002202  EF05  F011         	goto	u4910
 11725  002206                     u4911:
 11726  002206  EF06  F011         	goto	l1312
 11727  00220A                     u4910:
 11728  00220A  802F               	bsf	___flmul@prod^0,0,c
 11729  00220C                     l1312:
 11730  00220C  90D8               	bcf	status,0,c
 11731  00220E  3629               	rlcf	___flmul@grs^0,f,c
 11732  002210  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11733  002212  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11734  002214  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11735  002216  0633               	decf	___flmul@temp^0,f,c
 11736  002218  A0D8               	btfss	status,0,c
 11737  00221A  0634               	decf	(___flmul@temp+1)^0,f,c
 11738  00221C                     l4714:
 11739  00221C  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11740  00221E  EF13  F011         	goto	u4921
 11741  002222  EF15  F011         	goto	u4920
 11742  002226                     u4921:
 11743  002226  EFF9  F010         	goto	l4708
 11744  00222A                     u4920:
 11745  00222A  0E00               	movlw	0
 11746  00222C  6E2D               	movwf	___flmul@aexp^0,c
 11747  00222E  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11748  002230  EF1C  F011         	goto	u4931
 11749  002234  EF1E  F011         	goto	u4930
 11750  002238                     u4931:
 11751  002238  EF42  F011         	goto	l1314
 11752  00223C                     u4930:
 11753  00223C  0EFF               	movlw	255
 11754  00223E  1429               	andwf	___flmul@grs^0,w,c
 11755  002240  6E24               	movwf	??___flmul^0,c
 11756  002242  0EFF               	movlw	255
 11757  002244  142A               	andwf	(___flmul@grs+1)^0,w,c
 11758  002246  6E25               	movwf	(??___flmul+1)^0,c
 11759  002248  0EFF               	movlw	255
 11760  00224A  142B               	andwf	(___flmul@grs+2)^0,w,c
 11761  00224C  6E26               	movwf	(??___flmul+2)^0,c
 11762  00224E  0E7F               	movlw	127
 11763  002250  142C               	andwf	(___flmul@grs+3)^0,w,c
 11764  002252  6E27               	movwf	(??___flmul+3)^0,c
 11765  002254  5024               	movf	??___flmul^0,w,c
 11766  002256  1025               	iorwf	(??___flmul+1)^0,w,c
 11767  002258  1026               	iorwf	(??___flmul+2)^0,w,c
 11768  00225A  1027               	iorwf	(??___flmul+3)^0,w,c
 11769  00225C  B4D8               	btfsc	status,2,c
 11770  00225E  EF33  F011         	goto	u4941
 11771  002262  EF35  F011         	goto	u4940
 11772  002266                     u4941:
 11773  002266  EF39  F011         	goto	l1315
 11774  00226A                     u4940:
 11775  00226A                     l4722:
 11776  00226A  0E01               	movlw	1
 11777  00226C  6E2D               	movwf	___flmul@aexp^0,c
 11778  00226E  EF42  F011         	goto	l1314
 11779  002272                     l1315:
 11780  002272  A02F               	btfss	___flmul@prod^0,0,c
 11781  002274  EF3E  F011         	goto	u4951
 11782  002278  EF40  F011         	goto	u4950
 11783  00227C                     u4951:
 11784  00227C  EF42  F011         	goto	l1314
 11785  002280                     u4950:
 11786  002280  EF35  F011         	goto	l4722
 11787  002284                     l1314:
 11788  002284  502D               	movf	___flmul@aexp^0,w,c
 11789  002286  B4D8               	btfsc	status,2,c
 11790  002288  EF48  F011         	goto	u4961
 11791  00228C  EF4A  F011         	goto	u4960
 11792  002290                     u4961:
 11793  002290  EF6E  F011         	goto	l4734
 11794  002294                     u4960:
 11795  002294  0E01               	movlw	1
 11796  002296  262F               	addwf	___flmul@prod^0,f,c
 11797  002298  0E00               	movlw	0
 11798  00229A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11799  00229C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11800  00229E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11801  0022A0  A032               	btfss	(___flmul@prod+3)^0,0,c
 11802  0022A2  EF55  F011         	goto	u4971
 11803  0022A6  EF57  F011         	goto	u4970
 11804  0022AA                     u4971:
 11805  0022AA  EF6E  F011         	goto	l4734
 11806  0022AE                     u4970:
 11807  0022AE  C02F  F024         	movff	___flmul@prod,??___flmul
 11808  0022B2  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11809  0022B6  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11810  0022BA  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11811  0022BE  3427               	rlcf	(??___flmul+3)^0,w,c
 11812  0022C0  3227               	rrcf	(??___flmul+3)^0,f,c
 11813  0022C2  3226               	rrcf	(??___flmul+2)^0,f,c
 11814  0022C4  3225               	rrcf	(??___flmul+1)^0,f,c
 11815  0022C6  3224               	rrcf	??___flmul^0,f,c
 11816  0022C8  C024  F02F         	movff	??___flmul,___flmul@prod
 11817  0022CC  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11818  0022D0  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11819  0022D4  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11820  0022D8  4A33               	infsnz	___flmul@temp^0,f,c
 11821  0022DA  2A34               	incf	(___flmul@temp+1)^0,f,c
 11822  0022DC                     l4734:
 11823  0022DC  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11824  0022DE  EF79  F011         	goto	u4981
 11825  0022E2  5034               	movf	(___flmul@temp+1)^0,w,c
 11826  0022E4  E108               	bnz	u4980
 11827  0022E6  2833               	incf	___flmul@temp^0,w,c
 11828  0022E8  A0D8               	btfss	status,0,c
 11829  0022EA  EF79  F011         	goto	u4981
 11830  0022EE  EF7B  F011         	goto	u4980
 11831  0022F2                     u4981:
 11832  0022F2  EF85  F011         	goto	l4738
 11833  0022F6                     u4980:
 11834  0022F6  0E00               	movlw	0
 11835  0022F8  6E2F               	movwf	___flmul@prod^0,c
 11836  0022FA  0E00               	movlw	0
 11837  0022FC  6E30               	movwf	(___flmul@prod+1)^0,c
 11838  0022FE  0E80               	movlw	128
 11839  002300  6E31               	movwf	(___flmul@prod+2)^0,c
 11840  002302  0E7F               	movlw	127
 11841  002304  6E32               	movwf	(___flmul@prod+3)^0,c
 11842  002306  EFB3  F011         	goto	l4750
 11843  00230A                     l4738:
 11844  00230A  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11845  00230C  EF92  F011         	goto	u4990
 11846  002310  5034               	movf	(___flmul@temp+1)^0,w,c
 11847  002312  E106               	bnz	u4991
 11848  002314  0433               	decf	___flmul@temp^0,w,c
 11849  002316  B0D8               	btfsc	status,0,c
 11850  002318  EF90  F011         	goto	u4991
 11851  00231C  EF92  F011         	goto	u4990
 11852  002320                     u4991:
 11853  002320  EF9E  F011         	goto	l1322
 11854  002324                     u4990:
 11855  002324  0E00               	movlw	0
 11856  002326  6E2F               	movwf	___flmul@prod^0,c
 11857  002328  0E00               	movlw	0
 11858  00232A  6E30               	movwf	(___flmul@prod+1)^0,c
 11859  00232C  0E00               	movlw	0
 11860  00232E  6E31               	movwf	(___flmul@prod+2)^0,c
 11861  002330  0E00               	movlw	0
 11862  002332  6E32               	movwf	(___flmul@prod+3)^0,c
 11863  002334  0E00               	movlw	0
 11864  002336  6E28               	movwf	___flmul@sign^0,c
 11865  002338  EFB3  F011         	goto	l4750
 11866  00233C                     l1322:
 11867  00233C  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11868  002340  0EFF               	movlw	255
 11869  002342  162F               	andwf	___flmul@prod^0,f,c
 11870  002344  0EFF               	movlw	255
 11871  002346  1630               	andwf	(___flmul@prod+1)^0,f,c
 11872  002348  0E7F               	movlw	127
 11873  00234A  1631               	andwf	(___flmul@prod+2)^0,f,c
 11874  00234C  0E00               	movlw	0
 11875  00234E  1632               	andwf	(___flmul@prod+3)^0,f,c
 11876  002350  A02E               	btfss	___flmul@bexp^0,0,c
 11877  002352  EFAD  F011         	goto	u5001
 11878  002356  EFAF  F011         	goto	u5000
 11879  00235A                     u5001:
 11880  00235A  EFB0  F011         	goto	l4748
 11881  00235E                     u5000:
 11882  00235E  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11883  002360                     l4748:
 11884  002360  90D8               	bcf	status,0,c
 11885  002362  302E               	rrcf	___flmul@bexp^0,w,c
 11886  002364  6E32               	movwf	(___flmul@prod+3)^0,c
 11887  002366                     l4750:
 11888  002366  5028               	movf	___flmul@sign^0,w,c
 11889  002368  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11890  00236A  C02F  F01C         	movff	___flmul@prod,?___flmul
 11891  00236E  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11892  002372  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11893  002376  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11894  00237A                     l1309:
 11895  00237A  0012               	return		;funcret
 11896  00237C                     __end_of___flmul:
 11897                           	callstack 0
 11898                           
 11899 ;; *************** function ___flge *****************
 11900 ;; Defined at:
 11901 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11902 ;; Parameters:    Size  Location     Type
 11903 ;;  ff1             4   52[COMRAM] unsigned char 
 11904 ;;  ff2             4   56[COMRAM] unsigned char 
 11905 ;; Auto vars:     Size  Location     Type
 11906 ;;		None
 11907 ;; Return value:  Size  Location     Type
 11908 ;;		None               void
 11909 ;; Registers used:
 11910 ;;		wreg, status,2, status,0
 11911 ;; Tracked objects:
 11912 ;;		On entry : 0/0
 11913 ;;		On exit  : 0/0
 11914 ;;		Unchanged: 0/0
 11915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11916 ;;      Params:         8       0       0       0       0       0       0
 11917 ;;      Locals:         0       0       0       0       0       0       0
 11918 ;;      Temps:          4       0       0       0       0       0       0
 11919 ;;      Totals:        12       0       0       0       0       0       0
 11920 ;;Total ram usage:       12 bytes
 11921 ;; Hardware stack levels used:    1
 11922 ;; Hardware stack levels required when called:    1
 11923 ;; This function calls:
 11924 ;;		Nothing
 11925 ;; This function is called by:
 11926 ;;		_secretMenu
 11927 ;;		_efgtoa
 11928 ;; This function uses a non-reentrant model
 11929 ;;
 11930                           
 11931                           	psect	text45
 11932  0043AC                     __ptext45:
 11933                           	callstack 0
 11934  0043AC                     ___flge:
 11935                           	callstack 22
 11936  0043AC  0E00               	movlw	0
 11937  0043AE  1435               	andwf	___flge@ff1^0,w,c
 11938  0043B0  6E3D               	movwf	??___flge^0,c
 11939  0043B2  0E00               	movlw	0
 11940  0043B4  1436               	andwf	(___flge@ff1+1)^0,w,c
 11941  0043B6  6E3E               	movwf	(??___flge+1)^0,c
 11942  0043B8  0E80               	movlw	128
 11943  0043BA  1437               	andwf	(___flge@ff1+2)^0,w,c
 11944  0043BC  6E3F               	movwf	(??___flge+2)^0,c
 11945  0043BE  0E7F               	movlw	127
 11946  0043C0  1438               	andwf	(___flge@ff1+3)^0,w,c
 11947  0043C2  6E40               	movwf	(??___flge+3)^0,c
 11948  0043C4  503D               	movf	??___flge^0,w,c
 11949  0043C6  103E               	iorwf	(??___flge+1)^0,w,c
 11950  0043C8  103F               	iorwf	(??___flge+2)^0,w,c
 11951  0043CA  1040               	iorwf	(??___flge+3)^0,w,c
 11952  0043CC  A4D8               	btfss	status,2,c
 11953  0043CE  EFEB  F021         	goto	u5161
 11954  0043D2  EFED  F021         	goto	u5160
 11955  0043D6                     u5161:
 11956  0043D6  EFF5  F021         	goto	l4862
 11957  0043DA                     u5160:
 11958  0043DA  0E00               	movlw	0
 11959  0043DC  6E35               	movwf	___flge@ff1^0,c
 11960  0043DE  0E00               	movlw	0
 11961  0043E0  6E36               	movwf	(___flge@ff1+1)^0,c
 11962  0043E2  0E00               	movlw	0
 11963  0043E4  6E37               	movwf	(___flge@ff1+2)^0,c
 11964  0043E6  0E00               	movlw	0
 11965  0043E8  6E38               	movwf	(___flge@ff1+3)^0,c
 11966  0043EA                     l4862:
 11967  0043EA  0E00               	movlw	0
 11968  0043EC  1439               	andwf	___flge@ff2^0,w,c
 11969  0043EE  6E3D               	movwf	??___flge^0,c
 11970  0043F0  0E00               	movlw	0
 11971  0043F2  143A               	andwf	(___flge@ff2+1)^0,w,c
 11972  0043F4  6E3E               	movwf	(??___flge+1)^0,c
 11973  0043F6  0E80               	movlw	128
 11974  0043F8  143B               	andwf	(___flge@ff2+2)^0,w,c
 11975  0043FA  6E3F               	movwf	(??___flge+2)^0,c
 11976  0043FC  0E7F               	movlw	127
 11977  0043FE  143C               	andwf	(___flge@ff2+3)^0,w,c
 11978  004400  6E40               	movwf	(??___flge+3)^0,c
 11979  004402  503D               	movf	??___flge^0,w,c
 11980  004404  103E               	iorwf	(??___flge+1)^0,w,c
 11981  004406  103F               	iorwf	(??___flge+2)^0,w,c
 11982  004408  1040               	iorwf	(??___flge+3)^0,w,c
 11983  00440A  A4D8               	btfss	status,2,c
 11984  00440C  EF0A  F022         	goto	u5171
 11985  004410  EF0C  F022         	goto	u5170
 11986  004414                     u5171:
 11987  004414  EF14  F022         	goto	l4866
 11988  004418                     u5170:
 11989  004418  0E00               	movlw	0
 11990  00441A  6E39               	movwf	___flge@ff2^0,c
 11991  00441C  0E00               	movlw	0
 11992  00441E  6E3A               	movwf	(___flge@ff2+1)^0,c
 11993  004420  0E00               	movlw	0
 11994  004422  6E3B               	movwf	(___flge@ff2+2)^0,c
 11995  004424  0E00               	movlw	0
 11996  004426  6E3C               	movwf	(___flge@ff2+3)^0,c
 11997  004428                     l4866:
 11998  004428  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11999  00442A  EF19  F022         	goto	u5181
 12000  00442E  EF1B  F022         	goto	u5180
 12001  004432                     u5181:
 12002  004432  EF24  F022         	goto	l4870
 12003  004436                     u5180:
 12004  004436  6C35               	negf	___flge@ff1^0,c
 12005  004438  1E36               	comf	(___flge@ff1+1)^0,f,c
 12006  00443A  B0D8               	btfsc	status,0,c
 12007  00443C  2A36               	incf	(___flge@ff1+1)^0,f,c
 12008  00443E  1E37               	comf	(___flge@ff1+2)^0,f,c
 12009  004440  B0D8               	btfsc	status,0,c
 12010  004442  2A37               	incf	(___flge@ff1+2)^0,f,c
 12011  004444  0E80               	movlw	128
 12012  004446  5638               	subfwb	(___flge@ff1+3)^0,f,c
 12013  004448                     l4870:
 12014  004448  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 12015  00444A  EF29  F022         	goto	u5191
 12016  00444E  EF2B  F022         	goto	u5190
 12017  004452                     u5191:
 12018  004452  EF34  F022         	goto	l956
 12019  004456                     u5190:
 12020  004456  6C39               	negf	___flge@ff2^0,c
 12021  004458  1E3A               	comf	(___flge@ff2+1)^0,f,c
 12022  00445A  B0D8               	btfsc	status,0,c
 12023  00445C  2A3A               	incf	(___flge@ff2+1)^0,f,c
 12024  00445E  1E3B               	comf	(___flge@ff2+2)^0,f,c
 12025  004460  B0D8               	btfsc	status,0,c
 12026  004462  2A3B               	incf	(___flge@ff2+2)^0,f,c
 12027  004464  0E80               	movlw	128
 12028  004466  563C               	subfwb	(___flge@ff2+3)^0,f,c
 12029  004468                     l956:
 12030  004468  0E00               	movlw	0
 12031  00446A  1A35               	xorwf	___flge@ff1^0,f,c
 12032  00446C  0E00               	movlw	0
 12033  00446E  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 12034  004470  0E00               	movlw	0
 12035  004472  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 12036  004474  0E80               	movlw	128
 12037  004476  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 12038  004478  0E00               	movlw	0
 12039  00447A  1A39               	xorwf	___flge@ff2^0,f,c
 12040  00447C  0E00               	movlw	0
 12041  00447E  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 12042  004480  0E00               	movlw	0
 12043  004482  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 12044  004484  0E80               	movlw	128
 12045  004486  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 12046  004488  5039               	movf	___flge@ff2^0,w,c
 12047  00448A  5C35               	subwf	___flge@ff1^0,w,c
 12048  00448C  503A               	movf	(___flge@ff2+1)^0,w,c
 12049  00448E  5836               	subwfb	(___flge@ff1+1)^0,w,c
 12050  004490  503B               	movf	(___flge@ff2+2)^0,w,c
 12051  004492  5837               	subwfb	(___flge@ff1+2)^0,w,c
 12052  004494  503C               	movf	(___flge@ff2+3)^0,w,c
 12053  004496  5838               	subwfb	(___flge@ff1+3)^0,w,c
 12054  004498  B0D8               	btfsc	status,0,c
 12055  00449A  EF51  F022         	goto	u5201
 12056  00449E  EF53  F022         	goto	u5200
 12057  0044A2                     u5201:
 12058  0044A2  EF56  F022         	goto	l4876
 12059  0044A6                     u5200:
 12060  0044A6  90D8               	bcf	status,0,c
 12061  0044A8  EF57  F022         	goto	l961
 12062  0044AC                     l4876:
 12063  0044AC  80D8               	bsf	status,0,c
 12064  0044AE                     l961:
 12065  0044AE  0012               	return		;funcret
 12066  0044B0                     __end_of___flge:
 12067                           	callstack 0
 12068                           
 12069 ;; *************** function ___fleq *****************
 12070 ;; Defined at:
 12071 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 12072 ;; Parameters:    Size  Location     Type
 12073 ;;  ff1             4    0[COMRAM] unsigned char 
 12074 ;;  ff2             4    4[COMRAM] unsigned char 
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;		None
 12077 ;; Return value:  Size  Location     Type
 12078 ;;		None               void
 12079 ;; Registers used:
 12080 ;;		wreg, status,2, status,0
 12081 ;; Tracked objects:
 12082 ;;		On entry : 0/0
 12083 ;;		On exit  : 0/0
 12084 ;;		Unchanged: 0/0
 12085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12086 ;;      Params:         8       0       0       0       0       0       0
 12087 ;;      Locals:         0       0       0       0       0       0       0
 12088 ;;      Temps:          4       0       0       0       0       0       0
 12089 ;;      Totals:        12       0       0       0       0       0       0
 12090 ;;Total ram usage:       12 bytes
 12091 ;; Hardware stack levels used:    1
 12092 ;; Hardware stack levels required when called:    1
 12093 ;; This function calls:
 12094 ;;		Nothing
 12095 ;; This function is called by:
 12096 ;;		_efgtoa
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100                           	psect	text46
 12101  004BDE                     __ptext46:
 12102                           	callstack 0
 12103  004BDE                     ___fleq:
 12104                           	callstack 22
 12105  004BDE  0E00               	movlw	0
 12106  004BE0  1401               	andwf	___fleq@ff1^0,w,c
 12107  004BE2  6E09               	movwf	??___fleq^0,c
 12108  004BE4  0E00               	movlw	0
 12109  004BE6  1402               	andwf	(___fleq@ff1+1)^0,w,c
 12110  004BE8  6E0A               	movwf	(??___fleq+1)^0,c
 12111  004BEA  0E80               	movlw	128
 12112  004BEC  1403               	andwf	(___fleq@ff1+2)^0,w,c
 12113  004BEE  6E0B               	movwf	(??___fleq+2)^0,c
 12114  004BF0  0E7F               	movlw	127
 12115  004BF2  1404               	andwf	(___fleq@ff1+3)^0,w,c
 12116  004BF4  6E0C               	movwf	(??___fleq+3)^0,c
 12117  004BF6  5009               	movf	??___fleq^0,w,c
 12118  004BF8  100A               	iorwf	(??___fleq+1)^0,w,c
 12119  004BFA  100B               	iorwf	(??___fleq+2)^0,w,c
 12120  004BFC  100C               	iorwf	(??___fleq+3)^0,w,c
 12121  004BFE  A4D8               	btfss	status,2,c
 12122  004C00  EF04  F026         	goto	u5131
 12123  004C04  EF06  F026         	goto	u5130
 12124  004C08                     u5131:
 12125  004C08  EF0E  F026         	goto	l4846
 12126  004C0C                     u5130:
 12127  004C0C  0E00               	movlw	0
 12128  004C0E  6E01               	movwf	___fleq@ff1^0,c
 12129  004C10  0E00               	movlw	0
 12130  004C12  6E02               	movwf	(___fleq@ff1+1)^0,c
 12131  004C14  0E00               	movlw	0
 12132  004C16  6E03               	movwf	(___fleq@ff1+2)^0,c
 12133  004C18  0E00               	movlw	0
 12134  004C1A  6E04               	movwf	(___fleq@ff1+3)^0,c
 12135  004C1C                     l4846:
 12136  004C1C  0E00               	movlw	0
 12137  004C1E  1405               	andwf	___fleq@ff2^0,w,c
 12138  004C20  6E09               	movwf	??___fleq^0,c
 12139  004C22  0E00               	movlw	0
 12140  004C24  1406               	andwf	(___fleq@ff2+1)^0,w,c
 12141  004C26  6E0A               	movwf	(??___fleq+1)^0,c
 12142  004C28  0E80               	movlw	128
 12143  004C2A  1407               	andwf	(___fleq@ff2+2)^0,w,c
 12144  004C2C  6E0B               	movwf	(??___fleq+2)^0,c
 12145  004C2E  0E7F               	movlw	127
 12146  004C30  1408               	andwf	(___fleq@ff2+3)^0,w,c
 12147  004C32  6E0C               	movwf	(??___fleq+3)^0,c
 12148  004C34  5009               	movf	??___fleq^0,w,c
 12149  004C36  100A               	iorwf	(??___fleq+1)^0,w,c
 12150  004C38  100B               	iorwf	(??___fleq+2)^0,w,c
 12151  004C3A  100C               	iorwf	(??___fleq+3)^0,w,c
 12152  004C3C  A4D8               	btfss	status,2,c
 12153  004C3E  EF23  F026         	goto	u5141
 12154  004C42  EF25  F026         	goto	u5140
 12155  004C46                     u5141:
 12156  004C46  EF2D  F026         	goto	l4850
 12157  004C4A                     u5140:
 12158  004C4A  0E00               	movlw	0
 12159  004C4C  6E05               	movwf	___fleq@ff2^0,c
 12160  004C4E  0E00               	movlw	0
 12161  004C50  6E06               	movwf	(___fleq@ff2+1)^0,c
 12162  004C52  0E00               	movlw	0
 12163  004C54  6E07               	movwf	(___fleq@ff2+2)^0,c
 12164  004C56  0E00               	movlw	0
 12165  004C58  6E08               	movwf	(___fleq@ff2+3)^0,c
 12166  004C5A                     l4850:
 12167  004C5A  5005               	movf	___fleq@ff2^0,w,c
 12168  004C5C  1801               	xorwf	___fleq@ff1^0,w,c
 12169  004C5E  E10F               	bnz	u5150
 12170  004C60  5006               	movf	(___fleq@ff2+1)^0,w,c
 12171  004C62  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 12172  004C64  E10C               	bnz	u5150
 12173  004C66  5007               	movf	(___fleq@ff2+2)^0,w,c
 12174  004C68  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 12175  004C6A  E109               	bnz	u5150
 12176  004C6C  5008               	movf	(___fleq@ff2+3)^0,w,c
 12177  004C6E  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 12178  004C70  B4D8               	btfsc	status,2,c
 12179  004C72  EF3D  F026         	goto	u5151
 12180  004C76  EF3F  F026         	goto	u5150
 12181  004C7A                     u5151:
 12182  004C7A  EF42  F026         	goto	l4854
 12183  004C7E                     u5150:
 12184  004C7E  90D8               	bcf	status,0,c
 12185  004C80  EF43  F026         	goto	l950
 12186  004C84                     l4854:
 12187  004C84  80D8               	bsf	status,0,c
 12188  004C86                     l950:
 12189  004C86  0012               	return		;funcret
 12190  004C88                     __end_of___fleq:
 12191                           	callstack 0
 12192                           
 12193 ;; *************** function ___fldiv *****************
 12194 ;; Defined at:
 12195 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 12196 ;; Parameters:    Size  Location     Type
 12197 ;;  b               4   52[COMRAM] unsigned char 
 12198 ;;  a               4   56[COMRAM] unsigned char 
 12199 ;; Auto vars:     Size  Location     Type
 12200 ;;  grs             4   71[COMRAM] unsigned long 
 12201 ;;  rem             4   64[COMRAM] unsigned long 
 12202 ;;  new_exp         2   69[COMRAM] short 
 12203 ;;  aexp            1   76[COMRAM] unsigned char 
 12204 ;;  bexp            1   75[COMRAM] unsigned char 
 12205 ;;  sign            1   68[COMRAM] unsigned char 
 12206 ;; Return value:  Size  Location     Type
 12207 ;;                  4   52[COMRAM] unsigned char 
 12208 ;; Registers used:
 12209 ;;		wreg, status,2, status,0
 12210 ;; Tracked objects:
 12211 ;;		On entry : 0/0
 12212 ;;		On exit  : 0/0
 12213 ;;		Unchanged: 0/0
 12214 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12215 ;;      Params:         8       0       0       0       0       0       0
 12216 ;;      Locals:        13       0       0       0       0       0       0
 12217 ;;      Temps:          4       0       0       0       0       0       0
 12218 ;;      Totals:        25       0       0       0       0       0       0
 12219 ;;Total ram usage:       25 bytes
 12220 ;; Hardware stack levels used:    1
 12221 ;; Hardware stack levels required when called:    1
 12222 ;; This function calls:
 12223 ;;		Nothing
 12224 ;; This function is called by:
 12225 ;;		_scanAdcConversion
 12226 ;;		_efgtoa
 12227 ;; This function uses a non-reentrant model
 12228 ;;
 12229                           
 12230                           	psect	text47
 12231  00237C                     __ptext47:
 12232                           	callstack 0
 12233  00237C                     ___fldiv:
 12234                           	callstack 22
 12235  00237C  5038               	movf	(___fldiv@b+3)^0,w,c
 12236  00237E  0B80               	andlw	128
 12237  002380  6E45               	movwf	___fldiv@sign^0,c
 12238  002382  5038               	movf	(___fldiv@b+3)^0,w,c
 12239  002384  2438               	addwf	(___fldiv@b+3)^0,w,c
 12240  002386  6E4C               	movwf	___fldiv@bexp^0,c
 12241  002388  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12242  00238A  EFC9  F011         	goto	u4591
 12243  00238E  EFCB  F011         	goto	u4590
 12244  002392                     u4591:
 12245  002392  EFCC  F011         	goto	l4494
 12246  002396                     u4590:
 12247  002396  804C               	bsf	___fldiv@bexp^0,0,c
 12248  002398                     l4494:
 12249  002398  504C               	movf	___fldiv@bexp^0,w,c
 12250  00239A  B4D8               	btfsc	status,2,c
 12251  00239C  EFD2  F011         	goto	u4601
 12252  0023A0  EFD4  F011         	goto	u4600
 12253  0023A4                     u4601:
 12254  0023A4  EFE9  F011         	goto	l4504
 12255  0023A8                     u4600:
 12256  0023A8  284C               	incf	___fldiv@bexp^0,w,c
 12257  0023AA  A4D8               	btfss	status,2,c
 12258  0023AC  EFDA  F011         	goto	u4611
 12259  0023B0  EFDC  F011         	goto	u4610
 12260  0023B4                     u4611:
 12261  0023B4  EFE4  F011         	goto	l4500
 12262  0023B8                     u4610:
 12263  0023B8  0E00               	movlw	0
 12264  0023BA  6E35               	movwf	___fldiv@b^0,c
 12265  0023BC  0E00               	movlw	0
 12266  0023BE  6E36               	movwf	(___fldiv@b+1)^0,c
 12267  0023C0  0E00               	movlw	0
 12268  0023C2  6E37               	movwf	(___fldiv@b+2)^0,c
 12269  0023C4  0E00               	movlw	0
 12270  0023C6  6E38               	movwf	(___fldiv@b+3)^0,c
 12271  0023C8                     l4500:
 12272  0023C8  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12273  0023CA  0E00               	movlw	0
 12274  0023CC  6E38               	movwf	(___fldiv@b+3)^0,c
 12275  0023CE  EFF1  F011         	goto	l4506
 12276  0023D2                     l4504:
 12277  0023D2  0E00               	movlw	0
 12278  0023D4  6E35               	movwf	___fldiv@b^0,c
 12279  0023D6  0E00               	movlw	0
 12280  0023D8  6E36               	movwf	(___fldiv@b+1)^0,c
 12281  0023DA  0E00               	movlw	0
 12282  0023DC  6E37               	movwf	(___fldiv@b+2)^0,c
 12283  0023DE  0E00               	movlw	0
 12284  0023E0  6E38               	movwf	(___fldiv@b+3)^0,c
 12285  0023E2                     l4506:
 12286  0023E2  503C               	movf	(___fldiv@a+3)^0,w,c
 12287  0023E4  0B80               	andlw	128
 12288  0023E6  1A45               	xorwf	___fldiv@sign^0,f,c
 12289  0023E8  503C               	movf	(___fldiv@a+3)^0,w,c
 12290  0023EA  243C               	addwf	(___fldiv@a+3)^0,w,c
 12291  0023EC  6E4D               	movwf	___fldiv@aexp^0,c
 12292  0023EE  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 12293  0023F0  EFFC  F011         	goto	u4621
 12294  0023F4  EFFE  F011         	goto	u4620
 12295  0023F8                     u4621:
 12296  0023F8  EFFF  F011         	goto	l4514
 12297  0023FC                     u4620:
 12298  0023FC  804D               	bsf	___fldiv@aexp^0,0,c
 12299  0023FE                     l4514:
 12300  0023FE  504D               	movf	___fldiv@aexp^0,w,c
 12301  002400  B4D8               	btfsc	status,2,c
 12302  002402  EF05  F012         	goto	u4631
 12303  002406  EF07  F012         	goto	u4630
 12304  00240A                     u4631:
 12305  00240A  EF1C  F012         	goto	l4524
 12306  00240E                     u4630:
 12307  00240E  284D               	incf	___fldiv@aexp^0,w,c
 12308  002410  A4D8               	btfss	status,2,c
 12309  002412  EF0D  F012         	goto	u4641
 12310  002416  EF0F  F012         	goto	u4640
 12311  00241A                     u4641:
 12312  00241A  EF17  F012         	goto	l4520
 12313  00241E                     u4640:
 12314  00241E  0E00               	movlw	0
 12315  002420  6E39               	movwf	___fldiv@a^0,c
 12316  002422  0E00               	movlw	0
 12317  002424  6E3A               	movwf	(___fldiv@a+1)^0,c
 12318  002426  0E00               	movlw	0
 12319  002428  6E3B               	movwf	(___fldiv@a+2)^0,c
 12320  00242A  0E00               	movlw	0
 12321  00242C  6E3C               	movwf	(___fldiv@a+3)^0,c
 12322  00242E                     l4520:
 12323  00242E  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 12324  002430  0E00               	movlw	0
 12325  002432  6E3C               	movwf	(___fldiv@a+3)^0,c
 12326  002434  EF24  F012         	goto	l4526
 12327  002438                     l4524:
 12328  002438  0E00               	movlw	0
 12329  00243A  6E39               	movwf	___fldiv@a^0,c
 12330  00243C  0E00               	movlw	0
 12331  00243E  6E3A               	movwf	(___fldiv@a+1)^0,c
 12332  002440  0E00               	movlw	0
 12333  002442  6E3B               	movwf	(___fldiv@a+2)^0,c
 12334  002444  0E00               	movlw	0
 12335  002446  6E3C               	movwf	(___fldiv@a+3)^0,c
 12336  002448                     l4526:
 12337  002448  5039               	movf	___fldiv@a^0,w,c
 12338  00244A  103A               	iorwf	(___fldiv@a+1)^0,w,c
 12339  00244C  103B               	iorwf	(___fldiv@a+2)^0,w,c
 12340  00244E  103C               	iorwf	(___fldiv@a+3)^0,w,c
 12341  002450  A4D8               	btfss	status,2,c
 12342  002452  EF2D  F012         	goto	u4651
 12343  002456  EF2F  F012         	goto	u4650
 12344  00245A                     u4651:
 12345  00245A  EF47  F012         	goto	l4538
 12346  00245E                     u4650:
 12347  00245E  0E00               	movlw	0
 12348  002460  6E35               	movwf	___fldiv@b^0,c
 12349  002462  0E00               	movlw	0
 12350  002464  6E36               	movwf	(___fldiv@b+1)^0,c
 12351  002466  0E00               	movlw	0
 12352  002468  6E37               	movwf	(___fldiv@b+2)^0,c
 12353  00246A  0E00               	movlw	0
 12354  00246C  6E38               	movwf	(___fldiv@b+3)^0,c
 12355  00246E  0E80               	movlw	128
 12356  002470  1237               	iorwf	(___fldiv@b+2)^0,f,c
 12357  002472  0E7F               	movlw	127
 12358  002474  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12359  002476                     l4532:
 12360  002476  5045               	movf	___fldiv@sign^0,w,c
 12361  002478  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12362  00247A  C035  F035         	movff	___fldiv@b,?___fldiv
 12363  00247E  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 12364  002482  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 12365  002486  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 12366  00248A  EF8A  F013         	goto	l1273
 12367  00248E                     l4538:
 12368  00248E  504C               	movf	___fldiv@bexp^0,w,c
 12369  002490  A4D8               	btfss	status,2,c
 12370  002492  EF4D  F012         	goto	u4661
 12371  002496  EF4F  F012         	goto	u4660
 12372  00249A                     u4661:
 12373  00249A  EF59  F012         	goto	l4546
 12374  00249E                     u4660:
 12375  00249E  0E00               	movlw	0
 12376  0024A0  6E35               	movwf	?___fldiv^0,c
 12377  0024A2  0E00               	movlw	0
 12378  0024A4  6E36               	movwf	(?___fldiv+1)^0,c
 12379  0024A6  0E00               	movlw	0
 12380  0024A8  6E37               	movwf	(?___fldiv+2)^0,c
 12381  0024AA  0E00               	movlw	0
 12382  0024AC  6E38               	movwf	(?___fldiv+3)^0,c
 12383  0024AE  EF8A  F013         	goto	l1273
 12384  0024B2                     l4546:
 12385  0024B2  504D               	movf	___fldiv@aexp^0,w,c
 12386  0024B4  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 12387  0024B8  6A3E               	clrf	(??___fldiv+1)^0,c
 12388  0024BA  5E3D               	subwf	??___fldiv^0,f,c
 12389  0024BC  0E00               	movlw	0
 12390  0024BE  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 12391  0024C0  0E7F               	movlw	127
 12392  0024C2  243D               	addwf	??___fldiv^0,w,c
 12393  0024C4  6E46               	movwf	___fldiv@new_exp^0,c
 12394  0024C6  0E00               	movlw	0
 12395  0024C8  203E               	addwfc	(??___fldiv+1)^0,w,c
 12396  0024CA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12397  0024CC  C035  F041         	movff	___fldiv@b,___fldiv@rem
 12398  0024D0  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 12399  0024D4  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 12400  0024D8  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 12401  0024DC  0E00               	movlw	0
 12402  0024DE  6E35               	movwf	___fldiv@b^0,c
 12403  0024E0  0E00               	movlw	0
 12404  0024E2  6E36               	movwf	(___fldiv@b+1)^0,c
 12405  0024E4  0E00               	movlw	0
 12406  0024E6  6E37               	movwf	(___fldiv@b+2)^0,c
 12407  0024E8  0E00               	movlw	0
 12408  0024EA  6E38               	movwf	(___fldiv@b+3)^0,c
 12409  0024EC  0E00               	movlw	0
 12410  0024EE  6E48               	movwf	___fldiv@grs^0,c
 12411  0024F0  0E00               	movlw	0
 12412  0024F2  6E49               	movwf	(___fldiv@grs+1)^0,c
 12413  0024F4  0E00               	movlw	0
 12414  0024F6  6E4A               	movwf	(___fldiv@grs+2)^0,c
 12415  0024F8  0E00               	movlw	0
 12416  0024FA  6E4B               	movwf	(___fldiv@grs+3)^0,c
 12417  0024FC  0E00               	movlw	0
 12418  0024FE  6E4D               	movwf	___fldiv@aexp^0,c
 12419  002500  EFBA  F012         	goto	l1275
 12420  002504                     l4556:
 12421  002504  504D               	movf	___fldiv@aexp^0,w,c
 12422  002506  B4D8               	btfsc	status,2,c
 12423  002508  EF88  F012         	goto	u4671
 12424  00250C  EF8A  F012         	goto	u4670
 12425  002510                     u4671:
 12426  002510  EFA1  F012         	goto	l4564
 12427  002514                     u4670:
 12428  002514  90D8               	bcf	status,0,c
 12429  002516  3641               	rlcf	___fldiv@rem^0,f,c
 12430  002518  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 12431  00251A  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 12432  00251C  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 12433  00251E  90D8               	bcf	status,0,c
 12434  002520  3635               	rlcf	___fldiv@b^0,f,c
 12435  002522  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12436  002524  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12437  002526  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12438  002528  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12439  00252A  EF99  F012         	goto	u4681
 12440  00252E  EF9B  F012         	goto	u4680
 12441  002532                     u4681:
 12442  002532  EF9C  F012         	goto	l1278
 12443  002536                     u4680:
 12444  002536  8035               	bsf	___fldiv@b^0,0,c
 12445  002538                     l1278:
 12446  002538  90D8               	bcf	status,0,c
 12447  00253A  3648               	rlcf	___fldiv@grs^0,f,c
 12448  00253C  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12449  00253E  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12450  002540  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12451  002542                     l4564:
 12452  002542  5039               	movf	___fldiv@a^0,w,c
 12453  002544  5C41               	subwf	___fldiv@rem^0,w,c
 12454  002546  503A               	movf	(___fldiv@a+1)^0,w,c
 12455  002548  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 12456  00254A  503B               	movf	(___fldiv@a+2)^0,w,c
 12457  00254C  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 12458  00254E  503C               	movf	(___fldiv@a+3)^0,w,c
 12459  002550  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 12460  002552  A0D8               	btfss	status,0,c
 12461  002554  EFAE  F012         	goto	u4691
 12462  002558  EFB0  F012         	goto	u4690
 12463  00255C                     u4691:
 12464  00255C  EFB9  F012         	goto	l4570
 12465  002560                     u4690:
 12466  002560  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 12467  002562  5039               	movf	___fldiv@a^0,w,c
 12468  002564  5E41               	subwf	___fldiv@rem^0,f,c
 12469  002566  503A               	movf	(___fldiv@a+1)^0,w,c
 12470  002568  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 12471  00256A  503B               	movf	(___fldiv@a+2)^0,w,c
 12472  00256C  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 12473  00256E  503C               	movf	(___fldiv@a+3)^0,w,c
 12474  002570  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 12475  002572                     l4570:
 12476  002572  2A4D               	incf	___fldiv@aexp^0,f,c
 12477  002574                     l1275:
 12478  002574  0E19               	movlw	25
 12479  002576  644D               	cpfsgt	___fldiv@aexp^0,c
 12480  002578  EFC0  F012         	goto	u4701
 12481  00257C  EFC2  F012         	goto	u4700
 12482  002580                     u4701:
 12483  002580  EF82  F012         	goto	l4556
 12484  002584                     u4700:
 12485  002584  5041               	movf	___fldiv@rem^0,w,c
 12486  002586  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 12487  002588  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 12488  00258A  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 12489  00258C  B4D8               	btfsc	status,2,c
 12490  00258E  EFCB  F012         	goto	u4711
 12491  002592  EFCD  F012         	goto	u4710
 12492  002596                     u4711:
 12493  002596  EFE5  F012         	goto	l4582
 12494  00259A                     u4710:
 12495  00259A  8048               	bsf	___fldiv@grs^0,0,c
 12496  00259C  EFE5  F012         	goto	l4582
 12497  0025A0                     l4576:
 12498  0025A0  90D8               	bcf	status,0,c
 12499  0025A2  3635               	rlcf	___fldiv@b^0,f,c
 12500  0025A4  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12501  0025A6  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12502  0025A8  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12503  0025AA  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12504  0025AC  EFDA  F012         	goto	u4721
 12505  0025B0  EFDC  F012         	goto	u4720
 12506  0025B4                     u4721:
 12507  0025B4  EFDD  F012         	goto	l1284
 12508  0025B8                     u4720:
 12509  0025B8  8035               	bsf	___fldiv@b^0,0,c
 12510  0025BA                     l1284:
 12511  0025BA  90D8               	bcf	status,0,c
 12512  0025BC  3648               	rlcf	___fldiv@grs^0,f,c
 12513  0025BE  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12514  0025C0  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12515  0025C2  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12516  0025C4  0646               	decf	___fldiv@new_exp^0,f,c
 12517  0025C6  A0D8               	btfss	status,0,c
 12518  0025C8  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 12519  0025CA                     l4582:
 12520  0025CA  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12521  0025CC  EFEA  F012         	goto	u4731
 12522  0025D0  EFEC  F012         	goto	u4730
 12523  0025D4                     u4731:
 12524  0025D4  EFD0  F012         	goto	l4576
 12525  0025D8                     u4730:
 12526  0025D8  0E00               	movlw	0
 12527  0025DA  6E4D               	movwf	___fldiv@aexp^0,c
 12528  0025DC  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12529  0025DE  EFF3  F012         	goto	u4741
 12530  0025E2  EFF5  F012         	goto	u4740
 12531  0025E6                     u4741:
 12532  0025E6  EF19  F013         	goto	l1286
 12533  0025EA                     u4740:
 12534  0025EA  0EFF               	movlw	255
 12535  0025EC  1448               	andwf	___fldiv@grs^0,w,c
 12536  0025EE  6E3D               	movwf	??___fldiv^0,c
 12537  0025F0  0EFF               	movlw	255
 12538  0025F2  1449               	andwf	(___fldiv@grs+1)^0,w,c
 12539  0025F4  6E3E               	movwf	(??___fldiv+1)^0,c
 12540  0025F6  0EFF               	movlw	255
 12541  0025F8  144A               	andwf	(___fldiv@grs+2)^0,w,c
 12542  0025FA  6E3F               	movwf	(??___fldiv+2)^0,c
 12543  0025FC  0E7F               	movlw	127
 12544  0025FE  144B               	andwf	(___fldiv@grs+3)^0,w,c
 12545  002600  6E40               	movwf	(??___fldiv+3)^0,c
 12546  002602  503D               	movf	??___fldiv^0,w,c
 12547  002604  103E               	iorwf	(??___fldiv+1)^0,w,c
 12548  002606  103F               	iorwf	(??___fldiv+2)^0,w,c
 12549  002608  1040               	iorwf	(??___fldiv+3)^0,w,c
 12550  00260A  B4D8               	btfsc	status,2,c
 12551  00260C  EF0A  F013         	goto	u4751
 12552  002610  EF0C  F013         	goto	u4750
 12553  002614                     u4751:
 12554  002614  EF10  F013         	goto	l1287
 12555  002618                     u4750:
 12556  002618                     l4590:
 12557  002618  0E01               	movlw	1
 12558  00261A  6E4D               	movwf	___fldiv@aexp^0,c
 12559  00261C  EF19  F013         	goto	l1286
 12560  002620                     l1287:
 12561  002620  A035               	btfss	___fldiv@b^0,0,c
 12562  002622  EF15  F013         	goto	u4761
 12563  002626  EF17  F013         	goto	u4760
 12564  00262A                     u4761:
 12565  00262A  EF19  F013         	goto	l1286
 12566  00262E                     u4760:
 12567  00262E  EF0C  F013         	goto	l4590
 12568  002632                     l1286:
 12569  002632  504D               	movf	___fldiv@aexp^0,w,c
 12570  002634  B4D8               	btfsc	status,2,c
 12571  002636  EF1F  F013         	goto	u4771
 12572  00263A  EF21  F013         	goto	u4770
 12573  00263E                     u4771:
 12574  00263E  EF45  F013         	goto	l4602
 12575  002642                     u4770:
 12576  002642  0E01               	movlw	1
 12577  002644  2635               	addwf	___fldiv@b^0,f,c
 12578  002646  0E00               	movlw	0
 12579  002648  2236               	addwfc	(___fldiv@b+1)^0,f,c
 12580  00264A  2237               	addwfc	(___fldiv@b+2)^0,f,c
 12581  00264C  2238               	addwfc	(___fldiv@b+3)^0,f,c
 12582  00264E  A038               	btfss	(___fldiv@b+3)^0,0,c
 12583  002650  EF2C  F013         	goto	u4781
 12584  002654  EF2E  F013         	goto	u4780
 12585  002658                     u4781:
 12586  002658  EF45  F013         	goto	l4602
 12587  00265C                     u4780:
 12588  00265C  C035  F03D         	movff	___fldiv@b,??___fldiv
 12589  002660  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 12590  002664  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 12591  002668  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 12592  00266C  3440               	rlcf	(??___fldiv+3)^0,w,c
 12593  00266E  3240               	rrcf	(??___fldiv+3)^0,f,c
 12594  002670  323F               	rrcf	(??___fldiv+2)^0,f,c
 12595  002672  323E               	rrcf	(??___fldiv+1)^0,f,c
 12596  002674  323D               	rrcf	??___fldiv^0,f,c
 12597  002676  C03D  F035         	movff	??___fldiv,___fldiv@b
 12598  00267A  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 12599  00267E  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 12600  002682  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 12601  002686  4A46               	infsnz	___fldiv@new_exp^0,f,c
 12602  002688  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 12603  00268A                     l4602:
 12604  00268A  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12605  00268C  EF50  F013         	goto	u4791
 12606  002690  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12607  002692  E108               	bnz	u4790
 12608  002694  2846               	incf	___fldiv@new_exp^0,w,c
 12609  002696  A0D8               	btfss	status,0,c
 12610  002698  EF50  F013         	goto	u4791
 12611  00269C  EF52  F013         	goto	u4790
 12612  0026A0                     u4791:
 12613  0026A0  EF5D  F013         	goto	l4606
 12614  0026A4                     u4790:
 12615  0026A4  0E00               	movlw	0
 12616  0026A6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12617  0026A8  6846               	setf	___fldiv@new_exp^0,c
 12618  0026AA  0E00               	movlw	0
 12619  0026AC  6E35               	movwf	___fldiv@b^0,c
 12620  0026AE  0E00               	movlw	0
 12621  0026B0  6E36               	movwf	(___fldiv@b+1)^0,c
 12622  0026B2  0E00               	movlw	0
 12623  0026B4  6E37               	movwf	(___fldiv@b+2)^0,c
 12624  0026B6  0E00               	movlw	0
 12625  0026B8  6E38               	movwf	(___fldiv@b+3)^0,c
 12626  0026BA                     l4606:
 12627  0026BA  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12628  0026BC  EF6A  F013         	goto	u4800
 12629  0026C0  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12630  0026C2  E106               	bnz	u4801
 12631  0026C4  0446               	decf	___fldiv@new_exp^0,w,c
 12632  0026C6  B0D8               	btfsc	status,0,c
 12633  0026C8  EF68  F013         	goto	u4801
 12634  0026CC  EF6A  F013         	goto	u4800
 12635  0026D0                     u4801:
 12636  0026D0  EF78  F013         	goto	l4610
 12637  0026D4                     u4800:
 12638  0026D4  0E00               	movlw	0
 12639  0026D6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12640  0026D8  0E00               	movlw	0
 12641  0026DA  6E46               	movwf	___fldiv@new_exp^0,c
 12642  0026DC  0E00               	movlw	0
 12643  0026DE  6E35               	movwf	___fldiv@b^0,c
 12644  0026E0  0E00               	movlw	0
 12645  0026E2  6E36               	movwf	(___fldiv@b+1)^0,c
 12646  0026E4  0E00               	movlw	0
 12647  0026E6  6E37               	movwf	(___fldiv@b+2)^0,c
 12648  0026E8  0E00               	movlw	0
 12649  0026EA  6E38               	movwf	(___fldiv@b+3)^0,c
 12650  0026EC  0E00               	movlw	0
 12651  0026EE  6E45               	movwf	___fldiv@sign^0,c
 12652  0026F0                     l4610:
 12653  0026F0  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 12654  0026F4  A04C               	btfss	___fldiv@bexp^0,0,c
 12655  0026F6  EF7F  F013         	goto	u4811
 12656  0026FA  EF81  F013         	goto	u4810
 12657  0026FE                     u4811:
 12658  0026FE  EF84  F013         	goto	l4616
 12659  002702                     u4810:
 12660  002702  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12661  002704  EF85  F013         	goto	l4618
 12662  002708                     l4616:
 12663  002708  9E37               	bcf	(___fldiv@b+2)^0,7,c
 12664  00270A                     l4618:
 12665  00270A  90D8               	bcf	status,0,c
 12666  00270C  304C               	rrcf	___fldiv@bexp^0,w,c
 12667  00270E  6E38               	movwf	(___fldiv@b+3)^0,c
 12668  002710  EF3B  F012         	goto	l4532
 12669  002714                     l1273:
 12670  002714  0012               	return		;funcret
 12671  002716                     __end_of___fldiv:
 12672                           	callstack 0
 12673                           
 12674 ;; *************** function ___awmod *****************
 12675 ;; Defined at:
 12676 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;  dividend        2    0[COMRAM] int 
 12679 ;;  divisor         2    2[COMRAM] int 
 12680 ;; Auto vars:     Size  Location     Type
 12681 ;;  sign            1    5[COMRAM] unsigned char 
 12682 ;;  counter         1    4[COMRAM] unsigned char 
 12683 ;; Return value:  Size  Location     Type
 12684 ;;                  2    0[COMRAM] int 
 12685 ;; Registers used:
 12686 ;;		wreg, status,2, status,0
 12687 ;; Tracked objects:
 12688 ;;		On entry : 0/0
 12689 ;;		On exit  : 0/0
 12690 ;;		Unchanged: 0/0
 12691 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12692 ;;      Params:         4       0       0       0       0       0       0
 12693 ;;      Locals:         2       0       0       0       0       0       0
 12694 ;;      Temps:          0       0       0       0       0       0       0
 12695 ;;      Totals:         6       0       0       0       0       0       0
 12696 ;;Total ram usage:        6 bytes
 12697 ;; Hardware stack levels used:    1
 12698 ;; Hardware stack levels required when called:    1
 12699 ;; This function calls:
 12700 ;;		Nothing
 12701 ;; This function is called by:
 12702 ;;		_efgtoa
 12703 ;; This function uses a non-reentrant model
 12704 ;;
 12705                           
 12706                           	psect	text48
 12707  004B2E                     __ptext48:
 12708                           	callstack 0
 12709  004B2E                     ___awmod:
 12710                           	callstack 22
 12711  004B2E  0E00               	movlw	0
 12712  004B30  6E06               	movwf	___awmod@sign^0,c
 12713  004B32  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12714  004B34  EFA0  F025         	goto	u5070
 12715  004B38  EF9E  F025         	goto	u5071
 12716  004B3C                     u5071:
 12717  004B3C  EFA6  F025         	goto	l4814
 12718  004B40                     u5070:
 12719  004B40  6C01               	negf	___awmod@dividend^0,c
 12720  004B42  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12721  004B44  B0D8               	btfsc	status,0,c
 12722  004B46  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12723  004B48  0E01               	movlw	1
 12724  004B4A  6E06               	movwf	___awmod@sign^0,c
 12725  004B4C                     l4814:
 12726  004B4C  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12727  004B4E  EFAD  F025         	goto	u5080
 12728  004B52  EFAB  F025         	goto	u5081
 12729  004B56                     u5081:
 12730  004B56  EFB1  F025         	goto	l4818
 12731  004B5A                     u5080:
 12732  004B5A  6C03               	negf	___awmod@divisor^0,c
 12733  004B5C  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12734  004B5E  B0D8               	btfsc	status,0,c
 12735  004B60  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12736  004B62                     l4818:
 12737  004B62  5003               	movf	___awmod@divisor^0,w,c
 12738  004B64  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12739  004B66  B4D8               	btfsc	status,2,c
 12740  004B68  EFB8  F025         	goto	u5091
 12741  004B6C  EFBA  F025         	goto	u5090
 12742  004B70                     u5091:
 12743  004B70  EFDE  F025         	goto	l4834
 12744  004B74                     u5090:
 12745  004B74  0E01               	movlw	1
 12746  004B76  6E05               	movwf	___awmod@counter^0,c
 12747  004B78  EFC2  F025         	goto	l4824
 12748  004B7C                     l4822:
 12749  004B7C  90D8               	bcf	status,0,c
 12750  004B7E  3603               	rlcf	___awmod@divisor^0,f,c
 12751  004B80  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12752  004B82  2A05               	incf	___awmod@counter^0,f,c
 12753  004B84                     l4824:
 12754  004B84  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12755  004B86  EFC7  F025         	goto	u5101
 12756  004B8A  EFC9  F025         	goto	u5100
 12757  004B8E                     u5101:
 12758  004B8E  EFBE  F025         	goto	l4822
 12759  004B92                     u5100:
 12760  004B92                     l4826:
 12761  004B92  5003               	movf	___awmod@divisor^0,w,c
 12762  004B94  5C01               	subwf	___awmod@dividend^0,w,c
 12763  004B96  5004               	movf	(___awmod@divisor+1)^0,w,c
 12764  004B98  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12765  004B9A  A0D8               	btfss	status,0,c
 12766  004B9C  EFD2  F025         	goto	u5111
 12767  004BA0  EFD4  F025         	goto	u5110
 12768  004BA4                     u5111:
 12769  004BA4  EFD8  F025         	goto	l4830
 12770  004BA8                     u5110:
 12771  004BA8  5003               	movf	___awmod@divisor^0,w,c
 12772  004BAA  5E01               	subwf	___awmod@dividend^0,f,c
 12773  004BAC  5004               	movf	(___awmod@divisor+1)^0,w,c
 12774  004BAE  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12775  004BB0                     l4830:
 12776  004BB0  90D8               	bcf	status,0,c
 12777  004BB2  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12778  004BB4  3203               	rrcf	___awmod@divisor^0,f,c
 12779  004BB6  2E05               	decfsz	___awmod@counter^0,f,c
 12780  004BB8  EFC9  F025         	goto	l4826
 12781  004BBC                     l4834:
 12782  004BBC  5006               	movf	___awmod@sign^0,w,c
 12783  004BBE  B4D8               	btfsc	status,2,c
 12784  004BC0  EFE4  F025         	goto	u5121
 12785  004BC4  EFE6  F025         	goto	u5120
 12786  004BC8                     u5121:
 12787  004BC8  EFEA  F025         	goto	l4838
 12788  004BCC                     u5120:
 12789  004BCC  6C01               	negf	___awmod@dividend^0,c
 12790  004BCE  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12791  004BD0  B0D8               	btfsc	status,0,c
 12792  004BD2  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12793  004BD4                     l4838:
 12794  004BD4  C001  F001         	movff	___awmod@dividend,?___awmod
 12795  004BD8  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12796  004BDC  0012               	return		;funcret
 12797  004BDE                     __end_of___awmod:
 12798                           	callstack 0
 12799                           
 12800 ;; *************** function ___awdiv *****************
 12801 ;; Defined at:
 12802 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12803 ;; Parameters:    Size  Location     Type
 12804 ;;  dividend        2    0[COMRAM] int 
 12805 ;;  divisor         2    2[COMRAM] int 
 12806 ;; Auto vars:     Size  Location     Type
 12807 ;;  quotient        2    6[COMRAM] int 
 12808 ;;  sign            1    5[COMRAM] unsigned char 
 12809 ;;  counter         1    4[COMRAM] unsigned char 
 12810 ;; Return value:  Size  Location     Type
 12811 ;;                  2    0[COMRAM] int 
 12812 ;; Registers used:
 12813 ;;		wreg, status,2, status,0
 12814 ;; Tracked objects:
 12815 ;;		On entry : 0/0
 12816 ;;		On exit  : 0/0
 12817 ;;		Unchanged: 0/0
 12818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12819 ;;      Params:         4       0       0       0       0       0       0
 12820 ;;      Locals:         4       0       0       0       0       0       0
 12821 ;;      Temps:          0       0       0       0       0       0       0
 12822 ;;      Totals:         8       0       0       0       0       0       0
 12823 ;;Total ram usage:        8 bytes
 12824 ;; Hardware stack levels used:    1
 12825 ;; Hardware stack levels required when called:    1
 12826 ;; This function calls:
 12827 ;;		Nothing
 12828 ;; This function is called by:
 12829 ;;		_efgtoa
 12830 ;; This function uses a non-reentrant model
 12831 ;;
 12832                           
 12833                           	psect	text49
 12834  0049B8                     __ptext49:
 12835                           	callstack 0
 12836  0049B8                     ___awdiv:
 12837                           	callstack 22
 12838  0049B8  0E00               	movlw	0
 12839  0049BA  6E06               	movwf	___awdiv@sign^0,c
 12840  0049BC  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12841  0049BE  EFE5  F024         	goto	u5010
 12842  0049C2  EFE3  F024         	goto	u5011
 12843  0049C6                     u5011:
 12844  0049C6  EFEB  F024         	goto	l4770
 12845  0049CA                     u5010:
 12846  0049CA  6C03               	negf	___awdiv@divisor^0,c
 12847  0049CC  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12848  0049CE  B0D8               	btfsc	status,0,c
 12849  0049D0  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12850  0049D2  0E01               	movlw	1
 12851  0049D4  6E06               	movwf	___awdiv@sign^0,c
 12852  0049D6                     l4770:
 12853  0049D6  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12854  0049D8  EFF2  F024         	goto	u5020
 12855  0049DC  EFF0  F024         	goto	u5021
 12856  0049E0                     u5021:
 12857  0049E0  EFF8  F024         	goto	l4776
 12858  0049E4                     u5020:
 12859  0049E4  6C01               	negf	___awdiv@dividend^0,c
 12860  0049E6  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12861  0049E8  B0D8               	btfsc	status,0,c
 12862  0049EA  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12863  0049EC  0E01               	movlw	1
 12864  0049EE  1A06               	xorwf	___awdiv@sign^0,f,c
 12865  0049F0                     l4776:
 12866  0049F0  0E00               	movlw	0
 12867  0049F2  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12868  0049F4  0E00               	movlw	0
 12869  0049F6  6E07               	movwf	___awdiv@quotient^0,c
 12870  0049F8  5003               	movf	___awdiv@divisor^0,w,c
 12871  0049FA  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12872  0049FC  B4D8               	btfsc	status,2,c
 12873  0049FE  EF03  F025         	goto	u5031
 12874  004A02  EF05  F025         	goto	u5030
 12875  004A06                     u5031:
 12876  004A06  EF2D  F025         	goto	l4798
 12877  004A0A                     u5030:
 12878  004A0A  0E01               	movlw	1
 12879  004A0C  6E05               	movwf	___awdiv@counter^0,c
 12880  004A0E  EF0D  F025         	goto	l4784
 12881  004A12                     l4782:
 12882  004A12  90D8               	bcf	status,0,c
 12883  004A14  3603               	rlcf	___awdiv@divisor^0,f,c
 12884  004A16  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12885  004A18  2A05               	incf	___awdiv@counter^0,f,c
 12886  004A1A                     l4784:
 12887  004A1A  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12888  004A1C  EF12  F025         	goto	u5041
 12889  004A20  EF14  F025         	goto	u5040
 12890  004A24                     u5041:
 12891  004A24  EF09  F025         	goto	l4782
 12892  004A28                     u5040:
 12893  004A28                     l4786:
 12894  004A28  90D8               	bcf	status,0,c
 12895  004A2A  3607               	rlcf	___awdiv@quotient^0,f,c
 12896  004A2C  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12897  004A2E  5003               	movf	___awdiv@divisor^0,w,c
 12898  004A30  5C01               	subwf	___awdiv@dividend^0,w,c
 12899  004A32  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12900  004A34  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12901  004A36  A0D8               	btfss	status,0,c
 12902  004A38  EF20  F025         	goto	u5051
 12903  004A3C  EF22  F025         	goto	u5050
 12904  004A40                     u5051:
 12905  004A40  EF27  F025         	goto	l4794
 12906  004A44                     u5050:
 12907  004A44  5003               	movf	___awdiv@divisor^0,w,c
 12908  004A46  5E01               	subwf	___awdiv@dividend^0,f,c
 12909  004A48  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12910  004A4A  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12911  004A4C  8007               	bsf	___awdiv@quotient^0,0,c
 12912  004A4E                     l4794:
 12913  004A4E  90D8               	bcf	status,0,c
 12914  004A50  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12915  004A52  3203               	rrcf	___awdiv@divisor^0,f,c
 12916  004A54  2E05               	decfsz	___awdiv@counter^0,f,c
 12917  004A56  EF14  F025         	goto	l4786
 12918  004A5A                     l4798:
 12919  004A5A  5006               	movf	___awdiv@sign^0,w,c
 12920  004A5C  B4D8               	btfsc	status,2,c
 12921  004A5E  EF33  F025         	goto	u5061
 12922  004A62  EF35  F025         	goto	u5060
 12923  004A66                     u5061:
 12924  004A66  EF39  F025         	goto	l4802
 12925  004A6A                     u5060:
 12926  004A6A  6C07               	negf	___awdiv@quotient^0,c
 12927  004A6C  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12928  004A6E  B0D8               	btfsc	status,0,c
 12929  004A70  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12930  004A72                     l4802:
 12931  004A72  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12932  004A76  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12933  004A7A  0012               	return		;funcret
 12934  004A7C                     __end_of___awdiv:
 12935                           	callstack 0
 12936                           
 12937 ;; *************** function _dtoa *****************
 12938 ;; Defined at:
 12939 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12940 ;; Parameters:    Size  Location     Type
 12941 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12942 ;;		 -> sprintf@f(6), 
 12943 ;;  d               8   29[COMRAM] long long 
 12944 ;; Auto vars:     Size  Location     Type
 12945 ;;  n               8   53[COMRAM] long long 
 12946 ;;  i               2   61[COMRAM] int 
 12947 ;;  s               2   51[COMRAM] int 
 12948 ;;  w               2   49[COMRAM] int 
 12949 ;;  p               2   47[COMRAM] int 
 12950 ;; Return value:  Size  Location     Type
 12951 ;;                  2   27[COMRAM] int 
 12952 ;; Registers used:
 12953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12954 ;; Tracked objects:
 12955 ;;		On entry : 0/0
 12956 ;;		On exit  : 0/0
 12957 ;;		Unchanged: 0/0
 12958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12959 ;;      Params:        10       0       0       0       0       0       0
 12960 ;;      Locals:        18       0       0       0       0       0       0
 12961 ;;      Temps:          8       0       0       0       0       0       0
 12962 ;;      Totals:        36       0       0       0       0       0       0
 12963 ;;Total ram usage:       36 bytes
 12964 ;; Hardware stack levels used:    1
 12965 ;; Hardware stack levels required when called:    5
 12966 ;; This function calls:
 12967 ;;		___aodiv
 12968 ;;		___aomod
 12969 ;;		_abs
 12970 ;;		_pad
 12971 ;; This function is called by:
 12972 ;;		_vfpfcnvrt
 12973 ;; This function uses a non-reentrant model
 12974 ;;
 12975                           
 12976                           	psect	text50
 12977  0029FC                     __ptext50:
 12978                           	callstack 0
 12979  0029FC                     _dtoa:
 12980                           	callstack 19
 12981  0029FC                     
 12982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12983  0029FC  C01E  F036         	movff	dtoa@d,dtoa@n
 12984  002A00  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12985  002A04  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12986  002A08  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12987  002A0C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12988  002A10  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12989  002A14  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12990  002A18  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12991  002A1C                     
 12992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12993  002A1C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12994  002A1E  EF13  F015         	goto	u5601
 12995  002A22  EF16  F015         	goto	u5600
 12996  002A26                     u5601:
 12997  002A26  0E01               	movlw	1
 12998  002A28  EF17  F015         	goto	u5610
 12999  002A2C                     u5600:
 13000  002A2C  0E00               	movlw	0
 13001  002A2E                     u5610:
 13002  002A2E  6E34               	movwf	dtoa@s^0,c
 13003  002A30  6A35               	clrf	(dtoa@s+1)^0,c
 13004                           
 13005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 13006  002A32  5034               	movf	dtoa@s^0,w,c
 13007  002A34  1035               	iorwf	(dtoa@s+1)^0,w,c
 13008  002A36  B4D8               	btfsc	status,2,c
 13009  002A38  EF20  F015         	goto	u5621
 13010  002A3C  EF22  F015         	goto	u5620
 13011  002A40                     u5621:
 13012  002A40  EF32  F015         	goto	l5044
 13013  002A44                     u5620:
 13014  002A44                     
 13015                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 13016  002A44  1E3D               	comf	(dtoa@n+7)^0,f,c
 13017  002A46  1E3C               	comf	(dtoa@n+6)^0,f,c
 13018  002A48  1E3B               	comf	(dtoa@n+5)^0,f,c
 13019  002A4A  1E3A               	comf	(dtoa@n+4)^0,f,c
 13020  002A4C  1E39               	comf	(dtoa@n+3)^0,f,c
 13021  002A4E  1E38               	comf	(dtoa@n+2)^0,f,c
 13022  002A50  1E37               	comf	(dtoa@n+1)^0,f,c
 13023  002A52  6C36               	negf	dtoa@n^0,c
 13024  002A54  0E00               	movlw	0
 13025  002A56  2237               	addwfc	(dtoa@n+1)^0,f,c
 13026  002A58  2238               	addwfc	(dtoa@n+2)^0,f,c
 13027  002A5A  2239               	addwfc	(dtoa@n+3)^0,f,c
 13028  002A5C  223A               	addwfc	(dtoa@n+4)^0,f,c
 13029  002A5E  223B               	addwfc	(dtoa@n+5)^0,f,c
 13030  002A60  223C               	addwfc	(dtoa@n+6)^0,f,c
 13031  002A62  223D               	addwfc	(dtoa@n+7)^0,f,c
 13032  002A64                     l5044:
 13033                           
 13034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 13035  002A64  0100               	movlb	0	; () banked
 13036  002A66  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 13037  002A68  EF38  F015         	goto	u5631
 13038  002A6C  EF3A  F015         	goto	u5630
 13039  002A70                     u5631:
 13040  002A70  EF3B  F015         	goto	l5048
 13041  002A74                     u5630:
 13042  002A74                     
 13043                           ; BSR set to: 0
 13044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 13045  002A74  93F8               	bcf	_flags& (0+255),1,b
 13046  002A76                     l5048:
 13047                           
 13048                           ; BSR set to: 0
 13049                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 13050  002A76  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 13051  002A78  EF48  F015         	goto	u5640
 13052  002A7C  51F7               	movf	(_prec+1)& (0+255),w,b
 13053  002A7E  E106               	bnz	u5641
 13054  002A80  05F6               	decf	_prec& (0+255),w,b
 13055  002A82  B0D8               	btfsc	status,0,c
 13056  002A84  EF46  F015         	goto	u5641
 13057  002A88  EF48  F015         	goto	u5640
 13058  002A8C                     u5641:
 13059  002A8C  EF4E  F015         	goto	l1428
 13060  002A90                     u5640:
 13061  002A90                     
 13062                           ; BSR set to: 0
 13063  002A90  0E00               	movlw	0
 13064  002A92  6E31               	movwf	(dtoa@p+1)^0,c
 13065  002A94  0E01               	movlw	1
 13066  002A96  6E30               	movwf	dtoa@p^0,c
 13067  002A98  EF52  F015         	goto	l1430
 13068  002A9C                     l1428:
 13069                           
 13070                           ; BSR set to: 0
 13071  002A9C  C0F6  F030         	movff	_prec,dtoa@p
 13072  002AA0  C0F7  F031         	movff	_prec+1,dtoa@p+1
 13073  002AA4                     l1430:
 13074                           
 13075                           ; BSR set to: 0
 13076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 13077  002AA4  C1B1  F032         	movff	_width,dtoa@w
 13078  002AA8  C1B2  F033         	movff	_width+1,dtoa@w+1
 13079  002AAC                     
 13080                           ; BSR set to: 0
 13081                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 13082  002AAC  5034               	movf	dtoa@s^0,w,c
 13083  002AAE  1035               	iorwf	(dtoa@s+1)^0,w,c
 13084  002AB0  A4D8               	btfss	status,2,c
 13085  002AB2  EF5D  F015         	goto	u5651
 13086  002AB6  EF5F  F015         	goto	u5650
 13087  002ABA                     u5651:
 13088  002ABA  EF66  F015         	goto	l5056
 13089  002ABE                     u5650:
 13090  002ABE                     
 13091                           ; BSR set to: 0
 13092  002ABE  A5F8               	btfss	_flags& (0+255),2,b
 13093  002AC0  EF64  F015         	goto	u5661
 13094  002AC4  EF66  F015         	goto	u5660
 13095  002AC8                     u5661:
 13096  002AC8  EF69  F015         	goto	l5058
 13097  002ACC                     u5660:
 13098  002ACC                     l5056:
 13099                           
 13100                           ; BSR set to: 0
 13101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 13102  002ACC  0632               	decf	dtoa@w^0,f,c
 13103  002ACE  A0D8               	btfss	status,0,c
 13104  002AD0  0633               	decf	(dtoa@w+1)^0,f,c
 13105  002AD2                     l5058:
 13106                           
 13107                           ; BSR set to: 0
 13108                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 13109  002AD2  0E00               	movlw	0
 13110  002AD4  6E3F               	movwf	(dtoa@i+1)^0,c
 13111  002AD6  0E4F               	movlw	79
 13112  002AD8  6E3E               	movwf	dtoa@i^0,c
 13113  002ADA                     
 13114                           ; BSR set to: 0
 13115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 13116  002ADA  0E00               	movlw	0
 13117  002ADC  0102               	movlb	2	; () banked
 13118  002ADE  6FAF               	movwf	(_dbuf+79)& (0+255),b
 13119                           
 13120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13121  002AE0  EFEE  F015         	goto	l5072
 13122  002AE4                     l5062:
 13123                           
 13124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 13125  002AE4  063E               	decf	dtoa@i^0,f,c
 13126  002AE6  A0D8               	btfss	status,0,c
 13127  002AE8  063F               	decf	(dtoa@i+1)^0,f,c
 13128  002AEA                     
 13129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 13130  002AEA  0E60               	movlw	low _dbuf
 13131  002AEC  243E               	addwf	dtoa@i^0,w,c
 13132  002AEE  6ED9               	movwf	fsr2l,c
 13133  002AF0  0E02               	movlw	high _dbuf
 13134  002AF2  203F               	addwfc	(dtoa@i+1)^0,w,c
 13135  002AF4  6EDA               	movwf	fsr2h,c
 13136  002AF6  C036  F001         	movff	dtoa@n,___aomod@dividend
 13137  002AFA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 13138  002AFE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 13139  002B02  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 13140  002B06  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 13141  002B0A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 13142  002B0E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 13143  002B12  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 13144  002B16  0E0A               	movlw	10
 13145  002B18  6E09               	movwf	___aomod@divisor^0,c
 13146  002B1A  0E00               	movlw	0
 13147  002B1C  6E0A               	movwf	(___aomod@divisor+1)^0,c
 13148  002B1E  0E00               	movlw	0
 13149  002B20  6E0B               	movwf	(___aomod@divisor+2)^0,c
 13150  002B22  0E00               	movlw	0
 13151  002B24  6E0C               	movwf	(___aomod@divisor+3)^0,c
 13152  002B26  0E00               	movlw	0
 13153  002B28  6E0D               	movwf	(___aomod@divisor+4)^0,c
 13154  002B2A  0E00               	movlw	0
 13155  002B2C  6E0E               	movwf	(___aomod@divisor+5)^0,c
 13156  002B2E  0E00               	movlw	0
 13157  002B30  6E0F               	movwf	(___aomod@divisor+6)^0,c
 13158  002B32  0E00               	movlw	0
 13159  002B34  6E10               	movwf	(___aomod@divisor+7)^0,c
 13160  002B36  ECDC  F01D         	call	___aomod	;wreg free
 13161  002B3A  C001  F026         	movff	?___aomod,??_dtoa
 13162  002B3E  C002  F027         	movff	?___aomod+1,??_dtoa+1
 13163  002B42  C003  F028         	movff	?___aomod+2,??_dtoa+2
 13164  002B46  C004  F029         	movff	?___aomod+3,??_dtoa+3
 13165  002B4A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 13166  002B4E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 13167  002B52  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 13168  002B56  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 13169  002B5A  C026  F013         	movff	??_dtoa,abs@a
 13170  002B5E  C028  F014         	movff	??_dtoa+2,abs@a+1
 13171  002B62  EC24  F02A         	call	_abs	;wreg free
 13172  002B66  5013               	movf	?_abs^0,w,c
 13173  002B68  0F30               	addlw	48
 13174  002B6A  6EDF               	movwf	indf2,c
 13175  002B6C                     
 13176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 13177  002B6C  0630               	decf	dtoa@p^0,f,c
 13178  002B6E  A0D8               	btfss	status,0,c
 13179  002B70  0631               	decf	(dtoa@p+1)^0,f,c
 13180  002B72                     
 13181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 13182  002B72  0632               	decf	dtoa@w^0,f,c
 13183  002B74  A0D8               	btfss	status,0,c
 13184  002B76  0633               	decf	(dtoa@w+1)^0,f,c
 13185  002B78                     
 13186                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 13187  002B78  C036  F001         	movff	dtoa@n,___aodiv@dividend
 13188  002B7C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 13189  002B80  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 13190  002B84  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 13191  002B88  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 13192  002B8C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 13193  002B90  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 13194  002B94  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 13195  002B98  0E0A               	movlw	10
 13196  002B9A  6E09               	movwf	___aodiv@divisor^0,c
 13197  002B9C  0E00               	movlw	0
 13198  002B9E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 13199  002BA0  0E00               	movlw	0
 13200  002BA2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 13201  002BA4  0E00               	movlw	0
 13202  002BA6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 13203  002BA8  0E00               	movlw	0
 13204  002BAA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 13205  002BAC  0E00               	movlw	0
 13206  002BAE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 13207  002BB0  0E00               	movlw	0
 13208  002BB2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 13209  002BB4  0E00               	movlw	0
 13210  002BB6  6E10               	movwf	(___aodiv@divisor+7)^0,c
 13211  002BB8  EC18  F01D         	call	___aodiv	;wreg free
 13212  002BBC  C001  F036         	movff	?___aodiv,dtoa@n
 13213  002BC0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 13214  002BC4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 13215  002BC8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 13216  002BCC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 13217  002BD0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 13218  002BD4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 13219  002BD8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 13220  002BDC                     l5072:
 13221                           
 13222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13223  002BDC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 13224  002BDE  EFF9  F015         	goto	u5671
 13225  002BE2  503F               	movf	(dtoa@i+1)^0,w,c
 13226  002BE4  E108               	bnz	u5670
 13227  002BE6  043E               	decf	dtoa@i^0,w,c
 13228  002BE8  A0D8               	btfss	status,0,c
 13229  002BEA  EFF9  F015         	goto	u5671
 13230  002BEE  EFFB  F015         	goto	u5670
 13231  002BF2                     u5671:
 13232  002BF2  EF2C  F016         	goto	l5082
 13233  002BF6                     u5670:
 13234  002BF6  5036               	movf	dtoa@n^0,w,c
 13235  002BF8  1037               	iorwf	(dtoa@n+1)^0,w,c
 13236  002BFA  1038               	iorwf	(dtoa@n+2)^0,w,c
 13237  002BFC  1039               	iorwf	(dtoa@n+3)^0,w,c
 13238  002BFE  103A               	iorwf	(dtoa@n+4)^0,w,c
 13239  002C00  103B               	iorwf	(dtoa@n+5)^0,w,c
 13240  002C02  103C               	iorwf	(dtoa@n+6)^0,w,c
 13241  002C04  103D               	iorwf	(dtoa@n+7)^0,w,c
 13242  002C06  A4D8               	btfss	status,2,c
 13243  002C08  EF08  F016         	goto	u5681
 13244  002C0C  EF0A  F016         	goto	u5680
 13245  002C10                     u5681:
 13246  002C10  EF72  F015         	goto	l5062
 13247  002C14                     u5680:
 13248  002C14  BE31               	btfsc	(dtoa@p+1)^0,7,c
 13249  002C16  EF17  F016         	goto	u5690
 13250  002C1A  5031               	movf	(dtoa@p+1)^0,w,c
 13251  002C1C  E106               	bnz	u5691
 13252  002C1E  0430               	decf	dtoa@p^0,w,c
 13253  002C20  B0D8               	btfsc	status,0,c
 13254  002C22  EF15  F016         	goto	u5691
 13255  002C26  EF17  F016         	goto	u5690
 13256  002C2A                     u5691:
 13257  002C2A  EF72  F015         	goto	l5062
 13258  002C2E                     u5690:
 13259  002C2E  BE33               	btfsc	(dtoa@w+1)^0,7,c
 13260  002C30  EF22  F016         	goto	u5701
 13261  002C34  5033               	movf	(dtoa@w+1)^0,w,c
 13262  002C36  E108               	bnz	u5700
 13263  002C38  0432               	decf	dtoa@w^0,w,c
 13264  002C3A  A0D8               	btfss	status,0,c
 13265  002C3C  EF22  F016         	goto	u5701
 13266  002C40  EF24  F016         	goto	u5700
 13267  002C44                     u5701:
 13268  002C44  EF2C  F016         	goto	l5082
 13269  002C48                     u5700:
 13270  002C48  0100               	movlb	0	; () banked
 13271  002C4A  B3F8               	btfsc	_flags& (0+255),1,b
 13272  002C4C  EF2A  F016         	goto	u5711
 13273  002C50  EF2C  F016         	goto	u5710
 13274  002C54                     u5711:
 13275  002C54  EF72  F015         	goto	l5062
 13276  002C58                     u5710:
 13277  002C58                     l5082:
 13278                           
 13279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 13280  002C58  5034               	movf	dtoa@s^0,w,c
 13281  002C5A  1035               	iorwf	(dtoa@s+1)^0,w,c
 13282  002C5C  A4D8               	btfss	status,2,c
 13283  002C5E  EF33  F016         	goto	u5721
 13284  002C62  EF35  F016         	goto	u5720
 13285  002C66                     u5721:
 13286  002C66  EF3D  F016         	goto	l5086
 13287  002C6A                     u5720:
 13288  002C6A  0100               	movlb	0	; () banked
 13289  002C6C  A5F8               	btfss	_flags& (0+255),2,b
 13290  002C6E  EF3B  F016         	goto	u5731
 13291  002C72  EF3D  F016         	goto	u5730
 13292  002C76                     u5731:
 13293  002C76  EF5B  F016         	goto	l5096
 13294  002C7A                     u5730:
 13295  002C7A                     l5086:
 13296                           
 13297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 13298  002C7A  063E               	decf	dtoa@i^0,f,c
 13299  002C7C  A0D8               	btfss	status,0,c
 13300  002C7E  063F               	decf	(dtoa@i+1)^0,f,c
 13301  002C80                     
 13302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 13303  002C80  5034               	movf	dtoa@s^0,w,c
 13304  002C82  1035               	iorwf	(dtoa@s+1)^0,w,c
 13305  002C84  A4D8               	btfss	status,2,c
 13306  002C86  EF47  F016         	goto	u5741
 13307  002C8A  EF49  F016         	goto	u5740
 13308  002C8E                     u5741:
 13309  002C8E  EF4F  F016         	goto	l5092
 13310  002C92                     u5740:
 13311  002C92  0E00               	movlw	0
 13312  002C94  6E2F               	movwf	(_dtoa$2955+1)^0,c
 13313  002C96  0E2B               	movlw	43
 13314  002C98  6E2E               	movwf	_dtoa$2955^0,c
 13315  002C9A  EF53  F016         	goto	l5094
 13316  002C9E                     l5092:
 13317  002C9E  0E00               	movlw	0
 13318  002CA0  6E2F               	movwf	(_dtoa$2955+1)^0,c
 13319  002CA2  0E2D               	movlw	45
 13320  002CA4  6E2E               	movwf	_dtoa$2955^0,c
 13321  002CA6                     l5094:
 13322  002CA6  0E60               	movlw	low _dbuf
 13323  002CA8  243E               	addwf	dtoa@i^0,w,c
 13324  002CAA  6ED9               	movwf	fsr2l,c
 13325  002CAC  0E02               	movlw	high _dbuf
 13326  002CAE  203F               	addwfc	(dtoa@i+1)^0,w,c
 13327  002CB0  6EDA               	movwf	fsr2h,c
 13328  002CB2  C02E  FFDF         	movff	_dtoa$2955,indf2
 13329  002CB6                     l5096:
 13330                           
 13331                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 13332  002CB6  C01C  F011         	movff	dtoa@fp,pad@fp
 13333  002CBA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13334  002CBE  0E60               	movlw	low _dbuf
 13335  002CC0  243E               	addwf	dtoa@i^0,w,c
 13336  002CC2  6E13               	movwf	pad@buf^0,c
 13337  002CC4  0E02               	movlw	high _dbuf
 13338  002CC6  203F               	addwfc	(dtoa@i+1)^0,w,c
 13339  002CC8  6E14               	movwf	(pad@buf+1)^0,c
 13340  002CCA  C032  F015         	movff	dtoa@w,pad@p
 13341  002CCE  C033  F016         	movff	dtoa@w+1,pad@p+1
 13342  002CD2  EC79  F024         	call	_pad	;wreg free
 13343  002CD6  C011  F01C         	movff	?_pad,?_dtoa
 13344  002CDA  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13345  002CDE  0012               	return		;funcret
 13346  002CE0                     __end_of_dtoa:
 13347                           	callstack 0
 13348                           
 13349 ;; *************** function _pad *****************
 13350 ;; Defined at:
 13351 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 13352 ;; Parameters:    Size  Location     Type
 13353 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13354 ;;		 -> sprintf@f(6), 
 13355 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13356 ;;		 -> dbuf(80), 
 13357 ;;  p               2   20[COMRAM] int 
 13358 ;; Auto vars:     Size  Location     Type
 13359 ;;  w               2   25[COMRAM] int 
 13360 ;;  i               2   23[COMRAM] int 
 13361 ;; Return value:  Size  Location     Type
 13362 ;;                  2   16[COMRAM] int 
 13363 ;; Registers used:
 13364 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13365 ;; Tracked objects:
 13366 ;;		On entry : 0/0
 13367 ;;		On exit  : 0/0
 13368 ;;		Unchanged: 0/0
 13369 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13370 ;;      Params:         6       0       0       0       0       0       0
 13371 ;;      Locals:         4       0       0       0       0       0       0
 13372 ;;      Temps:          1       0       0       0       0       0       0
 13373 ;;      Totals:        11       0       0       0       0       0       0
 13374 ;;Total ram usage:       11 bytes
 13375 ;; Hardware stack levels used:    1
 13376 ;; Hardware stack levels required when called:    4
 13377 ;; This function calls:
 13378 ;;		_fputc
 13379 ;;		_fputs
 13380 ;;		_strlen
 13381 ;; This function is called by:
 13382 ;;		_dtoa
 13383 ;;		_efgtoa
 13384 ;; This function uses a non-reentrant model
 13385 ;;
 13386                           
 13387                           	psect	text51
 13388  0048F2                     __ptext51:
 13389                           	callstack 0
 13390  0048F2                     _pad:
 13391                           	callstack 19
 13392  0048F2                     
 13393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13394  0048F2  0100               	movlb	0	; () banked
 13395  0048F4  A1F8               	btfss	_flags& (0+255),0,b
 13396  0048F6  EF7F  F024         	goto	u5291
 13397  0048FA  EF81  F024         	goto	u5290
 13398  0048FE                     u5291:
 13399  0048FE  EF8B  F024         	goto	l4936
 13400  004902                     u5290:
 13401  004902                     
 13402                           ; BSR set to: 0
 13403                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13404  004902  C013  F00A         	movff	pad@buf,fputs@s
 13405  004906  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13406  00490A  C011  F00C         	movff	pad@fp,fputs@fp
 13407  00490E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13408  004912  ECC1  F029         	call	_fputs	;wreg free
 13409  004916                     l4936:
 13410                           
 13411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13412  004916  BE16               	btfsc	(pad@p+1)^0,7,c
 13413  004918  EF90  F024         	goto	u5301
 13414  00491C  EF92  F024         	goto	u5300
 13415  004920                     u5301:
 13416  004920  EF98  F024         	goto	l4940
 13417  004924                     u5300:
 13418  004924  C015  F01A         	movff	pad@p,pad@w
 13419  004928  C016  F01B         	movff	pad@p+1,pad@w+1
 13420  00492C  EF9C  F024         	goto	l1417
 13421  004930                     l4940:
 13422  004930  0E00               	movlw	0
 13423  004932  6E1B               	movwf	(pad@w+1)^0,c
 13424  004934  0E00               	movlw	0
 13425  004936  6E1A               	movwf	pad@w^0,c
 13426  004938                     l1417:
 13427                           
 13428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13429  004938  0E00               	movlw	0
 13430  00493A  6E19               	movwf	(pad@i+1)^0,c
 13431  00493C  0E00               	movlw	0
 13432  00493E  6E18               	movwf	pad@i^0,c
 13433                           
 13434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13435  004940  EFAE  F024         	goto	l4946
 13436  004944                     l4942:
 13437                           
 13438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13439  004944  0E00               	movlw	0
 13440  004946  6E02               	movwf	(fputc@c+1)^0,c
 13441  004948  0E20               	movlw	32
 13442  00494A  6E01               	movwf	fputc@c^0,c
 13443  00494C  C011  F003         	movff	pad@fp,fputc@fp
 13444  004950  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13445  004954  EC14  F024         	call	_fputc	;wreg free
 13446  004958                     
 13447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13448  004958  4A18               	infsnz	pad@i^0,f,c
 13449  00495A  2A19               	incf	(pad@i+1)^0,f,c
 13450  00495C                     l4946:
 13451                           
 13452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13453  00495C  501A               	movf	pad@w^0,w,c
 13454  00495E  5C18               	subwf	pad@i^0,w,c
 13455  004960  5019               	movf	(pad@i+1)^0,w,c
 13456  004962  0A80               	xorlw	128
 13457  004964  6E17               	movwf	??_pad^0,c
 13458  004966  501B               	movf	(pad@w+1)^0,w,c
 13459  004968  0A80               	xorlw	128
 13460  00496A  5817               	subwfb	??_pad^0,w,c
 13461  00496C  A0D8               	btfss	status,0,c
 13462  00496E  EFBB  F024         	goto	u5311
 13463  004972  EFBD  F024         	goto	u5310
 13464  004976                     u5311:
 13465  004976  EFA2  F024         	goto	l4942
 13466  00497A                     u5310:
 13467  00497A                     
 13468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13469  00497A  0100               	movlb	0	; () banked
 13470  00497C  B1F8               	btfsc	_flags& (0+255),0,b
 13471  00497E  EFC3  F024         	goto	u5321
 13472  004982  EFC5  F024         	goto	u5320
 13473  004986                     u5321:
 13474  004986  EFCF  F024         	goto	l4950
 13475  00498A                     u5320:
 13476  00498A                     
 13477                           ; BSR set to: 0
 13478                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13479  00498A  C013  F00A         	movff	pad@buf,fputs@s
 13480  00498E  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13481  004992  C011  F00C         	movff	pad@fp,fputs@fp
 13482  004996  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13483  00499A  ECC1  F029         	call	_fputs	;wreg free
 13484  00499E                     l4950:
 13485                           
 13486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 13487  00499E  C013  F001         	movff	pad@buf,strlen@s
 13488  0049A2  C014  F002         	movff	pad@buf+1,strlen@s+1
 13489  0049A6  EC0C  F02B         	call	_strlen	;wreg free
 13490  0049AA  501A               	movf	pad@w^0,w,c
 13491  0049AC  2401               	addwf	?_strlen^0,w,c
 13492  0049AE  6E11               	movwf	?_pad^0,c
 13493  0049B0  501B               	movf	(pad@w+1)^0,w,c
 13494  0049B2  2002               	addwfc	(?_strlen+1)^0,w,c
 13495  0049B4  6E12               	movwf	(?_pad+1)^0,c
 13496  0049B6  0012               	return		;funcret
 13497  0049B8                     __end_of_pad:
 13498                           	callstack 0
 13499                           
 13500 ;; *************** function _strlen *****************
 13501 ;; Defined at:
 13502 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 13503 ;; Parameters:    Size  Location     Type
 13504 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13505 ;;		 -> dbuf(80), 
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13508 ;;		 -> dbuf(80), 
 13509 ;; Return value:  Size  Location     Type
 13510 ;;                  2    0[COMRAM] unsigned int 
 13511 ;; Registers used:
 13512 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13513 ;; Tracked objects:
 13514 ;;		On entry : 0/0
 13515 ;;		On exit  : 0/0
 13516 ;;		Unchanged: 0/0
 13517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13518 ;;      Params:         2       0       0       0       0       0       0
 13519 ;;      Locals:         2       0       0       0       0       0       0
 13520 ;;      Temps:          0       0       0       0       0       0       0
 13521 ;;      Totals:         4       0       0       0       0       0       0
 13522 ;;Total ram usage:        4 bytes
 13523 ;; Hardware stack levels used:    1
 13524 ;; Hardware stack levels required when called:    1
 13525 ;; This function calls:
 13526 ;;		Nothing
 13527 ;; This function is called by:
 13528 ;;		_pad
 13529 ;; This function uses a non-reentrant model
 13530 ;;
 13531                           
 13532                           	psect	text52
 13533  005618                     __ptext52:
 13534                           	callstack 0
 13535  005618                     _strlen:
 13536                           	callstack 21
 13537  005618  C001  F003         	movff	strlen@s,strlen@a
 13538  00561C  C002  F004         	movff	strlen@s+1,strlen@a+1
 13539  005620  EF14  F02B         	goto	l4392
 13540  005624                     l4390:
 13541  005624  4A01               	infsnz	strlen@s^0,f,c
 13542  005626  2A02               	incf	(strlen@s+1)^0,f,c
 13543  005628                     l4392:
 13544  005628  C001  FFD9         	movff	strlen@s,fsr2l
 13545  00562C  C002  FFDA         	movff	strlen@s+1,fsr2h
 13546  005630  50DF               	movf	indf2,w,c
 13547  005632  A4D8               	btfss	status,2,c
 13548  005634  EF1E  F02B         	goto	u4431
 13549  005638  EF20  F02B         	goto	u4430
 13550  00563C                     u4431:
 13551  00563C  EF12  F02B         	goto	l4390
 13552  005640                     u4430:
 13553  005640  5003               	movf	strlen@a^0,w,c
 13554  005642  5C01               	subwf	strlen@s^0,w,c
 13555  005644  6E01               	movwf	?_strlen^0,c
 13556  005646  5004               	movf	(strlen@a+1)^0,w,c
 13557  005648  5802               	subwfb	(strlen@s+1)^0,w,c
 13558  00564A  6E02               	movwf	(?_strlen+1)^0,c
 13559  00564C  0012               	return		;funcret
 13560  00564E                     __end_of_strlen:
 13561                           	callstack 0
 13562                           
 13563 ;; *************** function _fputs *****************
 13564 ;; Defined at:
 13565 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 13566 ;; Parameters:    Size  Location     Type
 13567 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13568 ;;		 -> dbuf(80), 
 13569 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13570 ;;		 -> sprintf@f(6), 
 13571 ;; Auto vars:     Size  Location     Type
 13572 ;;  i               2   14[COMRAM] int 
 13573 ;;  c               1   13[COMRAM] unsigned char 
 13574 ;; Return value:  Size  Location     Type
 13575 ;;                  2    9[COMRAM] int 
 13576 ;; Registers used:
 13577 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13578 ;; Tracked objects:
 13579 ;;		On entry : 0/0
 13580 ;;		On exit  : 0/0
 13581 ;;		Unchanged: 0/0
 13582 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13583 ;;      Params:         4       0       0       0       0       0       0
 13584 ;;      Locals:         3       0       0       0       0       0       0
 13585 ;;      Temps:          0       0       0       0       0       0       0
 13586 ;;      Totals:         7       0       0       0       0       0       0
 13587 ;;Total ram usage:        7 bytes
 13588 ;; Hardware stack levels used:    1
 13589 ;; Hardware stack levels required when called:    3
 13590 ;; This function calls:
 13591 ;;		_fputc
 13592 ;; This function is called by:
 13593 ;;		_pad
 13594 ;; This function uses a non-reentrant model
 13595 ;;
 13596                           
 13597                           	psect	text53
 13598  005382                     __ptext53:
 13599                           	callstack 0
 13600  005382                     _fputs:
 13601                           	callstack 19
 13602  005382  0E00               	movlw	0
 13603  005384  6E10               	movwf	(fputs@i+1)^0,c
 13604  005386  0E00               	movlw	0
 13605  005388  6E0F               	movwf	fputs@i^0,c
 13606  00538A  EFD2  F029         	goto	l4386
 13607  00538E                     l4382:
 13608  00538E  C00E  F001         	movff	fputs@c,fputc@c
 13609  005392  6A02               	clrf	(fputc@c+1)^0,c
 13610  005394  C00C  F003         	movff	fputs@fp,fputc@fp
 13611  005398  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13612  00539C  EC14  F024         	call	_fputc	;wreg free
 13613  0053A0  4A0F               	infsnz	fputs@i^0,f,c
 13614  0053A2  2A10               	incf	(fputs@i+1)^0,f,c
 13615  0053A4                     l4386:
 13616  0053A4  500F               	movf	fputs@i^0,w,c
 13617  0053A6  240A               	addwf	fputs@s^0,w,c
 13618  0053A8  6ED9               	movwf	fsr2l,c
 13619  0053AA  5010               	movf	(fputs@i+1)^0,w,c
 13620  0053AC  200B               	addwfc	(fputs@s+1)^0,w,c
 13621  0053AE  6EDA               	movwf	fsr2h,c
 13622  0053B0  50DF               	movf	indf2,w,c
 13623  0053B2  6E0E               	movwf	fputs@c^0,c
 13624  0053B4  500E               	movf	fputs@c^0,w,c
 13625  0053B6  A4D8               	btfss	status,2,c
 13626  0053B8  EFE0  F029         	goto	u4421
 13627  0053BC  EFE2  F029         	goto	u4420
 13628  0053C0                     u4421:
 13629  0053C0  EFC7  F029         	goto	l4382
 13630  0053C4                     u4420:
 13631  0053C4  0012               	return		;funcret
 13632  0053C6                     __end_of_fputs:
 13633                           	callstack 0
 13634                           
 13635 ;; *************** function _fputc *****************
 13636 ;; Defined at:
 13637 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 13638 ;; Parameters:    Size  Location     Type
 13639 ;;  c               2    0[COMRAM] int 
 13640 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13641 ;;		 -> sprintf@f(6), 
 13642 ;; Auto vars:     Size  Location     Type
 13643 ;;		None
 13644 ;; Return value:  Size  Location     Type
 13645 ;;                  2    0[COMRAM] int 
 13646 ;; Registers used:
 13647 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13648 ;; Tracked objects:
 13649 ;;		On entry : 0/0
 13650 ;;		On exit  : 0/0
 13651 ;;		Unchanged: 0/0
 13652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13653 ;;      Params:         4       0       0       0       0       0       0
 13654 ;;      Locals:         0       0       0       0       0       0       0
 13655 ;;      Temps:          5       0       0       0       0       0       0
 13656 ;;      Totals:         9       0       0       0       0       0       0
 13657 ;;Total ram usage:        9 bytes
 13658 ;; Hardware stack levels used:    1
 13659 ;; Hardware stack levels required when called:    2
 13660 ;; This function calls:
 13661 ;;		_putch
 13662 ;; This function is called by:
 13663 ;;		_pad
 13664 ;;		_vfpfcnvrt
 13665 ;;		_fputs
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669                           	psect	text54
 13670  004828                     __ptext54:
 13671                           	callstack 0
 13672  004828                     _fputc:
 13673                           	callstack 22
 13674  004828  5003               	movf	fputc@fp^0,w,c
 13675  00482A  1004               	iorwf	(fputc@fp+1)^0,w,c
 13676  00482C  B4D8               	btfsc	status,2,c
 13677  00482E  EF1B  F024         	goto	u3991
 13678  004832  EF1D  F024         	goto	u3990
 13679  004836                     u3991:
 13680  004836  EF26  F024         	goto	l4168
 13681  00483A                     u3990:
 13682  00483A  5003               	movf	fputc@fp^0,w,c
 13683  00483C  1004               	iorwf	(fputc@fp+1)^0,w,c
 13684  00483E  A4D8               	btfss	status,2,c
 13685  004840  EF24  F024         	goto	u4001
 13686  004844  EF26  F024         	goto	u4000
 13687  004848                     u4001:
 13688  004848  EF2B  F024         	goto	l4170
 13689  00484C                     u4000:
 13690  00484C                     l4168:
 13691  00484C  5001               	movf	fputc@c^0,w,c
 13692  00484E  ECDA  F02B         	call	_putch
 13693  004852  EF78  F024         	goto	l1677
 13694  004856                     l4170:
 13695  004856  EE20 F004          	lfsr	2,4
 13696  00485A  5003               	movf	fputc@fp^0,w,c
 13697  00485C  26D9               	addwf	fsr2l,f,c
 13698  00485E  5004               	movf	(fputc@fp+1)^0,w,c
 13699  004860  22DA               	addwfc	fsr2h,f,c
 13700  004862  50DE               	movf	postinc2,w,c
 13701  004864  10DE               	iorwf	postinc2,w,c
 13702  004866  B4D8               	btfsc	status,2,c
 13703  004868  EF38  F024         	goto	u4011
 13704  00486C  EF3A  F024         	goto	u4010
 13705  004870                     u4011:
 13706  004870  EF55  F024         	goto	l4174
 13707  004874                     u4010:
 13708  004874  EE20 F004          	lfsr	2,4
 13709  004878  5003               	movf	fputc@fp^0,w,c
 13710  00487A  26D9               	addwf	fsr2l,f,c
 13711  00487C  5004               	movf	(fputc@fp+1)^0,w,c
 13712  00487E  22DA               	addwfc	fsr2h,f,c
 13713  004880  EE10 F002          	lfsr	1,2
 13714  004884  5003               	movf	fputc@fp^0,w,c
 13715  004886  26E1               	addwf	fsr1l,f,c
 13716  004888  5004               	movf	(fputc@fp+1)^0,w,c
 13717  00488A  22E2               	addwfc	fsr1h,f,c
 13718  00488C  50DE               	movf	postinc2,w,c
 13719  00488E  5CE6               	subwf	postinc1,w,c
 13720  004890  50E6               	movf	postinc1,w,c
 13721  004892  0A80               	xorlw	128
 13722  004894  6E09               	movwf	(??_fputc+4)^0,c
 13723  004896  50DE               	movf	postinc2,w,c
 13724  004898  0A80               	xorlw	128
 13725  00489A  5809               	subwfb	(??_fputc+4)^0,w,c
 13726  00489C  B0D8               	btfsc	status,0,c
 13727  00489E  EF53  F024         	goto	u4021
 13728  0048A2  EF55  F024         	goto	u4020
 13729  0048A6                     u4021:
 13730  0048A6  EF78  F024         	goto	l1677
 13731  0048AA                     u4020:
 13732  0048AA                     l4174:
 13733  0048AA  EE20 F002          	lfsr	2,2
 13734  0048AE  5003               	movf	fputc@fp^0,w,c
 13735  0048B0  26D9               	addwf	fsr2l,f,c
 13736  0048B2  5004               	movf	(fputc@fp+1)^0,w,c
 13737  0048B4  22DA               	addwfc	fsr2h,f,c
 13738  0048B6  CFDE F005          	movff	postinc2,??_fputc
 13739  0048BA  CFDD F006          	movff	postdec2,??_fputc+1
 13740  0048BE  C003  FFD9         	movff	fputc@fp,fsr2l
 13741  0048C2  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13742  0048C6  CFDE F007          	movff	postinc2,??_fputc+2
 13743  0048CA  CFDD F008          	movff	postdec2,??_fputc+3
 13744  0048CE  5005               	movf	??_fputc^0,w,c
 13745  0048D0  2407               	addwf	(??_fputc+2)^0,w,c
 13746  0048D2  6ED9               	movwf	fsr2l,c
 13747  0048D4  5006               	movf	(??_fputc+1)^0,w,c
 13748  0048D6  2008               	addwfc	(??_fputc+3)^0,w,c
 13749  0048D8  6EDA               	movwf	fsr2h,c
 13750  0048DA  C001  FFDF         	movff	fputc@c,indf2
 13751  0048DE  EE20 F002          	lfsr	2,2
 13752  0048E2  5003               	movf	fputc@fp^0,w,c
 13753  0048E4  26D9               	addwf	fsr2l,f,c
 13754  0048E6  5004               	movf	(fputc@fp+1)^0,w,c
 13755  0048E8  22DA               	addwfc	fsr2h,f,c
 13756  0048EA  2ADE               	incf	postinc2,f,c
 13757  0048EC  0E00               	movlw	0
 13758  0048EE  22DD               	addwfc	postdec2,f,c
 13759  0048F0                     l1677:
 13760  0048F0  0012               	return		;funcret
 13761  0048F2                     __end_of_fputc:
 13762                           	callstack 0
 13763                           
 13764 ;; *************** function _putch *****************
 13765 ;; Defined at:
 13766 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13767 ;; Parameters:    Size  Location     Type
 13768 ;;  c               1    wreg     unsigned char 
 13769 ;; Auto vars:     Size  Location     Type
 13770 ;;  c               1    0[COMRAM] unsigned char 
 13771 ;; Return value:  Size  Location     Type
 13772 ;;                  1    wreg      void 
 13773 ;; Registers used:
 13774 ;;		wreg
 13775 ;; Tracked objects:
 13776 ;;		On entry : 0/0
 13777 ;;		On exit  : 0/0
 13778 ;;		Unchanged: 0/0
 13779 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13780 ;;      Params:         0       0       0       0       0       0       0
 13781 ;;      Locals:         0       0       0       0       0       0       0
 13782 ;;      Temps:          0       0       0       0       0       0       0
 13783 ;;      Totals:         0       0       0       0       0       0       0
 13784 ;;Total ram usage:        0 bytes
 13785 ;; Hardware stack levels used:    1
 13786 ;; Hardware stack levels required when called:    1
 13787 ;; This function calls:
 13788 ;;		Nothing
 13789 ;; This function is called by:
 13790 ;;		_fputc
 13791 ;; This function uses a non-reentrant model
 13792 ;;
 13793                           
 13794                           	psect	text55
 13795  0057B4                     __ptext55:
 13796                           	callstack 0
 13797  0057B4                     _putch:
 13798                           	callstack 22
 13799  0057B4  0012               	return		;funcret
 13800  0057B6                     __end_of_putch:
 13801                           	callstack 0
 13802                           
 13803 ;; *************** function _abs *****************
 13804 ;; Defined at:
 13805 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13806 ;; Parameters:    Size  Location     Type
 13807 ;;  a               2   18[COMRAM] int 
 13808 ;; Auto vars:     Size  Location     Type
 13809 ;;		None
 13810 ;; Return value:  Size  Location     Type
 13811 ;;                  2   18[COMRAM] int 
 13812 ;; Registers used:
 13813 ;;		wreg, status,2, status,0
 13814 ;; Tracked objects:
 13815 ;;		On entry : 0/0
 13816 ;;		On exit  : 0/0
 13817 ;;		Unchanged: 0/0
 13818 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13819 ;;      Params:         2       0       0       0       0       0       0
 13820 ;;      Locals:         0       0       0       0       0       0       0
 13821 ;;      Temps:          2       0       0       0       0       0       0
 13822 ;;      Totals:         4       0       0       0       0       0       0
 13823 ;;Total ram usage:        4 bytes
 13824 ;; Hardware stack levels used:    1
 13825 ;; Hardware stack levels required when called:    1
 13826 ;; This function calls:
 13827 ;;		Nothing
 13828 ;; This function is called by:
 13829 ;;		_dtoa
 13830 ;; This function uses a non-reentrant model
 13831 ;;
 13832                           
 13833                           	psect	text56
 13834  005448                     __ptext56:
 13835                           	callstack 0
 13836  005448                     _abs:
 13837                           	callstack 22
 13838  005448  BE14               	btfsc	(abs@a+1)^0,7,c
 13839  00544A  EF31  F02A         	goto	u5330
 13840  00544E  5014               	movf	(abs@a+1)^0,w,c
 13841  005450  E106               	bnz	u5331
 13842  005452  0413               	decf	abs@a^0,w,c
 13843  005454  B0D8               	btfsc	status,0,c
 13844  005456  EF2F  F02A         	goto	u5331
 13845  00545A  EF31  F02A         	goto	u5330
 13846  00545E                     u5331:
 13847  00545E  EF3F  F02A         	goto	l1598
 13848  005462                     u5330:
 13849  005462  C013  F015         	movff	abs@a,??_abs
 13850  005466  C014  F016         	movff	abs@a+1,??_abs+1
 13851  00546A  1E15               	comf	??_abs^0,f,c
 13852  00546C  1E16               	comf	(??_abs+1)^0,f,c
 13853  00546E  4A15               	infsnz	??_abs^0,f,c
 13854  005470  2A16               	incf	(??_abs+1)^0,f,c
 13855  005472  C015  F013         	movff	??_abs,?_abs
 13856  005476  C016  F014         	movff	??_abs+1,?_abs+1
 13857  00547A  EF43  F02A         	goto	l1601
 13858  00547E                     l1598:
 13859  00547E  C013  F013         	movff	abs@a,?_abs
 13860  005482  C014  F014         	movff	abs@a+1,?_abs+1
 13861  005486                     l1601:
 13862  005486  0012               	return		;funcret
 13863  005488                     __end_of_abs:
 13864                           	callstack 0
 13865                           
 13866 ;; *************** function ___aomod *****************
 13867 ;; Defined at:
 13868 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13869 ;; Parameters:    Size  Location     Type
 13870 ;;  dividend        8    0[COMRAM] long long 
 13871 ;;  divisor         8    8[COMRAM] long long 
 13872 ;; Auto vars:     Size  Location     Type
 13873 ;;  sign            1   17[COMRAM] unsigned char 
 13874 ;;  counter         1   16[COMRAM] unsigned char 
 13875 ;; Return value:  Size  Location     Type
 13876 ;;                  8    0[COMRAM] long long 
 13877 ;; Registers used:
 13878 ;;		wreg, status,2, status,0
 13879 ;; Tracked objects:
 13880 ;;		On entry : 0/0
 13881 ;;		On exit  : 0/0
 13882 ;;		Unchanged: 0/0
 13883 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13884 ;;      Params:        16       0       0       0       0       0       0
 13885 ;;      Locals:         2       0       0       0       0       0       0
 13886 ;;      Temps:          0       0       0       0       0       0       0
 13887 ;;      Totals:        18       0       0       0       0       0       0
 13888 ;;Total ram usage:       18 bytes
 13889 ;; Hardware stack levels used:    1
 13890 ;; Hardware stack levels required when called:    1
 13891 ;; This function calls:
 13892 ;;		Nothing
 13893 ;; This function is called by:
 13894 ;;		_dtoa
 13895 ;; This function uses a non-reentrant model
 13896 ;;
 13897                           
 13898                           	psect	text57
 13899  003BB8                     __ptext57:
 13900                           	callstack 0
 13901  003BB8                     ___aomod:
 13902                           	callstack 22
 13903  003BB8  0E00               	movlw	0
 13904  003BBA  6E12               	movwf	___aomod@sign^0,c
 13905  003BBC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13906  003BBE  EFE5  F01D         	goto	u4530
 13907  003BC2  EFE3  F01D         	goto	u4531
 13908  003BC6                     u4531:
 13909  003BC6  EFF7  F01D         	goto	l4460
 13910  003BCA                     u4530:
 13911  003BCA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13912  003BCC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13913  003BCE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13914  003BD0  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13915  003BD2  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13916  003BD4  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13917  003BD6  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13918  003BD8  6C01               	negf	___aomod@dividend^0,c
 13919  003BDA  0E00               	movlw	0
 13920  003BDC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13921  003BDE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13922  003BE0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13923  003BE2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13924  003BE4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13925  003BE6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13926  003BE8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13927  003BEA  0E01               	movlw	1
 13928  003BEC  6E12               	movwf	___aomod@sign^0,c
 13929  003BEE                     l4460:
 13930  003BEE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13931  003BF0  EFFE  F01D         	goto	u4540
 13932  003BF4  EFFC  F01D         	goto	u4541
 13933  003BF8                     u4541:
 13934  003BF8  EF0E  F01E         	goto	l4464
 13935  003BFC                     u4540:
 13936  003BFC  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13937  003BFE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13938  003C00  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13939  003C02  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13940  003C04  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13941  003C06  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13942  003C08  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13943  003C0A  6C09               	negf	___aomod@divisor^0,c
 13944  003C0C  0E00               	movlw	0
 13945  003C0E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13946  003C10  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13947  003C12  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13948  003C14  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13949  003C16  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13950  003C18  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13951  003C1A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13952  003C1C                     l4464:
 13953  003C1C  5009               	movf	___aomod@divisor^0,w,c
 13954  003C1E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13955  003C20  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13956  003C22  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13957  003C24  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13958  003C26  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13959  003C28  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13960  003C2A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13961  003C2C  B4D8               	btfsc	status,2,c
 13962  003C2E  EF1B  F01E         	goto	u4551
 13963  003C32  EF1D  F01E         	goto	u4550
 13964  003C36                     u4551:
 13965  003C36  EF65  F01E         	goto	l4480
 13966  003C3A                     u4550:
 13967  003C3A  0E01               	movlw	1
 13968  003C3C  6E11               	movwf	___aomod@counter^0,c
 13969  003C3E  EF2B  F01E         	goto	l4470
 13970  003C42                     l4468:
 13971  003C42  90D8               	bcf	status,0,c
 13972  003C44  3609               	rlcf	___aomod@divisor^0,f,c
 13973  003C46  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13974  003C48  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13975  003C4A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13976  003C4C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13977  003C4E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13978  003C50  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13979  003C52  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13980  003C54  2A11               	incf	___aomod@counter^0,f,c
 13981  003C56                     l4470:
 13982  003C56  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13983  003C58  EF30  F01E         	goto	u4561
 13984  003C5C  EF32  F01E         	goto	u4560
 13985  003C60                     u4561:
 13986  003C60  EF21  F01E         	goto	l4468
 13987  003C64                     u4560:
 13988  003C64                     l4472:
 13989  003C64  5009               	movf	___aomod@divisor^0,w,c
 13990  003C66  5C01               	subwf	___aomod@dividend^0,w,c
 13991  003C68  500A               	movf	(___aomod@divisor+1)^0,w,c
 13992  003C6A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13993  003C6C  500B               	movf	(___aomod@divisor+2)^0,w,c
 13994  003C6E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13995  003C70  500C               	movf	(___aomod@divisor+3)^0,w,c
 13996  003C72  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13997  003C74  500D               	movf	(___aomod@divisor+4)^0,w,c
 13998  003C76  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13999  003C78  500E               	movf	(___aomod@divisor+5)^0,w,c
 14000  003C7A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 14001  003C7C  500F               	movf	(___aomod@divisor+6)^0,w,c
 14002  003C7E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 14003  003C80  5010               	movf	(___aomod@divisor+7)^0,w,c
 14004  003C82  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 14005  003C84  A0D8               	btfss	status,0,c
 14006  003C86  EF47  F01E         	goto	u4571
 14007  003C8A  EF49  F01E         	goto	u4570
 14008  003C8E                     u4571:
 14009  003C8E  EF59  F01E         	goto	l4476
 14010  003C92                     u4570:
 14011  003C92  5009               	movf	___aomod@divisor^0,w,c
 14012  003C94  5E01               	subwf	___aomod@dividend^0,f,c
 14013  003C96  500A               	movf	(___aomod@divisor+1)^0,w,c
 14014  003C98  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 14015  003C9A  500B               	movf	(___aomod@divisor+2)^0,w,c
 14016  003C9C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 14017  003C9E  500C               	movf	(___aomod@divisor+3)^0,w,c
 14018  003CA0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 14019  003CA2  500D               	movf	(___aomod@divisor+4)^0,w,c
 14020  003CA4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 14021  003CA6  500E               	movf	(___aomod@divisor+5)^0,w,c
 14022  003CA8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 14023  003CAA  500F               	movf	(___aomod@divisor+6)^0,w,c
 14024  003CAC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 14025  003CAE  5010               	movf	(___aomod@divisor+7)^0,w,c
 14026  003CB0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 14027  003CB2                     l4476:
 14028  003CB2  90D8               	bcf	status,0,c
 14029  003CB4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 14030  003CB6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 14031  003CB8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 14032  003CBA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 14033  003CBC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 14034  003CBE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 14035  003CC0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 14036  003CC2  3209               	rrcf	___aomod@divisor^0,f,c
 14037  003CC4  2E11               	decfsz	___aomod@counter^0,f,c
 14038  003CC6  EF32  F01E         	goto	l4472
 14039  003CCA                     l4480:
 14040  003CCA  5012               	movf	___aomod@sign^0,w,c
 14041  003CCC  B4D8               	btfsc	status,2,c
 14042  003CCE  EF6B  F01E         	goto	u4581
 14043  003CD2  EF6D  F01E         	goto	u4580
 14044  003CD6                     u4581:
 14045  003CD6  EF7D  F01E         	goto	l4484
 14046  003CDA                     u4580:
 14047  003CDA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 14048  003CDC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 14049  003CDE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 14050  003CE0  1E05               	comf	(___aomod@dividend+4)^0,f,c
 14051  003CE2  1E04               	comf	(___aomod@dividend+3)^0,f,c
 14052  003CE4  1E03               	comf	(___aomod@dividend+2)^0,f,c
 14053  003CE6  1E02               	comf	(___aomod@dividend+1)^0,f,c
 14054  003CE8  6C01               	negf	___aomod@dividend^0,c
 14055  003CEA  0E00               	movlw	0
 14056  003CEC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 14057  003CEE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 14058  003CF0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 14059  003CF2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 14060  003CF4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 14061  003CF6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 14062  003CF8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 14063  003CFA                     l4484:
 14064  003CFA  C001  F001         	movff	___aomod@dividend,?___aomod
 14065  003CFE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 14066  003D02  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 14067  003D06  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 14068  003D0A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 14069  003D0E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 14070  003D12  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 14071  003D16  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 14072  003D1A  0012               	return		;funcret
 14073  003D1C                     __end_of___aomod:
 14074                           	callstack 0
 14075                           
 14076 ;; *************** function ___aodiv *****************
 14077 ;; Defined at:
 14078 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 14079 ;; Parameters:    Size  Location     Type
 14080 ;;  dividend        8    0[COMRAM] long long 
 14081 ;;  divisor         8    8[COMRAM] long long 
 14082 ;; Auto vars:     Size  Location     Type
 14083 ;;  quotient        8   18[COMRAM] long long 
 14084 ;;  sign            1   17[COMRAM] unsigned char 
 14085 ;;  counter         1   16[COMRAM] unsigned char 
 14086 ;; Return value:  Size  Location     Type
 14087 ;;                  8    0[COMRAM] long long 
 14088 ;; Registers used:
 14089 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14090 ;; Tracked objects:
 14091 ;;		On entry : 0/0
 14092 ;;		On exit  : 0/0
 14093 ;;		Unchanged: 0/0
 14094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14095 ;;      Params:        16       0       0       0       0       0       0
 14096 ;;      Locals:        10       0       0       0       0       0       0
 14097 ;;      Temps:          0       0       0       0       0       0       0
 14098 ;;      Totals:        26       0       0       0       0       0       0
 14099 ;;Total ram usage:       26 bytes
 14100 ;; Hardware stack levels used:    1
 14101 ;; Hardware stack levels required when called:    1
 14102 ;; This function calls:
 14103 ;;		Nothing
 14104 ;; This function is called by:
 14105 ;;		_dtoa
 14106 ;; This function uses a non-reentrant model
 14107 ;;
 14108                           
 14109                           	psect	text58
 14110  003A30                     __ptext58:
 14111                           	callstack 0
 14112  003A30                     ___aodiv:
 14113                           	callstack 22
 14114  003A30  0E00               	movlw	0
 14115  003A32  6E12               	movwf	___aodiv@sign^0,c
 14116  003A34  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 14117  003A36  EF21  F01D         	goto	u4460
 14118  003A3A  EF1F  F01D         	goto	u4461
 14119  003A3E                     u4461:
 14120  003A3E  EF33  F01D         	goto	l4416
 14121  003A42                     u4460:
 14122  003A42  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 14123  003A44  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 14124  003A46  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 14125  003A48  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 14126  003A4A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 14127  003A4C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 14128  003A4E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 14129  003A50  6C09               	negf	___aodiv@divisor^0,c
 14130  003A52  0E00               	movlw	0
 14131  003A54  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 14132  003A56  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 14133  003A58  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 14134  003A5A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 14135  003A5C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 14136  003A5E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 14137  003A60  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 14138  003A62  0E01               	movlw	1
 14139  003A64  6E12               	movwf	___aodiv@sign^0,c
 14140  003A66                     l4416:
 14141  003A66  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 14142  003A68  EF3A  F01D         	goto	u4470
 14143  003A6C  EF38  F01D         	goto	u4471
 14144  003A70                     u4471:
 14145  003A70  EF4C  F01D         	goto	l4422
 14146  003A74                     u4470:
 14147  003A74  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 14148  003A76  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 14149  003A78  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 14150  003A7A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 14151  003A7C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 14152  003A7E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 14153  003A80  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 14154  003A82  6C01               	negf	___aodiv@dividend^0,c
 14155  003A84  0E00               	movlw	0
 14156  003A86  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 14157  003A88  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 14158  003A8A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 14159  003A8C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 14160  003A8E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 14161  003A90  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 14162  003A92  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 14163  003A94  0E01               	movlw	1
 14164  003A96  1A12               	xorwf	___aodiv@sign^0,f,c
 14165  003A98                     l4422:
 14166  003A98  EE20  F013         	lfsr	2,___aodiv@quotient
 14167  003A9C  0E07               	movlw	7
 14168  003A9E                     u4481:
 14169  003A9E  6ADE               	clrf	postinc2,c
 14170  003AA0  06E8               	decf	wreg,f,c
 14171  003AA2  E2FD               	bc	u4481
 14172  003AA4  5009               	movf	___aodiv@divisor^0,w,c
 14173  003AA6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 14174  003AA8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 14175  003AAA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 14176  003AAC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 14177  003AAE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 14178  003AB0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 14179  003AB2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 14180  003AB4  B4D8               	btfsc	status,2,c
 14181  003AB6  EF5F  F01D         	goto	u4491
 14182  003ABA  EF61  F01D         	goto	u4490
 14183  003ABE                     u4491:
 14184  003ABE  EFB3  F01D         	goto	l4444
 14185  003AC2                     u4490:
 14186  003AC2  0E01               	movlw	1
 14187  003AC4  6E11               	movwf	___aodiv@counter^0,c
 14188  003AC6  EF6F  F01D         	goto	l4430
 14189  003ACA                     l4428:
 14190  003ACA  90D8               	bcf	status,0,c
 14191  003ACC  3609               	rlcf	___aodiv@divisor^0,f,c
 14192  003ACE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 14193  003AD0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 14194  003AD2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 14195  003AD4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 14196  003AD6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 14197  003AD8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 14198  003ADA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 14199  003ADC  2A11               	incf	___aodiv@counter^0,f,c
 14200  003ADE                     l4430:
 14201  003ADE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 14202  003AE0  EF74  F01D         	goto	u4501
 14203  003AE4  EF76  F01D         	goto	u4500
 14204  003AE8                     u4501:
 14205  003AE8  EF65  F01D         	goto	l4428
 14206  003AEC                     u4500:
 14207  003AEC                     l4432:
 14208  003AEC  90D8               	bcf	status,0,c
 14209  003AEE  3613               	rlcf	___aodiv@quotient^0,f,c
 14210  003AF0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 14211  003AF2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 14212  003AF4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 14213  003AF6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 14214  003AF8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 14215  003AFA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 14216  003AFC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 14217  003AFE  5009               	movf	___aodiv@divisor^0,w,c
 14218  003B00  5C01               	subwf	___aodiv@dividend^0,w,c
 14219  003B02  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14220  003B04  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 14221  003B06  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14222  003B08  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 14223  003B0A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14224  003B0C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 14225  003B0E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14226  003B10  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 14227  003B12  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14228  003B14  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 14229  003B16  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14230  003B18  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 14231  003B1A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14232  003B1C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 14233  003B1E  A0D8               	btfss	status,0,c
 14234  003B20  EF94  F01D         	goto	u4511
 14235  003B24  EF96  F01D         	goto	u4510
 14236  003B28                     u4511:
 14237  003B28  EFA7  F01D         	goto	l4440
 14238  003B2C                     u4510:
 14239  003B2C  5009               	movf	___aodiv@divisor^0,w,c
 14240  003B2E  5E01               	subwf	___aodiv@dividend^0,f,c
 14241  003B30  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14242  003B32  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 14243  003B34  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14244  003B36  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 14245  003B38  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14246  003B3A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 14247  003B3C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14248  003B3E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 14249  003B40  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14250  003B42  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 14251  003B44  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14252  003B46  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 14253  003B48  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14254  003B4A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 14255  003B4C  8013               	bsf	___aodiv@quotient^0,0,c
 14256  003B4E                     l4440:
 14257  003B4E  90D8               	bcf	status,0,c
 14258  003B50  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 14259  003B52  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 14260  003B54  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 14261  003B56  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 14262  003B58  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 14263  003B5A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 14264  003B5C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 14265  003B5E  3209               	rrcf	___aodiv@divisor^0,f,c
 14266  003B60  2E11               	decfsz	___aodiv@counter^0,f,c
 14267  003B62  EF76  F01D         	goto	l4432
 14268  003B66                     l4444:
 14269  003B66  5012               	movf	___aodiv@sign^0,w,c
 14270  003B68  B4D8               	btfsc	status,2,c
 14271  003B6A  EFB9  F01D         	goto	u4521
 14272  003B6E  EFBB  F01D         	goto	u4520
 14273  003B72                     u4521:
 14274  003B72  EFCB  F01D         	goto	l4448
 14275  003B76                     u4520:
 14276  003B76  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 14277  003B78  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 14278  003B7A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 14279  003B7C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14280  003B7E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14281  003B80  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14282  003B82  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14283  003B84  6C13               	negf	___aodiv@quotient^0,c
 14284  003B86  0E00               	movlw	0
 14285  003B88  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14286  003B8A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14287  003B8C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14288  003B8E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14289  003B90  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14290  003B92  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14291  003B94  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14292  003B96                     l4448:
 14293  003B96  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14294  003B9A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14295  003B9E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14296  003BA2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14297  003BA6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14298  003BAA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14299  003BAE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14300  003BB2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14301  003BB6  0012               	return		;funcret
 14302  003BB8                     __end_of___aodiv:
 14303                           	callstack 0
 14304                           
 14305 ;; *************** function _atoi *****************
 14306 ;; Defined at:
 14307 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 14308 ;; Parameters:    Size  Location     Type
 14309 ;;  s               2    7[COMRAM] PTR const unsigned char 
 14310 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
 14311 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
 14312 ;; Auto vars:     Size  Location     Type
 14313 ;;  n               2   20[COMRAM] int 
 14314 ;;  neg             2   13[COMRAM] int 
 14315 ;; Return value:  Size  Location     Type
 14316 ;;                  2    7[COMRAM] int 
 14317 ;; Registers used:
 14318 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14319 ;; Tracked objects:
 14320 ;;		On entry : 0/0
 14321 ;;		On exit  : 0/0
 14322 ;;		Unchanged: 0/0
 14323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14324 ;;      Params:         2       0       0       0       0       0       0
 14325 ;;      Locals:         9       0       0       0       0       0       0
 14326 ;;      Temps:          4       0       0       0       0       0       0
 14327 ;;      Totals:        15       0       0       0       0       0       0
 14328 ;;Total ram usage:       15 bytes
 14329 ;; Hardware stack levels used:    1
 14330 ;; Hardware stack levels required when called:    2
 14331 ;; This function calls:
 14332 ;;		___wmul
 14333 ;;		_isdigit
 14334 ;;		_isspace
 14335 ;; This function is called by:
 14336 ;;		_vfpfcnvrt
 14337 ;; This function uses a non-reentrant model
 14338 ;;
 14339                           
 14340                           	psect	text59
 14341  0038A0                     __ptext59:
 14342                           	callstack 0
 14343  0038A0                     _atoi:
 14344                           	callstack 22
 14345  0038A0  0E00               	movlw	0
 14346  0038A2  6E16               	movwf	(atoi@n+1)^0,c
 14347  0038A4  0E00               	movlw	0
 14348  0038A6  6E15               	movwf	atoi@n^0,c
 14349  0038A8  0E00               	movlw	0
 14350  0038AA  6E0F               	movwf	(atoi@neg+1)^0,c
 14351  0038AC  0E00               	movlw	0
 14352  0038AE  6E0E               	movwf	atoi@neg^0,c
 14353  0038B0  EF5C  F01C         	goto	l5402
 14354  0038B4                     l5400:
 14355  0038B4  4A08               	infsnz	atoi@s^0,f,c
 14356  0038B6  2A09               	incf	(atoi@s+1)^0,f,c
 14357  0038B8                     l5402:
 14358  0038B8  0E01               	movlw	1
 14359  0038BA  6E14               	movwf	_atoi$3047^0,c
 14360  0038BC  C008  FFF6         	movff	atoi@s,tblptrl
 14361  0038C0  C009  FFF7         	movff	atoi@s+1,tblptrh
 14362  0038C4                     	if	0	;tblptru may be non-zero
 14363  0038C4                     	endif
 14364  0038C4                     	if	0	;tblptru may be non-zero
 14365  0038C4                     	endif
 14366  0038C4  0008               	tblrd		*
 14367  0038C6  50F5               	movf	tablat,w,c
 14368  0038C8  0A20               	xorlw	32
 14369  0038CA  B4D8               	btfsc	status,2,c
 14370  0038CC  EF6A  F01C         	goto	u6271
 14371  0038D0  EF6C  F01C         	goto	u6270
 14372  0038D4                     u6271:
 14373  0038D4  EF89  F01C         	goto	l5410
 14374  0038D8                     u6270:
 14375  0038D8  0EF7               	movlw	247
 14376  0038DA  6E0A               	movwf	??_atoi^0,c
 14377  0038DC  0EFF               	movlw	255
 14378  0038DE  6E0B               	movwf	(??_atoi+1)^0,c
 14379  0038E0  C008  FFF6         	movff	atoi@s,tblptrl
 14380  0038E4  C009  FFF7         	movff	atoi@s+1,tblptrh
 14381  0038E8                     	if	0	;tblptru may be non-zero
 14382  0038E8                     	endif
 14383  0038E8                     	if	0	;tblptru may be non-zero
 14384  0038E8                     	endif
 14385  0038E8  0008               	tblrd		*
 14386  0038EA  50F5               	movf	tablat,w,c
 14387  0038EC  6E0C               	movwf	(??_atoi+2)^0,c
 14388  0038EE  6A0D               	clrf	(??_atoi+3)^0,c
 14389  0038F0  500A               	movf	??_atoi^0,w,c
 14390  0038F2  260C               	addwf	(??_atoi+2)^0,f,c
 14391  0038F4  500B               	movf	(??_atoi+1)^0,w,c
 14392  0038F6  220D               	addwfc	(??_atoi+3)^0,f,c
 14393  0038F8  500D               	movf	(??_atoi+3)^0,w,c
 14394  0038FA  E109               	bnz	u6280
 14395  0038FC  0E05               	movlw	5
 14396  0038FE  5C0C               	subwf	(??_atoi+2)^0,w,c
 14397  003900  A0D8               	btfss	status,0,c
 14398  003902  EF85  F01C         	goto	u6281
 14399  003906  EF87  F01C         	goto	u6280
 14400  00390A                     u6281:
 14401  00390A  EF89  F01C         	goto	l5410
 14402  00390E                     u6280:
 14403  00390E  0E00               	movlw	0
 14404  003910  6E14               	movwf	_atoi$3047^0,c
 14405  003912                     l5410:
 14406  003912  C014  F010         	movff	_atoi$3047,_atoi$3046
 14407  003916  6A11               	clrf	(_atoi$3046+1)^0,c
 14408  003918  5010               	movf	_atoi$3046^0,w,c
 14409  00391A  1011               	iorwf	(_atoi$3046+1)^0,w,c
 14410  00391C  A4D8               	btfss	status,2,c
 14411  00391E  EF93  F01C         	goto	u6291
 14412  003922  EF95  F01C         	goto	u6290
 14413  003926                     u6291:
 14414  003926  EF5A  F01C         	goto	l5400
 14415  00392A                     u6290:
 14416  00392A  EF9F  F01C         	goto	l5420
 14417  00392E                     l5416:
 14418  00392E  0E00               	movlw	0
 14419  003930  6E0F               	movwf	(atoi@neg+1)^0,c
 14420  003932  0E01               	movlw	1
 14421  003934  6E0E               	movwf	atoi@neg^0,c
 14422  003936                     l5418:
 14423  003936  4A08               	infsnz	atoi@s^0,f,c
 14424  003938  2A09               	incf	(atoi@s+1)^0,f,c
 14425  00393A  EFD4  F01C         	goto	l5426
 14426  00393E                     l5420:
 14427  00393E  C008  FFF6         	movff	atoi@s,tblptrl
 14428  003942  C009  FFF7         	movff	atoi@s+1,tblptrh
 14429  003946                     	if	0	;tblptru may be non-zero
 14430  003946                     	endif
 14431  003946                     	if	0	;tblptru may be non-zero
 14432  003946                     	endif
 14433  003946  0008               	tblrd		*
 14434  003948  50F5               	movf	tablat,w,c
 14435  00394A  6E0A               	movwf	??_atoi^0,c
 14436  00394C  6A0B               	clrf	(??_atoi+1)^0,c
 14437                           
 14438                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14439                           ; Switch size 1, requested type "simple"
 14440                           ; Number of cases is 1, Range of values is 0 to 0
 14441                           ; switch strategies available:
 14442                           ; Name         Instructions Cycles
 14443                           ; simple_byte            4     3 (average)
 14444                           ;	Chosen strategy is simple_byte
 14445  00394E  500B               	movf	(??_atoi+1)^0,w,c
 14446  003950  0A00               	xorlw	0	; case 0
 14447  003952  B4D8               	btfsc	status,2,c
 14448  003954  EFAE  F01C         	goto	l6620
 14449  003958  EFD4  F01C         	goto	l5426
 14450  00395C                     l6620:
 14451                           
 14452                           ; Switch size 1, requested type "simple"
 14453                           ; Number of cases is 2, Range of values is 43 to 45
 14454                           ; switch strategies available:
 14455                           ; Name         Instructions Cycles
 14456                           ; simple_byte            7     4 (average)
 14457                           ;	Chosen strategy is simple_byte
 14458  00395C  500A               	movf	??_atoi^0,w,c
 14459  00395E  0A2B               	xorlw	43	; case 43
 14460  003960  B4D8               	btfsc	status,2,c
 14461  003962  EF9B  F01C         	goto	l5418
 14462  003966  0A06               	xorlw	6	; case 45
 14463  003968  B4D8               	btfsc	status,2,c
 14464  00396A  EF97  F01C         	goto	l5416
 14465  00396E  EFD4  F01C         	goto	l5426
 14466  003972                     l5422:
 14467  003972  C015  F001         	movff	atoi@n,___wmul@multiplier
 14468  003976  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 14469  00397A  0E00               	movlw	0
 14470  00397C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 14471  00397E  0E0A               	movlw	10
 14472  003980  6E03               	movwf	___wmul@multiplicand^0,c
 14473  003982  EC80  F02B         	call	___wmul	;wreg free
 14474  003986  C008  FFF6         	movff	atoi@s,tblptrl
 14475  00398A  C009  FFF7         	movff	atoi@s+1,tblptrh
 14476  00398E                     	if	0	;tblptru may be non-zero
 14477  00398E                     	endif
 14478  00398E                     	if	0	;tblptru may be non-zero
 14479  00398E                     	endif
 14480  00398E  0008               	tblrd		*
 14481  003990  50F5               	movf	tablat,w,c
 14482  003992  5E01               	subwf	?___wmul^0,f,c
 14483  003994  0E00               	movlw	0
 14484  003996  5A02               	subwfb	(?___wmul+1)^0,f,c
 14485  003998  0E30               	movlw	48
 14486  00399A  2401               	addwf	?___wmul^0,w,c
 14487  00399C  6E15               	movwf	atoi@n^0,c
 14488  00399E  0E00               	movlw	0
 14489  0039A0  2002               	addwfc	(?___wmul+1)^0,w,c
 14490  0039A2  6E16               	movwf	(atoi@n+1)^0,c
 14491  0039A4  EF9B  F01C         	goto	l5418
 14492  0039A8                     l5426:
 14493  0039A8  0ED0               	movlw	208
 14494  0039AA  6E0A               	movwf	??_atoi^0,c
 14495  0039AC  0EFF               	movlw	255
 14496  0039AE  6E0B               	movwf	(??_atoi+1)^0,c
 14497  0039B0  C008  FFF6         	movff	atoi@s,tblptrl
 14498  0039B4  C009  FFF7         	movff	atoi@s+1,tblptrh
 14499  0039B8                     	if	0	;tblptru may be non-zero
 14500  0039B8                     	endif
 14501  0039B8                     	if	0	;tblptru may be non-zero
 14502  0039B8                     	endif
 14503  0039B8  0008               	tblrd		*
 14504  0039BA  50F5               	movf	tablat,w,c
 14505  0039BC  6E0C               	movwf	(??_atoi+2)^0,c
 14506  0039BE  6A0D               	clrf	(??_atoi+3)^0,c
 14507  0039C0  500A               	movf	??_atoi^0,w,c
 14508  0039C2  260C               	addwf	(??_atoi+2)^0,f,c
 14509  0039C4  500B               	movf	(??_atoi+1)^0,w,c
 14510  0039C6  220D               	addwfc	(??_atoi+3)^0,f,c
 14511  0039C8  500D               	movf	(??_atoi+3)^0,w,c
 14512  0039CA  E10A               	bnz	u6300
 14513  0039CC  0E0A               	movlw	10
 14514  0039CE  5C0C               	subwf	(??_atoi+2)^0,w,c
 14515  0039D0  A0D8               	btfss	status,0,c
 14516  0039D2  EFED  F01C         	goto	u6301
 14517  0039D6  EFF0  F01C         	goto	u6300
 14518  0039DA                     u6301:
 14519  0039DA  0E01               	movlw	1
 14520  0039DC  EFF1  F01C         	goto	u6310
 14521  0039E0                     u6300:
 14522  0039E0  0E00               	movlw	0
 14523  0039E2                     u6310:
 14524  0039E2  6E12               	movwf	_atoi$3048^0,c
 14525  0039E4  6A13               	clrf	(_atoi$3048+1)^0,c
 14526  0039E6  5012               	movf	_atoi$3048^0,w,c
 14527  0039E8  1013               	iorwf	(_atoi$3048+1)^0,w,c
 14528  0039EA  A4D8               	btfss	status,2,c
 14529  0039EC  EFFA  F01C         	goto	u6321
 14530  0039F0  EFFC  F01C         	goto	u6320
 14531  0039F4                     u6321:
 14532  0039F4  EFB9  F01C         	goto	l5422
 14533  0039F8                     u6320:
 14534  0039F8  500E               	movf	atoi@neg^0,w,c
 14535  0039FA  100F               	iorwf	(atoi@neg+1)^0,w,c
 14536  0039FC  A4D8               	btfss	status,2,c
 14537  0039FE  EF03  F01D         	goto	u6331
 14538  003A02  EF05  F01D         	goto	u6330
 14539  003A06                     u6331:
 14540  003A06  EF13  F01D         	goto	l1629
 14541  003A0A                     u6330:
 14542  003A0A  C015  F00A         	movff	atoi@n,??_atoi
 14543  003A0E  C016  F00B         	movff	atoi@n+1,??_atoi+1
 14544  003A12  1E0A               	comf	??_atoi^0,f,c
 14545  003A14  1E0B               	comf	(??_atoi+1)^0,f,c
 14546  003A16  4A0A               	infsnz	??_atoi^0,f,c
 14547  003A18  2A0B               	incf	(??_atoi+1)^0,f,c
 14548  003A1A  C00A  F008         	movff	??_atoi,?_atoi
 14549  003A1E  C00B  F009         	movff	??_atoi+1,?_atoi+1
 14550  003A22  EF17  F01D         	goto	l1632
 14551  003A26                     l1629:
 14552  003A26  C015  F008         	movff	atoi@n,?_atoi
 14553  003A2A  C016  F009         	movff	atoi@n+1,?_atoi+1
 14554  003A2E                     l1632:
 14555  003A2E  0012               	return		;funcret
 14556  003A30                     __end_of_atoi:
 14557                           	callstack 0
 14558                           
 14559 ;; *************** function _isspace *****************
 14560 ;; Defined at:
 14561 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 14562 ;; Parameters:    Size  Location     Type
 14563 ;;  c               2    0[COMRAM] int 
 14564 ;; Auto vars:     Size  Location     Type
 14565 ;;		None
 14566 ;; Return value:  Size  Location     Type
 14567 ;;                  2    0[COMRAM] int 
 14568 ;; Registers used:
 14569 ;;		wreg, status,2, status,0
 14570 ;; Tracked objects:
 14571 ;;		On entry : 0/0
 14572 ;;		On exit  : 0/0
 14573 ;;		Unchanged: 0/0
 14574 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14575 ;;      Params:         2       0       0       0       0       0       0
 14576 ;;      Locals:         1       0       0       0       0       0       0
 14577 ;;      Temps:          4       0       0       0       0       0       0
 14578 ;;      Totals:         7       0       0       0       0       0       0
 14579 ;;Total ram usage:        7 bytes
 14580 ;; Hardware stack levels used:    1
 14581 ;; Hardware stack levels required when called:    1
 14582 ;; This function calls:
 14583 ;;		Nothing
 14584 ;; This function is called by:
 14585 ;;		_atoi
 14586 ;; This function uses a non-reentrant model
 14587 ;;
 14588                           
 14589                           	psect	text60
 14590  0052A0                     __ptext60:
 14591                           	callstack 0
 14592  0052A0                     _isspace:
 14593                           	callstack 22
 14594  0052A0  0E01               	movlw	1
 14595  0052A2  6E07               	movwf	_isspace$3077^0,c
 14596  0052A4  0E20               	movlw	32
 14597  0052A6  1801               	xorwf	isspace@c^0,w,c
 14598  0052A8  1002               	iorwf	(isspace@c+1)^0,w,c
 14599  0052AA  B4D8               	btfsc	status,2,c
 14600  0052AC  EF5A  F029         	goto	u5581
 14601  0052B0  EF5C  F029         	goto	u5580
 14602  0052B4                     u5581:
 14603  0052B4  EF75  F029         	goto	l5034
 14604  0052B8                     u5580:
 14605  0052B8  0EF7               	movlw	247
 14606  0052BA  6E03               	movwf	??_isspace^0,c
 14607  0052BC  0EFF               	movlw	255
 14608  0052BE  6E04               	movwf	(??_isspace+1)^0,c
 14609  0052C0  C001  F005         	movff	isspace@c,??_isspace+2
 14610  0052C4  C002  F006         	movff	isspace@c+1,??_isspace+3
 14611  0052C8  5003               	movf	??_isspace^0,w,c
 14612  0052CA  2605               	addwf	(??_isspace+2)^0,f,c
 14613  0052CC  5004               	movf	(??_isspace+1)^0,w,c
 14614  0052CE  2206               	addwfc	(??_isspace+3)^0,f,c
 14615  0052D0  5006               	movf	(??_isspace+3)^0,w,c
 14616  0052D2  E109               	bnz	u5590
 14617  0052D4  0E05               	movlw	5
 14618  0052D6  5C05               	subwf	(??_isspace+2)^0,w,c
 14619  0052D8  A0D8               	btfss	status,0,c
 14620  0052DA  EF71  F029         	goto	u5591
 14621  0052DE  EF73  F029         	goto	u5590
 14622  0052E2                     u5591:
 14623  0052E2  EF75  F029         	goto	l5034
 14624  0052E6                     u5590:
 14625  0052E6  0E00               	movlw	0
 14626  0052E8  6E07               	movwf	_isspace$3077^0,c
 14627  0052EA                     l5034:
 14628  0052EA  C007  F001         	movff	_isspace$3077,?_isspace
 14629  0052EE  6A02               	clrf	(?_isspace+1)^0,c
 14630  0052F0  0012               	return		;funcret
 14631  0052F2                     __end_of_isspace:
 14632                           	callstack 0
 14633                           
 14634 ;; *************** function _isdigit *****************
 14635 ;; Defined at:
 14636 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 14637 ;; Parameters:    Size  Location     Type
 14638 ;;  c               2    0[COMRAM] int 
 14639 ;; Auto vars:     Size  Location     Type
 14640 ;;		None
 14641 ;; Return value:  Size  Location     Type
 14642 ;;                  2    0[COMRAM] int 
 14643 ;; Registers used:
 14644 ;;		wreg, status,2, status,0
 14645 ;; Tracked objects:
 14646 ;;		On entry : 0/0
 14647 ;;		On exit  : 0/0
 14648 ;;		Unchanged: 0/0
 14649 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14650 ;;      Params:         2       0       0       0       0       0       0
 14651 ;;      Locals:         0       0       0       0       0       0       0
 14652 ;;      Temps:          4       0       0       0       0       0       0
 14653 ;;      Totals:         6       0       0       0       0       0       0
 14654 ;;Total ram usage:        6 bytes
 14655 ;; Hardware stack levels used:    1
 14656 ;; Hardware stack levels required when called:    1
 14657 ;; This function calls:
 14658 ;;		Nothing
 14659 ;; This function is called by:
 14660 ;;		_vfpfcnvrt
 14661 ;;		_atoi
 14662 ;; This function uses a non-reentrant model
 14663 ;;
 14664                           
 14665                           	psect	text61
 14666  005572                     __ptext61:
 14667                           	callstack 0
 14668  005572                     _isdigit:
 14669                           	callstack 23
 14670  005572  0ED0               	movlw	208
 14671  005574  6E03               	movwf	??_isdigit^0,c
 14672  005576  0EFF               	movlw	255
 14673  005578  6E04               	movwf	(??_isdigit+1)^0,c
 14674  00557A  C001  F005         	movff	isdigit@c,??_isdigit+2
 14675  00557E  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 14676  005582  5003               	movf	??_isdigit^0,w,c
 14677  005584  2605               	addwf	(??_isdigit+2)^0,f,c
 14678  005586  5004               	movf	(??_isdigit+1)^0,w,c
 14679  005588  2206               	addwfc	(??_isdigit+3)^0,f,c
 14680  00558A  5006               	movf	(??_isdigit+3)^0,w,c
 14681  00558C  E10A               	bnz	u5560
 14682  00558E  0E0A               	movlw	10
 14683  005590  5C05               	subwf	(??_isdigit+2)^0,w,c
 14684  005592  A0D8               	btfss	status,0,c
 14685  005594  EFCE  F02A         	goto	u5561
 14686  005598  EFD1  F02A         	goto	u5560
 14687  00559C                     u5561:
 14688  00559C  0E01               	movlw	1
 14689  00559E  EFD2  F02A         	goto	u5570
 14690  0055A2                     u5560:
 14691  0055A2  0E00               	movlw	0
 14692  0055A4                     u5570:
 14693  0055A4  6E01               	movwf	?_isdigit^0,c
 14694  0055A6  6A02               	clrf	(?_isdigit+1)^0,c
 14695  0055A8  0012               	return		;funcret
 14696  0055AA                     __end_of_isdigit:
 14697                           	callstack 0
 14698                           
 14699 ;; *************** function ___wmul *****************
 14700 ;; Defined at:
 14701 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 14702 ;; Parameters:    Size  Location     Type
 14703 ;;  multiplier      2    0[COMRAM] unsigned int 
 14704 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14705 ;; Auto vars:     Size  Location     Type
 14706 ;;  product         2    4[COMRAM] unsigned int 
 14707 ;; Return value:  Size  Location     Type
 14708 ;;                  2    0[COMRAM] unsigned int 
 14709 ;; Registers used:
 14710 ;;		wreg, status,2, status,0, prodl, prodh
 14711 ;; Tracked objects:
 14712 ;;		On entry : 0/0
 14713 ;;		On exit  : 0/0
 14714 ;;		Unchanged: 0/0
 14715 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14716 ;;      Params:         4       0       0       0       0       0       0
 14717 ;;      Locals:         2       0       0       0       0       0       0
 14718 ;;      Temps:          0       0       0       0       0       0       0
 14719 ;;      Totals:         6       0       0       0       0       0       0
 14720 ;;Total ram usage:        6 bytes
 14721 ;; Hardware stack levels used:    1
 14722 ;; Hardware stack levels required when called:    1
 14723 ;; This function calls:
 14724 ;;		Nothing
 14725 ;; This function is called by:
 14726 ;;		_atoi
 14727 ;; This function uses a non-reentrant model
 14728 ;;
 14729                           
 14730                           	psect	text62
 14731  005700                     __ptext62:
 14732                           	callstack 0
 14733  005700                     ___wmul:
 14734                           	callstack 22
 14735  005700  5001               	movf	___wmul@multiplier^0,w,c
 14736  005702  0203               	mulwf	___wmul@multiplicand^0,c
 14737  005704  CFF3 F005          	movff	prodl,___wmul@product
 14738  005708  CFF4 F006          	movff	prodh,___wmul@product+1
 14739  00570C  5001               	movf	___wmul@multiplier^0,w,c
 14740  00570E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14741  005710  50F3               	movf	243,w,c
 14742  005712  2606               	addwf	(___wmul@product+1)^0,f,c
 14743  005714  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14744  005716  0203               	mulwf	___wmul@multiplicand^0,c
 14745  005718  50F3               	movf	243,w,c
 14746  00571A  2606               	addwf	(___wmul@product+1)^0,f,c
 14747  00571C  C005  F001         	movff	___wmul@product,?___wmul
 14748  005720  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14749  005724  0012               	return		;funcret
 14750  005726                     __end_of___wmul:
 14751                           	callstack 0
 14752                           
 14753 ;; *************** function _eepromWrite *****************
 14754 ;; Defined at:
 14755 ;;		line 69 in file "fs_eeprom.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;  address         1    wreg     unsigned char 
 14758 ;;  data            1    0[COMRAM] unsigned char 
 14759 ;; Auto vars:     Size  Location     Type
 14760 ;;  address         1    1[COMRAM] unsigned char 
 14761 ;; Return value:  Size  Location     Type
 14762 ;;                  1    wreg      void 
 14763 ;; Registers used:
 14764 ;;		wreg, status,2
 14765 ;; Tracked objects:
 14766 ;;		On entry : 0/0
 14767 ;;		On exit  : 0/0
 14768 ;;		Unchanged: 0/0
 14769 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14770 ;;      Params:         1       0       0       0       0       0       0
 14771 ;;      Locals:         1       0       0       0       0       0       0
 14772 ;;      Temps:          0       0       0       0       0       0       0
 14773 ;;      Totals:         2       0       0       0       0       0       0
 14774 ;;Total ram usage:        2 bytes
 14775 ;; Hardware stack levels used:    1
 14776 ;; Hardware stack levels required when called:    1
 14777 ;; This function calls:
 14778 ;;		Nothing
 14779 ;; This function is called by:
 14780 ;;		_speedLimitSettingMenu
 14781 ;;		_stopTimeSettingMenu
 14782 ;;		_driverTimeSettingMenu
 14783 ;; This function uses a non-reentrant model
 14784 ;;
 14785                           
 14786                           	psect	text63
 14787  005682                     __ptext63:
 14788                           	callstack 0
 14789  005682                     _eepromWrite:
 14790                           	callstack 26
 14791                           
 14792                           ;incstack = 0
 14793                           ;eepromWrite@address stored from wreg
 14794  005682  6E02               	movwf	eepromWrite@address^0,c
 14795  005684                     
 14796                           ;fs_eeprom.c: 69: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 70: {;fs_
      +                          eeprom.c: 73:     EEADR = (uint8_t)address;
 14797  005684  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14798  005688                     
 14799                           ;fs_eeprom.c: 75:     EEDATA = data;
 14800  005688  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14801  00568C                     
 14802                           ;fs_eeprom.c: 76:     EECON1bits.EEPGD = 0;
 14803  00568C  9EA6               	bcf	166,7,c	;volsfr
 14804  00568E                     
 14805                           ;fs_eeprom.c: 77:     EECON1bits.CFGS = 0;
 14806  00568E  9CA6               	bcf	166,6,c	;volsfr
 14807  005690                     
 14808                           ;fs_eeprom.c: 78:     EECON1bits.WREN = 1;
 14809  005690  84A6               	bsf	166,2,c	;volsfr
 14810  005692                     
 14811                           ;fs_eeprom.c: 82:     EECON2 = 0x55;
 14812  005692  0E55               	movlw	85
 14813  005694  6EA7               	movwf	167,c	;volsfr
 14814  005696                     
 14815                           ;fs_eeprom.c: 83:     EECON2 = 0xAA;
 14816  005696  0EAA               	movlw	170
 14817  005698  6EA7               	movwf	167,c	;volsfr
 14818  00569A                     
 14819                           ;fs_eeprom.c: 84:     EECON1bits.WR = 1;
 14820  00569A  82A6               	bsf	166,1,c	;volsfr
 14821  00569C                     l98:
 14822                           
 14823                           ;fs_eeprom.c: 87:     while(PIR2bits.EEIF == 0)
 14824  00569C  A8A1               	btfss	161,4,c	;volatile
 14825  00569E  EF53  F02B         	goto	u6871
 14826  0056A2  EF55  F02B         	goto	u6870
 14827  0056A6                     u6871:
 14828  0056A6  EF4E  F02B         	goto	l98
 14829  0056AA                     u6870:
 14830  0056AA                     
 14831                           ;fs_eeprom.c: 92:     PIR2bits.EEIF = 0;
 14832  0056AA  98A1               	bcf	161,4,c	;volatile
 14833                           
 14834                           ;fs_eeprom.c: 93:     EECON1bits.WREN = 0;
 14835  0056AC  94A6               	bcf	166,2,c	;volsfr
 14836  0056AE  0012               	return		;funcret
 14837  0056B0                     __end_of_eepromWrite:
 14838                           	callstack 0
 14839                           
 14840 ;; *************** function _Lcd_Write_String *****************
 14841 ;; Defined at:
 14842 ;;		line 152 in file "fs_lcd.c"
 14843 ;; Parameters:    Size  Location     Type
 14844 ;;  a               2    4[COMRAM] PTR unsigned char 
 14845 ;;		 -> STR_17(17), driverTimeSettingMenu@textCursor2(16), STR_15(17), stopTimeSettingMenu@textCursor2(16), 
 14846 ;;		 -> STR_13(17), speedLimitSettingMenu@textCursor2(16), STR_11(17), STR_9(17), 
 14847 ;;		 -> secretMenu@textCursor2(16), STR_7(17), pauseMenu@textCursor2(16), STR_5(17), 
 14848 ;;		 -> stopMenu@textCursor2(16), STR_3(17), mainMenu@textCursor2(16), STR_2(17), 
 14849 ;;		 -> STR_1(16), 
 14850 ;; Auto vars:     Size  Location     Type
 14851 ;;  i               2    8[COMRAM] int 
 14852 ;; Return value:  Size  Location     Type
 14853 ;;                  1    wreg      void 
 14854 ;; Registers used:
 14855 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14856 ;; Tracked objects:
 14857 ;;		On entry : 0/0
 14858 ;;		On exit  : 0/0
 14859 ;;		Unchanged: 0/0
 14860 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14861 ;;      Params:         2       0       0       0       0       0       0
 14862 ;;      Locals:         2       0       0       0       0       0       0
 14863 ;;      Temps:          2       0       0       0       0       0       0
 14864 ;;      Totals:         6       0       0       0       0       0       0
 14865 ;;Total ram usage:        6 bytes
 14866 ;; Hardware stack levels used:    1
 14867 ;; Hardware stack levels required when called:    3
 14868 ;; This function calls:
 14869 ;;		_Lcd_Write_Char
 14870 ;; This function is called by:
 14871 ;;		_openLCD_Script
 14872 ;;		_mainMenu
 14873 ;;		_stopMenu
 14874 ;;		_pauseMenu
 14875 ;;		_secretMenu
 14876 ;;		_speedLimitSettingMenu
 14877 ;;		_stopTimeSettingMenu
 14878 ;;		_driverTimeSettingMenu
 14879 ;; This function uses a non-reentrant model
 14880 ;;
 14881                           
 14882                           	psect	text64
 14883  004DC2                     __ptext64:
 14884                           	callstack 0
 14885  004DC2                     _Lcd_Write_String:
 14886                           	callstack 26
 14887  004DC2                     
 14888                           ;fs_lcd.c: 152: void Lcd_Write_String(char *a);fs_lcd.c: 153: {;fs_lcd.c: 154:    int i;
      +                          ;fs_lcd.c: 155:    for(i=0;a[i]!='\0';i++)
 14889  004DC2  0E00               	movlw	0
 14890  004DC4  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14891  004DC6  0E00               	movlw	0
 14892  004DC8  6E09               	movwf	Lcd_Write_String@i^0,c
 14893  004DCA  EF01  F027         	goto	l5888
 14894  004DCE                     l5884:
 14895                           
 14896                           ;fs_lcd.c: 156:    Lcd_Write_Char(a[i]);
 14897  004DCE  5009               	movf	Lcd_Write_String@i^0,w,c
 14898  004DD0  2405               	addwf	Lcd_Write_String@a^0,w,c
 14899  004DD2  6E07               	movwf	??_Lcd_Write_String^0,c
 14900  004DD4  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14901  004DD6  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14902  004DD8  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14903  004DDA  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14904  004DDE  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14905  004DE2  6AF8               	clrf	tblptru,c
 14906  004DE4  0E05               	movlw	(high __ramtop+-1)
 14907  004DE6  64F7               	cpfsgt	tblptrh,c
 14908  004DE8  D003               	bra	u6907
 14909  004DEA  0008               	tblrd		*
 14910  004DEC  50F5               	movf	tablat,w,c
 14911  004DEE  D005               	bra	u6900
 14912  004DF0                     u6907:
 14913  004DF0  CFF6 FFE1          	movff	tblptrl,fsr1l
 14914  004DF4  CFF7 FFE2          	movff	tblptrh,fsr1h
 14915  004DF8  50E7               	movf	indf1,w,c
 14916  004DFA                     u6900:
 14917  004DFA  ECD5  F02A         	call	_Lcd_Write_Char
 14918  004DFE  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14919  004E00  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14920  004E02                     l5888:
 14921  004E02  5009               	movf	Lcd_Write_String@i^0,w,c
 14922  004E04  2405               	addwf	Lcd_Write_String@a^0,w,c
 14923  004E06  6E07               	movwf	??_Lcd_Write_String^0,c
 14924  004E08  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14925  004E0A  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14926  004E0C  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14927  004E0E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14928  004E12  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14929  004E16  6AF8               	clrf	tblptru,c
 14930  004E18  0E05               	movlw	(high __ramtop+-1)
 14931  004E1A  64F7               	cpfsgt	tblptrh,c
 14932  004E1C  D003               	bra	u6917
 14933  004E1E  0008               	tblrd		*
 14934  004E20  50F5               	movf	tablat,w,c
 14935  004E22  D005               	bra	u6910
 14936  004E24                     u6917:
 14937  004E24  CFF6 FFE1          	movff	tblptrl,fsr1l
 14938  004E28  CFF7 FFE2          	movff	tblptrh,fsr1h
 14939  004E2C  50E7               	movf	indf1,w,c
 14940  004E2E                     u6910:
 14941  004E2E  0900               	iorlw	0
 14942  004E30  A4D8               	btfss	status,2,c
 14943  004E32  EF1D  F027         	goto	u6921
 14944  004E36  EF1F  F027         	goto	u6920
 14945  004E3A                     u6921:
 14946  004E3A  EFE7  F026         	goto	l5884
 14947  004E3E                     u6920:
 14948  004E3E  0012               	return		;funcret
 14949  004E40                     __end_of_Lcd_Write_String:
 14950                           	callstack 0
 14951                           
 14952 ;; *************** function _Lcd_Write_Char *****************
 14953 ;; Defined at:
 14954 ;;		line 129 in file "fs_lcd.c"
 14955 ;; Parameters:    Size  Location     Type
 14956 ;;  a               1    wreg     unsigned char 
 14957 ;; Auto vars:     Size  Location     Type
 14958 ;;  a               1    3[COMRAM] unsigned char 
 14959 ;;  y               1    2[COMRAM] unsigned char 
 14960 ;;  temp            1    1[COMRAM] unsigned char 
 14961 ;; Return value:  Size  Location     Type
 14962 ;;                  1    wreg      void 
 14963 ;; Registers used:
 14964 ;;		wreg, status,2, status,0, cstack
 14965 ;; Tracked objects:
 14966 ;;		On entry : 0/0
 14967 ;;		On exit  : 0/0
 14968 ;;		Unchanged: 0/0
 14969 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14970 ;;      Params:         0       0       0       0       0       0       0
 14971 ;;      Locals:         3       0       0       0       0       0       0
 14972 ;;      Temps:          0       0       0       0       0       0       0
 14973 ;;      Totals:         3       0       0       0       0       0       0
 14974 ;;Total ram usage:        3 bytes
 14975 ;; Hardware stack levels used:    1
 14976 ;; Hardware stack levels required when called:    2
 14977 ;; This function calls:
 14978 ;;		_Lcd_Port
 14979 ;; This function is called by:
 14980 ;;		_Lcd_Write_String
 14981 ;; This function uses a non-reentrant model
 14982 ;;
 14983                           
 14984                           	psect	text65
 14985  0055AA                     __ptext65:
 14986                           	callstack 0
 14987  0055AA                     _Lcd_Write_Char:
 14988                           	callstack 26
 14989                           
 14990                           ;incstack = 0
 14991                           ;Lcd_Write_Char@a stored from wreg
 14992  0055AA  6E04               	movwf	Lcd_Write_Char@a^0,c
 14993  0055AC                     
 14994                           ;fs_lcd.c: 129: void Lcd_Write_Char(char a);fs_lcd.c: 130: {;fs_lcd.c: 131:    char temp
      +                          ,y;;fs_lcd.c: 132:    temp = a&0x0F;
 14995  0055AC  5004               	movf	Lcd_Write_Char@a^0,w,c
 14996  0055AE  0B0F               	andlw	15
 14997  0055B0  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14998                           
 14999                           ;fs_lcd.c: 133:    y = a&0xF0;
 15000  0055B2  5004               	movf	Lcd_Write_Char@a^0,w,c
 15001  0055B4  0BF0               	andlw	240
 15002  0055B6  6E03               	movwf	Lcd_Write_Char@y^0,c
 15003  0055B8                     
 15004                           ;fs_lcd.c: 134:    PORTDbits.RD6 = 1;
 15005  0055B8  8C83               	bsf	131,6,c	;volatile
 15006  0055BA                     
 15007                           ;fs_lcd.c: 135:    Lcd_Port(y>>4);
 15008  0055BA  3803               	swapf	Lcd_Write_Char@y^0,w,c
 15009  0055BC  0B0F               	andlw	15
 15010  0055BE  ECD0  F028         	call	_Lcd_Port
 15011  0055C2                     
 15012                           ;fs_lcd.c: 136:    PORTDbits.RD7 = 1;
 15013  0055C2  8E83               	bsf	131,7,c	;volatile
 15014  0055C4                     
 15015                           ;fs_lcd.c: 137:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 15016  0055C4  0ED5               	movlw	213
 15017  0055C6                     u7997:
 15018  0055C6  2EE8               	decfsz	wreg,f,c
 15019  0055C8  D7FE               	bra	u7997
 15020  0055CA  F000               	nop	
 15021  0055CC                     
 15022                           ;fs_lcd.c: 138:    PORTDbits.RD7 = 0;
 15023  0055CC  9E83               	bcf	131,7,c	;volatile
 15024  0055CE                     
 15025                           ;fs_lcd.c: 139:    Lcd_Port(temp);
 15026  0055CE  5002               	movf	Lcd_Write_Char@temp^0,w,c
 15027  0055D0  ECD0  F028         	call	_Lcd_Port
 15028  0055D4                     
 15029                           ;fs_lcd.c: 140:    PORTDbits.RD7 = 1;
 15030  0055D4  8E83               	bsf	131,7,c	;volatile
 15031  0055D6                     
 15032                           ;fs_lcd.c: 141:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 15033  0055D6  0ED5               	movlw	213
 15034  0055D8                     u8007:
 15035  0055D8  2EE8               	decfsz	wreg,f,c
 15036  0055DA  D7FE               	bra	u8007
 15037  0055DC  F000               	nop	
 15038  0055DE                     
 15039                           ;fs_lcd.c: 142:    PORTDbits.RD7 = 0;
 15040  0055DE  9E83               	bcf	131,7,c	;volatile
 15041  0055E0  0012               	return		;funcret
 15042  0055E2                     __end_of_Lcd_Write_Char:
 15043                           	callstack 0
 15044                           
 15045 ;; *************** function _Lcd_Set_Cursor *****************
 15046 ;; Defined at:
 15047 ;;		line 59 in file "fs_lcd.c"
 15048 ;; Parameters:    Size  Location     Type
 15049 ;;  a               1    wreg     unsigned char 
 15050 ;;  b               1    3[COMRAM] unsigned char 
 15051 ;; Auto vars:     Size  Location     Type
 15052 ;;  a               1    4[COMRAM] unsigned char 
 15053 ;;  temp            1    7[COMRAM] unsigned char 
 15054 ;;  y               1    6[COMRAM] unsigned char 
 15055 ;;  z               1    5[COMRAM] unsigned char 
 15056 ;; Return value:  Size  Location     Type
 15057 ;;                  1    wreg      void 
 15058 ;; Registers used:
 15059 ;;		wreg, status,2, status,0, cstack
 15060 ;; Tracked objects:
 15061 ;;		On entry : 0/0
 15062 ;;		On exit  : 0/0
 15063 ;;		Unchanged: 0/0
 15064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15065 ;;      Params:         1       0       0       0       0       0       0
 15066 ;;      Locals:         4       0       0       0       0       0       0
 15067 ;;      Temps:          0       0       0       0       0       0       0
 15068 ;;      Totals:         5       0       0       0       0       0       0
 15069 ;;Total ram usage:        5 bytes
 15070 ;; Hardware stack levels used:    1
 15071 ;; Hardware stack levels required when called:    3
 15072 ;; This function calls:
 15073 ;;		_Lcd_Cmd
 15074 ;; This function is called by:
 15075 ;;		_openLCD_Script
 15076 ;;		_mainMenu
 15077 ;;		_stopMenu
 15078 ;;		_pauseMenu
 15079 ;;		_secretMenu
 15080 ;;		_speedLimitSettingMenu
 15081 ;;		_stopTimeSettingMenu
 15082 ;;		_driverTimeSettingMenu
 15083 ;; This function uses a non-reentrant model
 15084 ;;
 15085                           
 15086                           	psect	text66
 15087  00507E                     __ptext66:
 15088                           	callstack 0
 15089  00507E                     _Lcd_Set_Cursor:
 15090                           	callstack 26
 15091                           
 15092                           ;incstack = 0
 15093                           ;Lcd_Set_Cursor@a stored from wreg
 15094  00507E  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 15095  005080                     
 15096                           ;fs_lcd.c: 59: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 60: {;fs_lcd.c: 61:    char
      +                           temp,z,y;;fs_lcd.c: 62:    if(a == 1)
 15097  005080  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 15098  005082  A4D8               	btfss	status,2,c
 15099  005084  EF46  F028         	goto	u6881
 15100  005088  EF48  F028         	goto	u6880
 15101  00508C                     u6881:
 15102  00508C  EF59  F028         	goto	l5874
 15103  005090                     u6880:
 15104  005090                     
 15105                           ;fs_lcd.c: 63:    {;fs_lcd.c: 64:      temp = 0x80 + b - 1;
 15106  005090  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 15107  005092  0F7F               	addlw	127
 15108  005094  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 15109                           
 15110                           ;fs_lcd.c: 65:       z = temp>>4;
 15111  005096  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 15112  005098  0B0F               	andlw	15
 15113  00509A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 15114                           
 15115                           ;fs_lcd.c: 66:       y = temp & 0x0F;
 15116  00509C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 15117  00509E  0B0F               	andlw	15
 15118  0050A0  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 15119  0050A2                     
 15120                           ;fs_lcd.c: 67:       Lcd_Cmd(z);
 15121  0050A2  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 15122  0050A4  ECA2  F02B         	call	_Lcd_Cmd
 15123  0050A8                     
 15124                           ;fs_lcd.c: 68:       Lcd_Cmd(y);
 15125  0050A8  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 15126  0050AA  ECA2  F02B         	call	_Lcd_Cmd
 15127                           
 15128                           ;fs_lcd.c: 69:    }
 15129  0050AE  EF71  F028         	goto	l172
 15130  0050B2                     l5874:
 15131  0050B2  0E02               	movlw	2
 15132  0050B4  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 15133  0050B6  A4D8               	btfss	status,2,c
 15134  0050B8  EF60  F028         	goto	u6891
 15135  0050BC  EF62  F028         	goto	u6890
 15136  0050C0                     u6891:
 15137  0050C0  EF71  F028         	goto	l172
 15138  0050C4                     u6890:
 15139  0050C4                     
 15140                           ;fs_lcd.c: 71:    {;fs_lcd.c: 72:       temp = 0xC0 + b - 1;
 15141  0050C4  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 15142  0050C6  0FBF               	addlw	191
 15143  0050C8  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 15144                           
 15145                           ;fs_lcd.c: 73:       z = temp>>4;
 15146  0050CA  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 15147  0050CC  0B0F               	andlw	15
 15148  0050CE  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 15149                           
 15150                           ;fs_lcd.c: 74:       y = temp & 0x0F;
 15151  0050D0  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 15152  0050D2  0B0F               	andlw	15
 15153  0050D4  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 15154  0050D6                     
 15155                           ;fs_lcd.c: 75:       Lcd_Cmd(z);
 15156  0050D6  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 15157  0050D8  ECA2  F02B         	call	_Lcd_Cmd
 15158  0050DC                     
 15159                           ;fs_lcd.c: 76:       Lcd_Cmd(y);
 15160  0050DC  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 15161  0050DE  ECA2  F02B         	call	_Lcd_Cmd
 15162  0050E2                     l172:
 15163  0050E2  0012               	return		;funcret
 15164  0050E4                     __end_of_Lcd_Set_Cursor:
 15165                           	callstack 0
 15166                           
 15167 ;; *************** function _buttonControlFlags *****************
 15168 ;; Defined at:
 15169 ;;		line 76 in file "fs_menu_controller.c"
 15170 ;; Parameters:    Size  Location     Type
 15171 ;;		None
 15172 ;; Auto vars:     Size  Location     Type
 15173 ;;		None
 15174 ;; Return value:  Size  Location     Type
 15175 ;;                  1    wreg      void 
 15176 ;; Registers used:
 15177 ;;		wreg, status,2, status,0
 15178 ;; Tracked objects:
 15179 ;;		On entry : 0/0
 15180 ;;		On exit  : 0/0
 15181 ;;		Unchanged: 0/0
 15182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15183 ;;      Params:         0       0       0       0       0       0       0
 15184 ;;      Locals:         0       0       0       0       0       0       0
 15185 ;;      Temps:          0       0       0       0       0       0       0
 15186 ;;      Totals:         0       0       0       0       0       0       0
 15187 ;;Total ram usage:        0 bytes
 15188 ;; Hardware stack levels used:    1
 15189 ;; Hardware stack levels required when called:    1
 15190 ;; This function calls:
 15191 ;;		Nothing
 15192 ;; This function is called by:
 15193 ;;		_menuControl
 15194 ;; This function uses a non-reentrant model
 15195 ;;
 15196                           
 15197                           	psect	text67
 15198  0031CA                     __ptext67:
 15199                           	callstack 0
 15200  0031CA                     _buttonControlFlags:
 15201                           	callstack 28
 15202  0031CA                     
 15203                           ;fs_menu_controller.c: 79:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 15204  0031CA  0101               	movlb	1	; () banked
 15205  0031CC  519D               	movf	_button_bounce_controller& (0+255),w,b
 15206  0031CE  A4D8               	btfss	status,2,c
 15207  0031D0  EFEC  F018         	goto	u7561
 15208  0031D4  EFEE  F018         	goto	u7560
 15209  0031D8                     u7561:
 15210  0031D8  EFF9  F018         	goto	l6286
 15211  0031DC                     u7560:
 15212  0031DC                     
 15213                           ; BSR set to: 1
 15214  0031DC  BE81               	btfsc	129,7,c	;volatile
 15215  0031DE  EFF3  F018         	goto	u7571
 15216  0031E2  EFF5  F018         	goto	u7570
 15217  0031E6                     u7571:
 15218  0031E6  EFF9  F018         	goto	l6286
 15219  0031EA                     u7570:
 15220  0031EA                     
 15221                           ; BSR set to: 1
 15222                           ;fs_menu_controller.c: 80:     {;fs_menu_controller.c: 81:         button_bounce_control
      +                          ler.menu = 1;
 15223  0031EA  0E01               	movlw	1
 15224  0031EC  6F9D               	movwf	_button_bounce_controller& (0+255),b
 15225                           
 15226                           ;fs_menu_controller.c: 82:         menu_flags.menu_input_flag = 1;
 15227  0031EE  0E01               	movlw	1
 15228  0031F0  6F97               	movwf	_menu_flags& (0+255),b
 15229  0031F2                     l6286:
 15230                           
 15231                           ; BSR set to: 1
 15232                           ;fs_menu_controller.c: 85:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 15233  0031F2  AE81               	btfss	129,7,c	;volatile
 15234  0031F4  EFFE  F018         	goto	u7581
 15235  0031F8  EF00  F019         	goto	u7580
 15236  0031FC                     u7581:
 15237  0031FC  EF0C  F019         	goto	l411
 15238  003200                     u7580:
 15239  003200                     
 15240                           ; BSR set to: 1
 15241  003200  059D               	decf	_button_bounce_controller& (0+255),w,b
 15242  003202  A4D8               	btfss	status,2,c
 15243  003204  EF06  F019         	goto	u7591
 15244  003208  EF08  F019         	goto	u7590
 15245  00320C                     u7591:
 15246  00320C  EF0C  F019         	goto	l411
 15247  003210                     u7590:
 15248  003210                     
 15249                           ; BSR set to: 1
 15250                           ;fs_menu_controller.c: 86:     {;fs_menu_controller.c: 87:         button_bounce_control
      +                          ler.menu = 0;
 15251  003210  0E00               	movlw	0
 15252  003212  6F9D               	movwf	_button_bounce_controller& (0+255),b
 15253                           
 15254                           ;fs_menu_controller.c: 88:         menu_flags.menu_input_flag = 0;
 15255  003214  0E00               	movlw	0
 15256  003216  6F97               	movwf	_menu_flags& (0+255),b
 15257  003218                     l411:
 15258                           
 15259                           ; BSR set to: 1
 15260                           ;fs_menu_controller.c: 92:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 15261  003218  51A0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 15262  00321A  A4D8               	btfss	status,2,c
 15263  00321C  EF12  F019         	goto	u7601
 15264  003220  EF14  F019         	goto	u7600
 15265  003224                     u7601:
 15266  003224  EF1F  F019         	goto	l6296
 15267  003228                     u7600:
 15268  003228                     
 15269                           ; BSR set to: 1
 15270  003228  B483               	btfsc	131,2,c	;volatile
 15271  00322A  EF19  F019         	goto	u7611
 15272  00322E  EF1B  F019         	goto	u7610
 15273  003232                     u7611:
 15274  003232  EF1F  F019         	goto	l6296
 15275  003236                     u7610:
 15276  003236                     
 15277                           ; BSR set to: 1
 15278                           ;fs_menu_controller.c: 93:     {;fs_menu_controller.c: 94:         button_bounce_control
      +                          ler.pause = 1;
 15279  003236  0E01               	movlw	1
 15280  003238  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15281                           
 15282                           ;fs_menu_controller.c: 95:         menu_flags.menu_pause_flag = 1;
 15283  00323A  0E01               	movlw	1
 15284  00323C  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 15285  00323E                     l6296:
 15286                           
 15287                           ; BSR set to: 1
 15288                           ;fs_menu_controller.c: 97:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 15289  00323E  A483               	btfss	131,2,c	;volatile
 15290  003240  EF24  F019         	goto	u7621
 15291  003244  EF26  F019         	goto	u7620
 15292  003248                     u7621:
 15293  003248  EF32  F019         	goto	l413
 15294  00324C                     u7620:
 15295  00324C                     
 15296                           ; BSR set to: 1
 15297  00324C  05A0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 15298  00324E  A4D8               	btfss	status,2,c
 15299  003250  EF2C  F019         	goto	u7631
 15300  003254  EF2E  F019         	goto	u7630
 15301  003258                     u7631:
 15302  003258  EF32  F019         	goto	l413
 15303  00325C                     u7630:
 15304  00325C                     
 15305                           ; BSR set to: 1
 15306                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 0;
 15307  00325C  0E00               	movlw	0
 15308  00325E  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15309                           
 15310                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 0;
 15311  003260  0E00               	movlw	0
 15312  003262  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 15313  003264                     l413:
 15314                           
 15315                           ; BSR set to: 1
 15316                           ;fs_menu_controller.c: 104:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 15317  003264  519E               	movf	(_button_bounce_controller+1)& (0+255),w,b
 15318  003266  A4D8               	btfss	status,2,c
 15319  003268  EF38  F019         	goto	u7641
 15320  00326C  EF3A  F019         	goto	u7640
 15321  003270                     u7641:
 15322  003270  EF45  F019         	goto	l6306
 15323  003274                     u7640:
 15324  003274                     
 15325                           ; BSR set to: 1
 15326  003274  B083               	btfsc	131,0,c	;volatile
 15327  003276  EF3F  F019         	goto	u7651
 15328  00327A  EF41  F019         	goto	u7650
 15329  00327E                     u7651:
 15330  00327E  EF45  F019         	goto	l6306
 15331  003282                     u7650:
 15332  003282                     
 15333                           ; BSR set to: 1
 15334                           ;fs_menu_controller.c: 105:     {;fs_menu_controller.c: 106:         button_bounce_contr
      +                          oller.start = 1;
 15335  003282  0E01               	movlw	1
 15336  003284  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 15337                           
 15338                           ;fs_menu_controller.c: 107:         menu_flags.menu_start_flag = 1;
 15339  003286  0E01               	movlw	1
 15340  003288  6F98               	movwf	(_menu_flags+1)& (0+255),b
 15341  00328A                     l6306:
 15342                           
 15343                           ; BSR set to: 1
 15344                           ;fs_menu_controller.c: 109:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 15345  00328A  A083               	btfss	131,0,c	;volatile
 15346  00328C  EF4A  F019         	goto	u7661
 15347  003290  EF4C  F019         	goto	u7660
 15348  003294                     u7661:
 15349  003294  EF58  F019         	goto	l415
 15350  003298                     u7660:
 15351  003298                     
 15352                           ; BSR set to: 1
 15353  003298  059E               	decf	(_button_bounce_controller+1)& (0+255),w,b
 15354  00329A  A4D8               	btfss	status,2,c
 15355  00329C  EF52  F019         	goto	u7671
 15356  0032A0  EF54  F019         	goto	u7670
 15357  0032A4                     u7671:
 15358  0032A4  EF58  F019         	goto	l415
 15359  0032A8                     u7670:
 15360  0032A8                     
 15361                           ; BSR set to: 1
 15362                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 0;
 15363  0032A8  0E00               	movlw	0
 15364  0032AA  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 15365                           
 15366                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 0;
 15367  0032AC  0E00               	movlw	0
 15368  0032AE  6F98               	movwf	(_menu_flags+1)& (0+255),b
 15369  0032B0                     l415:
 15370                           
 15371                           ; BSR set to: 1
 15372                           ;fs_menu_controller.c: 116:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 15373  0032B0  519F               	movf	(_button_bounce_controller+2)& (0+255),w,b
 15374  0032B2  A4D8               	btfss	status,2,c
 15375  0032B4  EF5E  F019         	goto	u7681
 15376  0032B8  EF60  F019         	goto	u7680
 15377  0032BC                     u7681:
 15378  0032BC  EF6B  F019         	goto	l6316
 15379  0032C0                     u7680:
 15380  0032C0                     
 15381                           ; BSR set to: 1
 15382  0032C0  B283               	btfsc	131,1,c	;volatile
 15383  0032C2  EF65  F019         	goto	u7691
 15384  0032C6  EF67  F019         	goto	u7690
 15385  0032CA                     u7691:
 15386  0032CA  EF6B  F019         	goto	l6316
 15387  0032CE                     u7690:
 15388  0032CE                     
 15389                           ; BSR set to: 1
 15390                           ;fs_menu_controller.c: 117:     {;fs_menu_controller.c: 118:         button_bounce_contr
      +                          oller.stop = 1;
 15391  0032CE  0E01               	movlw	1
 15392  0032D0  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 15393                           
 15394                           ;fs_menu_controller.c: 119:         menu_flags.menu_stop_flag = 1;
 15395  0032D2  0E01               	movlw	1
 15396  0032D4  6F99               	movwf	(_menu_flags+2)& (0+255),b
 15397  0032D6                     l6316:
 15398                           
 15399                           ; BSR set to: 1
 15400                           ;fs_menu_controller.c: 121:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 15401  0032D6  A283               	btfss	131,1,c	;volatile
 15402  0032D8  EF70  F019         	goto	u7701
 15403  0032DC  EF72  F019         	goto	u7700
 15404  0032E0                     u7701:
 15405  0032E0  EF7E  F019         	goto	l417
 15406  0032E4                     u7700:
 15407  0032E4                     
 15408                           ; BSR set to: 1
 15409  0032E4  059F               	decf	(_button_bounce_controller+2)& (0+255),w,b
 15410  0032E6  A4D8               	btfss	status,2,c
 15411  0032E8  EF78  F019         	goto	u7711
 15412  0032EC  EF7A  F019         	goto	u7710
 15413  0032F0                     u7711:
 15414  0032F0  EF7E  F019         	goto	l417
 15415  0032F4                     u7710:
 15416  0032F4                     
 15417                           ; BSR set to: 1
 15418                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 0;
 15419  0032F4  0E00               	movlw	0
 15420  0032F6  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 15421                           
 15422                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 0;
 15423  0032F8  0E00               	movlw	0
 15424  0032FA  6F99               	movwf	(_menu_flags+2)& (0+255),b
 15425  0032FC                     l417:
 15426                           
 15427                           ; BSR set to: 1
 15428                           ;fs_menu_controller.c: 128:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 15429  0032FC  51A2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 15430  0032FE  A4D8               	btfss	status,2,c
 15431  003300  EF84  F019         	goto	u7721
 15432  003304  EF86  F019         	goto	u7720
 15433  003308                     u7721:
 15434  003308  EF91  F019         	goto	l6326
 15435  00330C                     u7720:
 15436  00330C                     
 15437                           ; BSR set to: 1
 15438  00330C  BC81               	btfsc	129,6,c	;volatile
 15439  00330E  EF8B  F019         	goto	u7731
 15440  003312  EF8D  F019         	goto	u7730
 15441  003316                     u7731:
 15442  003316  EF91  F019         	goto	l6326
 15443  00331A                     u7730:
 15444  00331A                     
 15445                           ; BSR set to: 1
 15446                           ;fs_menu_controller.c: 129:     {;fs_menu_controller.c: 130:         button_bounce_contr
      +                          oller.increase = 1;
 15447  00331A  0E01               	movlw	1
 15448  00331C  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15449                           
 15450                           ;fs_menu_controller.c: 131:         menu_flags.menu_increase_flag = 1;
 15451  00331E  0E01               	movlw	1
 15452  003320  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 15453  003322                     l6326:
 15454                           
 15455                           ; BSR set to: 1
 15456                           ;fs_menu_controller.c: 133:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 15457  003322  AC81               	btfss	129,6,c	;volatile
 15458  003324  EF96  F019         	goto	u7741
 15459  003328  EF98  F019         	goto	u7740
 15460  00332C                     u7741:
 15461  00332C  EFA4  F019         	goto	l419
 15462  003330                     u7740:
 15463  003330                     
 15464                           ; BSR set to: 1
 15465  003330  05A2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 15466  003332  A4D8               	btfss	status,2,c
 15467  003334  EF9E  F019         	goto	u7751
 15468  003338  EFA0  F019         	goto	u7750
 15469  00333C                     u7751:
 15470  00333C  EFA4  F019         	goto	l419
 15471  003340                     u7750:
 15472  003340                     
 15473                           ; BSR set to: 1
 15474                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 15475  003340  0E00               	movlw	0
 15476  003342  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15477                           
 15478                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 15479  003344  0E00               	movlw	0
 15480  003346  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 15481  003348                     l419:
 15482                           
 15483                           ; BSR set to: 1
 15484                           ;fs_menu_controller.c: 140:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 15485  003348  51A1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 15486  00334A  A4D8               	btfss	status,2,c
 15487  00334C  EFAA  F019         	goto	u7761
 15488  003350  EFAC  F019         	goto	u7760
 15489  003354                     u7761:
 15490  003354  EFB7  F019         	goto	l6336
 15491  003358                     u7760:
 15492  003358                     
 15493                           ; BSR set to: 1
 15494  003358  B883               	btfsc	131,4,c	;volatile
 15495  00335A  EFB1  F019         	goto	u7771
 15496  00335E  EFB3  F019         	goto	u7770
 15497  003362                     u7771:
 15498  003362  EFB7  F019         	goto	l6336
 15499  003366                     u7770:
 15500  003366                     
 15501                           ; BSR set to: 1
 15502                           ;fs_menu_controller.c: 141:     {;fs_menu_controller.c: 142:         button_bounce_contr
      +                          oller.decrease = 1;
 15503  003366  0E01               	movlw	1
 15504  003368  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15505                           
 15506                           ;fs_menu_controller.c: 143:         menu_flags.menu_decrease_flag = 1;
 15507  00336A  0E01               	movlw	1
 15508  00336C  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 15509  00336E                     l6336:
 15510                           
 15511                           ; BSR set to: 1
 15512                           ;fs_menu_controller.c: 145:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 15513  00336E  A883               	btfss	131,4,c	;volatile
 15514  003370  EFBC  F019         	goto	u7781
 15515  003374  EFBE  F019         	goto	u7780
 15516  003378                     u7781:
 15517  003378  EFCA  F019         	goto	l422
 15518  00337C                     u7780:
 15519  00337C                     
 15520                           ; BSR set to: 1
 15521  00337C  05A1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 15522  00337E  A4D8               	btfss	status,2,c
 15523  003380  EFC4  F019         	goto	u7791
 15524  003384  EFC6  F019         	goto	u7790
 15525  003388                     u7791:
 15526  003388  EFCA  F019         	goto	l422
 15527  00338C                     u7790:
 15528  00338C                     
 15529                           ; BSR set to: 1
 15530                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 15531  00338C  0E00               	movlw	0
 15532  00338E  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15533                           
 15534                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 15535  003390  0E00               	movlw	0
 15536  003392  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 15537  003394                     l422:
 15538                           
 15539                           ; BSR set to: 1
 15540  003394  0012               	return		;funcret
 15541  003396                     __end_of_buttonControlFlags:
 15542                           	callstack 0
 15543                           
 15544 ;; *************** function _mcu_init *****************
 15545 ;; Defined at:
 15546 ;;		line 37 in file "fs_mcu.c"
 15547 ;; Parameters:    Size  Location     Type
 15548 ;;		None
 15549 ;; Auto vars:     Size  Location     Type
 15550 ;;		None
 15551 ;; Return value:  Size  Location     Type
 15552 ;;                  1    wreg      void 
 15553 ;; Registers used:
 15554 ;;		wreg, status,2
 15555 ;; Tracked objects:
 15556 ;;		On entry : 0/0
 15557 ;;		On exit  : 0/0
 15558 ;;		Unchanged: 0/0
 15559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15560 ;;      Params:         0       0       0       0       0       0       0
 15561 ;;      Locals:         0       0       0       0       0       0       0
 15562 ;;      Temps:          0       0       0       0       0       0       0
 15563 ;;      Totals:         0       0       0       0       0       0       0
 15564 ;;Total ram usage:        0 bytes
 15565 ;; Hardware stack levels used:    1
 15566 ;; Hardware stack levels required when called:    1
 15567 ;; This function calls:
 15568 ;;		Nothing
 15569 ;; This function is called by:
 15570 ;;		_main
 15571 ;; This function uses a non-reentrant model
 15572 ;;
 15573                           
 15574                           	psect	text68
 15575  00577C                     __ptext68:
 15576                           	callstack 0
 15577  00577C                     _mcu_init:
 15578                           	callstack 29
 15579  00577C                     
 15580                           ;fs_mcu.c: 39:    OSCCONbits.IRCF = 0b111;
 15581  00577C  0E70               	movlw	112
 15582  00577E  12D3               	iorwf	211,f,c	;volatile
 15583  005780                     
 15584                           ;fs_mcu.c: 40:    OSCTUNEbits.PLLEN = 0b1;
 15585  005780  8C9B               	bsf	155,6,c	;volatile
 15586  005782                     l311:
 15587  005782  A4D3               	btfss	211,2,c	;volatile
 15588  005784  EFC6  F02B         	goto	u7801
 15589  005788  EFC8  F02B         	goto	u7800
 15590  00578C                     u7801:
 15591  00578C  EFC1  F02B         	goto	l311
 15592  005790                     u7800:
 15593  005790  0012               	return		;funcret
 15594  005792                     __end_of_mcu_init:
 15595                           	callstack 0
 15596                           
 15597 ;; *************** function _lcd_init *****************
 15598 ;; Defined at:
 15599 ;;		line 85 in file "fs_lcd.c"
 15600 ;; Parameters:    Size  Location     Type
 15601 ;;		None
 15602 ;; Auto vars:     Size  Location     Type
 15603 ;;		None
 15604 ;; Return value:  Size  Location     Type
 15605 ;;                  1    wreg      void 
 15606 ;; Registers used:
 15607 ;;		wreg, status,2, cstack
 15608 ;; Tracked objects:
 15609 ;;		On entry : 0/0
 15610 ;;		On exit  : 0/0
 15611 ;;		Unchanged: 0/0
 15612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15613 ;;      Params:         0       0       0       0       0       0       0
 15614 ;;      Locals:         0       0       0       0       0       0       0
 15615 ;;      Temps:          2       0       0       0       0       0       0
 15616 ;;      Totals:         2       0       0       0       0       0       0
 15617 ;;Total ram usage:        2 bytes
 15618 ;; Hardware stack levels used:    1
 15619 ;; Hardware stack levels required when called:    3
 15620 ;; This function calls:
 15621 ;;		_Lcd_Cmd
 15622 ;;		_Lcd_Port
 15623 ;; This function is called by:
 15624 ;;		_main
 15625 ;; This function uses a non-reentrant model
 15626 ;;
 15627                           
 15628                           	psect	text69
 15629  004D2C                     __ptext69:
 15630                           	callstack 0
 15631  004D2C                     _lcd_init:
 15632                           	callstack 27
 15633  004D2C                     
 15634                           ;fs_lcd.c: 87:     TRISDbits.RD6 = 0;
 15635  004D2C  9C95               	bcf	149,6,c	;volatile
 15636                           
 15637                           ;fs_lcd.c: 88:     ANSELDbits.ANSD6 = 0;
 15638  004D2E  010F               	movlb	15	; () banked
 15639  004D30  9D3B               	bcf	59,6,b	;volatile
 15640                           
 15641                           ;fs_lcd.c: 90:     TRISDbits.RD7 = 0;
 15642  004D32  9E95               	bcf	149,7,c	;volatile
 15643                           
 15644                           ;fs_lcd.c: 91:     ANSELDbits.ANSD7 = 0;
 15645  004D34  9F3B               	bcf	59,7,b	;volatile
 15646                           
 15647                           ;fs_lcd.c: 93:     TRISBbits.RB0 = 0;
 15648  004D36  9093               	bcf	147,0,c	;volatile
 15649                           
 15650                           ;fs_lcd.c: 94:     ANSELBbits.ANSB0 = 0;
 15651  004D38  9139               	bcf	57,0,b	;volatile
 15652                           
 15653                           ;fs_lcd.c: 96:     TRISBbits.RB1 = 0;
 15654  004D3A  9293               	bcf	147,1,c	;volatile
 15655                           
 15656                           ;fs_lcd.c: 97:     ANSELBbits.ANSB1 = 0;
 15657  004D3C  9339               	bcf	57,1,b	;volatile
 15658                           
 15659                           ;fs_lcd.c: 99:     TRISBbits.RB2 = 0;
 15660  004D3E  9493               	bcf	147,2,c	;volatile
 15661                           
 15662                           ;fs_lcd.c: 100:     ANSELBbits.ANSB2 = 0;
 15663  004D40  9539               	bcf	57,2,b	;volatile
 15664                           
 15665                           ;fs_lcd.c: 102:     TRISBbits.RB3 = 0;
 15666  004D42  9693               	bcf	147,3,c	;volatile
 15667                           
 15668                           ;fs_lcd.c: 103:     ANSELBbits.ANSB3 = 0;
 15669  004D44  9739               	bcf	57,3,b	;volatile
 15670  004D46                     
 15671                           ; BSR set to: 15
 15672                           ;fs_lcd.c: 106:     Lcd_Port(0x00);
 15673  004D46  0E00               	movlw	0
 15674  004D48  ECD0  F028         	call	_Lcd_Port
 15675  004D4C                     
 15676                           ;fs_lcd.c: 107:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15677  004D4C  0E02               	movlw	2
 15678  004D4E  6E05               	movwf	(??_lcd_init+1)^0,c
 15679  004D50  0EA0               	movlw	160
 15680  004D52  6E04               	movwf	??_lcd_init^0,c
 15681  004D54  0E92               	movlw	146
 15682  004D56                     u8017:
 15683  004D56  2EE8               	decfsz	wreg,f,c
 15684  004D58  D7FE               	bra	u8017
 15685  004D5A  2E04               	decfsz	??_lcd_init^0,f,c
 15686  004D5C  D7FC               	bra	u8017
 15687  004D5E  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 15688  004D60  D7FA               	bra	u8017
 15689  004D62  D000               	nop2	
 15690  004D64                     
 15691                           ;fs_lcd.c: 108:     Lcd_Cmd(0x03);
 15692  004D64  0E03               	movlw	3
 15693  004D66  ECA2  F02B         	call	_Lcd_Cmd
 15694  004D6A                     
 15695                           ;fs_lcd.c: 109:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15696  004D6A  0E68               	movlw	104
 15697  004D6C  6E04               	movwf	??_lcd_init^0,c
 15698  004D6E  0EE4               	movlw	228
 15699  004D70                     u8027:
 15700  004D70  2EE8               	decfsz	wreg,f,c
 15701  004D72  D7FE               	bra	u8027
 15702  004D74  2E04               	decfsz	??_lcd_init^0,f,c
 15703  004D76  D7FC               	bra	u8027
 15704  004D78  D000               	nop2	
 15705  004D7A                     
 15706                           ;fs_lcd.c: 110:     Lcd_Cmd(0x03);
 15707  004D7A  0E03               	movlw	3
 15708  004D7C  ECA2  F02B         	call	_Lcd_Cmd
 15709  004D80                     
 15710                           ;fs_lcd.c: 111:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15711  004D80  0EE5               	movlw	229
 15712  004D82  6E04               	movwf	??_lcd_init^0,c
 15713  004D84  0E91               	movlw	145
 15714  004D86                     u8037:
 15715  004D86  2EE8               	decfsz	wreg,f,c
 15716  004D88  D7FE               	bra	u8037
 15717  004D8A  2E04               	decfsz	??_lcd_init^0,f,c
 15718  004D8C  D7FC               	bra	u8037
 15719  004D8E  F000               	nop	
 15720  004D90                     
 15721                           ;fs_lcd.c: 112:     Lcd_Cmd(0x03);
 15722  004D90  0E03               	movlw	3
 15723  004D92  ECA2  F02B         	call	_Lcd_Cmd
 15724  004D96                     
 15725                           ;fs_lcd.c: 113:     Lcd_Cmd(0x02);
 15726  004D96  0E02               	movlw	2
 15727  004D98  ECA2  F02B         	call	_Lcd_Cmd
 15728  004D9C                     
 15729                           ;fs_lcd.c: 114:     Lcd_Cmd(0x02);
 15730  004D9C  0E02               	movlw	2
 15731  004D9E  ECA2  F02B         	call	_Lcd_Cmd
 15732  004DA2                     
 15733                           ;fs_lcd.c: 115:     Lcd_Cmd(0x08);
 15734  004DA2  0E08               	movlw	8
 15735  004DA4  ECA2  F02B         	call	_Lcd_Cmd
 15736  004DA8                     
 15737                           ;fs_lcd.c: 116:     Lcd_Cmd(0x00);
 15738  004DA8  0E00               	movlw	0
 15739  004DAA  ECA2  F02B         	call	_Lcd_Cmd
 15740  004DAE                     
 15741                           ;fs_lcd.c: 117:     Lcd_Cmd(0x0C);
 15742  004DAE  0E0C               	movlw	12
 15743  004DB0  ECA2  F02B         	call	_Lcd_Cmd
 15744  004DB4                     
 15745                           ;fs_lcd.c: 118:     Lcd_Cmd(0x00);
 15746  004DB4  0E00               	movlw	0
 15747  004DB6  ECA2  F02B         	call	_Lcd_Cmd
 15748  004DBA                     
 15749                           ;fs_lcd.c: 119:     Lcd_Cmd(0x06);
 15750  004DBA  0E06               	movlw	6
 15751  004DBC  ECA2  F02B         	call	_Lcd_Cmd
 15752  004DC0  0012               	return		;funcret
 15753  004DC2                     __end_of_lcd_init:
 15754                           	callstack 0
 15755                           
 15756 ;; *************** function _Lcd_Cmd *****************
 15757 ;; Defined at:
 15758 ;;		line 32 in file "fs_lcd.c"
 15759 ;; Parameters:    Size  Location     Type
 15760 ;;  a               1    wreg     unsigned char 
 15761 ;; Auto vars:     Size  Location     Type
 15762 ;;  a               1    2[COMRAM] unsigned char 
 15763 ;; Return value:  Size  Location     Type
 15764 ;;                  1    wreg      void 
 15765 ;; Registers used:
 15766 ;;		wreg, status,2, cstack
 15767 ;; Tracked objects:
 15768 ;;		On entry : 0/0
 15769 ;;		On exit  : 0/0
 15770 ;;		Unchanged: 0/0
 15771 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15772 ;;      Params:         0       0       0       0       0       0       0
 15773 ;;      Locals:         1       0       0       0       0       0       0
 15774 ;;      Temps:          1       0       0       0       0       0       0
 15775 ;;      Totals:         2       0       0       0       0       0       0
 15776 ;;Total ram usage:        2 bytes
 15777 ;; Hardware stack levels used:    1
 15778 ;; Hardware stack levels required when called:    2
 15779 ;; This function calls:
 15780 ;;		_Lcd_Port
 15781 ;; This function is called by:
 15782 ;;		_Lcd_Clear
 15783 ;;		_Lcd_Set_Cursor
 15784 ;;		_lcd_init
 15785 ;;		_Lcd_Shift_Right
 15786 ;;		_Lcd_Shift_Left
 15787 ;; This function uses a non-reentrant model
 15788 ;;
 15789                           
 15790                           	psect	text70
 15791  005744                     __ptext70:
 15792                           	callstack 0
 15793  005744                     _Lcd_Cmd:
 15794                           	callstack 26
 15795                           
 15796                           ;incstack = 0
 15797                           ;Lcd_Cmd@a stored from wreg
 15798  005744  6E03               	movwf	Lcd_Cmd@a^0,c
 15799  005746                     
 15800                           ;fs_lcd.c: 32: void Lcd_Cmd(char a);fs_lcd.c: 33: {;fs_lcd.c: 34:    PORTDbits.RD6 = 0;
 15801  005746  9C83               	bcf	131,6,c	;volatile
 15802  005748                     
 15803                           ;fs_lcd.c: 35:    Lcd_Port(a);
 15804  005748  5003               	movf	Lcd_Cmd@a^0,w,c
 15805  00574A  ECD0  F028         	call	_Lcd_Port
 15806  00574E                     
 15807                           ;fs_lcd.c: 36:    PORTDbits.RD7 = 1;
 15808  00574E  8E83               	bsf	131,7,c	;volatile
 15809  005750                     
 15810                           ;fs_lcd.c: 37:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15811  005750  0E2A               	movlw	42
 15812  005752  6E02               	movwf	??_Lcd_Cmd^0,c
 15813  005754  0E8E               	movlw	142
 15814  005756                     u8047:
 15815  005756  2EE8               	decfsz	wreg,f,c
 15816  005758  D7FE               	bra	u8047
 15817  00575A  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15818  00575C  D7FC               	bra	u8047
 15819  00575E                     
 15820                           ;fs_lcd.c: 38:    PORTDbits.RD7 = 0;
 15821  00575E  9E83               	bcf	131,7,c	;volatile
 15822  005760  0012               	return		;funcret
 15823  005762                     __end_of_Lcd_Cmd:
 15824                           	callstack 0
 15825                           
 15826 ;; *************** function _Lcd_Port *****************
 15827 ;; Defined at:
 15828 ;;		line 9 in file "fs_lcd.c"
 15829 ;; Parameters:    Size  Location     Type
 15830 ;;  a               1    wreg     unsigned char 
 15831 ;; Auto vars:     Size  Location     Type
 15832 ;;  a               1    0[COMRAM] unsigned char 
 15833 ;; Return value:  Size  Location     Type
 15834 ;;                  1    wreg      void 
 15835 ;; Registers used:
 15836 ;;		wreg
 15837 ;; Tracked objects:
 15838 ;;		On entry : 0/0
 15839 ;;		On exit  : 0/0
 15840 ;;		Unchanged: 0/0
 15841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15842 ;;      Params:         0       0       0       0       0       0       0
 15843 ;;      Locals:         1       0       0       0       0       0       0
 15844 ;;      Temps:          0       0       0       0       0       0       0
 15845 ;;      Totals:         1       0       0       0       0       0       0
 15846 ;;Total ram usage:        1 bytes
 15847 ;; Hardware stack levels used:    1
 15848 ;; Hardware stack levels required when called:    1
 15849 ;; This function calls:
 15850 ;;		Nothing
 15851 ;; This function is called by:
 15852 ;;		_Lcd_Cmd
 15853 ;;		_lcd_init
 15854 ;;		_Lcd_Write_Char
 15855 ;; This function uses a non-reentrant model
 15856 ;;
 15857                           
 15858                           	psect	text71
 15859  0051A0                     __ptext71:
 15860                           	callstack 0
 15861  0051A0                     _Lcd_Port:
 15862                           	callstack 26
 15863                           
 15864                           ;incstack = 0
 15865                           ;Lcd_Port@a stored from wreg
 15866  0051A0  6E01               	movwf	Lcd_Port@a^0,c
 15867  0051A2                     
 15868                           ;fs_lcd.c: 9: void Lcd_Port(char a);fs_lcd.c: 10: {;fs_lcd.c: 11:    if(a & 1) { PORTBbi
      +                          ts.RB0 = 1;}
 15869  0051A2  A001               	btfss	Lcd_Port@a^0,0,c
 15870  0051A4  EFD6  F028         	goto	u6401
 15871  0051A8  EFD8  F028         	goto	u6400
 15872  0051AC                     u6401:
 15873  0051AC  EFDB  F028         	goto	l152
 15874  0051B0                     u6400:
 15875  0051B0  8081               	bsf	129,0,c	;volatile
 15876  0051B2  EFDC  F028         	goto	l5478
 15877  0051B6                     l152:
 15878  0051B6  9081               	bcf	129,0,c	;volatile
 15879  0051B8                     l5478:
 15880                           
 15881                           ;fs_lcd.c: 14:    if(a & 2) { PORTBbits.RB1 = 1;}
 15882  0051B8  A201               	btfss	Lcd_Port@a^0,1,c
 15883  0051BA  EFE1  F028         	goto	u6411
 15884  0051BE  EFE3  F028         	goto	u6410
 15885  0051C2                     u6411:
 15886  0051C2  EFE6  F028         	goto	l154
 15887  0051C6                     u6410:
 15888  0051C6  8281               	bsf	129,1,c	;volatile
 15889  0051C8  EFE7  F028         	goto	l5482
 15890  0051CC                     l154:
 15891  0051CC  9281               	bcf	129,1,c	;volatile
 15892  0051CE                     l5482:
 15893                           
 15894                           ;fs_lcd.c: 17:    if(a & 4) {PORTBbits.RB2 = 1;}
 15895  0051CE  A401               	btfss	Lcd_Port@a^0,2,c
 15896  0051D0  EFEC  F028         	goto	u6421
 15897  0051D4  EFEE  F028         	goto	u6420
 15898  0051D8                     u6421:
 15899  0051D8  EFF1  F028         	goto	l156
 15900  0051DC                     u6420:
 15901  0051DC  8481               	bsf	129,2,c	;volatile
 15902  0051DE  EFF2  F028         	goto	l5486
 15903  0051E2                     l156:
 15904  0051E2  9481               	bcf	129,2,c	;volatile
 15905  0051E4                     l5486:
 15906                           
 15907                           ;fs_lcd.c: 20:    if(a & 8) {PORTBbits.RB3 = 1;}
 15908  0051E4  A601               	btfss	Lcd_Port@a^0,3,c
 15909  0051E6  EFF7  F028         	goto	u6431
 15910  0051EA  EFF9  F028         	goto	u6430
 15911  0051EE                     u6431:
 15912  0051EE  EFFC  F028         	goto	l158
 15913  0051F2                     u6430:
 15914  0051F2  8681               	bsf	129,3,c	;volatile
 15915  0051F4  EFFD  F028         	goto	l160
 15916  0051F8                     l158:
 15917  0051F8  9681               	bcf	129,3,c	;volatile
 15918  0051FA                     l160:
 15919  0051FA  0012               	return		;funcret
 15920  0051FC                     __end_of_Lcd_Port:
 15921                           	callstack 0
 15922                           
 15923 ;; *************** function _adcInit *****************
 15924 ;; Defined at:
 15925 ;;		line 53 in file "fs_adc.c"
 15926 ;; Parameters:    Size  Location     Type
 15927 ;;		None
 15928 ;; Auto vars:     Size  Location     Type
 15929 ;;		None
 15930 ;; Return value:  Size  Location     Type
 15931 ;;                  1    wreg      void 
 15932 ;; Registers used:
 15933 ;;		wreg, status,2
 15934 ;; Tracked objects:
 15935 ;;		On entry : 0/0
 15936 ;;		On exit  : 0/0
 15937 ;;		Unchanged: 0/0
 15938 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15939 ;;      Params:         0       0       0       0       0       0       0
 15940 ;;      Locals:         0       0       0       0       0       0       0
 15941 ;;      Temps:          0       0       0       0       0       0       0
 15942 ;;      Totals:         0       0       0       0       0       0       0
 15943 ;;Total ram usage:        0 bytes
 15944 ;; Hardware stack levels used:    1
 15945 ;; Hardware stack levels required when called:    1
 15946 ;; This function calls:
 15947 ;;		Nothing
 15948 ;; This function is called by:
 15949 ;;		_main
 15950 ;; This function uses a non-reentrant model
 15951 ;;
 15952                           
 15953                           	psect	text72
 15954  005488                     __ptext72:
 15955                           	callstack 0
 15956  005488                     _adcInit:
 15957                           	callstack 29
 15958  005488                     
 15959                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15960  005488  8092               	bsf	146,0,c	;volatile
 15961                           
 15962                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15963  00548A  010F               	movlb	15	; () banked
 15964  00548C  8138               	bsf	56,0,b	;volatile
 15965                           
 15966                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15967  00548E  8292               	bsf	146,1,c	;volatile
 15968                           
 15969                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15970  005490  8338               	bsf	56,1,b	;volatile
 15971                           
 15972                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15973  005492  8492               	bsf	146,2,c	;volatile
 15974                           
 15975                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15976  005494  8538               	bsf	56,2,b	;volatile
 15977                           
 15978                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15979  005496  8692               	bsf	146,3,c	;volatile
 15980                           
 15981                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15982  005498  8738               	bsf	56,3,b	;volatile
 15983                           
 15984                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15985  00549A  8A92               	bsf	146,5,c	;volatile
 15986                           
 15987                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15988  00549C  8B38               	bsf	56,5,b	;volatile
 15989                           
 15990                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15991  00549E  8096               	bsf	150,0,c	;volatile
 15992                           
 15993                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15994  0054A0  813C               	bsf	60,0,b	;volatile
 15995                           
 15996                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15997  0054A2  8296               	bsf	150,1,c	;volatile
 15998                           
 15999                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 16000  0054A4  833C               	bsf	60,1,b	;volatile
 16001                           
 16002                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 16003  0054A6  8496               	bsf	150,2,c	;volatile
 16004                           
 16005                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 16006  0054A8  853C               	bsf	60,2,b	;volatile
 16007  0054AA                     
 16008                           ; BSR set to: 15
 16009                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 16010  0054AA  0E01               	movlw	1
 16011  0054AC  6EC2               	movwf	194,c	;volatile
 16012                           
 16013                           ;fs_adc.c: 80:     ADCON1=0x00;
 16014  0054AE  0E00               	movlw	0
 16015  0054B0  6EC1               	movwf	193,c	;volatile
 16016  0054B2                     
 16017                           ; BSR set to: 15
 16018                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 16019  0054B2  8EC0               	bsf	192,7,c	;volatile
 16020                           
 16021                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 16022  0054B4  50C0               	movf	192,w,c	;volatile
 16023  0054B6  0BC7               	andlw	-57
 16024  0054B8  0910               	iorlw	16
 16025  0054BA  6EC0               	movwf	192,c	;volatile
 16026                           
 16027                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 16028  0054BC  50C0               	movf	192,w,c	;volatile
 16029  0054BE  0BF8               	andlw	-8
 16030  0054C0  0906               	iorlw	6
 16031  0054C2  6EC0               	movwf	192,c	;volatile
 16032  0054C4                     
 16033                           ; BSR set to: 15
 16034  0054C4  0012               	return		;funcret
 16035  0054C6                     __end_of_adcInit:
 16036                           	callstack 0
 16037                           
 16038 ;; *************** function _PWM_Init *****************
 16039 ;; Defined at:
 16040 ;;		line 34 in file "fs_pwm.c"
 16041 ;; Parameters:    Size  Location     Type
 16042 ;;		None
 16043 ;; Auto vars:     Size  Location     Type
 16044 ;;		None
 16045 ;; Return value:  Size  Location     Type
 16046 ;;                  1    wreg      void 
 16047 ;; Registers used:
 16048 ;;		wreg, status,2
 16049 ;; Tracked objects:
 16050 ;;		On entry : 0/0
 16051 ;;		On exit  : 0/0
 16052 ;;		Unchanged: 0/0
 16053 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16054 ;;      Params:         0       0       0       0       0       0       0
 16055 ;;      Locals:         0       0       0       0       0       0       0
 16056 ;;      Temps:          0       0       0       0       0       0       0
 16057 ;;      Totals:         0       0       0       0       0       0       0
 16058 ;;Total ram usage:        0 bytes
 16059 ;; Hardware stack levels used:    1
 16060 ;; Hardware stack levels required when called:    1
 16061 ;; This function calls:
 16062 ;;		Nothing
 16063 ;; This function is called by:
 16064 ;;		_main
 16065 ;; This function uses a non-reentrant model
 16066 ;;
 16067                           
 16068                           	psect	text73
 16069  0056D8                     __ptext73:
 16070                           	callstack 0
 16071  0056D8                     _PWM_Init:
 16072                           	callstack 29
 16073  0056D8                     
 16074                           ;fs_pwm.c: 36:     TRISCbits.RC2 = 0;
 16075  0056D8  9494               	bcf	148,2,c	;volatile
 16076                           
 16077                           ;fs_pwm.c: 37:     TRISCbits.RC1 = 0;
 16078  0056DA  9294               	bcf	148,1,c	;volatile
 16079  0056DC                     
 16080                           ;fs_pwm.c: 40:     CCP1CON = 0b00001100;
 16081  0056DC  0E0C               	movlw	12
 16082  0056DE  6EBD               	movwf	189,c	;volatile
 16083                           
 16084                           ;fs_pwm.c: 42:     CCP2CON = 0b00001100;
 16085  0056E0  0E0C               	movlw	12
 16086  0056E2  6E66               	movwf	102,c	;volatile
 16087                           
 16088                           ;fs_pwm.c: 46:     T2CONbits.T2CKPS = 0b01;
 16089  0056E4  50BA               	movf	186,w,c	;volatile
 16090  0056E6  0BFC               	andlw	-4
 16091  0056E8  0901               	iorlw	1
 16092  0056EA  6EBA               	movwf	186,c	;volatile
 16093  0056EC                     
 16094                           ;fs_pwm.c: 47:     T2CONbits.TMR2ON = 1;
 16095  0056EC  84BA               	bsf	186,2,c	;volatile
 16096                           
 16097                           ;fs_pwm.c: 49:     TMR2 = 0;
 16098  0056EE  0E00               	movlw	0
 16099  0056F0  6EBC               	movwf	188,c	;volatile
 16100                           
 16101                           ;fs_pwm.c: 50:     PR2 = 199;
 16102  0056F2  0EC7               	movlw	199
 16103  0056F4  6EBB               	movwf	187,c	;volatile
 16104                           
 16105                           ;fs_pwm.c: 51:     CCPR1L = 0;
 16106  0056F6  0E00               	movlw	0
 16107  0056F8  6EBE               	movwf	190,c	;volatile
 16108                           
 16109                           ;fs_pwm.c: 52:     CCPR2L = 0;
 16110  0056FA  0E00               	movlw	0
 16111  0056FC  6E67               	movwf	103,c	;volatile
 16112  0056FE  0012               	return		;funcret
 16113  005700                     __end_of_PWM_Init:
 16114                           	callstack 0
 16115                           
 16116 ;; *************** function _TIMER0 *****************
 16117 ;; Defined at:
 16118 ;;		line 33 in file "fs_timer.c"
 16119 ;; Parameters:    Size  Location     Type
 16120 ;;		None
 16121 ;; Auto vars:     Size  Location     Type
 16122 ;;		None
 16123 ;; Return value:  Size  Location     Type
 16124 ;;                  1    wreg      void 
 16125 ;; Registers used:
 16126 ;;		wreg, status,2, status,0
 16127 ;; Tracked objects:
 16128 ;;		On entry : 0/0
 16129 ;;		On exit  : 0/0
 16130 ;;		Unchanged: 0/0
 16131 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16132 ;;      Params:         0       0       0       0       0       0       0
 16133 ;;      Locals:         0       0       0       0       0       0       0
 16134 ;;      Temps:          0       0       0       0       0       0       0
 16135 ;;      Totals:         0       0       0       0       0       0       0
 16136 ;;Total ram usage:        0 bytes
 16137 ;; Hardware stack levels used:    1
 16138 ;; This function calls:
 16139 ;;		Nothing
 16140 ;; This function is called by:
 16141 ;;		Interrupt level 2
 16142 ;; This function uses a non-reentrant model
 16143 ;;
 16144                           
 16145                           	psect	intcode
 16146  000008                     __pintcode:
 16147                           	callstack 0
 16148  000008                     _TIMER0:
 16149                           	callstack 19
 16150                           
 16151                           ;incstack = 0
 16152  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16153  00000A                     
 16154                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 16155  00000A  A4F2               	btfss	242,2,c	;volatile
 16156  00000C  EF0A  F000         	goto	i2u791_41
 16157  000010  EF0C  F000         	goto	i2u791_40
 16158  000014                     i2u791_41:
 16159  000014  EF4B  F000         	goto	i2l685
 16160  000018                     i2u791_40:
 16161  000018  AAF2               	btfss	242,5,c	;volatile
 16162  00001A  EF11  F000         	goto	i2u792_41
 16163  00001E  EF13  F000         	goto	i2u792_40
 16164  000022                     i2u792_41:
 16165  000022  EF4B  F000         	goto	i2l685
 16166  000026                     i2u792_40:
 16167  000026                     
 16168                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 16169  000026  94F2               	bcf	242,2,c	;volatile
 16170  000028                     
 16171                           ;fs_timer.c: 38:         TMR0H = 0x63;
 16172  000028  0E63               	movlw	99
 16173  00002A  6ED7               	movwf	215,c	;volatile
 16174                           
 16175                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 16176  00002C  0EC0               	movlw	192
 16177  00002E  6ED6               	movwf	214,c	;volatile
 16178  000030                     
 16179                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 16180  000030  0101               	movlb	1	; () banked
 16181  000032  2B94               	incf	(_timer_value+5)& (0+255),f,b
 16182  000034                     
 16183                           ; BSR set to: 1
 16184                           ;fs_timer.c: 43:         if (startIsClick == 1)
 16185  000034  0100               	movlb	0	; () banked
 16186  000036  05FE               	decf	_startIsClick& (0+255),w,b
 16187  000038  A4D8               	btfss	status,2,c
 16188  00003A  EF21  F000         	goto	i2u793_41
 16189  00003E  EF23  F000         	goto	i2u793_40
 16190  000042                     i2u793_41:
 16191  000042  EF26  F000         	goto	i2l6532
 16192  000046                     i2u793_40:
 16193  000046                     
 16194                           ; BSR set to: 0
 16195                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.second_counter++;
 16196  000046  0101               	movlb	1	; () banked
 16197  000048  4B95               	infsnz	(_timer_value+6)& (0+255),f,b
 16198  00004A  2B96               	incf	(_timer_value+7)& (0+255),f,b
 16199  00004C                     i2l6532:
 16200                           
 16201                           ;fs_timer.c: 48:         if(button_bounce_controller.menu == 1)
 16202  00004C  0101               	movlb	1	; () banked
 16203  00004E  059D               	decf	_button_bounce_controller& (0+255),w,b
 16204  000050  A4D8               	btfss	status,2,c
 16205  000052  EF2D  F000         	goto	i2u794_41
 16206  000056  EF2F  F000         	goto	i2u794_40
 16207  00005A                     i2u794_41:
 16208  00005A  EF30  F000         	goto	i2l6536
 16209  00005E                     i2u794_40:
 16210  00005E                     
 16211                           ; BSR set to: 1
 16212                           ;fs_timer.c: 49:         {;fs_timer.c: 50:              timer_value.menu_login_delay++;
 16213  00005E  2B93               	incf	(_timer_value+4)& (0+255),f,b
 16214  000060                     i2l6536:
 16215                           
 16216                           ; BSR set to: 1
 16217                           ;fs_timer.c: 52:         if(button_bounce_controller.menu == 0)
 16218  000060  519D               	movf	_button_bounce_controller& (0+255),w,b
 16219  000062  A4D8               	btfss	status,2,c
 16220  000064  EF36  F000         	goto	i2u795_41
 16221  000068  EF38  F000         	goto	i2u795_40
 16222  00006C                     i2u795_41:
 16223  00006C  EF3A  F000         	goto	i2l6540
 16224  000070                     i2u795_40:
 16225  000070                     
 16226                           ; BSR set to: 1
 16227                           ;fs_timer.c: 53:         {;fs_timer.c: 54:              timer_value.menu_login_delay = 0
      +                          ;
 16228  000070  0E00               	movlw	0
 16229  000072  6F93               	movwf	(_timer_value+4)& (0+255),b
 16230  000074                     i2l6540:
 16231                           
 16232                           ; BSR set to: 1
 16233                           ;fs_timer.c: 57:         if (timer_value.second_counter >= 100)
 16234  000074  5196               	movf	(_timer_value+7)& (0+255),w,b
 16235  000076  E109               	bnz	i2u796_40
 16236  000078  0E64               	movlw	100
 16237  00007A  5D95               	subwf	(_timer_value+6)& (0+255),w,b
 16238  00007C  A0D8               	btfss	status,0,c
 16239  00007E  EF43  F000         	goto	i2u796_41
 16240  000082  EF45  F000         	goto	i2u796_40
 16241  000086                     i2u796_41:
 16242  000086  EF4B  F000         	goto	i2l685
 16243  00008A                     i2u796_40:
 16244  00008A                     
 16245                           ; BSR set to: 1
 16246                           ;fs_timer.c: 58:         {;fs_timer.c: 59:             timer_value.second_counter = 0;
 16247  00008A  0E00               	movlw	0
 16248  00008C  6F96               	movwf	(_timer_value+7)& (0+255),b
 16249  00008E  0E00               	movlw	0
 16250  000090  6F95               	movwf	(_timer_value+6)& (0+255),b
 16251  000092                     
 16252                           ; BSR set to: 1
 16253                           ;fs_timer.c: 60:             timer_counter_flag.one_second_flag = 1;
 16254  000092  0100               	movlb	0	; () banked
 16255  000094  81FA               	bsf	_timer_counter_flag& (0+255),0,b
 16256  000096                     i2l685:
 16257  000096  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16258  000098  0011               	retfie		f
 16259  00009A                     __end_of_TIMER0:
 16260                           	callstack 0
 16261                           
 16262                           	psect	rparam
 16263  0000                     
 16264                           	psect	temp
 16265  00005F                     btemp:
 16266                           	callstack 0
 16267  00005F                     	ds	1
 16268  0000                     int$flags	set	btemp
 16269  0000                     wtemp8	set	btemp+1
 16270  0000                     ttemp5	set	btemp+1
 16271  0000                     ttemp6	set	btemp+4
 16272  0000                     ttemp7	set	btemp+8
 16273                           
 16274                           	psect	idloc
 16275                           
 16276                           ;Config register IDLOC0 @ 0x200000
 16277                           ;	unspecified, using default values
 16278  200000                     	org	2097152
 16279  200000  FF                 	db	255
 16280                           
 16281                           ;Config register IDLOC1 @ 0x200001
 16282                           ;	unspecified, using default values
 16283  200001                     	org	2097153
 16284  200001  FF                 	db	255
 16285                           
 16286                           ;Config register IDLOC2 @ 0x200002
 16287                           ;	unspecified, using default values
 16288  200002                     	org	2097154
 16289  200002  FF                 	db	255
 16290                           
 16291                           ;Config register IDLOC3 @ 0x200003
 16292                           ;	unspecified, using default values
 16293  200003                     	org	2097155
 16294  200003  FF                 	db	255
 16295                           
 16296                           ;Config register IDLOC4 @ 0x200004
 16297                           ;	unspecified, using default values
 16298  200004                     	org	2097156
 16299  200004  FF                 	db	255
 16300                           
 16301                           ;Config register IDLOC5 @ 0x200005
 16302                           ;	unspecified, using default values
 16303  200005                     	org	2097157
 16304  200005  FF                 	db	255
 16305                           
 16306                           ;Config register IDLOC6 @ 0x200006
 16307                           ;	unspecified, using default values
 16308  200006                     	org	2097158
 16309  200006  FF                 	db	255
 16310                           
 16311                           ;Config register IDLOC7 @ 0x200007
 16312                           ;	unspecified, using default values
 16313  200007                     	org	2097159
 16314  200007  FF                 	db	255
 16315                           
 16316                           	psect	config
 16317                           
 16318                           ; Padding undefined space
 16319  300000                     	org	3145728
 16320  300000  FF                 	db	255
 16321                           
 16322                           ;Config register CONFIG1H @ 0x300001
 16323                           ;	Oscillator Selection bits
 16324                           ;	FOSC = INTIO67, Internal oscillator block
 16325                           ;	4X PLL Enable
 16326                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16327                           ;	Primary clock enable bit
 16328                           ;	PRICLKEN = ON, Primary clock is always enabled
 16329                           ;	Fail-Safe Clock Monitor Enable bit
 16330                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16331                           ;	Internal/External Oscillator Switchover bit
 16332                           ;	IESO = ON, Oscillator Switchover mode enabled
 16333  300001                     	org	3145729
 16334  300001  B8                 	db	184
 16335                           
 16336                           ;Config register CONFIG2L @ 0x300002
 16337                           ;	Power-up Timer Enable bit
 16338                           ;	PWRTEN = OFF, Power up timer disabled
 16339                           ;	Brown-out Reset Enable bits
 16340                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16341                           ;	Brown Out Reset Voltage bits
 16342                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16343  300002                     	org	3145730
 16344  300002  1F                 	db	31
 16345                           
 16346                           ;Config register CONFIG2H @ 0x300003
 16347                           ;	Watchdog Timer Enable bits
 16348                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16349                           ;	Watchdog Timer Postscale Select bits
 16350                           ;	WDTPS = 32768, 1:32768
 16351  300003                     	org	3145731
 16352  300003  3C                 	db	60
 16353                           
 16354                           ; Padding undefined space
 16355  300004                     	org	3145732
 16356  300004  FF                 	db	255
 16357                           
 16358                           ;Config register CONFIG3H @ 0x300005
 16359                           ;	CCP2 MUX bit
 16360                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16361                           ;	PORTB A/D Enable bit
 16362                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16363                           ;	P3A/CCP3 Mux bit
 16364                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16365                           ;	HFINTOSC Fast Start-up
 16366                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16367                           ;	Timer3 Clock input mux bit
 16368                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16369                           ;	ECCP2 B output mux bit
 16370                           ;	P2BMX = PORTD2, P2B is on RD2
 16371                           ;	MCLR Pin Enable bit
 16372                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16373  300005                     	org	3145733
 16374  300005  BD                 	db	189
 16375                           
 16376                           ;Config register CONFIG4L @ 0x300006
 16377                           ;	Stack Full/Underflow Reset Enable bit
 16378                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16379                           ;	Single-Supply ICSP Enable bit
 16380                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16381                           ;	Extended Instruction Set Enable bit
 16382                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16383                           ;	Background Debug
 16384                           ;	DEBUG = 0x1, unprogrammed default
 16385  300006                     	org	3145734
 16386  300006  84                 	db	132
 16387                           
 16388                           ; Padding undefined space
 16389  300007                     	org	3145735
 16390  300007  FF                 	db	255
 16391                           
 16392                           ;Config register CONFIG5L @ 0x300008
 16393                           ;	Code Protection Block 0
 16394                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16395                           ;	Code Protection Block 1
 16396                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16397                           ;	Code Protection Block 2
 16398                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16399                           ;	Code Protection Block 3
 16400                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16401  300008                     	org	3145736
 16402  300008  0F                 	db	15
 16403                           
 16404                           ;Config register CONFIG5H @ 0x300009
 16405                           ;	Boot Block Code Protection bit
 16406                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16407                           ;	Data EEPROM Code Protection bit
 16408                           ;	CPD = OFF, Data EEPROM not code-protected
 16409  300009                     	org	3145737
 16410  300009  C0                 	db	192
 16411                           
 16412                           ;Config register CONFIG6L @ 0x30000A
 16413                           ;	Write Protection Block 0
 16414                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16415                           ;	Write Protection Block 1
 16416                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16417                           ;	Write Protection Block 2
 16418                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16419                           ;	Write Protection Block 3
 16420                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16421  30000A                     	org	3145738
 16422  30000A  0F                 	db	15
 16423                           
 16424                           ;Config register CONFIG6H @ 0x30000B
 16425                           ;	Configuration Register Write Protection bit
 16426                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16427                           ;	Boot Block Write Protection bit
 16428                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16429                           ;	Data EEPROM Write Protection bit
 16430                           ;	WRTD = OFF, Data EEPROM not write-protected
 16431  30000B                     	org	3145739
 16432  30000B  E0                 	db	224
 16433                           
 16434                           ;Config register CONFIG7L @ 0x30000C
 16435                           ;	Table Read Protection Block 0
 16436                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16437                           ;	Table Read Protection Block 1
 16438                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16439                           ;	Table Read Protection Block 2
 16440                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16441                           ;	Table Read Protection Block 3
 16442                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16443  30000C                     	org	3145740
 16444  30000C  0F                 	db	15
 16445                           
 16446                           ;Config register CONFIG7H @ 0x30000D
 16447                           ;	Boot Block Table Read Protection bit
 16448                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16449  30000D                     	org	3145741
 16450  30000D  40                 	db	64
 16451                           tosu	equ	0xFFF
 16452                           tosh	equ	0xFFE
 16453                           tosl	equ	0xFFD
 16454                           stkptr	equ	0xFFC
 16455                           pclatu	equ	0xFFB
 16456                           pclath	equ	0xFFA
 16457                           pcl	equ	0xFF9
 16458                           tblptru	equ	0xFF8
 16459                           tblptrh	equ	0xFF7
 16460                           tblptrl	equ	0xFF6
 16461                           tablat	equ	0xFF5
 16462                           prodh	equ	0xFF4
 16463                           prodl	equ	0xFF3
 16464                           indf0	equ	0xFEF
 16465                           postinc0	equ	0xFEE
 16466                           postdec0	equ	0xFED
 16467                           preinc0	equ	0xFEC
 16468                           plusw0	equ	0xFEB
 16469                           fsr0h	equ	0xFEA
 16470                           fsr0l	equ	0xFE9
 16471                           wreg	equ	0xFE8
 16472                           indf1	equ	0xFE7
 16473                           postinc1	equ	0xFE6
 16474                           postdec1	equ	0xFE5
 16475                           preinc1	equ	0xFE4
 16476                           plusw1	equ	0xFE3
 16477                           fsr1h	equ	0xFE2
 16478                           fsr1l	equ	0xFE1
 16479                           bsr	equ	0xFE0
 16480                           indf2	equ	0xFDF
 16481                           postinc2	equ	0xFDE
 16482                           postdec2	equ	0xFDD
 16483                           preinc2	equ	0xFDC
 16484                           plusw2	equ	0xFDB
 16485                           fsr2h	equ	0xFDA
 16486                           fsr2l	equ	0xFD9
 16487                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    0
    Data        64
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     176
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2839_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_15(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_13(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_7(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), mainMenu@textCursor2(BANK0[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _openLCD_Script->_Lcd_Write_String
    _Lcd_Clear->_Lcd_Cmd
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  414325
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                     _openLCD_Script
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _openLCD_Script                                       2     2      0    3494
                                             10 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0  404153
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  404153
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60426
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   79142
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                         _startMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1636
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1748
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
       _pauseMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _menuInitialize
   _openLCD_Script
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      B0       8       68.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A1       9        0.0%
DATA                 0      0     2A1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 16 01:47:24 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
                    ___fldiv@sign 0045                                l60 5406  
                              l63 54C4                                l57 53DE  
                              l76 1452                                l92 5732  
                              l94 5740                                _KD 01EB  
                              l79 29FA                                l95 5742  
                              l98 569C                                _KP 01EF  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
             __end_of_system_init 409A                               l100 56AA  
                             l101 56AE          ??_calculatedAverageValue 001C  
                             l311 5782                               l160 51FA  
                             l152 51B6                               l320 533A  
                             l154 51CC                               l314 5790  
                             l163 5760                               l411 3218  
                             l156 51E2                               l172 50E2  
                             l413 3264                               l501 413A  
                             l317 4098                               l158 51F8  
                             l422 3394                               l166 57B0  
                             l175 4DC0                               l415 32B0  
                             l503 41A0                               l407 56D6  
                             l184 4E3E                               l512 3F78  
                             l417 32FC                               l178 55E0  
                             l442 4B2C                               l419 3348  
                             l515 57B2                               l452 389E  
                             l428 4FA8                               l630 5500  
                             l702 5002                               l703 5012  
                             l471 577A                      _startIsClick 00FE  
                             l448 37BA                               l464 3DAC  
                             l633 5616                               l449 380A  
                             l570 56FE                               l627 3552  
                             l459 4826                               l468 3E50  
                             l805 3BB6                               l725 4D2A  
                             l485 2FB2                               l574 4F32  
                             l718 4D1A                               l494 43AA  
                             l818 3D1A                               l922 4A7A  
                             l578 4EB8                               l691 5724  
                             l950 4C86                               l935 4BDC  
                             l688 57A2                               l961 44AE  
                             l956 4468                               l965 5570  
                             l988 42A6                               _PR2 000FBB  
                 ?_openLCD_Script 0001                               _abs 5448  
                             _pad 48F2                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 002D  
                    ___flmul@bexp 002E               stopMenu@textCursor2 00E1  
                    ___flmul@sign 0028                      ___flmul@temp 0033  
                    ___flmul@prod 002F                       _stopIsClick 00FD  
                    ___fltol@exp1 0057                              ?_abs 0013  
                            l1220 1C6E                              l1221 1C34  
                            l1312 220C                              l1305 2016  
                            l1322 233C                              l1314 2284  
                            l1315 2272                              l1219 1C80  
                            l1420 497A                              l1236 1D9A  
                            l1228 1F50                              l1309 237A  
                            l1245 1E6A                              l1261 5380  
                            l1422 49B6                              l1430 2AA4  
                            l1246 1E58                              l1510 0822  
                            l1360 369E                              l1601 5486  
                            l1417 4938                              l1273 2714  
                            l1353 3642                              l1346 35AA  
                            l1275 2574                              l1700 564C  
                            l1428 2A9C                              l1284 25BA  
                            l1349 3706                              l1286 2632  
                            l1278 2538                              l1374 529E  
                            l1287 2620                              l1367 5680  
                            l1632 3A2E                              l1448 2CDE  
                            l4200 1B10                              l5000 3040  
                            l1704 4758                              l1641 310C  
                            l4210 1B38                              l4202 1B12  
                            l5002 304E                              l5010 3130  
                            l1714 513A                              l1466 0C4C  
                            l4300 1D08                              l4220 1B72  
                            l4212 1B48                              l4204 1B18  
                            l5012 316C                              l1484 048A  
                            l5100 009E                              l1629 3A26  
                            l5022 5572                              l5030 52B8  
                            l4310 1D7A                              l4302 1D0E  
                            l4230 1B9E                              l4222 1B84  
                            l4214 1B58                              l4206 1B26  
                            l5014 3180                              l5006 30C0  
                            l1638 31C8                              l1662 5538  
                            l5110 00F2                              l5102 00A8  
                            l1582 5074                              l1719 5142  
                            l1583 507C                              l1648 55A8  
                            l1656 52F0                              l5032 52E6  
                            l5040 2A1C                              l4320 1DD4  
                            l4304 1D34                              l4312 1D8A  
                            l4240 1BB2                              l4232 1BA2  
                            l4224 1B92                              l4216 1B5A  
                            l4208 1B28                              l5016 31A8  
                            l5008 30FC                              l5120 0136  
                            l5112 00FC                              l5104 00B8  
                            l1576 19D6                              l1568 1A90  
                            l6000 3EBC                              l1593 45AC  
                            l4402 5700                              l5034 52EA  
                            l5026 52A0                              l4410 3A34  
                            l4170 4856                              l5050 2A90  
                            l5042 2A44                              l4330 1E04  
                            l4322 1DDE                              l4314 1DB0  
                            l4306 1D68                              l4250 1BC6  
                            l4242 1BB6                              l4234 1BA6  
                            l4226 1B96                              l4218 1B62  
                            l5018 31B8                              l5210 050C  
                            l5122 0142                              l5130 0158  
                            l5114 0104                              l5106 00C6  
                            l6010 3EEC                              l6002 3EC0  
                            l4404 571C                              l5028 52A4  
                            l4420 3A94                              l4412 3A42  
                            l4172 4874                              l4164 4828  
                            l5060 2ADA                              l5052 2AAC  
                            l5044 2A64                              l4500 23C8  
                            l4340 1E2C                              l4332 1E08  
                            l4324 1DEC                              l4316 1DC0  
                            l4308 1D6A                              l4260 1C00  
                            l4252 1BCA                              l4244 1BBA  
                            l4236 1BAA                              l4228 1B9A  
                            l4180 1A9E                              l5300 0946  
                            l5220 0544                              l5212 0514  
                            l5204 04A8                              l5140 01E2  
                            l5132 017E                              l5124 014A  
                            l5116 0116                              l5108 00CE  
                            l6020 3F0A                              l6012 3EF2  
                            l6004 3EC4                              l6100 4330  
                            l1677 48F0                              l1685 53C4  
                            l4430 3ADE                              l4422 3A98  
                            l4414 3A62                              l1598 547E  
                            l4174 48AA                              l4166 483A  
                            l5070 2B78                              l5062 2AE4  
                            l5054 2ABE                              l5046 2A74  
                            l5038 29FC                              l4510 23EE  
                            l4502 23CA                              l4350 1E86  
                            l4342 1E3A                              l4334 1E18  
                            l4326 1DEE                              l4270 1C52  
                            l4262 1C1C                              l4254 1BCE  
                            l4246 1BBE                              l4238 1BAE  
                            l4190 1ADE                              l4182 1AAC  
                            l1694 519E                              l5310 097A  
                            l5302 094C                              l5230 058E  
                            l5222 0552                              l5206 04BA  
                            l5214 0518                              l5150 0252  
                            l5142 01FA                              l5126 014E  
                            l5118 0124                              l6030 3F32  
                            l6022 3F0E                              l6014 3EF6  
                            l6006 3EC8                              l6110 435A  
                            l6102 4336                              l5400 38B4  
                            l4440 3B4E                              l4432 3AEC  
                            l4424 3AA4                              l4416 3A66  
                            l4408 3A30                              l1688 57B4  
                            l4168 484C                              l5080 2C48  
                            l5064 2AEA                              l5072 2BDC  
                            l5056 2ACC                              l5048 2A76  
                            l4600 2686                              l4520 242E  
                            l4512 23FC                              l4504 23D2  
                            l4360 1EF0                              l4352 1E94  
                            l4344 1E50                              l4328 1DFC  
                            l4336 1E1A                              l4280 1C9E  
                            l4272 1C60                              l4264 1C2C  
                            l4248 1BC2                              l4256 1BD2  
                            l4192 1AE0                              l4184 1AAE  
                            l5304 0952                              l5312 0980  
                            l5320 0A18                              l5240 05D4  
                            l5232 05A0                              l5224 0556  
                            l5216 0520                              l5208 04D6  
                            l5144 0204                              l5136 01B4  
                            l5128 0152                              l6032 3F4E  
                            l6016 3F00                              l6008 3EDA  
                            l6024 3F12                              l6200 2CF0  
                            l6112 4364                              l6104 433A  
                            l6120 475A                              l6040 40A6  
                            l5410 3912                              l5402 38B8  
                            l4442 3B60                              l4434 3AFE  
                            l4426 3AC2                              l4418 3A74  
                            l5090 2C92                              l5074 2BF6  
                            l5082 2C58                              l5066 2B6C  
                            l5058 2AD2                              l4610 26F0  
                            l4602 268A                              l4530 246E  
                            l4522 2430                              l4514 23FE  
                            l4506 23E2                              l4370 1F2A  
                            l4362 1F10                              l4354 1ECE  
                            l4290 1CDE                              l4338 1E28  
                            l4274 1C62                              l4266 1C42  
                            l4258 1BD6                              l4186 1ABE  
                            l4194 1AE8                              l4178 1A92  
                            l5330 0A82                              l5322 0A36  
                            l5314 09D8                              l5306 0964  
                            l5250 06E8                              l5242 0638  
                            l5226 0568                              l5234 05A8  
                            l5218 0532                              l5154 0288  
                            l5138 01C6                              l6034 3F5A  
                            l6026 3F1C                              l6018 3F06  
                            l6202 2D02                              l6210 2D1E  
                            l6114 4380                              l6106 4344  
                            l6130 477E                              l6122 4766  
                            l6050 40EA                              l6042 40AA  
                            l6300 325C                              l5420 393E  
                            l5404 38BC                              l4436 3B2C  
                            l4428 3ACA                              l4444 3B66  
                            l4460 3BEE                              l4452 3BB8  
                            l4380 5382                              l5092 2C9E  
                            l5084 2C6A                              l5076 2C14  
                            l5068 2B72                              l4612 26F4  
                            l4604 26A4                              l4540 249E  
                            l4532 2476                              l4516 240E  
                            l4524 2438                              l4508 23E8  
                            l4700 2166                              l4372 1F30  
                            l4364 1F14                              l4348 1E7A  
                            l4356 1ED0                              l4292 1CEA  
                            l4284 1CB2                              l4276 1C6C  
                            l4268 1C4E                              l4196 1AF8  
                            l4188 1ACE                              l5340 0AC0  
                            l5332 0A86                              l5324 0A52  
                            l5316 0A0C                              l5308 0976  
                            l5260 07A6                              l5252 071C  
                            l5244 0690                              l5236 05B0  
                            l5228 0576                              l5180 03EA  
                            l5172 0322                              l5156 029A  
                            l5148 022C                              l6036 3F6E  
                            l6028 3F28                              l5500 4FBA  
                            l6220 2D76                              l6212 2D30  
                            l6204 2D06                              l6116 438C  
                            l6108 434E                              l6140 47C8  
                            l6132 478A                              l6124 476C  
                            l6060 4124                              l6052 40F0  
                            l6044 40BC                              l6310 32A8  
                            l6302 3274                              l5430 39E6  
                            l5422 3972                              l5414 3918  
                            l5406 38D8                              l4446 3B76  
                            l4438 3B4C                              l4470 3C56  
                            l4462 3BFC                              l4454 3BBC  
                            l4382 538E                              l4390 5624  
                            l5094 2CA6                              l5086 2C7A  
                            l5078 2C2E                              l4614 2702  
                            l4606 26BA                              l4550 24DC  
                            l4542 249E                              l4534 247A  
                            l4526 2448                              l4518 241E  
                            l4710 21FC                              l4702 2190  
                            l4630 1F6C                              l4374 1F3E  
                            l4366 1F22                              l4358 1EE0  
                            l4294 1CEE                              l4286 1CC2  
                            l4278 1C8E                              l4198 1AFE  
                            l5350 0AF2                              l5342 0AC8  
                            l5334 0A96                              l5326 0A64  
                            l5318 0A14                              l5270 081A  
                            l5262 07B6                              l5254 074E  
                            l5246 06C4                              l5238 05C0  
                            l5190 044A                              l5182 03F2  
                            l5174 0356                              l5158 02B6  
                            l5166 02D2                              l5510 4C98  
                            l5502 4FC8                              l6230 2E00  
                            l6222 2D82                              l6214 2D3A  
                            l6206 2D0A                              l6118 43A0  
                            l6150 4822                              l6142 47D4  
                            l6134 4790                              l6126 4770  
                            l6070 415A                              l6062 412A  
                            l6054 40F6                              l6046 40C6  
                            l6038 409A                              ?_pad 0011  
                            l6400 4DAE                              l6320 32F4  
                            l6312 32C0                              l6304 3282  
                            l5432 39F8                              l5416 392E  
                            l5408 390E                              l4448 3B96  
                            l4472 3C64                              l4480 3CCA  
                            l4464 3C1C                              l4456 3BCA  
                            l4384 53A0                              l4392 5628  
                            l5088 2C80                              l5096 2CB6  
                            l4800 4A6A                              l4616 2708  
                            l4608 26D4                              l4560 2528  
                            l4552 24EC                              l4528 245E  
                            l4720 223C                              l4712 220A  
                            l4704 21C6                              l4640 1FA4  
                            l4632 1F6E                              l4376 1F40  
                            l4368 1F28                              l4296 1CFC  
                            l4288 1CD0                              l5352 0AF8  
                            l5360 0B48                              l5344 0AD6  
                            l5336 0AA8                              l5328 0A72  
                            l5280 08D6                              l5272 083E  
                            l5264 07EA                              l5256 0764  
                            l5248 06CA                              l5192 045C  
                            l5176 035C                              l5184 0424  
                            l5168 02EC                              l5440 4684  
                            l5600 1590                              l5520 4CDA  
                            l5512 4CAE                              l5504 4FD8  
                            l6160 3D2E                              l6240 2E6C  
                            l6232 2E12                              l6224 2D94  
                            l6216 2D46                              l6208 2D1A  
                            l6080 42B4                              l6152 5762  
                            l6144 47E6                              l6136 4794  
                            l6128 4774                              l6072 4176  
                            l6064 4130                              l6048 40D8  
                            l6056 4100                              l6402 4DB4  
                            l6330 3340                              l6322 330C  
                            l6314 32CE                              l6306 328A  
                            l5434 3A0A                              l5426 39A8  
                            l5418 3936                              l4482 3CDA  
                            l4474 3C92                              l4466 3C3A  
                            l4458 3BEA                              l4386 53A4  
                            l4394 5640                              l4802 4A72  
                            l4810 4B40                              l4618 270A  
                            l4570 2572                              l4562 2536  
                            l4554 24FC                              l4546 24B2  
                            l4538 248E                              l4490 2388  
                            l4730 22AE                              l4722 226A  
                            l4714 221C                              l4706 21D4  
                            l4650 1FD0                              l4642 1FB4  
                            l4634 1F7E                              l4626 1F52  
                            l4298 1CFE                              l5370 0B98  
                            l5362 0B5A                              l5354 0B1E  
                            l5346 0ADE                              l5338 0AB0  
                            l5290 091C                              l5282 08E4  
                            l5274 08A2                              l5266 07FA  
                            l5258 0796                              l5194 0464  
                            l5186 0434                              l5178 03B6  
                            l5450 46E0                              l5442 46AE  
                            l5610 1602                              l5602 15A2  
                            l5530 3556                              l5522 4CF8  
                            l5514 4CB6                              l5506 4FE2  
                            l6170 3D84                              l6162 3D38  
                            l6250 2EBE                              l6242 2E76  
                            l6234 2E20                              l6226 2DC6  
                            l6218 2D50                              l6090 42F8  
                            l6082 42B8                              l6154 5766  
                            l6146 4806                              l6138 479E  
                            l6074 4182                              l6066 4144  
                            l6058 4112                              l6410 56B0  
                            l6404 4DBA                              l6340 338C  
                            l6332 3358                              l6324 331A  
                            l6316 32D6                              l6308 3298  
                            l4484 3CFA                              l4476 3CB2  
                            l4468 3C42                              l4388 5618  
                            l4820 4B74                              l4812 4B48  
                            l4580 25B8                              l4572 2584  
                            l4564 2542                              l4556 2504  
                            l4548 24CC                              l4492 2396  
                            l4740 2324                              l4732 22D8  
                            l4716 222A                              l4708 21F2  
                            l4660 2026                              l4652 1FE0  
                            l4644 1FBA                              l4636 1F8E  
                            l4628 1F5E                              l4900 4208  
                            l5372 0BA0                              l5364 0B74  
                            l5356 0B3A                              l5348 0AE6  
                            l5292 0920                              l5276 08B2  
                            l5284 08EC                              l5268 080E  
                            l5196 047E                              l5188 0438  
                            l5452 46FC                              l5620 16B2  
                            l5612 163C                              l5604 15C6  
                            l5532 3566                              l5524 4D08  
                            l5516 4CC2                              l5508 4C88  
                            l5460 53C8                              l5700 0CCA  
                            l6180 3DF0                              l6172 3D96  
                            l6164 3D44                              l6156 3D1C  
                            l6260 2F4E                              l6252 2ED0  
                            l6244 2E82                              l6236 2E24  
                            l6228 2DCC                              l6092 42FE  
                            l6084 42CA                              l6148 4818  
                            l6076 4196                              l6068 4150  
                            l6420 4058                              l6412 5792  
                            l6500 462C                              l6406 577C  
                            l6334 3366                              l6326 3322  
                            l6318 32E4                              l4478 3CC4  
                            l4830 4BB0                              l4822 4B7C  
                            l4814 4B4C                              l4806 4B2E  
                            l4590 2618                              l4574 259A  
                            l4582 25CA                              l4566 2560  
                            l4558 2514                              l4494 2398  
                            l4742 2340                              l4750 2366  
                            l4726 2294                              l4734 22DC  
                            l4718 222E                              l4670 2060  
                            l4662 2036                              l4654 1FF0  
                            l4646 1FC0                              l4638 1F9E  
                            l4910 4232                              l4902 420C  
                            l4398 5502                              l5390 0C26  
                            l5382 0BF0                              l5374 0BB0  
                            l5366 0B7A                              l5358 0B42  
                            l5294 0926                              l5286 08FE  
                            l5278 08C4                              l5198 0496  
                            l5454 470E                              l5446 46BA  
                            l5630 1738                              l5614 165C  
                            l5606 15D0                              l5622 16C4  
                            l5550 362C                              l5542 35E4  
                            l5534 3574                              l5526 4D0A  
                            l5518 4CD0                              l5470 53FE  
                            l5462 53C8                              l5710 0E30  
                            l5702 0D3A                              l6190 3E32  
                            l6182 3DF4                              l6174 3DBE  
                            l6166 3D4E                              l6158 3D28  
                            l6262 2F5C                              l6254 2F02  
                            l6246 2E8C                              l6238 2E58  
                            l6094 4302                              l6086 42D4  
                            l6078 42A8                              l6350 4A98  
                            l6342 4A7C                              l6270 5728  
                            l6430 4092                              l6422 4062  
                            l6414 579E                              l6510 465A  
                            l6502 463C                              l6432 56D8  
                            l5480 51C6                              l6408 5780  
                            l6336 336E                              l6328 3330  
                            l6280 31CA                              l4832 4BB6  
                            l4824 4B84                              l4816 4B5A  
                            l4808 4B32                              l4584 25D8  
                            l4576 25A0                              l4568 2562  
                            l4496 23A8                              l4488 237C  
                            l4752 236A                              l4744 2350  
                            l4736 22F6                              l4728 22A0  
                            l4680 20B2                              l4672 2076  
                            l4656 2000                              l4648 1FCE  
                            l4920 425A                              l4912 423C  
                            l4904 421A                              l5392 0C2C  
                            l5384 0C02                              l5376 0BB6  
                            l5368 0B8C                              l5296 0932  
                            l5288 090C                              l5456 4736  
                            l5448 46C8                              l5632 176A  
                            l5624 16E6                              l5616 166A  
                            l5608 15DE                              l5560 36AC  
                            l5552 3638                              l5544 35EC  
                            l5536 35BA                              l5800 4ED2  
                            l5528 4D14                              l5464 53DA  
                            l5720 0FE6                              l5712 0E9A  
                            l5704 0D48                              l6192 3E42  
                            l6176 3DCE                              l6184 3E02  
                            l6168 3D78                              l6264 2F60  
                            l6256 2F08                              l6248 2EB2  
                            l6088 42E6                              l6096 430C  
                            l6360 4AC0                              l6352 4AA0  
                            l6344 4A80                              l6440 52FC  
                            l6272 572C                              l6424 406C  
                            l6416 57A0                              l6512 4664  
                            l6504 4640                              l6434 56DC  
                            l6370 5488                              l5482 51CE  
                            l5474 51A2                              l6338 337C  
                            l6290 3210                              l6282 31DC  
                            l4770 49D6                              l4762 49B8  
                            l4826 4B92                              l4834 4BBC  
                            l4818 4B62                              l4594 2642  
                            l4586 25DC                              l4578 25AA  
                            l4498 23B8                              l4850 4C5A  
                            l4842 4BDE                              l4746 235E  
                            l4738 230A                              l4690 20F8  
                            l4682 20C0                              l4674 2082  
                            l4666 204A                              l4658 2006  
                            l4922 4266                              l4914 4246  
                            l5386 0C0E                              l5378 0BBC  
                            l5298 0942                              l5650 1898  
                            l5642 1832                              l5634 178E  
                            l5626 16F6                              l5570 36F4  
                            l5562 36AE                              l5554 3674  
                            l5546 35F8                              l5538 35D0  
                            l5490 564E                              l5802 4F1A  
                            l5810 4EA0                              l5466 53DC  
                            l5730 114C                              l5722 1056  
                            l5714 0F06                              l5706 0DB2  
                            l6194 3E4C                              l6186 3E16  
                            l6178 3DDE                              l6258 2F3C  
                            l6266 2F94                              l6098 431E  
                            l6354 4AA8                              l6346 4A88  
                            l6450 4F38                              l6442 5308  
                            l6274 572E                              l6426 4076  
                            l6418 3F7A                              l6514 4674  
                            l6506 4646                              l6436 56EC  
                            l6372 54AA                              l5484 51DC  
                            l5476 51B0                              l6380 4D4C  
                            l6292 3228                              l6284 31EA  
                            l6620 395C                              l4940 4930  
                            l4932 48F2                              l4780 4A0A  
                            l4772 49E4                              l4764 49BC  
                            l4836 4BCC                              l4828 4BA8  
                            l4596 264E                              l4588 25EA  
                            l4852 4C7E                              l4844 4C0C  
                            l4860 43DA                              l4748 2360  
                            l4692 2112                              l4684 20CC  
                            l4676 209A                              l4668 2056  
                            l4756 533C                              l4924 4276  
                            l5388 0C16                              l5660 1960  
                            l5644 1844                              l5636 17B2  
                            l5628 1728                              l5580 1486  
                            l5572 36F6                              l5564 36B2  
                            l5556 3680                              l5548 362A  
                            l5492 566E                              l5804 4E40  
                            l5468 53EC                              l5740 130E  
                            l5732 11B6                              l5724 1064  
                            l5716 0F6E                              l5708 0E22  
                            l5820 349C                              l5812 3396  
                            l6188 3E20                              l6268 2FA8  
                            l6196 2CE0                              l6356 4AB0  
                            l6348 4A90                              l6364 4AC8  
                            l6460 4F84                              l6452 4F3C  
                            l6444 531E                              l6276 5730  
                            l6428 408E                              l6508 4658  
                            l6516 4678                              l6374 54B2  
                            l5486 51E4                              l5478 51B8  
                            l6390 4D90                              l6382 4D64  
                            l6294 3236                              l6286 31F2  
                            l5398 38A0                              l4950 499E  
                            l4942 4944                              l4934 4902  
                            l4790 4A44                              l4782 4A12  
                            l4774 49EC                              l4766 49CA  
                            l4838 4BD4                              l4598 265C  
                            l4854 4C84                              l4846 4C1C  
                            l4870 4448                              l4862 43EA  
                            l4694 2122                              l4686 20DC  
                            l4678 20A6                              l4758 534C  
                            l4926 4286                              l5662 1972  
                            l5670 19EA                              l5646 185A  
                            l5654 18C4                              l5638 17FA  
                            l5590 1508                              l5582 1498  
                            l5566 36D6                              l5558 368E  
                            l5494 5670                              l5806 4E40  
                            l5910 54E8                              l5742 131C  
                            l5734 1226                              l5726 10CE  
                            l5718 0F7C                              l5830 34E6  
                            l5822 34A4                              l5814 3396  
                            l5902 55E2                              l6198 2CEC  
                            l6358 4AB8                              l6462 4F96  
                            l6454 4F4E                              l6278 57A4  
                            l6446 5336                              l6438 52F2  
                            l6470 45B2                              l5488 51F2  
                            l6392 4D96                              l6384 4D6A  
                            l6376 4D2C                              l6296 323E  
                            l6288 3200                              l4944 4958  
                            l4936 4916                              l4792 4A4C  
                            l4784 4A1A                              l4776 49F0  
                            l4768 49D2                              l4848 4C4A  
                            l4872 4456                              l4864 4418  
                            l4696 213E                              l4688 20E8  
                            l4880 553A                              l4928 4296  
                            l4960 44D0                              l5672 1A0E  
                            l5680 1A3E                              l5664 19A6  
                            l5656 18F2                              l5648 1868  
                            l5592 151A                              l5584 149E  
                            l5576 1454                              l5568 36E6  
                            l5808 4E58                              l5912 54F4  
                            l5760 280E                              l5744 1386  
                            l5736 1234                              l5728 113E  
                            l5840 354A                              l5832 3502  
                            l5824 34B2                              l5816 3396  
                            l5904 55E6                              l5920 372A  
                            l6616 4ADE                              l6456 4F60  
                            l6448 4F34                              l6480 45C6  
                            l6472 45B6                              l5770 574E  
                            l6394 4D9C                              l6386 4D7A  
                            l6378 4D46                              l6298 324C  
                            l5850 5684                              l4954 5448  
                            l4946 495C                              l4938 4924  
                            l4794 4A4E                              l4786 4A28  
                            l4778 49F8                              l4874 44A6  
                            l4866 4428                              l4858 43AC  
                            l4698 214A                              l4882 5550  
                            l4890 41B8                              l4962 450E  
                            l4970 454E                              l5682 1A4C  
                            l5674 1A1C                              l5594 153A  
                            l5586 14C2                              l5578 1478  
                            l5842 5014                              l5498 4FAA  
                            l5762 2908                              l6618 140C  
                            l5738 129E                              l5834 350A  
                            l5826 34C2                              l5818 33D6  
                            l5906 55EA                              l5930 3788  
                            l5922 3734                              l5914 3708  
                            l6458 4F72                              l6490 45EA  
                            l6482 45CA                              l6474 45BA  
                            l5772 5750                              l6396 4DA2  
                            l6388 4D80                              l5780 55BA  
                            l5860 5692                              l5852 5688  
                            l4956 5462                              l4948 498A  
                            l4796 4A54                              l4788 4A2E  
                            l4876 44AC                              l4868 4436  
                            l4884 5560                              l4972 4560  
                            l4964 4536                              l4980 5144  
                            l5676 1A30                              l5596 1548  
                            l5588 14F8                              l5844 501C  
                            l5908 54C6                              l5764 29B0  
                            l5756 2716                              l5748 13F6  
                            l5836 3526                              l5828 34DE  
                            l5940 37EC                              l5932 379E  
                            l5924 375E                              l5916 3714  
                            l6492 45FA                              l6484 45CE  
                            l6476 45BE                              l6468 45AE  
                            l5774 575E                              l5766 5746  
                            l6398 4DA8                              l5870 50A2  
                            l5790 55D4                              l5782 55C2  
                            l5862 5696                              l5854 568C  
                            l4798 4A5A                              l4894 41CC  
                            l4966 4542                              l4958 44B0  
                            l4982 5154                              l4990 512C  
                            l5686 1A5A                              l5846 502A  
                            l5758 2748                              l5694 0C4E  
                            l5838 352E                              l5950 381A  
                            l5942 37FC                              l5934 37AE  
                            l5926 376A                              l5918 371E  
                            l6494 45FC                              l6486 45DA  
                            l6478 45C2                              l5768 5748  
                            l5880 50DC                              l5872 50A8  
                            l5792 55D6                              l5784 55C4  
                            l5776 55AC                              l5864 569A  
                            l5856 568E                              l4896 41F6  
                            l4888 41A2                              l4976 45A4  
                            l4984 50E4                              l5688 1A7E  
                            l5848 5058                              l5696 0C52  
                            l5960 385C                              l5952 382A  
                            l5944 3800                              l5936 37CC  
                            l5928 377E                              l6496 460C  
                            l6488 45E6                              l5874 50B2  
                            l5866 5080                              l5794 55DE  
                            l5786 55CC                              l5778 55B8  
                            l5882 4DC2                              l5858 5690  
                            l4898 41F8                              l4994 2FB4  
                            l5890 524E                              l5698 0C60  
                            l5970 3884                              l5962 385E  
                            l5954 383A                              l5946 3802  
                            l5938 37DC                              l6498 461C  
                            l5876 50C4                              l5868 5090  
                            l5788 55CE                              l5884 4DCE  
                            l4996 2FD4                              l4988 511A  
                            l5892 5260                              l5796 4EBA  
                            l5980 3E52                              l5972 3894  
                            l5964 3860                              l5956 384A  
                            l5948 3804                              l5878 50D6  
                            l5886 4DFE                              l4998 302C  
                            l5894 5268                              l5798 4EBA  
                            l5990 3E90                              l5982 3E5E  
                            l5974 3898                              l5958 384E  
                            l5966 3862                              l5888 4E02  
                            l5896 5270                              l5992 3EA2  
                            l5984 3E62                              l5976 389A  
                            l5968 3874                              l5898 528C  
                            l5994 3EA8                              l5986 3E74  
                            l5978 389C                              l5996 3EAC  
                            l5988 3E7E                              l5998 3EB6  
                            STR_1 7FB1                              STR_2 7F80  
                            STR_3 7F2B                              STR_4 7FC1  
                            STR_5 7F3C                              STR_6 7FA1  
                            STR_7 7F4D                              STR_8 7FA1  
                            STR_9 7F09                              u4000 484C  
                            u4001 4848                              u4010 4874  
                            u4011 4870                              u4020 48AA  
                            u4100 1B84                              u4021 48A6  
                            u4101 1B80                              u4110 1B92  
                            u4030 1AAC                              u4111 1B8E  
                            u4031 1AA8                              u5000 235E  
                            u4200 1CD0                              u4120 1C00  
                            u4040 1ABE                              u5001 235A  
                            u4201 1CCC                              u4121 1BFC  
                            u4041 1ABA                              u5010 49CA  
                            u4210 1CDE                              u4130 1C18  
                            u4050 1ACE                              u5011 49C6  
                            u4211 1CDA                              u4131 1C12  
                            u4051 1ACA                              u5020 49E4  
                            u5100 4B92                              u4300 1E28  
                            u4220 1CFC                              u4140 1C1A  
                            u4060 1B10                              u5021 49E0  
                            u5101 4B8E                              u4301 1E24  
                            u4221 1CF8                              u4061 1B0C  
                            u5030 4A0A                              u5110 4BA8  
                            u4310 1E3A                              u4230 1D34  
                            u4150 1C42                              u4070 1B26  
                            u5031 4A06                              u5111 4BA4  
                            u4311 1E36                              u4231 1D30  
                            u4151 1C3E                              u4071 1B22  
                            u5040 4A28                              u5120 4BCC  
                            u5200 44A6                              u4400 1F22  
                            u4320 1E50                              u4240 1D7A  
                            u4160 1C60                              u4080 1B38  
                            u6000 0568                              u5041 4A24  
                            u5121 4BC8                              u5201 44A2  
                            u4401 1F1E                              u4321 1E4C  
                            u4241 1D76                              u4161 1C5C  
                            u4081 1B34                              u6001 0564  
                            u5050 4A44                              u5130 4C0C  
                            u5210 5550                              u4410 1F3E  
                            u4330 1E66                              u4250 1DB0  
                            u4170 1C80                              u4090 1B48  
                            u6010 0576                              u5051 4A40  
                            u5131 4C08                              u5211 554C  
                            u4411 1F3A                              u4331 1E62  
                            u4251 1DAC                              u4171 1C7C  
                            u4091 1B44                              u6011 0572  
                            u4500 3AEC                              u4420 53C4  
                            u5300 4924                              u5060 4A6A  
                            u5140 4C4A                              u4340 1E7A  
                            u4260 1DC0                              u4180 1C8E  
                            u5220 41B8                              u6100 08D6  
                            u6020 05A0                              u4501 3AE8  
                            u4421 53C0                              u5301 4920  
                            u5061 4A66                              u5141 4C46  
                            u4341 1E76                              u4261 1DBC  
                            u4181 1C8A                              u5221 41B4  
                            u6101 08D2                              u6021 059C  
                            u4510 3B2C                              u4430 5640  
                            u5310 497A                              u5070 4B40  
                            u5150 4C7E                              u4350 1E94  
                            u4270 1DEC                              u4190 1C9E  
                            u5230 41EC                              u6110 08E4  
                            u6030 06E8                              u4511 3B28  
                            u4431 563C                              u5311 4976  
                            u5071 4B3C                              u5151 4C7A  
                            u4351 1E90                              u4271 1DE8  
                            u4191 1C9A                              u6111 08E0  
                            u6031 06E4                              u4520 3B76  
                            u5320 498A                              u5080 4B5A  
                            u4600 23A8                              u5160 43DA  
                            u4360 1ECE                              u4280 1DFC  
                            u5240 421A                              u5400 459C  
                            u4440 5532                              u6200 0AD6  
                            u6120 08FE                              u6040 074E  
                            u7000 37FC                              u4521 3B72  
                            u5321 4986                              u5081 4B56  
                            u4601 23A4                              u5161 43D6  
                            u4361 1ECA                              u4281 1DF8  
                            u5241 4216                              u4441 552C  
                            u6201 0AD2                              u6121 08FA  
                            u6041 074A                              u7001 37F8  
                            u4530 3BCA                              u5330 5462  
                            u5090 4B74                              u4610 23B8  
                            u5170 4418                              u4370 1EE0  
                            u4290 1E18                              u5250 422E  
                            u5410 518C                              u4450 5534  
                            u6210 0B5A                              u6130 090C  
                            u6050 0796                              u7010 381A  
                            u4531 3BC6                              u5331 545E  
                            u5091 4B70                              u4611 23B4  
                            u5171 4414                              u4371 1EDC  
                            u4291 1E14                              u5251 422A  
                            u5235 41E2                              u6211 0B56  
                            u6131 0908                              u6051 0792  
                            u7011 3816                              u6300 39E0  
                            u4460 3A42                              u4540 3BFC  
                            u4700 2584                              u4620 23FC  
                            u5180 4436                              u4380 1EF0  
                            u5260 4256                              u5340 44F0  
                            u5500 30BC                              u5420 519E  
                            u6220 0B74                              u6140 0964  
                            u6060 07A6                              u7100 3E90  
                            u7020 382A                              u6301 39DA  
                            u4461 3A3E                              u4541 3BF8  
                            u4701 2580                              u4621 23F8  
                            u5181 4432                              u4381 1EEC  
                            u5261 4252                              u5501 30B8  
                            u5421 519A                              u6221 0B70  
                            u6141 0960                              u6061 07A2  
                            u7101 3E8C                              u7021 3826  
                            u6310 39E2                              u4470 3A74  
                            u4550 3C3A                              u4710 259A  
                            u4630 240E                              u5190 4456  
                            u4390 1F10                              u5270 4276  
                            u5350 450E                              u5510 30E0  
                            u5430 5114                              u6230 0B8C  
                            u6150 0A36                              u6070 080E  
                            u7110 3EA2                              u7030 383A  
                            u4471 3A70                              u4551 3C36  
                            u4711 2596                              u4631 240A  
                            u5191 4452                              u4391 1F0C  
                            u5271 4272                              u5351 450A  
                            u5431 510E                              u6231 0B88  
                            u6151 0A32                              u6071 080A  
                            u7111 3E9E                              u7031 3836  
                            u6400 51B0                              u6320 39F8  
                            u4560 3C64                              u5600 2A2C  
                            u4800 26D4                              u4720 25B8  
                            u4640 241E                              u5280 4286  
                            u5360 4536                              u5520 30FC  
                            u5440 5116                              u6240 0BEA  
                            u6160 0A52                              u6080 08B2  
                            u7120 3EDA                              u7040 384A  
                            u7200 4124                              u6401 51AC  
                            u6321 39F4                              u4481 3A9E  
                            u4561 3C60                              u5601 2A26  
                            u4801 26D0                              u4721 25B4  
                            u4641 241A                              u5281 4282  
                            u5361 4532                              u5345 44E6  
                            u5521 30F8                              u5417 5182  
                            u6241 0BE4                              u6161 0A4E  
                            u6081 08AE                              u7121 3ED6  
                            u7041 3846                              u7201 4120  
                            u6410 51C6                              u6330 3A0A  
                            u4490 3AC2                              u4570 3C92  
                            u5290 4902                              u5610 2A2E  
                            u4810 2702                              u4730 25D8  
                            u4650 245E                              u5370 4560  
                            u5530 3150                              u5450 512C  
                            u6250 0BEC                              u6170 0A64  
                            u6090 08C4                              u7130 3EEC  
                            u7050 3874                              u7210 4196  
                            u6411 51C2                              u6331 3A06  
                            u4491 3ABE                              u4571 3C8E  
                            u5291 48FE                              u4811 26FE  
                            u4731 25D4                              u4651 245A  
                            u5371 455C                              u5515 30D6  
                            u5451 5128                              u6171 0A60  
                            u6091 08C0                              u7131 3EE8  
                            u7051 3870                              u7211 4192  
                            u6420 51DC                              u4580 3CDA  
                            u5700 2C48                              u5620 2A44  
                            u4740 25EA                              u4660 249E  
                            u4900 21B0                              u4820 1F6C  
                            u5540 316C                              u5460 2FFC  
                            u6260 0C02                              u6180 0A72  
                            u6340 46AE                              u6500 3574  
                            u7140 3F6E                              u7060 3884  
                            u7300 47E6                              u6421 51D8  
                            u4581 3CD6                              u5701 2C44  
                            u5621 2A40                              u4741 25E6  
                            u4661 249A                              u4821 1F68  
                            u5541 3168                              u6261 0BFE  
                            u6181 0A6E                              u6341 46AA  
                            u6501 3570                              u7141 3F6A  
                            u7061 3880                              u7221 42AE  
                            u7301 47E2                              u6430 51F2  
                            u6270 38D8                              u5710 2C58  
                            u5630 2A74                              u4750 2618  
                            u4670 2514                              u4590 2396  
                            u4910 220A                              u4830 1F7E  
                            u5390 459A                              u5550 31A8  
                            u5470 302C                              u6190 0AA8  
                            u6350 46E0                              u6510 35D0  
                            u7070 3894                              u7230 42CA  
                            u7310 4818                              u6431 51EE  
                            u8007 55D8                              u6271 38D4  
                            u5711 2C54                              u5631 2A70  
                            u4751 2614                              u4671 2510  
                            u4591 2392                              u4911 2206  
                            u4831 1F7A                              u5391 4594  
                            u5551 31A4                              u5535 3146  
                            u5471 3028                              u6191 0AA4  
                            u6351 46DC                              u6511 35CC  
                            u7071 3890                              u7231 42C6  
                            u7311 4814                              u7151 40A0  
                            u5560 55A2                              u6280 390E  
                            u5720 2C6A                              u5640 2A90  
                            u4760 262E                              u4680 2536  
                            u4920 222A                              u4840 1F8E  
                            u5480 304E                              u5800 01AE  
                            u6360 46FC                              u6600 14C2  
                            u6520 3626                              u6440 4FC8  
                            u7400 3E42                              u7240 42E6  
                            u7160 40BC                              u8017 4D56  
                            u5561 559C                              u6281 390A  
                            u5721 2C66                              u5641 2A8C  
                            u4761 262A                              u4681 2532  
                            u4921 2226                              u4905 21A6  
                            u4841 1F8A                              u5385 4572  
                            u5481 304A                              u5465 2FF2  
                            u5801 01A8                              u6361 46F8  
                            u6601 14BE                              u6521 3622  
                            u7081 3E58                              u6441 4FC4  
                            u7401 3E3E                              u7321 3D22  
                            u7241 42E2                              u7161 40B8  
                            u5570 55A4                              u6290 392A  
                            u5730 2C7A                              u5650 2ABE  
                            u4770 2642                              u4690 2560  
                            u4930 223C                              u4850 1FCE  
                            u5810 01B0                              u6370 470E  
                            u6610 1508                              u6530 3670  
                            u7090 3E74                              u6450 5002  
                            u7330 3D96                              u7250 42F8  
                            u7170 40D8                              u8027 4D70  
                            u6291 3926                              u5731 2C76  
                            u5651 2ABA                              u4771 263E  
                            u4691 255C                              u4931 2238  
                            u4851 1FCA                              u6371 470A  
                            u6611 1504                              u6531 366C  
                            u7091 3E70                              u6451 4FFE  
                            u7331 3D92                              u7411 2CE6  
                            u7251 42F4                              u7171 40D4  
                            u5580 52B8                              u5740 2C92  
                            u5660 2ACC                              u4780 265C  
                            u4940 226A                              u4860 1FE0  
                            u5900 044A                              u5820 01C6  
                            u6380 4736                              u6700 16F6  
                            u6620 158A                              u6540 368E  
                            u6460 4CAE                              u7340 3DBE  
                            u7500 2ED0                              u7420 2D02  
                            u7260 431E                              u7180 40EA  
                            u8037 4D86                              u5581 52B4  
                            u5741 2C8E                              u5661 2AC8  
                            u4781 2658                              u4941 2266  
                            u4861 1FDC                              u5901 0446  
                            u5821 01C2                              u6381 4732  
                            u6701 16F2                              u6621 1584  
                            u6541 368A                              u6461 4CAA  
                            u7341 3DBA                              u7501 2ECC  
                            u7421 2CFE                              u7261 431A  
                            u7181 40E6                              u5590 52E6  
                            u3990 483A                              u5670 2BF6  
                            u4790 26A4                              u4950 2280  
                            u4870 1FF0                              u5910 045C  
                            u5830 0252                              u5750 00C6  
                            u6710 1738                              u6630 158C  
                            u6550 369E                              u6470 4CD0  
                            u6390 53EC                              u7350 3DCE  
                            u7510 2F02                              u7430 2D1A  
                            u7270 4330                              u7190 4112  
                            u8047 5756                              u5591 52E2  
                            u3991 4836                              u5671 2BF2  
                            u4791 26A0                              u4951 227C  
                            u4871 1FEC                              u5495 3062  
                            u5911 0458                              u5831 024E  
                            u5751 00C2                              u6711 1734  
                            u6551 369A                              u6471 4CCC  
                            u6391 53E8                              u7351 3DCA  
                            u7511 2EFE                              u7431 2D16  
                            u7271 432C                              u7191 410E  
                            u7600 3228                              u5680 2C14  
                            u4960 2294                              u4880 2026  
                            u5496 306C                              u5920 047E  
                            u5840 0282                              u5760 0116  
                            u6720 178E                              u6640 15A2  
                            u6560 36AC                              u6800 4ED2  
                            u6480 4CF8                              u7360 3DDE  
                            u7520 2F4E                              u7440 2D30  
                            u7280 43A0                              u7601 3224  
                            u5681 2C10                              u4961 2290  
                            u4881 2022                              u5497 307C  
                            u5921 047A                              u5841 027C  
                            u5761 0112                              u6721 178A  
                            u6641 159E                              u6561 36A8  
                            u6801 4ECE                              u6481 4CF4  
                            u7361 3DDA                              u7521 2F4A  
                            u7441 2D2C                              u7281 439C  
                            u7610 3236                              u5690 2C2E  
                            u4970 22AE                              u4890 2036  
                            u5930 04A4                              u5850 0284  
                            u5770 0124                              u6730 17B2  
                            u6650 15C6                              u6570 36E6  
                            u6490 3566                              u6810 4E58  
                            u7370 3DF0                              u7530 2F5C  
                            u7450 2D94                              u7611 3232  
                            u5691 2C2A                              u4971 22AA  
                            u4891 2032                              u5931 04A0  
                            u5771 0120                              u6731 17AE  
                            u6651 15C2                              u6571 36E2  
                            u6491 3562                              u6811 4E54  
                            u7371 3DEC                              u7531 2F58  
                            u7451 2D90                              u7291 4760  
                            u7700 32E4                              u7620 324C  
                            u6900 4DFA                              u4980 22F6  
                            u5940 04BA                              u5860 029A  
                            u5780 0136                              u6740 1844  
                            u6660 1602                              u6580 36F4  
                            u6820 34DE                              u7380 3E16  
                            u7540 2FA8                              u7460 2DC6  
                            u7701 32E0                              u7621 3248  
                            u4981 22F2                              u5941 04B6  
                            u5861 0296                              u5781 0132  
                            u6741 1840                              u6661 15FE  
                            u6581 36F0                              u6821 34DA  
                            u7381 3E12                              u7541 2FA4  
                            u7461 2DC2                              u7710 32F4  
                            u7630 325C                              u6910 4E2E  
                            u4990 2324                              u5950 04D6  
                            u5870 031E                              u5790 017E  
                            u6750 18F2                              u6670 16AC  
                            u6590 1478                              u6830 3502  
                            u7390 3E32                              u7470 2E12  
                            u7550 5740                              u7711 32F0  
                            u7631 3258                              u4991 2320  
                            u5951 04D2                              u5871 031A  
                            u5791 017A                              u6751 18EE  
                            u6671 16A6                              u6591 1474  
                            u6831 34FE                              u7391 3E2E  
                            u7471 2E0E                              u7551 573C  
                            u7800 5790                              u7720 330C  
                            u7640 3274                              u7560 31DC  
                            u6920 4E3E                              u5960 050C  
                            u5880 03B2                              u6760 195A  
                            u6680 16AE                              u6840 3526  
                            u7480 2E20                              u7801 578C  
                            u7721 3308                              u7641 3270  
                            u7561 31D8                              u6921 4E3A  
                            u5961 0508                              u5881 03AE  
                            u6761 1954                              u6841 3522  
                            u7481 2E1C                              u7730 331A  
                            u7650 3282                              u7570 31EA  
                            u5970 0532                              u5890 0424  
                            u6770 195C                              u6690 16C4  
                            u6850 354A                              u7490 2E6C  
                            u7810 4F4E                              u7731 3316  
                            u7651 327E                              u7571 31E6  
                            u6907 4DF0                              u5971 052E  
                            u5891 0420                              u6691 16C0  
                            u6851 3546                              u6931 370E  
                            u7491 2E68                              u7811 4F4A  
                            u7740 3330                              u7660 3298  
                            u7580 3200                              u5980 0544  
                            u6780 1972                              u6860 5074  
                            u6940 377E                              u7820 4F72  
                            u7900 4674                              u7741 332C  
                            u7661 3294                              u7581 31FC  
                            u6917 4E24                              u5981 0540  
                            u6781 196E                              u6861 5070  
                            u6941 377A                              u7821 4F6E  
                            u7901 4670                              u7750 3340  
                            u7670 32A8                              u7590 3210  
                            u6870 56AA                              u5990 0552  
                            u6790 1A0E                              u6950 379E  
                            u7830 4F96                              u7751 333C  
                            u7671 32A4                              u7591 320C  
                            u6871 56A6                              u5991 054E  
                            u6791 1A0A                              u6951 379A  
                            u7831 4F92                              u7760 3358  
                            u7680 32C0                              u6880 5090  
                            u6960 37AE                              u7840 45FA  
                            u7761 3354                              u7681 32BC  
                            u6881 508C                              u6961 37AA  
                            u7841 45F6                              u7770 3366  
                            u7690 32CE                              u6890 50C4  
                            u6970 37CC                              u7850 460C  
                            u7771 3362                              u7691 32CA  
                            u6891 50C0                              u6971 37C8  
                            u7851 4608                              u7780 337C  
                            u6980 37DC                              u7860 461C  
                            u7781 3378                              u6981 37D8  
                            u7861 4618                              u7790 338C  
                            u6990 37EC                              u7870 462C  
                            u7791 3388                              u6991 37E8  
                            u7871 4628                              u7880 463C  
                            u7881 4638                              u7890 4658  
                            u7891 4654                              u7977 4080  
                            u7987 5328                              u7997 55C6  
                            _TMR2 000FBC             ??_stopTimeSettingMenu 005F  
                            abs@a 0013                 ?_Lcd_Write_String 0005  
                            _dbuf 0260                              _atoi 38A0  
                            _main 45AE                              _dtoa 29FC  
                            _prec 00F6                              _nout 01AF  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              btemp 005F  
                   ___fpclassifyf 44B0                              prodh 000FF4  
                            prodl 000FF3                              start 009A  
              ??_Lcd_Write_String 0007                   ___fldiv@new_exp 0046  
                 __end_of_Lcd_Cmd 5762                      _tolower$3141 000D  
                    ___param_bank 000000           ??_driverTimeSettingMenu 005F  
                           ??_abs 0015                             ??_pad 0017  
                    ?_menuControl 0001  speedLimitSettingMenu@textCursor2 00E1  
                   ___fltol@sign1 0056                   __end_of___aodiv 3BB8  
                           ?_atoi 0008                   __end_of___fladd 1F52  
                           ?_main 0001                             ?_dtoa 001C  
                 __end_of___aomod 3D1C                   __end_of_adcInit 54C6  
                 __end_of___fldiv 2716                   __end_of___awdiv 4A7C  
                 __end_of___flneg 5572                             _EEADR 000FA9  
                           STR_10 7FD0                             STR_11 7F09  
                           STR_20 7FF3                             STR_12 7FDE  
                           STR_13 7F1A                             STR_14 7EF7  
                           STR_23 7FEF                             STR_15 7F6F  
                           STR_24 7FF7                             STR_16 7F91  
                           STR_17 7F5E                             STR_18 7EF7  
                           STR_27 7FFB                             STR_19 7FEB  
                 __end_of___awmod 4BDE                             STR_29 7FFB  
                 __end_of___flmul 237C                   __end_of___flsub 5382  
                 __end_of___fltol 42A8                   __end_of___lldiv 4D2C  
                           _T0CON 000FD5                   ___awdiv@divisor 0003  
                           i2l685 0096                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 00A9                             _TMR0H 000FD7  
                           _TMR0L 000FD6           __size_of_Lcd_Set_Cursor 0066  
             ___lmul@multiplicand 0005                             _fabsf 564E  
                           _flags 00F8                             _fputc 4828  
                           _fputs 5382                   __end_of_isdigit 55AA  
                     ?_PWM1_setDC 0058                      _adc_raw_data 0173  
                     ?_PWM2_setDC 0058                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 01B1                             _putch 57B4  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 52F2                   __end_of_isupper 553A  
                __end_of_PWM_Init 5700                             tablat 000FF5  
                           ttemp5 0060                             ttemp6 0063  
                           ttemp7 0067                             status 000FD8  
          ?_speedLimitSettingMenu 0001                             wtemp8 0060  
                 __end_of_sprintf 52A0                    ?___fpclassifyf 0001  
                 __end_of_tolower 5144                   __end_of_strncmp 475A  
                   ?_readAdcValue 0001                  __end_of_Lcd_Port 51FC  
                 __initialization 51FC                       _system_init 3F7A  
                    __end_of_atoi 3A30                      __end_of_main 4684  
                    __end_of_dtoa 2CE0       _KP@fs_speed_controller$F949 01E7  
                          ??_atoi 000A                            ??_main 005F  
                          ??_dtoa 0026                __size_of_Lcd_Clear 000E  
                   __activetblptr 000002   __size_of_calculatedAverageValue 02E6  
        stopTimeSettingMenu@F6910 0210                            ?_fabsf 001C  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _CCPR1L 000FBE  
                          _CCPR2L 000F67                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            ?_putch 0001  
                          i2l6520 0018                            i2l6530 0046  
                          i2l6522 0026                            i2l6540 0074  
                          i2l6532 004C                            i2l6524 0028  
                          i2l6542 008A                            i2l6534 005E  
                          i2l6526 0030                            i2l6518 000A  
                          i2l6544 0092                            i2l6536 0060  
                          i2l6528 0034                            i2l6538 0070  
                       ??_Lcd_Cmd 0002                            _TIMER0 0008  
                  ??_readAdcValue 0003           __size_of_Lcd_Write_Char 0038  
                __end_of___xxtofl 3708                 _scanAdcConversion 0C4E  
              _timer_counter_flag 00FA                ?_scanAdcConversion 0001  
            __size_of_eepromWrite 002E                      vfprintf@cfmt 00CD  
                __end_of_lcd_init 4DC2                            ___flge 43AC  
                          ___fleq 4BDE                  __end_of_mainMenu 38A0  
                          ___lmul 4FAA                         ??___aodiv 0011  
                       ??___fladd 003D                         ??___aomod 0011  
                          ___wmul 5700                         ??_adcInit 0001  
                       ??___fldiv 003D                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___awmod 0005  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _efgtoa 009E                            _floorf 2FB4  
             __size_of_PWM1_setDC 007A                            fabsf@u 0020  
                          fabsf@x 001C                  __end_of_mcu_init 5792  
                __end_of_exitLine 57B4               __size_of_PWM2_setDC 007A  
               _secretMenuCounter 00FC               ??_scanAdcConversion 0058  
                          clear_0 5222                            clear_1 522E  
                          clear_2 523A                   eepromWrite@data 0001  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                 ___awmod@counter 0005                            pad@buf 0013  
                          dtoa@fp 001C                            _strcpy 5144  
                          _strlen 5618                            fputc@c 0001  
            readAdcValue@adcValue 0006                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 7EF6                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 507E  
                       ??_sprintf 005F                         ??_tolower 0009  
                __end_of_stopMenu 4828                         ??_strncmp 0007  
      __end_of_buttonControlFlags 3396                   Lcd_Set_Cursor@a 0005  
                 Lcd_Set_Cursor@b 0004                   Lcd_Set_Cursor@y 0007  
                 Lcd_Set_Cursor@z 0006                        ___flge@ff1 0035  
                      ___flge@ff2 0039                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 0018                      ___xxtofl@exp 0017  
                    ___xxtofl@val 000E                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                     mainMenu@F6894 0163  
       __end_of_scanAdcConversion 1454                        __accesstop 0060  
         __end_of__initialization 5240                        ___flneg@f1 0001  
          _calculatedAverageValue 2716                 __end_of_Lcd_Clear 57B2  
                   ___rparam_used 000001                        ___fltol@f1 004E  
                  __pcstackCOMRAM 0001                      __pidataBANK1 5408  
      driverTimeSettingMenu@F6913 0200                     __end_of_fabsf 5682  
                ??_openLCD_Script 000B                     __end_of_fputc 48F2  
                   __end_of_fputs 53C6                     __end_of_putch 57B6  
                       ?_PWM_Init 0001                    _Lcd_Set_Cursor 507E  
    _KP@fs_speed_controller$F1163 01DF      _KP@fs_speed_controller$F2203 01BF  
    _KP@fs_speed_controller$F2072 01C7      _KP@fs_speed_controller$F1338 01D7  
    _KP@fs_speed_controller$F2356 01B7      _KP@fs_speed_controller$F1838 01CF  
               eepromRead@address 0001              __size_of_menuControl 0076  
                         ??_fabsf 0020                         ?_Lcd_Port 0001  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_putch 0001                        __pbssBANK0 00F3  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
             PWM1_setDC@dutycycle 0058                           ?_TIMER0 0001  
                         ?___flge 0035                           ?___fleq 0001  
              __size_of_pauseMenu 0136                           ?___lmul 0001  
                         ?___wmul 0001                           ?_efgtoa 0058  
  __size_of_driverTimeSettingMenu 0128                           _CCP1CON 000FBD  
                         _CCP2CON 000F66                           ?_floorf 004E  
   __end_of_driverTimeSettingMenu 3F7A                    ___lmul@product 0009  
       __size_of_Lcd_Write_String 007E            __end_of_Lcd_Set_Cursor 50E4  
                      ??_PWM_Init 0001                           ?_strcpy 0001  
                         ?_strlen 0001              __end_of_readAdcValue 5408  
                      _eepromRead 5726                         ?___xxtofl 000E  
  stopTimeSettingMenu@textCursor2 00E1                __size_of_vfpfcnvrt 063E  
     __end_of_stopTimeSettingMenu 41A2                        ??_Lcd_Port 0001  
              __size_of_startMenu 001A                      ??_PWM1_setDC 005A  
                    ??_PWM2_setDC 005A                         ?_lcd_init 0001  
         __size_of_menuInitialize 0028           ??_speedLimitSettingMenu 005F  
                       ?_mainMenu 0001                     _menu_selected 00FB  
              __size_of_stopMotor 003C        __size_of_scanAdcConversion 0806  
                  _Lcd_Write_Char 55AA                           _Lcd_Cmd 5744  
                       ?_mcu_init 0001                         ?_exitLine 0001  
                 __size_of_TIMER0 0092                        _controller 0150  
                         __Hparam 0000                           __Lparam 0000  
             PWM2_setDC@dutycycle 0058                      ?_system_init 0001  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 3A30                           ___fladd 1A92  
                         ___aomod 3BB8                           _adcInit 5488  
                         ___fldiv 237C                           ___awdiv 49B8  
                         ___flneg 553A                   __size_of___lmul 006A  
                         ___awmod 4B2E                           ___flmul 1F52  
                         ___flsub 533C                           ___fltol 41A2  
                         ___lldiv 4C88                   __size_of___wmul 0026  
                       ?_vfprintf 00C7                   __size_of_efgtoa 0BB0  
                       ?_stopMenu 0001                   __size_of_floorf 0216  
                         __pcinit 51FC                __end_of_PWM1_setDC 4F34  
                         __ramtop 0600                   ?_Lcd_Set_Cursor 0004  
              __end_of_PWM2_setDC 4EBA                           __ptext0 45AE  
                         __ptext1 5792                           __ptext2 3F7A  
                         __ptext3 5726                           __ptext4 52F2  
                         __ptext5 57A4                           __ptext6 56B0  
                         __ptext7 4F34                           __ptext8 4A7C  
                         __ptext9 409A                        _menu_flags 0197  
                      _menu_value 00F3                   __size_of_strcpy 005C  
                 __size_of_strlen 0036                         _T2CONbits 000FBA  
                    __size_of_abs 0040                      __size_of_pad 00C6  
                         _isdigit 5572                        ??___xxtofl 0012  
                ___awmod@dividend 0001                           _isspace 52A0  
                         _isupper 5502                           efgtoa@c 005E  
                         efgtoa@d 0087                           efgtoa@e 009F  
                         efgtoa@f 005A                           efgtoa@g 009B  
                         efgtoa@h 0091                           efgtoa@i 0099  
                         efgtoa@l 0095                           efgtoa@m 0083  
                         efgtoa@n 00A1                           efgtoa@p 008B  
                         efgtoa@t 007F                           efgtoa@u 00A3  
                         efgtoa@w 008E                     ?_speedControl 0058  
                         atoi@neg 000E                     ?_timer_0_init 0001  
               __end_of_pauseMenu 3E52                           _sprintf 524E  
                         _tolower 50E4                        ??_lcd_init 0004  
          __end_of_Lcd_Write_Char 55E2                           _strncmp 4684  
            end_of_initialization 5240                        ??_mainMenu 005F  
            speedControl@position 0058                           floorf@e 0064  
                         floorf@m 0060                           floorf@u 0066  
                         floorf@x 004E                        _secretMenu 2CE0  
                         fputc@fp 0003                        ??_mcu_init 0001  
                      ??_exitLine 0001                     __Lmediumconst 7EF6  
                         fputs@fp 000C                   ___lldiv@divisor 0005  
                 ___lldiv@counter 000D                 __end_of_vfpfcnvrt 1A92  
                      efgtoa@mode 0090                        efgtoa@sign 0089  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         Lcd_Port@a 0001  
               __end_of_startMenu 577C                        ??_vfprintf 005F  
                      ??_stopMenu 005F                           strcpy@d 0009  
                         strlen@a 0003                           strcpy@s 0007  
                         strlen@s 0001                 __end_of_stopMotor 5502  
                       _PORTBbits 000F81                         _PORTDbits 000F83  
                     ?_eepromRead 0001                       ___fladd@grs 0044  
                   ___xxtofl@sign 0016                    pauseMenu@F6900 0240  
                       _TRISAbits 000F92                    ??_speedControl 005C  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _TRISEbits 000F96  
                  ??_timer_0_init 0001              pauseMenu@textCursor2 00E1  
                     ___fldiv@grs 0048                       ___fldiv@rem 0041  
                      _startMotor 55E2                   ?_Lcd_Write_Char 0001  
         ?_calculatedAverageValue 0001                 Lcd_Write_String@a 0005  
               Lcd_Write_String@i 0009                       ___flmul@grs 0029  
                   ??_eepromWrite 0002          _button_bounce_controller 019D  
                  __end_of_TIMER0 009A               mainMenu@textCursor2 00E1  
                   ?_stateMachine 0001                _buttonControlFlags 31CA  
                       _Lcd_Clear 57A4                      _convert_data 0100  
           __size_of_readAdcValue 0042                    __end_of___flge 44B0  
                  __end_of___fleq 4C88                    __end_of___lmul 5014  
                     vfpfcnvrt@ap 00AB                       vfpfcnvrt@ct 00C3  
                     vfpfcnvrt@fp 00A7                       vfpfcnvrt@ll 00B1  
                  __end_of___wmul 5726                  _Lcd_Write_String 4DC2  
                  __end_of_efgtoa 0C4E               ?_buttonControlFlags 0001  
                  __end_of_floorf 31CA                        floorf@F524 01A3  
                  __end_of_strcpy 51A0                    __end_of_strlen 564E  
               __size_of_PWM_Init 0028               start_initialization 51FC  
                     __end_of_abs 5488                       __end_of_pad 49B8  
  __end_of_calculatedAverageValue 29FC                    _menuInitialize 56B0  
                    _driver_limit 0183                       ?_secretMenu 0001  
               __size_of_Lcd_Port 005C              ??_buttonControlFlags 0001  
                        ??_TIMER0 0001                     stopMenu@F6897 0250  
           __end_of___fpclassifyf 45AE                      _readAdcValue 53C6  
                  ??_stateMachine 00F1               __size_of_eepromRead 001E  
                     vfprintf@fmt 00C9                        ?_Lcd_Clear 0001  
                        ??___flge 003D                          ??___fleq 0009  
                        ??___lmul 0009               __end_of_eepromWrite 56B0  
                        ??___wmul 0005                          ??_efgtoa 006A  
                     __pdataBANK1 01B3                          ??_floorf 0052  
            __size_of_system_init 0120                   Lcd_Write_Char@a 0004  
                 Lcd_Write_Char@y 0003                     ??_menuControl 005F  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0039                         ___fladd@b 0035  
                       ___fldiv@a 0039                         ___fldiv@b 0035  
                       ___flmul@a 0020                         ___flmul@b 001C  
                       ___flsub@a 0049                         ___flsub@b 0045  
          __end_of_menuInitialize 56D8                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                 __size_of___xxtofl 01B4  
                     ?_startMotor 0001    __size_of_speedLimitSettingMenu 0104  
   __end_of_speedLimitSettingMenu 43AC                          ?_Lcd_Cmd 0001  
               __size_of_lcd_init 0096                 __size_of_mainMenu 0198  
                       _atoi$3046 0010                         _atoi$3047 0014  
                       _atoi$3048 0012                   secretMenu@F6904 0230  
               __size_of_mcu_init 0016                 __size_of_exitLine 0002  
                     _efgtoa$2980 0075                       _efgtoa$2990 007D  
                     _efgtoa$2984 0077                       _efgtoa$2979 0073  
                     _efgtoa$2988 0079                       _efgtoa$2989 007B  
                       _dtoa$2955 002E              __end_of_speedControl 3554  
                ??_Lcd_Set_Cursor 0005                         __pintcode 0008  
                   __pmediumconst 7EF6              __end_of_timer_0_init 57A4  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001               __size_of_secretMenu 02D4  
               __size_of_vfprintf 006A             _driverTimeSettingMenu 3E52  
               __size_of_stopMenu 00CE                         fabsf@F463 01AB  
                        ?_isdigit 0001                          ?_isspace 0001  
                 ?_menuInitialize 0001                          ?_isupper 0001  
         __size_of_openLCD_Script 004A               __end_of_menuControl 4FAA  
                  __size_of_fabsf 0034                          ?_sprintf 00CF  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002                eepromWrite@address 0002  
                       _pauseMenu 3D1C                    ___wmul@product 0005  
    __size_of_stopTimeSettingMenu 0108                          _LATCbits 000F8B  
                        _LATDbits 000F8C                       _eepromWrite 5682  
                  PWM1_setDC@duty 005C                          Lcd_Cmd@a 0003  
                        _PIR2bits 000FA1                          i2u791_40 0018  
                        i2u791_41 0014                          i2u792_40 0026  
                        i2u792_41 0022                          i2u793_40 0046  
                        i2u793_41 0042                          i2u794_40 005E  
                        i2u794_41 005A                          i2u795_40 0070  
                        i2u795_41 006C                          i2u796_40 008A  
                        i2u796_41 0086                       ??_Lcd_Clear 0004  
                    _pauseIsClick 00FF               __size_of_startMotor 0036  
                       _vfpfcnvrt 1454                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0                          _PWM_Init 56D8  
               ___wmul@multiplier 0001                         _startMenu 5762  
driverTimeSettingMenu@textCursor2 00E1                      ??_eepromRead 0001  
                ??_Lcd_Write_Char 0002                    PWM2_setDC@duty 005C  
                       _stopMotor 54C6        speedLimitSettingMenu@F6907 0220  
            __end_of_stateMachine 4B2E                      _isspace$3077 0007  
                        _Lcd_Port 51A0                        vfpfcnvrt@c 00C6  
                      vfpfcnvrt@f 00BF                 ___lmul@multiplier 0001  
                       copy_data0 5210          __end_of_Lcd_Write_String 4E40  
                      ?_pauseMenu 0001                  __size_of_Lcd_Cmd 001E  
                      _EECON1bits 000FA6                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 5744  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of_adcInit 003E  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                  __size_of___lldiv 00A4  
                      ?_vfpfcnvrt 00A7            ?_driverTimeSettingMenu 0001  
                     _menuControl 4F34                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        ?_startMenu 0001  
                      _ANSELAbits 000F38                        _ANSELBbits 000F39  
                      _ANSELCbits 000F3A                        _ANSELDbits 000F3B  
                      _ANSELEbits 000F3C                ___fpclassifyf@F463 01A7  
                      sprintf@fmt 00D1                          ___xxtofl 3554  
                      ?_stopMotor 0001                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 475A  
                        __ptext11 5762                          __ptext20 2716  
                        __ptext12 42A8                          __ptext21 4FAA  
                        __ptext13 2CE0                          __ptext30 524E  
                        __ptext22 4C88                          __ptext14 3D1C  
                        __ptext31 5014                          __ptext23 57B2  
                        __ptext15 3708                          __ptext40 41A2  
                        __ptext32 1454                          __ptext24 3E52  
                        __ptext16 55E2                          __ptext41 533C  
                        __ptext33 4684                          __ptext25 54C6  
                        __ptext17 3396                          __ptext50 29FC  
                        __ptext42 1A92                          __ptext34 009E  
                        __ptext26 4E40                          __ptext18 0C4E  
                        __ptext51 48F2                          __ptext43 553A  
                        __ptext35 50E4                          __ptext27 4EBA  
                        __ptext19 53C6                          __ptext60 52A0  
                        __ptext52 5618                          __ptext44 1F52  
                        __ptext36 5502                          __ptext28 564E  
                        __ptext61 5572                          __ptext53 5382  
                        __ptext45 43AC                          __ptext37 5144  
                        __ptext29 3554                          __ptext70 5744  
                        __ptext62 5700                          __ptext54 4828  
                        __ptext46 4BDE                          __ptext38 2FB4  
                        __ptext71 51A0                          __ptext63 5682  
                        __ptext55 57B4                          __ptext47 237C  
                        __ptext39 44B0                          __ptext72 5488  
                        __ptext64 4DC2                          __ptext56 5448  
                        __ptext48 4B2E                          __ptext73 56D8  
                        __ptext65 55AA                          __ptext57 3BB8  
                        __ptext49 49B8                          __ptext66 507E  
                        __ptext58 3A30                          __ptext67 31CA  
                        __ptext59 38A0                          __ptext68 577C  
                        __ptext69 4D2C                  __size_of_isupper 0038  
                        _lcd_init 4D2C                          _mainMenu 3708  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                    ??_secretMenu 005F                        strcpy@dest 0001  
                __size_of_strncmp 00D6                          _mcu_init 577C  
                        _exitLine 57B2                     __size_of_atoi 0190  
                   __size_of_main 00D6                     __size_of_dtoa 02E4  
           __size_of_speedControl 01BE             __size_of_timer_0_init 0012  
           secretMenu@textCursor2 00E1                          efgtoa@fp 0058  
                        efgtoa@ne 0085                          efgtoa@pp 0081  
                        efgtoa@ou 006F                          int$flags 005F  
                        _vfprintf 5014                          _stopMenu 475A  
          readAdcValue@adcChannel 0005                  ___aomod@dividend 0001  
              __end_of_secretMenu 2FB4                    _vfpfcnvrt$3010 00BD  
                  _vfpfcnvrt$3004 00B9                    _vfpfcnvrt$3005 00BB  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  _openLCD_Script 52F2      _KD@fs_speed_controller$F1164 01DB  
    _KD@fs_speed_controller$F2204 01BB      _KD@fs_speed_controller$F2073 01C3  
    _KD@fs_speed_controller$F1339 01D3      _KD@fs_speed_controller$F2357 01B3  
    _KD@fs_speed_controller$F1839 01CB                          isdigit@c 0001  
                    _speedControl 3396                      _timer_0_init 5792  
                    ??_startMotor 005E                Lcd_Write_Char@temp 0002  
                        intlevel2 0000                         sprintf@ap 00D9  
                     ??_pauseMenu 005F       __size_of_buttonControlFlags 01CC  
                        isspace@c 0001                  ___lldiv@dividend 0001  
                       strcpy@src 0003                          isupper@c 0001  
                       strncmp@_l 0001                         strncmp@_r 0003  
                      _OSCCONbits 000FD3                     ??_system_init 0002  
                     efgtoa@nmode 008D                      _procces_data 0130  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 00AD  
                 ___aomod@counter 0011                Lcd_Set_Cursor@temp 0008  
                ??_menuInitialize 0001                __end_of_startMotor 5618  
     _KD@fs_speed_controller$F950 01E3             __size_of_stateMachine 00B2  
                     ??_startMenu 0001               _stopTimeSettingMenu 409A  
          __end_of_openLCD_Script 533C                          sprintf@f 00DB  
                        tolower@c 0007                          sprintf@s 00CF  
          __size_of___fpclassifyf 00FE                  ___lldiv@quotient 0009  
                     ??_stopMotor 005E                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
                     _timer_value 018F                     ___fladd@signs 0041  
                      _PWM1_setDC 4EBA                        _PWM2_setDC 4E40  
                    ___aodiv@sign 0012                      ___fladd@aexp 0042  
                    ___fladd@bexp 0043              ?_stopTimeSettingMenu 0001  
                    ?_eepromWrite 0001             _speedLimitSettingMenu 42A8  
                    ___aomod@sign 0012                      _stateMachine 4A7C  
