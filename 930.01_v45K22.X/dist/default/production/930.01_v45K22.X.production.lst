

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 28 19:36:00 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=3
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=3
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1,group=3
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=2
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    91                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    92                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    93                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    94                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    95                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    96  0000                     
    97                           ; Version 2.20
    98                           ; Generated 05/05/2020 GMT
    99                           ; 
   100                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   101                           ; All rights reserved.
   102                           ; 
   103                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   104                           ; 
   105                           ; Redistribution and use in source and binary forms, with or without modification, are
   106                           ; permitted provided that the following conditions are met:
   107                           ; 
   108                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   109                           ;        conditions and the following disclaimer.
   110                           ; 
   111                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   112                           ;        of conditions and the following disclaimer in the documentation and/or other
   113                           ;        materials provided with the distribution.
   114                           ; 
   115                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   116                           ;        software without specific prior written permission.
   117                           ; 
   118                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   119                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   120                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   121                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   122                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   123                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   124                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   125                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   126                           ; 
   127                           ; 
   128                           ; Code-generator required, PIC18F45K22 Definitions
   129                           ; 
   130                           ; SFR Addresses
   131  0000                     
   132                           	psect	eeprom_data
   133  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   134  0000                     
   135                           	psect	idataBANK1
   136  005674                     __pidataBANK1:
   137                           	callstack 0
   138                           
   139                           ;initializer for _KD@fs_speed_controller$F2376
   140  005674  0000               	dw	0
   141  005676  40A0               	dw	16544
   142                           
   143                           ;initializer for _KP@fs_speed_controller$F2375
   144  005678  0000               	dw	0
   145  00567A  3F00               	dw	16128
   146                           
   147                           ;initializer for _KD@fs_speed_controller$F2221
   148  00567C  0000               	dw	0
   149  00567E  40A0               	dw	16544
   150                           
   151                           ;initializer for _KP@fs_speed_controller$F2220
   152  005680  0000               	dw	0
   153  005682  3F00               	dw	16128
   154                           
   155                           ;initializer for _KD@fs_speed_controller$F2088
   156  005684  0000               	dw	0
   157  005686  40A0               	dw	16544
   158                           
   159                           ;initializer for _KP@fs_speed_controller$F2087
   160  005688  0000               	dw	0
   161  00568A  3F00               	dw	16128
   162                           
   163                           ;initializer for _KD@fs_speed_controller$F1857
   164  00568C  0000               	dw	0
   165  00568E  40A0               	dw	16544
   166                           
   167                           ;initializer for _KP@fs_speed_controller$F1856
   168  005690  0000               	dw	0
   169  005692  3F00               	dw	16128
   170                           
   171                           ;initializer for _KD@fs_speed_controller$F1354
   172  005694  0000               	dw	0
   173  005696  40A0               	dw	16544
   174                           
   175                           ;initializer for _KP@fs_speed_controller$F1353
   176  005698  0000               	dw	0
   177  00569A  3F00               	dw	16128
   178                           
   179                           ;initializer for _KD@fs_speed_controller$F1172
   180  00569C  0000               	dw	0
   181  00569E  40A0               	dw	16544
   182                           
   183                           ;initializer for _KP@fs_speed_controller$F1171
   184  0056A0  0000               	dw	0
   185  0056A2  3F00               	dw	16128
   186                           
   187                           ;initializer for _KD@fs_speed_controller$F956
   188  0056A4  0000               	dw	0
   189  0056A6  40A0               	dw	16544
   190                           
   191                           ;initializer for _KP@fs_speed_controller$F955
   192  0056A8  0000               	dw	0
   193  0056AA  3F00               	dw	16128
   194                           
   195                           ;initializer for _KD
   196  0056AC  0000               	dw	0
   197  0056AE  40A0               	dw	16544
   198                           
   199                           ;initializer for _KP
   200  0056B0  0000               	dw	0
   201  0056B2  3F00               	dw	16128
   202  0000                     _ANSELCbits	set	3898
   203  0000                     _ANSELBbits	set	3897
   204  0000                     _ANSELDbits	set	3899
   205  0000                     _ANSELEbits	set	3900
   206  0000                     _ANSELAbits	set	3896
   207  0000                     _T0CON	set	4053
   208  0000                     _TMR0L	set	4054
   209  0000                     _TMR0H	set	4055
   210  0000                     _INTCONbits	set	4082
   211  0000                     _CCPR2L	set	3943
   212  0000                     _CCPR1L	set	4030
   213  0000                     _PR2	set	4027
   214  0000                     _TMR2	set	4028
   215  0000                     _T2CONbits	set	4026
   216  0000                     _CCP2CON	set	3942
   217  0000                     _CCP1CON	set	4029
   218  0000                     _LATCbits	set	3979
   219  0000                     _LATDbits	set	3980
   220  0000                     _TRISCbits	set	3988
   221  0000                     _OSCTUNEbits	set	3995
   222  0000                     _OSCCONbits	set	4051
   223  0000                     _TRISBbits	set	3987
   224  0000                     _TRISDbits	set	3989
   225  0000                     _PORTDbits	set	3971
   226  0000                     _PORTBbits	set	3969
   227  0000                     _PIR2bits	set	4001
   228  0000                     _EECON2	set	4007
   229  0000                     _EEDATA	set	4008
   230  0000                     _EECON1bits	set	4006
   231  0000                     _EEADR	set	4009
   232  0000                     _ADCON2bits	set	4032
   233  0000                     _ADCON1	set	4033
   234  0000                     _ADCON0	set	4034
   235  0000                     _TRISEbits	set	3990
   236  0000                     _TRISAbits	set	3986
   237  0000                     _ADRESL	set	4035
   238  0000                     _ADRESH	set	4036
   239  0000                     _ADCON0bits	set	4034
   240                           
   241                           	psect	smallconst
   242  000600                     __psmallconst:
   243                           	callstack 0
   244  000600  00                 	db	0
   245  000601                     STR_9:
   246  000601  25                 	db	37
   247  000602  64                 	db	100	;'d'
   248  000603  20                 	db	32
   249  000604  20                 	db	32
   250  000605  20                 	db	32
   251  000606  20                 	db	32
   252  000607  20                 	db	32
   253  000608  20                 	db	32
   254  000609  20                 	db	32
   255  00060A  20                 	db	32
   256  00060B  20                 	db	32
   257  00060C  20                 	db	32
   258  00060D  20                 	db	32
   259  00060E  20                 	db	32
   260  00060F  20                 	db	32
   261  000610  20                 	db	32
   262  000611  20                 	db	32
   263  000612  00                 	db	0
   264  000613                     STR_4:
   265  000613  50                 	db	80	;'P'
   266  000614  49                 	db	73	;'I'
   267  000615  44                 	db	68	;'D'
   268  000616  20                 	db	32
   269  000617  50                 	db	80	;'P'
   270  000618  41                 	db	65	;'A'
   271  000619  52                 	db	82	;'R'
   272  00061A  41                 	db	65	;'A'
   273  00061B  4D                 	db	77	;'M'
   274  00061C  20                 	db	32
   275  00061D  20                 	db	32
   276  00061E  20                 	db	32
   277  00061F  20                 	db	32
   278  000620  20                 	db	32
   279  000621  20                 	db	32
   280  000622  20                 	db	32
   281  000623  00                 	db	0
   282  000624                     STR_8:
   283  000624  48                 	db	72	;'H'
   284  000625  49                 	db	73	;'I'
   285  000626  5A                 	db	90	;'Z'
   286  000627  20                 	db	32
   287  000628  4C                 	db	76	;'L'
   288  000629  69                 	db	105	;'i'
   289  00062A  4D                 	db	77	;'M'
   290  00062B  69                 	db	105	;'i'
   291  00062C  54                 	db	84	;'T'
   292  00062D  69                 	db	105	;'i'
   293  00062E  20                 	db	32
   294  00062F  20                 	db	32
   295  000630  20                 	db	32
   296  000631  20                 	db	32
   297  000632  20                 	db	32
   298  000633  20                 	db	32
   299  000634  00                 	db	0
   300  000635                     STR_3:
   301  000635  5A                 	db	90	;'Z'
   302  000636  41                 	db	65	;'A'
   303  000637  4D                 	db	77	;'M'
   304  000638  41                 	db	65	;'A'
   305  000639  4E                 	db	78	;'N'
   306  00063A  20                 	db	32
   307  00063B  44                 	db	68	;'D'
   308  00063C  4F                 	db	79	;'O'
   309  00063D  4C                 	db	76	;'L'
   310  00063E  44                 	db	68	;'D'
   311  00063F  55                 	db	85	;'U'
   312  000640  20                 	db	32
   313  000641  20                 	db	32
   314  000642  20                 	db	32
   315  000643  20                 	db	32
   316  000644  20                 	db	32
   317  000645  00                 	db	0
   318  000646                     STR_12:
   319  000646  48                 	db	72	;'H'
   320  000647  41                 	db	65	;'A'
   321  000648  52                 	db	82	;'R'
   322  000649  45                 	db	69	;'E'
   323  00064A  4B                 	db	75	;'K'
   324  00064B  54                 	db	84	;'T'
   325  00064C  20                 	db	32
   326  00064D  5A                 	db	90	;'Z'
   327  00064E  41                 	db	65	;'A'
   328  00064F  4D                 	db	77	;'M'
   329  000650  41                 	db	65	;'A'
   330  000651  4E                 	db	78	;'N'
   331  000652  49                 	db	73	;'I'
   332  000653  20                 	db	32
   333  000654  64                 	db	100	;'d'
   334  000655  6B                 	db	107	;'k'
   335  000656  00                 	db	0
   336  000657                     STR_10:
   337  000657  44                 	db	68	;'D'
   338  000658  55                 	db	85	;'U'
   339  000659  52                 	db	82	;'R'
   340  00065A  4D                 	db	77	;'M'
   341  00065B  41                 	db	65	;'A'
   342  00065C  20                 	db	32
   343  00065D  5A                 	db	90	;'Z'
   344  00065E  41                 	db	65	;'A'
   345  00065F  4D                 	db	77	;'M'
   346  000660  41                 	db	65	;'A'
   347  000661  4E                 	db	78	;'N'
   348  000662  49                 	db	73	;'I'
   349  000663  20                 	db	32
   350  000664  20                 	db	32
   351  000665  6D                 	db	109	;'m'
   352  000666  73                 	db	115	;'s'
   353  000667  00                 	db	0
   354  000668                     STR_2:
   355  000668  20                 	db	32
   356  000669  69                 	db	105	;'i'
   357  00066A  59                 	db	89	;'Y'
   358  00066B  69                 	db	105	;'i'
   359  00066C  20                 	db	32
   360  00066D  45                 	db	69	;'E'
   361  00066E  67                 	db	103	;'g'
   362  00066F  6C                 	db	108	;'l'
   363  000670  65                 	db	101	;'e'
   364  000671  6E                 	db	110	;'n'
   365  000672  63                 	db	99	;'c'
   366  000673  65                 	db	101	;'e'
   367  000674  6C                 	db	108	;'l'
   368  000675  65                 	db	101	;'e'
   369  000676  72                 	db	114	;'r'
   370  000677  20                 	db	32
   371  000678  00                 	db	0
   372  000679                     STR_11:
   373  000679  25                 	db	37
   374  00067A  64                 	db	100	;'d'
   375  00067B  20                 	db	32
   376  00067C  20                 	db	32
   377  00067D  20                 	db	32
   378  00067E  20                 	db	32
   379  00067F  20                 	db	32
   380  000680  20                 	db	32
   381  000681  20                 	db	32
   382  000682  20                 	db	32
   383  000683  20                 	db	32
   384  000684  20                 	db	32
   385  000685  20                 	db	32
   386  000686  20                 	db	32
   387  000687  20                 	db	32
   388  000688  00                 	db	0
   389  000689                     STR_1:
   390  000689  20                 	db	32
   391  00068A  20                 	db	32
   392  00068B  20                 	db	32
   393  00068C  45                 	db	69	;'E'
   394  00068D  72                 	db	114	;'r'
   395  00068E  67                 	db	103	;'g'
   396  00068F  69                 	db	105	;'i'
   397  000690  6E                 	db	110	;'n'
   398  000691  20                 	db	32
   399  000692  4F                 	db	79	;'O'
   400  000693  79                 	db	121	;'y'
   401  000694  75                 	db	117	;'u'
   402  000695  6E                 	db	110	;'n'
   403  000696  20                 	db	32
   404  000697  20                 	db	32
   405  000698  00                 	db	0
   406  000699                     STR_5:
   407  000699  4B                 	db	75	;'K'
   408  00069A  70                 	db	112	;'p'
   409  00069B  3A                 	db	58	;':'
   410  00069C  25                 	db	37
   411  00069D  35                 	db	53	;'5'
   412  00069E  2E                 	db	46
   413  00069F  31                 	db	49	;'1'
   414  0006A0  66                 	db	102	;'f'
   415  0006A1  20                 	db	32
   416  0006A2  20                 	db	32
   417  0006A3  20                 	db	32
   418  0006A4  20                 	db	32
   419  0006A5  20                 	db	32
   420  0006A6  00                 	db	0
   421  0006A7                     STR_7:
   422  0006A7  4B                 	db	75	;'K'
   423  0006A8  64                 	db	100	;'d'
   424  0006A9  3A                 	db	58	;':'
   425  0006AA  25                 	db	37
   426  0006AB  35                 	db	53	;'5'
   427  0006AC  2E                 	db	46
   428  0006AD  31                 	db	49	;'1'
   429  0006AE  66                 	db	102	;'f'
   430  0006AF  20                 	db	32
   431  0006B0  20                 	db	32
   432  0006B1  20                 	db	32
   433  0006B2  20                 	db	32
   434  0006B3  00                 	db	0
   435  0006B4                     STR_14:
   436  0006B4  49                 	db	73	;'I'
   437  0006B5  4E                 	db	78	;'N'
   438  0006B6  46                 	db	70	;'F'
   439  0006B7  00                 	db	0
   440  0006B8                     STR_18:
   441  0006B8  4E                 	db	78	;'N'
   442  0006B9  41                 	db	65	;'A'
   443  0006BA  4E                 	db	78	;'N'
   444  0006BB  00                 	db	0
   445  0006BC                     STR_15:
   446  0006BC  69                 	db	105	;'i'
   447  0006BD  6E                 	db	110	;'n'
   448  0006BE  66                 	db	102	;'f'
   449  0006BF  00                 	db	0
   450  0006C0                     STR_19:
   451  0006C0  6E                 	db	110	;'n'
   452  0006C1  61                 	db	97	;'a'
   453  0006C2  6E                 	db	110	;'n'
   454  0006C3  00                 	db	0
   455  0006C4                     STR_22:
   456  0006C4  6C                 	db	108	;'l'
   457  0006C5  66                 	db	102	;'f'
   458  0006C6  00                 	db	0
   459  0006C7  00                 	db	0	; dummy byte at the end
   460  0000                     
   461                           ; #config settings
   462                           
   463                           	psect	cinit
   464  005468                     __pcinit:
   465                           	callstack 0
   466  005468                     start_initialization:
   467                           	callstack 0
   468  005468                     __initialization:
   469                           	callstack 0
   470                           
   471                           ; Initialize objects allocated to BANK1 (64 bytes)
   472                           ; load TBLPTR registers with __pidataBANK1
   473  005468  0E74               	movlw	low __pidataBANK1
   474  00546A  6EF6               	movwf	tblptrl,c
   475  00546C  0E56               	movlw	high __pidataBANK1
   476  00546E  6EF7               	movwf	tblptrh,c
   477  005470  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   478  005472  6EF8               	movwf	tblptru,c
   479  005474  EE01  F0BB         	lfsr	0,__pdataBANK1
   480  005478  EE10 F040          	lfsr	1,64
   481  00547C                     copy_data0:
   482  00547C  0009               	tblrd		*+
   483  00547E  CFF5 FFEE          	movff	tablat,postinc0
   484  005482  50E5               	movf	postdec1,w,c
   485  005484  50E1               	movf	fsr1l,w,c
   486  005486  E1FA               	bnz	copy_data0
   487                           
   488                           ; Clear objects allocated to BANK2 (185 bytes)
   489  005488  EE02  F000         	lfsr	0,__pbssBANK2
   490  00548C  0EB9               	movlw	185
   491  00548E                     clear_0:
   492  00548E  6AEE               	clrf	postinc0,c
   493  005490  06E8               	decf	wreg,f,c
   494  005492  E1FD               	bnz	clear_0
   495                           
   496                           ; Clear objects allocated to BANK1 (187 bytes)
   497  005494  EE01  F000         	lfsr	0,__pbssBANK1
   498  005498  0EBB               	movlw	187
   499  00549A                     clear_1:
   500  00549A  6AEE               	clrf	postinc0,c
   501  00549C  06E8               	decf	wreg,f,c
   502  00549E  E1FD               	bnz	clear_1
   503                           
   504                           ; Clear objects allocated to BANK0 (13 bytes)
   505  0054A0  EE00  F0F3         	lfsr	0,__pbssBANK0
   506  0054A4  0E0D               	movlw	13
   507  0054A6                     clear_2:
   508  0054A6  6AEE               	clrf	postinc0,c
   509  0054A8  06E8               	decf	wreg,f,c
   510  0054AA  E1FD               	bnz	clear_2
   511  0054AC                     end_of_initialization:
   512                           	callstack 0
   513  0054AC                     __end_of__initialization:
   514                           	callstack 0
   515  0054AC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   516  0054AE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   517  0054B0  0E00               	movlw	low (__Lmediumconst shr (0+16))
   518  0054B2  6EF8               	movwf	tblptru,c
   519  0054B4  0100               	movlb	0
   520  0054B6  EF1E  F02D         	goto	_main	;jump to C main() function
   521                           
   522                           	psect	bssBANK0
   523  0000F3                     __pbssBANK0:
   524                           	callstack 0
   525  0000F3                     _menu_value:
   526                           	callstack 0
   527  0000F3                     	ds	3
   528  0000F6                     _prec:
   529                           	callstack 0
   530  0000F6                     	ds	2
   531  0000F8                     _flags:
   532                           	callstack 0
   533  0000F8                     	ds	2
   534  0000FA                     _timer_counter_flag:
   535                           	callstack 0
   536  0000FA                     	ds	1
   537  0000FB                     _menu_selected:
   538                           	callstack 0
   539  0000FB                     	ds	1
   540  0000FC                     _secretMenuCounter:
   541                           	callstack 0
   542  0000FC                     	ds	1
   543  0000FD                     _stopIsClick:
   544                           	callstack 0
   545  0000FD                     	ds	1
   546  0000FE                     _startIsClick:
   547                           	callstack 0
   548  0000FE                     	ds	1
   549  0000FF                     _pauseIsClick:
   550                           	callstack 0
   551  0000FF                     	ds	1
   552                           
   553                           	psect	bssBANK1
   554  000100                     __pbssBANK1:
   555                           	callstack 0
   556  000100                     _convert_data:
   557                           	callstack 0
   558  000100                     	ds	32
   559  000120                     _driver_limit:
   560                           	callstack 0
   561  000120                     	ds	20
   562  000134                     _controller:
   563                           	callstack 0
   564  000134                     	ds	19
   565  000147                     	ds	16
   566  000157                     	ds	16
   567  000167                     	ds	16
   568  000177                     	ds	16
   569  000187                     _adc_raw_data:
   570                           	callstack 0
   571  000187                     	ds	16
   572  000197                     _timer_value:
   573                           	callstack 0
   574  000197                     	ds	8
   575  00019F                     _menu_flags:
   576                           	callstack 0
   577  00019F                     	ds	6
   578  0001A5                     _button_bounce_controller:
   579                           	callstack 0
   580  0001A5                     	ds	6
   581  0001AB                     floorf@F524:
   582                           	callstack 0
   583  0001AB                     	ds	4
   584  0001AF                     ___fpclassifyf@F463:
   585                           	callstack 0
   586  0001AF                     	ds	4
   587  0001B3                     fabsf@F463:
   588                           	callstack 0
   589  0001B3                     	ds	4
   590  0001B7                     _nout:
   591                           	callstack 0
   592  0001B7                     	ds	2
   593  0001B9                     _width:
   594                           	callstack 0
   595  0001B9                     	ds	2
   596                           
   597                           	psect	dataBANK1
   598  0001BB                     __pdataBANK1:
   599                           	callstack 0
   600  0001BB                     	ds	4
   601  0001BF                     	ds	4
   602  0001C3                     	ds	4
   603  0001C7                     	ds	4
   604  0001CB                     	ds	4
   605  0001CF                     	ds	4
   606  0001D3                     _KD@fs_speed_controller$F1857:
   607                           	callstack 0
   608  0001D3                     	ds	4
   609  0001D7                     _KP@fs_speed_controller$F1856:
   610                           	callstack 0
   611  0001D7                     	ds	4
   612  0001DB                     	ds	4
   613  0001DF                     	ds	4
   614  0001E3                     	ds	4
   615  0001E7                     	ds	4
   616  0001EB                     	ds	4
   617  0001EF                     	ds	4
   618  0001F3                     	ds	4
   619  0001F7                     	ds	4
   620                           
   621                           	psect	bssBANK2
   622  000200                     __pbssBANK2:
   623                           	callstack 0
   624  000200                     _procces_data:
   625                           	callstack 0
   626  000200                     	ds	32
   627  000220                     _textCursor2:
   628                           	callstack 0
   629  000220                     	ds	25
   630  000239                     	ds	16
   631  000249                     	ds	16
   632  000259                     	ds	16
   633  000269                     _dbuf:
   634                           	callstack 0
   635  000269                     	ds	80
   636                           
   637                           	psect	cstackBANK0
   638  000060                     __pcstackBANK0:
   639                           	callstack 0
   640  000060                     floorf@m:
   641                           	callstack 0
   642  000060                     _calculatedAverageValue$3396:
   643                           	callstack 0
   644  000060                     stopMenu@textCursor2:
   645                           	callstack 0
   646  000060                     pauseMenu@textCursor2:
   647                           	callstack 0
   648                           
   649                           ; 16 bytes @ 0x0
   650  000060                     	ds	4
   651  000064                     floorf@e:
   652                           	callstack 0
   653  000064                     _calculatedAverageValue$3397:
   654                           	callstack 0
   655                           
   656                           ; 4 bytes @ 0x4
   657  000064                     	ds	2
   658  000066                     floorf@u:
   659                           	callstack 0
   660                           
   661                           ; 4 bytes @ 0x6
   662  000066                     	ds	2
   663  000068                     mainMenu@textCursor2:
   664                           	callstack 0
   665                           
   666                           ; 16 bytes @ 0x8
   667  000068                     	ds	2
   668  00006A                     ??_efgtoa:
   669                           
   670                           ; 1 bytes @ 0xA
   671  00006A                     	ds	5
   672  00006F                     efgtoa@ou:
   673                           	callstack 0
   674                           
   675                           ; 4 bytes @ 0xF
   676  00006F                     	ds	4
   677  000073                     _efgtoa$2998:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x13
   681  000073                     	ds	2
   682  000075                     _efgtoa$2999:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x15
   686  000075                     	ds	2
   687  000077                     _efgtoa$3003:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x17
   691  000077                     	ds	2
   692  000079                     _efgtoa$3007:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x19
   696  000079                     	ds	2
   697  00007B                     _efgtoa$3008:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x1B
   701  00007B                     	ds	2
   702  00007D                     _efgtoa$3009:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x1D
   706  00007D                     	ds	2
   707  00007F                     efgtoa@t:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x1F
   711  00007F                     	ds	2
   712  000081                     efgtoa@pp:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x21
   716  000081                     	ds	2
   717  000083                     efgtoa@m:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x23
   721  000083                     	ds	2
   722  000085                     efgtoa@ne:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x25
   726  000085                     	ds	2
   727  000087                     efgtoa@d:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x27
   731  000087                     	ds	2
   732  000089                     efgtoa@sign:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x29
   736  000089                     	ds	2
   737  00008B                     efgtoa@p:
   738                           	callstack 0
   739                           
   740                           ; 2 bytes @ 0x2B
   741  00008B                     	ds	2
   742  00008D                     efgtoa@nmode:
   743                           	callstack 0
   744                           
   745                           ; 1 bytes @ 0x2D
   746  00008D                     	ds	1
   747  00008E                     efgtoa@w:
   748                           	callstack 0
   749                           
   750                           ; 2 bytes @ 0x2E
   751  00008E                     	ds	2
   752  000090                     efgtoa@mode:
   753                           	callstack 0
   754                           
   755                           ; 1 bytes @ 0x30
   756  000090                     	ds	1
   757  000091                     efgtoa@h:
   758                           	callstack 0
   759                           
   760                           ; 4 bytes @ 0x31
   761  000091                     	ds	4
   762  000095                     efgtoa@l:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x35
   766  000095                     	ds	4
   767  000099                     efgtoa@i:
   768                           	callstack 0
   769                           
   770                           ; 2 bytes @ 0x39
   771  000099                     	ds	2
   772  00009B                     efgtoa@g:
   773                           	callstack 0
   774                           
   775                           ; 4 bytes @ 0x3B
   776  00009B                     	ds	4
   777  00009F                     efgtoa@e:
   778                           	callstack 0
   779                           
   780                           ; 2 bytes @ 0x3F
   781  00009F                     	ds	2
   782  0000A1                     efgtoa@n:
   783                           	callstack 0
   784                           
   785                           ; 2 bytes @ 0x41
   786  0000A1                     	ds	2
   787  0000A3                     efgtoa@u:
   788                           	callstack 0
   789                           
   790                           ; 4 bytes @ 0x43
   791  0000A3                     	ds	4
   792  0000A7                     ?_vfpfcnvrt:
   793                           	callstack 0
   794  0000A7                     vfpfcnvrt@fp:
   795                           	callstack 0
   796                           
   797                           ; 2 bytes @ 0x47
   798  0000A7                     	ds	2
   799  0000A9                     vfpfcnvrt@fmt:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x49
   803  0000A9                     	ds	2
   804  0000AB                     vfpfcnvrt@ap:
   805                           	callstack 0
   806                           
   807                           ; 2 bytes @ 0x4B
   808  0000AB                     	ds	2
   809  0000AD                     ??_vfpfcnvrt:
   810                           
   811                           ; 1 bytes @ 0x4D
   812  0000AD                     	ds	4
   813  0000B1                     vfpfcnvrt@ll:
   814                           	callstack 0
   815                           
   816                           ; 8 bytes @ 0x51
   817  0000B1                     	ds	8
   818  0000B9                     _vfpfcnvrt$3023:
   819                           	callstack 0
   820                           
   821                           ; 2 bytes @ 0x59
   822  0000B9                     	ds	2
   823  0000BB                     _vfpfcnvrt$3024:
   824                           	callstack 0
   825                           
   826                           ; 2 bytes @ 0x5B
   827  0000BB                     	ds	2
   828  0000BD                     _vfpfcnvrt$3029:
   829                           	callstack 0
   830                           
   831                           ; 2 bytes @ 0x5D
   832  0000BD                     	ds	2
   833  0000BF                     vfpfcnvrt@f:
   834                           	callstack 0
   835                           
   836                           ; 4 bytes @ 0x5F
   837  0000BF                     	ds	4
   838  0000C3                     vfpfcnvrt@ct:
   839                           	callstack 0
   840                           
   841                           ; 3 bytes @ 0x63
   842  0000C3                     	ds	3
   843  0000C6                     vfpfcnvrt@c:
   844                           	callstack 0
   845                           
   846                           ; 1 bytes @ 0x66
   847  0000C6                     	ds	1
   848  0000C7                     ?_vfprintf:
   849                           	callstack 0
   850  0000C7                     vfprintf@fp:
   851                           	callstack 0
   852                           
   853                           ; 2 bytes @ 0x67
   854  0000C7                     	ds	2
   855  0000C9                     vfprintf@fmt:
   856                           	callstack 0
   857                           
   858                           ; 2 bytes @ 0x69
   859  0000C9                     	ds	2
   860  0000CB                     vfprintf@ap:
   861                           	callstack 0
   862                           
   863                           ; 2 bytes @ 0x6B
   864  0000CB                     	ds	2
   865  0000CD                     vfprintf@cfmt:
   866                           	callstack 0
   867                           
   868                           ; 2 bytes @ 0x6D
   869  0000CD                     	ds	2
   870  0000CF                     ?_sprintf:
   871                           	callstack 0
   872  0000CF                     sprintf@s:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x6F
   876  0000CF                     	ds	2
   877  0000D1                     sprintf@fmt:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x71
   881  0000D1                     	ds	8
   882  0000D9                     sprintf@ap:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x79
   886  0000D9                     	ds	2
   887  0000DB                     sprintf@f:
   888                           	callstack 0
   889                           
   890                           ; 6 bytes @ 0x7B
   891  0000DB                     	ds	6
   892  0000E1                     secretMenu@textCursor2:
   893                           	callstack 0
   894  0000E1                     speedLimitSettingMenu@textCursor2:
   895                           	callstack 0
   896  0000E1                     stopTimeSettingMenu@textCursor2:
   897                           	callstack 0
   898  0000E1                     driverTimeSettingMenu@textCursor2:
   899                           	callstack 0
   900                           
   901                           ; 16 bytes @ 0x81
   902  0000E1                     	ds	16
   903  0000F1                     ??_stateMachine:
   904                           
   905                           ; 1 bytes @ 0x91
   906  0000F1                     	ds	2
   907                           
   908                           	psect	cstackCOMRAM
   909  000001                     __pcstackCOMRAM:
   910                           	callstack 0
   911  000001                     ?_strlen:
   912                           	callstack 0
   913  000001                     ?___fpclassifyf:
   914                           	callstack 0
   915  000001                     ?_isupper:
   916                           	callstack 0
   917  000001                     ?_isdigit:
   918                           	callstack 0
   919  000001                     ?_strncmp:
   920                           	callstack 0
   921  000001                     ?_isspace:
   922                           	callstack 0
   923  000001                     ?_readAdcValue:
   924                           	callstack 0
   925  000001                     ?___wmul:
   926                           	callstack 0
   927  000001                     ?___awdiv:
   928                           	callstack 0
   929  000001                     ?___awmod:
   930                           	callstack 0
   931  000001                     ?___lldiv:
   932                           	callstack 0
   933  000001                     ?___flneg:
   934                           	callstack 0
   935  000001                     ?___aodiv:
   936                           	callstack 0
   937  000001                     ?___aomod:
   938                           	callstack 0
   939  000001                     eepromRead@address:
   940                           	callstack 0
   941  000001                     eepromWrite@data:
   942                           	callstack 0
   943  000001                     lcdPort@a:
   944                           	callstack 0
   945  000001                     ___wmul@multiplier:
   946                           	callstack 0
   947  000001                     ___awdiv@dividend:
   948                           	callstack 0
   949  000001                     ___awmod@dividend:
   950                           	callstack 0
   951  000001                     isdigit@c:
   952                           	callstack 0
   953  000001                     isspace@c:
   954                           	callstack 0
   955  000001                     isupper@c:
   956                           	callstack 0
   957  000001                     fputc@c:
   958                           	callstack 0
   959  000001                     strcpy@dest:
   960                           	callstack 0
   961  000001                     strlen@s:
   962                           	callstack 0
   963  000001                     strncmp@_l:
   964                           	callstack 0
   965  000001                     ___lldiv@dividend:
   966                           	callstack 0
   967  000001                     ___fleq@ff1:
   968                           	callstack 0
   969  000001                     ___flneg@f1:
   970                           	callstack 0
   971  000001                     ___fpclassifyf@x:
   972                           	callstack 0
   973  000001                     ___aodiv@dividend:
   974                           	callstack 0
   975  000001                     ___aomod@dividend:
   976                           	callstack 0
   977                           
   978                           ; 8 bytes @ 0x0
   979  000001                     	ds	1
   980  000002                     ??_systemInit:
   981  000002                     ??_lcdCmd:
   982  000002                     eepromWrite@address:
   983                           	callstack 0
   984  000002                     lcdWriteChar@temp:
   985                           	callstack 0
   986                           
   987                           ; 1 bytes @ 0x1
   988  000002                     	ds	1
   989  000003                     ??_isupper:
   990  000003                     ??_isdigit:
   991  000003                     ??_isspace:
   992  000003                     ??_readAdcValue:
   993  000003                     lcdCmd@a:
   994                           	callstack 0
   995  000003                     lcdWriteChar@y:
   996                           	callstack 0
   997  000003                     ___wmul@multiplicand:
   998                           	callstack 0
   999  000003                     ___awdiv@divisor:
  1000                           	callstack 0
  1001  000003                     ___awmod@divisor:
  1002                           	callstack 0
  1003  000003                     fputc@fp:
  1004                           	callstack 0
  1005  000003                     strcpy@src:
  1006                           	callstack 0
  1007  000003                     strlen@a:
  1008                           	callstack 0
  1009  000003                     strncmp@_r:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0x2
  1013  000003                     	ds	1
  1014  000004                     ??_lcdInit:
  1015  000004                     lcdSetCursor@b:
  1016                           	callstack 0
  1017  000004                     lcdWriteChar@a:
  1018                           	callstack 0
  1019                           
  1020                           ; 1 bytes @ 0x3
  1021  000004                     	ds	1
  1022  000005                     ??_fputc:
  1023  000005                     ??___fpclassifyf:
  1024  000005                     ??_strcpy:
  1025  000005                     readAdcValue@adcChannel:
  1026                           	callstack 0
  1027  000005                     lcdSetCursor@a:
  1028                           	callstack 0
  1029  000005                     ___awdiv@counter:
  1030                           	callstack 0
  1031  000005                     ___awmod@counter:
  1032                           	callstack 0
  1033  000005                     lcdWriteString@a:
  1034                           	callstack 0
  1035  000005                     ___wmul@product:
  1036                           	callstack 0
  1037  000005                     strncmp@n:
  1038                           	callstack 0
  1039  000005                     ___lldiv@divisor:
  1040                           	callstack 0
  1041  000005                     ___fleq@ff2:
  1042                           	callstack 0
  1043                           
  1044                           ; 4 bytes @ 0x4
  1045  000005                     	ds	1
  1046  000006                     lcdSetCursor@z:
  1047                           	callstack 0
  1048  000006                     ___awdiv@sign:
  1049                           	callstack 0
  1050  000006                     ___awmod@sign:
  1051                           	callstack 0
  1052  000006                     readAdcValue@adcValue:
  1053                           	callstack 0
  1054                           
  1055                           ; 2 bytes @ 0x5
  1056  000006                     	ds	1
  1057  000007                     ??_strncmp:
  1058  000007                     ??_lcdWriteString:
  1059  000007                     ?_tolower:
  1060                           	callstack 0
  1061  000007                     lcdSetCursor@y:
  1062                           	callstack 0
  1063  000007                     _isspace$3096:
  1064                           	callstack 0
  1065  000007                     ___awdiv@quotient:
  1066                           	callstack 0
  1067  000007                     strcpy@s:
  1068                           	callstack 0
  1069  000007                     tolower@c:
  1070                           	callstack 0
  1071                           
  1072                           ; 2 bytes @ 0x6
  1073  000007                     	ds	1
  1074  000008                     ?_atoi:
  1075                           	callstack 0
  1076  000008                     lcdSetCursor@temp:
  1077                           	callstack 0
  1078  000008                     atoi@s:
  1079                           	callstack 0
  1080  000008                     strncmp@l:
  1081                           	callstack 0
  1082                           
  1083                           ; 2 bytes @ 0x7
  1084  000008                     	ds	1
  1085  000009                     ??_tolower:
  1086  000009                     ??___fleq:
  1087  000009                     lcdWriteString@i:
  1088                           	callstack 0
  1089  000009                     ___fpclassifyf@e:
  1090                           	callstack 0
  1091  000009                     strcpy@d:
  1092                           	callstack 0
  1093  000009                     ___lldiv@quotient:
  1094                           	callstack 0
  1095  000009                     ___aodiv@divisor:
  1096                           	callstack 0
  1097  000009                     ___aomod@divisor:
  1098                           	callstack 0
  1099                           
  1100                           ; 8 bytes @ 0x8
  1101  000009                     	ds	1
  1102  00000A                     ??_atoi:
  1103  00000A                     fputs@s:
  1104                           	callstack 0
  1105  00000A                     strncmp@r:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x9
  1109  00000A                     	ds	1
  1110  00000B                     ??_openLCD_Script:
  1111  00000B                     ___fpclassifyf@u:
  1112                           	callstack 0
  1113                           
  1114                           ; 4 bytes @ 0xA
  1115  00000B                     	ds	1
  1116  00000C                     fputs@fp:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0xB
  1120  00000C                     	ds	1
  1121  00000D                     ___lldiv@counter:
  1122                           	callstack 0
  1123  00000D                     _tolower$3160:
  1124                           	callstack 0
  1125                           
  1126                           ; 2 bytes @ 0xC
  1127  00000D                     	ds	1
  1128  00000E                     ?___xxtofl:
  1129                           	callstack 0
  1130  00000E                     fputs@c:
  1131                           	callstack 0
  1132  00000E                     atoi@neg:
  1133                           	callstack 0
  1134  00000E                     ___xxtofl@val:
  1135                           	callstack 0
  1136                           
  1137                           ; 4 bytes @ 0xD
  1138  00000E                     	ds	1
  1139  00000F                     fputs@i:
  1140                           	callstack 0
  1141                           
  1142                           ; 2 bytes @ 0xE
  1143  00000F                     	ds	1
  1144  000010                     _atoi$3065:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0xF
  1148  000010                     	ds	1
  1149  000011                     ?_pad:
  1150                           	callstack 0
  1151  000011                     ___aodiv@counter:
  1152                           	callstack 0
  1153  000011                     ___aomod@counter:
  1154                           	callstack 0
  1155  000011                     pad@fp:
  1156                           	callstack 0
  1157                           
  1158                           ; 2 bytes @ 0x10
  1159  000011                     	ds	1
  1160  000012                     ??___xxtofl:
  1161  000012                     ___aodiv@sign:
  1162                           	callstack 0
  1163  000012                     ___aomod@sign:
  1164                           	callstack 0
  1165  000012                     _atoi$3067:
  1166                           	callstack 0
  1167                           
  1168                           ; 2 bytes @ 0x11
  1169  000012                     	ds	1
  1170  000013                     ?_abs:
  1171                           	callstack 0
  1172  000013                     pad@buf:
  1173                           	callstack 0
  1174  000013                     abs@a:
  1175                           	callstack 0
  1176  000013                     ___aodiv@quotient:
  1177                           	callstack 0
  1178                           
  1179                           ; 8 bytes @ 0x12
  1180  000013                     	ds	1
  1181  000014                     _atoi$3066:
  1182                           	callstack 0
  1183                           
  1184                           ; 1 bytes @ 0x13
  1185  000014                     	ds	1
  1186  000015                     ??_abs:
  1187  000015                     pad@p:
  1188                           	callstack 0
  1189  000015                     atoi@n:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0x14
  1193  000015                     	ds	1
  1194  000016                     ___xxtofl@sign:
  1195                           	callstack 0
  1196                           
  1197                           ; 1 bytes @ 0x15
  1198  000016                     	ds	1
  1199  000017                     ??_pad:
  1200  000017                     ___xxtofl@exp:
  1201                           	callstack 0
  1202                           
  1203                           ; 1 bytes @ 0x16
  1204  000017                     	ds	1
  1205  000018                     pad@i:
  1206                           	callstack 0
  1207  000018                     ___xxtofl@arg:
  1208                           	callstack 0
  1209                           
  1210                           ; 4 bytes @ 0x17
  1211  000018                     	ds	2
  1212  00001A                     pad@w:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0x19
  1216  00001A                     	ds	2
  1217  00001C                     ?_dtoa:
  1218                           	callstack 0
  1219  00001C                     ?_fabsf:
  1220                           	callstack 0
  1221  00001C                     ?___flmul:
  1222                           	callstack 0
  1223  00001C                     dtoa@fp:
  1224                           	callstack 0
  1225  00001C                     ___flmul@b:
  1226                           	callstack 0
  1227  00001C                     fabsf@x:
  1228                           	callstack 0
  1229                           
  1230                           ; 4 bytes @ 0x1B
  1231  00001C                     	ds	2
  1232  00001E                     dtoa@d:
  1233                           	callstack 0
  1234                           
  1235                           ; 8 bytes @ 0x1D
  1236  00001E                     	ds	2
  1237  000020                     ___flmul@a:
  1238                           	callstack 0
  1239  000020                     fabsf@u:
  1240                           	callstack 0
  1241                           
  1242                           ; 4 bytes @ 0x1F
  1243  000020                     	ds	4
  1244  000024                     ??___flmul:
  1245                           
  1246                           ; 1 bytes @ 0x23
  1247  000024                     	ds	2
  1248  000026                     ??_dtoa:
  1249                           
  1250                           ; 1 bytes @ 0x25
  1251  000026                     	ds	2
  1252  000028                     ___flmul@sign:
  1253                           	callstack 0
  1254                           
  1255                           ; 1 bytes @ 0x27
  1256  000028                     	ds	1
  1257  000029                     ___flmul@grs:
  1258                           	callstack 0
  1259                           
  1260                           ; 4 bytes @ 0x28
  1261  000029                     	ds	4
  1262  00002D                     ___flmul@aexp:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x2C
  1266  00002D                     	ds	1
  1267  00002E                     ___flmul@bexp:
  1268                           	callstack 0
  1269  00002E                     _dtoa$2974:
  1270                           	callstack 0
  1271                           
  1272                           ; 2 bytes @ 0x2D
  1273  00002E                     	ds	1
  1274  00002F                     ___flmul@prod:
  1275                           	callstack 0
  1276                           
  1277                           ; 4 bytes @ 0x2E
  1278  00002F                     	ds	1
  1279  000030                     dtoa@p:
  1280                           	callstack 0
  1281                           
  1282                           ; 2 bytes @ 0x2F
  1283  000030                     	ds	2
  1284  000032                     dtoa@w:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x31
  1288  000032                     	ds	1
  1289  000033                     ___flmul@temp:
  1290                           	callstack 0
  1291                           
  1292                           ; 2 bytes @ 0x32
  1293  000033                     	ds	1
  1294  000034                     dtoa@s:
  1295                           	callstack 0
  1296                           
  1297                           ; 2 bytes @ 0x33
  1298  000034                     	ds	1
  1299  000035                     ?___fladd:
  1300                           	callstack 0
  1301  000035                     ?___fldiv:
  1302                           	callstack 0
  1303  000035                     ___flge@ff1:
  1304                           	callstack 0
  1305  000035                     ___fladd@b:
  1306                           	callstack 0
  1307  000035                     ___fldiv@b:
  1308                           	callstack 0
  1309                           
  1310                           ; 4 bytes @ 0x34
  1311  000035                     	ds	1
  1312  000036                     dtoa@n:
  1313                           	callstack 0
  1314                           
  1315                           ; 8 bytes @ 0x35
  1316  000036                     	ds	3
  1317  000039                     ___flge@ff2:
  1318                           	callstack 0
  1319  000039                     ___fladd@a:
  1320                           	callstack 0
  1321  000039                     ___fldiv@a:
  1322                           	callstack 0
  1323                           
  1324                           ; 4 bytes @ 0x38
  1325  000039                     	ds	4
  1326  00003D                     ??___fladd:
  1327  00003D                     ??___fldiv:
  1328  00003D                     ??___flge:
  1329                           
  1330                           ; 1 bytes @ 0x3C
  1331  00003D                     	ds	1
  1332  00003E                     dtoa@i:
  1333                           	callstack 0
  1334                           
  1335                           ; 2 bytes @ 0x3D
  1336  00003E                     	ds	3
  1337  000041                     ___fladd@signs:
  1338                           	callstack 0
  1339  000041                     ___fldiv@rem:
  1340                           	callstack 0
  1341                           
  1342                           ; 4 bytes @ 0x40
  1343  000041                     	ds	1
  1344  000042                     ___fladd@aexp:
  1345                           	callstack 0
  1346                           
  1347                           ; 1 bytes @ 0x41
  1348  000042                     	ds	1
  1349  000043                     ___fladd@bexp:
  1350                           	callstack 0
  1351                           
  1352                           ; 1 bytes @ 0x42
  1353  000043                     	ds	1
  1354  000044                     ___fladd@grs:
  1355                           	callstack 0
  1356                           
  1357                           ; 1 bytes @ 0x43
  1358  000044                     	ds	1
  1359  000045                     ?___flsub:
  1360                           	callstack 0
  1361  000045                     ___fldiv@sign:
  1362                           	callstack 0
  1363  000045                     ___flsub@b:
  1364                           	callstack 0
  1365                           
  1366                           ; 4 bytes @ 0x44
  1367  000045                     	ds	1
  1368  000046                     ___fldiv@new_exp:
  1369                           	callstack 0
  1370                           
  1371                           ; 2 bytes @ 0x45
  1372  000046                     	ds	2
  1373  000048                     ___fldiv@grs:
  1374                           	callstack 0
  1375                           
  1376                           ; 4 bytes @ 0x47
  1377  000048                     	ds	1
  1378  000049                     ___flsub@a:
  1379                           	callstack 0
  1380                           
  1381                           ; 4 bytes @ 0x48
  1382  000049                     	ds	3
  1383  00004C                     ___fldiv@bexp:
  1384                           	callstack 0
  1385                           
  1386                           ; 1 bytes @ 0x4B
  1387  00004C                     	ds	1
  1388  00004D                     ___fldiv@aexp:
  1389                           	callstack 0
  1390                           
  1391                           ; 1 bytes @ 0x4C
  1392  00004D                     	ds	1
  1393  00004E                     ?_floorf:
  1394                           	callstack 0
  1395  00004E                     ?___fltol:
  1396                           	callstack 0
  1397  00004E                     ___fltol@f1:
  1398                           	callstack 0
  1399  00004E                     floorf@x:
  1400                           	callstack 0
  1401                           
  1402                           ; 4 bytes @ 0x4D
  1403  00004E                     	ds	4
  1404  000052                     ??_floorf:
  1405  000052                     ??___fltol:
  1406                           
  1407                           ; 1 bytes @ 0x51
  1408  000052                     	ds	4
  1409  000056                     ___fltol@sign1:
  1410                           	callstack 0
  1411                           
  1412                           ; 1 bytes @ 0x55
  1413  000056                     	ds	1
  1414  000057                     ___fltol@exp1:
  1415                           	callstack 0
  1416                           
  1417                           ; 1 bytes @ 0x56
  1418  000057                     	ds	1
  1419  000058                     ??_scanAdcConversion:
  1420  000058                     ??_calculatedAverageValue:
  1421  000058                     ?_efgtoa:
  1422                           	callstack 0
  1423  000058                     PWM1_setDC@dutycycle:
  1424                           	callstack 0
  1425  000058                     PWM2_setDC@dutycycle:
  1426                           	callstack 0
  1427  000058                     efgtoa@fp:
  1428                           	callstack 0
  1429  000058                     speedControl@position:
  1430                           	callstack 0
  1431                           
  1432                           ; 4 bytes @ 0x57
  1433  000058                     	ds	2
  1434  00005A                     ??_PWM1_setDC:
  1435  00005A                     ??_PWM2_setDC:
  1436  00005A                     efgtoa@f:
  1437                           	callstack 0
  1438                           
  1439                           ; 4 bytes @ 0x59
  1440  00005A                     	ds	2
  1441  00005C                     ??_speedControl:
  1442  00005C                     PWM1_setDC@duty:
  1443                           	callstack 0
  1444  00005C                     PWM2_setDC@duty:
  1445                           	callstack 0
  1446                           
  1447                           ; 2 bytes @ 0x5B
  1448  00005C                     	ds	2
  1449  00005E                     efgtoa@c:
  1450                           	callstack 0
  1451                           
  1452                           ; 1 bytes @ 0x5D
  1453  00005E                     	ds	1
  1454  00005F                     
  1455                           ; 1 bytes @ 0x5E
  1456 ;;
  1457 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1458 ;;
  1459 ;; *************** function _main *****************
  1460 ;; Defined at:
  1461 ;;		line 109 in file "fs_main.c"
  1462 ;; Parameters:    Size  Location     Type
  1463 ;;		None
  1464 ;; Auto vars:     Size  Location     Type
  1465 ;;		None
  1466 ;; Return value:  Size  Location     Type
  1467 ;;                  1    wreg      void 
  1468 ;; Registers used:
  1469 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1470 ;; Tracked objects:
  1471 ;;		On entry : 0/0
  1472 ;;		On exit  : 0/0
  1473 ;;		Unchanged: 0/0
  1474 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1475 ;;      Params:         0       0       0       0       0       0       0
  1476 ;;      Locals:         0       0       0       0       0       0       0
  1477 ;;      Temps:          0       0       0       0       0       0       0
  1478 ;;      Totals:         0       0       0       0       0       0       0
  1479 ;;Total ram usage:        0 bytes
  1480 ;; Hardware stack levels required when called:   12
  1481 ;; This function calls:
  1482 ;;		_loopTaskInit
  1483 ;;		_loopTaskMenuControl
  1484 ;;		_loopTaskTimeMachine
  1485 ;; This function is called by:
  1486 ;;		Startup code after reset
  1487 ;; This function uses a non-reentrant model
  1488 ;;
  1489                           
  1490                           	psect	text0
  1491  005A3C                     __ptext0:
  1492                           	callstack 0
  1493  005A3C                     _main:
  1494                           	callstack 19
  1495  005A3C                     
  1496                           ;fs_main.c: 111:     loopTaskInit();
  1497  005A3C  EC7A  F02B         	call	_loopTaskInit	;wreg free
  1498  005A40                     l6470:
  1499                           
  1500                           ;fs_main.c: 114:     {;fs_main.c: 115:         loopTaskTimeMachine();
  1501  005A40  ECBC  F027         	call	_loopTaskTimeMachine	;wreg free
  1502  005A44                     
  1503                           ;fs_main.c: 116:         loopTaskMenuControl();
  1504  005A44  EC05  F029         	call	_loopTaskMenuControl	;wreg free
  1505  005A48  EF20  F02D         	goto	l6470
  1506  005A4C  EF57  F000         	goto	start
  1507  005A50                     __end_of_main:
  1508                           	callstack 0
  1509                           
  1510 ;; *************** function _loopTaskTimeMachine *****************
  1511 ;; Defined at:
  1512 ;;		line 54 in file "fs_main.c"
  1513 ;; Parameters:    Size  Location     Type
  1514 ;;		None
  1515 ;; Auto vars:     Size  Location     Type
  1516 ;;		None
  1517 ;; Return value:  Size  Location     Type
  1518 ;;                  1    wreg      void 
  1519 ;; Registers used:
  1520 ;;		wreg, status,2, status,0
  1521 ;; Tracked objects:
  1522 ;;		On entry : 0/0
  1523 ;;		On exit  : 0/0
  1524 ;;		Unchanged: 0/0
  1525 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1526 ;;      Params:         0       0       0       0       0       0       0
  1527 ;;      Locals:         0       0       0       0       0       0       0
  1528 ;;      Temps:          0       0       0       0       0       0       0
  1529 ;;      Totals:         0       0       0       0       0       0       0
  1530 ;;Total ram usage:        0 bytes
  1531 ;; Hardware stack levels used:    1
  1532 ;; Hardware stack levels required when called:    1
  1533 ;; This function calls:
  1534 ;;		Nothing
  1535 ;; This function is called by:
  1536 ;;		_main
  1537 ;; This function uses a non-reentrant model
  1538 ;;
  1539                           
  1540                           	psect	text1
  1541  004F78                     __ptext1:
  1542                           	callstack 0
  1543  004F78                     _loopTaskTimeMachine:
  1544                           	callstack 29
  1545  004F78                     
  1546                           ;fs_main.c: 56:     if (timer_counter_flag.one_second_flag == 1)
  1547  004F78  0100               	movlb	0	; () banked
  1548  004F7A  A1FA               	btfss	_timer_counter_flag& (0+255),0,b
  1549  004F7C  EFC2  F027         	goto	u7771
  1550  004F80  EFC4  F027         	goto	u7770
  1551  004F84                     u7771:
  1552  004F84  EF03  F028         	goto	l257
  1553  004F88                     u7770:
  1554  004F88                     
  1555                           ; BSR set to: 0
  1556                           ;fs_main.c: 57:     {;fs_main.c: 58:         timer_counter_flag.one_second_flag = 0;
  1557  004F88  91FA               	bcf	_timer_counter_flag& (0+255),0,b
  1558  004F8A                     
  1559                           ; BSR set to: 0
  1560                           ;fs_main.c: 60:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1561  004F8A  05FE               	decf	_startIsClick& (0+255),w,b
  1562  004F8C  A4D8               	btfss	status,2,c
  1563  004F8E  EFCB  F027         	goto	u7781
  1564  004F92  EFCD  F027         	goto	u7780
  1565  004F96                     u7781:
  1566  004F96  EF03  F028         	goto	l257
  1567  004F9A                     u7780:
  1568  004F9A                     
  1569                           ; BSR set to: 0
  1570  004F9A  51FF               	movf	_pauseIsClick& (0+255),w,b
  1571  004F9C  A4D8               	btfss	status,2,c
  1572  004F9E  EFD3  F027         	goto	u7791
  1573  004FA2  EFD5  F027         	goto	u7790
  1574  004FA6                     u7791:
  1575  004FA6  EF03  F028         	goto	l257
  1576  004FAA                     u7790:
  1577  004FAA                     
  1578                           ; BSR set to: 0
  1579  004FAA  51FD               	movf	_stopIsClick& (0+255),w,b
  1580  004FAC  A4D8               	btfss	status,2,c
  1581  004FAE  EFDB  F027         	goto	u7801
  1582  004FB2  EFDD  F027         	goto	u7800
  1583  004FB6                     u7801:
  1584  004FB6  EF03  F028         	goto	l257
  1585  004FBA                     u7800:
  1586  004FBA                     
  1587                           ; BSR set to: 0
  1588  004FBA  51FB               	movf	_menu_selected& (0+255),w,b
  1589  004FBC  A4D8               	btfss	status,2,c
  1590  004FBE  EFE3  F027         	goto	u7811
  1591  004FC2  EFE5  F027         	goto	u7810
  1592  004FC6                     u7811:
  1593  004FC6  EF03  F028         	goto	l257
  1594  004FCA                     u7810:
  1595  004FCA                     
  1596                           ; BSR set to: 0
  1597                           ;fs_main.c: 61:         {;fs_main.c: 62:             timer_value.second++;
  1598  004FCA  0101               	movlb	1	; () banked
  1599  004FCC  2B97               	incf	_timer_value& (0+255),f,b
  1600  004FCE                     
  1601                           ; BSR set to: 1
  1602                           ;fs_main.c: 63:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1603  004FCE  5197               	movf	_timer_value& (0+255),w,b
  1604  004FD0  083C               	sublw	60
  1605  004FD2  6F99               	movwf	(_timer_value+2)& (0+255),b
  1606  004FD4                     
  1607                           ; BSR set to: 1
  1608                           ;fs_main.c: 65:             if (timer_value.remainingSecond == 59 )
  1609  004FD4  0E3B               	movlw	59
  1610  004FD6  1999               	xorwf	(_timer_value+2)& (0+255),w,b
  1611  004FD8  A4D8               	btfss	status,2,c
  1612  004FDA  EFF1  F027         	goto	u7821
  1613  004FDE  EFF3  F027         	goto	u7820
  1614  004FE2                     u7821:
  1615  004FE2  EFF9  F027         	goto	l6422
  1616  004FE6                     u7820:
  1617  004FE6                     
  1618                           ; BSR set to: 1
  1619                           ;fs_main.c: 66:             {;fs_main.c: 67:                 timer_value.minute++;
  1620  004FE6  2B98               	incf	(_timer_value+1)& (0+255),f,b
  1621  004FE8                     
  1622                           ; BSR set to: 1
  1623                           ;fs_main.c: 68:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1624  004FE8  5198               	movf	(_timer_value+1)& (0+255),w,b
  1625  004FEA  0100               	movlb	0	; () banked
  1626  004FEC  5DF3               	subwf	_menu_value& (0+255),w,b
  1627  004FEE  0101               	movlb	1	; () banked
  1628  004FF0  6F9A               	movwf	(_timer_value+3)& (0+255),b
  1629  004FF2                     l6422:
  1630                           
  1631                           ; BSR set to: 1
  1632                           ;fs_main.c: 71:             if (timer_value.second > 59)
  1633  004FF2  0E3B               	movlw	59
  1634  004FF4  6597               	cpfsgt	_timer_value& (0+255),b
  1635  004FF6  EFFF  F027         	goto	u7831
  1636  004FFA  EF01  F028         	goto	u7830
  1637  004FFE                     u7831:
  1638  004FFE  EF03  F028         	goto	l257
  1639  005002                     u7830:
  1640  005002                     
  1641                           ; BSR set to: 1
  1642                           ;fs_main.c: 72:             {;fs_main.c: 73:                 timer_value.second = 0;
  1643  005002  0E00               	movlw	0
  1644  005004  6F97               	movwf	_timer_value& (0+255),b
  1645  005006                     l257:
  1646  005006  0012               	return		;funcret
  1647  005008                     __end_of_loopTaskTimeMachine:
  1648                           	callstack 0
  1649                           
  1650 ;; *************** function _loopTaskMenuControl *****************
  1651 ;; Defined at:
  1652 ;;		line 159 in file "fs_menu_controller.c"
  1653 ;; Parameters:    Size  Location     Type
  1654 ;;		None
  1655 ;; Auto vars:     Size  Location     Type
  1656 ;;		None
  1657 ;; Return value:  Size  Location     Type
  1658 ;;                  1    wreg      void 
  1659 ;; Registers used:
  1660 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1661 ;; Tracked objects:
  1662 ;;		On entry : 0/0
  1663 ;;		On exit  : 0/0
  1664 ;;		Unchanged: 0/0
  1665 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1666 ;;      Params:         0       0       0       0       0       0       0
  1667 ;;      Locals:         0       0       0       0       0       0       0
  1668 ;;      Temps:          0       0       0       0       0       0       0
  1669 ;;      Totals:         0       0       0       0       0       0       0
  1670 ;;Total ram usage:        0 bytes
  1671 ;; Hardware stack levels used:    1
  1672 ;; Hardware stack levels required when called:   11
  1673 ;; This function calls:
  1674 ;;		_buttonControlFlags
  1675 ;;		_stateMachine
  1676 ;; This function is called by:
  1677 ;;		_main
  1678 ;; This function uses a non-reentrant model
  1679 ;;
  1680                           
  1681                           	psect	text2
  1682  00520A                     __ptext2:
  1683                           	callstack 0
  1684  00520A                     _loopTaskMenuControl:
  1685                           	callstack 19
  1686  00520A                     
  1687                           ;fs_menu_controller.c: 161:     buttonControlFlags();
  1688  00520A  ECE1  F01A         	call	_buttonControlFlags	;wreg free
  1689  00520E                     
  1690                           ;fs_menu_controller.c: 162:     stateMachine();
  1691  00520E  EC19  F026         	call	_stateMachine	;wreg free
  1692  005212                     
  1693                           ;fs_menu_controller.c: 164:     if (menu_flags.menu_start_flag == 1)
  1694  005212  0101               	movlb	1	; () banked
  1695  005214  05A0               	decf	(_menu_flags+1)& (0+255),w,b
  1696  005216  A4D8               	btfss	status,2,c
  1697  005218  EF10  F029         	goto	u7841
  1698  00521C  EF12  F029         	goto	u7840
  1699  005220                     u7841:
  1700  005220  EF1B  F029         	goto	l6456
  1701  005224                     u7840:
  1702  005224                     
  1703                           ; BSR set to: 1
  1704                           ;fs_menu_controller.c: 165:     {;fs_menu_controller.c: 166:         menu_flags.menu_sta
      +                          rt_flag = 0;
  1705  005224  0E00               	movlw	0
  1706  005226  6FA0               	movwf	(_menu_flags+1)& (0+255),b
  1707                           
  1708                           ;fs_menu_controller.c: 167:         startIsClick = 1;
  1709  005228  0E01               	movlw	1
  1710  00522A  0100               	movlb	0	; () banked
  1711  00522C  6FFE               	movwf	_startIsClick& (0+255),b
  1712                           
  1713                           ;fs_menu_controller.c: 168:         pauseIsClick = 0;
  1714  00522E  0E00               	movlw	0
  1715  005230  6FFF               	movwf	_pauseIsClick& (0+255),b
  1716                           
  1717                           ;fs_menu_controller.c: 169:         stopIsClick = 0;
  1718  005232  0E00               	movlw	0
  1719  005234  6FFD               	movwf	_stopIsClick& (0+255),b
  1720  005236                     l6456:
  1721                           
  1722                           ;fs_menu_controller.c: 172:     if (menu_flags.menu_pause_flag == 1)
  1723  005236  0101               	movlb	1	; () banked
  1724  005238  05A2               	decf	(_menu_flags+3)& (0+255),w,b
  1725  00523A  A4D8               	btfss	status,2,c
  1726  00523C  EF22  F029         	goto	u7851
  1727  005240  EF24  F029         	goto	u7850
  1728  005244                     u7851:
  1729  005244  EF2D  F029         	goto	l6460
  1730  005248                     u7850:
  1731  005248                     
  1732                           ; BSR set to: 1
  1733                           ;fs_menu_controller.c: 173:     {;fs_menu_controller.c: 174:         menu_flags.menu_pau
      +                          se_flag = 0;
  1734  005248  0E00               	movlw	0
  1735  00524A  6FA2               	movwf	(_menu_flags+3)& (0+255),b
  1736                           
  1737                           ;fs_menu_controller.c: 175:         pauseIsClick = 1;
  1738  00524C  0E01               	movlw	1
  1739  00524E  0100               	movlb	0	; () banked
  1740  005250  6FFF               	movwf	_pauseIsClick& (0+255),b
  1741                           
  1742                           ;fs_menu_controller.c: 176:         startIsClick = 0;
  1743  005252  0E00               	movlw	0
  1744  005254  6FFE               	movwf	_startIsClick& (0+255),b
  1745                           
  1746                           ;fs_menu_controller.c: 177:         stopIsClick = 0;
  1747  005256  0E00               	movlw	0
  1748  005258  6FFD               	movwf	_stopIsClick& (0+255),b
  1749  00525A                     l6460:
  1750                           
  1751                           ;fs_menu_controller.c: 180:     if (menu_flags.menu_stop_flag == 1)
  1752  00525A  0101               	movlb	1	; () banked
  1753  00525C  05A1               	decf	(_menu_flags+2)& (0+255),w,b
  1754  00525E  A4D8               	btfss	status,2,c
  1755  005260  EF34  F029         	goto	u7861
  1756  005264  EF36  F029         	goto	u7860
  1757  005268                     u7861:
  1758  005268  EF3F  F029         	goto	l438
  1759  00526C                     u7860:
  1760  00526C                     
  1761                           ; BSR set to: 1
  1762                           ;fs_menu_controller.c: 181:     {;fs_menu_controller.c: 182:         menu_flags.menu_sto
      +                          p_flag = 0;
  1763  00526C  0E00               	movlw	0
  1764  00526E  6FA1               	movwf	(_menu_flags+2)& (0+255),b
  1765                           
  1766                           ;fs_menu_controller.c: 183:         pauseIsClick = 0;
  1767  005270  0E00               	movlw	0
  1768  005272  0100               	movlb	0	; () banked
  1769  005274  6FFF               	movwf	_pauseIsClick& (0+255),b
  1770                           
  1771                           ;fs_menu_controller.c: 184:         startIsClick = 0;
  1772  005276  0E00               	movlw	0
  1773  005278  6FFE               	movwf	_startIsClick& (0+255),b
  1774                           
  1775                           ;fs_menu_controller.c: 185:         stopIsClick = 1;
  1776  00527A  0E01               	movlw	1
  1777  00527C  6FFD               	movwf	_stopIsClick& (0+255),b
  1778  00527E                     l438:
  1779  00527E  0012               	return		;funcret
  1780  005280                     __end_of_loopTaskMenuControl:
  1781                           	callstack 0
  1782                           
  1783 ;; *************** function _stateMachine *****************
  1784 ;; Defined at:
  1785 ;;		line 196 in file "fs_menu_controller.c"
  1786 ;; Parameters:    Size  Location     Type
  1787 ;;		None
  1788 ;; Auto vars:     Size  Location     Type
  1789 ;;		None
  1790 ;; Return value:  Size  Location     Type
  1791 ;;                  1    wreg      void 
  1792 ;; Registers used:
  1793 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1794 ;; Tracked objects:
  1795 ;;		On entry : 0/0
  1796 ;;		On exit  : 0/0
  1797 ;;		Unchanged: 0/0
  1798 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1799 ;;      Params:         0       0       0       0       0       0       0
  1800 ;;      Locals:         0       0       0       0       0       0       0
  1801 ;;      Temps:          0       2       0       0       0       0       0
  1802 ;;      Totals:         0       2       0       0       0       0       0
  1803 ;;Total ram usage:        2 bytes
  1804 ;; Hardware stack levels used:    1
  1805 ;; Hardware stack levels required when called:   10
  1806 ;; This function calls:
  1807 ;;		_driverTimeSettingMenu
  1808 ;;		_exitLine
  1809 ;;		_mainMenu
  1810 ;;		_pauseMenu
  1811 ;;		_secretMenu
  1812 ;;		_speedLimitSettingMenu
  1813 ;;		_startMenu
  1814 ;;		_stopMenu
  1815 ;;		_stopTimeSettingMenu
  1816 ;; This function is called by:
  1817 ;;		_loopTaskMenuControl
  1818 ;; This function uses a non-reentrant model
  1819 ;;
  1820                           
  1821                           	psect	text3
  1822  004C32                     __ptext3:
  1823                           	callstack 0
  1824  004C32                     _stateMachine:
  1825                           	callstack 19
  1826  004C32                     
  1827                           ;fs_menu_controller.c: 198:     switch (menu_selected)
  1828  004C32  EF3F  F026         	goto	l6394
  1829  004C36                     l6374:
  1830                           
  1831                           ; BSR set to: 0
  1832                           ;fs_menu_controller.c: 201:             mainMenu();
  1833  004C36  EC74  F01D         	call	_mainMenu	;wreg free
  1834                           
  1835                           ;fs_menu_controller.c: 202:         break;
  1836  004C3A  EF71  F026         	goto	l452
  1837  004C3E                     l6376:
  1838                           
  1839                           ; BSR set to: 0
  1840                           ;fs_menu_controller.c: 205:             driverTimeSettingMenu();
  1841  004C3E  EC7E  F020         	call	_driverTimeSettingMenu	;wreg free
  1842                           
  1843                           ;fs_menu_controller.c: 206:         break;
  1844  004C42  EF71  F026         	goto	l452
  1845  004C46                     l6378:
  1846                           
  1847                           ; BSR set to: 0
  1848                           ;fs_menu_controller.c: 209:             stopTimeSettingMenu();
  1849  004C46  EC14  F021         	call	_stopTimeSettingMenu	;wreg free
  1850                           
  1851                           ;fs_menu_controller.c: 210:         break;
  1852  004C4A  EF71  F026         	goto	l452
  1853  004C4E                     l6380:
  1854                           
  1855                           ; BSR set to: 0
  1856                           ;fs_menu_controller.c: 213:             speedLimitSettingMenu();
  1857  004C4E  EC9A  F021         	call	_speedLimitSettingMenu	;wreg free
  1858                           
  1859                           ;fs_menu_controller.c: 214:         break;
  1860  004C52  EF71  F026         	goto	l452
  1861  004C56                     l6382:
  1862                           
  1863                           ; BSR set to: 0
  1864                           ;fs_menu_controller.c: 217:             stopMenu();
  1865  004C56  EC04  F028         	call	_stopMenu	;wreg free
  1866                           
  1867                           ;fs_menu_controller.c: 218:         break;
  1868  004C5A  EF71  F026         	goto	l452
  1869  004C5E                     l6384:
  1870                           
  1871                           ; BSR set to: 0
  1872                           ;fs_menu_controller.c: 221:             startMenu();
  1873  004C5E  EC06  F02D         	call	_startMenu	;wreg free
  1874                           
  1875                           ;fs_menu_controller.c: 222:         break;
  1876  004C62  EF71  F026         	goto	l452
  1877  004C66                     l6386:
  1878                           
  1879                           ; BSR set to: 0
  1880                           ;fs_menu_controller.c: 225:             pauseMenu();
  1881  004C66  ECA2  F023         	call	_pauseMenu	;wreg free
  1882                           
  1883                           ;fs_menu_controller.c: 226:         break;
  1884  004C6A  EF71  F026         	goto	l452
  1885  004C6E                     l6388:
  1886                           
  1887                           ; BSR set to: 0
  1888                           ;fs_menu_controller.c: 229:             exitLine();
  1889  004C6E  EC38  F02D         	call	_exitLine	;wreg free
  1890                           
  1891                           ;fs_menu_controller.c: 230:         break;
  1892  004C72  EF71  F026         	goto	l452
  1893  004C76                     l6390:
  1894                           
  1895                           ; BSR set to: 0
  1896                           ;fs_menu_controller.c: 233:             secretMenu();
  1897  004C76  EC6A  F018         	call	_secretMenu	;wreg free
  1898                           
  1899                           ;fs_menu_controller.c: 234:         break;
  1900  004C7A  EF71  F026         	goto	l452
  1901  004C7E                     l6394:
  1902  004C7E  0100               	movlb	0	; () banked
  1903  004C80  51FB               	movf	_menu_selected& (0+255),w,b
  1904  004C82  6FF1               	movwf	??_stateMachine& (0+255),b
  1905  004C84  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  1906                           
  1907                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1908                           ; Switch size 1, requested type "simple"
  1909                           ; Number of cases is 1, Range of values is 0 to 0
  1910                           ; switch strategies available:
  1911                           ; Name         Instructions Cycles
  1912                           ; simple_byte            4     3 (average)
  1913                           ;	Chosen strategy is simple_byte
  1914  004C86  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  1915  004C88  0A00               	xorlw	0	; case 0
  1916  004C8A  B4D8               	btfsc	status,2,c
  1917  004C8C  EF4A  F026         	goto	l6576
  1918  004C90  EF71  F026         	goto	l452
  1919  004C94                     l6576:
  1920                           
  1921                           ; BSR set to: 0
  1922                           ; Switch size 1, requested type "simple"
  1923                           ; Number of cases is 9, Range of values is 0 to 8
  1924                           ; switch strategies available:
  1925                           ; Name         Instructions Cycles
  1926                           ; simple_byte           28    15 (average)
  1927                           ;	Chosen strategy is simple_byte
  1928  004C94  51F1               	movf	??_stateMachine& (0+255),w,b
  1929  004C96  0A00               	xorlw	0	; case 0
  1930  004C98  B4D8               	btfsc	status,2,c
  1931  004C9A  EF1B  F026         	goto	l6374
  1932  004C9E  0A01               	xorlw	1	; case 1
  1933  004CA0  B4D8               	btfsc	status,2,c
  1934  004CA2  EF1F  F026         	goto	l6376
  1935  004CA6  0A03               	xorlw	3	; case 2
  1936  004CA8  B4D8               	btfsc	status,2,c
  1937  004CAA  EF23  F026         	goto	l6378
  1938  004CAE  0A01               	xorlw	1	; case 3
  1939  004CB0  B4D8               	btfsc	status,2,c
  1940  004CB2  EF27  F026         	goto	l6380
  1941  004CB6  0A07               	xorlw	7	; case 4
  1942  004CB8  B4D8               	btfsc	status,2,c
  1943  004CBA  EF2B  F026         	goto	l6382
  1944  004CBE  0A01               	xorlw	1	; case 5
  1945  004CC0  B4D8               	btfsc	status,2,c
  1946  004CC2  EF2F  F026         	goto	l6384
  1947  004CC6  0A03               	xorlw	3	; case 6
  1948  004CC8  B4D8               	btfsc	status,2,c
  1949  004CCA  EF33  F026         	goto	l6386
  1950  004CCE  0A01               	xorlw	1	; case 7
  1951  004CD0  B4D8               	btfsc	status,2,c
  1952  004CD2  EF37  F026         	goto	l6388
  1953  004CD6  0A0F               	xorlw	15	; case 8
  1954  004CD8  B4D8               	btfsc	status,2,c
  1955  004CDA  EF3B  F026         	goto	l6390
  1956  004CDE  EF71  F026         	goto	l452
  1957  004CE2                     l452:
  1958  004CE2  0012               	return		;funcret
  1959  004CE4                     __end_of_stateMachine:
  1960                           	callstack 0
  1961                           
  1962 ;; *************** function _stopTimeSettingMenu *****************
  1963 ;; Defined at:
  1964 ;;		line 553 in file "fs_menu_controller.c"
  1965 ;; Parameters:    Size  Location     Type
  1966 ;;		None
  1967 ;; Auto vars:     Size  Location     Type
  1968 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  1969 ;; Return value:  Size  Location     Type
  1970 ;;                  1    wreg      void 
  1971 ;; Registers used:
  1972 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1973 ;; Tracked objects:
  1974 ;;		On entry : 0/0
  1975 ;;		On exit  : 0/0
  1976 ;;		Unchanged: 0/0
  1977 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1978 ;;      Params:         0       0       0       0       0       0       0
  1979 ;;      Locals:         0      16       0       0       0       0       0
  1980 ;;      Temps:          0       0       0       0       0       0       0
  1981 ;;      Totals:         0      16       0       0       0       0       0
  1982 ;;Total ram usage:       16 bytes
  1983 ;; Hardware stack levels used:    1
  1984 ;; Hardware stack levels required when called:    9
  1985 ;; This function calls:
  1986 ;;		_eepromWrite
  1987 ;;		_lcdSetCursor
  1988 ;;		_lcdWriteString
  1989 ;;		_sprintf
  1990 ;;		_stopMotor
  1991 ;; This function is called by:
  1992 ;;		_stateMachine
  1993 ;; This function uses a non-reentrant model
  1994 ;;
  1995                           
  1996                           	psect	text4
  1997  004228                     __ptext4:
  1998                           	callstack 0
  1999  004228                     _stopTimeSettingMenu:
  2000                           	callstack 19
  2001  004228                     
  2002                           ;fs_menu_controller.c: 555:     char textCursor2[16] = {0};
  2003  004228  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2004  00422C  0E0F               	movlw	15
  2005  00422E                     u7131:
  2006  00422E  6ADE               	clrf	postinc2,c
  2007  004230  06E8               	decf	wreg,f,c
  2008  004232  E2FD               	bc	u7131
  2009  004234                     
  2010                           ;fs_menu_controller.c: 557:     stopMotor();
  2011  004234  ECB8  F02B         	call	_stopMotor	;wreg free
  2012  004238                     
  2013                           ;fs_menu_controller.c: 559:     if (menu_flags.menu_input_flag == 1)
  2014  004238  0101               	movlb	1	; () banked
  2015  00423A  059F               	decf	_menu_flags& (0+255),w,b
  2016  00423C  A4D8               	btfss	status,2,c
  2017  00423E  EF23  F021         	goto	u7141
  2018  004242  EF25  F021         	goto	u7140
  2019  004246                     u7141:
  2020  004246  EF2A  F021         	goto	l6048
  2021  00424A                     u7140:
  2022  00424A                     
  2023                           ; BSR set to: 1
  2024                           ;fs_menu_controller.c: 560:     {;fs_menu_controller.c: 561:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2025  00424A  0E00               	movlw	0
  2026  00424C  6F9F               	movwf	_menu_flags& (0+255),b
  2027                           
  2028                           ;fs_menu_controller.c: 562:         menu_selected = SPEED_LIMIT_SETTING;
  2029  00424E  0E03               	movlw	3
  2030  004250  0100               	movlb	0	; () banked
  2031  004252  6FFB               	movwf	_menu_selected& (0+255),b
  2032  004254                     l6048:
  2033                           
  2034                           ;fs_menu_controller.c: 565:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2035  004254  0101               	movlb	1	; () banked
  2036  004256  05A3               	decf	(_menu_flags+4)& (0+255),w,b
  2037  004258  A4D8               	btfss	status,2,c
  2038  00425A  EF31  F021         	goto	u7151
  2039  00425E  EF33  F021         	goto	u7150
  2040  004262                     u7151:
  2041  004262  EF47  F021         	goto	l6058
  2042  004266                     u7150:
  2043  004266                     
  2044                           ; BSR set to: 1
  2045  004266  0EFA               	movlw	250
  2046  004268  0100               	movlb	0	; () banked
  2047  00426A  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2048  00426C  EF3A  F021         	goto	u7161
  2049  004270  EF3C  F021         	goto	u7160
  2050  004274                     u7161:
  2051  004274  EF47  F021         	goto	l6058
  2052  004278                     u7160:
  2053  004278                     
  2054                           ; BSR set to: 0
  2055                           ;fs_menu_controller.c: 566:     {;fs_menu_controller.c: 567:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2056  004278  0E00               	movlw	0
  2057  00427A  0101               	movlb	1	; () banked
  2058  00427C  6FA3               	movwf	(_menu_flags+4)& (0+255),b
  2059  00427E                     
  2060                           ; BSR set to: 1
  2061                           ;fs_menu_controller.c: 568:         menu_value.stop_time += 10;
  2062  00427E  0E0A               	movlw	10
  2063  004280  0100               	movlb	0	; () banked
  2064  004282  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2065  004284                     
  2066                           ; BSR set to: 0
  2067                           ;fs_menu_controller.c: 569:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2068  004284  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2069  004288  0E01               	movlw	1
  2070  00428A  EC96  F02C         	call	_eepromWrite
  2071  00428E                     l6058:
  2072                           
  2073                           ;fs_menu_controller.c: 572:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2074  00428E  0101               	movlb	1	; () banked
  2075  004290  05A4               	decf	(_menu_flags+5)& (0+255),w,b
  2076  004292  A4D8               	btfss	status,2,c
  2077  004294  EF4E  F021         	goto	u7171
  2078  004298  EF50  F021         	goto	u7170
  2079  00429C                     u7171:
  2080  00429C  EF64  F021         	goto	l512
  2081  0042A0                     u7170:
  2082  0042A0                     
  2083                           ; BSR set to: 1
  2084  0042A0  0E0A               	movlw	10
  2085  0042A2  0100               	movlb	0	; () banked
  2086  0042A4  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2087  0042A6  EF57  F021         	goto	u7181
  2088  0042AA  EF59  F021         	goto	u7180
  2089  0042AE                     u7181:
  2090  0042AE  EF64  F021         	goto	l512
  2091  0042B2                     u7180:
  2092  0042B2                     
  2093                           ; BSR set to: 0
  2094                           ;fs_menu_controller.c: 573:     {;fs_menu_controller.c: 574:          menu_flags.menu_de
      +                          crease_flag = 0;
  2095  0042B2  0E00               	movlw	0
  2096  0042B4  0101               	movlb	1	; () banked
  2097  0042B6  6FA4               	movwf	(_menu_flags+5)& (0+255),b
  2098  0042B8                     
  2099                           ; BSR set to: 1
  2100                           ;fs_menu_controller.c: 575:          menu_value.stop_time -= 10;
  2101  0042B8  0E0A               	movlw	10
  2102  0042BA  0100               	movlb	0	; () banked
  2103  0042BC  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2104  0042BE                     
  2105                           ; BSR set to: 0
  2106                           ;fs_menu_controller.c: 576:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2107  0042BE  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2108  0042C2  0E01               	movlw	1
  2109  0042C4  EC96  F02C         	call	_eepromWrite
  2110  0042C8                     l512:
  2111                           
  2112                           ;fs_menu_controller.c: 578:     lcdSetCursor(1,1);
  2113  0042C8  0E01               	movlw	1
  2114  0042CA  6E04               	movwf	lcdSetCursor@b^0,c
  2115  0042CC  0E01               	movlw	1
  2116  0042CE  EC75  F029         	call	_lcdSetCursor
  2117  0042D2                     
  2118                           ;fs_menu_controller.c: 579:     lcdWriteString("DURMA ZAMANI  ms");
  2119  0042D2  0E57               	movlw	low STR_10
  2120  0042D4  6E05               	movwf	lcdWriteString@a^0,c
  2121  0042D6  0E06               	movlw	high STR_10
  2122  0042D8  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2123  0042DA  EC4C  F028         	call	_lcdWriteString	;wreg free
  2124  0042DE                     
  2125                           ;fs_menu_controller.c: 580:     lcdSetCursor(2,1);
  2126  0042DE  0E01               	movlw	1
  2127  0042E0  6E04               	movwf	lcdSetCursor@b^0,c
  2128  0042E2  0E02               	movlw	2
  2129  0042E4  EC75  F029         	call	_lcdSetCursor
  2130  0042E8                     
  2131                           ;fs_menu_controller.c: 581:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2132  0042E8  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2133  0042EA  0100               	movlb	0	; () banked
  2134  0042EC  6FCF               	movwf	sprintf@s& (0+255),b
  2135  0042EE  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2136  0042F0  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2137  0042F2  0E79               	movlw	low STR_11
  2138  0042F4  6FD1               	movwf	sprintf@fmt& (0+255),b
  2139  0042F6  0E06               	movlw	high STR_11
  2140  0042F8  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2141  0042FA  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2142  0042FE  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2143  004300  EC5D  F02A         	call	_sprintf	;wreg free
  2144  004304                     
  2145                           ;fs_menu_controller.c: 582:     lcdWriteString(textCursor2);
  2146  004304  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2147  004306  6E05               	movwf	lcdWriteString@a^0,c
  2148  004308  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2149  00430A  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2150  00430C  EC4C  F028         	call	_lcdWriteString	;wreg free
  2151  004310                     
  2152                           ;fs_menu_controller.c: 584:     if(timer_value.menu_login_delay == 100)
  2153  004310  0E64               	movlw	100
  2154  004312  0101               	movlb	1	; () banked
  2155  004314  199B               	xorwf	(_timer_value+4)& (0+255),w,b
  2156  004316  A4D8               	btfss	status,2,c
  2157  004318  EF90  F021         	goto	u7191
  2158  00431C  EF92  F021         	goto	u7190
  2159  004320                     u7191:
  2160  004320  EF99  F021         	goto	l514
  2161  004324                     u7190:
  2162  004324                     
  2163                           ; BSR set to: 1
  2164                           ;fs_menu_controller.c: 585:     {;fs_menu_controller.c: 586:         button_bounce_contr
      +                          oller.menu = 0;
  2165  004324  0E00               	movlw	0
  2166  004326  6FA5               	movwf	_button_bounce_controller& (0+255),b
  2167                           
  2168                           ;fs_menu_controller.c: 587:         timer_value.menu_login_delay = 0;
  2169  004328  0E00               	movlw	0
  2170  00432A  6F9B               	movwf	(_timer_value+4)& (0+255),b
  2171                           
  2172                           ;fs_menu_controller.c: 588:         menu_selected = PAUSE_MENU;
  2173  00432C  0E06               	movlw	6
  2174  00432E  0100               	movlb	0	; () banked
  2175  004330  6FFB               	movwf	_menu_selected& (0+255),b
  2176  004332                     l514:
  2177  004332  0012               	return		;funcret
  2178  004334                     __end_of_stopTimeSettingMenu:
  2179                           	callstack 0
  2180                           
  2181 ;; *************** function _stopMenu *****************
  2182 ;; Defined at:
  2183 ;;		line 318 in file "fs_menu_controller.c"
  2184 ;; Parameters:    Size  Location     Type
  2185 ;;		None
  2186 ;; Auto vars:     Size  Location     Type
  2187 ;;  textCursor2    16    0[BANK0 ] unsigned char [16]
  2188 ;; Return value:  Size  Location     Type
  2189 ;;                  1    wreg      void 
  2190 ;; Registers used:
  2191 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2192 ;; Tracked objects:
  2193 ;;		On entry : 0/0
  2194 ;;		On exit  : 0/0
  2195 ;;		Unchanged: 0/0
  2196 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2197 ;;      Params:         0       0       0       0       0       0       0
  2198 ;;      Locals:         0      16       0       0       0       0       0
  2199 ;;      Temps:          0       0       0       0       0       0       0
  2200 ;;      Totals:         0      16       0       0       0       0       0
  2201 ;;Total ram usage:       16 bytes
  2202 ;; Hardware stack levels used:    1
  2203 ;; Hardware stack levels required when called:    4
  2204 ;; This function calls:
  2205 ;;		_lcdSetCursor
  2206 ;;		_lcdWriteString
  2207 ;;		_stopMotor
  2208 ;; This function is called by:
  2209 ;;		_stateMachine
  2210 ;; This function uses a non-reentrant model
  2211 ;;
  2212                           
  2213                           	psect	text5
  2214  005008                     __ptext5:
  2215                           	callstack 0
  2216  005008                     _stopMenu:
  2217                           	callstack 24
  2218  005008                     
  2219                           ;fs_menu_controller.c: 320:     char textCursor2[16] = {0};
  2220  005008  EE20  F060         	lfsr	2,stopMenu@textCursor2
  2221  00500C  0E0F               	movlw	15
  2222  00500E                     u7271:
  2223  00500E  6ADE               	clrf	postinc2,c
  2224  005010  06E8               	decf	wreg,f,c
  2225  005012  E2FD               	bc	u7271
  2226  005014                     
  2227                           ;fs_menu_controller.c: 322:     stopMotor();
  2228  005014  ECB8  F02B         	call	_stopMotor	;wreg free
  2229  005018                     
  2230                           ;fs_menu_controller.c: 324:     startIsClick = 0;
  2231  005018  0E00               	movlw	0
  2232  00501A  0100               	movlb	0	; () banked
  2233  00501C  6FFE               	movwf	_startIsClick& (0+255),b
  2234  00501E                     
  2235                           ; BSR set to: 0
  2236                           ;fs_menu_controller.c: 325:     pauseIsClick = 0;
  2237  00501E  0E00               	movlw	0
  2238  005020  6FFF               	movwf	_pauseIsClick& (0+255),b
  2239  005022                     
  2240                           ; BSR set to: 0
  2241                           ;fs_menu_controller.c: 326:     stopIsClick = 1;
  2242  005022  0E01               	movlw	1
  2243  005024  6FFD               	movwf	_stopIsClick& (0+255),b
  2244  005026                     
  2245                           ; BSR set to: 0
  2246                           ;fs_menu_controller.c: 328:     lcdSetCursor(1,1);
  2247  005026  0E01               	movlw	1
  2248  005028  6E04               	movwf	lcdSetCursor@b^0,c
  2249  00502A  0E01               	movlw	1
  2250  00502C  EC75  F029         	call	_lcdSetCursor
  2251  005030                     
  2252                           ;fs_menu_controller.c: 329:     lcdWriteString("ZAMAN DOLDU     ");
  2253  005030  0E35               	movlw	low STR_3
  2254  005032  6E05               	movwf	lcdWriteString@a^0,c
  2255  005034  0E06               	movlw	high STR_3
  2256  005036  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2257  005038  EC4C  F028         	call	_lcdWriteString	;wreg free
  2258  00503C                     
  2259                           ;fs_menu_controller.c: 331:     timer_value.remainingSecond = 0;
  2260  00503C  0E00               	movlw	0
  2261  00503E  0101               	movlb	1	; () banked
  2262  005040  6F99               	movwf	(_timer_value+2)& (0+255),b
  2263  005042                     
  2264                           ; BSR set to: 1
  2265                           ;fs_menu_controller.c: 332:     timer_value.remainingMinute = 0;
  2266  005042  0E00               	movlw	0
  2267  005044  6F9A               	movwf	(_timer_value+3)& (0+255),b
  2268  005046                     
  2269                           ; BSR set to: 1
  2270                           ;fs_menu_controller.c: 338:     if (menu_flags.menu_start_flag == 1)
  2271  005046  05A0               	decf	(_menu_flags+1)& (0+255),w,b
  2272  005048  A4D8               	btfss	status,2,c
  2273  00504A  EF29  F028         	goto	u7281
  2274  00504E  EF2B  F028         	goto	u7280
  2275  005052                     u7281:
  2276  005052  EF3B  F028         	goto	l6144
  2277  005056                     u7280:
  2278  005056                     
  2279                           ; BSR set to: 1
  2280                           ;fs_menu_controller.c: 339:     {;fs_menu_controller.c: 340:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2281  005056  0E00               	movlw	0
  2282  005058  6FA0               	movwf	(_menu_flags+1)& (0+255),b
  2283                           
  2284                           ;fs_menu_controller.c: 341:         menu_selected = START_MENU;
  2285  00505A  0E05               	movlw	5
  2286  00505C  0100               	movlb	0	; () banked
  2287  00505E  6FFB               	movwf	_menu_selected& (0+255),b
  2288                           
  2289                           ;fs_menu_controller.c: 343:         startIsClick = 1;
  2290  005060  0E01               	movlw	1
  2291  005062  6FFE               	movwf	_startIsClick& (0+255),b
  2292                           
  2293                           ;fs_menu_controller.c: 344:         pauseIsClick = 0;
  2294  005064  0E00               	movlw	0
  2295  005066  6FFF               	movwf	_pauseIsClick& (0+255),b
  2296                           
  2297                           ;fs_menu_controller.c: 345:         stopIsClick = 0;
  2298  005068  0E00               	movlw	0
  2299  00506A  6FFD               	movwf	_stopIsClick& (0+255),b
  2300                           
  2301                           ;fs_menu_controller.c: 346:         timer_value.second = 0;
  2302  00506C  0E00               	movlw	0
  2303  00506E  0101               	movlb	1	; () banked
  2304  005070  6F97               	movwf	_timer_value& (0+255),b
  2305                           
  2306                           ;fs_menu_controller.c: 347:         timer_value.minute = 0;
  2307  005072  0E00               	movlw	0
  2308  005074  6F98               	movwf	(_timer_value+1)& (0+255),b
  2309  005076                     l6144:
  2310                           
  2311                           ; BSR set to: 1
  2312                           ;fs_menu_controller.c: 350:     if ( timer_value.menu_login_delay == 100)
  2313  005076  0E64               	movlw	100
  2314  005078  199B               	xorwf	(_timer_value+4)& (0+255),w,b
  2315  00507A  A4D8               	btfss	status,2,c
  2316  00507C  EF42  F028         	goto	u7291
  2317  005080  EF44  F028         	goto	u7290
  2318  005084                     u7291:
  2319  005084  EF4B  F028         	goto	l470
  2320  005088                     u7290:
  2321  005088                     
  2322                           ; BSR set to: 1
  2323                           ;fs_menu_controller.c: 351:     {;fs_menu_controller.c: 352:         button_bounce_contr
      +                          oller.menu = 0;
  2324  005088  0E00               	movlw	0
  2325  00508A  6FA5               	movwf	_button_bounce_controller& (0+255),b
  2326                           
  2327                           ;fs_menu_controller.c: 353:         timer_value.menu_login_delay = 0;
  2328  00508C  0E00               	movlw	0
  2329  00508E  6F9B               	movwf	(_timer_value+4)& (0+255),b
  2330                           
  2331                           ;fs_menu_controller.c: 354:         menu_selected = DRIVER_TIME_SETTING;
  2332  005090  0E01               	movlw	1
  2333  005092  0100               	movlb	0	; () banked
  2334  005094  6FFB               	movwf	_menu_selected& (0+255),b
  2335  005096                     l470:
  2336  005096  0012               	return		;funcret
  2337  005098                     __end_of_stopMenu:
  2338                           	callstack 0
  2339                           
  2340 ;; *************** function _startMenu *****************
  2341 ;; Defined at:
  2342 ;;		line 421 in file "fs_menu_controller.c"
  2343 ;; Parameters:    Size  Location     Type
  2344 ;;		None
  2345 ;; Auto vars:     Size  Location     Type
  2346 ;;		None
  2347 ;; Return value:  Size  Location     Type
  2348 ;;                  1    wreg      void 
  2349 ;; Registers used:
  2350 ;;		wreg, status,2
  2351 ;; Tracked objects:
  2352 ;;		On entry : 0/0
  2353 ;;		On exit  : 0/0
  2354 ;;		Unchanged: 0/0
  2355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2356 ;;      Params:         0       0       0       0       0       0       0
  2357 ;;      Locals:         0       0       0       0       0       0       0
  2358 ;;      Temps:          0       0       0       0       0       0       0
  2359 ;;      Totals:         0       0       0       0       0       0       0
  2360 ;;Total ram usage:        0 bytes
  2361 ;; Hardware stack levels used:    1
  2362 ;; Hardware stack levels required when called:    1
  2363 ;; This function calls:
  2364 ;;		Nothing
  2365 ;; This function is called by:
  2366 ;;		_stateMachine
  2367 ;; This function uses a non-reentrant model
  2368 ;;
  2369                           
  2370                           	psect	text6
  2371  005A0C                     __ptext6:
  2372                           	callstack 0
  2373  005A0C                     _startMenu:
  2374                           	callstack 27
  2375  005A0C                     
  2376                           ;fs_menu_controller.c: 423:     timer_value.remainingMinute = menu_value.driver_time;
  2377  005A0C  C0F3  F19A         	movff	_menu_value,_timer_value+3
  2378  005A10                     
  2379                           ;fs_menu_controller.c: 424:     timer_value.remainingSecond = 0;
  2380  005A10  0E00               	movlw	0
  2381  005A12  0101               	movlb	1	; () banked
  2382  005A14  6F99               	movwf	(_timer_value+2)& (0+255),b
  2383                           
  2384                           ;fs_menu_controller.c: 425:     startIsClick = 1;
  2385  005A16  0E01               	movlw	1
  2386  005A18  0100               	movlb	0	; () banked
  2387  005A1A  6FFE               	movwf	_startIsClick& (0+255),b
  2388                           
  2389                           ;fs_menu_controller.c: 426:     stopIsClick = 0;
  2390  005A1C  0E00               	movlw	0
  2391  005A1E  6FFD               	movwf	_stopIsClick& (0+255),b
  2392                           
  2393                           ;fs_menu_controller.c: 427:     menu_selected = MAIN_MENU;
  2394  005A20  0E00               	movlw	0
  2395  005A22  6FFB               	movwf	_menu_selected& (0+255),b
  2396  005A24                     
  2397                           ; BSR set to: 0
  2398  005A24  0012               	return		;funcret
  2399  005A26                     __end_of_startMenu:
  2400                           	callstack 0
  2401                           
  2402 ;; *************** function _speedLimitSettingMenu *****************
  2403 ;; Defined at:
  2404 ;;		line 509 in file "fs_menu_controller.c"
  2405 ;; Parameters:    Size  Location     Type
  2406 ;;		None
  2407 ;; Auto vars:     Size  Location     Type
  2408 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2409 ;; Return value:  Size  Location     Type
  2410 ;;                  1    wreg      void 
  2411 ;; Registers used:
  2412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2413 ;; Tracked objects:
  2414 ;;		On entry : 0/0
  2415 ;;		On exit  : 0/0
  2416 ;;		Unchanged: 0/0
  2417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2418 ;;      Params:         0       0       0       0       0       0       0
  2419 ;;      Locals:         0      16       0       0       0       0       0
  2420 ;;      Temps:          0       0       0       0       0       0       0
  2421 ;;      Totals:         0      16       0       0       0       0       0
  2422 ;;Total ram usage:       16 bytes
  2423 ;; Hardware stack levels used:    1
  2424 ;; Hardware stack levels required when called:    9
  2425 ;; This function calls:
  2426 ;;		_eepromWrite
  2427 ;;		_lcdSetCursor
  2428 ;;		_lcdWriteString
  2429 ;;		_sprintf
  2430 ;;		_stopMotor
  2431 ;; This function is called by:
  2432 ;;		_stateMachine
  2433 ;; This function uses a non-reentrant model
  2434 ;;
  2435                           
  2436                           	psect	text7
  2437  004334                     __ptext7:
  2438                           	callstack 0
  2439  004334                     _speedLimitSettingMenu:
  2440                           	callstack 19
  2441  004334                     
  2442                           ;fs_menu_controller.c: 511:     char textCursor2[16] = {0};
  2443  004334  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  2444  004338  0E0F               	movlw	15
  2445  00433A                     u7201:
  2446  00433A  6ADE               	clrf	postinc2,c
  2447  00433C  06E8               	decf	wreg,f,c
  2448  00433E  E2FD               	bc	u7201
  2449  004340                     
  2450                           ;fs_menu_controller.c: 512:     stopMotor();
  2451  004340  ECB8  F02B         	call	_stopMotor	;wreg free
  2452  004344                     
  2453                           ;fs_menu_controller.c: 514:     if (menu_flags.menu_input_flag == 1)
  2454  004344  0101               	movlb	1	; () banked
  2455  004346  059F               	decf	_menu_flags& (0+255),w,b
  2456  004348  A4D8               	btfss	status,2,c
  2457  00434A  EFA9  F021         	goto	u7211
  2458  00434E  EFAB  F021         	goto	u7210
  2459  004352                     u7211:
  2460  004352  EFB0  F021         	goto	l6088
  2461  004356                     u7210:
  2462  004356                     
  2463                           ; BSR set to: 1
  2464                           ;fs_menu_controller.c: 515:     {;fs_menu_controller.c: 516:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2465  004356  0E00               	movlw	0
  2466  004358  6F9F               	movwf	_menu_flags& (0+255),b
  2467                           
  2468                           ;fs_menu_controller.c: 517:         menu_selected = DRIVER_TIME_SETTING;
  2469  00435A  0E01               	movlw	1
  2470  00435C  0100               	movlb	0	; () banked
  2471  00435E  6FFB               	movwf	_menu_selected& (0+255),b
  2472  004360                     l6088:
  2473                           
  2474                           ;fs_menu_controller.c: 520:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  2475  004360  0101               	movlb	1	; () banked
  2476  004362  05A3               	decf	(_menu_flags+4)& (0+255),w,b
  2477  004364  A4D8               	btfss	status,2,c
  2478  004366  EFB7  F021         	goto	u7221
  2479  00436A  EFB9  F021         	goto	u7220
  2480  00436E                     u7221:
  2481  00436E  EFCC  F021         	goto	l6098
  2482  004372                     u7220:
  2483  004372                     
  2484                           ; BSR set to: 1
  2485  004372  0E05               	movlw	5
  2486  004374  0100               	movlb	0	; () banked
  2487  004376  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  2488  004378  EFC0  F021         	goto	u7231
  2489  00437C  EFC2  F021         	goto	u7230
  2490  004380                     u7231:
  2491  004380  EFCC  F021         	goto	l6098
  2492  004384                     u7230:
  2493  004384                     
  2494                           ; BSR set to: 0
  2495                           ;fs_menu_controller.c: 521:     {;fs_menu_controller.c: 522:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2496  004384  0E00               	movlw	0
  2497  004386  0101               	movlb	1	; () banked
  2498  004388  6FA3               	movwf	(_menu_flags+4)& (0+255),b
  2499  00438A                     
  2500                           ; BSR set to: 1
  2501                           ;fs_menu_controller.c: 523:         menu_value.speed_limit += 1;
  2502  00438A  0100               	movlb	0	; () banked
  2503  00438C  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  2504  00438E                     
  2505                           ; BSR set to: 0
  2506                           ;fs_menu_controller.c: 524:         eepromWrite(0x02,menu_value.speed_limit);
  2507  00438E  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2508  004392  0E02               	movlw	2
  2509  004394  EC96  F02C         	call	_eepromWrite
  2510  004398                     l6098:
  2511                           
  2512                           ;fs_menu_controller.c: 527:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  2513  004398  0101               	movlb	1	; () banked
  2514  00439A  05A4               	decf	(_menu_flags+5)& (0+255),w,b
  2515  00439C  A4D8               	btfss	status,2,c
  2516  00439E  EFD3  F021         	goto	u7241
  2517  0043A2  EFD5  F021         	goto	u7240
  2518  0043A6                     u7241:
  2519  0043A6  EFE8  F021         	goto	l6108
  2520  0043AA                     u7240:
  2521  0043AA                     
  2522                           ; BSR set to: 1
  2523  0043AA  0E01               	movlw	1
  2524  0043AC  0100               	movlb	0	; () banked
  2525  0043AE  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  2526  0043B0  EFDC  F021         	goto	u7251
  2527  0043B4  EFDE  F021         	goto	u7250
  2528  0043B8                     u7251:
  2529  0043B8  EFE8  F021         	goto	l6108
  2530  0043BC                     u7250:
  2531  0043BC                     
  2532                           ; BSR set to: 0
  2533                           ;fs_menu_controller.c: 528:     {;fs_menu_controller.c: 529:          menu_flags.menu_de
      +                          crease_flag = 0;
  2534  0043BC  0E00               	movlw	0
  2535  0043BE  0101               	movlb	1	; () banked
  2536  0043C0  6FA4               	movwf	(_menu_flags+5)& (0+255),b
  2537  0043C2                     
  2538                           ; BSR set to: 1
  2539                           ;fs_menu_controller.c: 530:          menu_value.speed_limit -= 1;
  2540  0043C2  0100               	movlb	0	; () banked
  2541  0043C4  07F5               	decf	(_menu_value+2)& (0+255),f,b
  2542  0043C6                     
  2543                           ; BSR set to: 0
  2544                           ;fs_menu_controller.c: 531:          eepromWrite(0x02,menu_value.speed_limit);
  2545  0043C6  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2546  0043CA  0E02               	movlw	2
  2547  0043CC  EC96  F02C         	call	_eepromWrite
  2548  0043D0                     l6108:
  2549                           
  2550                           ;fs_menu_controller.c: 533:     lcdSetCursor(1,1);
  2551  0043D0  0E01               	movlw	1
  2552  0043D2  6E04               	movwf	lcdSetCursor@b^0,c
  2553  0043D4  0E01               	movlw	1
  2554  0043D6  EC75  F029         	call	_lcdSetCursor
  2555  0043DA                     
  2556                           ;fs_menu_controller.c: 534:     lcdWriteString("HIZ LiMiTi      ");
  2557  0043DA  0E24               	movlw	low STR_8
  2558  0043DC  6E05               	movwf	lcdWriteString@a^0,c
  2559  0043DE  0E06               	movlw	high STR_8
  2560  0043E0  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2561  0043E2  EC4C  F028         	call	_lcdWriteString	;wreg free
  2562  0043E6                     
  2563                           ;fs_menu_controller.c: 535:     lcdSetCursor(2,1);
  2564  0043E6  0E01               	movlw	1
  2565  0043E8  6E04               	movwf	lcdSetCursor@b^0,c
  2566  0043EA  0E02               	movlw	2
  2567  0043EC  EC75  F029         	call	_lcdSetCursor
  2568  0043F0                     
  2569                           ;fs_menu_controller.c: 536:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  2570  0043F0  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2571  0043F2  0100               	movlb	0	; () banked
  2572  0043F4  6FCF               	movwf	sprintf@s& (0+255),b
  2573  0043F6  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2574  0043F8  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2575  0043FA  0E01               	movlw	low STR_9
  2576  0043FC  6FD1               	movwf	sprintf@fmt& (0+255),b
  2577  0043FE  0E06               	movlw	high STR_9
  2578  004400  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2579  004402  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  2580  004406  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2581  004408  EC5D  F02A         	call	_sprintf	;wreg free
  2582  00440C                     
  2583                           ;fs_menu_controller.c: 537:     lcdWriteString(textCursor2);
  2584  00440C  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2585  00440E  6E05               	movwf	lcdWriteString@a^0,c
  2586  004410  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2587  004412  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2588  004414  EC4C  F028         	call	_lcdWriteString	;wreg free
  2589  004418                     
  2590                           ;fs_menu_controller.c: 539:     if(timer_value.menu_login_delay == 100)
  2591  004418  0E64               	movlw	100
  2592  00441A  0101               	movlb	1	; () banked
  2593  00441C  199B               	xorwf	(_timer_value+4)& (0+255),w,b
  2594  00441E  A4D8               	btfss	status,2,c
  2595  004420  EF14  F022         	goto	u7261
  2596  004424  EF16  F022         	goto	u7260
  2597  004428                     u7261:
  2598  004428  EF1D  F022         	goto	l505
  2599  00442C                     u7260:
  2600  00442C                     
  2601                           ; BSR set to: 1
  2602                           ;fs_menu_controller.c: 540:     {;fs_menu_controller.c: 541:         button_bounce_contr
      +                          oller.menu = 0;
  2603  00442C  0E00               	movlw	0
  2604  00442E  6FA5               	movwf	_button_bounce_controller& (0+255),b
  2605                           
  2606                           ;fs_menu_controller.c: 542:         timer_value.menu_login_delay = 0;
  2607  004430  0E00               	movlw	0
  2608  004432  6F9B               	movwf	(_timer_value+4)& (0+255),b
  2609                           
  2610                           ;fs_menu_controller.c: 543:         menu_selected = PAUSE_MENU;
  2611  004434  0E06               	movlw	6
  2612  004436  0100               	movlb	0	; () banked
  2613  004438  6FFB               	movwf	_menu_selected& (0+255),b
  2614  00443A                     l505:
  2615  00443A  0012               	return		;funcret
  2616  00443C                     __end_of_speedLimitSettingMenu:
  2617                           	callstack 0
  2618                           
  2619 ;; *************** function _secretMenu *****************
  2620 ;; Defined at:
  2621 ;;		line 436 in file "fs_menu_controller.c"
  2622 ;; Parameters:    Size  Location     Type
  2623 ;;		None
  2624 ;; Auto vars:     Size  Location     Type
  2625 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2626 ;; Return value:  Size  Location     Type
  2627 ;;                  1    wreg      void 
  2628 ;; Registers used:
  2629 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2630 ;; Tracked objects:
  2631 ;;		On entry : 0/0
  2632 ;;		On exit  : 0/0
  2633 ;;		Unchanged: 0/0
  2634 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2635 ;;      Params:         0       0       0       0       0       0       0
  2636 ;;      Locals:         0      16       0       0       0       0       0
  2637 ;;      Temps:          0       0       0       0       0       0       0
  2638 ;;      Totals:         0      16       0       0       0       0       0
  2639 ;;Total ram usage:       16 bytes
  2640 ;; Hardware stack levels used:    1
  2641 ;; Hardware stack levels required when called:    9
  2642 ;; This function calls:
  2643 ;;		___fladd
  2644 ;;		___flge
  2645 ;;		___flsub
  2646 ;;		_lcdSetCursor
  2647 ;;		_lcdWriteString
  2648 ;;		_sprintf
  2649 ;;		_stopMotor
  2650 ;; This function is called by:
  2651 ;;		_stateMachine
  2652 ;; This function uses a non-reentrant model
  2653 ;;
  2654                           
  2655                           	psect	text8
  2656  0030D4                     __ptext8:
  2657                           	callstack 0
  2658  0030D4                     _secretMenu:
  2659                           	callstack 19
  2660  0030D4                     
  2661                           ;fs_menu_controller.c: 438:     char textCursor2[16] = {0};
  2662  0030D4  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  2663  0030D8  0E0F               	movlw	15
  2664  0030DA                     u7391:
  2665  0030DA  6ADE               	clrf	postinc2,c
  2666  0030DC  06E8               	decf	wreg,f,c
  2667  0030DE  E2FD               	bc	u7391
  2668  0030E0                     
  2669                           ;fs_menu_controller.c: 440:     stopMotor();
  2670  0030E0  ECB8  F02B         	call	_stopMotor	;wreg free
  2671  0030E4                     
  2672                           ;fs_menu_controller.c: 442:     if (menu_flags.menu_input_flag == 1)
  2673  0030E4  0101               	movlb	1	; () banked
  2674  0030E6  059F               	decf	_menu_flags& (0+255),w,b
  2675  0030E8  A4D8               	btfss	status,2,c
  2676  0030EA  EF79  F018         	goto	u7401
  2677  0030EE  EF7B  F018         	goto	u7400
  2678  0030F2                     u7401:
  2679  0030F2  EF89  F018         	goto	l6196
  2680  0030F6                     u7400:
  2681  0030F6                     
  2682                           ; BSR set to: 1
  2683                           ;fs_menu_controller.c: 443:     {;fs_menu_controller.c: 444:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2684  0030F6  0E00               	movlw	0
  2685  0030F8  6F9F               	movwf	_menu_flags& (0+255),b
  2686  0030FA                     
  2687                           ; BSR set to: 1
  2688                           ;fs_menu_controller.c: 445:         secretMenuCounter++;
  2689  0030FA  0100               	movlb	0	; () banked
  2690  0030FC  2BFC               	incf	_secretMenuCounter& (0+255),f,b
  2691  0030FE                     
  2692                           ; BSR set to: 0
  2693                           ;fs_menu_controller.c: 447:         if (secretMenuCounter >2)
  2694  0030FE  0E02               	movlw	2
  2695  003100  65FC               	cpfsgt	_secretMenuCounter& (0+255),b
  2696  003102  EF85  F018         	goto	u7411
  2697  003106  EF87  F018         	goto	u7410
  2698  00310A                     u7411:
  2699  00310A  EF89  F018         	goto	l6196
  2700  00310E                     u7410:
  2701  00310E                     
  2702                           ; BSR set to: 0
  2703                           ;fs_menu_controller.c: 448:         {;fs_menu_controller.c: 449:             secretMenuC
      +                          ounter = 1;
  2704  00310E  0E01               	movlw	1
  2705  003110  6FFC               	movwf	_secretMenuCounter& (0+255),b
  2706  003112                     l6196:
  2707                           
  2708                           ;fs_menu_controller.c: 453:     if (secretMenuCounter == 1)
  2709  003112  0100               	movlb	0	; () banked
  2710  003114  05FC               	decf	_secretMenuCounter& (0+255),w,b
  2711  003116  A4D8               	btfss	status,2,c
  2712  003118  EF90  F018         	goto	u7421
  2713  00311C  EF92  F018         	goto	u7420
  2714  003120                     u7421:
  2715  003120  EF26  F019         	goto	l6224
  2716  003124                     u7420:
  2717  003124                     
  2718                           ; BSR set to: 0
  2719                           ;fs_menu_controller.c: 454:     {;fs_menu_controller.c: 455:         lcdSetCursor(1,1);
  2720  003124  0E01               	movlw	1
  2721  003126  6E04               	movwf	lcdSetCursor@b^0,c
  2722  003128  0E01               	movlw	1
  2723  00312A  EC75  F029         	call	_lcdSetCursor
  2724  00312E                     
  2725                           ;fs_menu_controller.c: 456:         lcdWriteString("PID PARAM       ");
  2726  00312E  0E13               	movlw	low STR_4
  2727  003130  6E05               	movwf	lcdWriteString@a^0,c
  2728  003132  0E06               	movlw	high STR_4
  2729  003134  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2730  003136  EC4C  F028         	call	_lcdWriteString	;wreg free
  2731  00313A                     
  2732                           ;fs_menu_controller.c: 457:         lcdSetCursor(2,1);
  2733  00313A  0E01               	movlw	1
  2734  00313C  6E04               	movwf	lcdSetCursor@b^0,c
  2735  00313E  0E02               	movlw	2
  2736  003140  EC75  F029         	call	_lcdSetCursor
  2737  003144                     
  2738                           ;fs_menu_controller.c: 458:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  2739  003144  0EE1               	movlw	low secretMenu@textCursor2
  2740  003146  0100               	movlb	0	; () banked
  2741  003148  6FCF               	movwf	sprintf@s& (0+255),b
  2742  00314A  0E00               	movlw	high secretMenu@textCursor2
  2743  00314C  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2744  00314E  0E99               	movlw	low STR_5
  2745  003150  6FD1               	movwf	sprintf@fmt& (0+255),b
  2746  003152  0E06               	movlw	high STR_5
  2747  003154  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2748  003156  C1D7  F0D3         	movff	_KP@fs_speed_controller$F1856,?_sprintf+4
  2749  00315A  C1D8  F0D4         	movff	_KP@fs_speed_controller$F1856+1,?_sprintf+5
  2750  00315E  C1D9  F0D5         	movff	_KP@fs_speed_controller$F1856+2,?_sprintf+6
  2751  003162  C1DA  F0D6         	movff	_KP@fs_speed_controller$F1856+3,?_sprintf+7
  2752  003166  EC5D  F02A         	call	_sprintf	;wreg free
  2753  00316A                     
  2754                           ;fs_menu_controller.c: 459:         lcdWriteString(textCursor2);
  2755  00316A  0EE1               	movlw	low secretMenu@textCursor2
  2756  00316C  6E05               	movwf	lcdWriteString@a^0,c
  2757  00316E  0E00               	movlw	high secretMenu@textCursor2
  2758  003170  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2759  003172  EC4C  F028         	call	_lcdWriteString	;wreg free
  2760  003176                     
  2761                           ;fs_menu_controller.c: 461:         if ((menu_flags.menu_increase_flag == 1) && (KP < 10
      +                          .0))
  2762  003176  0101               	movlb	1	; () banked
  2763  003178  05A3               	decf	(_menu_flags+4)& (0+255),w,b
  2764  00317A  A4D8               	btfss	status,2,c
  2765  00317C  EFC2  F018         	goto	u7431
  2766  003180  EFC4  F018         	goto	u7430
  2767  003184                     u7431:
  2768  003184  EFFA  F018         	goto	l6216
  2769  003188                     u7430:
  2770  003188                     
  2771                           ; BSR set to: 1
  2772  003188  C1D7  F035         	movff	_KP@fs_speed_controller$F1856,___flge@ff1
  2773  00318C  C1D8  F036         	movff	_KP@fs_speed_controller$F1856+1,___flge@ff1+1
  2774  003190  C1D9  F037         	movff	_KP@fs_speed_controller$F1856+2,___flge@ff1+2
  2775  003194  C1DA  F038         	movff	_KP@fs_speed_controller$F1856+3,___flge@ff1+3
  2776  003198  0E00               	movlw	0
  2777  00319A  6E39               	movwf	___flge@ff2^0,c
  2778  00319C  0E00               	movlw	0
  2779  00319E  6E3A               	movwf	(___flge@ff2+1)^0,c
  2780  0031A0  0E20               	movlw	32
  2781  0031A2  6E3B               	movwf	(___flge@ff2+2)^0,c
  2782  0031A4  0E41               	movlw	65
  2783  0031A6  6E3C               	movwf	(___flge@ff2+3)^0,c
  2784  0031A8  ECA1  F022         	call	___flge	;wreg free
  2785  0031AC  B0D8               	btfsc	status,0,c
  2786  0031AE  EFDB  F018         	goto	u7441
  2787  0031B2  EFDD  F018         	goto	u7440
  2788  0031B6                     u7441:
  2789  0031B6  EFFA  F018         	goto	l6216
  2790  0031BA                     u7440:
  2791  0031BA                     
  2792                           ;fs_menu_controller.c: 462:         {;fs_menu_controller.c: 463:             menu_flags.
      +                          menu_increase_flag = 0;
  2793  0031BA  0E00               	movlw	0
  2794  0031BC  0101               	movlb	1	; () banked
  2795  0031BE  6FA3               	movwf	(_menu_flags+4)& (0+255),b
  2796  0031C0                     
  2797                           ; BSR set to: 1
  2798                           ;fs_menu_controller.c: 464:             KP += 0.01;
  2799  0031C0  C1D7  F035         	movff	_KP@fs_speed_controller$F1856,___fladd@b
  2800  0031C4  C1D8  F036         	movff	_KP@fs_speed_controller$F1856+1,___fladd@b+1
  2801  0031C8  C1D9  F037         	movff	_KP@fs_speed_controller$F1856+2,___fladd@b+2
  2802  0031CC  C1DA  F038         	movff	_KP@fs_speed_controller$F1856+3,___fladd@b+3
  2803  0031D0  0E0A               	movlw	10
  2804  0031D2  6E39               	movwf	___fladd@a^0,c
  2805  0031D4  0ED7               	movlw	215
  2806  0031D6  6E3A               	movwf	(___fladd@a+1)^0,c
  2807  0031D8  0E23               	movlw	35
  2808  0031DA  6E3B               	movwf	(___fladd@a+2)^0,c
  2809  0031DC  0E3C               	movlw	60
  2810  0031DE  6E3C               	movwf	(___fladd@a+3)^0,c
  2811  0031E0  EC5B  F00C         	call	___fladd	;wreg free
  2812  0031E4  C035  F1D7         	movff	?___fladd,_KP@fs_speed_controller$F1856
  2813  0031E8  C036  F1D8         	movff	?___fladd+1,_KP@fs_speed_controller$F1856+1
  2814  0031EC  C037  F1D9         	movff	?___fladd+2,_KP@fs_speed_controller$F1856+2
  2815  0031F0  C038  F1DA         	movff	?___fladd+3,_KP@fs_speed_controller$F1856+3
  2816  0031F4                     l6216:
  2817                           
  2818                           ;fs_menu_controller.c: 467:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  2819  0031F4  0101               	movlb	1	; () banked
  2820  0031F6  05A4               	decf	(_menu_flags+5)& (0+255),w,b
  2821  0031F8  A4D8               	btfss	status,2,c
  2822  0031FA  EF01  F019         	goto	u7451
  2823  0031FE  EF03  F019         	goto	u7450
  2824  003202                     u7451:
  2825  003202  EF26  F019         	goto	l6224
  2826  003206                     u7450:
  2827  003206                     
  2828                           ; BSR set to: 1
  2829  003206  BFDA               	btfsc	(_KP@fs_speed_controller$F1856+3)& (0+255),7,b
  2830  003208  EF08  F019         	goto	u7461
  2831  00320C  EF0A  F019         	goto	u7460
  2832  003210                     u7461:
  2833  003210  EF26  F019         	goto	l6224
  2834  003214                     u7460:
  2835  003214                     
  2836                           ; BSR set to: 1
  2837                           ;fs_menu_controller.c: 468:         {;fs_menu_controller.c: 469:             menu_flags.
      +                          menu_decrease_flag = 0;
  2838  003214  0E00               	movlw	0
  2839  003216  6FA4               	movwf	(_menu_flags+5)& (0+255),b
  2840  003218                     
  2841                           ; BSR set to: 1
  2842                           ;fs_menu_controller.c: 470:              KP -= 0.01;
  2843  003218  C1D7  F045         	movff	_KP@fs_speed_controller$F1856,___flsub@b
  2844  00321C  C1D8  F046         	movff	_KP@fs_speed_controller$F1856+1,___flsub@b+1
  2845  003220  C1D9  F047         	movff	_KP@fs_speed_controller$F1856+2,___flsub@b+2
  2846  003224  C1DA  F048         	movff	_KP@fs_speed_controller$F1856+3,___flsub@b+3
  2847  003228  0E0A               	movlw	10
  2848  00322A  6E49               	movwf	___flsub@a^0,c
  2849  00322C  0ED7               	movlw	215
  2850  00322E  6E4A               	movwf	(___flsub@a+1)^0,c
  2851  003230  0E23               	movlw	35
  2852  003232  6E4B               	movwf	(___flsub@a+2)^0,c
  2853  003234  0E3C               	movlw	60
  2854  003236  6E4C               	movwf	(___flsub@a+3)^0,c
  2855  003238  ECD4  F02A         	call	___flsub	;wreg free
  2856  00323C  C045  F1D7         	movff	?___flsub,_KP@fs_speed_controller$F1856
  2857  003240  C046  F1D8         	movff	?___flsub+1,_KP@fs_speed_controller$F1856+1
  2858  003244  C047  F1D9         	movff	?___flsub+2,_KP@fs_speed_controller$F1856+2
  2859  003248  C048  F1DA         	movff	?___flsub+3,_KP@fs_speed_controller$F1856+3
  2860  00324C                     l6224:
  2861                           
  2862                           ;fs_menu_controller.c: 474:     if (secretMenuCounter == 2)
  2863  00324C  0E02               	movlw	2
  2864  00324E  0100               	movlb	0	; () banked
  2865  003250  19FC               	xorwf	_secretMenuCounter& (0+255),w,b
  2866  003252  A4D8               	btfss	status,2,c
  2867  003254  EF2E  F019         	goto	u7471
  2868  003258  EF30  F019         	goto	u7470
  2869  00325C                     u7471:
  2870  00325C  EFC4  F019         	goto	l6252
  2871  003260                     u7470:
  2872  003260                     
  2873                           ; BSR set to: 0
  2874                           ;fs_menu_controller.c: 475:     {;fs_menu_controller.c: 476:         lcdSetCursor(1,1);
  2875  003260  0E01               	movlw	1
  2876  003262  6E04               	movwf	lcdSetCursor@b^0,c
  2877  003264  0E01               	movlw	1
  2878  003266  EC75  F029         	call	_lcdSetCursor
  2879  00326A                     
  2880                           ;fs_menu_controller.c: 477:         lcdWriteString("PID PARAM       ");
  2881  00326A  0E13               	movlw	low STR_4
  2882  00326C  6E05               	movwf	lcdWriteString@a^0,c
  2883  00326E  0E06               	movlw	high STR_4
  2884  003270  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2885  003272  EC4C  F028         	call	_lcdWriteString	;wreg free
  2886  003276                     
  2887                           ;fs_menu_controller.c: 478:         lcdSetCursor(2,1);
  2888  003276  0E01               	movlw	1
  2889  003278  6E04               	movwf	lcdSetCursor@b^0,c
  2890  00327A  0E02               	movlw	2
  2891  00327C  EC75  F029         	call	_lcdSetCursor
  2892  003280                     
  2893                           ;fs_menu_controller.c: 479:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  2894  003280  0EE1               	movlw	low secretMenu@textCursor2
  2895  003282  0100               	movlb	0	; () banked
  2896  003284  6FCF               	movwf	sprintf@s& (0+255),b
  2897  003286  0E00               	movlw	high secretMenu@textCursor2
  2898  003288  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2899  00328A  0EA7               	movlw	low STR_7
  2900  00328C  6FD1               	movwf	sprintf@fmt& (0+255),b
  2901  00328E  0E06               	movlw	high STR_7
  2902  003290  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2903  003292  C1D3  F0D3         	movff	_KD@fs_speed_controller$F1857,?_sprintf+4
  2904  003296  C1D4  F0D4         	movff	_KD@fs_speed_controller$F1857+1,?_sprintf+5
  2905  00329A  C1D5  F0D5         	movff	_KD@fs_speed_controller$F1857+2,?_sprintf+6
  2906  00329E  C1D6  F0D6         	movff	_KD@fs_speed_controller$F1857+3,?_sprintf+7
  2907  0032A2  EC5D  F02A         	call	_sprintf	;wreg free
  2908  0032A6                     
  2909                           ;fs_menu_controller.c: 480:         lcdWriteString(textCursor2);
  2910  0032A6  0EE1               	movlw	low secretMenu@textCursor2
  2911  0032A8  6E05               	movwf	lcdWriteString@a^0,c
  2912  0032AA  0E00               	movlw	high secretMenu@textCursor2
  2913  0032AC  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2914  0032AE  EC4C  F028         	call	_lcdWriteString	;wreg free
  2915  0032B2                     
  2916                           ;fs_menu_controller.c: 482:         if ((menu_flags.menu_increase_flag == 1) && (KD < 10
      +                          .0))
  2917  0032B2  0101               	movlb	1	; () banked
  2918  0032B4  05A3               	decf	(_menu_flags+4)& (0+255),w,b
  2919  0032B6  A4D8               	btfss	status,2,c
  2920  0032B8  EF60  F019         	goto	u7481
  2921  0032BC  EF62  F019         	goto	u7480
  2922  0032C0                     u7481:
  2923  0032C0  EF98  F019         	goto	l6244
  2924  0032C4                     u7480:
  2925  0032C4                     
  2926                           ; BSR set to: 1
  2927  0032C4  C1D3  F035         	movff	_KD@fs_speed_controller$F1857,___flge@ff1
  2928  0032C8  C1D4  F036         	movff	_KD@fs_speed_controller$F1857+1,___flge@ff1+1
  2929  0032CC  C1D5  F037         	movff	_KD@fs_speed_controller$F1857+2,___flge@ff1+2
  2930  0032D0  C1D6  F038         	movff	_KD@fs_speed_controller$F1857+3,___flge@ff1+3
  2931  0032D4  0E00               	movlw	0
  2932  0032D6  6E39               	movwf	___flge@ff2^0,c
  2933  0032D8  0E00               	movlw	0
  2934  0032DA  6E3A               	movwf	(___flge@ff2+1)^0,c
  2935  0032DC  0E20               	movlw	32
  2936  0032DE  6E3B               	movwf	(___flge@ff2+2)^0,c
  2937  0032E0  0E41               	movlw	65
  2938  0032E2  6E3C               	movwf	(___flge@ff2+3)^0,c
  2939  0032E4  ECA1  F022         	call	___flge	;wreg free
  2940  0032E8  B0D8               	btfsc	status,0,c
  2941  0032EA  EF79  F019         	goto	u7491
  2942  0032EE  EF7B  F019         	goto	u7490
  2943  0032F2                     u7491:
  2944  0032F2  EF98  F019         	goto	l6244
  2945  0032F6                     u7490:
  2946  0032F6                     
  2947                           ;fs_menu_controller.c: 483:         {;fs_menu_controller.c: 484:             menu_flags.
      +                          menu_increase_flag = 0;
  2948  0032F6  0E00               	movlw	0
  2949  0032F8  0101               	movlb	1	; () banked
  2950  0032FA  6FA3               	movwf	(_menu_flags+4)& (0+255),b
  2951  0032FC                     
  2952                           ; BSR set to: 1
  2953                           ;fs_menu_controller.c: 485:             KD += 0.01;
  2954  0032FC  C1D3  F035         	movff	_KD@fs_speed_controller$F1857,___fladd@b
  2955  003300  C1D4  F036         	movff	_KD@fs_speed_controller$F1857+1,___fladd@b+1
  2956  003304  C1D5  F037         	movff	_KD@fs_speed_controller$F1857+2,___fladd@b+2
  2957  003308  C1D6  F038         	movff	_KD@fs_speed_controller$F1857+3,___fladd@b+3
  2958  00330C  0E0A               	movlw	10
  2959  00330E  6E39               	movwf	___fladd@a^0,c
  2960  003310  0ED7               	movlw	215
  2961  003312  6E3A               	movwf	(___fladd@a+1)^0,c
  2962  003314  0E23               	movlw	35
  2963  003316  6E3B               	movwf	(___fladd@a+2)^0,c
  2964  003318  0E3C               	movlw	60
  2965  00331A  6E3C               	movwf	(___fladd@a+3)^0,c
  2966  00331C  EC5B  F00C         	call	___fladd	;wreg free
  2967  003320  C035  F1D3         	movff	?___fladd,_KD@fs_speed_controller$F1857
  2968  003324  C036  F1D4         	movff	?___fladd+1,_KD@fs_speed_controller$F1857+1
  2969  003328  C037  F1D5         	movff	?___fladd+2,_KD@fs_speed_controller$F1857+2
  2970  00332C  C038  F1D6         	movff	?___fladd+3,_KD@fs_speed_controller$F1857+3
  2971  003330                     l6244:
  2972                           
  2973                           ;fs_menu_controller.c: 488:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  2974  003330  0101               	movlb	1	; () banked
  2975  003332  05A4               	decf	(_menu_flags+5)& (0+255),w,b
  2976  003334  A4D8               	btfss	status,2,c
  2977  003336  EF9F  F019         	goto	u7501
  2978  00333A  EFA1  F019         	goto	u7500
  2979  00333E                     u7501:
  2980  00333E  EFC4  F019         	goto	l6252
  2981  003342                     u7500:
  2982  003342                     
  2983                           ; BSR set to: 1
  2984  003342  BFD6               	btfsc	(_KD@fs_speed_controller$F1857+3)& (0+255),7,b
  2985  003344  EFA6  F019         	goto	u7511
  2986  003348  EFA8  F019         	goto	u7510
  2987  00334C                     u7511:
  2988  00334C  EFC4  F019         	goto	l6252
  2989  003350                     u7510:
  2990  003350                     
  2991                           ; BSR set to: 1
  2992                           ;fs_menu_controller.c: 489:         {;fs_menu_controller.c: 490:             menu_flags.
      +                          menu_decrease_flag = 0;
  2993  003350  0E00               	movlw	0
  2994  003352  6FA4               	movwf	(_menu_flags+5)& (0+255),b
  2995  003354                     
  2996                           ; BSR set to: 1
  2997                           ;fs_menu_controller.c: 491:              KD -= 0.01;
  2998  003354  C1D3  F045         	movff	_KD@fs_speed_controller$F1857,___flsub@b
  2999  003358  C1D4  F046         	movff	_KD@fs_speed_controller$F1857+1,___flsub@b+1
  3000  00335C  C1D5  F047         	movff	_KD@fs_speed_controller$F1857+2,___flsub@b+2
  3001  003360  C1D6  F048         	movff	_KD@fs_speed_controller$F1857+3,___flsub@b+3
  3002  003364  0E0A               	movlw	10
  3003  003366  6E49               	movwf	___flsub@a^0,c
  3004  003368  0ED7               	movlw	215
  3005  00336A  6E4A               	movwf	(___flsub@a+1)^0,c
  3006  00336C  0E23               	movlw	35
  3007  00336E  6E4B               	movwf	(___flsub@a+2)^0,c
  3008  003370  0E3C               	movlw	60
  3009  003372  6E4C               	movwf	(___flsub@a+3)^0,c
  3010  003374  ECD4  F02A         	call	___flsub	;wreg free
  3011  003378  C045  F1D3         	movff	?___flsub,_KD@fs_speed_controller$F1857
  3012  00337C  C046  F1D4         	movff	?___flsub+1,_KD@fs_speed_controller$F1857+1
  3013  003380  C047  F1D5         	movff	?___flsub+2,_KD@fs_speed_controller$F1857+2
  3014  003384  C048  F1D6         	movff	?___flsub+3,_KD@fs_speed_controller$F1857+3
  3015  003388                     l6252:
  3016                           
  3017                           ;fs_menu_controller.c: 495:     if ( timer_value.menu_login_delay == 100)
  3018  003388  0E64               	movlw	100
  3019  00338A  0101               	movlb	1	; () banked
  3020  00338C  199B               	xorwf	(_timer_value+4)& (0+255),w,b
  3021  00338E  A4D8               	btfss	status,2,c
  3022  003390  EFCC  F019         	goto	u7521
  3023  003394  EFCE  F019         	goto	u7520
  3024  003398                     u7521:
  3025  003398  EFD5  F019         	goto	l496
  3026  00339C                     u7520:
  3027  00339C                     
  3028                           ; BSR set to: 1
  3029                           ;fs_menu_controller.c: 496:     {;fs_menu_controller.c: 497:         button_bounce_contr
      +                          oller.menu = 0;
  3030  00339C  0E00               	movlw	0
  3031  00339E  6FA5               	movwf	_button_bounce_controller& (0+255),b
  3032                           
  3033                           ;fs_menu_controller.c: 498:         timer_value.menu_login_delay = 0;
  3034  0033A0  0E00               	movlw	0
  3035  0033A2  6F9B               	movwf	(_timer_value+4)& (0+255),b
  3036                           
  3037                           ;fs_menu_controller.c: 499:         menu_selected = PAUSE_MENU;
  3038  0033A4  0E06               	movlw	6
  3039  0033A6  0100               	movlb	0	; () banked
  3040  0033A8  6FFB               	movwf	_menu_selected& (0+255),b
  3041  0033AA                     l496:
  3042  0033AA  0012               	return		;funcret
  3043  0033AC                     __end_of_secretMenu:
  3044                           	callstack 0
  3045                           
  3046 ;; *************** function _pauseMenu *****************
  3047 ;; Defined at:
  3048 ;;		line 366 in file "fs_menu_controller.c"
  3049 ;; Parameters:    Size  Location     Type
  3050 ;;		None
  3051 ;; Auto vars:     Size  Location     Type
  3052 ;;  textCursor2    16    0[BANK0 ] unsigned char [16]
  3053 ;; Return value:  Size  Location     Type
  3054 ;;                  1    wreg      void 
  3055 ;; Registers used:
  3056 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  3057 ;; Tracked objects:
  3058 ;;		On entry : 0/0
  3059 ;;		On exit  : 0/0
  3060 ;;		Unchanged: 0/0
  3061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3062 ;;      Params:         0       0       0       0       0       0       0
  3063 ;;      Locals:         0      16       0       0       0       0       0
  3064 ;;      Temps:          0       0       0       0       0       0       0
  3065 ;;      Totals:         0      16       0       0       0       0       0
  3066 ;;Total ram usage:       16 bytes
  3067 ;; Hardware stack levels used:    1
  3068 ;; Hardware stack levels required when called:    4
  3069 ;; This function calls:
  3070 ;;		_stopMotor
  3071 ;; This function is called by:
  3072 ;;		_stateMachine
  3073 ;; This function uses a non-reentrant model
  3074 ;;
  3075                           
  3076                           	psect	text9
  3077  004744                     __ptext9:
  3078                           	callstack 0
  3079  004744                     _pauseMenu:
  3080                           	callstack 24
  3081  004744                     
  3082                           ;fs_menu_controller.c: 368:     char textCursor2[16] = {0};
  3083  004744  EE20  F060         	lfsr	2,pauseMenu@textCursor2
  3084  004748  0E0F               	movlw	15
  3085  00474A                     u7301:
  3086  00474A  6ADE               	clrf	postinc2,c
  3087  00474C  06E8               	decf	wreg,f,c
  3088  00474E  E2FD               	bc	u7301
  3089  004750                     
  3090                           ;fs_menu_controller.c: 370:     startIsClick = 0;
  3091  004750  0E00               	movlw	0
  3092  004752  0100               	movlb	0	; () banked
  3093  004754  6FFE               	movwf	_startIsClick& (0+255),b
  3094  004756                     
  3095                           ; BSR set to: 0
  3096                           ;fs_menu_controller.c: 374:     stopMotor();
  3097  004756  ECB8  F02B         	call	_stopMotor	;wreg free
  3098  00475A                     
  3099                           ;fs_menu_controller.c: 382:     if (menu_flags.menu_start_flag == 1)
  3100  00475A  0101               	movlb	1	; () banked
  3101  00475C  05A0               	decf	(_menu_flags+1)& (0+255),w,b
  3102  00475E  A4D8               	btfss	status,2,c
  3103  004760  EFB4  F023         	goto	u7311
  3104  004764  EFB6  F023         	goto	u7310
  3105  004768                     u7311:
  3106  004768  EFC1  F023         	goto	l475
  3107  00476C                     u7310:
  3108  00476C                     
  3109                           ; BSR set to: 1
  3110                           ;fs_menu_controller.c: 383:     {;fs_menu_controller.c: 384:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3111  00476C  0E00               	movlw	0
  3112  00476E  6FA0               	movwf	(_menu_flags+1)& (0+255),b
  3113                           
  3114                           ;fs_menu_controller.c: 385:         menu_selected = MAIN_MENU;
  3115  004770  0E00               	movlw	0
  3116  004772  0100               	movlb	0	; () banked
  3117  004774  6FFB               	movwf	_menu_selected& (0+255),b
  3118                           
  3119                           ;fs_menu_controller.c: 387:         startIsClick = 1;
  3120  004776  0E01               	movlw	1
  3121  004778  6FFE               	movwf	_startIsClick& (0+255),b
  3122                           
  3123                           ;fs_menu_controller.c: 388:         pauseIsClick = 0;
  3124  00477A  0E00               	movlw	0
  3125  00477C  6FFF               	movwf	_pauseIsClick& (0+255),b
  3126                           
  3127                           ;fs_menu_controller.c: 389:         stopIsClick = 0;
  3128  00477E  0E00               	movlw	0
  3129  004780  6FFD               	movwf	_stopIsClick& (0+255),b
  3130  004782                     l475:
  3131                           
  3132                           ;fs_menu_controller.c: 392:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3133  004782  0100               	movlb	0	; () banked
  3134  004784  51FE               	movf	_startIsClick& (0+255),w,b
  3135  004786  A4D8               	btfss	status,2,c
  3136  004788  EFC8  F023         	goto	u7321
  3137  00478C  EFCA  F023         	goto	u7320
  3138  004790                     u7321:
  3139  004790  EFEC  F023         	goto	l6172
  3140  004794                     u7320:
  3141  004794                     
  3142                           ; BSR set to: 0
  3143  004794  51FF               	movf	_pauseIsClick& (0+255),w,b
  3144  004796  A4D8               	btfss	status,2,c
  3145  004798  EFD0  F023         	goto	u7331
  3146  00479C  EFD2  F023         	goto	u7330
  3147  0047A0                     u7331:
  3148  0047A0  EFEC  F023         	goto	l6172
  3149  0047A4                     u7330:
  3150  0047A4                     
  3151                           ; BSR set to: 0
  3152  0047A4  05FD               	decf	_stopIsClick& (0+255),w,b
  3153  0047A6  A4D8               	btfss	status,2,c
  3154  0047A8  EFD8  F023         	goto	u7341
  3155  0047AC  EFDA  F023         	goto	u7340
  3156  0047B0                     u7341:
  3157  0047B0  EFEC  F023         	goto	l6172
  3158  0047B4                     u7340:
  3159  0047B4                     
  3160                           ; BSR set to: 0
  3161  0047B4  0E06               	movlw	6
  3162  0047B6  19FB               	xorwf	_menu_selected& (0+255),w,b
  3163  0047B8  A4D8               	btfss	status,2,c
  3164  0047BA  EFE1  F023         	goto	u7351
  3165  0047BE  EFE3  F023         	goto	u7350
  3166  0047C2                     u7351:
  3167  0047C2  EFEC  F023         	goto	l6172
  3168  0047C6                     u7350:
  3169  0047C6                     
  3170                           ; BSR set to: 0
  3171                           ;fs_menu_controller.c: 393:     {;fs_menu_controller.c: 394:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3172  0047C6  C0F3  F19A         	movff	_menu_value,_timer_value+3
  3173  0047CA                     
  3174                           ; BSR set to: 0
  3175                           ;fs_menu_controller.c: 395:          timer_value.remainingSecond = 0;
  3176  0047CA  0E00               	movlw	0
  3177  0047CC  0101               	movlb	1	; () banked
  3178  0047CE  6F99               	movwf	(_timer_value+2)& (0+255),b
  3179                           
  3180                           ;fs_menu_controller.c: 396:          timer_value.second = 0;
  3181  0047D0  0E00               	movlw	0
  3182  0047D2  6F97               	movwf	_timer_value& (0+255),b
  3183                           
  3184                           ;fs_menu_controller.c: 397:          timer_value.minute = 0;
  3185  0047D4  0E00               	movlw	0
  3186  0047D6  6F98               	movwf	(_timer_value+1)& (0+255),b
  3187  0047D8                     l6172:
  3188                           
  3189                           ;fs_menu_controller.c: 400:     if ( timer_value.menu_login_delay == 100)
  3190  0047D8  0E64               	movlw	100
  3191  0047DA  0101               	movlb	1	; () banked
  3192  0047DC  199B               	xorwf	(_timer_value+4)& (0+255),w,b
  3193  0047DE  A4D8               	btfss	status,2,c
  3194  0047E0  EFF4  F023         	goto	u7361
  3195  0047E4  EFF6  F023         	goto	u7360
  3196  0047E8                     u7361:
  3197  0047E8  EFFD  F023         	goto	l6176
  3198  0047EC                     u7360:
  3199  0047EC                     
  3200                           ; BSR set to: 1
  3201                           ;fs_menu_controller.c: 401:     {;fs_menu_controller.c: 402:         button_bounce_contr
      +                          oller.menu = 0;
  3202  0047EC  0E00               	movlw	0
  3203  0047EE  6FA5               	movwf	_button_bounce_controller& (0+255),b
  3204                           
  3205                           ;fs_menu_controller.c: 403:         timer_value.menu_login_delay = 0;
  3206  0047F0  0E00               	movlw	0
  3207  0047F2  6F9B               	movwf	(_timer_value+4)& (0+255),b
  3208                           
  3209                           ;fs_menu_controller.c: 404:         menu_selected = DRIVER_TIME_SETTING;
  3210  0047F4  0E01               	movlw	1
  3211  0047F6  0100               	movlb	0	; () banked
  3212  0047F8  6FFB               	movwf	_menu_selected& (0+255),b
  3213  0047FA                     l6176:
  3214                           
  3215                           ;fs_menu_controller.c: 407:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3216  0047FA  0101               	movlb	1	; () banked
  3217  0047FC  05A3               	decf	(_menu_flags+4)& (0+255),w,b
  3218  0047FE  A4D8               	btfss	status,2,c
  3219  004800  EF04  F024         	goto	u7371
  3220  004804  EF06  F024         	goto	u7370
  3221  004808                     u7371:
  3222  004808  EF13  F024         	goto	l479
  3223  00480C                     u7370:
  3224  00480C                     
  3225                           ; BSR set to: 1
  3226  00480C  05A4               	decf	(_menu_flags+5)& (0+255),w,b
  3227  00480E  A4D8               	btfss	status,2,c
  3228  004810  EF0C  F024         	goto	u7381
  3229  004814  EF0E  F024         	goto	u7380
  3230  004818                     u7381:
  3231  004818  EF13  F024         	goto	l479
  3232  00481C                     u7380:
  3233  00481C                     
  3234                           ; BSR set to: 1
  3235                           ;fs_menu_controller.c: 408:     {;fs_menu_controller.c: 409:         menu_selected = SEC
      +                          RET_MENU;
  3236  00481C  0E08               	movlw	8
  3237  00481E  0100               	movlb	0	; () banked
  3238  004820  6FFB               	movwf	_menu_selected& (0+255),b
  3239                           
  3240                           ;fs_menu_controller.c: 410:         secretMenuCounter = 1;
  3241  004822  0E01               	movlw	1
  3242  004824  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3243  004826                     l479:
  3244  004826  0012               	return		;funcret
  3245  004828                     __end_of_pauseMenu:
  3246                           	callstack 0
  3247                           
  3248 ;; *************** function _mainMenu *****************
  3249 ;; Defined at:
  3250 ;;		line 245 in file "fs_menu_controller.c"
  3251 ;; Parameters:    Size  Location     Type
  3252 ;;		None
  3253 ;; Auto vars:     Size  Location     Type
  3254 ;;  textCursor2    16    8[BANK0 ] unsigned char [16]
  3255 ;; Return value:  Size  Location     Type
  3256 ;;                  1    wreg      void 
  3257 ;; Registers used:
  3258 ;;		wreg, fsr2l, fsr2h, status,2, status,0, prodl, prodh, cstack
  3259 ;; Tracked objects:
  3260 ;;		On entry : 0/0
  3261 ;;		On exit  : 0/0
  3262 ;;		Unchanged: 0/0
  3263 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3264 ;;      Params:         0       0       0       0       0       0       0
  3265 ;;      Locals:         0      16       0       0       0       0       0
  3266 ;;      Temps:          0       0       0       0       0       0       0
  3267 ;;      Totals:         0      16       0       0       0       0       0
  3268 ;;Total ram usage:       16 bytes
  3269 ;; Hardware stack levels used:    1
  3270 ;; Hardware stack levels required when called:    4
  3271 ;; This function calls:
  3272 ;;		_lcdClear
  3273 ;;		_startMotor
  3274 ;;		_stopMotor
  3275 ;; This function is called by:
  3276 ;;		_stateMachine
  3277 ;; This function uses a non-reentrant model
  3278 ;;
  3279                           
  3280                           	psect	text10
  3281  003AE8                     __ptext10:
  3282                           	callstack 0
  3283  003AE8                     _mainMenu:
  3284                           	callstack 24
  3285  003AE8                     
  3286                           ;fs_menu_controller.c: 247:     char textCursor2[16] = {0};
  3287  003AE8  EE20  F068         	lfsr	2,mainMenu@textCursor2
  3288  003AEC  0E0F               	movlw	15
  3289  003AEE                     u6911:
  3290  003AEE  6ADE               	clrf	postinc2,c
  3291  003AF0  06E8               	decf	wreg,f,c
  3292  003AF2  E2FD               	bc	u6911
  3293  003AF4                     
  3294                           ;fs_menu_controller.c: 255:     if ( timer_value.menu_login_delay == 100)
  3295  003AF4  0E64               	movlw	100
  3296  003AF6  0101               	movlb	1	; () banked
  3297  003AF8  199B               	xorwf	(_timer_value+4)& (0+255),w,b
  3298  003AFA  A4D8               	btfss	status,2,c
  3299  003AFC  EF82  F01D         	goto	u6921
  3300  003B00  EF84  F01D         	goto	u6920
  3301  003B04                     u6921:
  3302  003B04  EF8B  F01D         	goto	l5910
  3303  003B08                     u6920:
  3304  003B08                     
  3305                           ; BSR set to: 1
  3306                           ;fs_menu_controller.c: 256:     {;fs_menu_controller.c: 257:         button_bounce_contr
      +                          oller.menu = 0;
  3307  003B08  0E00               	movlw	0
  3308  003B0A  6FA5               	movwf	_button_bounce_controller& (0+255),b
  3309                           
  3310                           ;fs_menu_controller.c: 258:         timer_value.menu_login_delay = 0;
  3311  003B0C  0E00               	movlw	0
  3312  003B0E  6F9B               	movwf	(_timer_value+4)& (0+255),b
  3313                           
  3314                           ;fs_menu_controller.c: 259:         menu_selected = DRIVER_TIME_SETTING;
  3315  003B10  0E01               	movlw	1
  3316  003B12  0100               	movlb	0	; () banked
  3317  003B14  6FFB               	movwf	_menu_selected& (0+255),b
  3318  003B16                     l5910:
  3319                           
  3320                           ;fs_menu_controller.c: 262:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  3321  003B16  0101               	movlb	1	; () banked
  3322  003B18  519A               	movf	(_timer_value+3)& (0+255),w,b
  3323  003B1A  0A80               	xorlw	128
  3324  003B1C  0F7F               	addlw	-129
  3325  003B1E  B0D8               	btfsc	status,0,c
  3326  003B20  EF94  F01D         	goto	u6931
  3327  003B24  EF96  F01D         	goto	u6930
  3328  003B28                     u6931:
  3329  003B28  EFA4  F01D         	goto	l458
  3330  003B2C                     u6930:
  3331  003B2C                     
  3332                           ; BSR set to: 1
  3333  003B2C  5199               	movf	(_timer_value+2)& (0+255),w,b
  3334  003B2E  A4D8               	btfss	status,2,c
  3335  003B30  EF9C  F01D         	goto	u6941
  3336  003B34  EF9E  F01D         	goto	u6940
  3337  003B38                     u6941:
  3338  003B38  EFA4  F01D         	goto	l458
  3339  003B3C                     u6940:
  3340  003B3C                     
  3341                           ; BSR set to: 1
  3342                           ;fs_menu_controller.c: 263:     {;fs_menu_controller.c: 264:             menu_selected =
      +                           STOP_MENU;
  3343  003B3C  0E04               	movlw	4
  3344  003B3E  0100               	movlb	0	; () banked
  3345  003B40  6FFB               	movwf	_menu_selected& (0+255),b
  3346                           
  3347                           ;fs_menu_controller.c: 265:             timer_value.minute = 0;
  3348  003B42  0E00               	movlw	0
  3349  003B44  0101               	movlb	1	; () banked
  3350  003B46  6F98               	movwf	(_timer_value+1)& (0+255),b
  3351  003B48                     l458:
  3352                           
  3353                           ; BSR set to: 1
  3354                           ;fs_menu_controller.c: 268:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  3355  003B48  0100               	movlb	0	; () banked
  3356  003B4A  51FE               	movf	_startIsClick& (0+255),w,b
  3357  003B4C  A4D8               	btfss	status,2,c
  3358  003B4E  EFAB  F01D         	goto	u6951
  3359  003B52  EFAD  F01D         	goto	u6950
  3360  003B56                     u6951:
  3361  003B56  EFCC  F01D         	goto	l459
  3362  003B5A                     u6950:
  3363  003B5A                     
  3364                           ; BSR set to: 0
  3365  003B5A  05FF               	decf	_pauseIsClick& (0+255),w,b
  3366  003B5C  A4D8               	btfss	status,2,c
  3367  003B5E  EFB3  F01D         	goto	u6961
  3368  003B62  EFB5  F01D         	goto	u6960
  3369  003B66                     u6961:
  3370  003B66  EFCC  F01D         	goto	l459
  3371  003B6A                     u6960:
  3372  003B6A                     
  3373                           ; BSR set to: 0
  3374  003B6A  51FD               	movf	_stopIsClick& (0+255),w,b
  3375  003B6C  A4D8               	btfss	status,2,c
  3376  003B6E  EFBB  F01D         	goto	u6971
  3377  003B72  EFBD  F01D         	goto	u6970
  3378  003B76                     u6971:
  3379  003B76  EFCC  F01D         	goto	l459
  3380  003B7A                     u6970:
  3381  003B7A                     
  3382                           ; BSR set to: 0
  3383  003B7A  51FB               	movf	_menu_selected& (0+255),w,b
  3384  003B7C  A4D8               	btfss	status,2,c
  3385  003B7E  EFC3  F01D         	goto	u6981
  3386  003B82  EFC5  F01D         	goto	u6980
  3387  003B86                     u6981:
  3388  003B86  EFCC  F01D         	goto	l459
  3389  003B8A                     u6980:
  3390  003B8A                     
  3391                           ; BSR set to: 0
  3392                           ;fs_menu_controller.c: 269:     {;fs_menu_controller.c: 270:         menu_selected = PAU
      +                          SE_MENU;
  3393  003B8A  0E06               	movlw	6
  3394  003B8C  6FFB               	movwf	_menu_selected& (0+255),b
  3395  003B8E                     
  3396                           ; BSR set to: 0
  3397                           ;fs_menu_controller.c: 271:         LATDbits.LATD5 = 0;
  3398  003B8E  9A8C               	bcf	140,5,c	;volatile
  3399  003B90                     
  3400                           ; BSR set to: 0
  3401                           ;fs_menu_controller.c: 272:         LATCbits.LATC5 = 0;
  3402  003B90  9A8B               	bcf	139,5,c	;volatile
  3403  003B92                     
  3404                           ; BSR set to: 0
  3405                           ;fs_menu_controller.c: 273:         LATCbits.LATC4 = 0;
  3406  003B92  988B               	bcf	139,4,c	;volatile
  3407                           
  3408                           ;fs_menu_controller.c: 274:         startIsClick = 0;
  3409  003B94  0E00               	movlw	0
  3410  003B96  6FFE               	movwf	_startIsClick& (0+255),b
  3411  003B98                     l459:
  3412                           
  3413                           ; BSR set to: 0
  3414                           ;fs_menu_controller.c: 277:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  3415  003B98  51FE               	movf	_startIsClick& (0+255),w,b
  3416  003B9A  A4D8               	btfss	status,2,c
  3417  003B9C  EFD2  F01D         	goto	u6991
  3418  003BA0  EFD4  F01D         	goto	u6990
  3419  003BA4                     u6991:
  3420  003BA4  EFFA  F01D         	goto	l5948
  3421  003BA8                     u6990:
  3422  003BA8                     
  3423                           ; BSR set to: 0
  3424  003BA8  51FF               	movf	_pauseIsClick& (0+255),w,b
  3425  003BAA  A4D8               	btfss	status,2,c
  3426  003BAC  EFDA  F01D         	goto	u7001
  3427  003BB0  EFDC  F01D         	goto	u7000
  3428  003BB4                     u7001:
  3429  003BB4  EFFA  F01D         	goto	l5948
  3430  003BB8                     u7000:
  3431  003BB8                     
  3432                           ; BSR set to: 0
  3433  003BB8  05FD               	decf	_stopIsClick& (0+255),w,b
  3434  003BBA  A4D8               	btfss	status,2,c
  3435  003BBC  EFE2  F01D         	goto	u7011
  3436  003BC0  EFE4  F01D         	goto	u7010
  3437  003BC4                     u7011:
  3438  003BC4  EFFA  F01D         	goto	l5948
  3439  003BC8                     u7010:
  3440  003BC8                     
  3441                           ; BSR set to: 0
  3442  003BC8  51FB               	movf	_menu_selected& (0+255),w,b
  3443  003BCA  A4D8               	btfss	status,2,c
  3444  003BCC  EFEA  F01D         	goto	u7021
  3445  003BD0  EFEC  F01D         	goto	u7020
  3446  003BD4                     u7021:
  3447  003BD4  EFFA  F01D         	goto	l5948
  3448  003BD8                     u7020:
  3449  003BD8                     
  3450                           ; BSR set to: 0
  3451                           ;fs_menu_controller.c: 278:     {;fs_menu_controller.c: 279:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3452  003BD8  C0F3  F19A         	movff	_menu_value,_timer_value+3
  3453  003BDC                     
  3454                           ; BSR set to: 0
  3455                           ;fs_menu_controller.c: 280:          timer_value.remainingSecond = 0;
  3456  003BDC  0E00               	movlw	0
  3457  003BDE  0101               	movlb	1	; () banked
  3458  003BE0  6F99               	movwf	(_timer_value+2)& (0+255),b
  3459                           
  3460                           ;fs_menu_controller.c: 281:          timer_value.second = 0;
  3461  003BE2  0E00               	movlw	0
  3462  003BE4  6F97               	movwf	_timer_value& (0+255),b
  3463                           
  3464                           ;fs_menu_controller.c: 282:          timer_value.minute = 0;
  3465  003BE6  0E00               	movlw	0
  3466  003BE8  6F98               	movwf	(_timer_value+1)& (0+255),b
  3467  003BEA                     
  3468                           ; BSR set to: 1
  3469                           ;fs_menu_controller.c: 283:          LATDbits.LATD5 = 0;
  3470  003BEA  9A8C               	bcf	140,5,c	;volatile
  3471  003BEC                     
  3472                           ; BSR set to: 1
  3473                           ;fs_menu_controller.c: 284:          LATCbits.LATC5 = 0;
  3474  003BEC  9A8B               	bcf	139,5,c	;volatile
  3475  003BEE                     
  3476                           ; BSR set to: 1
  3477                           ;fs_menu_controller.c: 285:          LATCbits.LATC4 = 0;
  3478  003BEE  988B               	bcf	139,4,c	;volatile
  3479  003BF0                     
  3480                           ; BSR set to: 1
  3481                           ;fs_menu_controller.c: 286:          stopMotor();
  3482  003BF0  ECB8  F02B         	call	_stopMotor	;wreg free
  3483  003BF4                     l5948:
  3484                           
  3485                           ;fs_menu_controller.c: 289:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  3486  003BF4  0100               	movlb	0	; () banked
  3487  003BF6  05FE               	decf	_startIsClick& (0+255),w,b
  3488  003BF8  A4D8               	btfss	status,2,c
  3489  003BFA  EF01  F01E         	goto	u7031
  3490  003BFE  EF03  F01E         	goto	u7030
  3491  003C02                     u7031:
  3492  003C02  EF1A  F01E         	goto	l5962
  3493  003C06                     u7030:
  3494  003C06                     
  3495                           ; BSR set to: 0
  3496  003C06  51FF               	movf	_pauseIsClick& (0+255),w,b
  3497  003C08  A4D8               	btfss	status,2,c
  3498  003C0A  EF09  F01E         	goto	u7041
  3499  003C0E  EF0B  F01E         	goto	u7040
  3500  003C12                     u7041:
  3501  003C12  EF1A  F01E         	goto	l5962
  3502  003C16                     u7040:
  3503  003C16                     
  3504                           ; BSR set to: 0
  3505  003C16  51FD               	movf	_stopIsClick& (0+255),w,b
  3506  003C18  A4D8               	btfss	status,2,c
  3507  003C1A  EF11  F01E         	goto	u7051
  3508  003C1E  EF13  F01E         	goto	u7050
  3509  003C22                     u7051:
  3510  003C22  EF1A  F01E         	goto	l5962
  3511  003C26                     u7050:
  3512  003C26                     
  3513                           ; BSR set to: 0
  3514                           ;fs_menu_controller.c: 290:     {;fs_menu_controller.c: 291:         startMotor();
  3515  003C26  EC46  F02C         	call	_startMotor	;wreg free
  3516  003C2A                     
  3517                           ;fs_menu_controller.c: 292:         LATDbits.LATD5 = 1;
  3518  003C2A  8A8C               	bsf	140,5,c	;volatile
  3519  003C2C                     
  3520                           ;fs_menu_controller.c: 293:         LATCbits.LATC5 = 1;
  3521  003C2C  8A8B               	bsf	139,5,c	;volatile
  3522  003C2E                     
  3523                           ;fs_menu_controller.c: 294:         LATCbits.LATC4 = 1;
  3524  003C2E  888B               	bsf	139,4,c	;volatile
  3525                           
  3526                           ;fs_menu_controller.c: 295:     }
  3527  003C30  EF3F  F01E         	goto	l463
  3528  003C34                     l5962:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;fs_menu_controller.c: 297:     {;fs_menu_controller.c: 298:         stopMotor();
  3532  003C34  ECB8  F02B         	call	_stopMotor	;wreg free
  3533  003C38                     
  3534                           ;fs_menu_controller.c: 299:         lcdClear();
  3535  003C38  EC31  F02D         	call	_lcdClear	;wreg free
  3536  003C3C                     
  3537                           ;fs_menu_controller.c: 300:         convert_data.convert_channel_0 = 0;
  3538  003C3C  0E00               	movlw	0
  3539  003C3E  0101               	movlb	1	; () banked
  3540  003C40  6F01               	movwf	(_convert_data+1)& (0+255),b
  3541  003C42  0E00               	movlw	0
  3542  003C44  6F00               	movwf	_convert_data& (0+255),b
  3543  003C46                     
  3544                           ; BSR set to: 1
  3545                           ;fs_menu_controller.c: 301:         convert_data.convert_channel_1 = 0;
  3546  003C46  0E00               	movlw	0
  3547  003C48  6F03               	movwf	(_convert_data+3)& (0+255),b
  3548  003C4A  0E00               	movlw	0
  3549  003C4C  6F02               	movwf	(_convert_data+2)& (0+255),b
  3550  003C4E                     
  3551                           ; BSR set to: 1
  3552                           ;fs_menu_controller.c: 302:         convert_data.convert_channel_2 = 0;
  3553  003C4E  0E00               	movlw	0
  3554  003C50  6F05               	movwf	(_convert_data+5)& (0+255),b
  3555  003C52  0E00               	movlw	0
  3556  003C54  6F04               	movwf	(_convert_data+4)& (0+255),b
  3557  003C56                     
  3558                           ; BSR set to: 1
  3559                           ;fs_menu_controller.c: 303:         convert_data.convert_channel_3 = 0;
  3560  003C56  0E00               	movlw	0
  3561  003C58  6F07               	movwf	(_convert_data+7)& (0+255),b
  3562  003C5A  0E00               	movlw	0
  3563  003C5C  6F06               	movwf	(_convert_data+6)& (0+255),b
  3564  003C5E                     
  3565                           ; BSR set to: 1
  3566                           ;fs_menu_controller.c: 304:         convert_data.convert_channel_4 = 0;
  3567  003C5E  0E00               	movlw	0
  3568  003C60  6F09               	movwf	(_convert_data+9)& (0+255),b
  3569  003C62  0E00               	movlw	0
  3570  003C64  6F08               	movwf	(_convert_data+8)& (0+255),b
  3571  003C66                     
  3572                           ; BSR set to: 1
  3573                           ;fs_menu_controller.c: 305:         convert_data.convert_channel_5 = 0;
  3574  003C66  0E00               	movlw	0
  3575  003C68  6F0B               	movwf	(_convert_data+11)& (0+255),b
  3576  003C6A  0E00               	movlw	0
  3577  003C6C  6F0A               	movwf	(_convert_data+10)& (0+255),b
  3578  003C6E                     
  3579                           ; BSR set to: 1
  3580                           ;fs_menu_controller.c: 306:         convert_data.convert_channel_6 = 0;
  3581  003C6E  0E00               	movlw	0
  3582  003C70  6F0D               	movwf	(_convert_data+13)& (0+255),b
  3583  003C72  0E00               	movlw	0
  3584  003C74  6F0C               	movwf	(_convert_data+12)& (0+255),b
  3585  003C76                     
  3586                           ; BSR set to: 1
  3587                           ;fs_menu_controller.c: 307:         convert_data.convert_channel_7 = 0;
  3588  003C76  0E00               	movlw	0
  3589  003C78  6F0F               	movwf	(_convert_data+15)& (0+255),b
  3590  003C7A  0E00               	movlw	0
  3591  003C7C  6F0E               	movwf	(_convert_data+14)& (0+255),b
  3592  003C7E                     l463:
  3593  003C7E  0012               	return		;funcret
  3594  003C80                     __end_of_mainMenu:
  3595                           	callstack 0
  3596                           
  3597 ;; *************** function _startMotor *****************
  3598 ;; Defined at:
  3599 ;;		line 98 in file "fs_speed_controller.c"
  3600 ;; Parameters:    Size  Location     Type
  3601 ;;		None
  3602 ;; Auto vars:     Size  Location     Type
  3603 ;;		None
  3604 ;; Return value:  Size  Location     Type
  3605 ;;                  1    wreg      void 
  3606 ;; Registers used:
  3607 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3608 ;; Tracked objects:
  3609 ;;		On entry : 0/0
  3610 ;;		On exit  : 0/0
  3611 ;;		Unchanged: 0/0
  3612 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3613 ;;      Params:         0       0       0       0       0       0       0
  3614 ;;      Locals:         0       0       0       0       0       0       0
  3615 ;;      Temps:          0       0       0       0       0       0       0
  3616 ;;      Totals:         0       0       0       0       0       0       0
  3617 ;;Total ram usage:        0 bytes
  3618 ;; Hardware stack levels used:    1
  3619 ;; Hardware stack levels required when called:    3
  3620 ;; This function calls:
  3621 ;;		_PWM1_setDC
  3622 ;;		_PWM2_setDC
  3623 ;;		_calculatedAverageValue
  3624 ;;		_scanAdcConversion
  3625 ;;		_speedControl
  3626 ;; This function is called by:
  3627 ;;		_mainMenu
  3628 ;; This function uses a non-reentrant model
  3629 ;;
  3630                           
  3631                           	psect	text11
  3632  00588C                     __ptext11:
  3633                           	callstack 0
  3634  00588C                     _startMotor:
  3635                           	callstack 24
  3636  00588C                     
  3637                           ;fs_speed_controller.c: 100:         scanAdcConversion();
  3638  00588C  ECBB  F00E         	call	_scanAdcConversion	;wreg free
  3639                           
  3640                           ;fs_speed_controller.c: 101:         calculatedAverageValue();
  3641  005890  EC21  F013         	call	_calculatedAverageValue	;wreg free
  3642                           
  3643                           ;fs_speed_controller.c: 102:         speedControl(driver_limit.ortalama);
  3644  005894  C130  F058         	movff	_driver_limit+16,speedControl@position
  3645  005898  C131  F059         	movff	_driver_limit+17,speedControl@position+1
  3646  00589C  C132  F05A         	movff	_driver_limit+18,speedControl@position+2
  3647  0058A0  C133  F05B         	movff	_driver_limit+19,speedControl@position+3
  3648  0058A4  ECA1  F01C         	call	_speedControl	;wreg free
  3649  0058A8                     
  3650                           ;fs_speed_controller.c: 103:         PWM1_setDC(controller.leftMotorSpeed);
  3651  0058A8  C13A  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3652  0058AC  C13B  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3653  0058B0  ECC8  F028         	call	_PWM1_setDC	;wreg free
  3654  0058B4                     
  3655                           ;fs_speed_controller.c: 104:         PWM2_setDC(controller.rightMotorSpeed);
  3656  0058B4  C13C  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3657  0058B8  C13D  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3658  0058BC  EC8B  F028         	call	_PWM2_setDC	;wreg free
  3659  0058C0  0012               	return		;funcret
  3660  0058C2                     __end_of_startMotor:
  3661                           	callstack 0
  3662                           
  3663 ;; *************** function _speedControl *****************
  3664 ;; Defined at:
  3665 ;;		line 40 in file "fs_speed_controller.c"
  3666 ;; Parameters:    Size  Location     Type
  3667 ;;  position        4   87[COMRAM] float 
  3668 ;; Auto vars:     Size  Location     Type
  3669 ;;  pos             4    0        float 
  3670 ;; Return value:  Size  Location     Type
  3671 ;;                  1    wreg      void 
  3672 ;; Registers used:
  3673 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3674 ;; Tracked objects:
  3675 ;;		On entry : 0/0
  3676 ;;		On exit  : 0/0
  3677 ;;		Unchanged: 0/0
  3678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3679 ;;      Params:         4       0       0       0       0       0       0
  3680 ;;      Locals:         0       4       0       0       0       0       0
  3681 ;;      Temps:          2       0       0       0       0       0       0
  3682 ;;      Totals:         6       4       0       0       0       0       0
  3683 ;;Total ram usage:       10 bytes
  3684 ;; Hardware stack levels used:    1
  3685 ;; Hardware stack levels required when called:    2
  3686 ;; This function calls:
  3687 ;;		___fladd
  3688 ;;		___flmul
  3689 ;;		___fltol
  3690 ;;		___xxtofl
  3691 ;; This function is called by:
  3692 ;;		_startMotor
  3693 ;; This function uses a non-reentrant model
  3694 ;;
  3695                           
  3696                           	psect	text12
  3697  003942                     __ptext12:
  3698                           	callstack 0
  3699  003942                     _speedControl:
  3700                           	callstack 24
  3701  003942                     
  3702                           ;fs_speed_controller.c: 46:     controller.error = (int16_t)(position - 340.0);
  3703  003942  0E00               	movlw	0
  3704  003944  6E39               	movwf	___fladd@a^0,c
  3705  003946  0E00               	movlw	0
  3706  003948  6E3A               	movwf	(___fladd@a+1)^0,c
  3707  00394A  0EAA               	movlw	170
  3708  00394C  6E3B               	movwf	(___fladd@a+2)^0,c
  3709  00394E  0EC3               	movlw	195
  3710  003950  6E3C               	movwf	(___fladd@a+3)^0,c
  3711  003952  C058  F035         	movff	speedControl@position,___fladd@b
  3712  003956  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  3713  00395A  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  3714  00395E  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  3715  003962  EC5B  F00C         	call	___fladd	;wreg free
  3716  003966  C035  F04E         	movff	?___fladd,___fltol@f1
  3717  00396A  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3718  00396E  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3719  003972  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3720  003976  EC1E  F022         	call	___fltol	;wreg free
  3721  00397A  C04E  F134         	movff	?___fltol,_controller
  3722  00397E  C04F  F135         	movff	?___fltol+1,_controller+1
  3723  003982  0E00               	movlw	0
  3724  003984  6E20               	movwf	___flmul@a^0,c
  3725  003986  0E00               	movlw	0
  3726  003988  6E21               	movwf	(___flmul@a+1)^0,c
  3727  00398A  0EA0               	movlw	160
  3728  00398C  6E22               	movwf	(___flmul@a+2)^0,c
  3729  00398E  0E40               	movlw	64
  3730  003990  6E23               	movwf	(___flmul@a+3)^0,c
  3731  003992  0101               	movlb	1	; () banked
  3732  003994  5136               	movf	(_controller+2)& (0+255),w,b
  3733  003996  5D34               	subwf	_controller& (0+255),w,b
  3734  003998  6E5C               	movwf	??_speedControl^0,c
  3735  00399A  5137               	movf	(_controller+3)& (0+255),w,b
  3736  00399C  5935               	subwfb	(_controller+1)& (0+255),w,b
  3737  00399E  6E5D               	movwf	(??_speedControl+1)^0,c
  3738  0039A0  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  3739  0039A4  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  3740  0039A8  0E00               	movlw	0
  3741  0039AA  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3742  0039AC  0EFF               	movlw	-1
  3743  0039AE  6E10               	movwf	(___xxtofl@val+2)^0,c
  3744  0039B0  6E11               	movwf	(___xxtofl@val+3)^0,c
  3745  0039B2  0E01               	movlw	1
  3746  0039B4  ECC7  F01B         	call	___xxtofl
  3747  0039B8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3748  0039BC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3749  0039C0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3750  0039C4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3751  0039C8  EC0C  F011         	call	___flmul	;wreg free
  3752  0039CC  C01C  F039         	movff	?___flmul,___fladd@a
  3753  0039D0  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  3754  0039D4  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  3755  0039D8  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  3756  0039DC  0E00               	movlw	0
  3757  0039DE  6E20               	movwf	___flmul@a^0,c
  3758  0039E0  0E00               	movlw	0
  3759  0039E2  6E21               	movwf	(___flmul@a+1)^0,c
  3760  0039E4  0E00               	movlw	0
  3761  0039E6  6E22               	movwf	(___flmul@a+2)^0,c
  3762  0039E8  0E3F               	movlw	63
  3763  0039EA  6E23               	movwf	(___flmul@a+3)^0,c
  3764  0039EC  C134  F00E         	movff	_controller,___xxtofl@val
  3765  0039F0  C135  F00F         	movff	_controller+1,___xxtofl@val+1
  3766  0039F4  0E00               	movlw	0
  3767  0039F6  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3768  0039F8  0EFF               	movlw	-1
  3769  0039FA  6E10               	movwf	(___xxtofl@val+2)^0,c
  3770  0039FC  6E11               	movwf	(___xxtofl@val+3)^0,c
  3771  0039FE  0E01               	movlw	1
  3772  003A00  ECC7  F01B         	call	___xxtofl
  3773  003A04  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3774  003A08  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3775  003A0C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3776  003A10  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3777  003A14  EC0C  F011         	call	___flmul	;wreg free
  3778  003A18  C01C  F035         	movff	?___flmul,___fladd@b
  3779  003A1C  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  3780  003A20  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  3781  003A24  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  3782  003A28  EC5B  F00C         	call	___fladd	;wreg free
  3783  003A2C  C035  F04E         	movff	?___fladd,___fltol@f1
  3784  003A30  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3785  003A34  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3786  003A38  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3787  003A3C  EC1E  F022         	call	___fltol	;wreg free
  3788  003A40  C04E  F138         	movff	?___fltol,_controller+4
  3789  003A44  C04F  F139         	movff	?___fltol+1,_controller+5
  3790  003A48                     
  3791                           ;fs_speed_controller.c: 49:     controller.lastError = controller.error;
  3792  003A48  C134  F136         	movff	_controller,_controller+2
  3793  003A4C  C135  F137         	movff	_controller+1,_controller+3
  3794  003A50                     
  3795                           ;fs_speed_controller.c: 51:    controller.leftMotorSpeed =(uint16_t) (150 - (controller.
      +                          motorSpeed));
  3796  003A50  0101               	movlb	1	; () banked
  3797  003A52  5138               	movf	(_controller+4)& (0+255),w,b
  3798  003A54  0896               	sublw	150
  3799  003A56  6F3A               	movwf	(_controller+6)& (0+255),b
  3800  003A58  5139               	movf	(_controller+5)& (0+255),w,b
  3801  003A5A  A0D8               	btfss	status,0,c
  3802  003A5C  2AE8               	incf	wreg,f,c
  3803  003A5E  0800               	sublw	0
  3804  003A60  6F3B               	movwf	(_controller+7)& (0+255),b
  3805  003A62                     
  3806                           ; BSR set to: 1
  3807                           ;fs_speed_controller.c: 52:    controller.rightMotorSpeed =(uint16_t) (150 + (controller
      +                          .motorSpeed));
  3808  003A62  0E96               	movlw	150
  3809  003A64  2538               	addwf	(_controller+4)& (0+255),w,b
  3810  003A66  6F3C               	movwf	(_controller+8)& (0+255),b
  3811  003A68  0E00               	movlw	0
  3812  003A6A  2139               	addwfc	(_controller+5)& (0+255),w,b
  3813  003A6C  6F3D               	movwf	(_controller+9)& (0+255),b
  3814  003A6E                     
  3815                           ; BSR set to: 1
  3816                           ;fs_speed_controller.c: 54:     if (controller.leftMotorSpeed < 300)
  3817  003A6E  0E2C               	movlw	44
  3818  003A70  5D3A               	subwf	(_controller+6)& (0+255),w,b
  3819  003A72  0E01               	movlw	1
  3820  003A74  593B               	subwfb	(_controller+7)& (0+255),w,b
  3821  003A76  B0D8               	btfsc	status,0,c
  3822  003A78  EF40  F01D         	goto	u6791
  3823  003A7C  EF42  F01D         	goto	u6790
  3824  003A80                     u6791:
  3825  003A80  EF46  F01D         	goto	l5810
  3826  003A84                     u6790:
  3827  003A84                     
  3828                           ; BSR set to: 1
  3829                           ;fs_speed_controller.c: 55:     {;fs_speed_controller.c: 56:         controller.leftMoto
      +                          rSpeed = 300;
  3830  003A84  0E01               	movlw	1
  3831  003A86  6F3B               	movwf	(_controller+7)& (0+255),b
  3832  003A88  0E2C               	movlw	44
  3833  003A8A  6F3A               	movwf	(_controller+6)& (0+255),b
  3834  003A8C                     l5810:
  3835                           
  3836                           ; BSR set to: 1
  3837                           ;fs_speed_controller.c: 59:     if (controller.rightMotorSpeed < 300)
  3838  003A8C  0E2C               	movlw	44
  3839  003A8E  5D3C               	subwf	(_controller+8)& (0+255),w,b
  3840  003A90  0E01               	movlw	1
  3841  003A92  593D               	subwfb	(_controller+9)& (0+255),w,b
  3842  003A94  B0D8               	btfsc	status,0,c
  3843  003A96  EF4F  F01D         	goto	u6801
  3844  003A9A  EF51  F01D         	goto	u6800
  3845  003A9E                     u6801:
  3846  003A9E  EF55  F01D         	goto	l5814
  3847  003AA2                     u6800:
  3848  003AA2                     
  3849                           ; BSR set to: 1
  3850                           ;fs_speed_controller.c: 60:     {;fs_speed_controller.c: 61:       controller.rightMotor
      +                          Speed = 300;
  3851  003AA2  0E01               	movlw	1
  3852  003AA4  6F3D               	movwf	(_controller+9)& (0+255),b
  3853  003AA6  0E2C               	movlw	44
  3854  003AA8  6F3C               	movwf	(_controller+8)& (0+255),b
  3855  003AAA                     l5814:
  3856                           
  3857                           ; BSR set to: 1
  3858                           ;fs_speed_controller.c: 64:     if (controller.leftMotorSpeed > 500)
  3859  003AAA  0EF5               	movlw	245
  3860  003AAC  5D3A               	subwf	(_controller+6)& (0+255),w,b
  3861  003AAE  0E01               	movlw	1
  3862  003AB0  593B               	subwfb	(_controller+7)& (0+255),w,b
  3863  003AB2  A0D8               	btfss	status,0,c
  3864  003AB4  EF5E  F01D         	goto	u6811
  3865  003AB8  EF60  F01D         	goto	u6810
  3866  003ABC                     u6811:
  3867  003ABC  EF64  F01D         	goto	l5818
  3868  003AC0                     u6810:
  3869  003AC0                     
  3870                           ; BSR set to: 1
  3871                           ;fs_speed_controller.c: 65:    {;fs_speed_controller.c: 66:         controller.leftMotor
      +                          Speed = 500;
  3872  003AC0  0E01               	movlw	1
  3873  003AC2  6F3B               	movwf	(_controller+7)& (0+255),b
  3874  003AC4  0EF4               	movlw	244
  3875  003AC6  6F3A               	movwf	(_controller+6)& (0+255),b
  3876  003AC8                     l5818:
  3877                           
  3878                           ; BSR set to: 1
  3879                           ;fs_speed_controller.c: 69:     if (controller.rightMotorSpeed > 500)
  3880  003AC8  0EF5               	movlw	245
  3881  003ACA  5D3C               	subwf	(_controller+8)& (0+255),w,b
  3882  003ACC  0E01               	movlw	1
  3883  003ACE  593D               	subwfb	(_controller+9)& (0+255),w,b
  3884  003AD0  A0D8               	btfss	status,0,c
  3885  003AD2  EF6D  F01D         	goto	u6821
  3886  003AD6  EF6F  F01D         	goto	u6820
  3887  003ADA                     u6821:
  3888  003ADA  EF73  F01D         	goto	l638
  3889  003ADE                     u6820:
  3890  003ADE                     
  3891                           ; BSR set to: 1
  3892                           ;fs_speed_controller.c: 70:     {;fs_speed_controller.c: 71:         controller.rightMot
      +                          orSpeed = 500;
  3893  003ADE  0E01               	movlw	1
  3894  003AE0  6F3D               	movwf	(_controller+9)& (0+255),b
  3895  003AE2  0EF4               	movlw	244
  3896  003AE4  6F3C               	movwf	(_controller+8)& (0+255),b
  3897  003AE6                     l638:
  3898                           
  3899                           ; BSR set to: 1
  3900  003AE6  0012               	return		;funcret
  3901  003AE8                     __end_of_speedControl:
  3902                           	callstack 0
  3903                           
  3904 ;; *************** function _scanAdcConversion *****************
  3905 ;; Defined at:
  3906 ;;		line 93 in file "fs_adc.c"
  3907 ;; Parameters:    Size  Location     Type
  3908 ;;		None
  3909 ;; Auto vars:     Size  Location     Type
  3910 ;;		None
  3911 ;; Return value:  Size  Location     Type
  3912 ;;                  1    wreg      void 
  3913 ;; Registers used:
  3914 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3915 ;; Tracked objects:
  3916 ;;		On entry : 0/0
  3917 ;;		On exit  : 0/0
  3918 ;;		Unchanged: 0/0
  3919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3920 ;;      Params:         0       0       0       0       0       0       0
  3921 ;;      Locals:         0       0       0       0       0       0       0
  3922 ;;      Temps:          2       0       0       0       0       0       0
  3923 ;;      Totals:         2       0       0       0       0       0       0
  3924 ;;Total ram usage:        2 bytes
  3925 ;; Hardware stack levels used:    1
  3926 ;; Hardware stack levels required when called:    2
  3927 ;; This function calls:
  3928 ;;		___fldiv
  3929 ;;		___flmul
  3930 ;;		___fltol
  3931 ;;		___xxtofl
  3932 ;;		_readAdcValue
  3933 ;; This function is called by:
  3934 ;;		_startMotor
  3935 ;; This function uses a non-reentrant model
  3936 ;;
  3937                           
  3938                           	psect	text13
  3939  001D76                     __ptext13:
  3940                           	callstack 0
  3941  001D76                     _scanAdcConversion:
  3942                           	callstack 24
  3943  001D76                     
  3944                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  3945  001D76  EFDD  F010         	goto	l5718
  3946  001D7A                     l5684:
  3947                           
  3948                           ; BSR set to: 1
  3949                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  3950  001D7A  0E00               	movlw	0
  3951  001D7C  EC19  F02B         	call	_readAdcValue
  3952  001D80  C001  F187         	movff	?_readAdcValue,_adc_raw_data
  3953  001D84  C002  F188         	movff	?_readAdcValue+1,_adc_raw_data+1
  3954  001D88                     
  3955                           ;fs_adc.c: 99:             convert_data.convert_channel_0 = (uint16_t)((adc_raw_data.cha
      +                          nnel_0*5.0)/1024.0);
  3956  001D88  0E00               	movlw	0
  3957  001D8A  6E39               	movwf	___fldiv@a^0,c
  3958  001D8C  0E00               	movlw	0
  3959  001D8E  6E3A               	movwf	(___fldiv@a+1)^0,c
  3960  001D90  0E80               	movlw	128
  3961  001D92  6E3B               	movwf	(___fldiv@a+2)^0,c
  3962  001D94  0E44               	movlw	68
  3963  001D96  6E3C               	movwf	(___fldiv@a+3)^0,c
  3964  001D98  0E00               	movlw	0
  3965  001D9A  6E20               	movwf	___flmul@a^0,c
  3966  001D9C  0E00               	movlw	0
  3967  001D9E  6E21               	movwf	(___flmul@a+1)^0,c
  3968  001DA0  0EA0               	movlw	160
  3969  001DA2  6E22               	movwf	(___flmul@a+2)^0,c
  3970  001DA4  0E40               	movlw	64
  3971  001DA6  6E23               	movwf	(___flmul@a+3)^0,c
  3972  001DA8  C187  F00E         	movff	_adc_raw_data,___xxtofl@val
  3973  001DAC  C188  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  3974  001DB0  6A10               	clrf	(___xxtofl@val+2)^0,c
  3975  001DB2  6A11               	clrf	(___xxtofl@val+3)^0,c
  3976  001DB4  0E00               	movlw	0
  3977  001DB6  ECC7  F01B         	call	___xxtofl
  3978  001DBA  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3979  001DBE  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3980  001DC2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3981  001DC6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3982  001DCA  EC0C  F011         	call	___flmul	;wreg free
  3983  001DCE  C01C  F035         	movff	?___flmul,___fldiv@b
  3984  001DD2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  3985  001DD6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  3986  001DDA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  3987  001DDE  EC2B  F015         	call	___fldiv	;wreg free
  3988  001DE2  C035  F04E         	movff	?___fldiv,___fltol@f1
  3989  001DE6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  3990  001DEA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  3991  001DEE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  3992  001DF2  EC1E  F022         	call	___fltol	;wreg free
  3993  001DF6  C04E  F100         	movff	?___fltol,_convert_data
  3994  001DFA  C04F  F101         	movff	?___fltol+1,_convert_data+1
  3995                           
  3996                           ;fs_adc.c: 102:         break;
  3997  001DFE  EF0B  F011         	goto	l76
  3998  001E02                     l5688:
  3999                           
  4000                           ; BSR set to: 1
  4001                           ;fs_adc.c: 105:             adc_raw_data.channel_1 = readAdcValue(1);
  4002  001E02  0E01               	movlw	1
  4003  001E04  EC19  F02B         	call	_readAdcValue
  4004  001E08  C001  F189         	movff	?_readAdcValue,_adc_raw_data+2
  4005  001E0C  C002  F18A         	movff	?_readAdcValue+1,_adc_raw_data+3
  4006  001E10                     
  4007                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint16_t)((adc_raw_data.ch
      +                          annel_1*5.0)/1024.0);
  4008  001E10  0E00               	movlw	0
  4009  001E12  6E39               	movwf	___fldiv@a^0,c
  4010  001E14  0E00               	movlw	0
  4011  001E16  6E3A               	movwf	(___fldiv@a+1)^0,c
  4012  001E18  0E80               	movlw	128
  4013  001E1A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4014  001E1C  0E44               	movlw	68
  4015  001E1E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4016  001E20  0E00               	movlw	0
  4017  001E22  6E20               	movwf	___flmul@a^0,c
  4018  001E24  0E00               	movlw	0
  4019  001E26  6E21               	movwf	(___flmul@a+1)^0,c
  4020  001E28  0EA0               	movlw	160
  4021  001E2A  6E22               	movwf	(___flmul@a+2)^0,c
  4022  001E2C  0E40               	movlw	64
  4023  001E2E  6E23               	movwf	(___flmul@a+3)^0,c
  4024  001E30  C189  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4025  001E34  C18A  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4026  001E38  6A10               	clrf	(___xxtofl@val+2)^0,c
  4027  001E3A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4028  001E3C  0E00               	movlw	0
  4029  001E3E  ECC7  F01B         	call	___xxtofl
  4030  001E42  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4031  001E46  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4032  001E4A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4033  001E4E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4034  001E52  EC0C  F011         	call	___flmul	;wreg free
  4035  001E56  C01C  F035         	movff	?___flmul,___fldiv@b
  4036  001E5A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4037  001E5E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4038  001E62  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4039  001E66  EC2B  F015         	call	___fldiv	;wreg free
  4040  001E6A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4041  001E6E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4042  001E72  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4043  001E76  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4044  001E7A  EC1E  F022         	call	___fltol	;wreg free
  4045  001E7E  C04E  F102         	movff	?___fltol,_convert_data+2
  4046  001E82  C04F  F103         	movff	?___fltol+1,_convert_data+3
  4047                           
  4048                           ;fs_adc.c: 109:         break;
  4049  001E86  EF0B  F011         	goto	l76
  4050  001E8A                     l5692:
  4051                           
  4052                           ; BSR set to: 1
  4053                           ;fs_adc.c: 112:             adc_raw_data.channel_2 = readAdcValue(2);
  4054  001E8A  0E02               	movlw	2
  4055  001E8C  EC19  F02B         	call	_readAdcValue
  4056  001E90  C001  F18B         	movff	?_readAdcValue,_adc_raw_data+4
  4057  001E94  C002  F18C         	movff	?_readAdcValue+1,_adc_raw_data+5
  4058  001E98                     
  4059                           ;fs_adc.c: 113:             convert_data.convert_channel_2 = (uint16_t)((adc_raw_data.ch
      +                          annel_2*5.0)/1024.0);
  4060  001E98  0E00               	movlw	0
  4061  001E9A  6E39               	movwf	___fldiv@a^0,c
  4062  001E9C  0E00               	movlw	0
  4063  001E9E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4064  001EA0  0E80               	movlw	128
  4065  001EA2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4066  001EA4  0E44               	movlw	68
  4067  001EA6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4068  001EA8  0E00               	movlw	0
  4069  001EAA  6E20               	movwf	___flmul@a^0,c
  4070  001EAC  0E00               	movlw	0
  4071  001EAE  6E21               	movwf	(___flmul@a+1)^0,c
  4072  001EB0  0EA0               	movlw	160
  4073  001EB2  6E22               	movwf	(___flmul@a+2)^0,c
  4074  001EB4  0E40               	movlw	64
  4075  001EB6  6E23               	movwf	(___flmul@a+3)^0,c
  4076  001EB8  C18B  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4077  001EBC  C18C  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4078  001EC0  6A10               	clrf	(___xxtofl@val+2)^0,c
  4079  001EC2  6A11               	clrf	(___xxtofl@val+3)^0,c
  4080  001EC4  0E00               	movlw	0
  4081  001EC6  ECC7  F01B         	call	___xxtofl
  4082  001ECA  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4083  001ECE  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4084  001ED2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4085  001ED6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4086  001EDA  EC0C  F011         	call	___flmul	;wreg free
  4087  001EDE  C01C  F035         	movff	?___flmul,___fldiv@b
  4088  001EE2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4089  001EE6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4090  001EEA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4091  001EEE  EC2B  F015         	call	___fldiv	;wreg free
  4092  001EF2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4093  001EF6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4094  001EFA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4095  001EFE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4096  001F02  EC1E  F022         	call	___fltol	;wreg free
  4097  001F06  C04E  F104         	movff	?___fltol,_convert_data+4
  4098  001F0A  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4099                           
  4100                           ;fs_adc.c: 116:         break;
  4101  001F0E  EF0B  F011         	goto	l76
  4102  001F12                     l5696:
  4103                           
  4104                           ; BSR set to: 1
  4105                           ;fs_adc.c: 119:             adc_raw_data.channel_3 = readAdcValue(3);
  4106  001F12  0E03               	movlw	3
  4107  001F14  EC19  F02B         	call	_readAdcValue
  4108  001F18  C001  F18D         	movff	?_readAdcValue,_adc_raw_data+6
  4109  001F1C  C002  F18E         	movff	?_readAdcValue+1,_adc_raw_data+7
  4110  001F20                     
  4111                           ;fs_adc.c: 120:             convert_data.convert_channel_3 = (uint16_t)((adc_raw_data.ch
      +                          annel_3*5.0)/1024.0);
  4112  001F20  0E00               	movlw	0
  4113  001F22  6E39               	movwf	___fldiv@a^0,c
  4114  001F24  0E00               	movlw	0
  4115  001F26  6E3A               	movwf	(___fldiv@a+1)^0,c
  4116  001F28  0E80               	movlw	128
  4117  001F2A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4118  001F2C  0E44               	movlw	68
  4119  001F2E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4120  001F30  0E00               	movlw	0
  4121  001F32  6E20               	movwf	___flmul@a^0,c
  4122  001F34  0E00               	movlw	0
  4123  001F36  6E21               	movwf	(___flmul@a+1)^0,c
  4124  001F38  0EA0               	movlw	160
  4125  001F3A  6E22               	movwf	(___flmul@a+2)^0,c
  4126  001F3C  0E40               	movlw	64
  4127  001F3E  6E23               	movwf	(___flmul@a+3)^0,c
  4128  001F40  C18D  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4129  001F44  C18E  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4130  001F48  6A10               	clrf	(___xxtofl@val+2)^0,c
  4131  001F4A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4132  001F4C  0E00               	movlw	0
  4133  001F4E  ECC7  F01B         	call	___xxtofl
  4134  001F52  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4135  001F56  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4136  001F5A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4137  001F5E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4138  001F62  EC0C  F011         	call	___flmul	;wreg free
  4139  001F66  C01C  F035         	movff	?___flmul,___fldiv@b
  4140  001F6A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4141  001F6E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4142  001F72  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4143  001F76  EC2B  F015         	call	___fldiv	;wreg free
  4144  001F7A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4145  001F7E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4146  001F82  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4147  001F86  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4148  001F8A  EC1E  F022         	call	___fltol	;wreg free
  4149  001F8E  C04E  F106         	movff	?___fltol,_convert_data+6
  4150  001F92  C04F  F107         	movff	?___fltol+1,_convert_data+7
  4151                           
  4152                           ;fs_adc.c: 123:         break;
  4153  001F96  EF0B  F011         	goto	l76
  4154  001F9A                     l5700:
  4155                           
  4156                           ; BSR set to: 1
  4157                           ;fs_adc.c: 126:             adc_raw_data.channel_4 = readAdcValue(4);
  4158  001F9A  0E04               	movlw	4
  4159  001F9C  EC19  F02B         	call	_readAdcValue
  4160  001FA0  C001  F18F         	movff	?_readAdcValue,_adc_raw_data+8
  4161  001FA4  C002  F190         	movff	?_readAdcValue+1,_adc_raw_data+9
  4162  001FA8                     
  4163                           ;fs_adc.c: 127:             convert_data.convert_channel_4 = (uint16_t)((adc_raw_data.ch
      +                          annel_4*5.0)/1024.0);
  4164  001FA8  0E00               	movlw	0
  4165  001FAA  6E39               	movwf	___fldiv@a^0,c
  4166  001FAC  0E00               	movlw	0
  4167  001FAE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4168  001FB0  0E80               	movlw	128
  4169  001FB2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4170  001FB4  0E44               	movlw	68
  4171  001FB6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4172  001FB8  0E00               	movlw	0
  4173  001FBA  6E20               	movwf	___flmul@a^0,c
  4174  001FBC  0E00               	movlw	0
  4175  001FBE  6E21               	movwf	(___flmul@a+1)^0,c
  4176  001FC0  0EA0               	movlw	160
  4177  001FC2  6E22               	movwf	(___flmul@a+2)^0,c
  4178  001FC4  0E40               	movlw	64
  4179  001FC6  6E23               	movwf	(___flmul@a+3)^0,c
  4180  001FC8  C18F  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4181  001FCC  C190  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4182  001FD0  6A10               	clrf	(___xxtofl@val+2)^0,c
  4183  001FD2  6A11               	clrf	(___xxtofl@val+3)^0,c
  4184  001FD4  0E00               	movlw	0
  4185  001FD6  ECC7  F01B         	call	___xxtofl
  4186  001FDA  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4187  001FDE  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4188  001FE2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4189  001FE6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4190  001FEA  EC0C  F011         	call	___flmul	;wreg free
  4191  001FEE  C01C  F035         	movff	?___flmul,___fldiv@b
  4192  001FF2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4193  001FF6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4194  001FFA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4195  001FFE  EC2B  F015         	call	___fldiv	;wreg free
  4196  002002  C035  F04E         	movff	?___fldiv,___fltol@f1
  4197  002006  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4198  00200A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4199  00200E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4200  002012  EC1E  F022         	call	___fltol	;wreg free
  4201  002016  C04E  F108         	movff	?___fltol,_convert_data+8
  4202  00201A  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4203                           
  4204                           ;fs_adc.c: 130:         break;
  4205  00201E  EF0B  F011         	goto	l76
  4206  002022                     l5704:
  4207                           
  4208                           ; BSR set to: 1
  4209                           ;fs_adc.c: 133:            adc_raw_data.channel_5 = readAdcValue(5);
  4210  002022  0E05               	movlw	5
  4211  002024  EC19  F02B         	call	_readAdcValue
  4212  002028  C001  F191         	movff	?_readAdcValue,_adc_raw_data+10
  4213  00202C  C002  F192         	movff	?_readAdcValue+1,_adc_raw_data+11
  4214  002030                     
  4215                           ;fs_adc.c: 134:            convert_data.convert_channel_5 = (uint16_t)((adc_raw_data.cha
      +                          nnel_5*5.0)/1024.0);
  4216  002030  0E00               	movlw	0
  4217  002032  6E39               	movwf	___fldiv@a^0,c
  4218  002034  0E00               	movlw	0
  4219  002036  6E3A               	movwf	(___fldiv@a+1)^0,c
  4220  002038  0E80               	movlw	128
  4221  00203A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4222  00203C  0E44               	movlw	68
  4223  00203E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4224  002040  0E00               	movlw	0
  4225  002042  6E20               	movwf	___flmul@a^0,c
  4226  002044  0E00               	movlw	0
  4227  002046  6E21               	movwf	(___flmul@a+1)^0,c
  4228  002048  0EA0               	movlw	160
  4229  00204A  6E22               	movwf	(___flmul@a+2)^0,c
  4230  00204C  0E40               	movlw	64
  4231  00204E  6E23               	movwf	(___flmul@a+3)^0,c
  4232  002050  C191  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4233  002054  C192  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4234  002058  6A10               	clrf	(___xxtofl@val+2)^0,c
  4235  00205A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4236  00205C  0E00               	movlw	0
  4237  00205E  ECC7  F01B         	call	___xxtofl
  4238  002062  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4239  002066  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4240  00206A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4241  00206E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4242  002072  EC0C  F011         	call	___flmul	;wreg free
  4243  002076  C01C  F035         	movff	?___flmul,___fldiv@b
  4244  00207A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4245  00207E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4246  002082  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4247  002086  EC2B  F015         	call	___fldiv	;wreg free
  4248  00208A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4249  00208E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4250  002092  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4251  002096  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4252  00209A  EC1E  F022         	call	___fltol	;wreg free
  4253  00209E  C04E  F10A         	movff	?___fltol,_convert_data+10
  4254  0020A2  C04F  F10B         	movff	?___fltol+1,_convert_data+11
  4255                           
  4256                           ;fs_adc.c: 137:         break;
  4257  0020A6  EF0B  F011         	goto	l76
  4258  0020AA                     l5708:
  4259                           
  4260                           ; BSR set to: 1
  4261                           ;fs_adc.c: 140:             adc_raw_data.channel_6 = readAdcValue(6);
  4262  0020AA  0E06               	movlw	6
  4263  0020AC  EC19  F02B         	call	_readAdcValue
  4264  0020B0  C001  F193         	movff	?_readAdcValue,_adc_raw_data+12
  4265  0020B4  C002  F194         	movff	?_readAdcValue+1,_adc_raw_data+13
  4266  0020B8                     
  4267                           ;fs_adc.c: 141:             convert_data.convert_channel_6 = (uint16_t)((adc_raw_data.ch
      +                          annel_6*5.0)/1024.0);
  4268  0020B8  0E00               	movlw	0
  4269  0020BA  6E39               	movwf	___fldiv@a^0,c
  4270  0020BC  0E00               	movlw	0
  4271  0020BE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4272  0020C0  0E80               	movlw	128
  4273  0020C2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4274  0020C4  0E44               	movlw	68
  4275  0020C6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4276  0020C8  0E00               	movlw	0
  4277  0020CA  6E20               	movwf	___flmul@a^0,c
  4278  0020CC  0E00               	movlw	0
  4279  0020CE  6E21               	movwf	(___flmul@a+1)^0,c
  4280  0020D0  0EA0               	movlw	160
  4281  0020D2  6E22               	movwf	(___flmul@a+2)^0,c
  4282  0020D4  0E40               	movlw	64
  4283  0020D6  6E23               	movwf	(___flmul@a+3)^0,c
  4284  0020D8  C193  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4285  0020DC  C194  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4286  0020E0  6A10               	clrf	(___xxtofl@val+2)^0,c
  4287  0020E2  6A11               	clrf	(___xxtofl@val+3)^0,c
  4288  0020E4  0E00               	movlw	0
  4289  0020E6  ECC7  F01B         	call	___xxtofl
  4290  0020EA  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4291  0020EE  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4292  0020F2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4293  0020F6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4294  0020FA  EC0C  F011         	call	___flmul	;wreg free
  4295  0020FE  C01C  F035         	movff	?___flmul,___fldiv@b
  4296  002102  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4297  002106  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4298  00210A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4299  00210E  EC2B  F015         	call	___fldiv	;wreg free
  4300  002112  C035  F04E         	movff	?___fldiv,___fltol@f1
  4301  002116  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4302  00211A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4303  00211E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4304  002122  EC1E  F022         	call	___fltol	;wreg free
  4305  002126  C04E  F10C         	movff	?___fltol,_convert_data+12
  4306  00212A  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4307                           
  4308                           ;fs_adc.c: 144:         break;
  4309  00212E  EF0B  F011         	goto	l76
  4310  002132                     l5712:
  4311                           
  4312                           ; BSR set to: 1
  4313                           ;fs_adc.c: 147:             adc_raw_data.channel_7 = readAdcValue(7);
  4314  002132  0E07               	movlw	7
  4315  002134  EC19  F02B         	call	_readAdcValue
  4316  002138  C001  F195         	movff	?_readAdcValue,_adc_raw_data+14
  4317  00213C  C002  F196         	movff	?_readAdcValue+1,_adc_raw_data+15
  4318  002140                     
  4319                           ;fs_adc.c: 148:             convert_data.convert_channel_7 = (uint16_t)((adc_raw_data.ch
      +                          annel_7*5.0)/1024.0);
  4320  002140  0E00               	movlw	0
  4321  002142  6E39               	movwf	___fldiv@a^0,c
  4322  002144  0E00               	movlw	0
  4323  002146  6E3A               	movwf	(___fldiv@a+1)^0,c
  4324  002148  0E80               	movlw	128
  4325  00214A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4326  00214C  0E44               	movlw	68
  4327  00214E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4328  002150  0E00               	movlw	0
  4329  002152  6E20               	movwf	___flmul@a^0,c
  4330  002154  0E00               	movlw	0
  4331  002156  6E21               	movwf	(___flmul@a+1)^0,c
  4332  002158  0EA0               	movlw	160
  4333  00215A  6E22               	movwf	(___flmul@a+2)^0,c
  4334  00215C  0E40               	movlw	64
  4335  00215E  6E23               	movwf	(___flmul@a+3)^0,c
  4336  002160  C195  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4337  002164  C196  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4338  002168  6A10               	clrf	(___xxtofl@val+2)^0,c
  4339  00216A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4340  00216C  0E00               	movlw	0
  4341  00216E  ECC7  F01B         	call	___xxtofl
  4342  002172  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4343  002176  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4344  00217A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4345  00217E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4346  002182  EC0C  F011         	call	___flmul	;wreg free
  4347  002186  C01C  F035         	movff	?___flmul,___fldiv@b
  4348  00218A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4349  00218E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4350  002192  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4351  002196  EC2B  F015         	call	___fldiv	;wreg free
  4352  00219A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4353  00219E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4354  0021A2  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4355  0021A6  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4356  0021AA  EC1E  F022         	call	___fltol	;wreg free
  4357  0021AE  C04E  F10E         	movff	?___fltol,_convert_data+14
  4358  0021B2  C04F  F10F         	movff	?___fltol+1,_convert_data+15
  4359                           
  4360                           ;fs_adc.c: 152:         break;
  4361  0021B6  EF0B  F011         	goto	l76
  4362  0021BA                     l5718:
  4363  0021BA  0101               	movlb	1	; () banked
  4364  0021BC  519C               	movf	(_timer_value+5)& (0+255),w,b
  4365  0021BE  6E58               	movwf	??_scanAdcConversion^0,c
  4366  0021C0  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4367                           
  4368                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4369                           ; Switch size 1, requested type "simple"
  4370                           ; Number of cases is 1, Range of values is 0 to 0
  4371                           ; switch strategies available:
  4372                           ; Name         Instructions Cycles
  4373                           ; simple_byte            4     3 (average)
  4374                           ;	Chosen strategy is simple_byte
  4375  0021C2  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4376  0021C4  0A00               	xorlw	0	; case 0
  4377  0021C6  B4D8               	btfsc	status,2,c
  4378  0021C8  EFE8  F010         	goto	l6578
  4379  0021CC  EF0B  F011         	goto	l76
  4380  0021D0                     l6578:
  4381                           
  4382                           ; BSR set to: 1
  4383                           ; Switch size 1, requested type "simple"
  4384                           ; Number of cases is 8, Range of values is 1 to 8
  4385                           ; switch strategies available:
  4386                           ; Name         Instructions Cycles
  4387                           ; simple_byte           25    13 (average)
  4388                           ;	Chosen strategy is simple_byte
  4389  0021D0  5058               	movf	??_scanAdcConversion^0,w,c
  4390  0021D2  0A01               	xorlw	1	; case 1
  4391  0021D4  B4D8               	btfsc	status,2,c
  4392  0021D6  EFBD  F00E         	goto	l5684
  4393  0021DA  0A03               	xorlw	3	; case 2
  4394  0021DC  B4D8               	btfsc	status,2,c
  4395  0021DE  EF01  F00F         	goto	l5688
  4396  0021E2  0A01               	xorlw	1	; case 3
  4397  0021E4  B4D8               	btfsc	status,2,c
  4398  0021E6  EF45  F00F         	goto	l5692
  4399  0021EA  0A07               	xorlw	7	; case 4
  4400  0021EC  B4D8               	btfsc	status,2,c
  4401  0021EE  EF89  F00F         	goto	l5696
  4402  0021F2  0A01               	xorlw	1	; case 5
  4403  0021F4  B4D8               	btfsc	status,2,c
  4404  0021F6  EFCD  F00F         	goto	l5700
  4405  0021FA  0A03               	xorlw	3	; case 6
  4406  0021FC  B4D8               	btfsc	status,2,c
  4407  0021FE  EF11  F010         	goto	l5704
  4408  002202  0A01               	xorlw	1	; case 7
  4409  002204  B4D8               	btfsc	status,2,c
  4410  002206  EF55  F010         	goto	l5708
  4411  00220A  0A0F               	xorlw	15	; case 8
  4412  00220C  B4D8               	btfsc	status,2,c
  4413  00220E  EF99  F010         	goto	l5712
  4414  002212  EF0B  F011         	goto	l76
  4415  002216                     l76:
  4416  002216  0012               	return		;funcret
  4417  002218                     __end_of_scanAdcConversion:
  4418                           	callstack 0
  4419                           
  4420 ;; *************** function _readAdcValue *****************
  4421 ;; Defined at:
  4422 ;;		line 34 in file "fs_adc.c"
  4423 ;; Parameters:    Size  Location     Type
  4424 ;;  adcChannel      1    wreg     unsigned char 
  4425 ;; Auto vars:     Size  Location     Type
  4426 ;;  adcChannel      1    4[COMRAM] unsigned char 
  4427 ;;  adcValue        2    5[COMRAM] unsigned short 
  4428 ;; Return value:  Size  Location     Type
  4429 ;;                  2    0[COMRAM] unsigned short 
  4430 ;; Registers used:
  4431 ;;		wreg, status,2, status,0
  4432 ;; Tracked objects:
  4433 ;;		On entry : 0/0
  4434 ;;		On exit  : 0/0
  4435 ;;		Unchanged: 0/0
  4436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4437 ;;      Params:         2       0       0       0       0       0       0
  4438 ;;      Locals:         3       0       0       0       0       0       0
  4439 ;;      Temps:          2       0       0       0       0       0       0
  4440 ;;      Totals:         7       0       0       0       0       0       0
  4441 ;;Total ram usage:        7 bytes
  4442 ;; Hardware stack levels used:    1
  4443 ;; Hardware stack levels required when called:    1
  4444 ;; This function calls:
  4445 ;;		Nothing
  4446 ;; This function is called by:
  4447 ;;		_scanAdcConversion
  4448 ;; This function uses a non-reentrant model
  4449 ;;
  4450                           
  4451                           	psect	text14
  4452  005632                     __ptext14:
  4453                           	callstack 0
  4454  005632                     _readAdcValue:
  4455                           	callstack 24
  4456                           
  4457                           ;incstack = 0
  4458                           ;readAdcValue@adcChannel stored from wreg
  4459  005632  6E05               	movwf	readAdcValue@adcChannel^0,c
  4460  005634                     
  4461                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  4462  005634  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  4463  005638  4603               	rlncf	??_readAdcValue^0,f,c
  4464  00563A  4603               	rlncf	??_readAdcValue^0,f,c
  4465  00563C  50C2               	movf	194,w,c	;volatile
  4466  00563E  1803               	xorwf	??_readAdcValue^0,w,c
  4467  005640  0B83               	andlw	-125
  4468  005642  1803               	xorwf	??_readAdcValue^0,w,c
  4469  005644  6EC2               	movwf	194,c	;volatile
  4470  005646                     
  4471                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  4472  005646  80C2               	bsf	194,0,c	;volatile
  4473  005648                     
  4474                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  4475  005648  82C2               	bsf	194,1,c	;volatile
  4476  00564A                     l57:
  4477  00564A  B2C2               	btfsc	194,1,c	;volatile
  4478  00564C  EF2A  F02B         	goto	u6381
  4479  005650  EF2C  F02B         	goto	u6380
  4480  005654                     u6381:
  4481  005654  EF25  F02B         	goto	l57
  4482  005658                     u6380:
  4483  005658                     
  4484                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  4485  005658  50C4               	movf	196,w,c	;volatile
  4486  00565A  6E04               	movwf	(??_readAdcValue+1)^0,c
  4487  00565C  6A03               	clrf	??_readAdcValue^0,c
  4488  00565E  50C3               	movf	195,w,c	;volatile
  4489  005660  2403               	addwf	??_readAdcValue^0,w,c
  4490  005662  6E06               	movwf	readAdcValue@adcValue^0,c
  4491  005664  0E00               	movlw	0
  4492  005666  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  4493  005668  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  4494  00566A                     
  4495                           ;fs_adc.c: 43:     return adcValue;
  4496  00566A  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  4497  00566E  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  4498  005672  0012               	return		;funcret
  4499  005674                     __end_of_readAdcValue:
  4500                           	callstack 0
  4501                           
  4502 ;; *************** function _calculatedAverageValue *****************
  4503 ;; Defined at:
  4504 ;;		line 162 in file "fs_adc.c"
  4505 ;; Parameters:    Size  Location     Type
  4506 ;;		None
  4507 ;; Auto vars:     Size  Location     Type
  4508 ;;		None
  4509 ;; Return value:  Size  Location     Type
  4510 ;;                  1    wreg      void 
  4511 ;; Registers used:
  4512 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4513 ;; Tracked objects:
  4514 ;;		On entry : 0/0
  4515 ;;		On exit  : 0/0
  4516 ;;		Unchanged: 0/0
  4517 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4518 ;;      Params:         0       0       0       0       0       0       0
  4519 ;;      Locals:         0       8       0       0       0       0       0
  4520 ;;      Temps:          2       0       0       0       0       0       0
  4521 ;;      Totals:         2       8       0       0       0       0       0
  4522 ;;Total ram usage:       10 bytes
  4523 ;; Hardware stack levels used:    1
  4524 ;; Hardware stack levels required when called:    2
  4525 ;; This function calls:
  4526 ;;		___fladd
  4527 ;;		___fldiv
  4528 ;;		___flmul
  4529 ;;		___fltol
  4530 ;;		___lldiv
  4531 ;;		___xxtofl
  4532 ;; This function is called by:
  4533 ;;		_startMotor
  4534 ;; This function uses a non-reentrant model
  4535 ;;
  4536                           
  4537                           	psect	text15
  4538  002642                     __ptext15:
  4539                           	callstack 0
  4540  002642                     _calculatedAverageValue:
  4541                           	callstack 24
  4542  002642                     
  4543                           ;fs_adc.c: 164:     driver_limit.pay_1 = 0;
  4544  002642  0E00               	movlw	0
  4545  002644  0101               	movlb	1	; () banked
  4546  002646  6F20               	movwf	_driver_limit& (0+255),b
  4547  002648  0E00               	movlw	0
  4548  00264A  6F21               	movwf	(_driver_limit+1)& (0+255),b
  4549  00264C  0E00               	movlw	0
  4550  00264E  6F22               	movwf	(_driver_limit+2)& (0+255),b
  4551  002650  0E00               	movlw	0
  4552  002652  6F23               	movwf	(_driver_limit+3)& (0+255),b
  4553                           
  4554                           ;fs_adc.c: 165:     driver_limit.payda = 0;
  4555  002654  0E00               	movlw	0
  4556  002656  6F2C               	movwf	(_driver_limit+12)& (0+255),b
  4557  002658  0E00               	movlw	0
  4558  00265A  6F2D               	movwf	(_driver_limit+13)& (0+255),b
  4559  00265C  0E00               	movlw	0
  4560  00265E  6F2E               	movwf	(_driver_limit+14)& (0+255),b
  4561  002660  0E00               	movlw	0
  4562  002662  6F2F               	movwf	(_driver_limit+15)& (0+255),b
  4563                           
  4564                           ;fs_adc.c: 166:     driver_limit.ortalama = 0;
  4565  002664  0E00               	movlw	0
  4566  002666  6F30               	movwf	(_driver_limit+16)& (0+255),b
  4567  002668  0E00               	movlw	0
  4568  00266A  6F31               	movwf	(_driver_limit+17)& (0+255),b
  4569  00266C  0E00               	movlw	0
  4570  00266E  6F32               	movwf	(_driver_limit+18)& (0+255),b
  4571  002670  0E00               	movlw	0
  4572  002672  6F33               	movwf	(_driver_limit+19)& (0+255),b
  4573  002674                     
  4574                           ; BSR set to: 1
  4575                           ;fs_adc.c: 169:    driver_limit.pay_1 =(uint32_t) ( (convert_data.convert_channel_0 *1.0
      +                          ) +
  4576  002674  0E00               	movlw	0
  4577  002676  6E20               	movwf	___flmul@a^0,c
  4578  002678  0E00               	movlw	0
  4579  00267A  6E21               	movwf	(___flmul@a+1)^0,c
  4580  00267C  0E7A               	movlw	122
  4581  00267E  6E22               	movwf	(___flmul@a+2)^0,c
  4582  002680  0E44               	movlw	68
  4583  002682  6E23               	movwf	(___flmul@a+3)^0,c
  4584  002684  C102  F00E         	movff	_convert_data+2,___xxtofl@val
  4585  002688  C103  F00F         	movff	_convert_data+3,___xxtofl@val+1
  4586  00268C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4587  00268E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4588  002690  0E00               	movlw	0
  4589  002692  ECC7  F01B         	call	___xxtofl
  4590  002696  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4591  00269A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4592  00269E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4593  0026A2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4594  0026A6  EC0C  F011         	call	___flmul	;wreg free
  4595  0026AA  C01C  F039         	movff	?___flmul,___fladd@a
  4596  0026AE  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4597  0026B2  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4598  0026B6  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4599  0026BA  0E00               	movlw	0
  4600  0026BC  6E20               	movwf	___flmul@a^0,c
  4601  0026BE  0E00               	movlw	0
  4602  0026C0  6E21               	movwf	(___flmul@a+1)^0,c
  4603  0026C2  0E80               	movlw	128
  4604  0026C4  6E22               	movwf	(___flmul@a+2)^0,c
  4605  0026C6  0E3F               	movlw	63
  4606  0026C8  6E23               	movwf	(___flmul@a+3)^0,c
  4607  0026CA  C100  F00E         	movff	_convert_data,___xxtofl@val
  4608  0026CE  C101  F00F         	movff	_convert_data+1,___xxtofl@val+1
  4609  0026D2  6A10               	clrf	(___xxtofl@val+2)^0,c
  4610  0026D4  6A11               	clrf	(___xxtofl@val+3)^0,c
  4611  0026D6  0E00               	movlw	0
  4612  0026D8  ECC7  F01B         	call	___xxtofl
  4613  0026DC  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4614  0026E0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4615  0026E4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4616  0026E8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4617  0026EC  EC0C  F011         	call	___flmul	;wreg free
  4618  0026F0  C01C  F035         	movff	?___flmul,___fladd@b
  4619  0026F4  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4620  0026F8  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4621  0026FC  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4622  002700  EC5B  F00C         	call	___fladd	;wreg free
  4623  002704  C035  F060         	movff	?___fladd,_calculatedAverageValue$3396
  4624  002708  C036  F061         	movff	?___fladd+1,_calculatedAverageValue$3396+1
  4625  00270C  C037  F062         	movff	?___fladd+2,_calculatedAverageValue$3396+2
  4626  002710  C038  F063         	movff	?___fladd+3,_calculatedAverageValue$3396+3
  4627  002714                     
  4628                           ;fs_adc.c: 169:    driver_limit.pay_1 =(uint32_t) ( (convert_data.convert_channel_0 *1.0
      +                          ) +
  4629  002714  0E00               	movlw	0
  4630  002716  6E20               	movwf	___flmul@a^0,c
  4631  002718  0E00               	movlw	0
  4632  00271A  6E21               	movwf	(___flmul@a+1)^0,c
  4633  00271C  0EFA               	movlw	250
  4634  00271E  6E22               	movwf	(___flmul@a+2)^0,c
  4635  002720  0E44               	movlw	68
  4636  002722  6E23               	movwf	(___flmul@a+3)^0,c
  4637  002724  C104  F00E         	movff	_convert_data+4,___xxtofl@val
  4638  002728  C105  F00F         	movff	_convert_data+5,___xxtofl@val+1
  4639  00272C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4640  00272E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4641  002730  0E00               	movlw	0
  4642  002732  ECC7  F01B         	call	___xxtofl
  4643  002736  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4644  00273A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4645  00273E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4646  002742  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4647  002746  EC0C  F011         	call	___flmul	;wreg free
  4648  00274A  C01C  F039         	movff	?___flmul,___fladd@a
  4649  00274E  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4650  002752  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4651  002756  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4652  00275A  C060  F035         	movff	_calculatedAverageValue$3396,___fladd@b
  4653  00275E  C061  F036         	movff	_calculatedAverageValue$3396+1,___fladd@b+1
  4654  002762  C062  F037         	movff	_calculatedAverageValue$3396+2,___fladd@b+2
  4655  002766  C063  F038         	movff	_calculatedAverageValue$3396+3,___fladd@b+3
  4656  00276A  EC5B  F00C         	call	___fladd	;wreg free
  4657  00276E  C035  F064         	movff	?___fladd,_calculatedAverageValue$3397
  4658  002772  C036  F065         	movff	?___fladd+1,_calculatedAverageValue$3397+1
  4659  002776  C037  F066         	movff	?___fladd+2,_calculatedAverageValue$3397+2
  4660  00277A  C038  F067         	movff	?___fladd+3,_calculatedAverageValue$3397+3
  4661  00277E                     
  4662                           ;fs_adc.c: 169:    driver_limit.pay_1 =(uint32_t) ( (convert_data.convert_channel_0 *1.0
      +                          ) +
  4663  00277E  0E00               	movlw	0
  4664  002780  6E20               	movwf	___flmul@a^0,c
  4665  002782  0E80               	movlw	128
  4666  002784  6E21               	movwf	(___flmul@a+1)^0,c
  4667  002786  0E3B               	movlw	59
  4668  002788  6E22               	movwf	(___flmul@a+2)^0,c
  4669  00278A  0E45               	movlw	69
  4670  00278C  6E23               	movwf	(___flmul@a+3)^0,c
  4671  00278E  C106  F00E         	movff	_convert_data+6,___xxtofl@val
  4672  002792  C107  F00F         	movff	_convert_data+7,___xxtofl@val+1
  4673  002796  6A10               	clrf	(___xxtofl@val+2)^0,c
  4674  002798  6A11               	clrf	(___xxtofl@val+3)^0,c
  4675  00279A  0E00               	movlw	0
  4676  00279C  ECC7  F01B         	call	___xxtofl
  4677  0027A0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4678  0027A4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4679  0027A8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4680  0027AC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4681  0027B0  EC0C  F011         	call	___flmul	;wreg free
  4682  0027B4  C01C  F039         	movff	?___flmul,___fladd@a
  4683  0027B8  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4684  0027BC  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4685  0027C0  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4686  0027C4  C064  F035         	movff	_calculatedAverageValue$3397,___fladd@b
  4687  0027C8  C065  F036         	movff	_calculatedAverageValue$3397+1,___fladd@b+1
  4688  0027CC  C066  F037         	movff	_calculatedAverageValue$3397+2,___fladd@b+2
  4689  0027D0  C067  F038         	movff	_calculatedAverageValue$3397+3,___fladd@b+3
  4690  0027D4  EC5B  F00C         	call	___fladd	;wreg free
  4691  0027D8  C035  F04E         	movff	?___fladd,___fltol@f1
  4692  0027DC  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4693  0027E0  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4694  0027E4  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4695  0027E8  EC1E  F022         	call	___fltol	;wreg free
  4696  0027EC  C04E  F120         	movff	?___fltol,_driver_limit
  4697  0027F0  C04F  F121         	movff	?___fltol+1,_driver_limit+1
  4698  0027F4  C050  F122         	movff	?___fltol+2,_driver_limit+2
  4699  0027F8  C051  F123         	movff	?___fltol+3,_driver_limit+3
  4700  0027FC                     
  4701                           ;fs_adc.c: 174:    driver_limit.pay_2 = (uint32_t) ( (convert_data.convert_channel_4 * 4
      +                          000.0) +
  4702  0027FC  0E00               	movlw	0
  4703  0027FE  6E20               	movwf	___flmul@a^0,c
  4704  002800  0E40               	movlw	64
  4705  002802  6E21               	movwf	(___flmul@a+1)^0,c
  4706  002804  0E9C               	movlw	156
  4707  002806  6E22               	movwf	(___flmul@a+2)^0,c
  4708  002808  0E45               	movlw	69
  4709  00280A  6E23               	movwf	(___flmul@a+3)^0,c
  4710  00280C  C10A  F00E         	movff	_convert_data+10,___xxtofl@val
  4711  002810  C10B  F00F         	movff	_convert_data+11,___xxtofl@val+1
  4712  002814  6A10               	clrf	(___xxtofl@val+2)^0,c
  4713  002816  6A11               	clrf	(___xxtofl@val+3)^0,c
  4714  002818  0E00               	movlw	0
  4715  00281A  ECC7  F01B         	call	___xxtofl
  4716  00281E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4717  002822  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4718  002826  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4719  00282A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4720  00282E  EC0C  F011         	call	___flmul	;wreg free
  4721  002832  C01C  F039         	movff	?___flmul,___fladd@a
  4722  002836  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4723  00283A  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4724  00283E  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4725  002842  0E00               	movlw	0
  4726  002844  6E20               	movwf	___flmul@a^0,c
  4727  002846  0E00               	movlw	0
  4728  002848  6E21               	movwf	(___flmul@a+1)^0,c
  4729  00284A  0E7A               	movlw	122
  4730  00284C  6E22               	movwf	(___flmul@a+2)^0,c
  4731  00284E  0E45               	movlw	69
  4732  002850  6E23               	movwf	(___flmul@a+3)^0,c
  4733  002852  C108  F00E         	movff	_convert_data+8,___xxtofl@val
  4734  002856  C109  F00F         	movff	_convert_data+9,___xxtofl@val+1
  4735  00285A  6A10               	clrf	(___xxtofl@val+2)^0,c
  4736  00285C  6A11               	clrf	(___xxtofl@val+3)^0,c
  4737  00285E  0E00               	movlw	0
  4738  002860  ECC7  F01B         	call	___xxtofl
  4739  002864  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4740  002868  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4741  00286C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4742  002870  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4743  002874  EC0C  F011         	call	___flmul	;wreg free
  4744  002878  C01C  F035         	movff	?___flmul,___fladd@b
  4745  00287C  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4746  002880  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4747  002884  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4748  002888  EC5B  F00C         	call	___fladd	;wreg free
  4749  00288C  C035  F060         	movff	?___fladd,_calculatedAverageValue$3396
  4750  002890  C036  F061         	movff	?___fladd+1,_calculatedAverageValue$3396+1
  4751  002894  C037  F062         	movff	?___fladd+2,_calculatedAverageValue$3396+2
  4752  002898  C038  F063         	movff	?___fladd+3,_calculatedAverageValue$3396+3
  4753  00289C                     
  4754                           ;fs_adc.c: 174:    driver_limit.pay_2 = (uint32_t) ( (convert_data.convert_channel_4 * 4
      +                          000.0) +
  4755  00289C  0E00               	movlw	0
  4756  00289E  6E20               	movwf	___flmul@a^0,c
  4757  0028A0  0E80               	movlw	128
  4758  0028A2  6E21               	movwf	(___flmul@a+1)^0,c
  4759  0028A4  0EBB               	movlw	187
  4760  0028A6  6E22               	movwf	(___flmul@a+2)^0,c
  4761  0028A8  0E45               	movlw	69
  4762  0028AA  6E23               	movwf	(___flmul@a+3)^0,c
  4763  0028AC  C10C  F00E         	movff	_convert_data+12,___xxtofl@val
  4764  0028B0  C10D  F00F         	movff	_convert_data+13,___xxtofl@val+1
  4765  0028B4  6A10               	clrf	(___xxtofl@val+2)^0,c
  4766  0028B6  6A11               	clrf	(___xxtofl@val+3)^0,c
  4767  0028B8  0E00               	movlw	0
  4768  0028BA  ECC7  F01B         	call	___xxtofl
  4769  0028BE  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4770  0028C2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4771  0028C6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4772  0028CA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4773  0028CE  EC0C  F011         	call	___flmul	;wreg free
  4774  0028D2  C01C  F039         	movff	?___flmul,___fladd@a
  4775  0028D6  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4776  0028DA  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4777  0028DE  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4778  0028E2  C060  F035         	movff	_calculatedAverageValue$3396,___fladd@b
  4779  0028E6  C061  F036         	movff	_calculatedAverageValue$3396+1,___fladd@b+1
  4780  0028EA  C062  F037         	movff	_calculatedAverageValue$3396+2,___fladd@b+2
  4781  0028EE  C063  F038         	movff	_calculatedAverageValue$3396+3,___fladd@b+3
  4782  0028F2  EC5B  F00C         	call	___fladd	;wreg free
  4783  0028F6  C035  F064         	movff	?___fladd,_calculatedAverageValue$3397
  4784  0028FA  C036  F065         	movff	?___fladd+1,_calculatedAverageValue$3397+1
  4785  0028FE  C037  F066         	movff	?___fladd+2,_calculatedAverageValue$3397+2
  4786  002902  C038  F067         	movff	?___fladd+3,_calculatedAverageValue$3397+3
  4787  002906                     
  4788                           ;fs_adc.c: 174:    driver_limit.pay_2 = (uint32_t) ( (convert_data.convert_channel_4 * 4
      +                          000.0) +
  4789  002906  0E00               	movlw	0
  4790  002908  6E20               	movwf	___flmul@a^0,c
  4791  00290A  0EC0               	movlw	192
  4792  00290C  6E21               	movwf	(___flmul@a+1)^0,c
  4793  00290E  0EDA               	movlw	218
  4794  002910  6E22               	movwf	(___flmul@a+2)^0,c
  4795  002912  0E45               	movlw	69
  4796  002914  6E23               	movwf	(___flmul@a+3)^0,c
  4797  002916  C10E  F00E         	movff	_convert_data+14,___xxtofl@val
  4798  00291A  C10F  F00F         	movff	_convert_data+15,___xxtofl@val+1
  4799  00291E  6A10               	clrf	(___xxtofl@val+2)^0,c
  4800  002920  6A11               	clrf	(___xxtofl@val+3)^0,c
  4801  002922  0E00               	movlw	0
  4802  002924  ECC7  F01B         	call	___xxtofl
  4803  002928  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4804  00292C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4805  002930  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4806  002934  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4807  002938  EC0C  F011         	call	___flmul	;wreg free
  4808  00293C  C01C  F039         	movff	?___flmul,___fladd@a
  4809  002940  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4810  002944  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4811  002948  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4812  00294C  C064  F035         	movff	_calculatedAverageValue$3397,___fladd@b
  4813  002950  C065  F036         	movff	_calculatedAverageValue$3397+1,___fladd@b+1
  4814  002954  C066  F037         	movff	_calculatedAverageValue$3397+2,___fladd@b+2
  4815  002958  C067  F038         	movff	_calculatedAverageValue$3397+3,___fladd@b+3
  4816  00295C  EC5B  F00C         	call	___fladd	;wreg free
  4817  002960  C035  F04E         	movff	?___fladd,___fltol@f1
  4818  002964  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4819  002968  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4820  00296C  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4821  002970  EC1E  F022         	call	___fltol	;wreg free
  4822  002974  C04E  F124         	movff	?___fltol,_driver_limit+4
  4823  002978  C04F  F125         	movff	?___fltol+1,_driver_limit+5
  4824  00297C  C050  F126         	movff	?___fltol+2,_driver_limit+6
  4825  002980  C051  F127         	movff	?___fltol+3,_driver_limit+7
  4826  002984                     
  4827                           ;fs_adc.c: 179:    driver_limit.total_pay = (uint32_t)(driver_limit.pay_1+driver_limit.p
      +                          ay_2);
  4828  002984  0101               	movlb	1	; () banked
  4829  002986  5120               	movf	_driver_limit& (0+255),w,b
  4830  002988  2524               	addwf	(_driver_limit+4)& (0+255),w,b
  4831  00298A  6F28               	movwf	(_driver_limit+8)& (0+255),b
  4832  00298C  5121               	movf	(_driver_limit+1)& (0+255),w,b
  4833  00298E  2125               	addwfc	(_driver_limit+5)& (0+255),w,b
  4834  002990  6F29               	movwf	(_driver_limit+9)& (0+255),b
  4835  002992  5122               	movf	(_driver_limit+2)& (0+255),w,b
  4836  002994  2126               	addwfc	(_driver_limit+6)& (0+255),w,b
  4837  002996  6F2A               	movwf	(_driver_limit+10)& (0+255),b
  4838  002998  5123               	movf	(_driver_limit+3)& (0+255),w,b
  4839  00299A  2127               	addwfc	(_driver_limit+7)& (0+255),w,b
  4840  00299C  6F2B               	movwf	(_driver_limit+11)& (0+255),b
  4841  00299E                     
  4842                           ; BSR set to: 1
  4843                           ;fs_adc.c: 181:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  4844  00299E  5104               	movf	(_convert_data+4)& (0+255),w,b
  4845  0029A0  2502               	addwf	(_convert_data+2)& (0+255),w,b
  4846  0029A2  6E58               	movwf	??_calculatedAverageValue^0,c
  4847  0029A4  5105               	movf	(_convert_data+5)& (0+255),w,b
  4848  0029A6  2103               	addwfc	(_convert_data+3)& (0+255),w,b
  4849  0029A8  6E59               	movwf	(??_calculatedAverageValue+1)^0,c
  4850  0029AA  5106               	movf	(_convert_data+6)& (0+255),w,b
  4851  0029AC  2658               	addwf	??_calculatedAverageValue^0,f,c
  4852  0029AE  5107               	movf	(_convert_data+7)& (0+255),w,b
  4853  0029B0  2259               	addwfc	(??_calculatedAverageValue+1)^0,f,c
  4854  0029B2  5108               	movf	(_convert_data+8)& (0+255),w,b
  4855  0029B4  2658               	addwf	??_calculatedAverageValue^0,f,c
  4856  0029B6  5109               	movf	(_convert_data+9)& (0+255),w,b
  4857  0029B8  2259               	addwfc	(??_calculatedAverageValue+1)^0,f,c
  4858  0029BA  510A               	movf	(_convert_data+10)& (0+255),w,b
  4859  0029BC  2658               	addwf	??_calculatedAverageValue^0,f,c
  4860  0029BE  510B               	movf	(_convert_data+11)& (0+255),w,b
  4861  0029C0  2259               	addwfc	(??_calculatedAverageValue+1)^0,f,c
  4862  0029C2  510C               	movf	(_convert_data+12)& (0+255),w,b
  4863  0029C4  2658               	addwf	??_calculatedAverageValue^0,f,c
  4864  0029C6  510D               	movf	(_convert_data+13)& (0+255),w,b
  4865  0029C8  2259               	addwfc	(??_calculatedAverageValue+1)^0,f,c
  4866  0029CA  510E               	movf	(_convert_data+14)& (0+255),w,b
  4867  0029CC  2658               	addwf	??_calculatedAverageValue^0,f,c
  4868  0029CE  510F               	movf	(_convert_data+15)& (0+255),w,b
  4869  0029D0  2259               	addwfc	(??_calculatedAverageValue+1)^0,f,c
  4870  0029D2  5100               	movf	_convert_data& (0+255),w,b
  4871  0029D4  2658               	addwf	??_calculatedAverageValue^0,f,c
  4872  0029D6  5101               	movf	(_convert_data+1)& (0+255),w,b
  4873  0029D8  2259               	addwfc	(??_calculatedAverageValue+1)^0,f,c
  4874  0029DA  C058  F12C         	movff	??_calculatedAverageValue,_driver_limit+12
  4875  0029DE  C059  F12D         	movff	??_calculatedAverageValue+1,_driver_limit+13
  4876  0029E2  6B2E               	clrf	(_driver_limit+14)& (0+255),b
  4877  0029E4  6B2F               	clrf	(_driver_limit+15)& (0+255),b
  4878  0029E6                     
  4879                           ; BSR set to: 1
  4880                           ;fs_adc.c: 186:     driver_limit.ortalama = (float)((driver_limit.total_pay/driver_limit
      +                          .payda)/10.0);
  4881  0029E6  C12C  F005         	movff	_driver_limit+12,___lldiv@divisor
  4882  0029EA  C12D  F006         	movff	_driver_limit+13,___lldiv@divisor+1
  4883  0029EE  C12E  F007         	movff	_driver_limit+14,___lldiv@divisor+2
  4884  0029F2  C12F  F008         	movff	_driver_limit+15,___lldiv@divisor+3
  4885  0029F6  C128  F001         	movff	_driver_limit+8,___lldiv@dividend
  4886  0029FA  C129  F002         	movff	_driver_limit+9,___lldiv@dividend+1
  4887  0029FE  C12A  F003         	movff	_driver_limit+10,___lldiv@dividend+2
  4888  002A02  C12B  F004         	movff	_driver_limit+11,___lldiv@dividend+3
  4889  002A06  EC1F  F027         	call	___lldiv	;wreg free
  4890  002A0A  C001  F00E         	movff	?___lldiv,___xxtofl@val
  4891  002A0E  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  4892  002A12  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  4893  002A16  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  4894  002A1A  0E00               	movlw	0
  4895  002A1C  ECC7  F01B         	call	___xxtofl
  4896  002A20  C00E  F035         	movff	?___xxtofl,___fldiv@b
  4897  002A24  C00F  F036         	movff	?___xxtofl+1,___fldiv@b+1
  4898  002A28  C010  F037         	movff	?___xxtofl+2,___fldiv@b+2
  4899  002A2C  C011  F038         	movff	?___xxtofl+3,___fldiv@b+3
  4900  002A30  0E00               	movlw	0
  4901  002A32  6E39               	movwf	___fldiv@a^0,c
  4902  002A34  0E00               	movlw	0
  4903  002A36  6E3A               	movwf	(___fldiv@a+1)^0,c
  4904  002A38  0E20               	movlw	32
  4905  002A3A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4906  002A3C  0E41               	movlw	65
  4907  002A3E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4908  002A40  EC2B  F015         	call	___fldiv	;wreg free
  4909  002A44  C035  F130         	movff	?___fldiv,_driver_limit+16
  4910  002A48  C036  F131         	movff	?___fldiv+1,_driver_limit+17
  4911  002A4C  C037  F132         	movff	?___fldiv+2,_driver_limit+18
  4912  002A50  C038  F133         	movff	?___fldiv+3,_driver_limit+19
  4913  002A54  0012               	return		;funcret
  4914  002A56                     __end_of_calculatedAverageValue:
  4915                           	callstack 0
  4916                           
  4917 ;; *************** function ___lldiv *****************
  4918 ;; Defined at:
  4919 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  4920 ;; Parameters:    Size  Location     Type
  4921 ;;  dividend        4    0[COMRAM] unsigned long 
  4922 ;;  divisor         4    4[COMRAM] unsigned long 
  4923 ;; Auto vars:     Size  Location     Type
  4924 ;;  quotient        4    8[COMRAM] unsigned long 
  4925 ;;  counter         1   12[COMRAM] unsigned char 
  4926 ;; Return value:  Size  Location     Type
  4927 ;;                  4    0[COMRAM] unsigned long 
  4928 ;; Registers used:
  4929 ;;		wreg, status,2, status,0
  4930 ;; Tracked objects:
  4931 ;;		On entry : 0/0
  4932 ;;		On exit  : 0/0
  4933 ;;		Unchanged: 0/0
  4934 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4935 ;;      Params:         8       0       0       0       0       0       0
  4936 ;;      Locals:         5       0       0       0       0       0       0
  4937 ;;      Temps:          0       0       0       0       0       0       0
  4938 ;;      Totals:        13       0       0       0       0       0       0
  4939 ;;Total ram usage:       13 bytes
  4940 ;; Hardware stack levels used:    1
  4941 ;; Hardware stack levels required when called:    1
  4942 ;; This function calls:
  4943 ;;		Nothing
  4944 ;; This function is called by:
  4945 ;;		_calculatedAverageValue
  4946 ;; This function uses a non-reentrant model
  4947 ;;
  4948                           
  4949                           	psect	text16
  4950  004E3E                     __ptext16:
  4951                           	callstack 0
  4952  004E3E                     ___lldiv:
  4953                           	callstack 24
  4954  004E3E  0E00               	movlw	0
  4955  004E40  6E09               	movwf	___lldiv@quotient^0,c
  4956  004E42  0E00               	movlw	0
  4957  004E44  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  4958  004E46  0E00               	movlw	0
  4959  004E48  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  4960  004E4A  0E00               	movlw	0
  4961  004E4C  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  4962  004E4E  5005               	movf	___lldiv@divisor^0,w,c
  4963  004E50  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  4964  004E52  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  4965  004E54  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  4966  004E56  B4D8               	btfsc	status,2,c
  4967  004E58  EF30  F027         	goto	u6431
  4968  004E5C  EF32  F027         	goto	u6430
  4969  004E60                     u6431:
  4970  004E60  EF68  F027         	goto	l730
  4971  004E64                     u6430:
  4972  004E64  0E01               	movlw	1
  4973  004E66  6E0D               	movwf	___lldiv@counter^0,c
  4974  004E68  EF3C  F027         	goto	l5504
  4975  004E6C                     l5502:
  4976  004E6C  90D8               	bcf	status,0,c
  4977  004E6E  3605               	rlcf	___lldiv@divisor^0,f,c
  4978  004E70  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  4979  004E72  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  4980  004E74  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  4981  004E76  2A0D               	incf	___lldiv@counter^0,f,c
  4982  004E78                     l5504:
  4983  004E78  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  4984  004E7A  EF41  F027         	goto	u6441
  4985  004E7E  EF43  F027         	goto	u6440
  4986  004E82                     u6441:
  4987  004E82  EF36  F027         	goto	l5502
  4988  004E86                     u6440:
  4989  004E86                     l5506:
  4990  004E86  90D8               	bcf	status,0,c
  4991  004E88  3609               	rlcf	___lldiv@quotient^0,f,c
  4992  004E8A  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  4993  004E8C  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  4994  004E8E  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  4995  004E90  5005               	movf	___lldiv@divisor^0,w,c
  4996  004E92  5C01               	subwf	___lldiv@dividend^0,w,c
  4997  004E94  5006               	movf	(___lldiv@divisor+1)^0,w,c
  4998  004E96  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  4999  004E98  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5000  004E9A  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5001  004E9C  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5002  004E9E  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5003  004EA0  A0D8               	btfss	status,0,c
  5004  004EA2  EF55  F027         	goto	u6451
  5005  004EA6  EF57  F027         	goto	u6450
  5006  004EAA                     u6451:
  5007  004EAA  EF60  F027         	goto	l5514
  5008  004EAE                     u6450:
  5009  004EAE  5005               	movf	___lldiv@divisor^0,w,c
  5010  004EB0  5E01               	subwf	___lldiv@dividend^0,f,c
  5011  004EB2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5012  004EB4  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5013  004EB6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5014  004EB8  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5015  004EBA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5016  004EBC  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5017  004EBE  8009               	bsf	___lldiv@quotient^0,0,c
  5018  004EC0                     l5514:
  5019  004EC0  90D8               	bcf	status,0,c
  5020  004EC2  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5021  004EC4  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5022  004EC6  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5023  004EC8  3205               	rrcf	___lldiv@divisor^0,f,c
  5024  004ECA  2E0D               	decfsz	___lldiv@counter^0,f,c
  5025  004ECC  EF43  F027         	goto	l5506
  5026  004ED0                     l730:
  5027  004ED0  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5028  004ED4  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5029  004ED8  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5030  004EDC  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5031  004EE0  0012               	return		;funcret
  5032  004EE2                     __end_of___lldiv:
  5033                           	callstack 0
  5034                           
  5035 ;; *************** function _exitLine *****************
  5036 ;; Defined at:
  5037 ;;		line 653 in file "fs_menu_controller.c"
  5038 ;; Parameters:    Size  Location     Type
  5039 ;;		None
  5040 ;; Auto vars:     Size  Location     Type
  5041 ;;		None
  5042 ;; Return value:  Size  Location     Type
  5043 ;;                  1    wreg      void 
  5044 ;; Registers used:
  5045 ;;		None
  5046 ;; Tracked objects:
  5047 ;;		On entry : 0/0
  5048 ;;		On exit  : 0/0
  5049 ;;		Unchanged: 0/0
  5050 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5051 ;;      Params:         0       0       0       0       0       0       0
  5052 ;;      Locals:         0       0       0       0       0       0       0
  5053 ;;      Temps:          0       0       0       0       0       0       0
  5054 ;;      Totals:         0       0       0       0       0       0       0
  5055 ;;Total ram usage:        0 bytes
  5056 ;; Hardware stack levels used:    1
  5057 ;; Hardware stack levels required when called:    1
  5058 ;; This function calls:
  5059 ;;		Nothing
  5060 ;; This function is called by:
  5061 ;;		_stateMachine
  5062 ;; This function uses a non-reentrant model
  5063 ;;
  5064                           
  5065                           	psect	text17
  5066  005A70                     __ptext17:
  5067                           	callstack 0
  5068  005A70                     _exitLine:
  5069                           	callstack 27
  5070  005A70  0012               	return		;funcret
  5071  005A72                     __end_of_exitLine:
  5072                           	callstack 0
  5073                           
  5074 ;; *************** function _driverTimeSettingMenu *****************
  5075 ;; Defined at:
  5076 ;;		line 599 in file "fs_menu_controller.c"
  5077 ;; Parameters:    Size  Location     Type
  5078 ;;		None
  5079 ;; Auto vars:     Size  Location     Type
  5080 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  5081 ;; Return value:  Size  Location     Type
  5082 ;;                  1    wreg      void 
  5083 ;; Registers used:
  5084 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5085 ;; Tracked objects:
  5086 ;;		On entry : 0/0
  5087 ;;		On exit  : 0/0
  5088 ;;		Unchanged: 0/0
  5089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5090 ;;      Params:         0       0       0       0       0       0       0
  5091 ;;      Locals:         0      16       0       0       0       0       0
  5092 ;;      Temps:          0       0       0       0       0       0       0
  5093 ;;      Totals:         0      16       0       0       0       0       0
  5094 ;;Total ram usage:       16 bytes
  5095 ;; Hardware stack levels used:    1
  5096 ;; Hardware stack levels required when called:    9
  5097 ;; This function calls:
  5098 ;;		_eepromWrite
  5099 ;;		_lcdSetCursor
  5100 ;;		_lcdWriteString
  5101 ;;		_sprintf
  5102 ;;		_stopMotor
  5103 ;; This function is called by:
  5104 ;;		_stateMachine
  5105 ;; This function uses a non-reentrant model
  5106 ;;
  5107                           
  5108                           	psect	text18
  5109  0040FC                     __ptext18:
  5110                           	callstack 0
  5111  0040FC                     _driverTimeSettingMenu:
  5112                           	callstack 19
  5113  0040FC                     
  5114                           ;fs_menu_controller.c: 601:     char textCursor2[16] = {0};
  5115  0040FC  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  5116  004100  0E0F               	movlw	15
  5117  004102                     u7061:
  5118  004102  6ADE               	clrf	postinc2,c
  5119  004104  06E8               	decf	wreg,f,c
  5120  004106  E2FD               	bc	u7061
  5121  004108                     
  5122                           ;fs_menu_controller.c: 603:     stopMotor();
  5123  004108  ECB8  F02B         	call	_stopMotor	;wreg free
  5124  00410C                     
  5125                           ;fs_menu_controller.c: 605:     if (menu_flags.menu_input_flag == 1)
  5126  00410C  0101               	movlb	1	; () banked
  5127  00410E  059F               	decf	_menu_flags& (0+255),w,b
  5128  004110  A4D8               	btfss	status,2,c
  5129  004112  EF8D  F020         	goto	u7071
  5130  004116  EF8F  F020         	goto	u7070
  5131  00411A                     u7071:
  5132  00411A  EF94  F020         	goto	l5990
  5133  00411E                     u7070:
  5134  00411E                     
  5135                           ; BSR set to: 1
  5136                           ;fs_menu_controller.c: 606:     {;fs_menu_controller.c: 607:         menu_flags.menu_inp
      +                          ut_flag = 0;
  5137  00411E  0E00               	movlw	0
  5138  004120  6F9F               	movwf	_menu_flags& (0+255),b
  5139                           
  5140                           ;fs_menu_controller.c: 608:         menu_selected = STOP_TIME_SETTING;
  5141  004122  0E02               	movlw	2
  5142  004124  0100               	movlb	0	; () banked
  5143  004126  6FFB               	movwf	_menu_selected& (0+255),b
  5144  004128                     l5990:
  5145                           
  5146                           ;fs_menu_controller.c: 611:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  5147  004128  0101               	movlb	1	; () banked
  5148  00412A  05A3               	decf	(_menu_flags+4)& (0+255),w,b
  5149  00412C  A4D8               	btfss	status,2,c
  5150  00412E  EF9B  F020         	goto	u7081
  5151  004132  EF9D  F020         	goto	u7080
  5152  004136                     u7081:
  5153  004136  EFB9  F020         	goto	l6008
  5154  00413A                     u7080:
  5155  00413A                     
  5156                           ; BSR set to: 1
  5157  00413A  0E1E               	movlw	30
  5158  00413C  0100               	movlb	0	; () banked
  5159  00413E  61F3               	cpfslt	_menu_value& (0+255),b
  5160  004140  EFA4  F020         	goto	u7091
  5161  004144  EFA6  F020         	goto	u7090
  5162  004148                     u7091:
  5163  004148  EFB9  F020         	goto	l6008
  5164  00414C                     u7090:
  5165  00414C                     
  5166                           ; BSR set to: 0
  5167                           ;fs_menu_controller.c: 612:     {;fs_menu_controller.c: 613:         menu_flags.menu_inc
      +                          rease_flag = 0;
  5168  00414C  0E00               	movlw	0
  5169  00414E  0101               	movlb	1	; () banked
  5170  004150  6FA3               	movwf	(_menu_flags+4)& (0+255),b
  5171  004152                     
  5172                           ; BSR set to: 1
  5173                           ;fs_menu_controller.c: 614:         menu_value.driver_time++;
  5174  004152  0100               	movlb	0	; () banked
  5175  004154  2BF3               	incf	_menu_value& (0+255),f,b
  5176  004156                     
  5177                           ; BSR set to: 0
  5178                           ;fs_menu_controller.c: 615:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5179  004156  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5180  00415A  0E00               	movlw	0
  5181  00415C  EC96  F02C         	call	_eepromWrite
  5182  004160                     
  5183                           ;fs_menu_controller.c: 616:         timer_value.minute =0 ;
  5184  004160  0E00               	movlw	0
  5185  004162  0101               	movlb	1	; () banked
  5186  004164  6F98               	movwf	(_timer_value+1)& (0+255),b
  5187  004166                     
  5188                           ; BSR set to: 1
  5189                           ;fs_menu_controller.c: 617:         timer_value.second = 0;
  5190  004166  0E00               	movlw	0
  5191  004168  6F97               	movwf	_timer_value& (0+255),b
  5192  00416A                     
  5193                           ; BSR set to: 1
  5194                           ;fs_menu_controller.c: 618:         timer_value.remainingSecond = 0;
  5195  00416A  0E00               	movlw	0
  5196  00416C  6F99               	movwf	(_timer_value+2)& (0+255),b
  5197  00416E                     
  5198                           ; BSR set to: 1
  5199                           ;fs_menu_controller.c: 619:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  5200  00416E  C0F3  F19A         	movff	_menu_value,_timer_value+3
  5201  004172                     l6008:
  5202                           
  5203                           ;fs_menu_controller.c: 622:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  5204  004172  0101               	movlb	1	; () banked
  5205  004174  05A4               	decf	(_menu_flags+5)& (0+255),w,b
  5206  004176  A4D8               	btfss	status,2,c
  5207  004178  EFC0  F020         	goto	u7101
  5208  00417C  EFC2  F020         	goto	u7100
  5209  004180                     u7101:
  5210  004180  EFDE  F020         	goto	l6026
  5211  004184                     u7100:
  5212  004184                     
  5213                           ; BSR set to: 1
  5214  004184  0100               	movlb	0	; () banked
  5215  004186  51F3               	movf	_menu_value& (0+255),w,b
  5216  004188  B4D8               	btfsc	status,2,c
  5217  00418A  EFC9  F020         	goto	u7111
  5218  00418E  EFCB  F020         	goto	u7110
  5219  004192                     u7111:
  5220  004192  EFDE  F020         	goto	l6026
  5221  004196                     u7110:
  5222  004196                     
  5223                           ; BSR set to: 0
  5224                           ;fs_menu_controller.c: 623:     {;fs_menu_controller.c: 624:          menu_flags.menu_de
      +                          crease_flag = 0;
  5225  004196  0E00               	movlw	0
  5226  004198  0101               	movlb	1	; () banked
  5227  00419A  6FA4               	movwf	(_menu_flags+5)& (0+255),b
  5228  00419C                     
  5229                           ; BSR set to: 1
  5230                           ;fs_menu_controller.c: 625:          menu_value.driver_time--;
  5231  00419C  0100               	movlb	0	; () banked
  5232  00419E  07F3               	decf	_menu_value& (0+255),f,b
  5233  0041A0                     
  5234                           ; BSR set to: 0
  5235                           ;fs_menu_controller.c: 626:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5236  0041A0  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5237  0041A4  0E00               	movlw	0
  5238  0041A6  EC96  F02C         	call	_eepromWrite
  5239  0041AA                     
  5240                           ;fs_menu_controller.c: 627:          timer_value.minute =0 ;
  5241  0041AA  0E00               	movlw	0
  5242  0041AC  0101               	movlb	1	; () banked
  5243  0041AE  6F98               	movwf	(_timer_value+1)& (0+255),b
  5244  0041B0                     
  5245                           ; BSR set to: 1
  5246                           ;fs_menu_controller.c: 628:          timer_value.second = 0;
  5247  0041B0  0E00               	movlw	0
  5248  0041B2  6F97               	movwf	_timer_value& (0+255),b
  5249  0041B4                     
  5250                           ; BSR set to: 1
  5251                           ;fs_menu_controller.c: 629:          timer_value.remainingSecond = 0;
  5252  0041B4  0E00               	movlw	0
  5253  0041B6  6F99               	movwf	(_timer_value+2)& (0+255),b
  5254  0041B8                     
  5255                           ; BSR set to: 1
  5256                           ;fs_menu_controller.c: 630:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  5257  0041B8  C0F3  F19A         	movff	_menu_value,_timer_value+3
  5258  0041BC                     l6026:
  5259                           
  5260                           ;fs_menu_controller.c: 632:     lcdSetCursor(1,1);
  5261  0041BC  0E01               	movlw	1
  5262  0041BE  6E04               	movwf	lcdSetCursor@b^0,c
  5263  0041C0  0E01               	movlw	1
  5264  0041C2  EC75  F029         	call	_lcdSetCursor
  5265  0041C6                     
  5266                           ;fs_menu_controller.c: 633:     lcdWriteString("HAREKT ZAMANI dk");
  5267  0041C6  0E46               	movlw	low STR_12
  5268  0041C8  6E05               	movwf	lcdWriteString@a^0,c
  5269  0041CA  0E06               	movlw	high STR_12
  5270  0041CC  6E06               	movwf	(lcdWriteString@a+1)^0,c
  5271  0041CE  EC4C  F028         	call	_lcdWriteString	;wreg free
  5272  0041D2                     
  5273                           ;fs_menu_controller.c: 634:     lcdSetCursor(2,1);
  5274  0041D2  0E01               	movlw	1
  5275  0041D4  6E04               	movwf	lcdSetCursor@b^0,c
  5276  0041D6  0E02               	movlw	2
  5277  0041D8  EC75  F029         	call	_lcdSetCursor
  5278  0041DC                     
  5279                           ;fs_menu_controller.c: 635:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  5280  0041DC  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5281  0041DE  0100               	movlb	0	; () banked
  5282  0041E0  6FCF               	movwf	sprintf@s& (0+255),b
  5283  0041E2  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5284  0041E4  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  5285  0041E6  0E01               	movlw	low STR_9
  5286  0041E8  6FD1               	movwf	sprintf@fmt& (0+255),b
  5287  0041EA  0E06               	movlw	high STR_9
  5288  0041EC  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  5289  0041EE  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  5290  0041F2  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  5291  0041F4  EC5D  F02A         	call	_sprintf	;wreg free
  5292  0041F8                     
  5293                           ;fs_menu_controller.c: 636:     lcdWriteString(textCursor2);
  5294  0041F8  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5295  0041FA  6E05               	movwf	lcdWriteString@a^0,c
  5296  0041FC  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5297  0041FE  6E06               	movwf	(lcdWriteString@a+1)^0,c
  5298  004200  EC4C  F028         	call	_lcdWriteString	;wreg free
  5299  004204                     
  5300                           ;fs_menu_controller.c: 638:     if(timer_value.menu_login_delay == 100)
  5301  004204  0E64               	movlw	100
  5302  004206  0101               	movlb	1	; () banked
  5303  004208  199B               	xorwf	(_timer_value+4)& (0+255),w,b
  5304  00420A  A4D8               	btfss	status,2,c
  5305  00420C  EF0A  F021         	goto	u7121
  5306  004210  EF0C  F021         	goto	u7120
  5307  004214                     u7121:
  5308  004214  EF13  F021         	goto	l523
  5309  004218                     u7120:
  5310  004218                     
  5311                           ; BSR set to: 1
  5312                           ;fs_menu_controller.c: 639:     {;fs_menu_controller.c: 640:         button_bounce_contr
      +                          oller.menu = 0;
  5313  004218  0E00               	movlw	0
  5314  00421A  6FA5               	movwf	_button_bounce_controller& (0+255),b
  5315                           
  5316                           ;fs_menu_controller.c: 641:         timer_value.menu_login_delay = 0;
  5317  00421C  0E00               	movlw	0
  5318  00421E  6F9B               	movwf	(_timer_value+4)& (0+255),b
  5319                           
  5320                           ;fs_menu_controller.c: 642:         menu_selected = PAUSE_MENU;
  5321  004220  0E06               	movlw	6
  5322  004222  0100               	movlb	0	; () banked
  5323  004224  6FFB               	movwf	_menu_selected& (0+255),b
  5324  004226                     l523:
  5325  004226  0012               	return		;funcret
  5326  004228                     __end_of_driverTimeSettingMenu:
  5327                           	callstack 0
  5328                           
  5329 ;; *************** function _stopMotor *****************
  5330 ;; Defined at:
  5331 ;;		line 82 in file "fs_speed_controller.c"
  5332 ;; Parameters:    Size  Location     Type
  5333 ;;		None
  5334 ;; Auto vars:     Size  Location     Type
  5335 ;;		None
  5336 ;; Return value:  Size  Location     Type
  5337 ;;                  1    wreg      void 
  5338 ;; Registers used:
  5339 ;;		wreg, status,2, status,0, cstack
  5340 ;; Tracked objects:
  5341 ;;		On entry : 0/0
  5342 ;;		On exit  : 0/0
  5343 ;;		Unchanged: 0/0
  5344 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5345 ;;      Params:         0       0       0       0       0       0       0
  5346 ;;      Locals:         0       0       0       0       0       0       0
  5347 ;;      Temps:          0       0       0       0       0       0       0
  5348 ;;      Totals:         0       0       0       0       0       0       0
  5349 ;;Total ram usage:        0 bytes
  5350 ;; Hardware stack levels used:    1
  5351 ;; Hardware stack levels required when called:    3
  5352 ;; This function calls:
  5353 ;;		_PWM1_setDC
  5354 ;;		_PWM2_setDC
  5355 ;; This function is called by:
  5356 ;;		_mainMenu
  5357 ;;		_stopMenu
  5358 ;;		_pauseMenu
  5359 ;;		_secretMenu
  5360 ;;		_speedLimitSettingMenu
  5361 ;;		_stopTimeSettingMenu
  5362 ;;		_driverTimeSettingMenu
  5363 ;; This function uses a non-reentrant model
  5364 ;;
  5365                           
  5366                           	psect	text19
  5367  005770                     __ptext19:
  5368                           	callstack 0
  5369  005770                     _stopMotor:
  5370                           	callstack 24
  5371  005770                     
  5372                           ;fs_speed_controller.c: 84:     controller.rightMotorSpeed = 0;
  5373  005770  0E00               	movlw	0
  5374  005772  0101               	movlb	1	; () banked
  5375  005774  6F3D               	movwf	(_controller+9)& (0+255),b
  5376  005776  0E00               	movlw	0
  5377  005778  6F3C               	movwf	(_controller+8)& (0+255),b
  5378                           
  5379                           ;fs_speed_controller.c: 85:     controller.leftMotorSpeed = 0;
  5380  00577A  0E00               	movlw	0
  5381  00577C  6F3B               	movwf	(_controller+7)& (0+255),b
  5382  00577E  0E00               	movlw	0
  5383  005780  6F3A               	movwf	(_controller+6)& (0+255),b
  5384                           
  5385                           ;fs_speed_controller.c: 86:     driver_limit.ortalama = 0;
  5386  005782  0E00               	movlw	0
  5387  005784  6F30               	movwf	(_driver_limit+16)& (0+255),b
  5388  005786  0E00               	movlw	0
  5389  005788  6F31               	movwf	(_driver_limit+17)& (0+255),b
  5390  00578A  0E00               	movlw	0
  5391  00578C  6F32               	movwf	(_driver_limit+18)& (0+255),b
  5392  00578E  0E00               	movlw	0
  5393  005790  6F33               	movwf	(_driver_limit+19)& (0+255),b
  5394  005792                     
  5395                           ; BSR set to: 1
  5396                           ;fs_speed_controller.c: 87:     PWM1_setDC(controller.leftMotorSpeed);
  5397  005792  C13A  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  5398  005796  C13B  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  5399  00579A  ECC8  F028         	call	_PWM1_setDC	;wreg free
  5400  00579E                     
  5401                           ;fs_speed_controller.c: 88:     PWM2_setDC(controller.rightMotorSpeed);
  5402  00579E  C13C  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  5403  0057A2  C13D  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  5404  0057A6  EC8B  F028         	call	_PWM2_setDC	;wreg free
  5405  0057AA  0012               	return		;funcret
  5406  0057AC                     __end_of_stopMotor:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function _sprintf *****************
  5410 ;; Defined at:
  5411 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  s               2  111[BANK0 ] PTR unsigned char 
  5414 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  5415 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  5416 ;;		 -> STR_13(18), STR_11(16), STR_9(18), STR_7(13), 
  5417 ;;		 -> STR_5(14), 
  5418 ;; Auto vars:     Size  Location     Type
  5419 ;;  f               6  123[BANK0 ] struct _IO_FILE
  5420 ;;  ap              2  121[BANK0 ] PTR void [1]
  5421 ;;		 -> ?_sprintf(2), 
  5422 ;;  ret             2    0        int 
  5423 ;; Return value:  Size  Location     Type
  5424 ;;                  2  111[BANK0 ] int 
  5425 ;; Registers used:
  5426 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5427 ;; Tracked objects:
  5428 ;;		On entry : 0/0
  5429 ;;		On exit  : 0/0
  5430 ;;		Unchanged: 0/0
  5431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5432 ;;      Params:         0       8       0       0       0       0       0
  5433 ;;      Locals:         0      10       0       0       0       0       0
  5434 ;;      Temps:          0       0       0       0       0       0       0
  5435 ;;      Totals:         0      18       0       0       0       0       0
  5436 ;;Total ram usage:       18 bytes
  5437 ;; Hardware stack levels used:    1
  5438 ;; Hardware stack levels required when called:    8
  5439 ;; This function calls:
  5440 ;;		_vfprintf
  5441 ;; This function is called by:
  5442 ;;		_secretMenu
  5443 ;;		_speedLimitSettingMenu
  5444 ;;		_stopTimeSettingMenu
  5445 ;;		_driverTimeSettingMenu
  5446 ;; This function uses a non-reentrant model
  5447 ;;
  5448                           
  5449                           	psect	text20
  5450  0054BA                     __ptext20:
  5451                           	callstack 0
  5452  0054BA                     _sprintf:
  5453                           	callstack 19
  5454  0054BA  0ED3               	movlw	low (?_sprintf+4)
  5455  0054BC  0100               	movlb	0	; () banked
  5456  0054BE  6FD9               	movwf	sprintf@ap& (0+255),b
  5457  0054C0  0E00               	movlw	high (?_sprintf+4)
  5458  0054C2  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  5459  0054C4  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  5460  0054C8  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  5461  0054CC                     
  5462                           ; BSR set to: 0
  5463  0054CC  0E00               	movlw	0
  5464  0054CE  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  5465  0054D0  0E00               	movlw	0
  5466  0054D2  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  5467  0054D4                     
  5468                           ; BSR set to: 0
  5469  0054D4  0E00               	movlw	0
  5470  0054D6  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  5471  0054D8  0E00               	movlw	0
  5472  0054DA  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  5473  0054DC                     
  5474                           ; BSR set to: 0
  5475  0054DC  0EDB               	movlw	low sprintf@f
  5476  0054DE  6FC7               	movwf	vfprintf@fp& (0+255),b
  5477  0054E0  0E00               	movlw	high sprintf@f
  5478  0054E2  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5479  0054E4  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  5480  0054E8  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5481  0054EC  0ED9               	movlw	low sprintf@ap
  5482  0054EE  6FCB               	movwf	vfprintf@ap& (0+255),b
  5483  0054F0  0E00               	movlw	high sprintf@ap
  5484  0054F2  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  5485  0054F4  EC40  F029         	call	_vfprintf	;wreg free
  5486  0054F8  0100               	movlb	0	; () banked
  5487  0054FA  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  5488  0054FC  25CF               	addwf	sprintf@s& (0+255),w,b
  5489  0054FE  6ED9               	movwf	fsr2l,c
  5490  005500  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  5491  005502  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  5492  005504  6EDA               	movwf	fsr2h,c
  5493  005506  0E00               	movlw	0
  5494  005508  6EDF               	movwf	indf2,c
  5495  00550A                     
  5496                           ; BSR set to: 0
  5497  00550A  0012               	return		;funcret
  5498  00550C                     __end_of_sprintf:
  5499                           	callstack 0
  5500                           
  5501 ;; *************** function _vfprintf *****************
  5502 ;; Defined at:
  5503 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5504 ;; Parameters:    Size  Location     Type
  5505 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  5506 ;;		 -> sprintf@f(6), 
  5507 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  5508 ;;		 -> STR_13(18), STR_11(16), STR_9(18), STR_7(13), 
  5509 ;;		 -> STR_5(14), 
  5510 ;;  ap              2  107[BANK0 ] PTR PTR void 
  5511 ;;		 -> sprintf@ap(2), 
  5512 ;; Auto vars:     Size  Location     Type
  5513 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  5514 ;;		 -> STR_13(18), STR_11(16), STR_9(18), STR_7(13), 
  5515 ;;		 -> STR_5(14), 
  5516 ;; Return value:  Size  Location     Type
  5517 ;;                  2  103[BANK0 ] int 
  5518 ;; Registers used:
  5519 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5520 ;; Tracked objects:
  5521 ;;		On entry : 0/0
  5522 ;;		On exit  : 0/0
  5523 ;;		Unchanged: 0/0
  5524 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5525 ;;      Params:         0       6       0       0       0       0       0
  5526 ;;      Locals:         0       2       0       0       0       0       0
  5527 ;;      Temps:          0       0       0       0       0       0       0
  5528 ;;      Totals:         0       8       0       0       0       0       0
  5529 ;;Total ram usage:        8 bytes
  5530 ;; Hardware stack levels used:    1
  5531 ;; Hardware stack levels required when called:    7
  5532 ;; This function calls:
  5533 ;;		_vfpfcnvrt
  5534 ;; This function is called by:
  5535 ;;		_sprintf
  5536 ;; This function uses a non-reentrant model
  5537 ;;
  5538                           
  5539                           	psect	text21
  5540  005280                     __ptext21:
  5541                           	callstack 0
  5542  005280                     _vfprintf:
  5543                           	callstack 19
  5544  005280                     
  5545                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  5546  005280  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  5547  005284  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  5548  005288                     
  5549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  5550  005288  0E00               	movlw	0
  5551  00528A  0101               	movlb	1	; () banked
  5552  00528C  6FB8               	movwf	(_nout+1)& (0+255),b
  5553  00528E  0E00               	movlw	0
  5554  005290  6FB7               	movwf	_nout& (0+255),b
  5555                           
  5556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  5557  005292  EF62  F029         	goto	l5828
  5558  005296                     l5826:
  5559                           
  5560                           ; BSR set to: 1
  5561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  5562  005296  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  5563  00529A  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  5564  00529E  0ECD               	movlw	low vfprintf@cfmt
  5565  0052A0  0100               	movlb	0	; () banked
  5566  0052A2  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  5567  0052A4  0E00               	movlw	high vfprintf@cfmt
  5568  0052A6  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  5569  0052A8  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  5570  0052AC  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  5571  0052B0  EC3C  F009         	call	_vfpfcnvrt	;wreg free
  5572  0052B4  0100               	movlb	0	; () banked
  5573  0052B6  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  5574  0052B8  0101               	movlb	1	; () banked
  5575  0052BA  27B7               	addwf	_nout& (0+255),f,b
  5576  0052BC  0100               	movlb	0	; () banked
  5577  0052BE  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  5578  0052C0  0101               	movlb	1	; () banked
  5579  0052C2  23B8               	addwfc	(_nout+1)& (0+255),f,b
  5580  0052C4                     l5828:
  5581                           
  5582                           ; BSR set to: 1
  5583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  5584  0052C4  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  5585  0052C8  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  5586  0052CC                     	if	0	;tblptru may be non-zero
  5587  0052CC                     	endif
  5588  0052CC                     	if	0	;tblptru may be non-zero
  5589  0052CC                     	endif
  5590  0052CC  0008               	tblrd		*
  5591  0052CE  50F5               	movf	tablat,w,c
  5592  0052D0  0900               	iorlw	0
  5593  0052D2  A4D8               	btfss	status,2,c
  5594  0052D4  EF6E  F029         	goto	u6831
  5595  0052D8  EF70  F029         	goto	u6830
  5596  0052DC                     u6831:
  5597  0052DC  EF4B  F029         	goto	l5826
  5598  0052E0                     u6830:
  5599  0052E0                     
  5600                           ; BSR set to: 1
  5601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  5602  0052E0  C1B7  F0C7         	movff	_nout,?_vfprintf
  5603  0052E4  C1B8  F0C8         	movff	_nout+1,?_vfprintf+1
  5604  0052E8                     
  5605                           ; BSR set to: 1
  5606  0052E8  0012               	return		;funcret
  5607  0052EA                     __end_of_vfprintf:
  5608                           	callstack 0
  5609                           
  5610 ;; *************** function _vfpfcnvrt *****************
  5611 ;; Defined at:
  5612 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  5613 ;; Parameters:    Size  Location     Type
  5614 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  5615 ;;		 -> sprintf@f(6), 
  5616 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  5617 ;;		 -> vfprintf@cfmt(2), 
  5618 ;;  ap              2   75[BANK0 ] PTR PTR void 
  5619 ;;		 -> sprintf@ap(2), 
  5620 ;; Auto vars:     Size  Location     Type
  5621 ;;  ll              8   81[BANK0 ] long long 
  5622 ;;  llu             8    0        unsigned long long 
  5623 ;;  f               4   95[BANK0 ] unsigned long long 
  5624 ;;  ct              3   99[BANK0 ] unsigned char [3]
  5625 ;;  vp              3    0        PTR void 
  5626 ;;  cp              3    0        PTR unsigned char 
  5627 ;;  i               2    0        int 
  5628 ;;  done            2    0        int 
  5629 ;;  c               1  102[BANK0 ] unsigned char 
  5630 ;; Return value:  Size  Location     Type
  5631 ;;                  2   71[BANK0 ] int 
  5632 ;; Registers used:
  5633 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5634 ;; Tracked objects:
  5635 ;;		On entry : 0/0
  5636 ;;		On exit  : 0/0
  5637 ;;		Unchanged: 0/0
  5638 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5639 ;;      Params:         0       6       0       0       0       0       0
  5640 ;;      Locals:         0      22       0       0       0       0       0
  5641 ;;      Temps:          0       4       0       0       0       0       0
  5642 ;;      Totals:         0      32       0       0       0       0       0
  5643 ;;Total ram usage:       32 bytes
  5644 ;; Hardware stack levels used:    1
  5645 ;; Hardware stack levels required when called:    6
  5646 ;; This function calls:
  5647 ;;		_atoi
  5648 ;;		_dtoa
  5649 ;;		_efgtoa
  5650 ;;		_fputc
  5651 ;;		_isdigit
  5652 ;;		_isupper
  5653 ;;		_strncmp
  5654 ;;		_tolower
  5655 ;; This function is called by:
  5656 ;;		_vfprintf
  5657 ;; This function uses a non-reentrant model
  5658 ;;
  5659                           
  5660                           	psect	text22
  5661  001278                     __ptext22:
  5662                           	callstack 0
  5663  001278                     _vfpfcnvrt:
  5664                           	callstack 19
  5665  001278                     
  5666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  5667  001278  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5668  00127C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5669  001280  CFDE FFF6          	movff	postinc2,tblptrl
  5670  001284  CFDD FFF7          	movff	postdec2,tblptrh
  5671  001288                     	if	0	;tblptru may be non-zero
  5672  001288                     	endif
  5673  001288                     	if	0	;tblptru may be non-zero
  5674  001288                     	endif
  5675  001288  0008               	tblrd		*
  5676  00128A  50F5               	movf	tablat,w,c
  5677  00128C  0A25               	xorlw	37
  5678  00128E  A4D8               	btfss	status,2,c
  5679  001290  EF4C  F009         	goto	u6561
  5680  001294  EF4E  F009         	goto	u6560
  5681  001298                     u6561:
  5682  001298  EF3F  F00C         	goto	l5674
  5683  00129C                     u6560:
  5684  00129C                     
  5685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  5686  00129C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5687  0012A0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5688  0012A4  2ADE               	incf	postinc2,f,c
  5689  0012A6  0E00               	movlw	0
  5690  0012A8  22DD               	addwfc	postdec2,f,c
  5691  0012AA                     
  5692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  5693  0012AA  0E00               	movlw	0
  5694  0012AC  0101               	movlb	1	; () banked
  5695  0012AE  6FBA               	movwf	(_width+1)& (0+255),b
  5696  0012B0  0E00               	movlw	0
  5697  0012B2  6FB9               	movwf	_width& (0+255),b
  5698  0012B4  C1B9  F0F8         	movff	_width,_flags
  5699  0012B8  C1BA  F0F9         	movff	_width+1,_flags+1
  5700  0012BC                     
  5701                           ; BSR set to: 1
  5702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  5703  0012BC  0100               	movlb	0	; () banked
  5704  0012BE  69F6               	setf	_prec& (0+255),b
  5705  0012C0  69F7               	setf	(_prec+1)& (0+255),b
  5706  0012C2                     
  5707                           ; BSR set to: 0
  5708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  5709  0012C2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5710  0012C6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5711  0012CA  CFDE FFF6          	movff	postinc2,tblptrl
  5712  0012CE  CFDD FFF7          	movff	postdec2,tblptrh
  5713  0012D2                     	if	0	;tblptru may be non-zero
  5714  0012D2                     	endif
  5715  0012D2                     	if	0	;tblptru may be non-zero
  5716  0012D2                     	endif
  5717  0012D2  0008               	tblrd		*
  5718  0012D4  50F5               	movf	tablat,w,c
  5719  0012D6  0A2A               	xorlw	42
  5720  0012D8  A4D8               	btfss	status,2,c
  5721  0012DA  EF71  F009         	goto	u6571
  5722  0012DE  EF73  F009         	goto	u6570
  5723  0012E2                     u6571:
  5724  0012E2  EF9F  F009         	goto	l5580
  5725  0012E6                     u6570:
  5726  0012E6                     
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  5729  0012E6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5730  0012EA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5731  0012EE  2ADE               	incf	postinc2,f,c
  5732  0012F0  0E00               	movlw	0
  5733  0012F2  22DD               	addwfc	postdec2,f,c
  5734                           
  5735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  5736  0012F4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5737  0012F8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5738  0012FC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  5739  001300  0E02               	movlw	2
  5740  001302  26DE               	addwf	postinc2,f,c
  5741  001304  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  5742  001308  0E00               	movlw	0
  5743  00130A  22DD               	addwfc	postdec2,f,c
  5744  00130C  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5745  001310  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5746  001314  CFDE F1B9          	movff	postinc2,_width
  5747  001318  CFDD F1BA          	movff	postdec2,_width+1
  5748  00131C                     
  5749                           ; BSR set to: 0
  5750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  5751  00131C  0101               	movlb	1	; () banked
  5752  00131E  BFBA               	btfsc	(_width+1)& (0+255),7,b
  5753  001320  EF96  F009         	goto	u6580
  5754  001324  EF94  F009         	goto	u6581
  5755  001328                     u6581:
  5756  001328  EFE3  F009         	goto	l5590
  5757  00132C                     u6580:
  5758  00132C                     
  5759                           ; BSR set to: 1
  5760                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  5761  00132C  0100               	movlb	0	; () banked
  5762  00132E  81F8               	bsf	_flags& (0+255),0,b
  5763                           
  5764                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  5765  001330  0101               	movlb	1	; () banked
  5766  001332  6DB9               	negf	_width& (0+255),b
  5767  001334  1FBA               	comf	(_width+1)& (0+255),f,b
  5768  001336  B0D8               	btfsc	status,0,c
  5769  001338  2BBA               	incf	(_width+1)& (0+255),f,b
  5770  00133A  EFE3  F009         	goto	l5590
  5771  00133E                     l5580:
  5772                           
  5773                           ; BSR set to: 0
  5774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  5775  00133E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5776  001342  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5777  001346  CFDE F008          	movff	postinc2,atoi@s
  5778  00134A  CFDD F009          	movff	postdec2,atoi@s+1
  5779  00134E  EC40  F01E         	call	_atoi	;wreg free
  5780  001352  C008  F1B9         	movff	?_atoi,_width
  5781  001356  C009  F1BA         	movff	?_atoi+1,_width+1
  5782                           
  5783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5784  00135A  EFB6  F009         	goto	l5584
  5785  00135E                     l5582:
  5786                           
  5787                           ; BSR set to: 0
  5788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  5789  00135E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5790  001362  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5791  001366  2ADE               	incf	postinc2,f,c
  5792  001368  0E00               	movlw	0
  5793  00136A  22DD               	addwfc	postdec2,f,c
  5794  00136C                     l5584:
  5795  00136C  0ED0               	movlw	208
  5796  00136E  0100               	movlb	0	; () banked
  5797  001370  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  5798  001372  0EFF               	movlw	255
  5799  001374  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5800  001376  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5801  00137A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5802  00137E  CFDE FFF6          	movff	postinc2,tblptrl
  5803  001382  CFDD FFF7          	movff	postdec2,tblptrh
  5804  001386                     	if	0	;tblptru may be non-zero
  5805  001386                     	endif
  5806  001386                     	if	0	;tblptru may be non-zero
  5807  001386                     	endif
  5808  001386  0008               	tblrd		*
  5809  001388  50F5               	movf	tablat,w,c
  5810  00138A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5811  00138C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5812  00138E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  5813  001390  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5814  001392  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5815  001394  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5816  001396  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5817  001398  E10A               	bnz	u6590
  5818  00139A  0E0A               	movlw	10
  5819  00139C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5820  00139E  A0D8               	btfss	status,0,c
  5821  0013A0  EFD4  F009         	goto	u6591
  5822  0013A4  EFD7  F009         	goto	u6590
  5823  0013A8                     u6591:
  5824  0013A8  0E01               	movlw	1
  5825  0013AA  EFD8  F009         	goto	u6600
  5826  0013AE                     u6590:
  5827  0013AE  0E00               	movlw	0
  5828  0013B0                     u6600:
  5829  0013B0  6FB9               	movwf	_vfpfcnvrt$3023& (0+255),b
  5830  0013B2  6BBA               	clrf	(_vfpfcnvrt$3023+1)& (0+255),b
  5831  0013B4                     
  5832                           ; BSR set to: 0
  5833  0013B4  51B9               	movf	_vfpfcnvrt$3023& (0+255),w,b
  5834  0013B6  11BA               	iorwf	(_vfpfcnvrt$3023+1)& (0+255),w,b
  5835  0013B8  A4D8               	btfss	status,2,c
  5836  0013BA  EFE1  F009         	goto	u6611
  5837  0013BE  EFE3  F009         	goto	u6610
  5838  0013C2                     u6611:
  5839  0013C2  EFAF  F009         	goto	l5582
  5840  0013C6                     u6610:
  5841  0013C6                     l5590:
  5842                           
  5843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  5844  0013C6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5845  0013CA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5846  0013CE  CFDE FFF6          	movff	postinc2,tblptrl
  5847  0013D2  CFDD FFF7          	movff	postdec2,tblptrh
  5848  0013D6                     	if	0	;tblptru may be non-zero
  5849  0013D6                     	endif
  5850  0013D6                     	if	0	;tblptru may be non-zero
  5851  0013D6                     	endif
  5852  0013D6  0008               	tblrd		*
  5853  0013D8  50F5               	movf	tablat,w,c
  5854  0013DA  0A2E               	xorlw	46
  5855  0013DC  A4D8               	btfss	status,2,c
  5856  0013DE  EFF3  F009         	goto	u6621
  5857  0013E2  EFF5  F009         	goto	u6620
  5858  0013E6                     u6621:
  5859  0013E6  EF74  F00A         	goto	l5610
  5860  0013EA                     u6620:
  5861  0013EA                     
  5862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  5863  0013EA  0E00               	movlw	0
  5864  0013EC  0100               	movlb	0	; () banked
  5865  0013EE  6FF7               	movwf	(_prec+1)& (0+255),b
  5866  0013F0  0E00               	movlw	0
  5867  0013F2  6FF6               	movwf	_prec& (0+255),b
  5868  0013F4                     
  5869                           ; BSR set to: 0
  5870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  5871  0013F4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5872  0013F8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5873  0013FC  2ADE               	incf	postinc2,f,c
  5874  0013FE  0E00               	movlw	0
  5875  001400  22DD               	addwfc	postdec2,f,c
  5876  001402                     
  5877                           ; BSR set to: 0
  5878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  5879  001402  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5880  001406  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5881  00140A  CFDE FFF6          	movff	postinc2,tblptrl
  5882  00140E  CFDD FFF7          	movff	postdec2,tblptrh
  5883  001412                     	if	0	;tblptru may be non-zero
  5884  001412                     	endif
  5885  001412                     	if	0	;tblptru may be non-zero
  5886  001412                     	endif
  5887  001412  0008               	tblrd		*
  5888  001414  50F5               	movf	tablat,w,c
  5889  001416  0A2A               	xorlw	42
  5890  001418  A4D8               	btfss	status,2,c
  5891  00141A  EF11  F00A         	goto	u6631
  5892  00141E  EF13  F00A         	goto	u6630
  5893  001422                     u6631:
  5894  001422  EF30  F00A         	goto	l5600
  5895  001426                     u6630:
  5896  001426                     
  5897                           ; BSR set to: 0
  5898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  5899  001426  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5900  00142A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5901  00142E  2ADE               	incf	postinc2,f,c
  5902  001430  0E00               	movlw	0
  5903  001432  22DD               	addwfc	postdec2,f,c
  5904                           
  5905                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  5906  001434  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  5907  001438  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  5908  00143C  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  5909  001440  0E02               	movlw	2
  5910  001442  26DE               	addwf	postinc2,f,c
  5911  001444  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  5912  001448  0E00               	movlw	0
  5913  00144A  22DD               	addwfc	postdec2,f,c
  5914  00144C  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  5915  001450  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  5916  001454  CFDE F0F6          	movff	postinc2,_prec
  5917  001458  CFDD F0F7          	movff	postdec2,_prec+1
  5918                           
  5919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  5920  00145C  EF74  F00A         	goto	l5610
  5921  001460                     l5600:
  5922                           
  5923                           ; BSR set to: 0
  5924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  5925  001460  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5926  001464  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5927  001468  CFDE F008          	movff	postinc2,atoi@s
  5928  00146C  CFDD F009          	movff	postdec2,atoi@s+1
  5929  001470  EC40  F01E         	call	_atoi	;wreg free
  5930  001474  C008  F0F6         	movff	?_atoi,_prec
  5931  001478  C009  F0F7         	movff	?_atoi+1,_prec+1
  5932                           
  5933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  5934  00147C  EF47  F00A         	goto	l5604
  5935  001480                     l5602:
  5936                           
  5937                           ; BSR set to: 0
  5938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  5939  001480  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5940  001484  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5941  001488  2ADE               	incf	postinc2,f,c
  5942  00148A  0E00               	movlw	0
  5943  00148C  22DD               	addwfc	postdec2,f,c
  5944  00148E                     l5604:
  5945  00148E  0ED0               	movlw	208
  5946  001490  0100               	movlb	0	; () banked
  5947  001492  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  5948  001494  0EFF               	movlw	255
  5949  001496  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  5950  001498  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5951  00149C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5952  0014A0  CFDE FFF6          	movff	postinc2,tblptrl
  5953  0014A4  CFDD FFF7          	movff	postdec2,tblptrh
  5954  0014A8                     	if	0	;tblptru may be non-zero
  5955  0014A8                     	endif
  5956  0014A8                     	if	0	;tblptru may be non-zero
  5957  0014A8                     	endif
  5958  0014A8  0008               	tblrd		*
  5959  0014AA  50F5               	movf	tablat,w,c
  5960  0014AC  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  5961  0014AE  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  5962  0014B0  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  5963  0014B2  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  5964  0014B4  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  5965  0014B6  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  5966  0014B8  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  5967  0014BA  E10A               	bnz	u6640
  5968  0014BC  0E0A               	movlw	10
  5969  0014BE  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  5970  0014C0  A0D8               	btfss	status,0,c
  5971  0014C2  EF65  F00A         	goto	u6641
  5972  0014C6  EF68  F00A         	goto	u6640
  5973  0014CA                     u6641:
  5974  0014CA  0E01               	movlw	1
  5975  0014CC  EF69  F00A         	goto	u6650
  5976  0014D0                     u6640:
  5977  0014D0  0E00               	movlw	0
  5978  0014D2                     u6650:
  5979  0014D2  6FBB               	movwf	_vfpfcnvrt$3024& (0+255),b
  5980  0014D4  6BBC               	clrf	(_vfpfcnvrt$3024+1)& (0+255),b
  5981  0014D6                     
  5982                           ; BSR set to: 0
  5983  0014D6  51BB               	movf	_vfpfcnvrt$3024& (0+255),w,b
  5984  0014D8  11BC               	iorwf	(_vfpfcnvrt$3024+1)& (0+255),w,b
  5985  0014DA  A4D8               	btfss	status,2,c
  5986  0014DC  EF72  F00A         	goto	u6661
  5987  0014E0  EF74  F00A         	goto	u6660
  5988  0014E4                     u6661:
  5989  0014E4  EF40  F00A         	goto	l5602
  5990  0014E8                     u6660:
  5991  0014E8                     l5610:
  5992                           
  5993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  5994  0014E8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  5995  0014EC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  5996  0014F0  CFDE FFF6          	movff	postinc2,tblptrl
  5997  0014F4  CFDD FFF7          	movff	postdec2,tblptrh
  5998  0014F8                     	if	0	;tblptru may be non-zero
  5999  0014F8                     	endif
  6000  0014F8                     	if	0	;tblptru may be non-zero
  6001  0014F8                     	endif
  6002  0014F8  0008               	tblrd		*
  6003  0014FA  50F5               	movf	tablat,w,c
  6004  0014FC  6E07               	movwf	tolower@c^0,c
  6005  0014FE  6A08               	clrf	(tolower@c+1)^0,c
  6006  001500  ECA8  F029         	call	_tolower	;wreg free
  6007  001504  5007               	movf	?_tolower^0,w,c
  6008  001506  0100               	movlb	0	; () banked
  6009  001508  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6010  00150A                     
  6011                           ; BSR set to: 0
  6012                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6013  00150A  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6014  00150C  B4D8               	btfsc	status,2,c
  6015  00150E  EF8B  F00A         	goto	u6671
  6016  001512  EF8D  F00A         	goto	u6670
  6017  001516                     u6671:
  6018  001516  EFC7  F00A         	goto	l5620
  6019  00151A                     u6670:
  6020  00151A                     
  6021                           ; BSR set to: 0
  6022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6023  00151A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6024  00151E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6025  001522  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6026  001526  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6027  00152A  0E01               	movlw	1
  6028  00152C  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6029  00152E  0E00               	movlw	0
  6030  001530  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6031  001532  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6032  001536  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6033  00153A                     	if	0	;tblptru may be non-zero
  6034  00153A                     	endif
  6035  00153A                     	if	0	;tblptru may be non-zero
  6036  00153A                     	endif
  6037  00153A  0008               	tblrd		*
  6038  00153C  50F5               	movf	tablat,w,c
  6039  00153E  6E07               	movwf	tolower@c^0,c
  6040  001540  6A08               	clrf	(tolower@c+1)^0,c
  6041  001542  ECA8  F029         	call	_tolower	;wreg free
  6042  001546  5007               	movf	?_tolower^0,w,c
  6043  001548  0100               	movlb	0	; () banked
  6044  00154A  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6045  00154C                     
  6046                           ; BSR set to: 0
  6047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6048  00154C  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6049  00154E  B4D8               	btfsc	status,2,c
  6050  001550  EFAC  F00A         	goto	u6681
  6051  001554  EFAE  F00A         	goto	u6680
  6052  001558                     u6681:
  6053  001558  EFC7  F00A         	goto	l5620
  6054  00155C                     u6680:
  6055  00155C                     
  6056                           ; BSR set to: 0
  6057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6058  00155C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6059  001560  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6060  001564  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6061  001568  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6062  00156C  0E02               	movlw	2
  6063  00156E  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6064  001570  0E00               	movlw	0
  6065  001572  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6066  001574  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6067  001578  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6068  00157C                     	if	0	;tblptru may be non-zero
  6069  00157C                     	endif
  6070  00157C                     	if	0	;tblptru may be non-zero
  6071  00157C                     	endif
  6072  00157C  0008               	tblrd		*
  6073  00157E  50F5               	movf	tablat,w,c
  6074  001580  6E07               	movwf	tolower@c^0,c
  6075  001582  6A08               	clrf	(tolower@c+1)^0,c
  6076  001584  ECA8  F029         	call	_tolower	;wreg free
  6077  001588  5007               	movf	?_tolower^0,w,c
  6078  00158A  0100               	movlb	0	; () banked
  6079  00158C  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6080  00158E                     l5620:
  6081                           
  6082                           ; BSR set to: 0
  6083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6084  00158E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6085  001592  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6086  001596  CFDE FFF6          	movff	postinc2,tblptrl
  6087  00159A  CFDD FFF7          	movff	postdec2,tblptrh
  6088  00159E                     	if	0	;tblptru may be non-zero
  6089  00159E                     	endif
  6090  00159E                     	if	0	;tblptru may be non-zero
  6091  00159E                     	endif
  6092  00159E  0008               	tblrd		*
  6093  0015A0  50F5               	movf	tablat,w,c
  6094  0015A2  0A64               	xorlw	100
  6095  0015A4  B4D8               	btfsc	status,2,c
  6096  0015A6  EFD7  F00A         	goto	u6691
  6097  0015AA  EFD9  F00A         	goto	u6690
  6098  0015AE                     u6691:
  6099  0015AE  EFEB  F00A         	goto	l5624
  6100  0015B2                     u6690:
  6101  0015B2                     
  6102                           ; BSR set to: 0
  6103  0015B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6104  0015B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6105  0015BA  CFDE FFF6          	movff	postinc2,tblptrl
  6106  0015BE  CFDD FFF7          	movff	postdec2,tblptrh
  6107  0015C2                     	if	0	;tblptru may be non-zero
  6108  0015C2                     	endif
  6109  0015C2                     	if	0	;tblptru may be non-zero
  6110  0015C2                     	endif
  6111  0015C2  0008               	tblrd		*
  6112  0015C4  50F5               	movf	tablat,w,c
  6113  0015C6  0A69               	xorlw	105
  6114  0015C8  A4D8               	btfss	status,2,c
  6115  0015CA  EFE9  F00A         	goto	u6701
  6116  0015CE  EFEB  F00A         	goto	u6700
  6117  0015D2                     u6701:
  6118  0015D2  EF2B  F00B         	goto	l5630
  6119  0015D6                     u6700:
  6120  0015D6                     l5624:
  6121                           
  6122                           ; BSR set to: 0
  6123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6124  0015D6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6125  0015DA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6126  0015DE  2ADE               	incf	postinc2,f,c
  6127  0015E0  0E00               	movlw	0
  6128  0015E2  22DD               	addwfc	postdec2,f,c
  6129                           
  6130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6131  0015E4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6132  0015E8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6133  0015EC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6134  0015F0  0E02               	movlw	2
  6135  0015F2  26DE               	addwf	postinc2,f,c
  6136  0015F4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6137  0015F8  0E00               	movlw	0
  6138  0015FA  22DD               	addwfc	postdec2,f,c
  6139  0015FC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6140  001600  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6141  001604  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6142  001608  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6143  00160C  0E00               	movlw	0
  6144  00160E  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6145  001610  0EFF               	movlw	-1
  6146  001612  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6147  001614  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6148  001616  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6149  001618  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6150  00161A  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6151  00161C  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6152  00161E                     
  6153                           ; BSR set to: 0
  6154                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6155  00161E  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6156  001622  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6157  001626  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6158  00162A  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6159  00162E  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6160  001632  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6161  001636  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6162  00163A  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6163  00163E  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6164  001642  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6165  001646  ECF8  F016         	call	_dtoa	;wreg free
  6166  00164A  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6167  00164E  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6168  001652  EF5A  F00C         	goto	l1580
  6169  001656                     l5630:
  6170                           
  6171                           ; BSR set to: 0
  6172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6173  001656  0E66               	movlw	102
  6174  001658  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6175  00165A  A4D8               	btfss	status,2,c
  6176  00165C  EF32  F00B         	goto	u6711
  6177  001660  EF34  F00B         	goto	u6710
  6178  001664                     u6711:
  6179  001664  EF74  F00B         	goto	l5642
  6180  001668                     u6710:
  6181  001668                     
  6182                           ; BSR set to: 0
  6183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6184  001668  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6185  00166C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6186  001670  CFDE FFF6          	movff	postinc2,tblptrl
  6187  001674  CFDD FFF7          	movff	postdec2,tblptrh
  6188  001678                     	if	0	;tblptru may be non-zero
  6189  001678                     	endif
  6190  001678                     	if	0	;tblptru may be non-zero
  6191  001678                     	endif
  6192  001678  0008               	tblrd		*
  6193  00167A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6194  00167E                     
  6195                           ; BSR set to: 0
  6196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6197  00167E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6198  001682  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6199  001686  2ADE               	incf	postinc2,f,c
  6200  001688  0E00               	movlw	0
  6201  00168A  22DD               	addwfc	postdec2,f,c
  6202  00168C                     
  6203                           ; BSR set to: 0
  6204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6205  00168C  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6206  001690  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6207  001694  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6208  001698  0E04               	movlw	4
  6209  00169A  26DE               	addwf	postinc2,f,c
  6210  00169C  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6211  0016A0  0E00               	movlw	0
  6212  0016A2  22DD               	addwfc	postdec2,f,c
  6213  0016A4  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6214  0016A8  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6215  0016AC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6216  0016B0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6217  0016B4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6218  0016B8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6219  0016BC                     l5638:
  6220                           
  6221                           ; BSR set to: 0
  6222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6223  0016BC  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6224  0016C0  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6225  0016C4  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6226  0016C8  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6227  0016CC  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6228  0016D0  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6229  0016D4  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6230  0016D8  EC64  F003         	call	_efgtoa	;wreg free
  6231  0016DC  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6232  0016E0  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6233  0016E4  EF5A  F00C         	goto	l1580
  6234  0016E8                     l5642:
  6235                           
  6236                           ; BSR set to: 0
  6237                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6238  0016E8  0EC3               	movlw	low vfpfcnvrt@ct
  6239  0016EA  6E01               	movwf	strncmp@_l^0,c
  6240  0016EC  0E00               	movlw	high vfpfcnvrt@ct
  6241  0016EE  6E02               	movwf	(strncmp@_l+1)^0,c
  6242  0016F0  0EC4               	movlw	low STR_22
  6243  0016F2  6E03               	movwf	strncmp@_r^0,c
  6244  0016F4  0E06               	movlw	high STR_22
  6245  0016F6  6E04               	movwf	(strncmp@_r+1)^0,c
  6246  0016F8  0E00               	movlw	0
  6247  0016FA  6E06               	movwf	(strncmp@n+1)^0,c
  6248  0016FC  0E02               	movlw	2
  6249  0016FE  6E05               	movwf	strncmp@n^0,c
  6250  001700  EC84  F024         	call	_strncmp	;wreg free
  6251  001704  5001               	movf	?_strncmp^0,w,c
  6252  001706  1002               	iorwf	(?_strncmp+1)^0,w,c
  6253  001708  A4D8               	btfss	status,2,c
  6254  00170A  EF89  F00B         	goto	u6721
  6255  00170E  EF8B  F00B         	goto	u6720
  6256  001712                     u6721:
  6257  001712  EF07  F00C         	goto	l5658
  6258  001716                     u6720:
  6259  001716                     
  6260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6261  001716  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6262  00171A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6263  00171E  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6264  001722  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6265  001726  0E01               	movlw	1
  6266  001728  0100               	movlb	0	; () banked
  6267  00172A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6268  00172C  0E00               	movlw	0
  6269  00172E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6270  001730  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6271  001734  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6272  001738                     	if	0	;tblptru may be non-zero
  6273  001738                     	endif
  6274  001738                     	if	0	;tblptru may be non-zero
  6275  001738                     	endif
  6276  001738  0008               	tblrd		*
  6277  00173A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6278  00173E  0EBF               	movlw	191
  6279  001740  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6280  001742  0EFF               	movlw	255
  6281  001744  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6282  001746  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6283  00174A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6284  00174E  CFDE FFF6          	movff	postinc2,tblptrl
  6285  001752  CFDD FFF7          	movff	postdec2,tblptrh
  6286  001756                     	if	0	;tblptru may be non-zero
  6287  001756                     	endif
  6288  001756                     	if	0	;tblptru may be non-zero
  6289  001756                     	endif
  6290  001756  0008               	tblrd		*
  6291  001758  50F5               	movf	tablat,w,c
  6292  00175A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6293  00175C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6294  00175E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6295  001760  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6296  001762  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6297  001764  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6298  001766  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6299  001768  E10A               	bnz	u6730
  6300  00176A  0E1A               	movlw	26
  6301  00176C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6302  00176E  A0D8               	btfss	status,0,c
  6303  001770  EFBC  F00B         	goto	u6731
  6304  001774  EFBF  F00B         	goto	u6730
  6305  001778                     u6731:
  6306  001778  0E01               	movlw	1
  6307  00177A  EFC0  F00B         	goto	u6740
  6308  00177E                     u6730:
  6309  00177E  0E00               	movlw	0
  6310  001780                     u6740:
  6311  001780  6FBD               	movwf	_vfpfcnvrt$3029& (0+255),b
  6312  001782  6BBE               	clrf	(_vfpfcnvrt$3029+1)& (0+255),b
  6313  001784                     
  6314                           ; BSR set to: 0
  6315  001784  51BD               	movf	_vfpfcnvrt$3029& (0+255),w,b
  6316  001786  11BE               	iorwf	(_vfpfcnvrt$3029+1)& (0+255),w,b
  6317  001788  B4D8               	btfsc	status,2,c
  6318  00178A  EFC9  F00B         	goto	u6751
  6319  00178E  EFCB  F00B         	goto	u6750
  6320  001792                     u6751:
  6321  001792  EFE5  F00B         	goto	l5652
  6322  001796                     u6750:
  6323  001796                     
  6324                           ; BSR set to: 0
  6325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6326  001796  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6327  00179A  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6328  00179E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6329  0017A2  0E04               	movlw	4
  6330  0017A4  26DE               	addwf	postinc2,f,c
  6331  0017A6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6332  0017AA  0E00               	movlw	0
  6333  0017AC  22DD               	addwfc	postdec2,f,c
  6334  0017AE  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6335  0017B2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6336  0017B6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6337  0017BA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6338  0017BE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6339  0017C2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6340                           
  6341                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  6342  0017C6  EFFD  F00B         	goto	l1588
  6343  0017CA                     l5652:
  6344                           
  6345                           ; BSR set to: 0
  6346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6347  0017CA  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6348  0017CE  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6349  0017D2  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6350  0017D6  0E04               	movlw	4
  6351  0017D8  26DE               	addwf	postinc2,f,c
  6352  0017DA  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6353  0017DE  0E00               	movlw	0
  6354  0017E0  22DD               	addwfc	postdec2,f,c
  6355  0017E2  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6356  0017E6  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6357  0017EA  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6358  0017EE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6359  0017F2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6360  0017F6  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6361  0017FA                     l1588:
  6362                           
  6363                           ; BSR set to: 0
  6364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6365  0017FA  0E02               	movlw	2
  6366  0017FC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6367  001800  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6368  001804  26DE               	addwf	postinc2,f,c
  6369  001806  0E00               	movlw	0
  6370  001808  22DD               	addwfc	postdec2,f,c
  6371  00180A  EF5E  F00B         	goto	l5638
  6372  00180E                     l5658:
  6373                           
  6374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6375  00180E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6376  001812  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6377  001816  CFDE FFF6          	movff	postinc2,tblptrl
  6378  00181A  CFDD FFF7          	movff	postdec2,tblptrh
  6379  00181E                     	if	0	;tblptru may be non-zero
  6380  00181E                     	endif
  6381  00181E                     	if	0	;tblptru may be non-zero
  6382  00181E                     	endif
  6383  00181E  0008               	tblrd		*
  6384  001820  50F5               	movf	tablat,w,c
  6385  001822  0A25               	xorlw	37
  6386  001824  A4D8               	btfss	status,2,c
  6387  001826  EF17  F00C         	goto	u6761
  6388  00182A  EF19  F00C         	goto	u6760
  6389  00182E                     u6761:
  6390  00182E  EF31  F00C         	goto	l5668
  6391  001832                     u6760:
  6392  001832                     
  6393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6394  001832  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6395  001836  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6396  00183A  2ADE               	incf	postinc2,f,c
  6397  00183C  0E00               	movlw	0
  6398  00183E  22DD               	addwfc	postdec2,f,c
  6399  001840                     
  6400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6401  001840  0E00               	movlw	0
  6402  001842  6E02               	movwf	(fputc@c+1)^0,c
  6403  001844  0E25               	movlw	37
  6404  001846  6E01               	movwf	fputc@c^0,c
  6405  001848  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6406  00184C  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6407  001850  ECEF  F024         	call	_fputc	;wreg free
  6408  001854                     l5664:
  6409                           
  6410                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6411  001854  0E00               	movlw	0
  6412  001856  0100               	movlb	0	; () banked
  6413  001858  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6414  00185A  0E01               	movlw	1
  6415  00185C  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6416  00185E  EF5A  F00C         	goto	l1580
  6417  001862                     l5668:
  6418                           
  6419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6420  001862  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6421  001866  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6422  00186A  2ADE               	incf	postinc2,f,c
  6423  00186C  0E00               	movlw	0
  6424  00186E  22DD               	addwfc	postdec2,f,c
  6425  001870                     
  6426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  6427  001870  0E00               	movlw	0
  6428  001872  0100               	movlb	0	; () banked
  6429  001874  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6430  001876  0E00               	movlw	0
  6431  001878  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6432  00187A  EF5A  F00C         	goto	l1580
  6433  00187E                     l5674:
  6434                           
  6435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6436  00187E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6437  001882  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6438  001886  CFDE FFF6          	movff	postinc2,tblptrl
  6439  00188A  CFDD FFF7          	movff	postdec2,tblptrh
  6440  00188E                     	if	0	;tblptru may be non-zero
  6441  00188E                     	endif
  6442  00188E                     	if	0	;tblptru may be non-zero
  6443  00188E                     	endif
  6444  00188E  0008               	tblrd		*
  6445  001890  50F5               	movf	tablat,w,c
  6446  001892  6E01               	movwf	fputc@c^0,c
  6447  001894  6A02               	clrf	(fputc@c+1)^0,c
  6448  001896  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6449  00189A  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6450  00189E  ECEF  F024         	call	_fputc	;wreg free
  6451  0018A2                     
  6452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6453  0018A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6454  0018A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6455  0018AA  2ADE               	incf	postinc2,f,c
  6456  0018AC  0E00               	movlw	0
  6457  0018AE  22DD               	addwfc	postdec2,f,c
  6458  0018B0  EF2A  F00C         	goto	l5664
  6459  0018B4                     l1580:
  6460  0018B4  0012               	return		;funcret
  6461  0018B6                     __end_of_vfpfcnvrt:
  6462                           	callstack 0
  6463                           
  6464 ;; *************** function _strncmp *****************
  6465 ;; Defined at:
  6466 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6467 ;; Parameters:    Size  Location     Type
  6468 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6469 ;;		 -> vfpfcnvrt@ct(3), 
  6470 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6471 ;;		 -> STR_24(3), 
  6472 ;;  n               2    4[COMRAM] unsigned int 
  6473 ;; Auto vars:     Size  Location     Type
  6474 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6475 ;;		 -> STR_24(3), 
  6476 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6477 ;;		 -> vfpfcnvrt@ct(3), 
  6478 ;; Return value:  Size  Location     Type
  6479 ;;                  2    0[COMRAM] int 
  6480 ;; Registers used:
  6481 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6482 ;; Tracked objects:
  6483 ;;		On entry : 0/0
  6484 ;;		On exit  : 0/0
  6485 ;;		Unchanged: 0/0
  6486 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6487 ;;      Params:         6       0       0       0       0       0       0
  6488 ;;      Locals:         4       0       0       0       0       0       0
  6489 ;;      Temps:          1       0       0       0       0       0       0
  6490 ;;      Totals:        11       0       0       0       0       0       0
  6491 ;;Total ram usage:       11 bytes
  6492 ;; Hardware stack levels used:    1
  6493 ;; Hardware stack levels required when called:    1
  6494 ;; This function calls:
  6495 ;;		Nothing
  6496 ;; This function is called by:
  6497 ;;		_vfpfcnvrt
  6498 ;; This function uses a non-reentrant model
  6499 ;;
  6500                           
  6501                           	psect	text23
  6502  004908                     __ptext23:
  6503                           	callstack 0
  6504  004908                     _strncmp:
  6505                           	callstack 23
  6506  004908  C001  F008         	movff	strncmp@_l,strncmp@l
  6507  00490C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  6508  004910  C003  F00A         	movff	strncmp@_r,strncmp@r
  6509  004914  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  6510  004918  0605               	decf	strncmp@n^0,f,c
  6511  00491A  A0D8               	btfss	status,0,c
  6512  00491C  0606               	decf	(strncmp@n+1)^0,f,c
  6513  00491E  2805               	incf	strncmp@n^0,w,c
  6514  004920  E106               	bnz	u6331
  6515  004922  2806               	incf	(strncmp@n+1)^0,w,c
  6516  004924  A4D8               	btfss	status,2,c
  6517  004926  EF97  F024         	goto	u6331
  6518  00492A  EF99  F024         	goto	u6330
  6519  00492E                     u6331:
  6520  00492E  EFA6  F024         	goto	l5446
  6521  004932                     u6330:
  6522  004932  0E00               	movlw	0
  6523  004934  6E02               	movwf	(?_strncmp+1)^0,c
  6524  004936  0E00               	movlw	0
  6525  004938  6E01               	movwf	?_strncmp^0,c
  6526  00493A  EFEE  F024         	goto	l1716
  6527  00493E                     l5444:
  6528  00493E  4A08               	infsnz	strncmp@l^0,f,c
  6529  004940  2A09               	incf	(strncmp@l+1)^0,f,c
  6530  004942  4A0A               	infsnz	strncmp@r^0,f,c
  6531  004944  2A0B               	incf	(strncmp@r+1)^0,f,c
  6532  004946  0605               	decf	strncmp@n^0,f,c
  6533  004948  A0D8               	btfss	status,0,c
  6534  00494A  0606               	decf	(strncmp@n+1)^0,f,c
  6535  00494C                     l5446:
  6536  00494C  C008  FFD9         	movff	strncmp@l,fsr2l
  6537  004950  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6538  004954  50DF               	movf	indf2,w,c
  6539  004956  B4D8               	btfsc	status,2,c
  6540  004958  EFB0  F024         	goto	u6341
  6541  00495C  EFB2  F024         	goto	u6340
  6542  004960                     u6341:
  6543  004960  EFDD  F024         	goto	l5454
  6544  004964                     u6340:
  6545  004964  C00A  FFF6         	movff	strncmp@r,tblptrl
  6546  004968  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6547  00496C                     	if	0	;tblptru may be non-zero
  6548  00496C                     	endif
  6549  00496C                     	if	0	;tblptru may be non-zero
  6550  00496C                     	endif
  6551  00496C  0008               	tblrd		*
  6552  00496E  50F5               	movf	tablat,w,c
  6553  004970  0900               	iorlw	0
  6554  004972  B4D8               	btfsc	status,2,c
  6555  004974  EFBE  F024         	goto	u6351
  6556  004978  EFC0  F024         	goto	u6350
  6557  00497C                     u6351:
  6558  00497C  EFDD  F024         	goto	l5454
  6559  004980                     u6350:
  6560  004980  5005               	movf	strncmp@n^0,w,c
  6561  004982  1006               	iorwf	(strncmp@n+1)^0,w,c
  6562  004984  B4D8               	btfsc	status,2,c
  6563  004986  EFC7  F024         	goto	u6361
  6564  00498A  EFC9  F024         	goto	u6360
  6565  00498E                     u6361:
  6566  00498E  EFDD  F024         	goto	l5454
  6567  004992                     u6360:
  6568  004992  C008  FFD9         	movff	strncmp@l,fsr2l
  6569  004996  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6570  00499A  50DF               	movf	indf2,w,c
  6571  00499C  6E07               	movwf	??_strncmp^0,c
  6572  00499E  C00A  FFF6         	movff	strncmp@r,tblptrl
  6573  0049A2  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6574  0049A6                     	if	0	;tblptru may be non-zero
  6575  0049A6                     	endif
  6576  0049A6                     	if	0	;tblptru may be non-zero
  6577  0049A6                     	endif
  6578  0049A6  0008               	tblrd		*
  6579  0049A8  50F5               	movf	tablat,w,c
  6580  0049AA  1807               	xorwf	??_strncmp^0,w,c
  6581  0049AC  B4D8               	btfsc	status,2,c
  6582  0049AE  EFDB  F024         	goto	u6371
  6583  0049B2  EFDD  F024         	goto	u6370
  6584  0049B6                     u6371:
  6585  0049B6  EF9F  F024         	goto	l5444
  6586  0049BA                     u6370:
  6587  0049BA                     l5454:
  6588  0049BA  C008  FFD9         	movff	strncmp@l,fsr2l
  6589  0049BE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  6590  0049C2  50DF               	movf	indf2,w,c
  6591  0049C4  6E07               	movwf	??_strncmp^0,c
  6592  0049C6  C00A  FFF6         	movff	strncmp@r,tblptrl
  6593  0049CA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  6594  0049CE                     	if	0	;tblptru may be non-zero
  6595  0049CE                     	endif
  6596  0049CE                     	if	0	;tblptru may be non-zero
  6597  0049CE                     	endif
  6598  0049CE  0008               	tblrd		*
  6599  0049D0  50F5               	movf	tablat,w,c
  6600  0049D2  5C07               	subwf	??_strncmp^0,w,c
  6601  0049D4  6E01               	movwf	?_strncmp^0,c
  6602  0049D6  6A02               	clrf	(?_strncmp+1)^0,c
  6603  0049D8  A0D8               	btfss	status,0,c
  6604  0049DA  0602               	decf	(?_strncmp+1)^0,f,c
  6605  0049DC                     l1716:
  6606  0049DC  0012               	return		;funcret
  6607  0049DE                     __end_of_strncmp:
  6608                           	callstack 0
  6609                           
  6610 ;; *************** function _efgtoa *****************
  6611 ;; Defined at:
  6612 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6613 ;; Parameters:    Size  Location     Type
  6614 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  6615 ;;		 -> sprintf@f(6), 
  6616 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  6617 ;;  c               1   93[COMRAM] unsigned char 
  6618 ;; Auto vars:     Size  Location     Type
  6619 ;;  u               4   67[BANK0 ] unsigned char 
  6620 ;;  g               4   59[BANK0 ] unsigned char 
  6621 ;;  l               4   53[BANK0 ] unsigned char 
  6622 ;;  h               4   49[BANK0 ] unsigned char 
  6623 ;;  ou              4   15[BANK0 ] unsigned char 
  6624 ;;  n               2   65[BANK0 ] int 
  6625 ;;  e               2   63[BANK0 ] int 
  6626 ;;  i               2   57[BANK0 ] int 
  6627 ;;  w               2   46[BANK0 ] int 
  6628 ;;  p               2   43[BANK0 ] int 
  6629 ;;  sign            2   41[BANK0 ] int 
  6630 ;;  d               2   39[BANK0 ] int 
  6631 ;;  ne              2   37[BANK0 ] int 
  6632 ;;  m               2   35[BANK0 ] int 
  6633 ;;  pp              2   33[BANK0 ] int 
  6634 ;;  t               2   31[BANK0 ] int 
  6635 ;;  mode            1   48[BANK0 ] unsigned char 
  6636 ;;  nmode           1   45[BANK0 ] unsigned char 
  6637 ;; Return value:  Size  Location     Type
  6638 ;;                  2   87[COMRAM] int 
  6639 ;; Registers used:
  6640 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6641 ;; Tracked objects:
  6642 ;;		On entry : 0/0
  6643 ;;		On exit  : 0/0
  6644 ;;		Unchanged: 0/0
  6645 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6646 ;;      Params:         7       0       0       0       0       0       0
  6647 ;;      Locals:         0      56       0       0       0       0       0
  6648 ;;      Temps:          0       5       0       0       0       0       0
  6649 ;;      Totals:         7      61       0       0       0       0       0
  6650 ;;Total ram usage:       68 bytes
  6651 ;; Hardware stack levels used:    1
  6652 ;; Hardware stack levels required when called:    5
  6653 ;; This function calls:
  6654 ;;		___awdiv
  6655 ;;		___awmod
  6656 ;;		___fladd
  6657 ;;		___fldiv
  6658 ;;		___fleq
  6659 ;;		___flge
  6660 ;;		___flmul
  6661 ;;		___flneg
  6662 ;;		___flsub
  6663 ;;		___fltol
  6664 ;;		___fpclassifyf
  6665 ;;		_floorf
  6666 ;;		_isupper
  6667 ;;		_pad
  6668 ;;		_strcpy
  6669 ;;		_tolower
  6670 ;; This function is called by:
  6671 ;;		_vfpfcnvrt
  6672 ;; This function uses a non-reentrant model
  6673 ;;
  6674                           
  6675                           	psect	text24
  6676  0006C8                     __ptext24:
  6677                           	callstack 0
  6678  0006C8                     _efgtoa:
  6679                           	callstack 19
  6680  0006C8                     
  6681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  6682  0006C8  0E00               	movlw	0
  6683  0006CA  0100               	movlb	0	; () banked
  6684  0006CC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  6685  0006CE  0E00               	movlw	0
  6686  0006D0  6F89               	movwf	efgtoa@sign& (0+255),b
  6687  0006D2                     
  6688                           ; BSR set to: 0
  6689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  6690  0006D2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  6691  0006D6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  6692  0006DA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  6693  0006DE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  6694  0006E2                     
  6695                           ; BSR set to: 0
  6696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  6697  0006E2  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  6698  0006E4  EF78  F003         	goto	u5740
  6699  0006E8  EF76  F003         	goto	u5741
  6700  0006EC                     u5741:
  6701  0006EC  EF8E  F003         	goto	l5108
  6702  0006F0                     u5740:
  6703  0006F0                     
  6704                           ; BSR set to: 0
  6705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  6706  0006F0  0E00               	movlw	0
  6707  0006F2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  6708  0006F4  0E01               	movlw	1
  6709  0006F6  6F89               	movwf	efgtoa@sign& (0+255),b
  6710  0006F8                     
  6711                           ; BSR set to: 0
  6712                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  6713  0006F8  C09B  F001         	movff	efgtoa@g,___flneg@f1
  6714  0006FC  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  6715  000700  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  6716  000704  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  6717  000708  ECF2  F02B         	call	___flneg	;wreg free
  6718  00070C  C001  F09B         	movff	?___flneg,efgtoa@g
  6719  000710  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  6720  000714  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  6721  000718  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  6722  00071C                     l5108:
  6723                           
  6724                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  6725  00071C  0E00               	movlw	0
  6726  00071E  0100               	movlb	0	; () banked
  6727  000720  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  6728  000722  0E00               	movlw	0
  6729  000724  6FA1               	movwf	efgtoa@n& (0+255),b
  6730  000726                     
  6731                           ; BSR set to: 0
  6732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  6733  000726  C1B9  F08E         	movff	_width,efgtoa@w
  6734  00072A  C1BA  F08F         	movff	_width+1,efgtoa@w+1
  6735  00072E                     
  6736                           ; BSR set to: 0
  6737                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  6738  00072E  5189               	movf	efgtoa@sign& (0+255),w,b
  6739  000730  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6740  000732  A4D8               	btfss	status,2,c
  6741  000734  EF9E  F003         	goto	u5751
  6742  000738  EFA0  F003         	goto	u5750
  6743  00073C                     u5751:
  6744  00073C  EFA7  F003         	goto	l5116
  6745  000740                     u5750:
  6746  000740                     
  6747                           ; BSR set to: 0
  6748  000740  A5F8               	btfss	_flags& (0+255),2,b
  6749  000742  EFA5  F003         	goto	u5761
  6750  000746  EFA7  F003         	goto	u5760
  6751  00074A                     u5761:
  6752  00074A  EFC1  F003         	goto	l5128
  6753  00074E                     u5760:
  6754  00074E                     l5116:
  6755                           
  6756                           ; BSR set to: 0
  6757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  6758  00074E  5189               	movf	efgtoa@sign& (0+255),w,b
  6759  000750  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6760  000752  A4D8               	btfss	status,2,c
  6761  000754  EFAE  F003         	goto	u5771
  6762  000758  EFB0  F003         	goto	u5770
  6763  00075C                     u5771:
  6764  00075C  EFB6  F003         	goto	l5120
  6765  000760                     u5770:
  6766  000760                     
  6767                           ; BSR set to: 0
  6768  000760  0E00               	movlw	0
  6769  000762  6F74               	movwf	(_efgtoa$2998+1)& (0+255),b
  6770  000764  0E2B               	movlw	43
  6771  000766  6F73               	movwf	_efgtoa$2998& (0+255),b
  6772  000768  EFBA  F003         	goto	l5122
  6773  00076C                     l5120:
  6774                           
  6775                           ; BSR set to: 0
  6776  00076C  0E00               	movlw	0
  6777  00076E  6F74               	movwf	(_efgtoa$2998+1)& (0+255),b
  6778  000770  0E2D               	movlw	45
  6779  000772  6F73               	movwf	_efgtoa$2998& (0+255),b
  6780  000774                     l5122:
  6781                           
  6782                           ; BSR set to: 0
  6783  000774  C073  F269         	movff	_efgtoa$2998,_dbuf
  6784  000778                     
  6785                           ; BSR set to: 0
  6786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  6787  000778  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  6788  00077A  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  6789  00077C                     
  6790                           ; BSR set to: 0
  6791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  6792  00077C  078E               	decf	efgtoa@w& (0+255),f,b
  6793  00077E  A0D8               	btfss	status,0,c
  6794  000780  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  6795  000782                     l5128:
  6796                           
  6797                           ; BSR set to: 0
  6798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6799  000782  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  6800  000786  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6801  00078A  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6802  00078E  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6803  000792  EC23  F023         	call	___fpclassifyf	;wreg free
  6804  000796  0401               	decf	?___fpclassifyf^0,w,c
  6805  000798  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6806  00079A  A4D8               	btfss	status,2,c
  6807  00079C  EFD2  F003         	goto	u5781
  6808  0007A0  EFD4  F003         	goto	u5780
  6809  0007A4                     u5781:
  6810  0007A4  EF2B  F004         	goto	l5146
  6811  0007A8                     u5780:
  6812  0007A8  0EBF               	movlw	191
  6813  0007AA  0100               	movlb	0	; () banked
  6814  0007AC  6F6A               	movwf	??_efgtoa& (0+255),b
  6815  0007AE  0EFF               	movlw	255
  6816  0007B0  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  6817  0007B2  505E               	movf	efgtoa@c^0,w,c
  6818  0007B4  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  6819  0007B6  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  6820  0007B8  516A               	movf	??_efgtoa& (0+255),w,b
  6821  0007BA  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6822  0007BC  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  6823  0007BE  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6824  0007C0  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  6825  0007C2  E10A               	bnz	u5790
  6826  0007C4  0E1A               	movlw	26
  6827  0007C6  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6828  0007C8  A0D8               	btfss	status,0,c
  6829  0007CA  EFE9  F003         	goto	u5791
  6830  0007CE  EFEC  F003         	goto	u5790
  6831  0007D2                     u5791:
  6832  0007D2  0E01               	movlw	1
  6833  0007D4  EFED  F003         	goto	u5800
  6834  0007D8                     u5790:
  6835  0007D8  0E00               	movlw	0
  6836  0007DA                     u5800:
  6837  0007DA  6F75               	movwf	_efgtoa$2999& (0+255),b
  6838  0007DC  6B76               	clrf	(_efgtoa$2999+1)& (0+255),b
  6839  0007DE                     
  6840                           ; BSR set to: 0
  6841  0007DE  5175               	movf	_efgtoa$2999& (0+255),w,b
  6842  0007E0  1176               	iorwf	(_efgtoa$2999+1)& (0+255),w,b
  6843  0007E2  B4D8               	btfsc	status,2,c
  6844  0007E4  EFF6  F003         	goto	u5811
  6845  0007E8  EFF8  F003         	goto	u5810
  6846  0007EC                     u5811:
  6847  0007EC  EF06  F004         	goto	l5138
  6848  0007F0                     u5810:
  6849  0007F0                     
  6850                           ; BSR set to: 0
  6851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  6852  0007F0  0E69               	movlw	low _dbuf
  6853  0007F2  25A1               	addwf	efgtoa@n& (0+255),w,b
  6854  0007F4  6E01               	movwf	strcpy@dest^0,c
  6855  0007F6  0E02               	movlw	high _dbuf
  6856  0007F8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6857  0007FA  6E02               	movwf	(strcpy@dest+1)^0,c
  6858  0007FC  0EB4               	movlw	low STR_14
  6859  0007FE  6E03               	movwf	strcpy@src^0,c
  6860  000800  0E06               	movlw	high STR_14
  6861  000802  6E04               	movwf	(strcpy@src+1)^0,c
  6862  000804  ECD8  F029         	call	_strcpy	;wreg free
  6863                           
  6864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  6865  000808  EF12  F004         	goto	l5140
  6866  00080C                     l5138:
  6867                           
  6868                           ; BSR set to: 0
  6869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  6870  00080C  0E69               	movlw	low _dbuf
  6871  00080E  25A1               	addwf	efgtoa@n& (0+255),w,b
  6872  000810  6E01               	movwf	strcpy@dest^0,c
  6873  000812  0E02               	movlw	high _dbuf
  6874  000814  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6875  000816  6E02               	movwf	(strcpy@dest+1)^0,c
  6876  000818  0EBC               	movlw	low STR_15
  6877  00081A  6E03               	movwf	strcpy@src^0,c
  6878  00081C  0E06               	movlw	high STR_15
  6879  00081E  6E04               	movwf	(strcpy@src+1)^0,c
  6880  000820  ECD8  F029         	call	_strcpy	;wreg free
  6881  000824                     l5140:
  6882                           
  6883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  6884  000824  0100               	movlb	0	; () banked
  6885  000826  0EFD               	movlw	253
  6886  000828  278E               	addwf	efgtoa@w& (0+255),f,b
  6887  00082A  0EFF               	movlw	255
  6888  00082C  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  6889  00082E                     l5142:
  6890                           
  6891                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  6892  00082E  C058  F011         	movff	efgtoa@fp,pad@fp
  6893  000832  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  6894  000836  0E69               	movlw	low _dbuf
  6895  000838  6E13               	movwf	pad@buf^0,c
  6896  00083A  0E02               	movlw	high _dbuf
  6897  00083C  6E14               	movwf	(pad@buf+1)^0,c
  6898  00083E  C08E  F015         	movff	efgtoa@w,pad@p
  6899  000842  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  6900  000846  EC54  F025         	call	_pad	;wreg free
  6901  00084A  C011  F058         	movff	?_pad,?_efgtoa
  6902  00084E  C012  F059         	movff	?_pad+1,?_efgtoa+1
  6903  000852  EF3B  F009         	goto	l1478
  6904  000856                     l5146:
  6905                           
  6906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  6907  000856  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  6908  00085A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  6909  00085E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  6910  000862  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  6911  000866  EC23  F023         	call	___fpclassifyf	;wreg free
  6912  00086A  5001               	movf	?___fpclassifyf^0,w,c
  6913  00086C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  6914  00086E  A4D8               	btfss	status,2,c
  6915  000870  EF3C  F004         	goto	u5821
  6916  000874  EF3E  F004         	goto	u5820
  6917  000878                     u5821:
  6918  000878  EF7E  F004         	goto	l5164
  6919  00087C                     u5820:
  6920  00087C  0EBF               	movlw	191
  6921  00087E  0100               	movlb	0	; () banked
  6922  000880  6F6A               	movwf	??_efgtoa& (0+255),b
  6923  000882  0EFF               	movlw	255
  6924  000884  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  6925  000886  505E               	movf	efgtoa@c^0,w,c
  6926  000888  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  6927  00088A  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  6928  00088C  516A               	movf	??_efgtoa& (0+255),w,b
  6929  00088E  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  6930  000890  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  6931  000892  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  6932  000894  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  6933  000896  E10A               	bnz	u5830
  6934  000898  0E1A               	movlw	26
  6935  00089A  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  6936  00089C  A0D8               	btfss	status,0,c
  6937  00089E  EF53  F004         	goto	u5831
  6938  0008A2  EF56  F004         	goto	u5830
  6939  0008A6                     u5831:
  6940  0008A6  0E01               	movlw	1
  6941  0008A8  EF57  F004         	goto	u5840
  6942  0008AC                     u5830:
  6943  0008AC  0E00               	movlw	0
  6944  0008AE                     u5840:
  6945  0008AE  6F77               	movwf	_efgtoa$3003& (0+255),b
  6946  0008B0  6B78               	clrf	(_efgtoa$3003+1)& (0+255),b
  6947  0008B2                     
  6948                           ; BSR set to: 0
  6949  0008B2  5177               	movf	_efgtoa$3003& (0+255),w,b
  6950  0008B4  1178               	iorwf	(_efgtoa$3003+1)& (0+255),w,b
  6951  0008B6  B4D8               	btfsc	status,2,c
  6952  0008B8  EF60  F004         	goto	u5851
  6953  0008BC  EF62  F004         	goto	u5850
  6954  0008C0                     u5851:
  6955  0008C0  EF70  F004         	goto	l5156
  6956  0008C4                     u5850:
  6957  0008C4                     
  6958                           ; BSR set to: 0
  6959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  6960  0008C4  0E69               	movlw	low _dbuf
  6961  0008C6  25A1               	addwf	efgtoa@n& (0+255),w,b
  6962  0008C8  6E01               	movwf	strcpy@dest^0,c
  6963  0008CA  0E02               	movlw	high _dbuf
  6964  0008CC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6965  0008CE  6E02               	movwf	(strcpy@dest+1)^0,c
  6966  0008D0  0EB8               	movlw	low STR_18
  6967  0008D2  6E03               	movwf	strcpy@src^0,c
  6968  0008D4  0E06               	movlw	high STR_18
  6969  0008D6  6E04               	movwf	(strcpy@src+1)^0,c
  6970  0008D8  ECD8  F029         	call	_strcpy	;wreg free
  6971                           
  6972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  6973  0008DC  EF12  F004         	goto	l5140
  6974  0008E0                     l5156:
  6975                           
  6976                           ; BSR set to: 0
  6977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  6978  0008E0  0E69               	movlw	low _dbuf
  6979  0008E2  25A1               	addwf	efgtoa@n& (0+255),w,b
  6980  0008E4  6E01               	movwf	strcpy@dest^0,c
  6981  0008E6  0E02               	movlw	high _dbuf
  6982  0008E8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6983  0008EA  6E02               	movwf	(strcpy@dest+1)^0,c
  6984  0008EC  0EC0               	movlw	low STR_19
  6985  0008EE  6E03               	movwf	strcpy@src^0,c
  6986  0008F0  0E06               	movlw	high STR_19
  6987  0008F2  6E04               	movwf	(strcpy@src+1)^0,c
  6988  0008F4  ECD8  F029         	call	_strcpy	;wreg free
  6989  0008F8  EF12  F004         	goto	l5140
  6990  0008FC                     l5164:
  6991                           
  6992                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  6993  0008FC  0E00               	movlw	0
  6994  0008FE  0100               	movlb	0	; () banked
  6995  000900  6FA3               	movwf	efgtoa@u& (0+255),b
  6996  000902  0E00               	movlw	0
  6997  000904  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  6998  000906  0E80               	movlw	128
  6999  000908  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7000  00090A  0E3F               	movlw	63
  7001  00090C  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7002                           
  7003                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7004  00090E  0E00               	movlw	0
  7005  000910  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7006  000912  0E00               	movlw	0
  7007  000914  6F9F               	movwf	efgtoa@e& (0+255),b
  7008  000916                     
  7009                           ; BSR set to: 0
  7010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7011  000916  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7012  00091A  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7013  00091E  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7014  000922  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7015  000926  0E00               	movlw	0
  7016  000928  6E05               	movwf	___fleq@ff2^0,c
  7017  00092A  0E00               	movlw	0
  7018  00092C  6E06               	movwf	(___fleq@ff2+1)^0,c
  7019  00092E  0E00               	movlw	0
  7020  000930  6E07               	movwf	(___fleq@ff2+2)^0,c
  7021  000932  0E00               	movlw	0
  7022  000934  6E08               	movwf	(___fleq@ff2+3)^0,c
  7023  000936  ECCA  F026         	call	___fleq	;wreg free
  7024  00093A  B0D8               	btfsc	status,0,c
  7025  00093C  EFA2  F004         	goto	u5861
  7026  000940  EFA4  F004         	goto	u5860
  7027  000944                     u5861:
  7028  000944  EF27  F005         	goto	l5182
  7029  000948                     u5860:
  7030  000948  EFC3  F004         	goto	l5174
  7031  00094C                     l5170:
  7032                           
  7033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7034  00094C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7035  000950  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7036  000954  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7037  000958  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7038  00095C  0E00               	movlw	0
  7039  00095E  6E20               	movwf	___flmul@a^0,c
  7040  000960  0E00               	movlw	0
  7041  000962  6E21               	movwf	(___flmul@a+1)^0,c
  7042  000964  0E20               	movlw	32
  7043  000966  6E22               	movwf	(___flmul@a+2)^0,c
  7044  000968  0E41               	movlw	65
  7045  00096A  6E23               	movwf	(___flmul@a+3)^0,c
  7046  00096C  EC0C  F011         	call	___flmul	;wreg free
  7047  000970  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7048  000974  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7049  000978  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7050  00097C  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7051  000980                     
  7052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7053  000980  0100               	movlb	0	; () banked
  7054  000982  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7055  000984  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7056  000986                     l5174:
  7057                           
  7058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7059  000986  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7060  00098A  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7061  00098E  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7062  000992  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7063  000996  0E00               	movlw	0
  7064  000998  6E20               	movwf	___flmul@a^0,c
  7065  00099A  0E00               	movlw	0
  7066  00099C  6E21               	movwf	(___flmul@a+1)^0,c
  7067  00099E  0E20               	movlw	32
  7068  0009A0  6E22               	movwf	(___flmul@a+2)^0,c
  7069  0009A2  0E41               	movlw	65
  7070  0009A4  6E23               	movwf	(___flmul@a+3)^0,c
  7071  0009A6  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7072  0009AA  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7073  0009AE  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7074  0009B2  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7075  0009B6  EC0C  F011         	call	___flmul	;wreg free
  7076  0009BA  C01C  F039         	movff	?___flmul,___flge@ff2
  7077  0009BE  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7078  0009C2  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7079  0009C6  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7080  0009CA  ECA1  F022         	call	___flge	;wreg free
  7081  0009CE  B0D8               	btfsc	status,0,c
  7082  0009D0  EFEC  F004         	goto	u5871
  7083  0009D4  EFEE  F004         	goto	u5870
  7084  0009D8                     u5871:
  7085  0009D8  EFA6  F004         	goto	l5170
  7086  0009DC                     u5870:
  7087  0009DC  EF0E  F005         	goto	l5180
  7088  0009E0                     l5176:
  7089                           
  7090                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7091  0009E0  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7092  0009E4  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7093  0009E8  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7094  0009EC  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7095  0009F0  0E00               	movlw	0
  7096  0009F2  6E39               	movwf	___fldiv@a^0,c
  7097  0009F4  0E00               	movlw	0
  7098  0009F6  6E3A               	movwf	(___fldiv@a+1)^0,c
  7099  0009F8  0E20               	movlw	32
  7100  0009FA  6E3B               	movwf	(___fldiv@a+2)^0,c
  7101  0009FC  0E41               	movlw	65
  7102  0009FE  6E3C               	movwf	(___fldiv@a+3)^0,c
  7103  000A00  EC2B  F015         	call	___fldiv	;wreg free
  7104  000A04  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7105  000A08  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7106  000A0C  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7107  000A10  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7108  000A14                     
  7109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7110  000A14  0100               	movlb	0	; () banked
  7111  000A16  079F               	decf	efgtoa@e& (0+255),f,b
  7112  000A18  A0D8               	btfss	status,0,c
  7113  000A1A  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7114  000A1C                     l5180:
  7115                           
  7116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7117  000A1C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7118  000A20  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7119  000A24  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7120  000A28  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7121  000A2C  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7122  000A30  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7123  000A34  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7124  000A38  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7125  000A3C  ECA1  F022         	call	___flge	;wreg free
  7126  000A40  A0D8               	btfss	status,0,c
  7127  000A42  EF25  F005         	goto	u5881
  7128  000A46  EF27  F005         	goto	u5880
  7129  000A4A                     u5881:
  7130  000A4A  EFF0  F004         	goto	l5176
  7131  000A4E                     u5880:
  7132  000A4E                     l5182:
  7133                           
  7134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7135  000A4E  C05E  F007         	movff	efgtoa@c,tolower@c
  7136  000A52  6A08               	clrf	(tolower@c+1)^0,c
  7137  000A54  ECA8  F029         	call	_tolower	;wreg free
  7138  000A58  5007               	movf	?_tolower^0,w,c
  7139  000A5A  0100               	movlb	0	; () banked
  7140  000A5C  6F90               	movwf	efgtoa@mode& (0+255),b
  7141  000A5E                     
  7142                           ; BSR set to: 0
  7143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7144  000A5E  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7145  000A62                     
  7146                           ; BSR set to: 0
  7147                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7148  000A62  0E67               	movlw	103
  7149  000A64  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7150  000A66  A4D8               	btfss	status,2,c
  7151  000A68  EF38  F005         	goto	u5891
  7152  000A6C  EF3A  F005         	goto	u5890
  7153  000A70                     u5891:
  7154  000A70  EF60  F005         	goto	l5196
  7155  000A74                     u5890:
  7156  000A74                     
  7157                           ; BSR set to: 0
  7158                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7159  000A74  51F6               	movf	_prec& (0+255),w,b
  7160  000A76  11F7               	iorwf	(_prec+1)& (0+255),w,b
  7161  000A78  A4D8               	btfss	status,2,c
  7162  000A7A  EF41  F005         	goto	u5901
  7163  000A7E  EF43  F005         	goto	u5900
  7164  000A82                     u5901:
  7165  000A82  EF47  F005         	goto	l5192
  7166  000A86                     u5900:
  7167  000A86                     
  7168                           ; BSR set to: 0
  7169                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7170  000A86  0E00               	movlw	0
  7171  000A88  6FF7               	movwf	(_prec+1)& (0+255),b
  7172  000A8A  0E01               	movlw	1
  7173  000A8C  6FF6               	movwf	_prec& (0+255),b
  7174  000A8E                     l5192:
  7175                           
  7176                           ; BSR set to: 0
  7177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7178  000A8E  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7179  000A90  EF54  F005         	goto	u5910
  7180  000A94  51F7               	movf	(_prec+1)& (0+255),w,b
  7181  000A96  E106               	bnz	u5911
  7182  000A98  05F6               	decf	_prec& (0+255),w,b
  7183  000A9A  B0D8               	btfsc	status,0,c
  7184  000A9C  EF52  F005         	goto	u5911
  7185  000AA0  EF54  F005         	goto	u5910
  7186  000AA4                     u5911:
  7187  000AA4  EF5A  F005         	goto	l1496
  7188  000AA8                     u5910:
  7189  000AA8                     l5194:
  7190                           
  7191                           ; BSR set to: 0
  7192  000AA8  0E00               	movlw	0
  7193  000AAA  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7194  000AAC  0E06               	movlw	6
  7195  000AAE  6F8B               	movwf	efgtoa@p& (0+255),b
  7196  000AB0  EF69  F005         	goto	l5202
  7197  000AB4                     l1496:
  7198                           
  7199                           ; BSR set to: 0
  7200  000AB4  C0F6  F08B         	movff	_prec,efgtoa@p
  7201  000AB8  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  7202  000ABC  EF69  F005         	goto	l5202
  7203  000AC0                     l5196:
  7204                           
  7205                           ; BSR set to: 0
  7206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7207  000AC0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7208  000AC2  EF65  F005         	goto	u5921
  7209  000AC6  EF67  F005         	goto	u5920
  7210  000ACA                     u5921:
  7211  000ACA  EF54  F005         	goto	l5194
  7212  000ACE                     u5920:
  7213  000ACE  EF5A  F005         	goto	l1496
  7214  000AD2                     l5202:
  7215                           
  7216                           ; BSR set to: 0
  7217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7218  000AD2  0E67               	movlw	103
  7219  000AD4  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7220  000AD6  A4D8               	btfss	status,2,c
  7221  000AD8  EF70  F005         	goto	u5931
  7222  000ADC  EF72  F005         	goto	u5930
  7223  000AE0                     u5931:
  7224  000AE0  EFA1  F005         	goto	l5212
  7225  000AE4                     u5930:
  7226  000AE4                     
  7227                           ; BSR set to: 0
  7228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7229  000AE4  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7230  000AE6  EF80  F005         	goto	u5940
  7231  000AEA  0EFC               	movlw	252
  7232  000AEC  5D9F               	subwf	efgtoa@e& (0+255),w,b
  7233  000AEE  0EFF               	movlw	255
  7234  000AF0  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7235  000AF2  A0D8               	btfss	status,0,c
  7236  000AF4  EF7E  F005         	goto	u5941
  7237  000AF8  EF80  F005         	goto	u5940
  7238  000AFC                     u5941:
  7239  000AFC  EF9F  F005         	goto	l5210
  7240  000B00                     u5940:
  7241  000B00                     
  7242                           ; BSR set to: 0
  7243  000B00  0EFF               	movlw	255
  7244  000B02  6F6A               	movwf	??_efgtoa& (0+255),b
  7245  000B04  0EFF               	movlw	255
  7246  000B06  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7247  000B08  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  7248  000B0C  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  7249  000B10  516A               	movf	??_efgtoa& (0+255),w,b
  7250  000B12  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7251  000B14  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7252  000B16  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7253  000B18  519F               	movf	efgtoa@e& (0+255),w,b
  7254  000B1A  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7255  000B1C  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7256  000B1E  0A80               	xorlw	128
  7257  000B20  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  7258  000B22  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7259  000B24  0A80               	xorlw	128
  7260  000B26  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7261  000B28  A0D8               	btfss	status,0,c
  7262  000B2A  EF99  F005         	goto	u5951
  7263  000B2E  EF9B  F005         	goto	u5950
  7264  000B32                     u5951:
  7265  000B32  EF9F  F005         	goto	l5210
  7266  000B36                     u5950:
  7267  000B36                     
  7268                           ; BSR set to: 0
  7269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  7270  000B36  0E66               	movlw	102
  7271  000B38  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7272                           
  7273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  7274  000B3A  EFA1  F005         	goto	l5212
  7275  000B3E                     l5210:
  7276                           
  7277                           ; BSR set to: 0
  7278                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  7279  000B3E  0E65               	movlw	101
  7280  000B40  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7281  000B42                     l5212:
  7282                           
  7283                           ; BSR set to: 0
  7284                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  7285  000B42  C08B  F083         	movff	efgtoa@p,efgtoa@m
  7286  000B46  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  7287  000B4A                     
  7288                           ; BSR set to: 0
  7289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  7290  000B4A  0E67               	movlw	103
  7291  000B4C  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7292  000B4E  A4D8               	btfss	status,2,c
  7293  000B50  EFAC  F005         	goto	u5961
  7294  000B54  EFAE  F005         	goto	u5960
  7295  000B58                     u5961:
  7296  000B58  EFBE  F005         	goto	l5220
  7297  000B5C                     u5960:
  7298  000B5C                     
  7299                           ; BSR set to: 0
  7300  000B5C  0E66               	movlw	102
  7301  000B5E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7302  000B60  A4D8               	btfss	status,2,c
  7303  000B62  EFB5  F005         	goto	u5971
  7304  000B66  EFB7  F005         	goto	u5970
  7305  000B6A                     u5971:
  7306  000B6A  EFC0  F005         	goto	l5222
  7307  000B6E                     u5970:
  7308  000B6E                     
  7309                           ; BSR set to: 0
  7310  000B6E  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7311  000B70  EFBE  F005         	goto	u5980
  7312  000B74  EFBC  F005         	goto	u5981
  7313  000B78                     u5981:
  7314  000B78  EFC0  F005         	goto	l5222
  7315  000B7C                     u5980:
  7316  000B7C                     l5220:
  7317                           
  7318                           ; BSR set to: 0
  7319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  7320  000B7C  4B83               	infsnz	efgtoa@m& (0+255),f,b
  7321  000B7E  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  7322  000B80                     l5222:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  7326  000B80  0E66               	movlw	102
  7327  000B82  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7328  000B84  A4D8               	btfss	status,2,c
  7329  000B86  EFC7  F005         	goto	u5991
  7330  000B8A  EFC9  F005         	goto	u5990
  7331  000B8E                     u5991:
  7332  000B8E  EFE9  F005         	goto	l5232
  7333  000B92                     u5990:
  7334  000B92                     
  7335                           ; BSR set to: 0
  7336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  7337  000B92  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7338  000B94  EFD0  F005         	goto	u6000
  7339  000B98  EFCE  F005         	goto	u6001
  7340  000B9C                     u6001:
  7341  000B9C  EFDC  F005         	goto	l5228
  7342  000BA0                     u6000:
  7343  000BA0                     
  7344                           ; BSR set to: 0
  7345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  7346  000BA0  0E00               	movlw	0
  7347  000BA2  6FA3               	movwf	efgtoa@u& (0+255),b
  7348  000BA4  0E00               	movlw	0
  7349  000BA6  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7350  000BA8  0E80               	movlw	128
  7351  000BAA  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7352  000BAC  0E3F               	movlw	63
  7353  000BAE  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7354                           
  7355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  7356  000BB0  0E00               	movlw	0
  7357  000BB2  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7358  000BB4  0E00               	movlw	0
  7359  000BB6  6F9F               	movwf	efgtoa@e& (0+255),b
  7360  000BB8                     l5228:
  7361                           
  7362                           ; BSR set to: 0
  7363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  7364  000BB8  0E67               	movlw	103
  7365  000BBA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7366  000BBC  B4D8               	btfsc	status,2,c
  7367  000BBE  EFE3  F005         	goto	u6011
  7368  000BC2  EFE5  F005         	goto	u6010
  7369  000BC6                     u6011:
  7370  000BC6  EFE9  F005         	goto	l5232
  7371  000BCA                     u6010:
  7372  000BCA                     
  7373                           ; BSR set to: 0
  7374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  7375  000BCA  519F               	movf	efgtoa@e& (0+255),w,b
  7376  000BCC  2783               	addwf	efgtoa@m& (0+255),f,b
  7377  000BCE  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7378  000BD0  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7379  000BD2                     l5232:
  7380                           
  7381                           ; BSR set to: 0
  7382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  7383  000BD2  0E00               	movlw	0
  7384  000BD4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  7385  000BD6  0E00               	movlw	0
  7386  000BD8  6F99               	movwf	efgtoa@i& (0+255),b
  7387  000BDA                     
  7388                           ; BSR set to: 0
  7389                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  7390  000BDA  C09B  F091         	movff	efgtoa@g,efgtoa@h
  7391  000BDE  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  7392  000BE2  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  7393  000BE6  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  7394  000BEA                     
  7395                           ; BSR set to: 0
  7396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  7397  000BEA  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  7398  000BEE  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  7399  000BF2  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  7400  000BF6  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  7401                           
  7402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7403  000BFA  EF7A  F006         	goto	l5246
  7404  000BFE                     l5238:
  7405                           
  7406                           ; BSR set to: 0
  7407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  7408  000BFE  C091  F035         	movff	efgtoa@h,___fldiv@b
  7409  000C02  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  7410  000C06  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  7411  000C0A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  7412  000C0E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  7413  000C12  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  7414  000C16  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  7415  000C1A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  7416  000C1E  EC2B  F015         	call	___fldiv	;wreg free
  7417  000C22  C035  F04E         	movff	?___fldiv,floorf@x
  7418  000C26  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  7419  000C2A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  7420  000C2E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  7421  000C32  ECD6  F019         	call	_floorf	;wreg free
  7422  000C36  C04E  F095         	movff	?_floorf,efgtoa@l
  7423  000C3A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  7424  000C3E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  7425  000C42  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  7426                           
  7427                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  7428  000C46  C095  F04E         	movff	efgtoa@l,___fltol@f1
  7429  000C4A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  7430  000C4E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  7431  000C52  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  7432  000C56  EC1E  F022         	call	___fltol	;wreg free
  7433  000C5A  C04E  F087         	movff	?___fltol,efgtoa@d
  7434  000C5E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  7435  000C62                     
  7436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  7437  000C62  C091  F045         	movff	efgtoa@h,___flsub@b
  7438  000C66  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  7439  000C6A  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  7440  000C6E  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  7441  000C72  C0A3  F020         	movff	efgtoa@u,___flmul@a
  7442  000C76  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  7443  000C7A  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  7444  000C7E  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  7445  000C82  C095  F01C         	movff	efgtoa@l,___flmul@b
  7446  000C86  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  7447  000C8A  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  7448  000C8E  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  7449  000C92  EC0C  F011         	call	___flmul	;wreg free
  7450  000C96  C01C  F049         	movff	?___flmul,___flsub@a
  7451  000C9A  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  7452  000C9E  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  7453  000CA2  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  7454  000CA6  ECD4  F02A         	call	___flsub	;wreg free
  7455  000CAA  C045  F091         	movff	?___flsub,efgtoa@h
  7456  000CAE  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  7457  000CB2  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  7458  000CB6  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  7459  000CBA                     
  7460                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  7461  000CBA  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7462  000CBE  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7463  000CC2  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7464  000CC6  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7465  000CCA  0E00               	movlw	0
  7466  000CCC  6E39               	movwf	___fldiv@a^0,c
  7467  000CCE  0E00               	movlw	0
  7468  000CD0  6E3A               	movwf	(___fldiv@a+1)^0,c
  7469  000CD2  0E20               	movlw	32
  7470  000CD4  6E3B               	movwf	(___fldiv@a+2)^0,c
  7471  000CD6  0E41               	movlw	65
  7472  000CD8  6E3C               	movwf	(___fldiv@a+3)^0,c
  7473  000CDA  EC2B  F015         	call	___fldiv	;wreg free
  7474  000CDE  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7475  000CE2  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7476  000CE6  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7477  000CEA  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7478  000CEE                     
  7479                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  7480  000CEE  0100               	movlb	0	; () banked
  7481  000CF0  4B99               	infsnz	efgtoa@i& (0+255),f,b
  7482  000CF2  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  7483  000CF4                     l5246:
  7484                           
  7485                           ; BSR set to: 0
  7486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7487  000CF4  5183               	movf	efgtoa@m& (0+255),w,b
  7488  000CF6  5D99               	subwf	efgtoa@i& (0+255),w,b
  7489  000CF8  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  7490  000CFA  0A80               	xorlw	128
  7491  000CFC  6F6A               	movwf	??_efgtoa& (0+255),b
  7492  000CFE  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  7493  000D00  0A80               	xorlw	128
  7494  000D02  596A               	subwfb	??_efgtoa& (0+255),w,b
  7495  000D04  A0D8               	btfss	status,0,c
  7496  000D06  EF87  F006         	goto	u6021
  7497  000D0A  EF89  F006         	goto	u6020
  7498  000D0E                     u6021:
  7499  000D0E  EFFF  F005         	goto	l5238
  7500  000D12                     u6020:
  7501  000D12                     
  7502                           ; BSR set to: 0
  7503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  7504  000D12  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7505  000D16  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7506  000D1A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7507  000D1E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7508  000D22  0E00               	movlw	0
  7509  000D24  6E20               	movwf	___flmul@a^0,c
  7510  000D26  0E00               	movlw	0
  7511  000D28  6E21               	movwf	(___flmul@a+1)^0,c
  7512  000D2A  0EA0               	movlw	160
  7513  000D2C  6E22               	movwf	(___flmul@a+2)^0,c
  7514  000D2E  0E40               	movlw	64
  7515  000D30  6E23               	movwf	(___flmul@a+3)^0,c
  7516  000D32  EC0C  F011         	call	___flmul	;wreg free
  7517  000D36  C01C  F095         	movff	?___flmul,efgtoa@l
  7518  000D3A  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  7519  000D3E  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  7520  000D42  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  7521  000D46                     
  7522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  7523  000D46  C091  F035         	movff	efgtoa@h,___flge@ff1
  7524  000D4A  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  7525  000D4E  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  7526  000D52  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  7527  000D56  C095  F039         	movff	efgtoa@l,___flge@ff2
  7528  000D5A  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  7529  000D5E  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  7530  000D62  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  7531  000D66  ECA1  F022         	call	___flge	;wreg free
  7532  000D6A  B0D8               	btfsc	status,0,c
  7533  000D6C  EFBA  F006         	goto	u6031
  7534  000D70  EFBC  F006         	goto	u6030
  7535  000D74                     u6031:
  7536  000D74  EFC7  F006         	goto	l5254
  7537  000D78                     u6030:
  7538  000D78                     
  7539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  7540  000D78  0E00               	movlw	0
  7541  000D7A  0100               	movlb	0	; () banked
  7542  000D7C  6F95               	movwf	efgtoa@l& (0+255),b
  7543  000D7E  0E00               	movlw	0
  7544  000D80  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  7545  000D82  0E00               	movlw	0
  7546  000D84  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  7547  000D86  0E00               	movlw	0
  7548  000D88  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  7549                           
  7550                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  7551  000D8A  EFF0  F006         	goto	l5260
  7552  000D8E                     l5254:
  7553                           
  7554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  7555  000D8E  C091  F001         	movff	efgtoa@h,___fleq@ff1
  7556  000D92  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  7557  000D96  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  7558  000D9A  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  7559  000D9E  C095  F005         	movff	efgtoa@l,___fleq@ff2
  7560  000DA2  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  7561  000DA6  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  7562  000DAA  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  7563  000DAE  ECCA  F026         	call	___fleq	;wreg free
  7564  000DB2  A0D8               	btfss	status,0,c
  7565  000DB4  EFDE  F006         	goto	u6041
  7566  000DB8  EFE0  F006         	goto	u6040
  7567  000DBC                     u6041:
  7568  000DBC  EFF0  F006         	goto	l5260
  7569  000DC0                     u6040:
  7570  000DC0  0100               	movlb	0	; () banked
  7571  000DC2  B187               	btfsc	efgtoa@d& (0+255),0,b
  7572  000DC4  EFE6  F006         	goto	u6051
  7573  000DC8  EFE8  F006         	goto	u6050
  7574  000DCC                     u6051:
  7575  000DCC  EFF0  F006         	goto	l5260
  7576  000DD0                     u6050:
  7577  000DD0                     
  7578                           ; BSR set to: 0
  7579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  7580  000DD0  0E00               	movlw	0
  7581  000DD2  6F95               	movwf	efgtoa@l& (0+255),b
  7582  000DD4  0E00               	movlw	0
  7583  000DD6  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  7584  000DD8  0E00               	movlw	0
  7585  000DDA  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  7586  000DDC  0E00               	movlw	0
  7587  000DDE  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  7588  000DE0                     l5260:
  7589                           
  7590                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  7591  000DE0  C09B  F035         	movff	efgtoa@g,___fladd@b
  7592  000DE4  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  7593  000DE8  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  7594  000DEC  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  7595  000DF0  C095  F039         	movff	efgtoa@l,___fladd@a
  7596  000DF4  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  7597  000DF8  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  7598  000DFC  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  7599  000E00  EC5B  F00C         	call	___fladd	;wreg free
  7600  000E04  C035  F091         	movff	?___fladd,efgtoa@h
  7601  000E08  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  7602  000E0C  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  7603  000E10  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  7604  000E14                     
  7605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  7606  000E14  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  7607  000E18  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  7608  000E1C  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  7609  000E20  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  7610  000E24                     
  7611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  7612  000E24  0E65               	movlw	101
  7613  000E26  0100               	movlb	0	; () banked
  7614  000E28  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7615  000E2A  B4D8               	btfsc	status,2,c
  7616  000E2C  EF1A  F007         	goto	u6061
  7617  000E30  EF1C  F007         	goto	u6060
  7618  000E34                     u6061:
  7619  000E34  EF22  F007         	goto	l5268
  7620  000E38                     u6060:
  7621  000E38                     
  7622                           ; BSR set to: 0
  7623  000E38  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  7624  000E3C  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  7625  000E40  EF26  F007         	goto	l1522
  7626  000E44                     l5268:
  7627                           
  7628                           ; BSR set to: 0
  7629  000E44  0E00               	movlw	0
  7630  000E46  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  7631  000E48  0E00               	movlw	0
  7632  000E4A  6F85               	movwf	efgtoa@ne& (0+255),b
  7633  000E4C                     l1522:
  7634                           
  7635                           ; BSR set to: 0
  7636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  7637  000E4C  0E00               	movlw	0
  7638  000E4E  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  7639  000E50  0E00               	movlw	0
  7640  000E52  6F81               	movwf	efgtoa@pp& (0+255),b
  7641                           
  7642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  7643  000E54  0E00               	movlw	0
  7644  000E56  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  7645  000E58  0E00               	movlw	0
  7646  000E5A  6F7F               	movwf	efgtoa@t& (0+255),b
  7647                           
  7648                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  7649  000E5C  0E00               	movlw	0
  7650  000E5E  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  7651  000E60  0E00               	movlw	0
  7652  000E62  6F99               	movwf	efgtoa@i& (0+255),b
  7653                           
  7654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7655  000E64  EF21  F008         	goto	l5318
  7656  000E68                     l5270:
  7657                           
  7658                           ; BSR set to: 0
  7659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  7660  000E68  C091  F035         	movff	efgtoa@h,___fldiv@b
  7661  000E6C  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  7662  000E70  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  7663  000E74  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  7664  000E78  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  7665  000E7C  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  7666  000E80  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  7667  000E84  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  7668  000E88  EC2B  F015         	call	___fldiv	;wreg free
  7669  000E8C  C035  F04E         	movff	?___fldiv,floorf@x
  7670  000E90  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  7671  000E94  C037  F050         	movff	?___fldiv+2,floorf@x+2
  7672  000E98  C038  F051         	movff	?___fldiv+3,floorf@x+3
  7673  000E9C  ECD6  F019         	call	_floorf	;wreg free
  7674  000EA0  C04E  F095         	movff	?_floorf,efgtoa@l
  7675  000EA4  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  7676  000EA8  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  7677  000EAC  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  7678                           
  7679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  7680  000EB0  C095  F04E         	movff	efgtoa@l,___fltol@f1
  7681  000EB4  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  7682  000EB8  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  7683  000EBC  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  7684  000EC0  EC1E  F022         	call	___fltol	;wreg free
  7685  000EC4  C04E  F087         	movff	?___fltol,efgtoa@d
  7686  000EC8  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  7687  000ECC                     
  7688                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  7689  000ECC  0100               	movlb	0	; () banked
  7690  000ECE  B9F8               	btfsc	_flags& (0+255),4,b
  7691  000ED0  EF6C  F007         	goto	u6071
  7692  000ED4  EF6E  F007         	goto	u6070
  7693  000ED8                     u6071:
  7694  000ED8  EF8B  F007         	goto	l5282
  7695  000EDC                     u6070:
  7696  000EDC                     
  7697                           ; BSR set to: 0
  7698  000EDC  5187               	movf	efgtoa@d& (0+255),w,b
  7699  000EDE  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  7700  000EE0  A4D8               	btfss	status,2,c
  7701  000EE2  EF75  F007         	goto	u6081
  7702  000EE6  EF77  F007         	goto	u6080
  7703  000EEA                     u6081:
  7704  000EEA  EF8B  F007         	goto	l5282
  7705  000EEE                     u6080:
  7706  000EEE                     
  7707                           ; BSR set to: 0
  7708  000EEE  0E67               	movlw	103
  7709  000EF0  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7710  000EF2  A4D8               	btfss	status,2,c
  7711  000EF4  EF7E  F007         	goto	u6091
  7712  000EF8  EF80  F007         	goto	u6090
  7713  000EFC                     u6091:
  7714  000EFC  EF8B  F007         	goto	l5282
  7715  000F00                     u6090:
  7716  000F00                     
  7717                           ; BSR set to: 0
  7718  000F00  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7719  000F02  EF87  F007         	goto	u6100
  7720  000F06  EF85  F007         	goto	u6101
  7721  000F0A                     u6101:
  7722  000F0A  EF8B  F007         	goto	l5282
  7723  000F0E                     u6100:
  7724  000F0E                     
  7725                           ; BSR set to: 0
  7726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  7727  000F0E  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  7728  000F10  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  7729                           
  7730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  7731  000F12  EFD5  F007         	goto	l5310
  7732  000F16                     l5282:
  7733                           
  7734                           ; BSR set to: 0
  7735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  7736  000F16  5181               	movf	efgtoa@pp& (0+255),w,b
  7737  000F18  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7738  000F1A  A4D8               	btfss	status,2,c
  7739  000F1C  EF92  F007         	goto	u6111
  7740  000F20  EF94  F007         	goto	u6110
  7741  000F24                     u6111:
  7742  000F24  EFBE  F007         	goto	l5302
  7743  000F28                     u6110:
  7744  000F28                     
  7745                           ; BSR set to: 0
  7746  000F28  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  7747  000F2A  EF9B  F007         	goto	u6120
  7748  000F2E  EF99  F007         	goto	u6121
  7749  000F32                     u6121:
  7750  000F32  EFBE  F007         	goto	l5302
  7751  000F36                     u6120:
  7752  000F36                     
  7753                           ; BSR set to: 0
  7754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  7755  000F36  0E69               	movlw	low _dbuf
  7756  000F38  25A1               	addwf	efgtoa@n& (0+255),w,b
  7757  000F3A  6ED9               	movwf	fsr2l,c
  7758  000F3C  0E02               	movlw	high _dbuf
  7759  000F3E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7760  000F40  6EDA               	movwf	fsr2h,c
  7761  000F42  0E2E               	movlw	46
  7762  000F44  6EDF               	movwf	indf2,c
  7763  000F46                     
  7764                           ; BSR set to: 0
  7765  000F46  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7766  000F48  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7767  000F4A                     
  7768                           ; BSR set to: 0
  7769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  7770  000F4A  078E               	decf	efgtoa@w& (0+255),f,b
  7771  000F4C  A0D8               	btfss	status,0,c
  7772  000F4E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7773  000F50                     
  7774                           ; BSR set to: 0
  7775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  7776  000F50  0E00               	movlw	0
  7777  000F52  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  7778  000F54  0E01               	movlw	1
  7779  000F56  6F81               	movwf	efgtoa@pp& (0+255),b
  7780  000F58  EFBE  F007         	goto	l5302
  7781  000F5C                     l5294:
  7782                           
  7783                           ; BSR set to: 0
  7784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  7785  000F5C  0E69               	movlw	low _dbuf
  7786  000F5E  25A1               	addwf	efgtoa@n& (0+255),w,b
  7787  000F60  6ED9               	movwf	fsr2l,c
  7788  000F62  0E02               	movlw	high _dbuf
  7789  000F64  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7790  000F66  6EDA               	movwf	fsr2h,c
  7791  000F68  0E30               	movlw	48
  7792  000F6A  6EDF               	movwf	indf2,c
  7793  000F6C                     
  7794                           ; BSR set to: 0
  7795  000F6C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7796  000F6E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7797  000F70                     
  7798                           ; BSR set to: 0
  7799                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  7800  000F70  078E               	decf	efgtoa@w& (0+255),f,b
  7801  000F72  A0D8               	btfss	status,0,c
  7802  000F74  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7803  000F76                     
  7804                           ; BSR set to: 0
  7805                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  7806  000F76  077F               	decf	efgtoa@t& (0+255),f,b
  7807  000F78  A0D8               	btfss	status,0,c
  7808  000F7A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  7809  000F7C                     l5302:
  7810                           
  7811                           ; BSR set to: 0
  7812                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  7813  000F7C  517F               	movf	efgtoa@t& (0+255),w,b
  7814  000F7E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  7815  000F80  A4D8               	btfss	status,2,c
  7816  000F82  EFC5  F007         	goto	u6131
  7817  000F86  EFC7  F007         	goto	u6130
  7818  000F8A                     u6131:
  7819  000F8A  EFAE  F007         	goto	l5294
  7820  000F8E                     u6130:
  7821  000F8E                     
  7822                           ; BSR set to: 0
  7823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  7824  000F8E  0E69               	movlw	low _dbuf
  7825  000F90  25A1               	addwf	efgtoa@n& (0+255),w,b
  7826  000F92  6ED9               	movwf	fsr2l,c
  7827  000F94  0E02               	movlw	high _dbuf
  7828  000F96  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7829  000F98  6EDA               	movwf	fsr2h,c
  7830  000F9A  5187               	movf	efgtoa@d& (0+255),w,b
  7831  000F9C  0F30               	addlw	48
  7832  000F9E  6EDF               	movwf	indf2,c
  7833  000FA0                     
  7834                           ; BSR set to: 0
  7835  000FA0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7836  000FA2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7837  000FA4                     
  7838                           ; BSR set to: 0
  7839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  7840  000FA4  078E               	decf	efgtoa@w& (0+255),f,b
  7841  000FA6  A0D8               	btfss	status,0,c
  7842  000FA8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7843  000FAA                     l5310:
  7844                           
  7845                           ; BSR set to: 0
  7846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  7847  000FAA  C091  F045         	movff	efgtoa@h,___flsub@b
  7848  000FAE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  7849  000FB2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  7850  000FB6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  7851  000FBA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  7852  000FBE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  7853  000FC2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  7854  000FC6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  7855  000FCA  C095  F01C         	movff	efgtoa@l,___flmul@b
  7856  000FCE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  7857  000FD2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  7858  000FD6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  7859  000FDA  EC0C  F011         	call	___flmul	;wreg free
  7860  000FDE  C01C  F049         	movff	?___flmul,___flsub@a
  7861  000FE2  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  7862  000FE6  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  7863  000FEA  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  7864  000FEE  ECD4  F02A         	call	___flsub	;wreg free
  7865  000FF2  C045  F091         	movff	?___flsub,efgtoa@h
  7866  000FF6  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  7867  000FFA  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  7868  000FFE  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  7869  001002                     
  7870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  7871  001002  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7872  001006  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7873  00100A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7874  00100E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7875  001012  0E00               	movlw	0
  7876  001014  6E39               	movwf	___fldiv@a^0,c
  7877  001016  0E00               	movlw	0
  7878  001018  6E3A               	movwf	(___fldiv@a+1)^0,c
  7879  00101A  0E20               	movlw	32
  7880  00101C  6E3B               	movwf	(___fldiv@a+2)^0,c
  7881  00101E  0E41               	movlw	65
  7882  001020  6E3C               	movwf	(___fldiv@a+3)^0,c
  7883  001022  EC2B  F015         	call	___fldiv	;wreg free
  7884  001026  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7885  00102A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7886  00102E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7887  001032  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7888  001036                     
  7889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  7890  001036  0100               	movlb	0	; () banked
  7891  001038  0785               	decf	efgtoa@ne& (0+255),f,b
  7892  00103A  A0D8               	btfss	status,0,c
  7893  00103C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  7894  00103E                     
  7895                           ; BSR set to: 0
  7896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  7897  00103E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  7898  001040  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  7899  001042                     l5318:
  7900                           
  7901                           ; BSR set to: 0
  7902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  7903  001042  5183               	movf	efgtoa@m& (0+255),w,b
  7904  001044  5D99               	subwf	efgtoa@i& (0+255),w,b
  7905  001046  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  7906  001048  0A80               	xorlw	128
  7907  00104A  6F6A               	movwf	??_efgtoa& (0+255),b
  7908  00104C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  7909  00104E  0A80               	xorlw	128
  7910  001050  596A               	subwfb	??_efgtoa& (0+255),w,b
  7911  001052  B0D8               	btfsc	status,0,c
  7912  001054  EF2E  F008         	goto	u6141
  7913  001058  EF30  F008         	goto	u6140
  7914  00105C                     u6141:
  7915  00105C  EF3E  F008         	goto	l5322
  7916  001060                     u6140:
  7917  001060                     
  7918                           ; BSR set to: 0
  7919  001060  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  7920  001062  EF3C  F008         	goto	u6151
  7921  001066  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  7922  001068  E109               	bnz	u6150
  7923  00106A  0E4B               	movlw	75
  7924  00106C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  7925  00106E  A0D8               	btfss	status,0,c
  7926  001070  EF3C  F008         	goto	u6151
  7927  001074  EF3E  F008         	goto	u6150
  7928  001078                     u6151:
  7929  001078  EF34  F007         	goto	l5270
  7930  00107C                     u6150:
  7931  00107C                     l5322:
  7932                           
  7933                           ; BSR set to: 0
  7934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  7935  00107C  5181               	movf	efgtoa@pp& (0+255),w,b
  7936  00107E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  7937  001080  A4D8               	btfss	status,2,c
  7938  001082  EF45  F008         	goto	u6161
  7939  001086  EF47  F008         	goto	u6160
  7940  00108A                     u6161:
  7941  00108A  EF58  F008         	goto	l5330
  7942  00108E                     u6160:
  7943  00108E                     
  7944                           ; BSR set to: 0
  7945  00108E  A9F8               	btfss	_flags& (0+255),4,b
  7946  001090  EF4C  F008         	goto	u6171
  7947  001094  EF4E  F008         	goto	u6170
  7948  001098                     u6171:
  7949  001098  EF58  F008         	goto	l5330
  7950  00109C                     u6170:
  7951  00109C                     
  7952                           ; BSR set to: 0
  7953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  7954  00109C  0E69               	movlw	low _dbuf
  7955  00109E  25A1               	addwf	efgtoa@n& (0+255),w,b
  7956  0010A0  6ED9               	movwf	fsr2l,c
  7957  0010A2  0E02               	movlw	high _dbuf
  7958  0010A4  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7959  0010A6  6EDA               	movwf	fsr2h,c
  7960  0010A8  0E2E               	movlw	46
  7961  0010AA  6EDF               	movwf	indf2,c
  7962  0010AC                     
  7963                           ; BSR set to: 0
  7964  0010AC  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7965  0010AE  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7966  0010B0                     l5330:
  7967                           
  7968                           ; BSR set to: 0
  7969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  7970  0010B0  0E69               	movlw	low _dbuf
  7971  0010B2  25A1               	addwf	efgtoa@n& (0+255),w,b
  7972  0010B4  6ED9               	movwf	fsr2l,c
  7973  0010B6  0E02               	movlw	high _dbuf
  7974  0010B8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7975  0010BA  6EDA               	movwf	fsr2h,c
  7976  0010BC  0E00               	movlw	0
  7977  0010BE  6EDF               	movwf	indf2,c
  7978  0010C0                     
  7979                           ; BSR set to: 0
  7980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  7981  0010C0  0E65               	movlw	101
  7982  0010C2  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7983  0010C4  A4D8               	btfss	status,2,c
  7984  0010C6  EF67  F008         	goto	u6181
  7985  0010CA  EF69  F008         	goto	u6180
  7986  0010CE                     u6181:
  7987  0010CE  EF17  F004         	goto	l5142
  7988  0010D2                     u6180:
  7989  0010D2                     
  7990                           ; BSR set to: 0
  7991                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  7992  0010D2  0E00               	movlw	0
  7993  0010D4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  7994  0010D6  0E4F               	movlw	79
  7995  0010D8  6F99               	movwf	efgtoa@i& (0+255),b
  7996  0010DA                     
  7997                           ; BSR set to: 0
  7998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  7999  0010DA  0E69               	movlw	low _dbuf
  8000  0010DC  2599               	addwf	efgtoa@i& (0+255),w,b
  8001  0010DE  6ED9               	movwf	fsr2l,c
  8002  0010E0  0E02               	movlw	high _dbuf
  8003  0010E2  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8004  0010E4  6EDA               	movwf	fsr2h,c
  8005  0010E6  0E00               	movlw	0
  8006  0010E8  6EDF               	movwf	indf2,c
  8007  0010EA                     
  8008                           ; BSR set to: 0
  8009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8010  0010EA  0E00               	movlw	0
  8011  0010EC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8012  0010EE  0E00               	movlw	0
  8013  0010F0  6F89               	movwf	efgtoa@sign& (0+255),b
  8014  0010F2                     
  8015                           ; BSR set to: 0
  8016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8017  0010F2  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8018  0010F4  EF80  F008         	goto	u6190
  8019  0010F8  EF7E  F008         	goto	u6191
  8020  0010FC                     u6191:
  8021  0010FC  EF88  F008         	goto	l5346
  8022  001100                     u6190:
  8023  001100                     
  8024                           ; BSR set to: 0
  8025                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8026  001100  0E00               	movlw	0
  8027  001102  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8028  001104  0E01               	movlw	1
  8029  001106  6F89               	movwf	efgtoa@sign& (0+255),b
  8030  001108                     
  8031                           ; BSR set to: 0
  8032                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8033  001108  6D9F               	negf	efgtoa@e& (0+255),b
  8034  00110A  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8035  00110C  B0D8               	btfsc	status,0,c
  8036  00110E  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8037  001110                     l5346:
  8038                           
  8039                           ; BSR set to: 0
  8040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8041  001110  0E00               	movlw	0
  8042  001112  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8043  001114  0E02               	movlw	2
  8044  001116  6F8B               	movwf	efgtoa@p& (0+255),b
  8045                           
  8046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8047  001118  EFB9  F008         	goto	l5358
  8048  00111C                     l5348:
  8049                           
  8050                           ; BSR set to: 0
  8051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8052  00111C  0799               	decf	efgtoa@i& (0+255),f,b
  8053  00111E  A0D8               	btfss	status,0,c
  8054  001120  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8055  001122                     
  8056                           ; BSR set to: 0
  8057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8058  001122  0E69               	movlw	low _dbuf
  8059  001124  2599               	addwf	efgtoa@i& (0+255),w,b
  8060  001126  6ED9               	movwf	fsr2l,c
  8061  001128  0E02               	movlw	high _dbuf
  8062  00112A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8063  00112C  6EDA               	movwf	fsr2h,c
  8064  00112E  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8065  001132  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8066  001136  0E00               	movlw	0
  8067  001138  6E04               	movwf	(___awmod@divisor+1)^0,c
  8068  00113A  0E0A               	movlw	10
  8069  00113C  6E03               	movwf	___awmod@divisor^0,c
  8070  00113E  EC72  F026         	call	___awmod	;wreg free
  8071  001142  5001               	movf	?___awmod^0,w,c
  8072  001144  0F30               	addlw	48
  8073  001146  6EDF               	movwf	indf2,c
  8074  001148                     
  8075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8076  001148  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8077  00114C  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8078  001150  0E00               	movlw	0
  8079  001152  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8080  001154  0E0A               	movlw	10
  8081  001156  6E03               	movwf	___awdiv@divisor^0,c
  8082  001158  ECB7  F025         	call	___awdiv	;wreg free
  8083  00115C  C001  F09F         	movff	?___awdiv,efgtoa@e
  8084  001160  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8085  001164                     
  8086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8087  001164  0100               	movlb	0	; () banked
  8088  001166  078B               	decf	efgtoa@p& (0+255),f,b
  8089  001168  A0D8               	btfss	status,0,c
  8090  00116A  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8091  00116C                     
  8092                           ; BSR set to: 0
  8093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8094  00116C  078E               	decf	efgtoa@w& (0+255),f,b
  8095  00116E  A0D8               	btfss	status,0,c
  8096  001170  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8097  001172                     l5358:
  8098                           
  8099                           ; BSR set to: 0
  8100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8101  001172  519F               	movf	efgtoa@e& (0+255),w,b
  8102  001174  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8103  001176  A4D8               	btfss	status,2,c
  8104  001178  EFC0  F008         	goto	u6201
  8105  00117C  EFC2  F008         	goto	u6200
  8106  001180                     u6201:
  8107  001180  EF8E  F008         	goto	l5348
  8108  001184                     u6200:
  8109  001184                     
  8110                           ; BSR set to: 0
  8111  001184  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8112  001186  EFCF  F008         	goto	u6210
  8113  00118A  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8114  00118C  E106               	bnz	u6211
  8115  00118E  058B               	decf	efgtoa@p& (0+255),w,b
  8116  001190  B0D8               	btfsc	status,0,c
  8117  001192  EFCD  F008         	goto	u6211
  8118  001196  EFCF  F008         	goto	u6210
  8119  00119A                     u6211:
  8120  00119A  EF8E  F008         	goto	l5348
  8121  00119E                     u6210:
  8122  00119E                     
  8123                           ; BSR set to: 0
  8124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8125  00119E  0799               	decf	efgtoa@i& (0+255),f,b
  8126  0011A0  A0D8               	btfss	status,0,c
  8127  0011A2  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8128  0011A4                     
  8129                           ; BSR set to: 0
  8130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8131  0011A4  5189               	movf	efgtoa@sign& (0+255),w,b
  8132  0011A6  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8133  0011A8  A4D8               	btfss	status,2,c
  8134  0011AA  EFD9  F008         	goto	u6221
  8135  0011AE  EFDB  F008         	goto	u6220
  8136  0011B2                     u6221:
  8137  0011B2  EFE1  F008         	goto	l5368
  8138  0011B6                     u6220:
  8139  0011B6                     
  8140                           ; BSR set to: 0
  8141  0011B6  0E00               	movlw	0
  8142  0011B8  6F7A               	movwf	(_efgtoa$3007+1)& (0+255),b
  8143  0011BA  0E2B               	movlw	43
  8144  0011BC  6F79               	movwf	_efgtoa$3007& (0+255),b
  8145  0011BE  EFE5  F008         	goto	l5370
  8146  0011C2                     l5368:
  8147                           
  8148                           ; BSR set to: 0
  8149  0011C2  0E00               	movlw	0
  8150  0011C4  6F7A               	movwf	(_efgtoa$3007+1)& (0+255),b
  8151  0011C6  0E2D               	movlw	45
  8152  0011C8  6F79               	movwf	_efgtoa$3007& (0+255),b
  8153  0011CA                     l5370:
  8154                           
  8155                           ; BSR set to: 0
  8156  0011CA  0E69               	movlw	low _dbuf
  8157  0011CC  2599               	addwf	efgtoa@i& (0+255),w,b
  8158  0011CE  6ED9               	movwf	fsr2l,c
  8159  0011D0  0E02               	movlw	high _dbuf
  8160  0011D2  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8161  0011D4  6EDA               	movwf	fsr2h,c
  8162  0011D6  C079  FFDF         	movff	_efgtoa$3007,indf2
  8163  0011DA                     
  8164                           ; BSR set to: 0
  8165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8166  0011DA  078E               	decf	efgtoa@w& (0+255),f,b
  8167  0011DC  A0D8               	btfss	status,0,c
  8168  0011DE  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8169  0011E0                     
  8170                           ; BSR set to: 0
  8171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8172  0011E0  0799               	decf	efgtoa@i& (0+255),f,b
  8173  0011E2  A0D8               	btfss	status,0,c
  8174  0011E4  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8175  0011E6                     
  8176                           ; BSR set to: 0
  8177  0011E6  0EBF               	movlw	191
  8178  0011E8  6F6A               	movwf	??_efgtoa& (0+255),b
  8179  0011EA  0EFF               	movlw	255
  8180  0011EC  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8181  0011EE  505E               	movf	efgtoa@c^0,w,c
  8182  0011F0  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8183  0011F2  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8184  0011F4  516A               	movf	??_efgtoa& (0+255),w,b
  8185  0011F6  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8186  0011F8  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8187  0011FA  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8188  0011FC  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8189  0011FE  E10A               	bnz	u6230
  8190  001200  0E1A               	movlw	26
  8191  001202  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8192  001204  A0D8               	btfss	status,0,c
  8193  001206  EF07  F009         	goto	u6231
  8194  00120A  EF0A  F009         	goto	u6230
  8195  00120E                     u6231:
  8196  00120E  0E01               	movlw	1
  8197  001210  EF0B  F009         	goto	u6240
  8198  001214                     u6230:
  8199  001214  0E00               	movlw	0
  8200  001216                     u6240:
  8201  001216  6F7D               	movwf	_efgtoa$3009& (0+255),b
  8202  001218  6B7E               	clrf	(_efgtoa$3009+1)& (0+255),b
  8203  00121A                     
  8204                           ; BSR set to: 0
  8205  00121A  517D               	movf	_efgtoa$3009& (0+255),w,b
  8206  00121C  117E               	iorwf	(_efgtoa$3009+1)& (0+255),w,b
  8207  00121E  A4D8               	btfss	status,2,c
  8208  001220  EF14  F009         	goto	u6251
  8209  001224  EF16  F009         	goto	u6250
  8210  001228                     u6251:
  8211  001228  EF1C  F009         	goto	l5384
  8212  00122C                     u6250:
  8213  00122C                     
  8214                           ; BSR set to: 0
  8215  00122C  0E00               	movlw	0
  8216  00122E  6F7C               	movwf	(_efgtoa$3008+1)& (0+255),b
  8217  001230  0E65               	movlw	101
  8218  001232  6F7B               	movwf	_efgtoa$3008& (0+255),b
  8219  001234  EF20  F009         	goto	l5386
  8220  001238                     l5384:
  8221                           
  8222                           ; BSR set to: 0
  8223  001238  0E00               	movlw	0
  8224  00123A  6F7C               	movwf	(_efgtoa$3008+1)& (0+255),b
  8225  00123C  0E45               	movlw	69
  8226  00123E  6F7B               	movwf	_efgtoa$3008& (0+255),b
  8227  001240                     l5386:
  8228                           
  8229                           ; BSR set to: 0
  8230  001240  0E69               	movlw	low _dbuf
  8231  001242  2599               	addwf	efgtoa@i& (0+255),w,b
  8232  001244  6ED9               	movwf	fsr2l,c
  8233  001246  0E02               	movlw	high _dbuf
  8234  001248  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8235  00124A  6EDA               	movwf	fsr2h,c
  8236  00124C  C07B  FFDF         	movff	_efgtoa$3008,indf2
  8237  001250                     
  8238                           ; BSR set to: 0
  8239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  8240  001250  078E               	decf	efgtoa@w& (0+255),f,b
  8241  001252  A0D8               	btfss	status,0,c
  8242  001254  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8243  001256                     
  8244                           ; BSR set to: 0
  8245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8246  001256  0E69               	movlw	low _dbuf
  8247  001258  25A1               	addwf	efgtoa@n& (0+255),w,b
  8248  00125A  6E01               	movwf	strcpy@dest^0,c
  8249  00125C  0E02               	movlw	high _dbuf
  8250  00125E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8251  001260  6E02               	movwf	(strcpy@dest+1)^0,c
  8252  001262  0E69               	movlw	low _dbuf
  8253  001264  2599               	addwf	efgtoa@i& (0+255),w,b
  8254  001266  6E03               	movwf	strcpy@src^0,c
  8255  001268  0E02               	movlw	high _dbuf
  8256  00126A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8257  00126C  6E04               	movwf	(strcpy@src+1)^0,c
  8258  00126E  ECD8  F029         	call	_strcpy	;wreg free
  8259  001272  EF17  F004         	goto	l5142
  8260  001276                     l1478:
  8261  001276  0012               	return		;funcret
  8262  001278                     __end_of_efgtoa:
  8263                           	callstack 0
  8264                           
  8265 ;; *************** function _tolower *****************
  8266 ;; Defined at:
  8267 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  8268 ;; Parameters:    Size  Location     Type
  8269 ;;  c               2    6[COMRAM] int 
  8270 ;; Auto vars:     Size  Location     Type
  8271 ;;		None
  8272 ;; Return value:  Size  Location     Type
  8273 ;;                  2    6[COMRAM] int 
  8274 ;; Registers used:
  8275 ;;		wreg, status,2, status,0
  8276 ;; Tracked objects:
  8277 ;;		On entry : 0/0
  8278 ;;		On exit  : 0/0
  8279 ;;		Unchanged: 0/0
  8280 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8281 ;;      Params:         2       0       0       0       0       0       0
  8282 ;;      Locals:         2       0       0       0       0       0       0
  8283 ;;      Temps:          4       0       0       0       0       0       0
  8284 ;;      Totals:         8       0       0       0       0       0       0
  8285 ;;Total ram usage:        8 bytes
  8286 ;; Hardware stack levels used:    1
  8287 ;; Hardware stack levels required when called:    2
  8288 ;; This function calls:
  8289 ;;		_isupper
  8290 ;; This function is called by:
  8291 ;;		_efgtoa
  8292 ;;		_vfpfcnvrt
  8293 ;; This function uses a non-reentrant model
  8294 ;;
  8295                           
  8296                           	psect	text25
  8297  005350                     __ptext25:
  8298                           	callstack 0
  8299  005350                     _tolower:
  8300                           	callstack 22
  8301  005350  0EBF               	movlw	191
  8302  005352  6E09               	movwf	??_tolower^0,c
  8303  005354  0EFF               	movlw	255
  8304  005356  6E0A               	movwf	(??_tolower+1)^0,c
  8305  005358  C007  F00B         	movff	tolower@c,??_tolower+2
  8306  00535C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8307  005360  5009               	movf	??_tolower^0,w,c
  8308  005362  260B               	addwf	(??_tolower+2)^0,f,c
  8309  005364  500A               	movf	(??_tolower+1)^0,w,c
  8310  005366  220C               	addwfc	(??_tolower+3)^0,f,c
  8311  005368  500C               	movf	(??_tolower+3)^0,w,c
  8312  00536A  E10A               	bnz	u5420
  8313  00536C  0E1A               	movlw	26
  8314  00536E  5C0B               	subwf	(??_tolower+2)^0,w,c
  8315  005370  A0D8               	btfss	status,0,c
  8316  005372  EFBD  F029         	goto	u5421
  8317  005376  EFC0  F029         	goto	u5420
  8318  00537A                     u5421:
  8319  00537A  0E01               	movlw	1
  8320  00537C  EFC1  F029         	goto	u5430
  8321  005380                     u5420:
  8322  005380  0E00               	movlw	0
  8323  005382                     u5430:
  8324  005382  6E0D               	movwf	_tolower$3160^0,c
  8325  005384  6A0E               	clrf	(_tolower$3160+1)^0,c
  8326  005386  500D               	movf	_tolower$3160^0,w,c
  8327  005388  100E               	iorwf	(_tolower$3160+1)^0,w,c
  8328  00538A  B4D8               	btfsc	status,2,c
  8329  00538C  EFCA  F029         	goto	u5441
  8330  005390  EFCC  F029         	goto	u5440
  8331  005394                     u5441:
  8332  005394  EFD3  F029         	goto	l1726
  8333  005398                     u5440:
  8334  005398  0E20               	movlw	32
  8335  00539A  1007               	iorwf	tolower@c^0,w,c
  8336  00539C  6E07               	movwf	?_tolower^0,c
  8337  00539E  5008               	movf	(tolower@c+1)^0,w,c
  8338  0053A0  6E08               	movwf	(?_tolower+1)^0,c
  8339  0053A2  EFD7  F029         	goto	l1731
  8340  0053A6                     l1726:
  8341  0053A6  C007  F007         	movff	tolower@c,?_tolower
  8342  0053AA  C008  F008         	movff	tolower@c+1,?_tolower+1
  8343  0053AE                     l1731:
  8344  0053AE  0012               	return		;funcret
  8345  0053B0                     __end_of_tolower:
  8346                           	callstack 0
  8347                           
  8348 ;; *************** function _isupper *****************
  8349 ;; Defined at:
  8350 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  8351 ;; Parameters:    Size  Location     Type
  8352 ;;  c               2    0[COMRAM] int 
  8353 ;; Auto vars:     Size  Location     Type
  8354 ;;		None
  8355 ;; Return value:  Size  Location     Type
  8356 ;;                  2    0[COMRAM] int 
  8357 ;; Registers used:
  8358 ;;		wreg, status,2, status,0
  8359 ;; Tracked objects:
  8360 ;;		On entry : 0/0
  8361 ;;		On exit  : 0/0
  8362 ;;		Unchanged: 0/0
  8363 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8364 ;;      Params:         2       0       0       0       0       0       0
  8365 ;;      Locals:         0       0       0       0       0       0       0
  8366 ;;      Temps:          4       0       0       0       0       0       0
  8367 ;;      Totals:         6       0       0       0       0       0       0
  8368 ;;Total ram usage:        6 bytes
  8369 ;; Hardware stack levels used:    1
  8370 ;; Hardware stack levels required when called:    1
  8371 ;; This function calls:
  8372 ;;		Nothing
  8373 ;; This function is called by:
  8374 ;;		_efgtoa
  8375 ;;		_vfpfcnvrt
  8376 ;;		_tolower
  8377 ;; This function uses a non-reentrant model
  8378 ;;
  8379                           
  8380                           	psect	text26
  8381  0057AC                     __ptext26:
  8382                           	callstack 0
  8383  0057AC                     _isupper:
  8384                           	callstack 22
  8385  0057AC  0EBF               	movlw	191
  8386  0057AE  6E03               	movwf	??_isupper^0,c
  8387  0057B0  0EFF               	movlw	255
  8388  0057B2  6E04               	movwf	(??_isupper+1)^0,c
  8389  0057B4  C001  F005         	movff	isupper@c,??_isupper+2
  8390  0057B8  C002  F006         	movff	isupper@c+1,??_isupper+3
  8391  0057BC  5003               	movf	??_isupper^0,w,c
  8392  0057BE  2605               	addwf	(??_isupper+2)^0,f,c
  8393  0057C0  5004               	movf	(??_isupper+1)^0,w,c
  8394  0057C2  2206               	addwfc	(??_isupper+3)^0,f,c
  8395  0057C4  5006               	movf	(??_isupper+3)^0,w,c
  8396  0057C6  E10A               	bnz	u4430
  8397  0057C8  0E1A               	movlw	26
  8398  0057CA  5C05               	subwf	(??_isupper+2)^0,w,c
  8399  0057CC  A0D8               	btfss	status,0,c
  8400  0057CE  EFEB  F02B         	goto	u4431
  8401  0057D2  EFEE  F02B         	goto	u4430
  8402  0057D6                     u4431:
  8403  0057D6  0E01               	movlw	1
  8404  0057D8  EFEF  F02B         	goto	u4440
  8405  0057DC                     u4430:
  8406  0057DC  0E00               	movlw	0
  8407  0057DE                     u4440:
  8408  0057DE  6E01               	movwf	?_isupper^0,c
  8409  0057E0  6A02               	clrf	(?_isupper+1)^0,c
  8410  0057E2  0012               	return		;funcret
  8411  0057E4                     __end_of_isupper:
  8412                           	callstack 0
  8413                           
  8414 ;; *************** function _strcpy *****************
  8415 ;; Defined at:
  8416 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  8417 ;; Parameters:    Size  Location     Type
  8418 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8419 ;;		 -> dbuf(80), 
  8420 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8421 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  8422 ;;		 -> dbuf(80), 
  8423 ;; Auto vars:     Size  Location     Type
  8424 ;;  d               2    8[COMRAM] PTR unsigned char 
  8425 ;;		 -> dbuf(80), 
  8426 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8427 ;;		 -> STR_19(4), STR_18(4), STR_15(4), STR_14(4), 
  8428 ;;		 -> dbuf(80), 
  8429 ;; Return value:  Size  Location     Type
  8430 ;;                  2    0[COMRAM] PTR unsigned char 
  8431 ;; Registers used:
  8432 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8433 ;; Tracked objects:
  8434 ;;		On entry : 0/0
  8435 ;;		On exit  : 0/0
  8436 ;;		Unchanged: 0/0
  8437 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8438 ;;      Params:         4       0       0       0       0       0       0
  8439 ;;      Locals:         4       0       0       0       0       0       0
  8440 ;;      Temps:          2       0       0       0       0       0       0
  8441 ;;      Totals:        10       0       0       0       0       0       0
  8442 ;;Total ram usage:       10 bytes
  8443 ;; Hardware stack levels used:    1
  8444 ;; Hardware stack levels required when called:    1
  8445 ;; This function calls:
  8446 ;;		Nothing
  8447 ;; This function is called by:
  8448 ;;		_efgtoa
  8449 ;; This function uses a non-reentrant model
  8450 ;;
  8451                           
  8452                           	psect	text27
  8453  0053B0                     __ptext27:
  8454                           	callstack 0
  8455  0053B0                     _strcpy:
  8456                           	callstack 22
  8457  0053B0  C003  F007         	movff	strcpy@src,strcpy@s
  8458  0053B4  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8459  0053B8  C001  F009         	movff	strcpy@dest,strcpy@d
  8460  0053BC  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8461  0053C0                     l4980:
  8462  0053C0  5007               	movf	strcpy@s^0,w,c
  8463  0053C2  6E05               	movwf	??_strcpy^0,c
  8464  0053C4  5008               	movf	(strcpy@s+1)^0,w,c
  8465  0053C6  6E06               	movwf	(??_strcpy+1)^0,c
  8466  0053C8  4A07               	infsnz	strcpy@s^0,f,c
  8467  0053CA  2A08               	incf	(strcpy@s+1)^0,f,c
  8468  0053CC  C005  FFF6         	movff	??_strcpy,tblptrl
  8469  0053D0  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8470  0053D4  6AF8               	clrf	tblptru,c
  8471  0053D6  C009  FFD9         	movff	strcpy@d,fsr2l
  8472  0053DA  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8473  0053DE  4A09               	infsnz	strcpy@d^0,f,c
  8474  0053E0  2A0A               	incf	(strcpy@d+1)^0,f,c
  8475  0053E2  0E05               	movlw	(high __ramtop+-1)
  8476  0053E4  64F7               	cpfsgt	tblptrh,c
  8477  0053E6  D003               	bra	u5407
  8478  0053E8  0008               	tblrd		*
  8479  0053EA  50F5               	movf	tablat,w,c
  8480  0053EC  D005               	bra	u5400
  8481  0053EE                     u5407:
  8482  0053EE  CFF6 FFE1          	movff	tblptrl,fsr1l
  8483  0053F2  CFF7 FFE2          	movff	tblptrh,fsr1h
  8484  0053F6  50E7               	movf	indf1,w,c
  8485  0053F8                     u5400:
  8486  0053F8  6EDF               	movwf	indf2,c
  8487  0053FA  50DF               	movf	indf2,w,c
  8488  0053FC  A4D8               	btfss	status,2,c
  8489  0053FE  EF03  F02A         	goto	u5411
  8490  005402  EF05  F02A         	goto	u5410
  8491  005406                     u5411:
  8492  005406  EFE0  F029         	goto	l4980
  8493  00540A                     u5410:
  8494  00540A  0012               	return		;funcret
  8495  00540C                     __end_of_strcpy:
  8496                           	callstack 0
  8497                           
  8498 ;; *************** function _floorf *****************
  8499 ;; Defined at:
  8500 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  8501 ;; Parameters:    Size  Location     Type
  8502 ;;  x               4   77[COMRAM] float 
  8503 ;; Auto vars:     Size  Location     Type
  8504 ;;  u               4    6[BANK0 ] struct .
  8505 ;;  m               4    0[BANK0 ] unsigned long 
  8506 ;;  e               2    4[BANK0 ] int 
  8507 ;; Return value:  Size  Location     Type
  8508 ;;                  4   77[COMRAM] float 
  8509 ;; Registers used:
  8510 ;;		wreg, status,2, status,0
  8511 ;; Tracked objects:
  8512 ;;		On entry : 0/0
  8513 ;;		On exit  : 0/0
  8514 ;;		Unchanged: 0/0
  8515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8516 ;;      Params:         4       0       0       0       0       0       0
  8517 ;;      Locals:         0      10       0       0       0       0       0
  8518 ;;      Temps:          6       0       0       0       0       0       0
  8519 ;;      Totals:        10      10       0       0       0       0       0
  8520 ;;Total ram usage:       20 bytes
  8521 ;; Hardware stack levels used:    1
  8522 ;; Hardware stack levels required when called:    1
  8523 ;; This function calls:
  8524 ;;		Nothing
  8525 ;; This function is called by:
  8526 ;;		_efgtoa
  8527 ;; This function uses a non-reentrant model
  8528 ;;
  8529                           
  8530                           	psect	text28
  8531  0033AC                     __ptext28:
  8532                           	callstack 0
  8533  0033AC                     _floorf:
  8534                           	callstack 22
  8535  0033AC  C1AB  F066         	movff	floorf@F524,floorf@u
  8536  0033B0  C1AC  F067         	movff	floorf@F524+1,floorf@u+1
  8537  0033B4  C1AD  F068         	movff	floorf@F524+2,floorf@u+2
  8538  0033B8  C1AE  F069         	movff	floorf@F524+3,floorf@u+3
  8539  0033BC  C04E  F066         	movff	floorf@x,floorf@u
  8540  0033C0  C04F  F067         	movff	floorf@x+1,floorf@u+1
  8541  0033C4  C050  F068         	movff	floorf@x+2,floorf@u+2
  8542  0033C8  C051  F069         	movff	floorf@x+3,floorf@u+3
  8543  0033CC  0E81               	movlw	129
  8544  0033CE  6E52               	movwf	??_floorf^0,c
  8545  0033D0  0EFF               	movlw	255
  8546  0033D2  6E53               	movwf	(??_floorf+1)^0,c
  8547  0033D4  C066  F054         	movff	floorf@u,??_floorf+2
  8548  0033D8  C067  F055         	movff	floorf@u+1,??_floorf+3
  8549  0033DC  C068  F056         	movff	floorf@u+2,??_floorf+4
  8550  0033E0  C069  F057         	movff	floorf@u+3,??_floorf+5
  8551  0033E4  0E18               	movlw	24
  8552  0033E6  EFFA  F019         	goto	u5450
  8553  0033EA                     u5455:
  8554  0033EA  90D8               	bcf	status,0,c
  8555  0033EC  3257               	rrcf	(??_floorf+5)^0,f,c
  8556  0033EE  3256               	rrcf	(??_floorf+4)^0,f,c
  8557  0033F0  3255               	rrcf	(??_floorf+3)^0,f,c
  8558  0033F2  3254               	rrcf	(??_floorf+2)^0,f,c
  8559  0033F4                     u5450:
  8560  0033F4  2EE8               	decfsz	wreg,f,c
  8561  0033F6  EFF5  F019         	goto	u5455
  8562  0033FA  5054               	movf	(??_floorf+2)^0,w,c
  8563  0033FC  2452               	addwf	??_floorf^0,w,c
  8564  0033FE  0100               	movlb	0	; () banked
  8565  003400  6F64               	movwf	floorf@e& (0+255),b
  8566  003402  0E00               	movlw	0
  8567  003404  2053               	addwfc	(??_floorf+1)^0,w,c
  8568  003406  6F65               	movwf	(floorf@e+1)& (0+255),b
  8569  003408  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  8570  00340A  EF10  F01A         	goto	u5461
  8571  00340E  5165               	movf	(floorf@e+1)& (0+255),w,b
  8572  003410  E109               	bnz	u5460
  8573  003412  0E17               	movlw	23
  8574  003414  5D64               	subwf	floorf@e& (0+255),w,b
  8575  003416  A0D8               	btfss	status,0,c
  8576  003418  EF10  F01A         	goto	u5461
  8577  00341C  EF12  F01A         	goto	u5460
  8578  003420                     u5461:
  8579  003420  EF1C  F01A         	goto	l4998
  8580  003424                     u5460:
  8581  003424                     l4996:
  8582                           
  8583                           ; BSR set to: 0
  8584  003424  C04E  F04E         	movff	floorf@x,?_floorf
  8585  003428  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  8586  00342C  C050  F050         	movff	floorf@x+2,?_floorf+2
  8587  003430  C051  F051         	movff	floorf@x+3,?_floorf+3
  8588  003434  EFE0  F01A         	goto	l1650
  8589  003438                     l4998:
  8590                           
  8591                           ; BSR set to: 0
  8592  003438  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  8593  00343A  EF21  F01A         	goto	u5471
  8594  00343E  EF23  F01A         	goto	u5470
  8595  003442                     u5471:
  8596  003442  EF94  F01A         	goto	l5008
  8597  003446                     u5470:
  8598  003446                     
  8599                           ; BSR set to: 0
  8600  003446  C064  F052         	movff	floorf@e,??_floorf
  8601  00344A  0EFF               	movlw	255
  8602  00344C  6E53               	movwf	(??_floorf+1)^0,c
  8603  00344E  0EFF               	movlw	255
  8604  003450  6E54               	movwf	(??_floorf+2)^0,c
  8605  003452  0E7F               	movlw	127
  8606  003454  6E55               	movwf	(??_floorf+3)^0,c
  8607  003456  0E00               	movlw	0
  8608  003458  6E56               	movwf	(??_floorf+4)^0,c
  8609  00345A                     u5485:
  8610  00345A  6652               	tstfsz	??_floorf^0,c
  8611  00345C  EF32  F01A         	goto	u5486
  8612  003460  EF3A  F01A         	goto	u5487
  8613  003464                     u5486:
  8614  003464  3456               	rlcf	(??_floorf+4)^0,w,c
  8615  003466  3256               	rrcf	(??_floorf+4)^0,f,c
  8616  003468  3255               	rrcf	(??_floorf+3)^0,f,c
  8617  00346A  3254               	rrcf	(??_floorf+2)^0,f,c
  8618  00346C  3253               	rrcf	(??_floorf+1)^0,f,c
  8619  00346E  2E52               	decfsz	??_floorf^0,f,c
  8620  003470  EF2D  F01A         	goto	u5485
  8621  003474                     u5487:
  8622  003474  C053  F060         	movff	??_floorf+1,floorf@m
  8623  003478  C054  F061         	movff	??_floorf+2,floorf@m+1
  8624  00347C  C055  F062         	movff	??_floorf+3,floorf@m+2
  8625  003480  C056  F063         	movff	??_floorf+4,floorf@m+3
  8626  003484  0100               	movlb	0	; () banked
  8627  003486  5160               	movf	floorf@m& (0+255),w,b
  8628  003488  1566               	andwf	floorf@u& (0+255),w,b
  8629  00348A  6E52               	movwf	??_floorf^0,c
  8630  00348C  5161               	movf	(floorf@m+1)& (0+255),w,b
  8631  00348E  1567               	andwf	(floorf@u+1)& (0+255),w,b
  8632  003490  6E53               	movwf	(??_floorf+1)^0,c
  8633  003492  5162               	movf	(floorf@m+2)& (0+255),w,b
  8634  003494  1568               	andwf	(floorf@u+2)& (0+255),w,b
  8635  003496  6E54               	movwf	(??_floorf+2)^0,c
  8636  003498  5163               	movf	(floorf@m+3)& (0+255),w,b
  8637  00349A  1569               	andwf	(floorf@u+3)& (0+255),w,b
  8638  00349C  6E55               	movwf	(??_floorf+3)^0,c
  8639  00349E  5052               	movf	??_floorf^0,w,c
  8640  0034A0  1053               	iorwf	(??_floorf+1)^0,w,c
  8641  0034A2  1054               	iorwf	(??_floorf+2)^0,w,c
  8642  0034A4  1055               	iorwf	(??_floorf+3)^0,w,c
  8643  0034A6  A4D8               	btfss	status,2,c
  8644  0034A8  EF58  F01A         	goto	u5491
  8645  0034AC  EF5A  F01A         	goto	u5490
  8646  0034B0                     u5491:
  8647  0034B0  EF5C  F01A         	goto	l5004
  8648  0034B4                     u5490:
  8649  0034B4  EF12  F01A         	goto	l4996
  8650  0034B8                     l5004:
  8651                           
  8652                           ; BSR set to: 0
  8653  0034B8  C066  F052         	movff	floorf@u,??_floorf
  8654  0034BC  C067  F053         	movff	floorf@u+1,??_floorf+1
  8655  0034C0  C068  F054         	movff	floorf@u+2,??_floorf+2
  8656  0034C4  C069  F055         	movff	floorf@u+3,??_floorf+3
  8657  0034C8  0E20               	movlw	32
  8658  0034CA  EF6C  F01A         	goto	u5500
  8659  0034CE                     u5505:
  8660  0034CE  90D8               	bcf	status,0,c
  8661  0034D0  3255               	rrcf	(??_floorf+3)^0,f,c
  8662  0034D2  3254               	rrcf	(??_floorf+2)^0,f,c
  8663  0034D4  3253               	rrcf	(??_floorf+1)^0,f,c
  8664  0034D6  3252               	rrcf	??_floorf^0,f,c
  8665  0034D8                     u5500:
  8666  0034D8  2EE8               	decfsz	wreg,f,c
  8667  0034DA  EF67  F01A         	goto	u5505
  8668  0034DE  5052               	movf	??_floorf^0,w,c
  8669  0034E0  1053               	iorwf	(??_floorf+1)^0,w,c
  8670  0034E2  1054               	iorwf	(??_floorf+2)^0,w,c
  8671  0034E4  1055               	iorwf	(??_floorf+3)^0,w,c
  8672  0034E6  B4D8               	btfsc	status,2,c
  8673  0034E8  EF78  F01A         	goto	u5511
  8674  0034EC  EF7A  F01A         	goto	u5510
  8675  0034F0                     u5511:
  8676  0034F0  EF82  F01A         	goto	l1653
  8677  0034F4                     u5510:
  8678  0034F4                     
  8679                           ; BSR set to: 0
  8680  0034F4  5160               	movf	floorf@m& (0+255),w,b
  8681  0034F6  2766               	addwf	floorf@u& (0+255),f,b
  8682  0034F8  5161               	movf	(floorf@m+1)& (0+255),w,b
  8683  0034FA  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  8684  0034FC  5162               	movf	(floorf@m+2)& (0+255),w,b
  8685  0034FE  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  8686  003500  5163               	movf	(floorf@m+3)& (0+255),w,b
  8687  003502  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  8688  003504                     l1653:
  8689                           
  8690                           ; BSR set to: 0
  8691  003504  1D60               	comf	floorf@m& (0+255),w,b
  8692  003506  6E52               	movwf	??_floorf^0,c
  8693  003508  1D61               	comf	(floorf@m+1)& (0+255),w,b
  8694  00350A  6E53               	movwf	(??_floorf+1)^0,c
  8695  00350C  1D62               	comf	(floorf@m+2)& (0+255),w,b
  8696  00350E  6E54               	movwf	(??_floorf+2)^0,c
  8697  003510  1D63               	comf	(floorf@m+3)& (0+255),w,b
  8698  003512  6E55               	movwf	(??_floorf+3)^0,c
  8699  003514  5052               	movf	??_floorf^0,w,c
  8700  003516  1766               	andwf	floorf@u& (0+255),f,b
  8701  003518  5053               	movf	(??_floorf+1)^0,w,c
  8702  00351A  1767               	andwf	(floorf@u+1)& (0+255),f,b
  8703  00351C  5054               	movf	(??_floorf+2)^0,w,c
  8704  00351E  1768               	andwf	(floorf@u+2)& (0+255),f,b
  8705  003520  5055               	movf	(??_floorf+3)^0,w,c
  8706  003522  1769               	andwf	(floorf@u+3)& (0+255),f,b
  8707  003524  EFD8  F01A         	goto	l5016
  8708  003528                     l5008:
  8709                           
  8710                           ; BSR set to: 0
  8711  003528  C066  F052         	movff	floorf@u,??_floorf
  8712  00352C  C067  F053         	movff	floorf@u+1,??_floorf+1
  8713  003530  C068  F054         	movff	floorf@u+2,??_floorf+2
  8714  003534  C069  F055         	movff	floorf@u+3,??_floorf+3
  8715  003538  0E20               	movlw	32
  8716  00353A  EFA4  F01A         	goto	u5520
  8717  00353E                     u5525:
  8718  00353E  90D8               	bcf	status,0,c
  8719  003540  3255               	rrcf	(??_floorf+3)^0,f,c
  8720  003542  3254               	rrcf	(??_floorf+2)^0,f,c
  8721  003544  3253               	rrcf	(??_floorf+1)^0,f,c
  8722  003546  3252               	rrcf	??_floorf^0,f,c
  8723  003548                     u5520:
  8724  003548  2EE8               	decfsz	wreg,f,c
  8725  00354A  EF9F  F01A         	goto	u5525
  8726  00354E  5052               	movf	??_floorf^0,w,c
  8727  003550  1053               	iorwf	(??_floorf+1)^0,w,c
  8728  003552  1054               	iorwf	(??_floorf+2)^0,w,c
  8729  003554  1055               	iorwf	(??_floorf+3)^0,w,c
  8730  003556  A4D8               	btfss	status,2,c
  8731  003558  EFB0  F01A         	goto	u5531
  8732  00355C  EFB2  F01A         	goto	u5530
  8733  003560                     u5531:
  8734  003560  EFBC  F01A         	goto	l5012
  8735  003564                     u5530:
  8736  003564                     
  8737                           ; BSR set to: 0
  8738  003564  0E00               	movlw	0
  8739  003566  6F66               	movwf	floorf@u& (0+255),b
  8740  003568  0E00               	movlw	0
  8741  00356A  6F67               	movwf	(floorf@u+1)& (0+255),b
  8742  00356C  0E00               	movlw	0
  8743  00356E  6F68               	movwf	(floorf@u+2)& (0+255),b
  8744  003570  0E00               	movlw	0
  8745  003572  6F69               	movwf	(floorf@u+3)& (0+255),b
  8746  003574  EFD8  F01A         	goto	l5016
  8747  003578                     l5012:
  8748                           
  8749                           ; BSR set to: 0
  8750  003578  90D8               	bcf	status,0,c
  8751  00357A  3566               	rlcf	floorf@u& (0+255),w,b
  8752  00357C  6E52               	movwf	??_floorf^0,c
  8753  00357E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  8754  003580  6E53               	movwf	(??_floorf+1)^0,c
  8755  003582  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  8756  003584  6E54               	movwf	(??_floorf+2)^0,c
  8757  003586  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  8758  003588  6E55               	movwf	(??_floorf+3)^0,c
  8759  00358A  5052               	movf	??_floorf^0,w,c
  8760  00358C  1053               	iorwf	(??_floorf+1)^0,w,c
  8761  00358E  1054               	iorwf	(??_floorf+2)^0,w,c
  8762  003590  1055               	iorwf	(??_floorf+3)^0,w,c
  8763  003592  B4D8               	btfsc	status,2,c
  8764  003594  EFCE  F01A         	goto	u5541
  8765  003598  EFD0  F01A         	goto	u5540
  8766  00359C                     u5541:
  8767  00359C  EFD8  F01A         	goto	l5016
  8768  0035A0                     u5540:
  8769  0035A0                     
  8770                           ; BSR set to: 0
  8771  0035A0  0E00               	movlw	0
  8772  0035A2  6F66               	movwf	floorf@u& (0+255),b
  8773  0035A4  0E00               	movlw	0
  8774  0035A6  6F67               	movwf	(floorf@u+1)& (0+255),b
  8775  0035A8  0E80               	movlw	128
  8776  0035AA  6F68               	movwf	(floorf@u+2)& (0+255),b
  8777  0035AC  0EBF               	movlw	191
  8778  0035AE  6F69               	movwf	(floorf@u+3)& (0+255),b
  8779  0035B0                     l5016:
  8780                           
  8781                           ; BSR set to: 0
  8782  0035B0  C066  F04E         	movff	floorf@u,?_floorf
  8783  0035B4  C067  F04F         	movff	floorf@u+1,?_floorf+1
  8784  0035B8  C068  F050         	movff	floorf@u+2,?_floorf+2
  8785  0035BC  C069  F051         	movff	floorf@u+3,?_floorf+3
  8786  0035C0                     l1650:
  8787                           
  8788                           ; BSR set to: 0
  8789  0035C0  0012               	return		;funcret
  8790  0035C2                     __end_of_floorf:
  8791                           	callstack 0
  8792                           
  8793 ;; *************** function ___fpclassifyf *****************
  8794 ;; Defined at:
  8795 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  8796 ;; Parameters:    Size  Location     Type
  8797 ;;  x               4    0[COMRAM] float 
  8798 ;; Auto vars:     Size  Location     Type
  8799 ;;  u               4   10[COMRAM] struct .
  8800 ;;  e               2    8[COMRAM] int 
  8801 ;; Return value:  Size  Location     Type
  8802 ;;                  2    0[COMRAM] int 
  8803 ;; Registers used:
  8804 ;;		wreg, status,2, status,0
  8805 ;; Tracked objects:
  8806 ;;		On entry : 0/0
  8807 ;;		On exit  : 0/0
  8808 ;;		Unchanged: 0/0
  8809 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8810 ;;      Params:         4       0       0       0       0       0       0
  8811 ;;      Locals:         6       0       0       0       0       0       0
  8812 ;;      Temps:          4       0       0       0       0       0       0
  8813 ;;      Totals:        14       0       0       0       0       0       0
  8814 ;;Total ram usage:       14 bytes
  8815 ;; Hardware stack levels used:    1
  8816 ;; Hardware stack levels required when called:    1
  8817 ;; This function calls:
  8818 ;;		Nothing
  8819 ;; This function is called by:
  8820 ;;		_efgtoa
  8821 ;; This function uses a non-reentrant model
  8822 ;;
  8823                           
  8824                           	psect	text29
  8825  004646                     __ptext29:
  8826                           	callstack 0
  8827  004646                     ___fpclassifyf:
  8828                           	callstack 22
  8829  004646  C1AF  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  8830  00464A  C1B0  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  8831  00464E  C1B1  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  8832  004652  C1B2  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  8833  004656  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  8834  00465A  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  8835  00465E  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  8836  004662  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  8837  004666  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8838  00466A  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8839  00466E  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8840  004672  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8841  004676  0E18               	movlw	24
  8842  004678  EF43  F023         	goto	u5330
  8843  00467C                     u5335:
  8844  00467C  90D8               	bcf	status,0,c
  8845  00467E  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  8846  004680  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  8847  004682  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  8848  004684  3205               	rrcf	??___fpclassifyf^0,f,c
  8849  004686                     u5330:
  8850  004686  2EE8               	decfsz	wreg,f,c
  8851  004688  EF3E  F023         	goto	u5335
  8852  00468C  5005               	movf	??___fpclassifyf^0,w,c
  8853  00468E  6E09               	movwf	___fpclassifyf@e^0,c
  8854  004690  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  8855  004692  5009               	movf	___fpclassifyf@e^0,w,c
  8856  004694  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8857  004696  A4D8               	btfss	status,2,c
  8858  004698  EF50  F023         	goto	u5341
  8859  00469C  EF52  F023         	goto	u5340
  8860  0046A0                     u5341:
  8861  0046A0  EF72  F023         	goto	l4968
  8862  0046A4                     u5340:
  8863  0046A4  90D8               	bcf	status,0,c
  8864  0046A6  340B               	rlcf	___fpclassifyf@u^0,w,c
  8865  0046A8  6E05               	movwf	??___fpclassifyf^0,c
  8866  0046AA  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  8867  0046AC  6E06               	movwf	(??___fpclassifyf+1)^0,c
  8868  0046AE  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  8869  0046B0  6E07               	movwf	(??___fpclassifyf+2)^0,c
  8870  0046B2  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  8871  0046B4  6E08               	movwf	(??___fpclassifyf+3)^0,c
  8872  0046B6  5005               	movf	??___fpclassifyf^0,w,c
  8873  0046B8  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8874  0046BA  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8875  0046BC  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8876  0046BE  A4D8               	btfss	status,2,c
  8877  0046C0  EF64  F023         	goto	u5351
  8878  0046C4  EF66  F023         	goto	u5350
  8879  0046C8                     u5351:
  8880  0046C8  EF6C  F023         	goto	l4964
  8881  0046CC                     u5350:
  8882  0046CC  0E00               	movlw	0
  8883  0046CE  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8884  0046D0  0E02               	movlw	2
  8885  0046D2  6E01               	movwf	?___fpclassifyf^0,c
  8886  0046D4  EFA1  F023         	goto	l1605
  8887  0046D8                     l4964:
  8888  0046D8  0E00               	movlw	0
  8889  0046DA  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8890  0046DC  0E03               	movlw	3
  8891  0046DE  6E01               	movwf	?___fpclassifyf^0,c
  8892  0046E0  EFA1  F023         	goto	l1605
  8893  0046E4                     l4968:
  8894  0046E4  2809               	incf	___fpclassifyf@e^0,w,c
  8895  0046E6  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  8896  0046E8  A4D8               	btfss	status,2,c
  8897  0046EA  EF79  F023         	goto	u5361
  8898  0046EE  EF7B  F023         	goto	u5360
  8899  0046F2                     u5361:
  8900  0046F2  EF9D  F023         	goto	l4974
  8901  0046F6                     u5360:
  8902  0046F6  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  8903  0046FA  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  8904  0046FE  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  8905  004702  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  8906  004706  0E09               	movlw	9
  8907  004708                     u5375:
  8908  004708  90D8               	bcf	status,0,c
  8909  00470A  3605               	rlcf	??___fpclassifyf^0,f,c
  8910  00470C  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  8911  00470E  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  8912  004710  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  8913  004712  2EE8               	decfsz	wreg,f,c
  8914  004714  EF84  F023         	goto	u5375
  8915  004718  5005               	movf	??___fpclassifyf^0,w,c
  8916  00471A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  8917  00471C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  8918  00471E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  8919  004720  B4D8               	btfsc	status,2,c
  8920  004722  EF95  F023         	goto	u5381
  8921  004726  EF98  F023         	goto	u5380
  8922  00472A                     u5381:
  8923  00472A  0E01               	movlw	1
  8924  00472C  EF99  F023         	goto	u5390
  8925  004730                     u5380:
  8926  004730  0E00               	movlw	0
  8927  004732                     u5390:
  8928  004732  6E01               	movwf	?___fpclassifyf^0,c
  8929  004734  6A02               	clrf	(?___fpclassifyf+1)^0,c
  8930  004736  EFA1  F023         	goto	l1605
  8931  00473A                     l4974:
  8932  00473A  0E00               	movlw	0
  8933  00473C  6E02               	movwf	(?___fpclassifyf+1)^0,c
  8934  00473E  0E04               	movlw	4
  8935  004740  6E01               	movwf	?___fpclassifyf^0,c
  8936  004742                     l1605:
  8937  004742  0012               	return		;funcret
  8938  004744                     __end_of___fpclassifyf:
  8939                           	callstack 0
  8940                           
  8941 ;; *************** function ___flsub *****************
  8942 ;; Defined at:
  8943 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  8944 ;; Parameters:    Size  Location     Type
  8945 ;;  b               4   68[COMRAM] int 
  8946 ;;  a               4   72[COMRAM] int 
  8947 ;; Auto vars:     Size  Location     Type
  8948 ;;		None
  8949 ;; Return value:  Size  Location     Type
  8950 ;;                  4   68[COMRAM] int 
  8951 ;; Registers used:
  8952 ;;		wreg, status,2, status,0, cstack
  8953 ;; Tracked objects:
  8954 ;;		On entry : 0/0
  8955 ;;		On exit  : 0/0
  8956 ;;		Unchanged: 0/0
  8957 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8958 ;;      Params:         8       0       0       0       0       0       0
  8959 ;;      Locals:         0       0       0       0       0       0       0
  8960 ;;      Temps:          0       0       0       0       0       0       0
  8961 ;;      Totals:         8       0       0       0       0       0       0
  8962 ;;Total ram usage:        8 bytes
  8963 ;; Hardware stack levels used:    1
  8964 ;; Hardware stack levels required when called:    2
  8965 ;; This function calls:
  8966 ;;		___fladd
  8967 ;; This function is called by:
  8968 ;;		_secretMenu
  8969 ;;		_efgtoa
  8970 ;; This function uses a non-reentrant model
  8971 ;;
  8972                           
  8973                           	psect	text30
  8974  0055A8                     __ptext30:
  8975                           	callstack 0
  8976  0055A8                     ___flsub:
  8977                           	callstack 21
  8978  0055A8  0E00               	movlw	0
  8979  0055AA  1A49               	xorwf	___flsub@a^0,f,c
  8980  0055AC  0E00               	movlw	0
  8981  0055AE  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  8982  0055B0  0E00               	movlw	0
  8983  0055B2  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  8984  0055B4  0E80               	movlw	128
  8985  0055B6  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  8986  0055B8  C045  F035         	movff	___flsub@b,___fladd@b
  8987  0055BC  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  8988  0055C0  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  8989  0055C4  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  8990  0055C8  C049  F039         	movff	___flsub@a,___fladd@a
  8991  0055CC  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  8992  0055D0  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  8993  0055D4  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  8994  0055D8  EC5B  F00C         	call	___fladd	;wreg free
  8995  0055DC  C035  F045         	movff	?___fladd,?___flsub
  8996  0055E0  C036  F046         	movff	?___fladd+1,?___flsub+1
  8997  0055E4  C037  F047         	movff	?___fladd+2,?___flsub+2
  8998  0055E8  C038  F048         	movff	?___fladd+3,?___flsub+3
  8999  0055EC  0012               	return		;funcret
  9000  0055EE                     __end_of___flsub:
  9001                           	callstack 0
  9002                           
  9003 ;; *************** function ___fladd *****************
  9004 ;; Defined at:
  9005 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9006 ;; Parameters:    Size  Location     Type
  9007 ;;  b               4   52[COMRAM] int 
  9008 ;;  a               4   56[COMRAM] int 
  9009 ;; Auto vars:     Size  Location     Type
  9010 ;;  grs             1   67[COMRAM] unsigned char 
  9011 ;;  bexp            1   66[COMRAM] unsigned char 
  9012 ;;  aexp            1   65[COMRAM] unsigned char 
  9013 ;;  signs           1   64[COMRAM] unsigned char 
  9014 ;; Return value:  Size  Location     Type
  9015 ;;                  4   52[COMRAM] unsigned char 
  9016 ;; Registers used:
  9017 ;;		wreg, status,2, status,0
  9018 ;; Tracked objects:
  9019 ;;		On entry : 0/0
  9020 ;;		On exit  : 0/0
  9021 ;;		Unchanged: 0/0
  9022 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9023 ;;      Params:         8       0       0       0       0       0       0
  9024 ;;      Locals:         4       0       0       0       0       0       0
  9025 ;;      Temps:          4       0       0       0       0       0       0
  9026 ;;      Totals:        16       0       0       0       0       0       0
  9027 ;;Total ram usage:       16 bytes
  9028 ;; Hardware stack levels used:    1
  9029 ;; Hardware stack levels required when called:    1
  9030 ;; This function calls:
  9031 ;;		Nothing
  9032 ;; This function is called by:
  9033 ;;		_calculatedAverageValue
  9034 ;;		_secretMenu
  9035 ;;		_speedControl
  9036 ;;		___flsub
  9037 ;;		_efgtoa
  9038 ;; This function uses a non-reentrant model
  9039 ;;
  9040                           
  9041                           	psect	text31
  9042  0018B6                     __ptext31:
  9043                           	callstack 0
  9044  0018B6                     ___fladd:
  9045                           	callstack 21
  9046  0018B6  5038               	movf	(___fladd@b+3)^0,w,c
  9047  0018B8  0B80               	andlw	128
  9048  0018BA  6E41               	movwf	___fladd@signs^0,c
  9049  0018BC  5038               	movf	(___fladd@b+3)^0,w,c
  9050  0018BE  2438               	addwf	(___fladd@b+3)^0,w,c
  9051  0018C0  6E43               	movwf	___fladd@bexp^0,c
  9052  0018C2  AE37               	btfss	(___fladd@b+2)^0,7,c
  9053  0018C4  EF66  F00C         	goto	u4021
  9054  0018C8  EF68  F00C         	goto	u4020
  9055  0018CC                     u4021:
  9056  0018CC  EF69  F00C         	goto	l4182
  9057  0018D0                     u4020:
  9058  0018D0  8043               	bsf	___fladd@bexp^0,0,c
  9059  0018D2                     l4182:
  9060  0018D2  5043               	movf	___fladd@bexp^0,w,c
  9061  0018D4  B4D8               	btfsc	status,2,c
  9062  0018D6  EF6F  F00C         	goto	u4031
  9063  0018DA  EF71  F00C         	goto	u4030
  9064  0018DE                     u4031:
  9065  0018DE  EF86  F00C         	goto	l4192
  9066  0018E2                     u4030:
  9067  0018E2  2843               	incf	___fladd@bexp^0,w,c
  9068  0018E4  A4D8               	btfss	status,2,c
  9069  0018E6  EF77  F00C         	goto	u4041
  9070  0018EA  EF79  F00C         	goto	u4040
  9071  0018EE                     u4041:
  9072  0018EE  EF81  F00C         	goto	l4188
  9073  0018F2                     u4040:
  9074  0018F2  0E00               	movlw	0
  9075  0018F4  6E35               	movwf	___fladd@b^0,c
  9076  0018F6  0E00               	movlw	0
  9077  0018F8  6E36               	movwf	(___fladd@b+1)^0,c
  9078  0018FA  0E00               	movlw	0
  9079  0018FC  6E37               	movwf	(___fladd@b+2)^0,c
  9080  0018FE  0E00               	movlw	0
  9081  001900  6E38               	movwf	(___fladd@b+3)^0,c
  9082  001902                     l4188:
  9083  001902  8E37               	bsf	(___fladd@b+2)^0,7,c
  9084  001904  0E00               	movlw	0
  9085  001906  6E38               	movwf	(___fladd@b+3)^0,c
  9086  001908  EF8E  F00C         	goto	l4194
  9087  00190C                     l4192:
  9088  00190C  0E00               	movlw	0
  9089  00190E  6E35               	movwf	___fladd@b^0,c
  9090  001910  0E00               	movlw	0
  9091  001912  6E36               	movwf	(___fladd@b+1)^0,c
  9092  001914  0E00               	movlw	0
  9093  001916  6E37               	movwf	(___fladd@b+2)^0,c
  9094  001918  0E00               	movlw	0
  9095  00191A  6E38               	movwf	(___fladd@b+3)^0,c
  9096  00191C                     l4194:
  9097  00191C  503C               	movf	(___fladd@a+3)^0,w,c
  9098  00191E  0B80               	andlw	128
  9099  001920  6E42               	movwf	___fladd@aexp^0,c
  9100  001922  5041               	movf	___fladd@signs^0,w,c
  9101  001924  1842               	xorwf	___fladd@aexp^0,w,c
  9102  001926  B4D8               	btfsc	status,2,c
  9103  001928  EF98  F00C         	goto	u4051
  9104  00192C  EF9A  F00C         	goto	u4050
  9105  001930                     u4051:
  9106  001930  EF9B  F00C         	goto	l4200
  9107  001934                     u4050:
  9108  001934  8C41               	bsf	___fladd@signs^0,6,c
  9109  001936                     l4200:
  9110  001936  503C               	movf	(___fladd@a+3)^0,w,c
  9111  001938  243C               	addwf	(___fladd@a+3)^0,w,c
  9112  00193A  6E42               	movwf	___fladd@aexp^0,c
  9113  00193C  AE3B               	btfss	(___fladd@a+2)^0,7,c
  9114  00193E  EFA3  F00C         	goto	u4061
  9115  001942  EFA5  F00C         	goto	u4060
  9116  001946                     u4061:
  9117  001946  EFA6  F00C         	goto	l4206
  9118  00194A                     u4060:
  9119  00194A  8042               	bsf	___fladd@aexp^0,0,c
  9120  00194C                     l4206:
  9121  00194C  5042               	movf	___fladd@aexp^0,w,c
  9122  00194E  B4D8               	btfsc	status,2,c
  9123  001950  EFAC  F00C         	goto	u4071
  9124  001954  EFAE  F00C         	goto	u4070
  9125  001958                     u4071:
  9126  001958  EFC3  F00C         	goto	l4216
  9127  00195C                     u4070:
  9128  00195C  2842               	incf	___fladd@aexp^0,w,c
  9129  00195E  A4D8               	btfss	status,2,c
  9130  001960  EFB4  F00C         	goto	u4081
  9131  001964  EFB6  F00C         	goto	u4080
  9132  001968                     u4081:
  9133  001968  EFBE  F00C         	goto	l4212
  9134  00196C                     u4080:
  9135  00196C  0E00               	movlw	0
  9136  00196E  6E39               	movwf	___fladd@a^0,c
  9137  001970  0E00               	movlw	0
  9138  001972  6E3A               	movwf	(___fladd@a+1)^0,c
  9139  001974  0E00               	movlw	0
  9140  001976  6E3B               	movwf	(___fladd@a+2)^0,c
  9141  001978  0E00               	movlw	0
  9142  00197A  6E3C               	movwf	(___fladd@a+3)^0,c
  9143  00197C                     l4212:
  9144  00197C  8E3B               	bsf	(___fladd@a+2)^0,7,c
  9145  00197E  0E00               	movlw	0
  9146  001980  6E3C               	movwf	(___fladd@a+3)^0,c
  9147  001982  EFCB  F00C         	goto	l4218
  9148  001986                     l4216:
  9149  001986  0E00               	movlw	0
  9150  001988  6E39               	movwf	___fladd@a^0,c
  9151  00198A  0E00               	movlw	0
  9152  00198C  6E3A               	movwf	(___fladd@a+1)^0,c
  9153  00198E  0E00               	movlw	0
  9154  001990  6E3B               	movwf	(___fladd@a+2)^0,c
  9155  001992  0E00               	movlw	0
  9156  001994  6E3C               	movwf	(___fladd@a+3)^0,c
  9157  001996                     l4218:
  9158  001996  5043               	movf	___fladd@bexp^0,w,c
  9159  001998  5C42               	subwf	___fladd@aexp^0,w,c
  9160  00199A  B0D8               	btfsc	status,0,c
  9161  00199C  EFD2  F00C         	goto	u4091
  9162  0019A0  EFD4  F00C         	goto	u4090
  9163  0019A4                     u4091:
  9164  0019A4  EFFB  F00C         	goto	l4254
  9165  0019A8                     u4090:
  9166  0019A8  AC41               	btfss	___fladd@signs^0,6,c
  9167  0019AA  EFD9  F00C         	goto	u4101
  9168  0019AE  EFDB  F00C         	goto	u4100
  9169  0019B2                     u4101:
  9170  0019B2  EFDD  F00C         	goto	l4224
  9171  0019B6                     u4100:
  9172  0019B6  0E80               	movlw	128
  9173  0019B8  1A41               	xorwf	___fladd@signs^0,f,c
  9174  0019BA                     l4224:
  9175  0019BA  C043  F044         	movff	___fladd@bexp,___fladd@grs
  9176  0019BE  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9177  0019C2  C044  F042         	movff	___fladd@grs,___fladd@aexp
  9178  0019C6  C035  F044         	movff	___fladd@b,___fladd@grs
  9179  0019CA  C039  F035         	movff	___fladd@a,___fladd@b
  9180  0019CE  C044  F039         	movff	___fladd@grs,___fladd@a
  9181  0019D2  C036  F044         	movff	___fladd@b+1,___fladd@grs
  9182  0019D6  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  9183  0019DA  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  9184  0019DE  C037  F044         	movff	___fladd@b+2,___fladd@grs
  9185  0019E2  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  9186  0019E6  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  9187  0019EA  C038  F044         	movff	___fladd@b+3,___fladd@grs
  9188  0019EE  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  9189  0019F2  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  9190  0019F6                     l4254:
  9191  0019F6  0E00               	movlw	0
  9192  0019F8  6E44               	movwf	___fladd@grs^0,c
  9193  0019FA  5043               	movf	___fladd@bexp^0,w,c
  9194  0019FC  C042  F03D         	movff	___fladd@aexp,??___fladd
  9195  001A00  6A3E               	clrf	(??___fladd+1)^0,c
  9196  001A02  5E3D               	subwf	??___fladd^0,f,c
  9197  001A04  0E00               	movlw	0
  9198  001A06  5A3E               	subwfb	(??___fladd+1)^0,f,c
  9199  001A08  BE3E               	btfsc	(??___fladd+1)^0,7,c
  9200  001A0A  EF10  F00D         	goto	u4111
  9201  001A0E  503E               	movf	(??___fladd+1)^0,w,c
  9202  001A10  E109               	bnz	u4110
  9203  001A12  0E1A               	movlw	26
  9204  001A14  5C3D               	subwf	??___fladd^0,w,c
  9205  001A16  A0D8               	btfss	status,0,c
  9206  001A18  EF10  F00D         	goto	u4111
  9207  001A1C  EF12  F00D         	goto	u4110
  9208  001A20                     u4111:
  9209  001A20  EF49  F00D         	goto	l1232
  9210  001A24                     u4110:
  9211  001A24  5035               	movf	___fladd@b^0,w,c
  9212  001A26  1036               	iorwf	(___fladd@b+1)^0,w,c
  9213  001A28  1037               	iorwf	(___fladd@b+2)^0,w,c
  9214  001A2A  1038               	iorwf	(___fladd@b+3)^0,w,c
  9215  001A2C  A4D8               	btfss	status,2,c
  9216  001A2E  EF1B  F00D         	goto	u4121
  9217  001A32  EF1E  F00D         	goto	u4120
  9218  001A36                     u4121:
  9219  001A36  0E01               	movlw	1
  9220  001A38  EF1F  F00D         	goto	u4130
  9221  001A3C                     u4120:
  9222  001A3C  0E00               	movlw	0
  9223  001A3E                     u4130:
  9224  001A3E  6E44               	movwf	___fladd@grs^0,c
  9225  001A40  0E00               	movlw	0
  9226  001A42  6E35               	movwf	___fladd@b^0,c
  9227  001A44  0E00               	movlw	0
  9228  001A46  6E36               	movwf	(___fladd@b+1)^0,c
  9229  001A48  0E00               	movlw	0
  9230  001A4A  6E37               	movwf	(___fladd@b+2)^0,c
  9231  001A4C  0E00               	movlw	0
  9232  001A4E  6E38               	movwf	(___fladd@b+3)^0,c
  9233  001A50  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9234  001A54  EF52  F00D         	goto	l1231
  9235  001A58                     l1233:
  9236  001A58  A044               	btfss	___fladd@grs^0,0,c
  9237  001A5A  EF31  F00D         	goto	u4141
  9238  001A5E  EF33  F00D         	goto	u4140
  9239  001A62                     u4141:
  9240  001A62  EF39  F00D         	goto	l4266
  9241  001A66                     u4140:
  9242  001A66  90D8               	bcf	status,0,c
  9243  001A68  3044               	rrcf	___fladd@grs^0,w,c
  9244  001A6A  0901               	iorlw	1
  9245  001A6C  6E44               	movwf	___fladd@grs^0,c
  9246  001A6E  EF3B  F00D         	goto	l4268
  9247  001A72                     l4266:
  9248  001A72  90D8               	bcf	status,0,c
  9249  001A74  3244               	rrcf	___fladd@grs^0,f,c
  9250  001A76                     l4268:
  9251  001A76  A035               	btfss	___fladd@b^0,0,c
  9252  001A78  EF40  F00D         	goto	u4151
  9253  001A7C  EF42  F00D         	goto	u4150
  9254  001A80                     u4151:
  9255  001A80  EF43  F00D         	goto	l4272
  9256  001A84                     u4150:
  9257  001A84  8E44               	bsf	___fladd@grs^0,7,c
  9258  001A86                     l4272:
  9259  001A86  3438               	rlcf	(___fladd@b+3)^0,w,c
  9260  001A88  3238               	rrcf	(___fladd@b+3)^0,f,c
  9261  001A8A  3237               	rrcf	(___fladd@b+2)^0,f,c
  9262  001A8C  3236               	rrcf	(___fladd@b+1)^0,f,c
  9263  001A8E  3235               	rrcf	___fladd@b^0,f,c
  9264  001A90  2A43               	incf	___fladd@bexp^0,f,c
  9265  001A92                     l1232:
  9266  001A92  5042               	movf	___fladd@aexp^0,w,c
  9267  001A94  5C43               	subwf	___fladd@bexp^0,w,c
  9268  001A96  A0D8               	btfss	status,0,c
  9269  001A98  EF50  F00D         	goto	u4161
  9270  001A9C  EF52  F00D         	goto	u4160
  9271  001AA0                     u4161:
  9272  001AA0  EF2C  F00D         	goto	l1233
  9273  001AA4                     u4160:
  9274  001AA4                     l1231:
  9275  001AA4  BC41               	btfsc	___fladd@signs^0,6,c
  9276  001AA6  EF57  F00D         	goto	u4171
  9277  001AAA  EF59  F00D         	goto	u4170
  9278  001AAE                     u4171:
  9279  001AAE  EF99  F00D         	goto	l4300
  9280  001AB2                     u4170:
  9281  001AB2  5043               	movf	___fladd@bexp^0,w,c
  9282  001AB4  A4D8               	btfss	status,2,c
  9283  001AB6  EF5F  F00D         	goto	u4181
  9284  001ABA  EF61  F00D         	goto	u4180
  9285  001ABE                     u4181:
  9286  001ABE  EF6B  F00D         	goto	l4282
  9287  001AC2                     u4180:
  9288  001AC2  0E00               	movlw	0
  9289  001AC4  6E35               	movwf	?___fladd^0,c
  9290  001AC6  0E00               	movlw	0
  9291  001AC8  6E36               	movwf	(?___fladd+1)^0,c
  9292  001ACA  0E00               	movlw	0
  9293  001ACC  6E37               	movwf	(?___fladd+2)^0,c
  9294  001ACE  0E00               	movlw	0
  9295  001AD0  6E38               	movwf	(?___fladd+3)^0,c
  9296  001AD2  EFBA  F00E         	goto	l1240
  9297  001AD6                     l4282:
  9298  001AD6  5039               	movf	___fladd@a^0,w,c
  9299  001AD8  2635               	addwf	___fladd@b^0,f,c
  9300  001ADA  503A               	movf	(___fladd@a+1)^0,w,c
  9301  001ADC  2236               	addwfc	(___fladd@b+1)^0,f,c
  9302  001ADE  503B               	movf	(___fladd@a+2)^0,w,c
  9303  001AE0  2237               	addwfc	(___fladd@b+2)^0,f,c
  9304  001AE2  503C               	movf	(___fladd@a+3)^0,w,c
  9305  001AE4  2238               	addwfc	(___fladd@b+3)^0,f,c
  9306  001AE6  A038               	btfss	(___fladd@b+3)^0,0,c
  9307  001AE8  EF78  F00D         	goto	u4191
  9308  001AEC  EF7A  F00D         	goto	u4190
  9309  001AF0                     u4191:
  9310  001AF0  EF26  F00E         	goto	l4336
  9311  001AF4                     u4190:
  9312  001AF4  A044               	btfss	___fladd@grs^0,0,c
  9313  001AF6  EF7F  F00D         	goto	u4201
  9314  001AFA  EF81  F00D         	goto	u4200
  9315  001AFE                     u4201:
  9316  001AFE  EF87  F00D         	goto	l4290
  9317  001B02                     u4200:
  9318  001B02  90D8               	bcf	status,0,c
  9319  001B04  3044               	rrcf	___fladd@grs^0,w,c
  9320  001B06  0901               	iorlw	1
  9321  001B08  6E44               	movwf	___fladd@grs^0,c
  9322  001B0A  EF89  F00D         	goto	l4292
  9323  001B0E                     l4290:
  9324  001B0E  90D8               	bcf	status,0,c
  9325  001B10  3244               	rrcf	___fladd@grs^0,f,c
  9326  001B12                     l4292:
  9327  001B12  A035               	btfss	___fladd@b^0,0,c
  9328  001B14  EF8E  F00D         	goto	u4211
  9329  001B18  EF90  F00D         	goto	u4210
  9330  001B1C                     u4211:
  9331  001B1C  EF91  F00D         	goto	l4296
  9332  001B20                     u4210:
  9333  001B20  8E44               	bsf	___fladd@grs^0,7,c
  9334  001B22                     l4296:
  9335  001B22  3438               	rlcf	(___fladd@b+3)^0,w,c
  9336  001B24  3238               	rrcf	(___fladd@b+3)^0,f,c
  9337  001B26  3237               	rrcf	(___fladd@b+2)^0,f,c
  9338  001B28  3236               	rrcf	(___fladd@b+1)^0,f,c
  9339  001B2A  3235               	rrcf	___fladd@b^0,f,c
  9340  001B2C  2A43               	incf	___fladd@bexp^0,f,c
  9341  001B2E  EF26  F00E         	goto	l4336
  9342  001B32                     l4300:
  9343  001B32  5039               	movf	___fladd@a^0,w,c
  9344  001B34  5C35               	subwf	___fladd@b^0,w,c
  9345  001B36  503A               	movf	(___fladd@a+1)^0,w,c
  9346  001B38  5836               	subwfb	(___fladd@b+1)^0,w,c
  9347  001B3A  503B               	movf	(___fladd@a+2)^0,w,c
  9348  001B3C  5837               	subwfb	(___fladd@b+2)^0,w,c
  9349  001B3E  5038               	movf	(___fladd@b+3)^0,w,c
  9350  001B40  0A80               	xorlw	128
  9351  001B42  6E3D               	movwf	??___fladd^0,c
  9352  001B44  503C               	movf	(___fladd@a+3)^0,w,c
  9353  001B46  0A80               	xorlw	128
  9354  001B48  583D               	subwfb	??___fladd^0,w,c
  9355  001B4A  B0D8               	btfsc	status,0,c
  9356  001B4C  EFAA  F00D         	goto	u4221
  9357  001B50  EFAC  F00D         	goto	u4220
  9358  001B54                     u4221:
  9359  001B54  EFD7  F00D         	goto	l4310
  9360  001B58                     u4220:
  9361  001B58  5035               	movf	___fladd@b^0,w,c
  9362  001B5A  5C39               	subwf	___fladd@a^0,w,c
  9363  001B5C  6E3D               	movwf	??___fladd^0,c
  9364  001B5E  5036               	movf	(___fladd@b+1)^0,w,c
  9365  001B60  583A               	subwfb	(___fladd@a+1)^0,w,c
  9366  001B62  6E3E               	movwf	(??___fladd+1)^0,c
  9367  001B64  5037               	movf	(___fladd@b+2)^0,w,c
  9368  001B66  583B               	subwfb	(___fladd@a+2)^0,w,c
  9369  001B68  6E3F               	movwf	(??___fladd+2)^0,c
  9370  001B6A  5038               	movf	(___fladd@b+3)^0,w,c
  9371  001B6C  583C               	subwfb	(___fladd@a+3)^0,w,c
  9372  001B6E  6E40               	movwf	(??___fladd+3)^0,c
  9373  001B70  0EFF               	movlw	255
  9374  001B72  243D               	addwf	??___fladd^0,w,c
  9375  001B74  6E35               	movwf	___fladd@b^0,c
  9376  001B76  0EFF               	movlw	255
  9377  001B78  203E               	addwfc	(??___fladd+1)^0,w,c
  9378  001B7A  6E36               	movwf	(___fladd@b+1)^0,c
  9379  001B7C  0EFF               	movlw	255
  9380  001B7E  203F               	addwfc	(??___fladd+2)^0,w,c
  9381  001B80  6E37               	movwf	(___fladd@b+2)^0,c
  9382  001B82  0EFF               	movlw	255
  9383  001B84  2040               	addwfc	(??___fladd+3)^0,w,c
  9384  001B86  6E38               	movwf	(___fladd@b+3)^0,c
  9385  001B88  0E80               	movlw	128
  9386  001B8A  1A41               	xorwf	___fladd@signs^0,f,c
  9387  001B8C  6C44               	negf	___fladd@grs^0,c
  9388  001B8E  5044               	movf	___fladd@grs^0,w,c
  9389  001B90  A4D8               	btfss	status,2,c
  9390  001B92  EFCD  F00D         	goto	u4231
  9391  001B96  EFCF  F00D         	goto	u4230
  9392  001B9A                     u4231:
  9393  001B9A  EFDF  F00D         	goto	l1248
  9394  001B9E                     u4230:
  9395  001B9E  0E01               	movlw	1
  9396  001BA0  2635               	addwf	___fladd@b^0,f,c
  9397  001BA2  0E00               	movlw	0
  9398  001BA4  2236               	addwfc	(___fladd@b+1)^0,f,c
  9399  001BA6  2237               	addwfc	(___fladd@b+2)^0,f,c
  9400  001BA8  2238               	addwfc	(___fladd@b+3)^0,f,c
  9401  001BAA  EFDF  F00D         	goto	l1248
  9402  001BAE                     l4310:
  9403  001BAE  5039               	movf	___fladd@a^0,w,c
  9404  001BB0  5E35               	subwf	___fladd@b^0,f,c
  9405  001BB2  503A               	movf	(___fladd@a+1)^0,w,c
  9406  001BB4  5A36               	subwfb	(___fladd@b+1)^0,f,c
  9407  001BB6  503B               	movf	(___fladd@a+2)^0,w,c
  9408  001BB8  5A37               	subwfb	(___fladd@b+2)^0,f,c
  9409  001BBA  503C               	movf	(___fladd@a+3)^0,w,c
  9410  001BBC  5A38               	subwfb	(___fladd@b+3)^0,f,c
  9411  001BBE                     l1248:
  9412  001BBE  5035               	movf	___fladd@b^0,w,c
  9413  001BC0  1036               	iorwf	(___fladd@b+1)^0,w,c
  9414  001BC2  1037               	iorwf	(___fladd@b+2)^0,w,c
  9415  001BC4  1038               	iorwf	(___fladd@b+3)^0,w,c
  9416  001BC6  A4D8               	btfss	status,2,c
  9417  001BC8  EFE8  F00D         	goto	u4241
  9418  001BCC  EFEA  F00D         	goto	u4240
  9419  001BD0                     u4241:
  9420  001BD0  EF1F  F00E         	goto	l4334
  9421  001BD4                     u4240:
  9422  001BD4  5044               	movf	___fladd@grs^0,w,c
  9423  001BD6  A4D8               	btfss	status,2,c
  9424  001BD8  EFF0  F00D         	goto	u4251
  9425  001BDC  EFF2  F00D         	goto	u4250
  9426  001BE0                     u4251:
  9427  001BE0  EF1F  F00E         	goto	l4334
  9428  001BE4                     u4250:
  9429  001BE4  0E00               	movlw	0
  9430  001BE6  6E35               	movwf	?___fladd^0,c
  9431  001BE8  0E00               	movlw	0
  9432  001BEA  6E36               	movwf	(?___fladd+1)^0,c
  9433  001BEC  0E00               	movlw	0
  9434  001BEE  6E37               	movwf	(?___fladd+2)^0,c
  9435  001BF0  0E00               	movlw	0
  9436  001BF2  6E38               	movwf	(?___fladd+3)^0,c
  9437  001BF4  EFBA  F00E         	goto	l1240
  9438  001BF8                     l4318:
  9439  001BF8  90D8               	bcf	status,0,c
  9440  001BFA  3635               	rlcf	___fladd@b^0,f,c
  9441  001BFC  3636               	rlcf	(___fladd@b+1)^0,f,c
  9442  001BFE  3637               	rlcf	(___fladd@b+2)^0,f,c
  9443  001C00  3638               	rlcf	(___fladd@b+3)^0,f,c
  9444  001C02  AE44               	btfss	___fladd@grs^0,7,c
  9445  001C04  EF06  F00E         	goto	u4261
  9446  001C08  EF08  F00E         	goto	u4260
  9447  001C0C                     u4261:
  9448  001C0C  EF09  F00E         	goto	l4324
  9449  001C10                     u4260:
  9450  001C10  8035               	bsf	___fladd@b^0,0,c
  9451  001C12                     l4324:
  9452  001C12  A044               	btfss	___fladd@grs^0,0,c
  9453  001C14  EF0E  F00E         	goto	u4271
  9454  001C18  EF10  F00E         	goto	u4270
  9455  001C1C                     u4271:
  9456  001C1C  EF14  F00E         	goto	l4328
  9457  001C20                     u4270:
  9458  001C20  80D8               	bsf	status,0,c
  9459  001C22  3644               	rlcf	___fladd@grs^0,f,c
  9460  001C24  EF16  F00E         	goto	l4330
  9461  001C28                     l4328:
  9462  001C28  90D8               	bcf	status,0,c
  9463  001C2A  3644               	rlcf	___fladd@grs^0,f,c
  9464  001C2C                     l4330:
  9465  001C2C  5043               	movf	___fladd@bexp^0,w,c
  9466  001C2E  B4D8               	btfsc	status,2,c
  9467  001C30  EF1C  F00E         	goto	u4281
  9468  001C34  EF1E  F00E         	goto	u4280
  9469  001C38                     u4281:
  9470  001C38  EF1F  F00E         	goto	l4334
  9471  001C3C                     u4280:
  9472  001C3C  0643               	decf	___fladd@bexp^0,f,c
  9473  001C3E                     l4334:
  9474  001C3E  AE37               	btfss	(___fladd@b+2)^0,7,c
  9475  001C40  EF24  F00E         	goto	u4291
  9476  001C44  EF26  F00E         	goto	u4290
  9477  001C48                     u4291:
  9478  001C48  EFFC  F00D         	goto	l4318
  9479  001C4C                     u4290:
  9480  001C4C                     l4336:
  9481  001C4C  0E00               	movlw	0
  9482  001C4E  6E42               	movwf	___fladd@aexp^0,c
  9483  001C50  AE44               	btfss	___fladd@grs^0,7,c
  9484  001C52  EF2D  F00E         	goto	u4301
  9485  001C56  EF2F  F00E         	goto	u4300
  9486  001C5A                     u4301:
  9487  001C5A  EF47  F00E         	goto	l1257
  9488  001C5E                     u4300:
  9489  001C5E  C044  F03D         	movff	___fladd@grs,??___fladd
  9490  001C62  0E7F               	movlw	127
  9491  001C64  163D               	andwf	??___fladd^0,f,c
  9492  001C66  B4D8               	btfsc	status,2,c
  9493  001C68  EF38  F00E         	goto	u4311
  9494  001C6C  EF3A  F00E         	goto	u4310
  9495  001C70                     u4311:
  9496  001C70  EF3E  F00E         	goto	l1258
  9497  001C74                     u4310:
  9498  001C74                     l4342:
  9499  001C74  0E01               	movlw	1
  9500  001C76  6E42               	movwf	___fladd@aexp^0,c
  9501  001C78  EF47  F00E         	goto	l1257
  9502  001C7C                     l1258:
  9503  001C7C  A035               	btfss	___fladd@b^0,0,c
  9504  001C7E  EF43  F00E         	goto	u4321
  9505  001C82  EF45  F00E         	goto	u4320
  9506  001C86                     u4321:
  9507  001C86  EF47  F00E         	goto	l1257
  9508  001C8A                     u4320:
  9509  001C8A  EF3A  F00E         	goto	l4342
  9510  001C8E                     l1257:
  9511  001C8E  5042               	movf	___fladd@aexp^0,w,c
  9512  001C90  B4D8               	btfsc	status,2,c
  9513  001C92  EF4D  F00E         	goto	u4331
  9514  001C96  EF4F  F00E         	goto	u4330
  9515  001C9A                     u4331:
  9516  001C9A  EF7A  F00E         	goto	l4354
  9517  001C9E                     u4330:
  9518  001C9E  0E01               	movlw	1
  9519  001CA0  2635               	addwf	___fladd@b^0,f,c
  9520  001CA2  0E00               	movlw	0
  9521  001CA4  2236               	addwfc	(___fladd@b+1)^0,f,c
  9522  001CA6  2237               	addwfc	(___fladd@b+2)^0,f,c
  9523  001CA8  2238               	addwfc	(___fladd@b+3)^0,f,c
  9524  001CAA  A038               	btfss	(___fladd@b+3)^0,0,c
  9525  001CAC  EF5A  F00E         	goto	u4341
  9526  001CB0  EF5C  F00E         	goto	u4340
  9527  001CB4                     u4341:
  9528  001CB4  EF7A  F00E         	goto	l4354
  9529  001CB8                     u4340:
  9530  001CB8  C035  F03D         	movff	___fladd@b,??___fladd
  9531  001CBC  C036  F03E         	movff	___fladd@b+1,??___fladd+1
  9532  001CC0  C037  F03F         	movff	___fladd@b+2,??___fladd+2
  9533  001CC4  C038  F040         	movff	___fladd@b+3,??___fladd+3
  9534  001CC8  3440               	rlcf	(??___fladd+3)^0,w,c
  9535  001CCA  3240               	rrcf	(??___fladd+3)^0,f,c
  9536  001CCC  323F               	rrcf	(??___fladd+2)^0,f,c
  9537  001CCE  323E               	rrcf	(??___fladd+1)^0,f,c
  9538  001CD0  323D               	rrcf	??___fladd^0,f,c
  9539  001CD2  C03D  F035         	movff	??___fladd,___fladd@b
  9540  001CD6  C03E  F036         	movff	??___fladd+1,___fladd@b+1
  9541  001CDA  C03F  F037         	movff	??___fladd+2,___fladd@b+2
  9542  001CDE  C040  F038         	movff	??___fladd+3,___fladd@b+3
  9543  001CE2  2843               	incf	___fladd@bexp^0,w,c
  9544  001CE4  B4D8               	btfsc	status,2,c
  9545  001CE6  EF77  F00E         	goto	u4351
  9546  001CEA  EF79  F00E         	goto	u4350
  9547  001CEE                     u4351:
  9548  001CEE  EF7A  F00E         	goto	l4354
  9549  001CF2                     u4350:
  9550  001CF2  2A43               	incf	___fladd@bexp^0,f,c
  9551  001CF4                     l4354:
  9552  001CF4  2843               	incf	___fladd@bexp^0,w,c
  9553  001CF6  B4D8               	btfsc	status,2,c
  9554  001CF8  EF80  F00E         	goto	u4361
  9555  001CFC  EF82  F00E         	goto	u4360
  9556  001D00                     u4361:
  9557  001D00  EF8A  F00E         	goto	l4358
  9558  001D04                     u4360:
  9559  001D04  5043               	movf	___fladd@bexp^0,w,c
  9560  001D06  A4D8               	btfss	status,2,c
  9561  001D08  EF88  F00E         	goto	u4371
  9562  001D0C  EF8A  F00E         	goto	u4370
  9563  001D10                     u4371:
  9564  001D10  EF9C  F00E         	goto	l4362
  9565  001D14                     u4370:
  9566  001D14                     l4358:
  9567  001D14  0E00               	movlw	0
  9568  001D16  6E35               	movwf	___fladd@b^0,c
  9569  001D18  0E00               	movlw	0
  9570  001D1A  6E36               	movwf	(___fladd@b+1)^0,c
  9571  001D1C  0E00               	movlw	0
  9572  001D1E  6E37               	movwf	(___fladd@b+2)^0,c
  9573  001D20  0E00               	movlw	0
  9574  001D22  6E38               	movwf	(___fladd@b+3)^0,c
  9575  001D24  5043               	movf	___fladd@bexp^0,w,c
  9576  001D26  A4D8               	btfss	status,2,c
  9577  001D28  EF98  F00E         	goto	u4381
  9578  001D2C  EF9A  F00E         	goto	u4380
  9579  001D30                     u4381:
  9580  001D30  EF9C  F00E         	goto	l4362
  9581  001D34                     u4380:
  9582  001D34  0E00               	movlw	0
  9583  001D36  6E41               	movwf	___fladd@signs^0,c
  9584  001D38                     l4362:
  9585  001D38  A043               	btfss	___fladd@bexp^0,0,c
  9586  001D3A  EFA1  F00E         	goto	u4391
  9587  001D3E  EFA3  F00E         	goto	u4390
  9588  001D42                     u4391:
  9589  001D42  EFA6  F00E         	goto	l4366
  9590  001D46                     u4390:
  9591  001D46  8E37               	bsf	(___fladd@b+2)^0,7,c
  9592  001D48  EFA7  F00E         	goto	l4368
  9593  001D4C                     l4366:
  9594  001D4C  9E37               	bcf	(___fladd@b+2)^0,7,c
  9595  001D4E                     l4368:
  9596  001D4E  90D8               	bcf	status,0,c
  9597  001D50  3043               	rrcf	___fladd@bexp^0,w,c
  9598  001D52  6E38               	movwf	(___fladd@b+3)^0,c
  9599  001D54  AE41               	btfss	___fladd@signs^0,7,c
  9600  001D56  EFAF  F00E         	goto	u4401
  9601  001D5A  EFB1  F00E         	goto	u4400
  9602  001D5E                     u4401:
  9603  001D5E  EFB2  F00E         	goto	l4374
  9604  001D62                     u4400:
  9605  001D62  8E38               	bsf	(___fladd@b+3)^0,7,c
  9606  001D64                     l4374:
  9607  001D64  C035  F035         	movff	___fladd@b,?___fladd
  9608  001D68  C036  F036         	movff	___fladd@b+1,?___fladd+1
  9609  001D6C  C037  F037         	movff	___fladd@b+2,?___fladd+2
  9610  001D70  C038  F038         	movff	___fladd@b+3,?___fladd+3
  9611  001D74                     l1240:
  9612  001D74  0012               	return		;funcret
  9613  001D76                     __end_of___fladd:
  9614                           	callstack 0
  9615                           
  9616 ;; *************** function ___flneg *****************
  9617 ;; Defined at:
  9618 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  9619 ;; Parameters:    Size  Location     Type
  9620 ;;  f1              4    0[COMRAM] unsigned char 
  9621 ;; Auto vars:     Size  Location     Type
  9622 ;;		None
  9623 ;; Return value:  Size  Location     Type
  9624 ;;                  4    0[COMRAM] unsigned char 
  9625 ;; Registers used:
  9626 ;;		wreg, status,2, status,0
  9627 ;; Tracked objects:
  9628 ;;		On entry : 0/0
  9629 ;;		On exit  : 0/0
  9630 ;;		Unchanged: 0/0
  9631 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9632 ;;      Params:         4       0       0       0       0       0       0
  9633 ;;      Locals:         0       0       0       0       0       0       0
  9634 ;;      Temps:          0       0       0       0       0       0       0
  9635 ;;      Totals:         4       0       0       0       0       0       0
  9636 ;;Total ram usage:        4 bytes
  9637 ;; Hardware stack levels used:    1
  9638 ;; Hardware stack levels required when called:    1
  9639 ;; This function calls:
  9640 ;;		Nothing
  9641 ;; This function is called by:
  9642 ;;		_efgtoa
  9643 ;; This function uses a non-reentrant model
  9644 ;;
  9645                           
  9646                           	psect	text32
  9647  0057E4                     __ptext32:
  9648                           	callstack 0
  9649  0057E4                     ___flneg:
  9650                           	callstack 22
  9651  0057E4  5001               	movf	___flneg@f1^0,w,c
  9652  0057E6  1002               	iorwf	(___flneg@f1+1)^0,w,c
  9653  0057E8  1003               	iorwf	(___flneg@f1+2)^0,w,c
  9654  0057EA  1004               	iorwf	(___flneg@f1+3)^0,w,c
  9655  0057EC  B4D8               	btfsc	status,2,c
  9656  0057EE  EFFB  F02B         	goto	u5201
  9657  0057F2  EFFD  F02B         	goto	u5200
  9658  0057F6                     u5201:
  9659  0057F6  EF05  F02C         	goto	l4882
  9660  0057FA                     u5200:
  9661  0057FA  0E00               	movlw	0
  9662  0057FC  1A01               	xorwf	___flneg@f1^0,f,c
  9663  0057FE  0E00               	movlw	0
  9664  005800  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  9665  005802  0E00               	movlw	0
  9666  005804  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  9667  005806  0E80               	movlw	128
  9668  005808  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  9669  00580A                     l4882:
  9670  00580A  C001  F001         	movff	___flneg@f1,?___flneg
  9671  00580E  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  9672  005812  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  9673  005816  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  9674  00581A  0012               	return		;funcret
  9675  00581C                     __end_of___flneg:
  9676                           	callstack 0
  9677                           
  9678 ;; *************** function ___flmul *****************
  9679 ;; Defined at:
  9680 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  9681 ;; Parameters:    Size  Location     Type
  9682 ;;  b               4   27[COMRAM] unsigned char 
  9683 ;;  a               4   31[COMRAM] unsigned char 
  9684 ;; Auto vars:     Size  Location     Type
  9685 ;;  prod            4   46[COMRAM] struct .
  9686 ;;  grs             4   40[COMRAM] unsigned long 
  9687 ;;  temp            2   50[COMRAM] struct .
  9688 ;;  bexp            1   45[COMRAM] unsigned char 
  9689 ;;  aexp            1   44[COMRAM] unsigned char 
  9690 ;;  sign            1   39[COMRAM] unsigned char 
  9691 ;; Return value:  Size  Location     Type
  9692 ;;                  4   27[COMRAM] unsigned char 
  9693 ;; Registers used:
  9694 ;;		wreg, status,2, status,0, prodl, prodh
  9695 ;; Tracked objects:
  9696 ;;		On entry : 0/0
  9697 ;;		On exit  : 0/0
  9698 ;;		Unchanged: 0/0
  9699 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9700 ;;      Params:         8       0       0       0       0       0       0
  9701 ;;      Locals:        13       0       0       0       0       0       0
  9702 ;;      Temps:          4       0       0       0       0       0       0
  9703 ;;      Totals:        25       0       0       0       0       0       0
  9704 ;;Total ram usage:       25 bytes
  9705 ;; Hardware stack levels used:    1
  9706 ;; Hardware stack levels required when called:    1
  9707 ;; This function calls:
  9708 ;;		Nothing
  9709 ;; This function is called by:
  9710 ;;		_scanAdcConversion
  9711 ;;		_calculatedAverageValue
  9712 ;;		_speedControl
  9713 ;;		_efgtoa
  9714 ;; This function uses a non-reentrant model
  9715 ;;
  9716                           
  9717                           	psect	text33
  9718  002218                     __ptext33:
  9719                           	callstack 0
  9720  002218                     ___flmul:
  9721                           	callstack 22
  9722  002218  501F               	movf	(___flmul@b+3)^0,w,c
  9723  00221A  0B80               	andlw	128
  9724  00221C  6E28               	movwf	___flmul@sign^0,c
  9725  00221E  501F               	movf	(___flmul@b+3)^0,w,c
  9726  002220  241F               	addwf	(___flmul@b+3)^0,w,c
  9727  002222  6E2E               	movwf	___flmul@bexp^0,c
  9728  002224  AE1E               	btfss	(___flmul@b+2)^0,7,c
  9729  002226  EF17  F011         	goto	u4811
  9730  00222A  EF19  F011         	goto	u4810
  9731  00222E                     u4811:
  9732  00222E  EF1A  F011         	goto	l4630
  9733  002232                     u4810:
  9734  002232  802E               	bsf	___flmul@bexp^0,0,c
  9735  002234                     l4630:
  9736  002234  502E               	movf	___flmul@bexp^0,w,c
  9737  002236  B4D8               	btfsc	status,2,c
  9738  002238  EF20  F011         	goto	u4821
  9739  00223C  EF22  F011         	goto	u4820
  9740  002240                     u4821:
  9741  002240  EF35  F011         	goto	l4638
  9742  002244                     u4820:
  9743  002244  282E               	incf	___flmul@bexp^0,w,c
  9744  002246  A4D8               	btfss	status,2,c
  9745  002248  EF28  F011         	goto	u4831
  9746  00224C  EF2A  F011         	goto	u4830
  9747  002250                     u4831:
  9748  002250  EF32  F011         	goto	l4636
  9749  002254                     u4830:
  9750  002254  0E00               	movlw	0
  9751  002256  6E1C               	movwf	___flmul@b^0,c
  9752  002258  0E00               	movlw	0
  9753  00225A  6E1D               	movwf	(___flmul@b+1)^0,c
  9754  00225C  0E00               	movlw	0
  9755  00225E  6E1E               	movwf	(___flmul@b+2)^0,c
  9756  002260  0E00               	movlw	0
  9757  002262  6E1F               	movwf	(___flmul@b+3)^0,c
  9758  002264                     l4636:
  9759  002264  8E1E               	bsf	(___flmul@b+2)^0,7,c
  9760  002266  EF3D  F011         	goto	l4640
  9761  00226A                     l4638:
  9762  00226A  0E00               	movlw	0
  9763  00226C  6E1C               	movwf	___flmul@b^0,c
  9764  00226E  0E00               	movlw	0
  9765  002270  6E1D               	movwf	(___flmul@b+1)^0,c
  9766  002272  0E00               	movlw	0
  9767  002274  6E1E               	movwf	(___flmul@b+2)^0,c
  9768  002276  0E00               	movlw	0
  9769  002278  6E1F               	movwf	(___flmul@b+3)^0,c
  9770  00227A                     l4640:
  9771  00227A  5023               	movf	(___flmul@a+3)^0,w,c
  9772  00227C  0B80               	andlw	128
  9773  00227E  1A28               	xorwf	___flmul@sign^0,f,c
  9774  002280  5023               	movf	(___flmul@a+3)^0,w,c
  9775  002282  2423               	addwf	(___flmul@a+3)^0,w,c
  9776  002284  6E2D               	movwf	___flmul@aexp^0,c
  9777  002286  AE22               	btfss	(___flmul@a+2)^0,7,c
  9778  002288  EF48  F011         	goto	u4841
  9779  00228C  EF4A  F011         	goto	u4840
  9780  002290                     u4841:
  9781  002290  EF4B  F011         	goto	l4648
  9782  002294                     u4840:
  9783  002294  802D               	bsf	___flmul@aexp^0,0,c
  9784  002296                     l4648:
  9785  002296  502D               	movf	___flmul@aexp^0,w,c
  9786  002298  B4D8               	btfsc	status,2,c
  9787  00229A  EF51  F011         	goto	u4851
  9788  00229E  EF53  F011         	goto	u4850
  9789  0022A2                     u4851:
  9790  0022A2  EF66  F011         	goto	l4656
  9791  0022A6                     u4850:
  9792  0022A6  282D               	incf	___flmul@aexp^0,w,c
  9793  0022A8  A4D8               	btfss	status,2,c
  9794  0022AA  EF59  F011         	goto	u4861
  9795  0022AE  EF5B  F011         	goto	u4860
  9796  0022B2                     u4861:
  9797  0022B2  EF63  F011         	goto	l4654
  9798  0022B6                     u4860:
  9799  0022B6  0E00               	movlw	0
  9800  0022B8  6E20               	movwf	___flmul@a^0,c
  9801  0022BA  0E00               	movlw	0
  9802  0022BC  6E21               	movwf	(___flmul@a+1)^0,c
  9803  0022BE  0E00               	movlw	0
  9804  0022C0  6E22               	movwf	(___flmul@a+2)^0,c
  9805  0022C2  0E00               	movlw	0
  9806  0022C4  6E23               	movwf	(___flmul@a+3)^0,c
  9807  0022C6                     l4654:
  9808  0022C6  8E22               	bsf	(___flmul@a+2)^0,7,c
  9809  0022C8  EF6E  F011         	goto	l1317
  9810  0022CC                     l4656:
  9811  0022CC  0E00               	movlw	0
  9812  0022CE  6E20               	movwf	___flmul@a^0,c
  9813  0022D0  0E00               	movlw	0
  9814  0022D2  6E21               	movwf	(___flmul@a+1)^0,c
  9815  0022D4  0E00               	movlw	0
  9816  0022D6  6E22               	movwf	(___flmul@a+2)^0,c
  9817  0022D8  0E00               	movlw	0
  9818  0022DA  6E23               	movwf	(___flmul@a+3)^0,c
  9819  0022DC                     l1317:
  9820  0022DC  502D               	movf	___flmul@aexp^0,w,c
  9821  0022DE  B4D8               	btfsc	status,2,c
  9822  0022E0  EF74  F011         	goto	u4871
  9823  0022E4  EF76  F011         	goto	u4870
  9824  0022E8                     u4871:
  9825  0022E8  EF7E  F011         	goto	l4660
  9826  0022EC                     u4870:
  9827  0022EC  502E               	movf	___flmul@bexp^0,w,c
  9828  0022EE  A4D8               	btfss	status,2,c
  9829  0022F0  EF7C  F011         	goto	u4881
  9830  0022F4  EF7E  F011         	goto	u4880
  9831  0022F8                     u4881:
  9832  0022F8  EF88  F011         	goto	l4664
  9833  0022FC                     u4880:
  9834  0022FC                     l4660:
  9835  0022FC  0E00               	movlw	0
  9836  0022FE  6E1C               	movwf	?___flmul^0,c
  9837  002300  0E00               	movlw	0
  9838  002302  6E1D               	movwf	(?___flmul+1)^0,c
  9839  002304  0E00               	movlw	0
  9840  002306  6E1E               	movwf	(?___flmul+2)^0,c
  9841  002308  0E00               	movlw	0
  9842  00230A  6E1F               	movwf	(?___flmul+3)^0,c
  9843  00230C  EF20  F013         	goto	l1321
  9844  002310                     l4664:
  9845  002310  5022               	movf	(___flmul@a+2)^0,w,c
  9846  002312  021C               	mulwf	___flmul@b^0,c
  9847  002314  CFF3 F033          	movff	prodl,___flmul@temp
  9848  002318  CFF4 F034          	movff	prodh,___flmul@temp+1
  9849  00231C  5033               	movf	___flmul@temp^0,w,c
  9850  00231E  6E29               	movwf	___flmul@grs^0,c
  9851  002320  6A2A               	clrf	(___flmul@grs+1)^0,c
  9852  002322  6A2B               	clrf	(___flmul@grs+2)^0,c
  9853  002324  6A2C               	clrf	(___flmul@grs+3)^0,c
  9854  002326  5034               	movf	(___flmul@temp+1)^0,w,c
  9855  002328  6E2F               	movwf	___flmul@prod^0,c
  9856  00232A  6A30               	clrf	(___flmul@prod+1)^0,c
  9857  00232C  6A31               	clrf	(___flmul@prod+2)^0,c
  9858  00232E  6A32               	clrf	(___flmul@prod+3)^0,c
  9859  002330  5021               	movf	(___flmul@a+1)^0,w,c
  9860  002332  021D               	mulwf	(___flmul@b+1)^0,c
  9861  002334  CFF3 F033          	movff	prodl,___flmul@temp
  9862  002338  CFF4 F034          	movff	prodh,___flmul@temp+1
  9863  00233C  5033               	movf	___flmul@temp^0,w,c
  9864  00233E  2629               	addwf	___flmul@grs^0,f,c
  9865  002340  0E00               	movlw	0
  9866  002342  222A               	addwfc	(___flmul@grs+1)^0,f,c
  9867  002344  222B               	addwfc	(___flmul@grs+2)^0,f,c
  9868  002346  222C               	addwfc	(___flmul@grs+3)^0,f,c
  9869  002348  5034               	movf	(___flmul@temp+1)^0,w,c
  9870  00234A  262F               	addwf	___flmul@prod^0,f,c
  9871  00234C  0E00               	movlw	0
  9872  00234E  2230               	addwfc	(___flmul@prod+1)^0,f,c
  9873  002350  2231               	addwfc	(___flmul@prod+2)^0,f,c
  9874  002352  2232               	addwfc	(___flmul@prod+3)^0,f,c
  9875  002354  5020               	movf	___flmul@a^0,w,c
  9876  002356  021E               	mulwf	(___flmul@b+2)^0,c
  9877  002358  CFF3 F033          	movff	prodl,___flmul@temp
  9878  00235C  CFF4 F034          	movff	prodh,___flmul@temp+1
  9879  002360  5033               	movf	___flmul@temp^0,w,c
  9880  002362  2629               	addwf	___flmul@grs^0,f,c
  9881  002364  0E00               	movlw	0
  9882  002366  222A               	addwfc	(___flmul@grs+1)^0,f,c
  9883  002368  222B               	addwfc	(___flmul@grs+2)^0,f,c
  9884  00236A  222C               	addwfc	(___flmul@grs+3)^0,f,c
  9885  00236C  5034               	movf	(___flmul@temp+1)^0,w,c
  9886  00236E  262F               	addwf	___flmul@prod^0,f,c
  9887  002370  0E00               	movlw	0
  9888  002372  2230               	addwfc	(___flmul@prod+1)^0,f,c
  9889  002374  2231               	addwfc	(___flmul@prod+2)^0,f,c
  9890  002376  2232               	addwfc	(___flmul@prod+3)^0,f,c
  9891  002378  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  9892  00237C  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  9893  002380  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  9894  002384  6A29               	clrf	___flmul@grs^0,c
  9895  002386  5020               	movf	___flmul@a^0,w,c
  9896  002388  021D               	mulwf	(___flmul@b+1)^0,c
  9897  00238A  CFF3 F033          	movff	prodl,___flmul@temp
  9898  00238E  CFF4 F034          	movff	prodh,___flmul@temp+1
  9899  002392  5033               	movf	___flmul@temp^0,w,c
  9900  002394  2629               	addwf	___flmul@grs^0,f,c
  9901  002396  5034               	movf	(___flmul@temp+1)^0,w,c
  9902  002398  222A               	addwfc	(___flmul@grs+1)^0,f,c
  9903  00239A  0E00               	movlw	0
  9904  00239C  222B               	addwfc	(___flmul@grs+2)^0,f,c
  9905  00239E  0E00               	movlw	0
  9906  0023A0  222C               	addwfc	(___flmul@grs+3)^0,f,c
  9907  0023A2  5021               	movf	(___flmul@a+1)^0,w,c
  9908  0023A4  021C               	mulwf	___flmul@b^0,c
  9909  0023A6  CFF3 F033          	movff	prodl,___flmul@temp
  9910  0023AA  CFF4 F034          	movff	prodh,___flmul@temp+1
  9911  0023AE  5033               	movf	___flmul@temp^0,w,c
  9912  0023B0  2629               	addwf	___flmul@grs^0,f,c
  9913  0023B2  5034               	movf	(___flmul@temp+1)^0,w,c
  9914  0023B4  222A               	addwfc	(___flmul@grs+1)^0,f,c
  9915  0023B6  0E00               	movlw	0
  9916  0023B8  222B               	addwfc	(___flmul@grs+2)^0,f,c
  9917  0023BA  0E00               	movlw	0
  9918  0023BC  222C               	addwfc	(___flmul@grs+3)^0,f,c
  9919  0023BE  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
  9920  0023C2  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
  9921  0023C6  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
  9922  0023CA  6A29               	clrf	___flmul@grs^0,c
  9923  0023CC  5020               	movf	___flmul@a^0,w,c
  9924  0023CE  021C               	mulwf	___flmul@b^0,c
  9925  0023D0  CFF3 F033          	movff	prodl,___flmul@temp
  9926  0023D4  CFF4 F034          	movff	prodh,___flmul@temp+1
  9927  0023D8  5033               	movf	___flmul@temp^0,w,c
  9928  0023DA  2629               	addwf	___flmul@grs^0,f,c
  9929  0023DC  5034               	movf	(___flmul@temp+1)^0,w,c
  9930  0023DE  222A               	addwfc	(___flmul@grs+1)^0,f,c
  9931  0023E0  0E00               	movlw	0
  9932  0023E2  222B               	addwfc	(___flmul@grs+2)^0,f,c
  9933  0023E4  0E00               	movlw	0
  9934  0023E6  222C               	addwfc	(___flmul@grs+3)^0,f,c
  9935  0023E8  5022               	movf	(___flmul@a+2)^0,w,c
  9936  0023EA  021D               	mulwf	(___flmul@b+1)^0,c
  9937  0023EC  CFF3 F033          	movff	prodl,___flmul@temp
  9938  0023F0  CFF4 F034          	movff	prodh,___flmul@temp+1
  9939  0023F4  5033               	movf	___flmul@temp^0,w,c
  9940  0023F6  262F               	addwf	___flmul@prod^0,f,c
  9941  0023F8  5034               	movf	(___flmul@temp+1)^0,w,c
  9942  0023FA  2230               	addwfc	(___flmul@prod+1)^0,f,c
  9943  0023FC  0E00               	movlw	0
  9944  0023FE  2231               	addwfc	(___flmul@prod+2)^0,f,c
  9945  002400  0E00               	movlw	0
  9946  002402  2232               	addwfc	(___flmul@prod+3)^0,f,c
  9947  002404  5021               	movf	(___flmul@a+1)^0,w,c
  9948  002406  021E               	mulwf	(___flmul@b+2)^0,c
  9949  002408  CFF3 F033          	movff	prodl,___flmul@temp
  9950  00240C  CFF4 F034          	movff	prodh,___flmul@temp+1
  9951  002410  5033               	movf	___flmul@temp^0,w,c
  9952  002412  262F               	addwf	___flmul@prod^0,f,c
  9953  002414  5034               	movf	(___flmul@temp+1)^0,w,c
  9954  002416  2230               	addwfc	(___flmul@prod+1)^0,f,c
  9955  002418  0E00               	movlw	0
  9956  00241A  2231               	addwfc	(___flmul@prod+2)^0,f,c
  9957  00241C  0E00               	movlw	0
  9958  00241E  2232               	addwfc	(___flmul@prod+3)^0,f,c
  9959  002420  5022               	movf	(___flmul@a+2)^0,w,c
  9960  002422  021E               	mulwf	(___flmul@b+2)^0,c
  9961  002424  CFF3 F033          	movff	prodl,___flmul@temp
  9962  002428  CFF4 F034          	movff	prodh,___flmul@temp+1
  9963  00242C  5033               	movf	___flmul@temp^0,w,c
  9964  00242E  6E24               	movwf	??___flmul^0,c
  9965  002430  5034               	movf	(___flmul@temp+1)^0,w,c
  9966  002432  6E25               	movwf	(??___flmul+1)^0,c
  9967  002434  6A26               	clrf	(??___flmul+2)^0,c
  9968  002436  6A27               	clrf	(??___flmul+3)^0,c
  9969  002438  C026  F027         	movff	??___flmul+2,??___flmul+3
  9970  00243C  C025  F026         	movff	??___flmul+1,??___flmul+2
  9971  002440  C024  F025         	movff	??___flmul,??___flmul+1
  9972  002444  6A24               	clrf	??___flmul^0,c
  9973  002446  5024               	movf	??___flmul^0,w,c
  9974  002448  262F               	addwf	___flmul@prod^0,f,c
  9975  00244A  5025               	movf	(??___flmul+1)^0,w,c
  9976  00244C  2230               	addwfc	(___flmul@prod+1)^0,f,c
  9977  00244E  5026               	movf	(??___flmul+2)^0,w,c
  9978  002450  2231               	addwfc	(___flmul@prod+2)^0,f,c
  9979  002452  5027               	movf	(??___flmul+3)^0,w,c
  9980  002454  2232               	addwfc	(___flmul@prod+3)^0,f,c
  9981  002456  C029  F024         	movff	___flmul@grs,??___flmul
  9982  00245A  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
  9983  00245E  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
  9984  002462  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
  9985  002466  0E19               	movlw	25
  9986  002468  EF3B  F012         	goto	u4890
  9987  00246C                     u4895:
  9988  00246C  90D8               	bcf	status,0,c
  9989  00246E  3227               	rrcf	(??___flmul+3)^0,f,c
  9990  002470  3226               	rrcf	(??___flmul+2)^0,f,c
  9991  002472  3225               	rrcf	(??___flmul+1)^0,f,c
  9992  002474  3224               	rrcf	??___flmul^0,f,c
  9993  002476                     u4890:
  9994  002476  2EE8               	decfsz	wreg,f,c
  9995  002478  EF36  F012         	goto	u4895
  9996  00247C  5024               	movf	??___flmul^0,w,c
  9997  00247E  262F               	addwf	___flmul@prod^0,f,c
  9998  002480  5025               	movf	(??___flmul+1)^0,w,c
  9999  002482  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10000  002484  5026               	movf	(??___flmul+2)^0,w,c
 10001  002486  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10002  002488  5027               	movf	(??___flmul+3)^0,w,c
 10003  00248A  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10004  00248C  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10005  002490  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10006  002494  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10007  002498  6A29               	clrf	___flmul@grs^0,c
 10008  00249A  502D               	movf	___flmul@aexp^0,w,c
 10009  00249C  C02E  F024         	movff	___flmul@bexp,??___flmul
 10010  0024A0  6A25               	clrf	(??___flmul+1)^0,c
 10011  0024A2  2624               	addwf	??___flmul^0,f,c
 10012  0024A4  0E00               	movlw	0
 10013  0024A6  2225               	addwfc	(??___flmul+1)^0,f,c
 10014  0024A8  0E82               	movlw	130
 10015  0024AA  2424               	addwf	??___flmul^0,w,c
 10016  0024AC  6E33               	movwf	___flmul@temp^0,c
 10017  0024AE  0EFF               	movlw	255
 10018  0024B0  2025               	addwfc	(??___flmul+1)^0,w,c
 10019  0024B2  6E34               	movwf	(___flmul@temp+1)^0,c
 10020  0024B4  EF71  F012         	goto	l4712
 10021  0024B8                     l4706:
 10022  0024B8  90D8               	bcf	status,0,c
 10023  0024BA  362F               	rlcf	___flmul@prod^0,f,c
 10024  0024BC  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10025  0024BE  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10026  0024C0  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10027  0024C2  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10028  0024C4  EF66  F012         	goto	u4901
 10029  0024C8  EF68  F012         	goto	u4900
 10030  0024CC                     u4901:
 10031  0024CC  EF69  F012         	goto	l1324
 10032  0024D0                     u4900:
 10033  0024D0  802F               	bsf	___flmul@prod^0,0,c
 10034  0024D2                     l1324:
 10035  0024D2  90D8               	bcf	status,0,c
 10036  0024D4  3629               	rlcf	___flmul@grs^0,f,c
 10037  0024D6  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10038  0024D8  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10039  0024DA  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10040  0024DC  0633               	decf	___flmul@temp^0,f,c
 10041  0024DE  A0D8               	btfss	status,0,c
 10042  0024E0  0634               	decf	(___flmul@temp+1)^0,f,c
 10043  0024E2                     l4712:
 10044  0024E2  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10045  0024E4  EF76  F012         	goto	u4911
 10046  0024E8  EF78  F012         	goto	u4910
 10047  0024EC                     u4911:
 10048  0024EC  EF5C  F012         	goto	l4706
 10049  0024F0                     u4910:
 10050  0024F0  0E00               	movlw	0
 10051  0024F2  6E2D               	movwf	___flmul@aexp^0,c
 10052  0024F4  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10053  0024F6  EF7F  F012         	goto	u4921
 10054  0024FA  EF81  F012         	goto	u4920
 10055  0024FE                     u4921:
 10056  0024FE  EFA5  F012         	goto	l1326
 10057  002502                     u4920:
 10058  002502  0EFF               	movlw	255
 10059  002504  1429               	andwf	___flmul@grs^0,w,c
 10060  002506  6E24               	movwf	??___flmul^0,c
 10061  002508  0EFF               	movlw	255
 10062  00250A  142A               	andwf	(___flmul@grs+1)^0,w,c
 10063  00250C  6E25               	movwf	(??___flmul+1)^0,c
 10064  00250E  0EFF               	movlw	255
 10065  002510  142B               	andwf	(___flmul@grs+2)^0,w,c
 10066  002512  6E26               	movwf	(??___flmul+2)^0,c
 10067  002514  0E7F               	movlw	127
 10068  002516  142C               	andwf	(___flmul@grs+3)^0,w,c
 10069  002518  6E27               	movwf	(??___flmul+3)^0,c
 10070  00251A  5024               	movf	??___flmul^0,w,c
 10071  00251C  1025               	iorwf	(??___flmul+1)^0,w,c
 10072  00251E  1026               	iorwf	(??___flmul+2)^0,w,c
 10073  002520  1027               	iorwf	(??___flmul+3)^0,w,c
 10074  002522  B4D8               	btfsc	status,2,c
 10075  002524  EF96  F012         	goto	u4931
 10076  002528  EF98  F012         	goto	u4930
 10077  00252C                     u4931:
 10078  00252C  EF9C  F012         	goto	l1327
 10079  002530                     u4930:
 10080  002530                     l4720:
 10081  002530  0E01               	movlw	1
 10082  002532  6E2D               	movwf	___flmul@aexp^0,c
 10083  002534  EFA5  F012         	goto	l1326
 10084  002538                     l1327:
 10085  002538  A02F               	btfss	___flmul@prod^0,0,c
 10086  00253A  EFA1  F012         	goto	u4941
 10087  00253E  EFA3  F012         	goto	u4940
 10088  002542                     u4941:
 10089  002542  EFA5  F012         	goto	l1326
 10090  002546                     u4940:
 10091  002546  EF98  F012         	goto	l4720
 10092  00254A                     l1326:
 10093  00254A  502D               	movf	___flmul@aexp^0,w,c
 10094  00254C  B4D8               	btfsc	status,2,c
 10095  00254E  EFAB  F012         	goto	u4951
 10096  002552  EFAD  F012         	goto	u4950
 10097  002556                     u4951:
 10098  002556  EFD1  F012         	goto	l4732
 10099  00255A                     u4950:
 10100  00255A  0E01               	movlw	1
 10101  00255C  262F               	addwf	___flmul@prod^0,f,c
 10102  00255E  0E00               	movlw	0
 10103  002560  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10104  002562  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10105  002564  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10106  002566  A032               	btfss	(___flmul@prod+3)^0,0,c
 10107  002568  EFB8  F012         	goto	u4961
 10108  00256C  EFBA  F012         	goto	u4960
 10109  002570                     u4961:
 10110  002570  EFD1  F012         	goto	l4732
 10111  002574                     u4960:
 10112  002574  C02F  F024         	movff	___flmul@prod,??___flmul
 10113  002578  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 10114  00257C  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 10115  002580  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 10116  002584  3427               	rlcf	(??___flmul+3)^0,w,c
 10117  002586  3227               	rrcf	(??___flmul+3)^0,f,c
 10118  002588  3226               	rrcf	(??___flmul+2)^0,f,c
 10119  00258A  3225               	rrcf	(??___flmul+1)^0,f,c
 10120  00258C  3224               	rrcf	??___flmul^0,f,c
 10121  00258E  C024  F02F         	movff	??___flmul,___flmul@prod
 10122  002592  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 10123  002596  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 10124  00259A  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 10125  00259E  4A33               	infsnz	___flmul@temp^0,f,c
 10126  0025A0  2A34               	incf	(___flmul@temp+1)^0,f,c
 10127  0025A2                     l4732:
 10128  0025A2  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10129  0025A4  EFDC  F012         	goto	u4971
 10130  0025A8  5034               	movf	(___flmul@temp+1)^0,w,c
 10131  0025AA  E108               	bnz	u4970
 10132  0025AC  2833               	incf	___flmul@temp^0,w,c
 10133  0025AE  A0D8               	btfss	status,0,c
 10134  0025B0  EFDC  F012         	goto	u4971
 10135  0025B4  EFDE  F012         	goto	u4970
 10136  0025B8                     u4971:
 10137  0025B8  EFE8  F012         	goto	l4736
 10138  0025BC                     u4970:
 10139  0025BC  0E00               	movlw	0
 10140  0025BE  6E2F               	movwf	___flmul@prod^0,c
 10141  0025C0  0E00               	movlw	0
 10142  0025C2  6E30               	movwf	(___flmul@prod+1)^0,c
 10143  0025C4  0E80               	movlw	128
 10144  0025C6  6E31               	movwf	(___flmul@prod+2)^0,c
 10145  0025C8  0E7F               	movlw	127
 10146  0025CA  6E32               	movwf	(___flmul@prod+3)^0,c
 10147  0025CC  EF16  F013         	goto	l4748
 10148  0025D0                     l4736:
 10149  0025D0  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10150  0025D2  EFF5  F012         	goto	u4980
 10151  0025D6  5034               	movf	(___flmul@temp+1)^0,w,c
 10152  0025D8  E106               	bnz	u4981
 10153  0025DA  0433               	decf	___flmul@temp^0,w,c
 10154  0025DC  B0D8               	btfsc	status,0,c
 10155  0025DE  EFF3  F012         	goto	u4981
 10156  0025E2  EFF5  F012         	goto	u4980
 10157  0025E6                     u4981:
 10158  0025E6  EF01  F013         	goto	l1334
 10159  0025EA                     u4980:
 10160  0025EA  0E00               	movlw	0
 10161  0025EC  6E2F               	movwf	___flmul@prod^0,c
 10162  0025EE  0E00               	movlw	0
 10163  0025F0  6E30               	movwf	(___flmul@prod+1)^0,c
 10164  0025F2  0E00               	movlw	0
 10165  0025F4  6E31               	movwf	(___flmul@prod+2)^0,c
 10166  0025F6  0E00               	movlw	0
 10167  0025F8  6E32               	movwf	(___flmul@prod+3)^0,c
 10168  0025FA  0E00               	movlw	0
 10169  0025FC  6E28               	movwf	___flmul@sign^0,c
 10170  0025FE  EF16  F013         	goto	l4748
 10171  002602                     l1334:
 10172  002602  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 10173  002606  0EFF               	movlw	255
 10174  002608  162F               	andwf	___flmul@prod^0,f,c
 10175  00260A  0EFF               	movlw	255
 10176  00260C  1630               	andwf	(___flmul@prod+1)^0,f,c
 10177  00260E  0E7F               	movlw	127
 10178  002610  1631               	andwf	(___flmul@prod+2)^0,f,c
 10179  002612  0E00               	movlw	0
 10180  002614  1632               	andwf	(___flmul@prod+3)^0,f,c
 10181  002616  A02E               	btfss	___flmul@bexp^0,0,c
 10182  002618  EF10  F013         	goto	u4991
 10183  00261C  EF12  F013         	goto	u4990
 10184  002620                     u4991:
 10185  002620  EF13  F013         	goto	l4746
 10186  002624                     u4990:
 10187  002624  8E31               	bsf	(___flmul@prod+2)^0,7,c
 10188  002626                     l4746:
 10189  002626  90D8               	bcf	status,0,c
 10190  002628  302E               	rrcf	___flmul@bexp^0,w,c
 10191  00262A  6E32               	movwf	(___flmul@prod+3)^0,c
 10192  00262C                     l4748:
 10193  00262C  5028               	movf	___flmul@sign^0,w,c
 10194  00262E  1232               	iorwf	(___flmul@prod+3)^0,f,c
 10195  002630  C02F  F01C         	movff	___flmul@prod,?___flmul
 10196  002634  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 10197  002638  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 10198  00263C  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 10199  002640                     l1321:
 10200  002640  0012               	return		;funcret
 10201  002642                     __end_of___flmul:
 10202                           	callstack 0
 10203                           
 10204 ;; *************** function ___flge *****************
 10205 ;; Defined at:
 10206 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 10207 ;; Parameters:    Size  Location     Type
 10208 ;;  ff1             4   52[COMRAM] unsigned char 
 10209 ;;  ff2             4   56[COMRAM] unsigned char 
 10210 ;; Auto vars:     Size  Location     Type
 10211 ;;		None
 10212 ;; Return value:  Size  Location     Type
 10213 ;;		None               void
 10214 ;; Registers used:
 10215 ;;		wreg, status,2, status,0
 10216 ;; Tracked objects:
 10217 ;;		On entry : 0/0
 10218 ;;		On exit  : 0/0
 10219 ;;		Unchanged: 0/0
 10220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10221 ;;      Params:         8       0       0       0       0       0       0
 10222 ;;      Locals:         0       0       0       0       0       0       0
 10223 ;;      Temps:          4       0       0       0       0       0       0
 10224 ;;      Totals:        12       0       0       0       0       0       0
 10225 ;;Total ram usage:       12 bytes
 10226 ;; Hardware stack levels used:    1
 10227 ;; Hardware stack levels required when called:    1
 10228 ;; This function calls:
 10229 ;;		Nothing
 10230 ;; This function is called by:
 10231 ;;		_secretMenu
 10232 ;;		_efgtoa
 10233 ;; This function uses a non-reentrant model
 10234 ;;
 10235                           
 10236                           	psect	text34
 10237  004542                     __ptext34:
 10238                           	callstack 0
 10239  004542                     ___flge:
 10240                           	callstack 22
 10241  004542  0E00               	movlw	0
 10242  004544  1435               	andwf	___flge@ff1^0,w,c
 10243  004546  6E3D               	movwf	??___flge^0,c
 10244  004548  0E00               	movlw	0
 10245  00454A  1436               	andwf	(___flge@ff1+1)^0,w,c
 10246  00454C  6E3E               	movwf	(??___flge+1)^0,c
 10247  00454E  0E80               	movlw	128
 10248  004550  1437               	andwf	(___flge@ff1+2)^0,w,c
 10249  004552  6E3F               	movwf	(??___flge+2)^0,c
 10250  004554  0E7F               	movlw	127
 10251  004556  1438               	andwf	(___flge@ff1+3)^0,w,c
 10252  004558  6E40               	movwf	(??___flge+3)^0,c
 10253  00455A  503D               	movf	??___flge^0,w,c
 10254  00455C  103E               	iorwf	(??___flge+1)^0,w,c
 10255  00455E  103F               	iorwf	(??___flge+2)^0,w,c
 10256  004560  1040               	iorwf	(??___flge+3)^0,w,c
 10257  004562  A4D8               	btfss	status,2,c
 10258  004564  EFB6  F022         	goto	u5151
 10259  004568  EFB8  F022         	goto	u5150
 10260  00456C                     u5151:
 10261  00456C  EFC0  F022         	goto	l4860
 10262  004570                     u5150:
 10263  004570  0E00               	movlw	0
 10264  004572  6E35               	movwf	___flge@ff1^0,c
 10265  004574  0E00               	movlw	0
 10266  004576  6E36               	movwf	(___flge@ff1+1)^0,c
 10267  004578  0E00               	movlw	0
 10268  00457A  6E37               	movwf	(___flge@ff1+2)^0,c
 10269  00457C  0E00               	movlw	0
 10270  00457E  6E38               	movwf	(___flge@ff1+3)^0,c
 10271  004580                     l4860:
 10272  004580  0E00               	movlw	0
 10273  004582  1439               	andwf	___flge@ff2^0,w,c
 10274  004584  6E3D               	movwf	??___flge^0,c
 10275  004586  0E00               	movlw	0
 10276  004588  143A               	andwf	(___flge@ff2+1)^0,w,c
 10277  00458A  6E3E               	movwf	(??___flge+1)^0,c
 10278  00458C  0E80               	movlw	128
 10279  00458E  143B               	andwf	(___flge@ff2+2)^0,w,c
 10280  004590  6E3F               	movwf	(??___flge+2)^0,c
 10281  004592  0E7F               	movlw	127
 10282  004594  143C               	andwf	(___flge@ff2+3)^0,w,c
 10283  004596  6E40               	movwf	(??___flge+3)^0,c
 10284  004598  503D               	movf	??___flge^0,w,c
 10285  00459A  103E               	iorwf	(??___flge+1)^0,w,c
 10286  00459C  103F               	iorwf	(??___flge+2)^0,w,c
 10287  00459E  1040               	iorwf	(??___flge+3)^0,w,c
 10288  0045A0  A4D8               	btfss	status,2,c
 10289  0045A2  EFD5  F022         	goto	u5161
 10290  0045A6  EFD7  F022         	goto	u5160
 10291  0045AA                     u5161:
 10292  0045AA  EFDF  F022         	goto	l4864
 10293  0045AE                     u5160:
 10294  0045AE  0E00               	movlw	0
 10295  0045B0  6E39               	movwf	___flge@ff2^0,c
 10296  0045B2  0E00               	movlw	0
 10297  0045B4  6E3A               	movwf	(___flge@ff2+1)^0,c
 10298  0045B6  0E00               	movlw	0
 10299  0045B8  6E3B               	movwf	(___flge@ff2+2)^0,c
 10300  0045BA  0E00               	movlw	0
 10301  0045BC  6E3C               	movwf	(___flge@ff2+3)^0,c
 10302  0045BE                     l4864:
 10303  0045BE  AE38               	btfss	(___flge@ff1+3)^0,7,c
 10304  0045C0  EFE4  F022         	goto	u5171
 10305  0045C4  EFE6  F022         	goto	u5170
 10306  0045C8                     u5171:
 10307  0045C8  EFEF  F022         	goto	l4868
 10308  0045CC                     u5170:
 10309  0045CC  6C35               	negf	___flge@ff1^0,c
 10310  0045CE  1E36               	comf	(___flge@ff1+1)^0,f,c
 10311  0045D0  B0D8               	btfsc	status,0,c
 10312  0045D2  2A36               	incf	(___flge@ff1+1)^0,f,c
 10313  0045D4  1E37               	comf	(___flge@ff1+2)^0,f,c
 10314  0045D6  B0D8               	btfsc	status,0,c
 10315  0045D8  2A37               	incf	(___flge@ff1+2)^0,f,c
 10316  0045DA  0E80               	movlw	128
 10317  0045DC  5638               	subfwb	(___flge@ff1+3)^0,f,c
 10318  0045DE                     l4868:
 10319  0045DE  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 10320  0045E0  EFF4  F022         	goto	u5181
 10321  0045E4  EFF6  F022         	goto	u5180
 10322  0045E8                     u5181:
 10323  0045E8  EFFF  F022         	goto	l968
 10324  0045EC                     u5180:
 10325  0045EC  6C39               	negf	___flge@ff2^0,c
 10326  0045EE  1E3A               	comf	(___flge@ff2+1)^0,f,c
 10327  0045F0  B0D8               	btfsc	status,0,c
 10328  0045F2  2A3A               	incf	(___flge@ff2+1)^0,f,c
 10329  0045F4  1E3B               	comf	(___flge@ff2+2)^0,f,c
 10330  0045F6  B0D8               	btfsc	status,0,c
 10331  0045F8  2A3B               	incf	(___flge@ff2+2)^0,f,c
 10332  0045FA  0E80               	movlw	128
 10333  0045FC  563C               	subfwb	(___flge@ff2+3)^0,f,c
 10334  0045FE                     l968:
 10335  0045FE  0E00               	movlw	0
 10336  004600  1A35               	xorwf	___flge@ff1^0,f,c
 10337  004602  0E00               	movlw	0
 10338  004604  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 10339  004606  0E00               	movlw	0
 10340  004608  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 10341  00460A  0E80               	movlw	128
 10342  00460C  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 10343  00460E  0E00               	movlw	0
 10344  004610  1A39               	xorwf	___flge@ff2^0,f,c
 10345  004612  0E00               	movlw	0
 10346  004614  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 10347  004616  0E00               	movlw	0
 10348  004618  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 10349  00461A  0E80               	movlw	128
 10350  00461C  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 10351  00461E  5039               	movf	___flge@ff2^0,w,c
 10352  004620  5C35               	subwf	___flge@ff1^0,w,c
 10353  004622  503A               	movf	(___flge@ff2+1)^0,w,c
 10354  004624  5836               	subwfb	(___flge@ff1+1)^0,w,c
 10355  004626  503B               	movf	(___flge@ff2+2)^0,w,c
 10356  004628  5837               	subwfb	(___flge@ff1+2)^0,w,c
 10357  00462A  503C               	movf	(___flge@ff2+3)^0,w,c
 10358  00462C  5838               	subwfb	(___flge@ff1+3)^0,w,c
 10359  00462E  B0D8               	btfsc	status,0,c
 10360  004630  EF1C  F023         	goto	u5191
 10361  004634  EF1E  F023         	goto	u5190
 10362  004638                     u5191:
 10363  004638  EF21  F023         	goto	l4874
 10364  00463C                     u5190:
 10365  00463C  90D8               	bcf	status,0,c
 10366  00463E  EF22  F023         	goto	l973
 10367  004642                     l4874:
 10368  004642  80D8               	bsf	status,0,c
 10369  004644                     l973:
 10370  004644  0012               	return		;funcret
 10371  004646                     __end_of___flge:
 10372                           	callstack 0
 10373                           
 10374 ;; *************** function ___fleq *****************
 10375 ;; Defined at:
 10376 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 10377 ;; Parameters:    Size  Location     Type
 10378 ;;  ff1             4    0[COMRAM] unsigned char 
 10379 ;;  ff2             4    4[COMRAM] unsigned char 
 10380 ;; Auto vars:     Size  Location     Type
 10381 ;;		None
 10382 ;; Return value:  Size  Location     Type
 10383 ;;		None               void
 10384 ;; Registers used:
 10385 ;;		wreg, status,2, status,0
 10386 ;; Tracked objects:
 10387 ;;		On entry : 0/0
 10388 ;;		On exit  : 0/0
 10389 ;;		Unchanged: 0/0
 10390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10391 ;;      Params:         8       0       0       0       0       0       0
 10392 ;;      Locals:         0       0       0       0       0       0       0
 10393 ;;      Temps:          4       0       0       0       0       0       0
 10394 ;;      Totals:        12       0       0       0       0       0       0
 10395 ;;Total ram usage:       12 bytes
 10396 ;; Hardware stack levels used:    1
 10397 ;; Hardware stack levels required when called:    1
 10398 ;; This function calls:
 10399 ;;		Nothing
 10400 ;; This function is called by:
 10401 ;;		_efgtoa
 10402 ;; This function uses a non-reentrant model
 10403 ;;
 10404                           
 10405                           	psect	text35
 10406  004D94                     __ptext35:
 10407                           	callstack 0
 10408  004D94                     ___fleq:
 10409                           	callstack 22
 10410  004D94  0E00               	movlw	0
 10411  004D96  1401               	andwf	___fleq@ff1^0,w,c
 10412  004D98  6E09               	movwf	??___fleq^0,c
 10413  004D9A  0E00               	movlw	0
 10414  004D9C  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10415  004D9E  6E0A               	movwf	(??___fleq+1)^0,c
 10416  004DA0  0E80               	movlw	128
 10417  004DA2  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10418  004DA4  6E0B               	movwf	(??___fleq+2)^0,c
 10419  004DA6  0E7F               	movlw	127
 10420  004DA8  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10421  004DAA  6E0C               	movwf	(??___fleq+3)^0,c
 10422  004DAC  5009               	movf	??___fleq^0,w,c
 10423  004DAE  100A               	iorwf	(??___fleq+1)^0,w,c
 10424  004DB0  100B               	iorwf	(??___fleq+2)^0,w,c
 10425  004DB2  100C               	iorwf	(??___fleq+3)^0,w,c
 10426  004DB4  A4D8               	btfss	status,2,c
 10427  004DB6  EFDF  F026         	goto	u5121
 10428  004DBA  EFE1  F026         	goto	u5120
 10429  004DBE                     u5121:
 10430  004DBE  EFE9  F026         	goto	l4844
 10431  004DC2                     u5120:
 10432  004DC2  0E00               	movlw	0
 10433  004DC4  6E01               	movwf	___fleq@ff1^0,c
 10434  004DC6  0E00               	movlw	0
 10435  004DC8  6E02               	movwf	(___fleq@ff1+1)^0,c
 10436  004DCA  0E00               	movlw	0
 10437  004DCC  6E03               	movwf	(___fleq@ff1+2)^0,c
 10438  004DCE  0E00               	movlw	0
 10439  004DD0  6E04               	movwf	(___fleq@ff1+3)^0,c
 10440  004DD2                     l4844:
 10441  004DD2  0E00               	movlw	0
 10442  004DD4  1405               	andwf	___fleq@ff2^0,w,c
 10443  004DD6  6E09               	movwf	??___fleq^0,c
 10444  004DD8  0E00               	movlw	0
 10445  004DDA  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10446  004DDC  6E0A               	movwf	(??___fleq+1)^0,c
 10447  004DDE  0E80               	movlw	128
 10448  004DE0  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10449  004DE2  6E0B               	movwf	(??___fleq+2)^0,c
 10450  004DE4  0E7F               	movlw	127
 10451  004DE6  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10452  004DE8  6E0C               	movwf	(??___fleq+3)^0,c
 10453  004DEA  5009               	movf	??___fleq^0,w,c
 10454  004DEC  100A               	iorwf	(??___fleq+1)^0,w,c
 10455  004DEE  100B               	iorwf	(??___fleq+2)^0,w,c
 10456  004DF0  100C               	iorwf	(??___fleq+3)^0,w,c
 10457  004DF2  A4D8               	btfss	status,2,c
 10458  004DF4  EFFE  F026         	goto	u5131
 10459  004DF8  EF00  F027         	goto	u5130
 10460  004DFC                     u5131:
 10461  004DFC  EF08  F027         	goto	l4848
 10462  004E00                     u5130:
 10463  004E00  0E00               	movlw	0
 10464  004E02  6E05               	movwf	___fleq@ff2^0,c
 10465  004E04  0E00               	movlw	0
 10466  004E06  6E06               	movwf	(___fleq@ff2+1)^0,c
 10467  004E08  0E00               	movlw	0
 10468  004E0A  6E07               	movwf	(___fleq@ff2+2)^0,c
 10469  004E0C  0E00               	movlw	0
 10470  004E0E  6E08               	movwf	(___fleq@ff2+3)^0,c
 10471  004E10                     l4848:
 10472  004E10  5005               	movf	___fleq@ff2^0,w,c
 10473  004E12  1801               	xorwf	___fleq@ff1^0,w,c
 10474  004E14  E10F               	bnz	u5140
 10475  004E16  5006               	movf	(___fleq@ff2+1)^0,w,c
 10476  004E18  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10477  004E1A  E10C               	bnz	u5140
 10478  004E1C  5007               	movf	(___fleq@ff2+2)^0,w,c
 10479  004E1E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10480  004E20  E109               	bnz	u5140
 10481  004E22  5008               	movf	(___fleq@ff2+3)^0,w,c
 10482  004E24  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10483  004E26  B4D8               	btfsc	status,2,c
 10484  004E28  EF18  F027         	goto	u5141
 10485  004E2C  EF1A  F027         	goto	u5140
 10486  004E30                     u5141:
 10487  004E30  EF1D  F027         	goto	l4852
 10488  004E34                     u5140:
 10489  004E34  90D8               	bcf	status,0,c
 10490  004E36  EF1E  F027         	goto	l962
 10491  004E3A                     l4852:
 10492  004E3A  80D8               	bsf	status,0,c
 10493  004E3C                     l962:
 10494  004E3C  0012               	return		;funcret
 10495  004E3E                     __end_of___fleq:
 10496                           	callstack 0
 10497                           
 10498 ;; *************** function ___fldiv *****************
 10499 ;; Defined at:
 10500 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 10501 ;; Parameters:    Size  Location     Type
 10502 ;;  b               4   52[COMRAM] unsigned char 
 10503 ;;  a               4   56[COMRAM] unsigned char 
 10504 ;; Auto vars:     Size  Location     Type
 10505 ;;  grs             4   71[COMRAM] unsigned long 
 10506 ;;  rem             4   64[COMRAM] unsigned long 
 10507 ;;  new_exp         2   69[COMRAM] short 
 10508 ;;  aexp            1   76[COMRAM] unsigned char 
 10509 ;;  bexp            1   75[COMRAM] unsigned char 
 10510 ;;  sign            1   68[COMRAM] unsigned char 
 10511 ;; Return value:  Size  Location     Type
 10512 ;;                  4   52[COMRAM] unsigned char 
 10513 ;; Registers used:
 10514 ;;		wreg, status,2, status,0
 10515 ;; Tracked objects:
 10516 ;;		On entry : 0/0
 10517 ;;		On exit  : 0/0
 10518 ;;		Unchanged: 0/0
 10519 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10520 ;;      Params:         8       0       0       0       0       0       0
 10521 ;;      Locals:        13       0       0       0       0       0       0
 10522 ;;      Temps:          4       0       0       0       0       0       0
 10523 ;;      Totals:        25       0       0       0       0       0       0
 10524 ;;Total ram usage:       25 bytes
 10525 ;; Hardware stack levels used:    1
 10526 ;; Hardware stack levels required when called:    1
 10527 ;; This function calls:
 10528 ;;		Nothing
 10529 ;; This function is called by:
 10530 ;;		_scanAdcConversion
 10531 ;;		_calculatedAverageValue
 10532 ;;		_efgtoa
 10533 ;; This function uses a non-reentrant model
 10534 ;;
 10535                           
 10536                           	psect	text36
 10537  002A56                     __ptext36:
 10538                           	callstack 0
 10539  002A56                     ___fldiv:
 10540                           	callstack 22
 10541  002A56  5038               	movf	(___fldiv@b+3)^0,w,c
 10542  002A58  0B80               	andlw	128
 10543  002A5A  6E45               	movwf	___fldiv@sign^0,c
 10544  002A5C  5038               	movf	(___fldiv@b+3)^0,w,c
 10545  002A5E  2438               	addwf	(___fldiv@b+3)^0,w,c
 10546  002A60  6E4C               	movwf	___fldiv@bexp^0,c
 10547  002A62  AE37               	btfss	(___fldiv@b+2)^0,7,c
 10548  002A64  EF36  F015         	goto	u4581
 10549  002A68  EF38  F015         	goto	u4580
 10550  002A6C                     u4581:
 10551  002A6C  EF39  F015         	goto	l4492
 10552  002A70                     u4580:
 10553  002A70  804C               	bsf	___fldiv@bexp^0,0,c
 10554  002A72                     l4492:
 10555  002A72  504C               	movf	___fldiv@bexp^0,w,c
 10556  002A74  B4D8               	btfsc	status,2,c
 10557  002A76  EF3F  F015         	goto	u4591
 10558  002A7A  EF41  F015         	goto	u4590
 10559  002A7E                     u4591:
 10560  002A7E  EF56  F015         	goto	l4502
 10561  002A82                     u4590:
 10562  002A82  284C               	incf	___fldiv@bexp^0,w,c
 10563  002A84  A4D8               	btfss	status,2,c
 10564  002A86  EF47  F015         	goto	u4601
 10565  002A8A  EF49  F015         	goto	u4600
 10566  002A8E                     u4601:
 10567  002A8E  EF51  F015         	goto	l4498
 10568  002A92                     u4600:
 10569  002A92  0E00               	movlw	0
 10570  002A94  6E35               	movwf	___fldiv@b^0,c
 10571  002A96  0E00               	movlw	0
 10572  002A98  6E36               	movwf	(___fldiv@b+1)^0,c
 10573  002A9A  0E00               	movlw	0
 10574  002A9C  6E37               	movwf	(___fldiv@b+2)^0,c
 10575  002A9E  0E00               	movlw	0
 10576  002AA0  6E38               	movwf	(___fldiv@b+3)^0,c
 10577  002AA2                     l4498:
 10578  002AA2  8E37               	bsf	(___fldiv@b+2)^0,7,c
 10579  002AA4  0E00               	movlw	0
 10580  002AA6  6E38               	movwf	(___fldiv@b+3)^0,c
 10581  002AA8  EF5E  F015         	goto	l4504
 10582  002AAC                     l4502:
 10583  002AAC  0E00               	movlw	0
 10584  002AAE  6E35               	movwf	___fldiv@b^0,c
 10585  002AB0  0E00               	movlw	0
 10586  002AB2  6E36               	movwf	(___fldiv@b+1)^0,c
 10587  002AB4  0E00               	movlw	0
 10588  002AB6  6E37               	movwf	(___fldiv@b+2)^0,c
 10589  002AB8  0E00               	movlw	0
 10590  002ABA  6E38               	movwf	(___fldiv@b+3)^0,c
 10591  002ABC                     l4504:
 10592  002ABC  503C               	movf	(___fldiv@a+3)^0,w,c
 10593  002ABE  0B80               	andlw	128
 10594  002AC0  1A45               	xorwf	___fldiv@sign^0,f,c
 10595  002AC2  503C               	movf	(___fldiv@a+3)^0,w,c
 10596  002AC4  243C               	addwf	(___fldiv@a+3)^0,w,c
 10597  002AC6  6E4D               	movwf	___fldiv@aexp^0,c
 10598  002AC8  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 10599  002ACA  EF69  F015         	goto	u4611
 10600  002ACE  EF6B  F015         	goto	u4610
 10601  002AD2                     u4611:
 10602  002AD2  EF6C  F015         	goto	l4512
 10603  002AD6                     u4610:
 10604  002AD6  804D               	bsf	___fldiv@aexp^0,0,c
 10605  002AD8                     l4512:
 10606  002AD8  504D               	movf	___fldiv@aexp^0,w,c
 10607  002ADA  B4D8               	btfsc	status,2,c
 10608  002ADC  EF72  F015         	goto	u4621
 10609  002AE0  EF74  F015         	goto	u4620
 10610  002AE4                     u4621:
 10611  002AE4  EF89  F015         	goto	l4522
 10612  002AE8                     u4620:
 10613  002AE8  284D               	incf	___fldiv@aexp^0,w,c
 10614  002AEA  A4D8               	btfss	status,2,c
 10615  002AEC  EF7A  F015         	goto	u4631
 10616  002AF0  EF7C  F015         	goto	u4630
 10617  002AF4                     u4631:
 10618  002AF4  EF84  F015         	goto	l4518
 10619  002AF8                     u4630:
 10620  002AF8  0E00               	movlw	0
 10621  002AFA  6E39               	movwf	___fldiv@a^0,c
 10622  002AFC  0E00               	movlw	0
 10623  002AFE  6E3A               	movwf	(___fldiv@a+1)^0,c
 10624  002B00  0E00               	movlw	0
 10625  002B02  6E3B               	movwf	(___fldiv@a+2)^0,c
 10626  002B04  0E00               	movlw	0
 10627  002B06  6E3C               	movwf	(___fldiv@a+3)^0,c
 10628  002B08                     l4518:
 10629  002B08  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 10630  002B0A  0E00               	movlw	0
 10631  002B0C  6E3C               	movwf	(___fldiv@a+3)^0,c
 10632  002B0E  EF91  F015         	goto	l4524
 10633  002B12                     l4522:
 10634  002B12  0E00               	movlw	0
 10635  002B14  6E39               	movwf	___fldiv@a^0,c
 10636  002B16  0E00               	movlw	0
 10637  002B18  6E3A               	movwf	(___fldiv@a+1)^0,c
 10638  002B1A  0E00               	movlw	0
 10639  002B1C  6E3B               	movwf	(___fldiv@a+2)^0,c
 10640  002B1E  0E00               	movlw	0
 10641  002B20  6E3C               	movwf	(___fldiv@a+3)^0,c
 10642  002B22                     l4524:
 10643  002B22  5039               	movf	___fldiv@a^0,w,c
 10644  002B24  103A               	iorwf	(___fldiv@a+1)^0,w,c
 10645  002B26  103B               	iorwf	(___fldiv@a+2)^0,w,c
 10646  002B28  103C               	iorwf	(___fldiv@a+3)^0,w,c
 10647  002B2A  A4D8               	btfss	status,2,c
 10648  002B2C  EF9A  F015         	goto	u4641
 10649  002B30  EF9C  F015         	goto	u4640
 10650  002B34                     u4641:
 10651  002B34  EFB4  F015         	goto	l4536
 10652  002B38                     u4640:
 10653  002B38  0E00               	movlw	0
 10654  002B3A  6E35               	movwf	___fldiv@b^0,c
 10655  002B3C  0E00               	movlw	0
 10656  002B3E  6E36               	movwf	(___fldiv@b+1)^0,c
 10657  002B40  0E00               	movlw	0
 10658  002B42  6E37               	movwf	(___fldiv@b+2)^0,c
 10659  002B44  0E00               	movlw	0
 10660  002B46  6E38               	movwf	(___fldiv@b+3)^0,c
 10661  002B48  0E80               	movlw	128
 10662  002B4A  1237               	iorwf	(___fldiv@b+2)^0,f,c
 10663  002B4C  0E7F               	movlw	127
 10664  002B4E  1238               	iorwf	(___fldiv@b+3)^0,f,c
 10665  002B50                     l4530:
 10666  002B50  5045               	movf	___fldiv@sign^0,w,c
 10667  002B52  1238               	iorwf	(___fldiv@b+3)^0,f,c
 10668  002B54  C035  F035         	movff	___fldiv@b,?___fldiv
 10669  002B58  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 10670  002B5C  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 10671  002B60  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 10672  002B64  EFF7  F016         	goto	l1285
 10673  002B68                     l4536:
 10674  002B68  504C               	movf	___fldiv@bexp^0,w,c
 10675  002B6A  A4D8               	btfss	status,2,c
 10676  002B6C  EFBA  F015         	goto	u4651
 10677  002B70  EFBC  F015         	goto	u4650
 10678  002B74                     u4651:
 10679  002B74  EFC6  F015         	goto	l4544
 10680  002B78                     u4650:
 10681  002B78  0E00               	movlw	0
 10682  002B7A  6E35               	movwf	?___fldiv^0,c
 10683  002B7C  0E00               	movlw	0
 10684  002B7E  6E36               	movwf	(?___fldiv+1)^0,c
 10685  002B80  0E00               	movlw	0
 10686  002B82  6E37               	movwf	(?___fldiv+2)^0,c
 10687  002B84  0E00               	movlw	0
 10688  002B86  6E38               	movwf	(?___fldiv+3)^0,c
 10689  002B88  EFF7  F016         	goto	l1285
 10690  002B8C                     l4544:
 10691  002B8C  504D               	movf	___fldiv@aexp^0,w,c
 10692  002B8E  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 10693  002B92  6A3E               	clrf	(??___fldiv+1)^0,c
 10694  002B94  5E3D               	subwf	??___fldiv^0,f,c
 10695  002B96  0E00               	movlw	0
 10696  002B98  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 10697  002B9A  0E7F               	movlw	127
 10698  002B9C  243D               	addwf	??___fldiv^0,w,c
 10699  002B9E  6E46               	movwf	___fldiv@new_exp^0,c
 10700  002BA0  0E00               	movlw	0
 10701  002BA2  203E               	addwfc	(??___fldiv+1)^0,w,c
 10702  002BA4  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 10703  002BA6  C035  F041         	movff	___fldiv@b,___fldiv@rem
 10704  002BAA  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 10705  002BAE  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 10706  002BB2  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 10707  002BB6  0E00               	movlw	0
 10708  002BB8  6E35               	movwf	___fldiv@b^0,c
 10709  002BBA  0E00               	movlw	0
 10710  002BBC  6E36               	movwf	(___fldiv@b+1)^0,c
 10711  002BBE  0E00               	movlw	0
 10712  002BC0  6E37               	movwf	(___fldiv@b+2)^0,c
 10713  002BC2  0E00               	movlw	0
 10714  002BC4  6E38               	movwf	(___fldiv@b+3)^0,c
 10715  002BC6  0E00               	movlw	0
 10716  002BC8  6E48               	movwf	___fldiv@grs^0,c
 10717  002BCA  0E00               	movlw	0
 10718  002BCC  6E49               	movwf	(___fldiv@grs+1)^0,c
 10719  002BCE  0E00               	movlw	0
 10720  002BD0  6E4A               	movwf	(___fldiv@grs+2)^0,c
 10721  002BD2  0E00               	movlw	0
 10722  002BD4  6E4B               	movwf	(___fldiv@grs+3)^0,c
 10723  002BD6  0E00               	movlw	0
 10724  002BD8  6E4D               	movwf	___fldiv@aexp^0,c
 10725  002BDA  EF27  F016         	goto	l1287
 10726  002BDE                     l4554:
 10727  002BDE  504D               	movf	___fldiv@aexp^0,w,c
 10728  002BE0  B4D8               	btfsc	status,2,c
 10729  002BE2  EFF5  F015         	goto	u4661
 10730  002BE6  EFF7  F015         	goto	u4660
 10731  002BEA                     u4661:
 10732  002BEA  EF0E  F016         	goto	l4562
 10733  002BEE                     u4660:
 10734  002BEE  90D8               	bcf	status,0,c
 10735  002BF0  3641               	rlcf	___fldiv@rem^0,f,c
 10736  002BF2  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 10737  002BF4  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 10738  002BF6  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 10739  002BF8  90D8               	bcf	status,0,c
 10740  002BFA  3635               	rlcf	___fldiv@b^0,f,c
 10741  002BFC  3636               	rlcf	(___fldiv@b+1)^0,f,c
 10742  002BFE  3637               	rlcf	(___fldiv@b+2)^0,f,c
 10743  002C00  3638               	rlcf	(___fldiv@b+3)^0,f,c
 10744  002C02  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 10745  002C04  EF06  F016         	goto	u4671
 10746  002C08  EF08  F016         	goto	u4670
 10747  002C0C                     u4671:
 10748  002C0C  EF09  F016         	goto	l1290
 10749  002C10                     u4670:
 10750  002C10  8035               	bsf	___fldiv@b^0,0,c
 10751  002C12                     l1290:
 10752  002C12  90D8               	bcf	status,0,c
 10753  002C14  3648               	rlcf	___fldiv@grs^0,f,c
 10754  002C16  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 10755  002C18  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 10756  002C1A  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 10757  002C1C                     l4562:
 10758  002C1C  5039               	movf	___fldiv@a^0,w,c
 10759  002C1E  5C41               	subwf	___fldiv@rem^0,w,c
 10760  002C20  503A               	movf	(___fldiv@a+1)^0,w,c
 10761  002C22  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 10762  002C24  503B               	movf	(___fldiv@a+2)^0,w,c
 10763  002C26  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 10764  002C28  503C               	movf	(___fldiv@a+3)^0,w,c
 10765  002C2A  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 10766  002C2C  A0D8               	btfss	status,0,c
 10767  002C2E  EF1B  F016         	goto	u4681
 10768  002C32  EF1D  F016         	goto	u4680
 10769  002C36                     u4681:
 10770  002C36  EF26  F016         	goto	l4568
 10771  002C3A                     u4680:
 10772  002C3A  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 10773  002C3C  5039               	movf	___fldiv@a^0,w,c
 10774  002C3E  5E41               	subwf	___fldiv@rem^0,f,c
 10775  002C40  503A               	movf	(___fldiv@a+1)^0,w,c
 10776  002C42  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 10777  002C44  503B               	movf	(___fldiv@a+2)^0,w,c
 10778  002C46  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 10779  002C48  503C               	movf	(___fldiv@a+3)^0,w,c
 10780  002C4A  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 10781  002C4C                     l4568:
 10782  002C4C  2A4D               	incf	___fldiv@aexp^0,f,c
 10783  002C4E                     l1287:
 10784  002C4E  0E19               	movlw	25
 10785  002C50  644D               	cpfsgt	___fldiv@aexp^0,c
 10786  002C52  EF2D  F016         	goto	u4691
 10787  002C56  EF2F  F016         	goto	u4690
 10788  002C5A                     u4691:
 10789  002C5A  EFEF  F015         	goto	l4554
 10790  002C5E                     u4690:
 10791  002C5E  5041               	movf	___fldiv@rem^0,w,c
 10792  002C60  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 10793  002C62  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 10794  002C64  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 10795  002C66  B4D8               	btfsc	status,2,c
 10796  002C68  EF38  F016         	goto	u4701
 10797  002C6C  EF3A  F016         	goto	u4700
 10798  002C70                     u4701:
 10799  002C70  EF52  F016         	goto	l4580
 10800  002C74                     u4700:
 10801  002C74  8048               	bsf	___fldiv@grs^0,0,c
 10802  002C76  EF52  F016         	goto	l4580
 10803  002C7A                     l4574:
 10804  002C7A  90D8               	bcf	status,0,c
 10805  002C7C  3635               	rlcf	___fldiv@b^0,f,c
 10806  002C7E  3636               	rlcf	(___fldiv@b+1)^0,f,c
 10807  002C80  3637               	rlcf	(___fldiv@b+2)^0,f,c
 10808  002C82  3638               	rlcf	(___fldiv@b+3)^0,f,c
 10809  002C84  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 10810  002C86  EF47  F016         	goto	u4711
 10811  002C8A  EF49  F016         	goto	u4710
 10812  002C8E                     u4711:
 10813  002C8E  EF4A  F016         	goto	l1296
 10814  002C92                     u4710:
 10815  002C92  8035               	bsf	___fldiv@b^0,0,c
 10816  002C94                     l1296:
 10817  002C94  90D8               	bcf	status,0,c
 10818  002C96  3648               	rlcf	___fldiv@grs^0,f,c
 10819  002C98  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 10820  002C9A  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 10821  002C9C  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 10822  002C9E  0646               	decf	___fldiv@new_exp^0,f,c
 10823  002CA0  A0D8               	btfss	status,0,c
 10824  002CA2  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 10825  002CA4                     l4580:
 10826  002CA4  AE37               	btfss	(___fldiv@b+2)^0,7,c
 10827  002CA6  EF57  F016         	goto	u4721
 10828  002CAA  EF59  F016         	goto	u4720
 10829  002CAE                     u4721:
 10830  002CAE  EF3D  F016         	goto	l4574
 10831  002CB2                     u4720:
 10832  002CB2  0E00               	movlw	0
 10833  002CB4  6E4D               	movwf	___fldiv@aexp^0,c
 10834  002CB6  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 10835  002CB8  EF60  F016         	goto	u4731
 10836  002CBC  EF62  F016         	goto	u4730
 10837  002CC0                     u4731:
 10838  002CC0  EF86  F016         	goto	l1298
 10839  002CC4                     u4730:
 10840  002CC4  0EFF               	movlw	255
 10841  002CC6  1448               	andwf	___fldiv@grs^0,w,c
 10842  002CC8  6E3D               	movwf	??___fldiv^0,c
 10843  002CCA  0EFF               	movlw	255
 10844  002CCC  1449               	andwf	(___fldiv@grs+1)^0,w,c
 10845  002CCE  6E3E               	movwf	(??___fldiv+1)^0,c
 10846  002CD0  0EFF               	movlw	255
 10847  002CD2  144A               	andwf	(___fldiv@grs+2)^0,w,c
 10848  002CD4  6E3F               	movwf	(??___fldiv+2)^0,c
 10849  002CD6  0E7F               	movlw	127
 10850  002CD8  144B               	andwf	(___fldiv@grs+3)^0,w,c
 10851  002CDA  6E40               	movwf	(??___fldiv+3)^0,c
 10852  002CDC  503D               	movf	??___fldiv^0,w,c
 10853  002CDE  103E               	iorwf	(??___fldiv+1)^0,w,c
 10854  002CE0  103F               	iorwf	(??___fldiv+2)^0,w,c
 10855  002CE2  1040               	iorwf	(??___fldiv+3)^0,w,c
 10856  002CE4  B4D8               	btfsc	status,2,c
 10857  002CE6  EF77  F016         	goto	u4741
 10858  002CEA  EF79  F016         	goto	u4740
 10859  002CEE                     u4741:
 10860  002CEE  EF7D  F016         	goto	l1299
 10861  002CF2                     u4740:
 10862  002CF2                     l4588:
 10863  002CF2  0E01               	movlw	1
 10864  002CF4  6E4D               	movwf	___fldiv@aexp^0,c
 10865  002CF6  EF86  F016         	goto	l1298
 10866  002CFA                     l1299:
 10867  002CFA  A035               	btfss	___fldiv@b^0,0,c
 10868  002CFC  EF82  F016         	goto	u4751
 10869  002D00  EF84  F016         	goto	u4750
 10870  002D04                     u4751:
 10871  002D04  EF86  F016         	goto	l1298
 10872  002D08                     u4750:
 10873  002D08  EF79  F016         	goto	l4588
 10874  002D0C                     l1298:
 10875  002D0C  504D               	movf	___fldiv@aexp^0,w,c
 10876  002D0E  B4D8               	btfsc	status,2,c
 10877  002D10  EF8C  F016         	goto	u4761
 10878  002D14  EF8E  F016         	goto	u4760
 10879  002D18                     u4761:
 10880  002D18  EFB2  F016         	goto	l4600
 10881  002D1C                     u4760:
 10882  002D1C  0E01               	movlw	1
 10883  002D1E  2635               	addwf	___fldiv@b^0,f,c
 10884  002D20  0E00               	movlw	0
 10885  002D22  2236               	addwfc	(___fldiv@b+1)^0,f,c
 10886  002D24  2237               	addwfc	(___fldiv@b+2)^0,f,c
 10887  002D26  2238               	addwfc	(___fldiv@b+3)^0,f,c
 10888  002D28  A038               	btfss	(___fldiv@b+3)^0,0,c
 10889  002D2A  EF99  F016         	goto	u4771
 10890  002D2E  EF9B  F016         	goto	u4770
 10891  002D32                     u4771:
 10892  002D32  EFB2  F016         	goto	l4600
 10893  002D36                     u4770:
 10894  002D36  C035  F03D         	movff	___fldiv@b,??___fldiv
 10895  002D3A  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 10896  002D3E  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 10897  002D42  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 10898  002D46  3440               	rlcf	(??___fldiv+3)^0,w,c
 10899  002D48  3240               	rrcf	(??___fldiv+3)^0,f,c
 10900  002D4A  323F               	rrcf	(??___fldiv+2)^0,f,c
 10901  002D4C  323E               	rrcf	(??___fldiv+1)^0,f,c
 10902  002D4E  323D               	rrcf	??___fldiv^0,f,c
 10903  002D50  C03D  F035         	movff	??___fldiv,___fldiv@b
 10904  002D54  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 10905  002D58  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 10906  002D5C  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 10907  002D60  4A46               	infsnz	___fldiv@new_exp^0,f,c
 10908  002D62  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 10909  002D64                     l4600:
 10910  002D64  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10911  002D66  EFBD  F016         	goto	u4781
 10912  002D6A  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 10913  002D6C  E108               	bnz	u4780
 10914  002D6E  2846               	incf	___fldiv@new_exp^0,w,c
 10915  002D70  A0D8               	btfss	status,0,c
 10916  002D72  EFBD  F016         	goto	u4781
 10917  002D76  EFBF  F016         	goto	u4780
 10918  002D7A                     u4781:
 10919  002D7A  EFCA  F016         	goto	l4604
 10920  002D7E                     u4780:
 10921  002D7E  0E00               	movlw	0
 10922  002D80  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 10923  002D82  6846               	setf	___fldiv@new_exp^0,c
 10924  002D84  0E00               	movlw	0
 10925  002D86  6E35               	movwf	___fldiv@b^0,c
 10926  002D88  0E00               	movlw	0
 10927  002D8A  6E36               	movwf	(___fldiv@b+1)^0,c
 10928  002D8C  0E00               	movlw	0
 10929  002D8E  6E37               	movwf	(___fldiv@b+2)^0,c
 10930  002D90  0E00               	movlw	0
 10931  002D92  6E38               	movwf	(___fldiv@b+3)^0,c
 10932  002D94                     l4604:
 10933  002D94  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 10934  002D96  EFD7  F016         	goto	u4790
 10935  002D9A  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 10936  002D9C  E106               	bnz	u4791
 10937  002D9E  0446               	decf	___fldiv@new_exp^0,w,c
 10938  002DA0  B0D8               	btfsc	status,0,c
 10939  002DA2  EFD5  F016         	goto	u4791
 10940  002DA6  EFD7  F016         	goto	u4790
 10941  002DAA                     u4791:
 10942  002DAA  EFE5  F016         	goto	l4608
 10943  002DAE                     u4790:
 10944  002DAE  0E00               	movlw	0
 10945  002DB0  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 10946  002DB2  0E00               	movlw	0
 10947  002DB4  6E46               	movwf	___fldiv@new_exp^0,c
 10948  002DB6  0E00               	movlw	0
 10949  002DB8  6E35               	movwf	___fldiv@b^0,c
 10950  002DBA  0E00               	movlw	0
 10951  002DBC  6E36               	movwf	(___fldiv@b+1)^0,c
 10952  002DBE  0E00               	movlw	0
 10953  002DC0  6E37               	movwf	(___fldiv@b+2)^0,c
 10954  002DC2  0E00               	movlw	0
 10955  002DC4  6E38               	movwf	(___fldiv@b+3)^0,c
 10956  002DC6  0E00               	movlw	0
 10957  002DC8  6E45               	movwf	___fldiv@sign^0,c
 10958  002DCA                     l4608:
 10959  002DCA  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 10960  002DCE  A04C               	btfss	___fldiv@bexp^0,0,c
 10961  002DD0  EFEC  F016         	goto	u4801
 10962  002DD4  EFEE  F016         	goto	u4800
 10963  002DD8                     u4801:
 10964  002DD8  EFF1  F016         	goto	l4614
 10965  002DDC                     u4800:
 10966  002DDC  8E37               	bsf	(___fldiv@b+2)^0,7,c
 10967  002DDE  EFF2  F016         	goto	l4616
 10968  002DE2                     l4614:
 10969  002DE2  9E37               	bcf	(___fldiv@b+2)^0,7,c
 10970  002DE4                     l4616:
 10971  002DE4  90D8               	bcf	status,0,c
 10972  002DE6  304C               	rrcf	___fldiv@bexp^0,w,c
 10973  002DE8  6E38               	movwf	(___fldiv@b+3)^0,c
 10974  002DEA  EFA8  F015         	goto	l4530
 10975  002DEE                     l1285:
 10976  002DEE  0012               	return		;funcret
 10977  002DF0                     __end_of___fldiv:
 10978                           	callstack 0
 10979                           
 10980 ;; *************** function ___awmod *****************
 10981 ;; Defined at:
 10982 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 10983 ;; Parameters:    Size  Location     Type
 10984 ;;  dividend        2    0[COMRAM] int 
 10985 ;;  divisor         2    2[COMRAM] int 
 10986 ;; Auto vars:     Size  Location     Type
 10987 ;;  sign            1    5[COMRAM] unsigned char 
 10988 ;;  counter         1    4[COMRAM] unsigned char 
 10989 ;; Return value:  Size  Location     Type
 10990 ;;                  2    0[COMRAM] int 
 10991 ;; Registers used:
 10992 ;;		wreg, status,2, status,0
 10993 ;; Tracked objects:
 10994 ;;		On entry : 0/0
 10995 ;;		On exit  : 0/0
 10996 ;;		Unchanged: 0/0
 10997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10998 ;;      Params:         4       0       0       0       0       0       0
 10999 ;;      Locals:         2       0       0       0       0       0       0
 11000 ;;      Temps:          0       0       0       0       0       0       0
 11001 ;;      Totals:         6       0       0       0       0       0       0
 11002 ;;Total ram usage:        6 bytes
 11003 ;; Hardware stack levels used:    1
 11004 ;; Hardware stack levels required when called:    1
 11005 ;; This function calls:
 11006 ;;		Nothing
 11007 ;; This function is called by:
 11008 ;;		_efgtoa
 11009 ;; This function uses a non-reentrant model
 11010 ;;
 11011                           
 11012                           	psect	text37
 11013  004CE4                     __ptext37:
 11014                           	callstack 0
 11015  004CE4                     ___awmod:
 11016                           	callstack 22
 11017  004CE4  0E00               	movlw	0
 11018  004CE6  6E06               	movwf	___awmod@sign^0,c
 11019  004CE8  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11020  004CEA  EF7B  F026         	goto	u5060
 11021  004CEE  EF79  F026         	goto	u5061
 11022  004CF2                     u5061:
 11023  004CF2  EF81  F026         	goto	l4812
 11024  004CF6                     u5060:
 11025  004CF6  6C01               	negf	___awmod@dividend^0,c
 11026  004CF8  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11027  004CFA  B0D8               	btfsc	status,0,c
 11028  004CFC  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11029  004CFE  0E01               	movlw	1
 11030  004D00  6E06               	movwf	___awmod@sign^0,c
 11031  004D02                     l4812:
 11032  004D02  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11033  004D04  EF88  F026         	goto	u5070
 11034  004D08  EF86  F026         	goto	u5071
 11035  004D0C                     u5071:
 11036  004D0C  EF8C  F026         	goto	l4816
 11037  004D10                     u5070:
 11038  004D10  6C03               	negf	___awmod@divisor^0,c
 11039  004D12  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11040  004D14  B0D8               	btfsc	status,0,c
 11041  004D16  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11042  004D18                     l4816:
 11043  004D18  5003               	movf	___awmod@divisor^0,w,c
 11044  004D1A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11045  004D1C  B4D8               	btfsc	status,2,c
 11046  004D1E  EF93  F026         	goto	u5081
 11047  004D22  EF95  F026         	goto	u5080
 11048  004D26                     u5081:
 11049  004D26  EFB9  F026         	goto	l4832
 11050  004D2A                     u5080:
 11051  004D2A  0E01               	movlw	1
 11052  004D2C  6E05               	movwf	___awmod@counter^0,c
 11053  004D2E  EF9D  F026         	goto	l4822
 11054  004D32                     l4820:
 11055  004D32  90D8               	bcf	status,0,c
 11056  004D34  3603               	rlcf	___awmod@divisor^0,f,c
 11057  004D36  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11058  004D38  2A05               	incf	___awmod@counter^0,f,c
 11059  004D3A                     l4822:
 11060  004D3A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11061  004D3C  EFA2  F026         	goto	u5091
 11062  004D40  EFA4  F026         	goto	u5090
 11063  004D44                     u5091:
 11064  004D44  EF99  F026         	goto	l4820
 11065  004D48                     u5090:
 11066  004D48                     l4824:
 11067  004D48  5003               	movf	___awmod@divisor^0,w,c
 11068  004D4A  5C01               	subwf	___awmod@dividend^0,w,c
 11069  004D4C  5004               	movf	(___awmod@divisor+1)^0,w,c
 11070  004D4E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11071  004D50  A0D8               	btfss	status,0,c
 11072  004D52  EFAD  F026         	goto	u5101
 11073  004D56  EFAF  F026         	goto	u5100
 11074  004D5A                     u5101:
 11075  004D5A  EFB3  F026         	goto	l4828
 11076  004D5E                     u5100:
 11077  004D5E  5003               	movf	___awmod@divisor^0,w,c
 11078  004D60  5E01               	subwf	___awmod@dividend^0,f,c
 11079  004D62  5004               	movf	(___awmod@divisor+1)^0,w,c
 11080  004D64  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11081  004D66                     l4828:
 11082  004D66  90D8               	bcf	status,0,c
 11083  004D68  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11084  004D6A  3203               	rrcf	___awmod@divisor^0,f,c
 11085  004D6C  2E05               	decfsz	___awmod@counter^0,f,c
 11086  004D6E  EFA4  F026         	goto	l4824
 11087  004D72                     l4832:
 11088  004D72  5006               	movf	___awmod@sign^0,w,c
 11089  004D74  B4D8               	btfsc	status,2,c
 11090  004D76  EFBF  F026         	goto	u5111
 11091  004D7A  EFC1  F026         	goto	u5110
 11092  004D7E                     u5111:
 11093  004D7E  EFC5  F026         	goto	l4836
 11094  004D82                     u5110:
 11095  004D82  6C01               	negf	___awmod@dividend^0,c
 11096  004D84  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11097  004D86  B0D8               	btfsc	status,0,c
 11098  004D88  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11099  004D8A                     l4836:
 11100  004D8A  C001  F001         	movff	___awmod@dividend,?___awmod
 11101  004D8E  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11102  004D92  0012               	return		;funcret
 11103  004D94                     __end_of___awmod:
 11104                           	callstack 0
 11105                           
 11106 ;; *************** function ___awdiv *****************
 11107 ;; Defined at:
 11108 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 11109 ;; Parameters:    Size  Location     Type
 11110 ;;  dividend        2    0[COMRAM] int 
 11111 ;;  divisor         2    2[COMRAM] int 
 11112 ;; Auto vars:     Size  Location     Type
 11113 ;;  quotient        2    6[COMRAM] int 
 11114 ;;  sign            1    5[COMRAM] unsigned char 
 11115 ;;  counter         1    4[COMRAM] unsigned char 
 11116 ;; Return value:  Size  Location     Type
 11117 ;;                  2    0[COMRAM] int 
 11118 ;; Registers used:
 11119 ;;		wreg, status,2, status,0
 11120 ;; Tracked objects:
 11121 ;;		On entry : 0/0
 11122 ;;		On exit  : 0/0
 11123 ;;		Unchanged: 0/0
 11124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11125 ;;      Params:         4       0       0       0       0       0       0
 11126 ;;      Locals:         4       0       0       0       0       0       0
 11127 ;;      Temps:          0       0       0       0       0       0       0
 11128 ;;      Totals:         8       0       0       0       0       0       0
 11129 ;;Total ram usage:        8 bytes
 11130 ;; Hardware stack levels used:    1
 11131 ;; Hardware stack levels required when called:    1
 11132 ;; This function calls:
 11133 ;;		Nothing
 11134 ;; This function is called by:
 11135 ;;		_efgtoa
 11136 ;; This function uses a non-reentrant model
 11137 ;;
 11138                           
 11139                           	psect	text38
 11140  004B6E                     __ptext38:
 11141                           	callstack 0
 11142  004B6E                     ___awdiv:
 11143                           	callstack 22
 11144  004B6E  0E00               	movlw	0
 11145  004B70  6E06               	movwf	___awdiv@sign^0,c
 11146  004B72  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11147  004B74  EFC0  F025         	goto	u5000
 11148  004B78  EFBE  F025         	goto	u5001
 11149  004B7C                     u5001:
 11150  004B7C  EFC6  F025         	goto	l4768
 11151  004B80                     u5000:
 11152  004B80  6C03               	negf	___awdiv@divisor^0,c
 11153  004B82  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11154  004B84  B0D8               	btfsc	status,0,c
 11155  004B86  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11156  004B88  0E01               	movlw	1
 11157  004B8A  6E06               	movwf	___awdiv@sign^0,c
 11158  004B8C                     l4768:
 11159  004B8C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11160  004B8E  EFCD  F025         	goto	u5010
 11161  004B92  EFCB  F025         	goto	u5011
 11162  004B96                     u5011:
 11163  004B96  EFD3  F025         	goto	l4774
 11164  004B9A                     u5010:
 11165  004B9A  6C01               	negf	___awdiv@dividend^0,c
 11166  004B9C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11167  004B9E  B0D8               	btfsc	status,0,c
 11168  004BA0  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11169  004BA2  0E01               	movlw	1
 11170  004BA4  1A06               	xorwf	___awdiv@sign^0,f,c
 11171  004BA6                     l4774:
 11172  004BA6  0E00               	movlw	0
 11173  004BA8  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11174  004BAA  0E00               	movlw	0
 11175  004BAC  6E07               	movwf	___awdiv@quotient^0,c
 11176  004BAE  5003               	movf	___awdiv@divisor^0,w,c
 11177  004BB0  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11178  004BB2  B4D8               	btfsc	status,2,c
 11179  004BB4  EFDE  F025         	goto	u5021
 11180  004BB8  EFE0  F025         	goto	u5020
 11181  004BBC                     u5021:
 11182  004BBC  EF08  F026         	goto	l4796
 11183  004BC0                     u5020:
 11184  004BC0  0E01               	movlw	1
 11185  004BC2  6E05               	movwf	___awdiv@counter^0,c
 11186  004BC4  EFE8  F025         	goto	l4782
 11187  004BC8                     l4780:
 11188  004BC8  90D8               	bcf	status,0,c
 11189  004BCA  3603               	rlcf	___awdiv@divisor^0,f,c
 11190  004BCC  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11191  004BCE  2A05               	incf	___awdiv@counter^0,f,c
 11192  004BD0                     l4782:
 11193  004BD0  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11194  004BD2  EFED  F025         	goto	u5031
 11195  004BD6  EFEF  F025         	goto	u5030
 11196  004BDA                     u5031:
 11197  004BDA  EFE4  F025         	goto	l4780
 11198  004BDE                     u5030:
 11199  004BDE                     l4784:
 11200  004BDE  90D8               	bcf	status,0,c
 11201  004BE0  3607               	rlcf	___awdiv@quotient^0,f,c
 11202  004BE2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11203  004BE4  5003               	movf	___awdiv@divisor^0,w,c
 11204  004BE6  5C01               	subwf	___awdiv@dividend^0,w,c
 11205  004BE8  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11206  004BEA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11207  004BEC  A0D8               	btfss	status,0,c
 11208  004BEE  EFFB  F025         	goto	u5041
 11209  004BF2  EFFD  F025         	goto	u5040
 11210  004BF6                     u5041:
 11211  004BF6  EF02  F026         	goto	l4792
 11212  004BFA                     u5040:
 11213  004BFA  5003               	movf	___awdiv@divisor^0,w,c
 11214  004BFC  5E01               	subwf	___awdiv@dividend^0,f,c
 11215  004BFE  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11216  004C00  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11217  004C02  8007               	bsf	___awdiv@quotient^0,0,c
 11218  004C04                     l4792:
 11219  004C04  90D8               	bcf	status,0,c
 11220  004C06  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11221  004C08  3203               	rrcf	___awdiv@divisor^0,f,c
 11222  004C0A  2E05               	decfsz	___awdiv@counter^0,f,c
 11223  004C0C  EFEF  F025         	goto	l4784
 11224  004C10                     l4796:
 11225  004C10  5006               	movf	___awdiv@sign^0,w,c
 11226  004C12  B4D8               	btfsc	status,2,c
 11227  004C14  EF0E  F026         	goto	u5051
 11228  004C18  EF10  F026         	goto	u5050
 11229  004C1C                     u5051:
 11230  004C1C  EF14  F026         	goto	l4800
 11231  004C20                     u5050:
 11232  004C20  6C07               	negf	___awdiv@quotient^0,c
 11233  004C22  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11234  004C24  B0D8               	btfsc	status,0,c
 11235  004C26  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11236  004C28                     l4800:
 11237  004C28  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11238  004C2C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11239  004C30  0012               	return		;funcret
 11240  004C32                     __end_of___awdiv:
 11241                           	callstack 0
 11242                           
 11243 ;; *************** function _dtoa *****************
 11244 ;; Defined at:
 11245 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11246 ;; Parameters:    Size  Location     Type
 11247 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 11248 ;;		 -> sprintf@f(6), 
 11249 ;;  d               8   29[COMRAM] long long 
 11250 ;; Auto vars:     Size  Location     Type
 11251 ;;  n               8   53[COMRAM] long long 
 11252 ;;  i               2   61[COMRAM] int 
 11253 ;;  s               2   51[COMRAM] int 
 11254 ;;  w               2   49[COMRAM] int 
 11255 ;;  p               2   47[COMRAM] int 
 11256 ;; Return value:  Size  Location     Type
 11257 ;;                  2   27[COMRAM] int 
 11258 ;; Registers used:
 11259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11260 ;; Tracked objects:
 11261 ;;		On entry : 0/0
 11262 ;;		On exit  : 0/0
 11263 ;;		Unchanged: 0/0
 11264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11265 ;;      Params:        10       0       0       0       0       0       0
 11266 ;;      Locals:        18       0       0       0       0       0       0
 11267 ;;      Temps:          8       0       0       0       0       0       0
 11268 ;;      Totals:        36       0       0       0       0       0       0
 11269 ;;Total ram usage:       36 bytes
 11270 ;; Hardware stack levels used:    1
 11271 ;; Hardware stack levels required when called:    5
 11272 ;; This function calls:
 11273 ;;		___aodiv
 11274 ;;		___aomod
 11275 ;;		_abs
 11276 ;;		_pad
 11277 ;; This function is called by:
 11278 ;;		_vfpfcnvrt
 11279 ;; This function uses a non-reentrant model
 11280 ;;
 11281                           
 11282                           	psect	text39
 11283  002DF0                     __ptext39:
 11284                           	callstack 0
 11285  002DF0                     _dtoa:
 11286                           	callstack 19
 11287  002DF0                     
 11288                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 11289  002DF0  C01E  F036         	movff	dtoa@d,dtoa@n
 11290  002DF4  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 11291  002DF8  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 11292  002DFC  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 11293  002E00  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 11294  002E04  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 11295  002E08  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 11296  002E0C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 11297  002E10                     
 11298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 11299  002E10  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 11300  002E12  EF0D  F017         	goto	u5591
 11301  002E16  EF10  F017         	goto	u5590
 11302  002E1A                     u5591:
 11303  002E1A  0E01               	movlw	1
 11304  002E1C  EF11  F017         	goto	u5600
 11305  002E20                     u5590:
 11306  002E20  0E00               	movlw	0
 11307  002E22                     u5600:
 11308  002E22  6E34               	movwf	dtoa@s^0,c
 11309  002E24  6A35               	clrf	(dtoa@s+1)^0,c
 11310                           
 11311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 11312  002E26  5034               	movf	dtoa@s^0,w,c
 11313  002E28  1035               	iorwf	(dtoa@s+1)^0,w,c
 11314  002E2A  B4D8               	btfsc	status,2,c
 11315  002E2C  EF1A  F017         	goto	u5611
 11316  002E30  EF1C  F017         	goto	u5610
 11317  002E34                     u5611:
 11318  002E34  EF2C  F017         	goto	l5042
 11319  002E38                     u5610:
 11320  002E38                     
 11321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 11322  002E38  1E3D               	comf	(dtoa@n+7)^0,f,c
 11323  002E3A  1E3C               	comf	(dtoa@n+6)^0,f,c
 11324  002E3C  1E3B               	comf	(dtoa@n+5)^0,f,c
 11325  002E3E  1E3A               	comf	(dtoa@n+4)^0,f,c
 11326  002E40  1E39               	comf	(dtoa@n+3)^0,f,c
 11327  002E42  1E38               	comf	(dtoa@n+2)^0,f,c
 11328  002E44  1E37               	comf	(dtoa@n+1)^0,f,c
 11329  002E46  6C36               	negf	dtoa@n^0,c
 11330  002E48  0E00               	movlw	0
 11331  002E4A  2237               	addwfc	(dtoa@n+1)^0,f,c
 11332  002E4C  2238               	addwfc	(dtoa@n+2)^0,f,c
 11333  002E4E  2239               	addwfc	(dtoa@n+3)^0,f,c
 11334  002E50  223A               	addwfc	(dtoa@n+4)^0,f,c
 11335  002E52  223B               	addwfc	(dtoa@n+5)^0,f,c
 11336  002E54  223C               	addwfc	(dtoa@n+6)^0,f,c
 11337  002E56  223D               	addwfc	(dtoa@n+7)^0,f,c
 11338  002E58                     l5042:
 11339                           
 11340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 11341  002E58  0100               	movlb	0	; () banked
 11342  002E5A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11343  002E5C  EF32  F017         	goto	u5621
 11344  002E60  EF34  F017         	goto	u5620
 11345  002E64                     u5621:
 11346  002E64  EF35  F017         	goto	l5046
 11347  002E68                     u5620:
 11348  002E68                     
 11349                           ; BSR set to: 0
 11350                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 11351  002E68  93F8               	bcf	_flags& (0+255),1,b
 11352  002E6A                     l5046:
 11353                           
 11354                           ; BSR set to: 0
 11355                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 11356  002E6A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11357  002E6C  EF42  F017         	goto	u5630
 11358  002E70  51F7               	movf	(_prec+1)& (0+255),w,b
 11359  002E72  E106               	bnz	u5631
 11360  002E74  05F6               	decf	_prec& (0+255),w,b
 11361  002E76  B0D8               	btfsc	status,0,c
 11362  002E78  EF40  F017         	goto	u5631
 11363  002E7C  EF42  F017         	goto	u5630
 11364  002E80                     u5631:
 11365  002E80  EF48  F017         	goto	l1440
 11366  002E84                     u5630:
 11367  002E84                     
 11368                           ; BSR set to: 0
 11369  002E84  0E00               	movlw	0
 11370  002E86  6E31               	movwf	(dtoa@p+1)^0,c
 11371  002E88  0E01               	movlw	1
 11372  002E8A  6E30               	movwf	dtoa@p^0,c
 11373  002E8C  EF4C  F017         	goto	l1442
 11374  002E90                     l1440:
 11375                           
 11376                           ; BSR set to: 0
 11377  002E90  C0F6  F030         	movff	_prec,dtoa@p
 11378  002E94  C0F7  F031         	movff	_prec+1,dtoa@p+1
 11379  002E98                     l1442:
 11380                           
 11381                           ; BSR set to: 0
 11382                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 11383  002E98  C1B9  F032         	movff	_width,dtoa@w
 11384  002E9C  C1BA  F033         	movff	_width+1,dtoa@w+1
 11385  002EA0                     
 11386                           ; BSR set to: 0
 11387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 11388  002EA0  5034               	movf	dtoa@s^0,w,c
 11389  002EA2  1035               	iorwf	(dtoa@s+1)^0,w,c
 11390  002EA4  A4D8               	btfss	status,2,c
 11391  002EA6  EF57  F017         	goto	u5641
 11392  002EAA  EF59  F017         	goto	u5640
 11393  002EAE                     u5641:
 11394  002EAE  EF60  F017         	goto	l5054
 11395  002EB2                     u5640:
 11396  002EB2                     
 11397                           ; BSR set to: 0
 11398  002EB2  A5F8               	btfss	_flags& (0+255),2,b
 11399  002EB4  EF5E  F017         	goto	u5651
 11400  002EB8  EF60  F017         	goto	u5650
 11401  002EBC                     u5651:
 11402  002EBC  EF63  F017         	goto	l5056
 11403  002EC0                     u5650:
 11404  002EC0                     l5054:
 11405                           
 11406                           ; BSR set to: 0
 11407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 11408  002EC0  0632               	decf	dtoa@w^0,f,c
 11409  002EC2  A0D8               	btfss	status,0,c
 11410  002EC4  0633               	decf	(dtoa@w+1)^0,f,c
 11411  002EC6                     l5056:
 11412                           
 11413                           ; BSR set to: 0
 11414                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 11415  002EC6  0E00               	movlw	0
 11416  002EC8  6E3F               	movwf	(dtoa@i+1)^0,c
 11417  002ECA  0E4F               	movlw	79
 11418  002ECC  6E3E               	movwf	dtoa@i^0,c
 11419  002ECE                     
 11420                           ; BSR set to: 0
 11421                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 11422  002ECE  0E00               	movlw	0
 11423  002ED0  0102               	movlb	2	; () banked
 11424  002ED2  6FB8               	movwf	(_dbuf+79)& (0+255),b
 11425                           
 11426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11427  002ED4  EFE8  F017         	goto	l5070
 11428  002ED8                     l5060:
 11429                           
 11430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 11431  002ED8  063E               	decf	dtoa@i^0,f,c
 11432  002EDA  A0D8               	btfss	status,0,c
 11433  002EDC  063F               	decf	(dtoa@i+1)^0,f,c
 11434  002EDE                     
 11435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 11436  002EDE  0E69               	movlw	low _dbuf
 11437  002EE0  243E               	addwf	dtoa@i^0,w,c
 11438  002EE2  6ED9               	movwf	fsr2l,c
 11439  002EE4  0E02               	movlw	high _dbuf
 11440  002EE6  203F               	addwfc	(dtoa@i+1)^0,w,c
 11441  002EE8  6EDA               	movwf	fsr2h,c
 11442  002EEA  C036  F001         	movff	dtoa@n,___aomod@dividend
 11443  002EEE  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 11444  002EF2  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 11445  002EF6  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 11446  002EFA  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 11447  002EFE  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 11448  002F02  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 11449  002F06  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 11450  002F0A  0E0A               	movlw	10
 11451  002F0C  6E09               	movwf	___aomod@divisor^0,c
 11452  002F0E  0E00               	movlw	0
 11453  002F10  6E0A               	movwf	(___aomod@divisor+1)^0,c
 11454  002F12  0E00               	movlw	0
 11455  002F14  6E0B               	movwf	(___aomod@divisor+2)^0,c
 11456  002F16  0E00               	movlw	0
 11457  002F18  6E0C               	movwf	(___aomod@divisor+3)^0,c
 11458  002F1A  0E00               	movlw	0
 11459  002F1C  6E0D               	movwf	(___aomod@divisor+4)^0,c
 11460  002F1E  0E00               	movlw	0
 11461  002F20  6E0E               	movwf	(___aomod@divisor+5)^0,c
 11462  002F22  0E00               	movlw	0
 11463  002F24  6E0F               	movwf	(___aomod@divisor+6)^0,c
 11464  002F26  0E00               	movlw	0
 11465  002F28  6E10               	movwf	(___aomod@divisor+7)^0,c
 11466  002F2A  ECCC  F01F         	call	___aomod	;wreg free
 11467  002F2E  C001  F026         	movff	?___aomod,??_dtoa
 11468  002F32  C002  F027         	movff	?___aomod+1,??_dtoa+1
 11469  002F36  C003  F028         	movff	?___aomod+2,??_dtoa+2
 11470  002F3A  C004  F029         	movff	?___aomod+3,??_dtoa+3
 11471  002F3E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 11472  002F42  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 11473  002F46  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 11474  002F4A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 11475  002F4E  C026  F013         	movff	??_dtoa,abs@a
 11476  002F52  C028  F014         	movff	??_dtoa+2,abs@a+1
 11477  002F56  EC5A  F02B         	call	_abs	;wreg free
 11478  002F5A  5013               	movf	?_abs^0,w,c
 11479  002F5C  0F30               	addlw	48
 11480  002F5E  6EDF               	movwf	indf2,c
 11481  002F60                     
 11482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 11483  002F60  0630               	decf	dtoa@p^0,f,c
 11484  002F62  A0D8               	btfss	status,0,c
 11485  002F64  0631               	decf	(dtoa@p+1)^0,f,c
 11486  002F66                     
 11487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 11488  002F66  0632               	decf	dtoa@w^0,f,c
 11489  002F68  A0D8               	btfss	status,0,c
 11490  002F6A  0633               	decf	(dtoa@w+1)^0,f,c
 11491  002F6C                     
 11492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 11493  002F6C  C036  F001         	movff	dtoa@n,___aodiv@dividend
 11494  002F70  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 11495  002F74  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 11496  002F78  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 11497  002F7C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 11498  002F80  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 11499  002F84  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 11500  002F88  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 11501  002F8C  0E0A               	movlw	10
 11502  002F8E  6E09               	movwf	___aodiv@divisor^0,c
 11503  002F90  0E00               	movlw	0
 11504  002F92  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 11505  002F94  0E00               	movlw	0
 11506  002F96  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 11507  002F98  0E00               	movlw	0
 11508  002F9A  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 11509  002F9C  0E00               	movlw	0
 11510  002F9E  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 11511  002FA0  0E00               	movlw	0
 11512  002FA2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 11513  002FA4  0E00               	movlw	0
 11514  002FA6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 11515  002FA8  0E00               	movlw	0
 11516  002FAA  6E10               	movwf	(___aodiv@divisor+7)^0,c
 11517  002FAC  EC08  F01F         	call	___aodiv	;wreg free
 11518  002FB0  C001  F036         	movff	?___aodiv,dtoa@n
 11519  002FB4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 11520  002FB8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 11521  002FBC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 11522  002FC0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 11523  002FC4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 11524  002FC8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 11525  002FCC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 11526  002FD0                     l5070:
 11527                           
 11528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11529  002FD0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 11530  002FD2  EFF3  F017         	goto	u5661
 11531  002FD6  503F               	movf	(dtoa@i+1)^0,w,c
 11532  002FD8  E108               	bnz	u5660
 11533  002FDA  043E               	decf	dtoa@i^0,w,c
 11534  002FDC  A0D8               	btfss	status,0,c
 11535  002FDE  EFF3  F017         	goto	u5661
 11536  002FE2  EFF5  F017         	goto	u5660
 11537  002FE6                     u5661:
 11538  002FE6  EF26  F018         	goto	l5080
 11539  002FEA                     u5660:
 11540  002FEA  5036               	movf	dtoa@n^0,w,c
 11541  002FEC  1037               	iorwf	(dtoa@n+1)^0,w,c
 11542  002FEE  1038               	iorwf	(dtoa@n+2)^0,w,c
 11543  002FF0  1039               	iorwf	(dtoa@n+3)^0,w,c
 11544  002FF2  103A               	iorwf	(dtoa@n+4)^0,w,c
 11545  002FF4  103B               	iorwf	(dtoa@n+5)^0,w,c
 11546  002FF6  103C               	iorwf	(dtoa@n+6)^0,w,c
 11547  002FF8  103D               	iorwf	(dtoa@n+7)^0,w,c
 11548  002FFA  A4D8               	btfss	status,2,c
 11549  002FFC  EF02  F018         	goto	u5671
 11550  003000  EF04  F018         	goto	u5670
 11551  003004                     u5671:
 11552  003004  EF6C  F017         	goto	l5060
 11553  003008                     u5670:
 11554  003008  BE31               	btfsc	(dtoa@p+1)^0,7,c
 11555  00300A  EF11  F018         	goto	u5680
 11556  00300E  5031               	movf	(dtoa@p+1)^0,w,c
 11557  003010  E106               	bnz	u5681
 11558  003012  0430               	decf	dtoa@p^0,w,c
 11559  003014  B0D8               	btfsc	status,0,c
 11560  003016  EF0F  F018         	goto	u5681
 11561  00301A  EF11  F018         	goto	u5680
 11562  00301E                     u5681:
 11563  00301E  EF6C  F017         	goto	l5060
 11564  003022                     u5680:
 11565  003022  BE33               	btfsc	(dtoa@w+1)^0,7,c
 11566  003024  EF1C  F018         	goto	u5691
 11567  003028  5033               	movf	(dtoa@w+1)^0,w,c
 11568  00302A  E108               	bnz	u5690
 11569  00302C  0432               	decf	dtoa@w^0,w,c
 11570  00302E  A0D8               	btfss	status,0,c
 11571  003030  EF1C  F018         	goto	u5691
 11572  003034  EF1E  F018         	goto	u5690
 11573  003038                     u5691:
 11574  003038  EF26  F018         	goto	l5080
 11575  00303C                     u5690:
 11576  00303C  0100               	movlb	0	; () banked
 11577  00303E  B3F8               	btfsc	_flags& (0+255),1,b
 11578  003040  EF24  F018         	goto	u5701
 11579  003044  EF26  F018         	goto	u5700
 11580  003048                     u5701:
 11581  003048  EF6C  F017         	goto	l5060
 11582  00304C                     u5700:
 11583  00304C                     l5080:
 11584                           
 11585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 11586  00304C  5034               	movf	dtoa@s^0,w,c
 11587  00304E  1035               	iorwf	(dtoa@s+1)^0,w,c
 11588  003050  A4D8               	btfss	status,2,c
 11589  003052  EF2D  F018         	goto	u5711
 11590  003056  EF2F  F018         	goto	u5710
 11591  00305A                     u5711:
 11592  00305A  EF37  F018         	goto	l5084
 11593  00305E                     u5710:
 11594  00305E  0100               	movlb	0	; () banked
 11595  003060  A5F8               	btfss	_flags& (0+255),2,b
 11596  003062  EF35  F018         	goto	u5721
 11597  003066  EF37  F018         	goto	u5720
 11598  00306A                     u5721:
 11599  00306A  EF55  F018         	goto	l5094
 11600  00306E                     u5720:
 11601  00306E                     l5084:
 11602                           
 11603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 11604  00306E  063E               	decf	dtoa@i^0,f,c
 11605  003070  A0D8               	btfss	status,0,c
 11606  003072  063F               	decf	(dtoa@i+1)^0,f,c
 11607  003074                     
 11608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 11609  003074  5034               	movf	dtoa@s^0,w,c
 11610  003076  1035               	iorwf	(dtoa@s+1)^0,w,c
 11611  003078  A4D8               	btfss	status,2,c
 11612  00307A  EF41  F018         	goto	u5731
 11613  00307E  EF43  F018         	goto	u5730
 11614  003082                     u5731:
 11615  003082  EF49  F018         	goto	l5090
 11616  003086                     u5730:
 11617  003086  0E00               	movlw	0
 11618  003088  6E2F               	movwf	(_dtoa$2974+1)^0,c
 11619  00308A  0E2B               	movlw	43
 11620  00308C  6E2E               	movwf	_dtoa$2974^0,c
 11621  00308E  EF4D  F018         	goto	l5092
 11622  003092                     l5090:
 11623  003092  0E00               	movlw	0
 11624  003094  6E2F               	movwf	(_dtoa$2974+1)^0,c
 11625  003096  0E2D               	movlw	45
 11626  003098  6E2E               	movwf	_dtoa$2974^0,c
 11627  00309A                     l5092:
 11628  00309A  0E69               	movlw	low _dbuf
 11629  00309C  243E               	addwf	dtoa@i^0,w,c
 11630  00309E  6ED9               	movwf	fsr2l,c
 11631  0030A0  0E02               	movlw	high _dbuf
 11632  0030A2  203F               	addwfc	(dtoa@i+1)^0,w,c
 11633  0030A4  6EDA               	movwf	fsr2h,c
 11634  0030A6  C02E  FFDF         	movff	_dtoa$2974,indf2
 11635  0030AA                     l5094:
 11636                           
 11637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 11638  0030AA  C01C  F011         	movff	dtoa@fp,pad@fp
 11639  0030AE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 11640  0030B2  0E69               	movlw	low _dbuf
 11641  0030B4  243E               	addwf	dtoa@i^0,w,c
 11642  0030B6  6E13               	movwf	pad@buf^0,c
 11643  0030B8  0E02               	movlw	high _dbuf
 11644  0030BA  203F               	addwfc	(dtoa@i+1)^0,w,c
 11645  0030BC  6E14               	movwf	(pad@buf+1)^0,c
 11646  0030BE  C032  F015         	movff	dtoa@w,pad@p
 11647  0030C2  C033  F016         	movff	dtoa@w+1,pad@p+1
 11648  0030C6  EC54  F025         	call	_pad	;wreg free
 11649  0030CA  C011  F01C         	movff	?_pad,?_dtoa
 11650  0030CE  C012  F01D         	movff	?_pad+1,?_dtoa+1
 11651  0030D2  0012               	return		;funcret
 11652  0030D4                     __end_of_dtoa:
 11653                           	callstack 0
 11654                           
 11655 ;; *************** function _pad *****************
 11656 ;; Defined at:
 11657 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11658 ;; Parameters:    Size  Location     Type
 11659 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 11660 ;;		 -> sprintf@f(6), 
 11661 ;;  buf             2   18[COMRAM] PTR unsigned char 
 11662 ;;		 -> dbuf(80), 
 11663 ;;  p               2   20[COMRAM] int 
 11664 ;; Auto vars:     Size  Location     Type
 11665 ;;  w               2   25[COMRAM] int 
 11666 ;;  i               2   23[COMRAM] int 
 11667 ;; Return value:  Size  Location     Type
 11668 ;;                  2   16[COMRAM] int 
 11669 ;; Registers used:
 11670 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11671 ;; Tracked objects:
 11672 ;;		On entry : 0/0
 11673 ;;		On exit  : 0/0
 11674 ;;		Unchanged: 0/0
 11675 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11676 ;;      Params:         6       0       0       0       0       0       0
 11677 ;;      Locals:         4       0       0       0       0       0       0
 11678 ;;      Temps:          1       0       0       0       0       0       0
 11679 ;;      Totals:        11       0       0       0       0       0       0
 11680 ;;Total ram usage:       11 bytes
 11681 ;; Hardware stack levels used:    1
 11682 ;; Hardware stack levels required when called:    4
 11683 ;; This function calls:
 11684 ;;		_fputc
 11685 ;;		_fputs
 11686 ;;		_strlen
 11687 ;; This function is called by:
 11688 ;;		_dtoa
 11689 ;;		_efgtoa
 11690 ;; This function uses a non-reentrant model
 11691 ;;
 11692                           
 11693                           	psect	text40
 11694  004AA8                     __ptext40:
 11695                           	callstack 0
 11696  004AA8                     _pad:
 11697                           	callstack 19
 11698  004AA8                     
 11699                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 11700  004AA8  0100               	movlb	0	; () banked
 11701  004AAA  A1F8               	btfss	_flags& (0+255),0,b
 11702  004AAC  EF5A  F025         	goto	u5281
 11703  004AB0  EF5C  F025         	goto	u5280
 11704  004AB4                     u5281:
 11705  004AB4  EF66  F025         	goto	l4934
 11706  004AB8                     u5280:
 11707  004AB8                     
 11708                           ; BSR set to: 0
 11709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 11710  004AB8  C013  F00A         	movff	pad@buf,fputs@s
 11711  004ABC  C014  F00B         	movff	pad@buf+1,fputs@s+1
 11712  004AC0  C011  F00C         	movff	pad@fp,fputs@fp
 11713  004AC4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 11714  004AC8  ECF7  F02A         	call	_fputs	;wreg free
 11715  004ACC                     l4934:
 11716                           
 11717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 11718  004ACC  BE16               	btfsc	(pad@p+1)^0,7,c
 11719  004ACE  EF6B  F025         	goto	u5291
 11720  004AD2  EF6D  F025         	goto	u5290
 11721  004AD6                     u5291:
 11722  004AD6  EF73  F025         	goto	l4938
 11723  004ADA                     u5290:
 11724  004ADA  C015  F01A         	movff	pad@p,pad@w
 11725  004ADE  C016  F01B         	movff	pad@p+1,pad@w+1
 11726  004AE2  EF77  F025         	goto	l1429
 11727  004AE6                     l4938:
 11728  004AE6  0E00               	movlw	0
 11729  004AE8  6E1B               	movwf	(pad@w+1)^0,c
 11730  004AEA  0E00               	movlw	0
 11731  004AEC  6E1A               	movwf	pad@w^0,c
 11732  004AEE                     l1429:
 11733                           
 11734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 11735  004AEE  0E00               	movlw	0
 11736  004AF0  6E19               	movwf	(pad@i+1)^0,c
 11737  004AF2  0E00               	movlw	0
 11738  004AF4  6E18               	movwf	pad@i^0,c
 11739                           
 11740                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 11741  004AF6  EF89  F025         	goto	l4944
 11742  004AFA                     l4940:
 11743                           
 11744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 11745  004AFA  0E00               	movlw	0
 11746  004AFC  6E02               	movwf	(fputc@c+1)^0,c
 11747  004AFE  0E20               	movlw	32
 11748  004B00  6E01               	movwf	fputc@c^0,c
 11749  004B02  C011  F003         	movff	pad@fp,fputc@fp
 11750  004B06  C012  F004         	movff	pad@fp+1,fputc@fp+1
 11751  004B0A  ECEF  F024         	call	_fputc	;wreg free
 11752  004B0E                     
 11753                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 11754  004B0E  4A18               	infsnz	pad@i^0,f,c
 11755  004B10  2A19               	incf	(pad@i+1)^0,f,c
 11756  004B12                     l4944:
 11757                           
 11758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 11759  004B12  501A               	movf	pad@w^0,w,c
 11760  004B14  5C18               	subwf	pad@i^0,w,c
 11761  004B16  5019               	movf	(pad@i+1)^0,w,c
 11762  004B18  0A80               	xorlw	128
 11763  004B1A  6E17               	movwf	??_pad^0,c
 11764  004B1C  501B               	movf	(pad@w+1)^0,w,c
 11765  004B1E  0A80               	xorlw	128
 11766  004B20  5817               	subwfb	??_pad^0,w,c
 11767  004B22  A0D8               	btfss	status,0,c
 11768  004B24  EF96  F025         	goto	u5301
 11769  004B28  EF98  F025         	goto	u5300
 11770  004B2C                     u5301:
 11771  004B2C  EF7D  F025         	goto	l4940
 11772  004B30                     u5300:
 11773  004B30                     
 11774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 11775  004B30  0100               	movlb	0	; () banked
 11776  004B32  B1F8               	btfsc	_flags& (0+255),0,b
 11777  004B34  EF9E  F025         	goto	u5311
 11778  004B38  EFA0  F025         	goto	u5310
 11779  004B3C                     u5311:
 11780  004B3C  EFAA  F025         	goto	l4948
 11781  004B40                     u5310:
 11782  004B40                     
 11783                           ; BSR set to: 0
 11784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 11785  004B40  C013  F00A         	movff	pad@buf,fputs@s
 11786  004B44  C014  F00B         	movff	pad@buf+1,fputs@s+1
 11787  004B48  C011  F00C         	movff	pad@fp,fputs@fp
 11788  004B4C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 11789  004B50  ECF7  F02A         	call	_fputs	;wreg free
 11790  004B54                     l4948:
 11791                           
 11792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 11793  004B54  C013  F001         	movff	pad@buf,strlen@s
 11794  004B58  C014  F002         	movff	pad@buf+1,strlen@s+1
 11795  004B5C  EC61  F02C         	call	_strlen	;wreg free
 11796  004B60  501A               	movf	pad@w^0,w,c
 11797  004B62  2401               	addwf	?_strlen^0,w,c
 11798  004B64  6E11               	movwf	?_pad^0,c
 11799  004B66  501B               	movf	(pad@w+1)^0,w,c
 11800  004B68  2002               	addwfc	(?_strlen+1)^0,w,c
 11801  004B6A  6E12               	movwf	(?_pad+1)^0,c
 11802  004B6C  0012               	return		;funcret
 11803  004B6E                     __end_of_pad:
 11804                           	callstack 0
 11805                           
 11806 ;; *************** function _strlen *****************
 11807 ;; Defined at:
 11808 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  s               2    0[COMRAM] PTR const unsigned char 
 11811 ;;		 -> dbuf(80), 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;  a               2    2[COMRAM] PTR const unsigned char 
 11814 ;;		 -> dbuf(80), 
 11815 ;; Return value:  Size  Location     Type
 11816 ;;                  2    0[COMRAM] unsigned int 
 11817 ;; Registers used:
 11818 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11819 ;; Tracked objects:
 11820 ;;		On entry : 0/0
 11821 ;;		On exit  : 0/0
 11822 ;;		Unchanged: 0/0
 11823 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11824 ;;      Params:         2       0       0       0       0       0       0
 11825 ;;      Locals:         2       0       0       0       0       0       0
 11826 ;;      Temps:          0       0       0       0       0       0       0
 11827 ;;      Totals:         4       0       0       0       0       0       0
 11828 ;;Total ram usage:        4 bytes
 11829 ;; Hardware stack levels used:    1
 11830 ;; Hardware stack levels required when called:    1
 11831 ;; This function calls:
 11832 ;;		Nothing
 11833 ;; This function is called by:
 11834 ;;		_pad
 11835 ;; This function uses a non-reentrant model
 11836 ;;
 11837                           
 11838                           	psect	text41
 11839  0058C2                     __ptext41:
 11840                           	callstack 0
 11841  0058C2                     _strlen:
 11842                           	callstack 21
 11843  0058C2  C001  F003         	movff	strlen@s,strlen@a
 11844  0058C6  C002  F004         	movff	strlen@s+1,strlen@a+1
 11845  0058CA  EF69  F02C         	goto	l4390
 11846  0058CE                     l4388:
 11847  0058CE  4A01               	infsnz	strlen@s^0,f,c
 11848  0058D0  2A02               	incf	(strlen@s+1)^0,f,c
 11849  0058D2                     l4390:
 11850  0058D2  C001  FFD9         	movff	strlen@s,fsr2l
 11851  0058D6  C002  FFDA         	movff	strlen@s+1,fsr2h
 11852  0058DA  50DF               	movf	indf2,w,c
 11853  0058DC  A4D8               	btfss	status,2,c
 11854  0058DE  EF73  F02C         	goto	u4421
 11855  0058E2  EF75  F02C         	goto	u4420
 11856  0058E6                     u4421:
 11857  0058E6  EF67  F02C         	goto	l4388
 11858  0058EA                     u4420:
 11859  0058EA  5003               	movf	strlen@a^0,w,c
 11860  0058EC  5C01               	subwf	strlen@s^0,w,c
 11861  0058EE  6E01               	movwf	?_strlen^0,c
 11862  0058F0  5004               	movf	(strlen@a+1)^0,w,c
 11863  0058F2  5802               	subwfb	(strlen@s+1)^0,w,c
 11864  0058F4  6E02               	movwf	(?_strlen+1)^0,c
 11865  0058F6  0012               	return		;funcret
 11866  0058F8                     __end_of_strlen:
 11867                           	callstack 0
 11868                           
 11869 ;; *************** function _fputs *****************
 11870 ;; Defined at:
 11871 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 11872 ;; Parameters:    Size  Location     Type
 11873 ;;  s               2    9[COMRAM] PTR const unsigned char 
 11874 ;;		 -> dbuf(80), 
 11875 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 11876 ;;		 -> sprintf@f(6), 
 11877 ;; Auto vars:     Size  Location     Type
 11878 ;;  i               2   14[COMRAM] int 
 11879 ;;  c               1   13[COMRAM] unsigned char 
 11880 ;; Return value:  Size  Location     Type
 11881 ;;                  2    9[COMRAM] int 
 11882 ;; Registers used:
 11883 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11884 ;; Tracked objects:
 11885 ;;		On entry : 0/0
 11886 ;;		On exit  : 0/0
 11887 ;;		Unchanged: 0/0
 11888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11889 ;;      Params:         4       0       0       0       0       0       0
 11890 ;;      Locals:         3       0       0       0       0       0       0
 11891 ;;      Temps:          0       0       0       0       0       0       0
 11892 ;;      Totals:         7       0       0       0       0       0       0
 11893 ;;Total ram usage:        7 bytes
 11894 ;; Hardware stack levels used:    1
 11895 ;; Hardware stack levels required when called:    3
 11896 ;; This function calls:
 11897 ;;		_fputc
 11898 ;; This function is called by:
 11899 ;;		_pad
 11900 ;; This function uses a non-reentrant model
 11901 ;;
 11902                           
 11903                           	psect	text42
 11904  0055EE                     __ptext42:
 11905                           	callstack 0
 11906  0055EE                     _fputs:
 11907                           	callstack 19
 11908  0055EE  0E00               	movlw	0
 11909  0055F0  6E10               	movwf	(fputs@i+1)^0,c
 11910  0055F2  0E00               	movlw	0
 11911  0055F4  6E0F               	movwf	fputs@i^0,c
 11912  0055F6  EF08  F02B         	goto	l4384
 11913  0055FA                     l4380:
 11914  0055FA  C00E  F001         	movff	fputs@c,fputc@c
 11915  0055FE  6A02               	clrf	(fputc@c+1)^0,c
 11916  005600  C00C  F003         	movff	fputs@fp,fputc@fp
 11917  005604  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 11918  005608  ECEF  F024         	call	_fputc	;wreg free
 11919  00560C  4A0F               	infsnz	fputs@i^0,f,c
 11920  00560E  2A10               	incf	(fputs@i+1)^0,f,c
 11921  005610                     l4384:
 11922  005610  500F               	movf	fputs@i^0,w,c
 11923  005612  240A               	addwf	fputs@s^0,w,c
 11924  005614  6ED9               	movwf	fsr2l,c
 11925  005616  5010               	movf	(fputs@i+1)^0,w,c
 11926  005618  200B               	addwfc	(fputs@s+1)^0,w,c
 11927  00561A  6EDA               	movwf	fsr2h,c
 11928  00561C  50DF               	movf	indf2,w,c
 11929  00561E  6E0E               	movwf	fputs@c^0,c
 11930  005620  500E               	movf	fputs@c^0,w,c
 11931  005622  A4D8               	btfss	status,2,c
 11932  005624  EF16  F02B         	goto	u4411
 11933  005628  EF18  F02B         	goto	u4410
 11934  00562C                     u4411:
 11935  00562C  EFFD  F02A         	goto	l4380
 11936  005630                     u4410:
 11937  005630  0012               	return		;funcret
 11938  005632                     __end_of_fputs:
 11939                           	callstack 0
 11940                           
 11941 ;; *************** function _fputc *****************
 11942 ;; Defined at:
 11943 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 11944 ;; Parameters:    Size  Location     Type
 11945 ;;  c               2    0[COMRAM] int 
 11946 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 11947 ;;		 -> sprintf@f(6), 
 11948 ;; Auto vars:     Size  Location     Type
 11949 ;;		None
 11950 ;; Return value:  Size  Location     Type
 11951 ;;                  2    0[COMRAM] int 
 11952 ;; Registers used:
 11953 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11954 ;; Tracked objects:
 11955 ;;		On entry : 0/0
 11956 ;;		On exit  : 0/0
 11957 ;;		Unchanged: 0/0
 11958 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11959 ;;      Params:         4       0       0       0       0       0       0
 11960 ;;      Locals:         0       0       0       0       0       0       0
 11961 ;;      Temps:          5       0       0       0       0       0       0
 11962 ;;      Totals:         9       0       0       0       0       0       0
 11963 ;;Total ram usage:        9 bytes
 11964 ;; Hardware stack levels used:    1
 11965 ;; Hardware stack levels required when called:    2
 11966 ;; This function calls:
 11967 ;;		_putch
 11968 ;; This function is called by:
 11969 ;;		_pad
 11970 ;;		_vfpfcnvrt
 11971 ;;		_fputs
 11972 ;; This function uses a non-reentrant model
 11973 ;;
 11974                           
 11975                           	psect	text43
 11976  0049DE                     __ptext43:
 11977                           	callstack 0
 11978  0049DE                     _fputc:
 11979                           	callstack 22
 11980  0049DE  5003               	movf	fputc@fp^0,w,c
 11981  0049E0  1004               	iorwf	(fputc@fp+1)^0,w,c
 11982  0049E2  B4D8               	btfsc	status,2,c
 11983  0049E4  EFF6  F024         	goto	u3981
 11984  0049E8  EFF8  F024         	goto	u3980
 11985  0049EC                     u3981:
 11986  0049EC  EF01  F025         	goto	l4166
 11987  0049F0                     u3980:
 11988  0049F0  5003               	movf	fputc@fp^0,w,c
 11989  0049F2  1004               	iorwf	(fputc@fp+1)^0,w,c
 11990  0049F4  A4D8               	btfss	status,2,c
 11991  0049F6  EFFF  F024         	goto	u3991
 11992  0049FA  EF01  F025         	goto	u3990
 11993  0049FE                     u3991:
 11994  0049FE  EF06  F025         	goto	l4168
 11995  004A02                     u3990:
 11996  004A02                     l4166:
 11997  004A02  5001               	movf	fputc@c^0,w,c
 11998  004A04  EC39  F02D         	call	_putch
 11999  004A08  EF53  F025         	goto	l1689
 12000  004A0C                     l4168:
 12001  004A0C  EE20 F004          	lfsr	2,4
 12002  004A10  5003               	movf	fputc@fp^0,w,c
 12003  004A12  26D9               	addwf	fsr2l,f,c
 12004  004A14  5004               	movf	(fputc@fp+1)^0,w,c
 12005  004A16  22DA               	addwfc	fsr2h,f,c
 12006  004A18  50DE               	movf	postinc2,w,c
 12007  004A1A  10DE               	iorwf	postinc2,w,c
 12008  004A1C  B4D8               	btfsc	status,2,c
 12009  004A1E  EF13  F025         	goto	u4001
 12010  004A22  EF15  F025         	goto	u4000
 12011  004A26                     u4001:
 12012  004A26  EF30  F025         	goto	l4172
 12013  004A2A                     u4000:
 12014  004A2A  EE20 F004          	lfsr	2,4
 12015  004A2E  5003               	movf	fputc@fp^0,w,c
 12016  004A30  26D9               	addwf	fsr2l,f,c
 12017  004A32  5004               	movf	(fputc@fp+1)^0,w,c
 12018  004A34  22DA               	addwfc	fsr2h,f,c
 12019  004A36  EE10 F002          	lfsr	1,2
 12020  004A3A  5003               	movf	fputc@fp^0,w,c
 12021  004A3C  26E1               	addwf	fsr1l,f,c
 12022  004A3E  5004               	movf	(fputc@fp+1)^0,w,c
 12023  004A40  22E2               	addwfc	fsr1h,f,c
 12024  004A42  50DE               	movf	postinc2,w,c
 12025  004A44  5CE6               	subwf	postinc1,w,c
 12026  004A46  50E6               	movf	postinc1,w,c
 12027  004A48  0A80               	xorlw	128
 12028  004A4A  6E09               	movwf	(??_fputc+4)^0,c
 12029  004A4C  50DE               	movf	postinc2,w,c
 12030  004A4E  0A80               	xorlw	128
 12031  004A50  5809               	subwfb	(??_fputc+4)^0,w,c
 12032  004A52  B0D8               	btfsc	status,0,c
 12033  004A54  EF2E  F025         	goto	u4011
 12034  004A58  EF30  F025         	goto	u4010
 12035  004A5C                     u4011:
 12036  004A5C  EF53  F025         	goto	l1689
 12037  004A60                     u4010:
 12038  004A60                     l4172:
 12039  004A60  EE20 F002          	lfsr	2,2
 12040  004A64  5003               	movf	fputc@fp^0,w,c
 12041  004A66  26D9               	addwf	fsr2l,f,c
 12042  004A68  5004               	movf	(fputc@fp+1)^0,w,c
 12043  004A6A  22DA               	addwfc	fsr2h,f,c
 12044  004A6C  CFDE F005          	movff	postinc2,??_fputc
 12045  004A70  CFDD F006          	movff	postdec2,??_fputc+1
 12046  004A74  C003  FFD9         	movff	fputc@fp,fsr2l
 12047  004A78  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12048  004A7C  CFDE F007          	movff	postinc2,??_fputc+2
 12049  004A80  CFDD F008          	movff	postdec2,??_fputc+3
 12050  004A84  5005               	movf	??_fputc^0,w,c
 12051  004A86  2407               	addwf	(??_fputc+2)^0,w,c
 12052  004A88  6ED9               	movwf	fsr2l,c
 12053  004A8A  5006               	movf	(??_fputc+1)^0,w,c
 12054  004A8C  2008               	addwfc	(??_fputc+3)^0,w,c
 12055  004A8E  6EDA               	movwf	fsr2h,c
 12056  004A90  C001  FFDF         	movff	fputc@c,indf2
 12057  004A94  EE20 F002          	lfsr	2,2
 12058  004A98  5003               	movf	fputc@fp^0,w,c
 12059  004A9A  26D9               	addwf	fsr2l,f,c
 12060  004A9C  5004               	movf	(fputc@fp+1)^0,w,c
 12061  004A9E  22DA               	addwfc	fsr2h,f,c
 12062  004AA0  2ADE               	incf	postinc2,f,c
 12063  004AA2  0E00               	movlw	0
 12064  004AA4  22DD               	addwfc	postdec2,f,c
 12065  004AA6                     l1689:
 12066  004AA6  0012               	return		;funcret
 12067  004AA8                     __end_of_fputc:
 12068                           	callstack 0
 12069                           
 12070 ;; *************** function _putch *****************
 12071 ;; Defined at:
 12072 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 12073 ;; Parameters:    Size  Location     Type
 12074 ;;  c               1    wreg     unsigned char 
 12075 ;; Auto vars:     Size  Location     Type
 12076 ;;  c               1    0[COMRAM] unsigned char 
 12077 ;; Return value:  Size  Location     Type
 12078 ;;                  1    wreg      void 
 12079 ;; Registers used:
 12080 ;;		wreg
 12081 ;; Tracked objects:
 12082 ;;		On entry : 0/0
 12083 ;;		On exit  : 0/0
 12084 ;;		Unchanged: 0/0
 12085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12086 ;;      Params:         0       0       0       0       0       0       0
 12087 ;;      Locals:         0       0       0       0       0       0       0
 12088 ;;      Temps:          0       0       0       0       0       0       0
 12089 ;;      Totals:         0       0       0       0       0       0       0
 12090 ;;Total ram usage:        0 bytes
 12091 ;; Hardware stack levels used:    1
 12092 ;; Hardware stack levels required when called:    1
 12093 ;; This function calls:
 12094 ;;		Nothing
 12095 ;; This function is called by:
 12096 ;;		_fputc
 12097 ;; This function uses a non-reentrant model
 12098 ;;
 12099                           
 12100                           	psect	text44
 12101  005A72                     __ptext44:
 12102                           	callstack 0
 12103  005A72                     _putch:
 12104                           	callstack 22
 12105  005A72  0012               	return		;funcret
 12106  005A74                     __end_of_putch:
 12107                           	callstack 0
 12108                           
 12109 ;; *************** function _abs *****************
 12110 ;; Defined at:
 12111 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 12112 ;; Parameters:    Size  Location     Type
 12113 ;;  a               2   18[COMRAM] int 
 12114 ;; Auto vars:     Size  Location     Type
 12115 ;;		None
 12116 ;; Return value:  Size  Location     Type
 12117 ;;                  2   18[COMRAM] int 
 12118 ;; Registers used:
 12119 ;;		wreg, status,2, status,0
 12120 ;; Tracked objects:
 12121 ;;		On entry : 0/0
 12122 ;;		On exit  : 0/0
 12123 ;;		Unchanged: 0/0
 12124 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12125 ;;      Params:         2       0       0       0       0       0       0
 12126 ;;      Locals:         0       0       0       0       0       0       0
 12127 ;;      Temps:          2       0       0       0       0       0       0
 12128 ;;      Totals:         4       0       0       0       0       0       0
 12129 ;;Total ram usage:        4 bytes
 12130 ;; Hardware stack levels used:    1
 12131 ;; Hardware stack levels required when called:    1
 12132 ;; This function calls:
 12133 ;;		Nothing
 12134 ;; This function is called by:
 12135 ;;		_dtoa
 12136 ;; This function uses a non-reentrant model
 12137 ;;
 12138                           
 12139                           	psect	text45
 12140  0056B4                     __ptext45:
 12141                           	callstack 0
 12142  0056B4                     _abs:
 12143                           	callstack 22
 12144  0056B4  BE14               	btfsc	(abs@a+1)^0,7,c
 12145  0056B6  EF67  F02B         	goto	u5320
 12146  0056BA  5014               	movf	(abs@a+1)^0,w,c
 12147  0056BC  E106               	bnz	u5321
 12148  0056BE  0413               	decf	abs@a^0,w,c
 12149  0056C0  B0D8               	btfsc	status,0,c
 12150  0056C2  EF65  F02B         	goto	u5321
 12151  0056C6  EF67  F02B         	goto	u5320
 12152  0056CA                     u5321:
 12153  0056CA  EF75  F02B         	goto	l1610
 12154  0056CE                     u5320:
 12155  0056CE  C013  F015         	movff	abs@a,??_abs
 12156  0056D2  C014  F016         	movff	abs@a+1,??_abs+1
 12157  0056D6  1E15               	comf	??_abs^0,f,c
 12158  0056D8  1E16               	comf	(??_abs+1)^0,f,c
 12159  0056DA  4A15               	infsnz	??_abs^0,f,c
 12160  0056DC  2A16               	incf	(??_abs+1)^0,f,c
 12161  0056DE  C015  F013         	movff	??_abs,?_abs
 12162  0056E2  C016  F014         	movff	??_abs+1,?_abs+1
 12163  0056E6  EF79  F02B         	goto	l1613
 12164  0056EA                     l1610:
 12165  0056EA  C013  F013         	movff	abs@a,?_abs
 12166  0056EE  C014  F014         	movff	abs@a+1,?_abs+1
 12167  0056F2                     l1613:
 12168  0056F2  0012               	return		;funcret
 12169  0056F4                     __end_of_abs:
 12170                           	callstack 0
 12171                           
 12172 ;; *************** function ___aomod *****************
 12173 ;; Defined at:
 12174 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  dividend        8    0[COMRAM] long long 
 12177 ;;  divisor         8    8[COMRAM] long long 
 12178 ;; Auto vars:     Size  Location     Type
 12179 ;;  sign            1   17[COMRAM] unsigned char 
 12180 ;;  counter         1   16[COMRAM] unsigned char 
 12181 ;; Return value:  Size  Location     Type
 12182 ;;                  8    0[COMRAM] long long 
 12183 ;; Registers used:
 12184 ;;		wreg, status,2, status,0
 12185 ;; Tracked objects:
 12186 ;;		On entry : 0/0
 12187 ;;		On exit  : 0/0
 12188 ;;		Unchanged: 0/0
 12189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12190 ;;      Params:        16       0       0       0       0       0       0
 12191 ;;      Locals:         2       0       0       0       0       0       0
 12192 ;;      Temps:          0       0       0       0       0       0       0
 12193 ;;      Totals:        18       0       0       0       0       0       0
 12194 ;;Total ram usage:       18 bytes
 12195 ;; Hardware stack levels used:    1
 12196 ;; Hardware stack levels required when called:    1
 12197 ;; This function calls:
 12198 ;;		Nothing
 12199 ;; This function is called by:
 12200 ;;		_dtoa
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text46
 12205  003F98                     __ptext46:
 12206                           	callstack 0
 12207  003F98                     ___aomod:
 12208                           	callstack 22
 12209  003F98  0E00               	movlw	0
 12210  003F9A  6E12               	movwf	___aomod@sign^0,c
 12211  003F9C  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 12212  003F9E  EFD5  F01F         	goto	u4520
 12213  003FA2  EFD3  F01F         	goto	u4521
 12214  003FA6                     u4521:
 12215  003FA6  EFE7  F01F         	goto	l4458
 12216  003FAA                     u4520:
 12217  003FAA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12218  003FAC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12219  003FAE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12220  003FB0  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12221  003FB2  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12222  003FB4  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12223  003FB6  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12224  003FB8  6C01               	negf	___aomod@dividend^0,c
 12225  003FBA  0E00               	movlw	0
 12226  003FBC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12227  003FBE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12228  003FC0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12229  003FC2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12230  003FC4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12231  003FC6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12232  003FC8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12233  003FCA  0E01               	movlw	1
 12234  003FCC  6E12               	movwf	___aomod@sign^0,c
 12235  003FCE                     l4458:
 12236  003FCE  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 12237  003FD0  EFEE  F01F         	goto	u4530
 12238  003FD4  EFEC  F01F         	goto	u4531
 12239  003FD8                     u4531:
 12240  003FD8  EFFE  F01F         	goto	l4462
 12241  003FDC                     u4530:
 12242  003FDC  1E10               	comf	(___aomod@divisor+7)^0,f,c
 12243  003FDE  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 12244  003FE0  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 12245  003FE2  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 12246  003FE4  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 12247  003FE6  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 12248  003FE8  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 12249  003FEA  6C09               	negf	___aomod@divisor^0,c
 12250  003FEC  0E00               	movlw	0
 12251  003FEE  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 12252  003FF0  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 12253  003FF2  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 12254  003FF4  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 12255  003FF6  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 12256  003FF8  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 12257  003FFA  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 12258  003FFC                     l4462:
 12259  003FFC  5009               	movf	___aomod@divisor^0,w,c
 12260  003FFE  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 12261  004000  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 12262  004002  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 12263  004004  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 12264  004006  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 12265  004008  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 12266  00400A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 12267  00400C  B4D8               	btfsc	status,2,c
 12268  00400E  EF0B  F020         	goto	u4541
 12269  004012  EF0D  F020         	goto	u4540
 12270  004016                     u4541:
 12271  004016  EF55  F020         	goto	l4478
 12272  00401A                     u4540:
 12273  00401A  0E01               	movlw	1
 12274  00401C  6E11               	movwf	___aomod@counter^0,c
 12275  00401E  EF1B  F020         	goto	l4468
 12276  004022                     l4466:
 12277  004022  90D8               	bcf	status,0,c
 12278  004024  3609               	rlcf	___aomod@divisor^0,f,c
 12279  004026  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 12280  004028  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 12281  00402A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 12282  00402C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 12283  00402E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 12284  004030  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 12285  004032  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 12286  004034  2A11               	incf	___aomod@counter^0,f,c
 12287  004036                     l4468:
 12288  004036  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 12289  004038  EF20  F020         	goto	u4551
 12290  00403C  EF22  F020         	goto	u4550
 12291  004040                     u4551:
 12292  004040  EF11  F020         	goto	l4466
 12293  004044                     u4550:
 12294  004044                     l4470:
 12295  004044  5009               	movf	___aomod@divisor^0,w,c
 12296  004046  5C01               	subwf	___aomod@dividend^0,w,c
 12297  004048  500A               	movf	(___aomod@divisor+1)^0,w,c
 12298  00404A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 12299  00404C  500B               	movf	(___aomod@divisor+2)^0,w,c
 12300  00404E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 12301  004050  500C               	movf	(___aomod@divisor+3)^0,w,c
 12302  004052  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 12303  004054  500D               	movf	(___aomod@divisor+4)^0,w,c
 12304  004056  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 12305  004058  500E               	movf	(___aomod@divisor+5)^0,w,c
 12306  00405A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 12307  00405C  500F               	movf	(___aomod@divisor+6)^0,w,c
 12308  00405E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 12309  004060  5010               	movf	(___aomod@divisor+7)^0,w,c
 12310  004062  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 12311  004064  A0D8               	btfss	status,0,c
 12312  004066  EF37  F020         	goto	u4561
 12313  00406A  EF39  F020         	goto	u4560
 12314  00406E                     u4561:
 12315  00406E  EF49  F020         	goto	l4474
 12316  004072                     u4560:
 12317  004072  5009               	movf	___aomod@divisor^0,w,c
 12318  004074  5E01               	subwf	___aomod@dividend^0,f,c
 12319  004076  500A               	movf	(___aomod@divisor+1)^0,w,c
 12320  004078  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 12321  00407A  500B               	movf	(___aomod@divisor+2)^0,w,c
 12322  00407C  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 12323  00407E  500C               	movf	(___aomod@divisor+3)^0,w,c
 12324  004080  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 12325  004082  500D               	movf	(___aomod@divisor+4)^0,w,c
 12326  004084  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 12327  004086  500E               	movf	(___aomod@divisor+5)^0,w,c
 12328  004088  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 12329  00408A  500F               	movf	(___aomod@divisor+6)^0,w,c
 12330  00408C  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 12331  00408E  5010               	movf	(___aomod@divisor+7)^0,w,c
 12332  004090  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 12333  004092                     l4474:
 12334  004092  90D8               	bcf	status,0,c
 12335  004094  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 12336  004096  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 12337  004098  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 12338  00409A  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 12339  00409C  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 12340  00409E  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 12341  0040A0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 12342  0040A2  3209               	rrcf	___aomod@divisor^0,f,c
 12343  0040A4  2E11               	decfsz	___aomod@counter^0,f,c
 12344  0040A6  EF22  F020         	goto	l4470
 12345  0040AA                     l4478:
 12346  0040AA  5012               	movf	___aomod@sign^0,w,c
 12347  0040AC  B4D8               	btfsc	status,2,c
 12348  0040AE  EF5B  F020         	goto	u4571
 12349  0040B2  EF5D  F020         	goto	u4570
 12350  0040B6                     u4571:
 12351  0040B6  EF6D  F020         	goto	l4482
 12352  0040BA                     u4570:
 12353  0040BA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12354  0040BC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12355  0040BE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12356  0040C0  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12357  0040C2  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12358  0040C4  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12359  0040C6  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12360  0040C8  6C01               	negf	___aomod@dividend^0,c
 12361  0040CA  0E00               	movlw	0
 12362  0040CC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12363  0040CE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12364  0040D0  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12365  0040D2  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12366  0040D4  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12367  0040D6  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12368  0040D8  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12369  0040DA                     l4482:
 12370  0040DA  C001  F001         	movff	___aomod@dividend,?___aomod
 12371  0040DE  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 12372  0040E2  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 12373  0040E6  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 12374  0040EA  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 12375  0040EE  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 12376  0040F2  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 12377  0040F6  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 12378  0040FA  0012               	return		;funcret
 12379  0040FC                     __end_of___aomod:
 12380                           	callstack 0
 12381                           
 12382 ;; *************** function ___aodiv *****************
 12383 ;; Defined at:
 12384 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 12385 ;; Parameters:    Size  Location     Type
 12386 ;;  dividend        8    0[COMRAM] long long 
 12387 ;;  divisor         8    8[COMRAM] long long 
 12388 ;; Auto vars:     Size  Location     Type
 12389 ;;  quotient        8   18[COMRAM] long long 
 12390 ;;  sign            1   17[COMRAM] unsigned char 
 12391 ;;  counter         1   16[COMRAM] unsigned char 
 12392 ;; Return value:  Size  Location     Type
 12393 ;;                  8    0[COMRAM] long long 
 12394 ;; Registers used:
 12395 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12396 ;; Tracked objects:
 12397 ;;		On entry : 0/0
 12398 ;;		On exit  : 0/0
 12399 ;;		Unchanged: 0/0
 12400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12401 ;;      Params:        16       0       0       0       0       0       0
 12402 ;;      Locals:        10       0       0       0       0       0       0
 12403 ;;      Temps:          0       0       0       0       0       0       0
 12404 ;;      Totals:        26       0       0       0       0       0       0
 12405 ;;Total ram usage:       26 bytes
 12406 ;; Hardware stack levels used:    1
 12407 ;; Hardware stack levels required when called:    1
 12408 ;; This function calls:
 12409 ;;		Nothing
 12410 ;; This function is called by:
 12411 ;;		_dtoa
 12412 ;; This function uses a non-reentrant model
 12413 ;;
 12414                           
 12415                           	psect	text47
 12416  003E10                     __ptext47:
 12417                           	callstack 0
 12418  003E10                     ___aodiv:
 12419                           	callstack 22
 12420  003E10  0E00               	movlw	0
 12421  003E12  6E12               	movwf	___aodiv@sign^0,c
 12422  003E14  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 12423  003E16  EF11  F01F         	goto	u4450
 12424  003E1A  EF0F  F01F         	goto	u4451
 12425  003E1E                     u4451:
 12426  003E1E  EF23  F01F         	goto	l4414
 12427  003E22                     u4450:
 12428  003E22  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 12429  003E24  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 12430  003E26  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 12431  003E28  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 12432  003E2A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 12433  003E2C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 12434  003E2E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 12435  003E30  6C09               	negf	___aodiv@divisor^0,c
 12436  003E32  0E00               	movlw	0
 12437  003E34  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 12438  003E36  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 12439  003E38  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 12440  003E3A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 12441  003E3C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 12442  003E3E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 12443  003E40  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 12444  003E42  0E01               	movlw	1
 12445  003E44  6E12               	movwf	___aodiv@sign^0,c
 12446  003E46                     l4414:
 12447  003E46  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 12448  003E48  EF2A  F01F         	goto	u4460
 12449  003E4C  EF28  F01F         	goto	u4461
 12450  003E50                     u4461:
 12451  003E50  EF3C  F01F         	goto	l4420
 12452  003E54                     u4460:
 12453  003E54  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 12454  003E56  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 12455  003E58  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 12456  003E5A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 12457  003E5C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 12458  003E5E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 12459  003E60  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 12460  003E62  6C01               	negf	___aodiv@dividend^0,c
 12461  003E64  0E00               	movlw	0
 12462  003E66  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 12463  003E68  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 12464  003E6A  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 12465  003E6C  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 12466  003E6E  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 12467  003E70  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 12468  003E72  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 12469  003E74  0E01               	movlw	1
 12470  003E76  1A12               	xorwf	___aodiv@sign^0,f,c
 12471  003E78                     l4420:
 12472  003E78  EE20  F013         	lfsr	2,___aodiv@quotient
 12473  003E7C  0E07               	movlw	7
 12474  003E7E                     u4471:
 12475  003E7E  6ADE               	clrf	postinc2,c
 12476  003E80  06E8               	decf	wreg,f,c
 12477  003E82  E2FD               	bc	u4471
 12478  003E84  5009               	movf	___aodiv@divisor^0,w,c
 12479  003E86  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 12480  003E88  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 12481  003E8A  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 12482  003E8C  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 12483  003E8E  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 12484  003E90  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 12485  003E92  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 12486  003E94  B4D8               	btfsc	status,2,c
 12487  003E96  EF4F  F01F         	goto	u4481
 12488  003E9A  EF51  F01F         	goto	u4480
 12489  003E9E                     u4481:
 12490  003E9E  EFA3  F01F         	goto	l4442
 12491  003EA2                     u4480:
 12492  003EA2  0E01               	movlw	1
 12493  003EA4  6E11               	movwf	___aodiv@counter^0,c
 12494  003EA6  EF5F  F01F         	goto	l4428
 12495  003EAA                     l4426:
 12496  003EAA  90D8               	bcf	status,0,c
 12497  003EAC  3609               	rlcf	___aodiv@divisor^0,f,c
 12498  003EAE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 12499  003EB0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 12500  003EB2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 12501  003EB4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 12502  003EB6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 12503  003EB8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 12504  003EBA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 12505  003EBC  2A11               	incf	___aodiv@counter^0,f,c
 12506  003EBE                     l4428:
 12507  003EBE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 12508  003EC0  EF64  F01F         	goto	u4491
 12509  003EC4  EF66  F01F         	goto	u4490
 12510  003EC8                     u4491:
 12511  003EC8  EF55  F01F         	goto	l4426
 12512  003ECC                     u4490:
 12513  003ECC                     l4430:
 12514  003ECC  90D8               	bcf	status,0,c
 12515  003ECE  3613               	rlcf	___aodiv@quotient^0,f,c
 12516  003ED0  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 12517  003ED2  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 12518  003ED4  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 12519  003ED6  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 12520  003ED8  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 12521  003EDA  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 12522  003EDC  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 12523  003EDE  5009               	movf	___aodiv@divisor^0,w,c
 12524  003EE0  5C01               	subwf	___aodiv@dividend^0,w,c
 12525  003EE2  500A               	movf	(___aodiv@divisor+1)^0,w,c
 12526  003EE4  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 12527  003EE6  500B               	movf	(___aodiv@divisor+2)^0,w,c
 12528  003EE8  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 12529  003EEA  500C               	movf	(___aodiv@divisor+3)^0,w,c
 12530  003EEC  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 12531  003EEE  500D               	movf	(___aodiv@divisor+4)^0,w,c
 12532  003EF0  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 12533  003EF2  500E               	movf	(___aodiv@divisor+5)^0,w,c
 12534  003EF4  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 12535  003EF6  500F               	movf	(___aodiv@divisor+6)^0,w,c
 12536  003EF8  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 12537  003EFA  5010               	movf	(___aodiv@divisor+7)^0,w,c
 12538  003EFC  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 12539  003EFE  A0D8               	btfss	status,0,c
 12540  003F00  EF84  F01F         	goto	u4501
 12541  003F04  EF86  F01F         	goto	u4500
 12542  003F08                     u4501:
 12543  003F08  EF97  F01F         	goto	l4438
 12544  003F0C                     u4500:
 12545  003F0C  5009               	movf	___aodiv@divisor^0,w,c
 12546  003F0E  5E01               	subwf	___aodiv@dividend^0,f,c
 12547  003F10  500A               	movf	(___aodiv@divisor+1)^0,w,c
 12548  003F12  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 12549  003F14  500B               	movf	(___aodiv@divisor+2)^0,w,c
 12550  003F16  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 12551  003F18  500C               	movf	(___aodiv@divisor+3)^0,w,c
 12552  003F1A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 12553  003F1C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 12554  003F1E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 12555  003F20  500E               	movf	(___aodiv@divisor+5)^0,w,c
 12556  003F22  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 12557  003F24  500F               	movf	(___aodiv@divisor+6)^0,w,c
 12558  003F26  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 12559  003F28  5010               	movf	(___aodiv@divisor+7)^0,w,c
 12560  003F2A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 12561  003F2C  8013               	bsf	___aodiv@quotient^0,0,c
 12562  003F2E                     l4438:
 12563  003F2E  90D8               	bcf	status,0,c
 12564  003F30  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 12565  003F32  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 12566  003F34  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 12567  003F36  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 12568  003F38  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 12569  003F3A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 12570  003F3C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 12571  003F3E  3209               	rrcf	___aodiv@divisor^0,f,c
 12572  003F40  2E11               	decfsz	___aodiv@counter^0,f,c
 12573  003F42  EF66  F01F         	goto	l4430
 12574  003F46                     l4442:
 12575  003F46  5012               	movf	___aodiv@sign^0,w,c
 12576  003F48  B4D8               	btfsc	status,2,c
 12577  003F4A  EFA9  F01F         	goto	u4511
 12578  003F4E  EFAB  F01F         	goto	u4510
 12579  003F52                     u4511:
 12580  003F52  EFBB  F01F         	goto	l4446
 12581  003F56                     u4510:
 12582  003F56  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 12583  003F58  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 12584  003F5A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 12585  003F5C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 12586  003F5E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 12587  003F60  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 12588  003F62  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 12589  003F64  6C13               	negf	___aodiv@quotient^0,c
 12590  003F66  0E00               	movlw	0
 12591  003F68  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 12592  003F6A  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 12593  003F6C  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 12594  003F6E  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 12595  003F70  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 12596  003F72  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 12597  003F74  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 12598  003F76                     l4446:
 12599  003F76  C013  F001         	movff	___aodiv@quotient,?___aodiv
 12600  003F7A  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 12601  003F7E  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 12602  003F82  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 12603  003F86  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 12604  003F8A  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 12605  003F8E  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 12606  003F92  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 12607  003F96  0012               	return		;funcret
 12608  003F98                     __end_of___aodiv:
 12609                           	callstack 0
 12610                           
 12611 ;; *************** function _atoi *****************
 12612 ;; Defined at:
 12613 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 12614 ;; Parameters:    Size  Location     Type
 12615 ;;  s               2    7[COMRAM] PTR const unsigned char 
 12616 ;;		 -> STR_13(18), STR_11(16), STR_9(18), STR_7(13), 
 12617 ;;		 -> STR_5(14), 
 12618 ;; Auto vars:     Size  Location     Type
 12619 ;;  n               2   20[COMRAM] int 
 12620 ;;  neg             2   13[COMRAM] int 
 12621 ;; Return value:  Size  Location     Type
 12622 ;;                  2    7[COMRAM] int 
 12623 ;; Registers used:
 12624 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 12625 ;; Tracked objects:
 12626 ;;		On entry : 0/0
 12627 ;;		On exit  : 0/0
 12628 ;;		Unchanged: 0/0
 12629 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12630 ;;      Params:         2       0       0       0       0       0       0
 12631 ;;      Locals:         9       0       0       0       0       0       0
 12632 ;;      Temps:          4       0       0       0       0       0       0
 12633 ;;      Totals:        15       0       0       0       0       0       0
 12634 ;;Total ram usage:       15 bytes
 12635 ;; Hardware stack levels used:    1
 12636 ;; Hardware stack levels required when called:    2
 12637 ;; This function calls:
 12638 ;;		___wmul
 12639 ;;		_isdigit
 12640 ;;		_isspace
 12641 ;; This function is called by:
 12642 ;;		_vfpfcnvrt
 12643 ;; This function uses a non-reentrant model
 12644 ;;
 12645                           
 12646                           	psect	text48
 12647  003C80                     __ptext48:
 12648                           	callstack 0
 12649  003C80                     _atoi:
 12650                           	callstack 22
 12651  003C80  0E00               	movlw	0
 12652  003C82  6E16               	movwf	(atoi@n+1)^0,c
 12653  003C84  0E00               	movlw	0
 12654  003C86  6E15               	movwf	atoi@n^0,c
 12655  003C88  0E00               	movlw	0
 12656  003C8A  6E0F               	movwf	(atoi@neg+1)^0,c
 12657  003C8C  0E00               	movlw	0
 12658  003C8E  6E0E               	movwf	atoi@neg^0,c
 12659  003C90  EF4C  F01E         	goto	l5400
 12660  003C94                     l5398:
 12661  003C94  4A08               	infsnz	atoi@s^0,f,c
 12662  003C96  2A09               	incf	(atoi@s+1)^0,f,c
 12663  003C98                     l5400:
 12664  003C98  0E01               	movlw	1
 12665  003C9A  6E14               	movwf	_atoi$3066^0,c
 12666  003C9C  C008  FFF6         	movff	atoi@s,tblptrl
 12667  003CA0  C009  FFF7         	movff	atoi@s+1,tblptrh
 12668  003CA4                     	if	0	;tblptru may be non-zero
 12669  003CA4                     	endif
 12670  003CA4                     	if	0	;tblptru may be non-zero
 12671  003CA4                     	endif
 12672  003CA4  0008               	tblrd		*
 12673  003CA6  50F5               	movf	tablat,w,c
 12674  003CA8  0A20               	xorlw	32
 12675  003CAA  B4D8               	btfsc	status,2,c
 12676  003CAC  EF5A  F01E         	goto	u6261
 12677  003CB0  EF5C  F01E         	goto	u6260
 12678  003CB4                     u6261:
 12679  003CB4  EF79  F01E         	goto	l5408
 12680  003CB8                     u6260:
 12681  003CB8  0EF7               	movlw	247
 12682  003CBA  6E0A               	movwf	??_atoi^0,c
 12683  003CBC  0EFF               	movlw	255
 12684  003CBE  6E0B               	movwf	(??_atoi+1)^0,c
 12685  003CC0  C008  FFF6         	movff	atoi@s,tblptrl
 12686  003CC4  C009  FFF7         	movff	atoi@s+1,tblptrh
 12687  003CC8                     	if	0	;tblptru may be non-zero
 12688  003CC8                     	endif
 12689  003CC8                     	if	0	;tblptru may be non-zero
 12690  003CC8                     	endif
 12691  003CC8  0008               	tblrd		*
 12692  003CCA  50F5               	movf	tablat,w,c
 12693  003CCC  6E0C               	movwf	(??_atoi+2)^0,c
 12694  003CCE  6A0D               	clrf	(??_atoi+3)^0,c
 12695  003CD0  500A               	movf	??_atoi^0,w,c
 12696  003CD2  260C               	addwf	(??_atoi+2)^0,f,c
 12697  003CD4  500B               	movf	(??_atoi+1)^0,w,c
 12698  003CD6  220D               	addwfc	(??_atoi+3)^0,f,c
 12699  003CD8  500D               	movf	(??_atoi+3)^0,w,c
 12700  003CDA  E109               	bnz	u6270
 12701  003CDC  0E05               	movlw	5
 12702  003CDE  5C0C               	subwf	(??_atoi+2)^0,w,c
 12703  003CE0  A0D8               	btfss	status,0,c
 12704  003CE2  EF75  F01E         	goto	u6271
 12705  003CE6  EF77  F01E         	goto	u6270
 12706  003CEA                     u6271:
 12707  003CEA  EF79  F01E         	goto	l5408
 12708  003CEE                     u6270:
 12709  003CEE  0E00               	movlw	0
 12710  003CF0  6E14               	movwf	_atoi$3066^0,c
 12711  003CF2                     l5408:
 12712  003CF2  C014  F010         	movff	_atoi$3066,_atoi$3065
 12713  003CF6  6A11               	clrf	(_atoi$3065+1)^0,c
 12714  003CF8  5010               	movf	_atoi$3065^0,w,c
 12715  003CFA  1011               	iorwf	(_atoi$3065+1)^0,w,c
 12716  003CFC  A4D8               	btfss	status,2,c
 12717  003CFE  EF83  F01E         	goto	u6281
 12718  003D02  EF85  F01E         	goto	u6280
 12719  003D06                     u6281:
 12720  003D06  EF4A  F01E         	goto	l5398
 12721  003D0A                     u6280:
 12722  003D0A  EF8F  F01E         	goto	l5418
 12723  003D0E                     l5414:
 12724  003D0E  0E00               	movlw	0
 12725  003D10  6E0F               	movwf	(atoi@neg+1)^0,c
 12726  003D12  0E01               	movlw	1
 12727  003D14  6E0E               	movwf	atoi@neg^0,c
 12728  003D16                     l5416:
 12729  003D16  4A08               	infsnz	atoi@s^0,f,c
 12730  003D18  2A09               	incf	(atoi@s+1)^0,f,c
 12731  003D1A  EFC4  F01E         	goto	l5424
 12732  003D1E                     l5418:
 12733  003D1E  C008  FFF6         	movff	atoi@s,tblptrl
 12734  003D22  C009  FFF7         	movff	atoi@s+1,tblptrh
 12735  003D26                     	if	0	;tblptru may be non-zero
 12736  003D26                     	endif
 12737  003D26                     	if	0	;tblptru may be non-zero
 12738  003D26                     	endif
 12739  003D26  0008               	tblrd		*
 12740  003D28  50F5               	movf	tablat,w,c
 12741  003D2A  6E0A               	movwf	??_atoi^0,c
 12742  003D2C  6A0B               	clrf	(??_atoi+1)^0,c
 12743                           
 12744                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 12745                           ; Switch size 1, requested type "simple"
 12746                           ; Number of cases is 1, Range of values is 0 to 0
 12747                           ; switch strategies available:
 12748                           ; Name         Instructions Cycles
 12749                           ; simple_byte            4     3 (average)
 12750                           ;	Chosen strategy is simple_byte
 12751  003D2E  500B               	movf	(??_atoi+1)^0,w,c
 12752  003D30  0A00               	xorlw	0	; case 0
 12753  003D32  B4D8               	btfsc	status,2,c
 12754  003D34  EF9E  F01E         	goto	l6580
 12755  003D38  EFC4  F01E         	goto	l5424
 12756  003D3C                     l6580:
 12757                           
 12758                           ; Switch size 1, requested type "simple"
 12759                           ; Number of cases is 2, Range of values is 43 to 45
 12760                           ; switch strategies available:
 12761                           ; Name         Instructions Cycles
 12762                           ; simple_byte            7     4 (average)
 12763                           ;	Chosen strategy is simple_byte
 12764  003D3C  500A               	movf	??_atoi^0,w,c
 12765  003D3E  0A2B               	xorlw	43	; case 43
 12766  003D40  B4D8               	btfsc	status,2,c
 12767  003D42  EF8B  F01E         	goto	l5416
 12768  003D46  0A06               	xorlw	6	; case 45
 12769  003D48  B4D8               	btfsc	status,2,c
 12770  003D4A  EF87  F01E         	goto	l5414
 12771  003D4E  EFC4  F01E         	goto	l5424
 12772  003D52                     l5420:
 12773  003D52  C015  F001         	movff	atoi@n,___wmul@multiplier
 12774  003D56  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 12775  003D5A  0E00               	movlw	0
 12776  003D5C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 12777  003D5E  0E0A               	movlw	10
 12778  003D60  6E03               	movwf	___wmul@multiplicand^0,c
 12779  003D62  ECD5  F02C         	call	___wmul	;wreg free
 12780  003D66  C008  FFF6         	movff	atoi@s,tblptrl
 12781  003D6A  C009  FFF7         	movff	atoi@s+1,tblptrh
 12782  003D6E                     	if	0	;tblptru may be non-zero
 12783  003D6E                     	endif
 12784  003D6E                     	if	0	;tblptru may be non-zero
 12785  003D6E                     	endif
 12786  003D6E  0008               	tblrd		*
 12787  003D70  50F5               	movf	tablat,w,c
 12788  003D72  5E01               	subwf	?___wmul^0,f,c
 12789  003D74  0E00               	movlw	0
 12790  003D76  5A02               	subwfb	(?___wmul+1)^0,f,c
 12791  003D78  0E30               	movlw	48
 12792  003D7A  2401               	addwf	?___wmul^0,w,c
 12793  003D7C  6E15               	movwf	atoi@n^0,c
 12794  003D7E  0E00               	movlw	0
 12795  003D80  2002               	addwfc	(?___wmul+1)^0,w,c
 12796  003D82  6E16               	movwf	(atoi@n+1)^0,c
 12797  003D84  EF8B  F01E         	goto	l5416
 12798  003D88                     l5424:
 12799  003D88  0ED0               	movlw	208
 12800  003D8A  6E0A               	movwf	??_atoi^0,c
 12801  003D8C  0EFF               	movlw	255
 12802  003D8E  6E0B               	movwf	(??_atoi+1)^0,c
 12803  003D90  C008  FFF6         	movff	atoi@s,tblptrl
 12804  003D94  C009  FFF7         	movff	atoi@s+1,tblptrh
 12805  003D98                     	if	0	;tblptru may be non-zero
 12806  003D98                     	endif
 12807  003D98                     	if	0	;tblptru may be non-zero
 12808  003D98                     	endif
 12809  003D98  0008               	tblrd		*
 12810  003D9A  50F5               	movf	tablat,w,c
 12811  003D9C  6E0C               	movwf	(??_atoi+2)^0,c
 12812  003D9E  6A0D               	clrf	(??_atoi+3)^0,c
 12813  003DA0  500A               	movf	??_atoi^0,w,c
 12814  003DA2  260C               	addwf	(??_atoi+2)^0,f,c
 12815  003DA4  500B               	movf	(??_atoi+1)^0,w,c
 12816  003DA6  220D               	addwfc	(??_atoi+3)^0,f,c
 12817  003DA8  500D               	movf	(??_atoi+3)^0,w,c
 12818  003DAA  E10A               	bnz	u6290
 12819  003DAC  0E0A               	movlw	10
 12820  003DAE  5C0C               	subwf	(??_atoi+2)^0,w,c
 12821  003DB0  A0D8               	btfss	status,0,c
 12822  003DB2  EFDD  F01E         	goto	u6291
 12823  003DB6  EFE0  F01E         	goto	u6290
 12824  003DBA                     u6291:
 12825  003DBA  0E01               	movlw	1
 12826  003DBC  EFE1  F01E         	goto	u6300
 12827  003DC0                     u6290:
 12828  003DC0  0E00               	movlw	0
 12829  003DC2                     u6300:
 12830  003DC2  6E12               	movwf	_atoi$3067^0,c
 12831  003DC4  6A13               	clrf	(_atoi$3067+1)^0,c
 12832  003DC6  5012               	movf	_atoi$3067^0,w,c
 12833  003DC8  1013               	iorwf	(_atoi$3067+1)^0,w,c
 12834  003DCA  A4D8               	btfss	status,2,c
 12835  003DCC  EFEA  F01E         	goto	u6311
 12836  003DD0  EFEC  F01E         	goto	u6310
 12837  003DD4                     u6311:
 12838  003DD4  EFA9  F01E         	goto	l5420
 12839  003DD8                     u6310:
 12840  003DD8  500E               	movf	atoi@neg^0,w,c
 12841  003DDA  100F               	iorwf	(atoi@neg+1)^0,w,c
 12842  003DDC  A4D8               	btfss	status,2,c
 12843  003DDE  EFF3  F01E         	goto	u6321
 12844  003DE2  EFF5  F01E         	goto	u6320
 12845  003DE6                     u6321:
 12846  003DE6  EF03  F01F         	goto	l1641
 12847  003DEA                     u6320:
 12848  003DEA  C015  F00A         	movff	atoi@n,??_atoi
 12849  003DEE  C016  F00B         	movff	atoi@n+1,??_atoi+1
 12850  003DF2  1E0A               	comf	??_atoi^0,f,c
 12851  003DF4  1E0B               	comf	(??_atoi+1)^0,f,c
 12852  003DF6  4A0A               	infsnz	??_atoi^0,f,c
 12853  003DF8  2A0B               	incf	(??_atoi+1)^0,f,c
 12854  003DFA  C00A  F008         	movff	??_atoi,?_atoi
 12855  003DFE  C00B  F009         	movff	??_atoi+1,?_atoi+1
 12856  003E02  EF07  F01F         	goto	l1644
 12857  003E06                     l1641:
 12858  003E06  C015  F008         	movff	atoi@n,?_atoi
 12859  003E0A  C016  F009         	movff	atoi@n+1,?_atoi+1
 12860  003E0E                     l1644:
 12861  003E0E  0012               	return		;funcret
 12862  003E10                     __end_of_atoi:
 12863                           	callstack 0
 12864                           
 12865 ;; *************** function _isspace *****************
 12866 ;; Defined at:
 12867 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 12868 ;; Parameters:    Size  Location     Type
 12869 ;;  c               2    0[COMRAM] int 
 12870 ;; Auto vars:     Size  Location     Type
 12871 ;;		None
 12872 ;; Return value:  Size  Location     Type
 12873 ;;                  2    0[COMRAM] int 
 12874 ;; Registers used:
 12875 ;;		wreg, status,2, status,0
 12876 ;; Tracked objects:
 12877 ;;		On entry : 0/0
 12878 ;;		On exit  : 0/0
 12879 ;;		Unchanged: 0/0
 12880 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12881 ;;      Params:         2       0       0       0       0       0       0
 12882 ;;      Locals:         1       0       0       0       0       0       0
 12883 ;;      Temps:          4       0       0       0       0       0       0
 12884 ;;      Totals:         7       0       0       0       0       0       0
 12885 ;;Total ram usage:        7 bytes
 12886 ;; Hardware stack levels used:    1
 12887 ;; Hardware stack levels required when called:    1
 12888 ;; This function calls:
 12889 ;;		Nothing
 12890 ;; This function is called by:
 12891 ;;		_atoi
 12892 ;; This function uses a non-reentrant model
 12893 ;;
 12894                           
 12895                           	psect	text49
 12896  00550C                     __ptext49:
 12897                           	callstack 0
 12898  00550C                     _isspace:
 12899                           	callstack 22
 12900  00550C  0E01               	movlw	1
 12901  00550E  6E07               	movwf	_isspace$3096^0,c
 12902  005510  0E20               	movlw	32
 12903  005512  1801               	xorwf	isspace@c^0,w,c
 12904  005514  1002               	iorwf	(isspace@c+1)^0,w,c
 12905  005516  B4D8               	btfsc	status,2,c
 12906  005518  EF90  F02A         	goto	u5571
 12907  00551C  EF92  F02A         	goto	u5570
 12908  005520                     u5571:
 12909  005520  EFAB  F02A         	goto	l5032
 12910  005524                     u5570:
 12911  005524  0EF7               	movlw	247
 12912  005526  6E03               	movwf	??_isspace^0,c
 12913  005528  0EFF               	movlw	255
 12914  00552A  6E04               	movwf	(??_isspace+1)^0,c
 12915  00552C  C001  F005         	movff	isspace@c,??_isspace+2
 12916  005530  C002  F006         	movff	isspace@c+1,??_isspace+3
 12917  005534  5003               	movf	??_isspace^0,w,c
 12918  005536  2605               	addwf	(??_isspace+2)^0,f,c
 12919  005538  5004               	movf	(??_isspace+1)^0,w,c
 12920  00553A  2206               	addwfc	(??_isspace+3)^0,f,c
 12921  00553C  5006               	movf	(??_isspace+3)^0,w,c
 12922  00553E  E109               	bnz	u5580
 12923  005540  0E05               	movlw	5
 12924  005542  5C05               	subwf	(??_isspace+2)^0,w,c
 12925  005544  A0D8               	btfss	status,0,c
 12926  005546  EFA7  F02A         	goto	u5581
 12927  00554A  EFA9  F02A         	goto	u5580
 12928  00554E                     u5581:
 12929  00554E  EFAB  F02A         	goto	l5032
 12930  005552                     u5580:
 12931  005552  0E00               	movlw	0
 12932  005554  6E07               	movwf	_isspace$3096^0,c
 12933  005556                     l5032:
 12934  005556  C007  F001         	movff	_isspace$3096,?_isspace
 12935  00555A  6A02               	clrf	(?_isspace+1)^0,c
 12936  00555C  0012               	return		;funcret
 12937  00555E                     __end_of_isspace:
 12938                           	callstack 0
 12939                           
 12940 ;; *************** function _isdigit *****************
 12941 ;; Defined at:
 12942 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 12943 ;; Parameters:    Size  Location     Type
 12944 ;;  c               2    0[COMRAM] int 
 12945 ;; Auto vars:     Size  Location     Type
 12946 ;;		None
 12947 ;; Return value:  Size  Location     Type
 12948 ;;                  2    0[COMRAM] int 
 12949 ;; Registers used:
 12950 ;;		wreg, status,2, status,0
 12951 ;; Tracked objects:
 12952 ;;		On entry : 0/0
 12953 ;;		On exit  : 0/0
 12954 ;;		Unchanged: 0/0
 12955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12956 ;;      Params:         2       0       0       0       0       0       0
 12957 ;;      Locals:         0       0       0       0       0       0       0
 12958 ;;      Temps:          4       0       0       0       0       0       0
 12959 ;;      Totals:         6       0       0       0       0       0       0
 12960 ;;Total ram usage:        6 bytes
 12961 ;; Hardware stack levels used:    1
 12962 ;; Hardware stack levels required when called:    1
 12963 ;; This function calls:
 12964 ;;		Nothing
 12965 ;; This function is called by:
 12966 ;;		_vfpfcnvrt
 12967 ;;		_atoi
 12968 ;; This function uses a non-reentrant model
 12969 ;;
 12970                           
 12971                           	psect	text50
 12972  00581C                     __ptext50:
 12973                           	callstack 0
 12974  00581C                     _isdigit:
 12975                           	callstack 23
 12976  00581C  0ED0               	movlw	208
 12977  00581E  6E03               	movwf	??_isdigit^0,c
 12978  005820  0EFF               	movlw	255
 12979  005822  6E04               	movwf	(??_isdigit+1)^0,c
 12980  005824  C001  F005         	movff	isdigit@c,??_isdigit+2
 12981  005828  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 12982  00582C  5003               	movf	??_isdigit^0,w,c
 12983  00582E  2605               	addwf	(??_isdigit+2)^0,f,c
 12984  005830  5004               	movf	(??_isdigit+1)^0,w,c
 12985  005832  2206               	addwfc	(??_isdigit+3)^0,f,c
 12986  005834  5006               	movf	(??_isdigit+3)^0,w,c
 12987  005836  E10A               	bnz	u5550
 12988  005838  0E0A               	movlw	10
 12989  00583A  5C05               	subwf	(??_isdigit+2)^0,w,c
 12990  00583C  A0D8               	btfss	status,0,c
 12991  00583E  EF23  F02C         	goto	u5551
 12992  005842  EF26  F02C         	goto	u5550
 12993  005846                     u5551:
 12994  005846  0E01               	movlw	1
 12995  005848  EF27  F02C         	goto	u5560
 12996  00584C                     u5550:
 12997  00584C  0E00               	movlw	0
 12998  00584E                     u5560:
 12999  00584E  6E01               	movwf	?_isdigit^0,c
 13000  005850  6A02               	clrf	(?_isdigit+1)^0,c
 13001  005852  0012               	return		;funcret
 13002  005854                     __end_of_isdigit:
 13003                           	callstack 0
 13004                           
 13005 ;; *************** function ___wmul *****************
 13006 ;; Defined at:
 13007 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13008 ;; Parameters:    Size  Location     Type
 13009 ;;  multiplier      2    0[COMRAM] unsigned int 
 13010 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13011 ;; Auto vars:     Size  Location     Type
 13012 ;;  product         2    4[COMRAM] unsigned int 
 13013 ;; Return value:  Size  Location     Type
 13014 ;;                  2    0[COMRAM] unsigned int 
 13015 ;; Registers used:
 13016 ;;		wreg, status,2, status,0, prodl, prodh
 13017 ;; Tracked objects:
 13018 ;;		On entry : 0/0
 13019 ;;		On exit  : 0/0
 13020 ;;		Unchanged: 0/0
 13021 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13022 ;;      Params:         4       0       0       0       0       0       0
 13023 ;;      Locals:         2       0       0       0       0       0       0
 13024 ;;      Temps:          0       0       0       0       0       0       0
 13025 ;;      Totals:         6       0       0       0       0       0       0
 13026 ;;Total ram usage:        6 bytes
 13027 ;; Hardware stack levels used:    1
 13028 ;; Hardware stack levels required when called:    1
 13029 ;; This function calls:
 13030 ;;		Nothing
 13031 ;; This function is called by:
 13032 ;;		_atoi
 13033 ;; This function uses a non-reentrant model
 13034 ;;
 13035                           
 13036                           	psect	text51
 13037  0059AA                     __ptext51:
 13038                           	callstack 0
 13039  0059AA                     ___wmul:
 13040                           	callstack 22
 13041  0059AA  5001               	movf	___wmul@multiplier^0,w,c
 13042  0059AC  0203               	mulwf	___wmul@multiplicand^0,c
 13043  0059AE  CFF3 F005          	movff	prodl,___wmul@product
 13044  0059B2  CFF4 F006          	movff	prodh,___wmul@product+1
 13045  0059B6  5001               	movf	___wmul@multiplier^0,w,c
 13046  0059B8  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13047  0059BA  50F3               	movf	243,w,c
 13048  0059BC  2606               	addwf	(___wmul@product+1)^0,f,c
 13049  0059BE  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13050  0059C0  0203               	mulwf	___wmul@multiplicand^0,c
 13051  0059C2  50F3               	movf	243,w,c
 13052  0059C4  2606               	addwf	(___wmul@product+1)^0,f,c
 13053  0059C6  C005  F001         	movff	___wmul@product,?___wmul
 13054  0059CA  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13055  0059CE  0012               	return		;funcret
 13056  0059D0                     __end_of___wmul:
 13057                           	callstack 0
 13058                           
 13059 ;; *************** function _eepromWrite *****************
 13060 ;; Defined at:
 13061 ;;		line 69 in file "fs_eeprom.c"
 13062 ;; Parameters:    Size  Location     Type
 13063 ;;  address         1    wreg     unsigned char 
 13064 ;;  data            1    0[COMRAM] unsigned char 
 13065 ;; Auto vars:     Size  Location     Type
 13066 ;;  address         1    1[COMRAM] unsigned char 
 13067 ;; Return value:  Size  Location     Type
 13068 ;;                  1    wreg      void 
 13069 ;; Registers used:
 13070 ;;		wreg, status,2
 13071 ;; Tracked objects:
 13072 ;;		On entry : 0/0
 13073 ;;		On exit  : 0/0
 13074 ;;		Unchanged: 0/0
 13075 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13076 ;;      Params:         1       0       0       0       0       0       0
 13077 ;;      Locals:         1       0       0       0       0       0       0
 13078 ;;      Temps:          0       0       0       0       0       0       0
 13079 ;;      Totals:         2       0       0       0       0       0       0
 13080 ;;Total ram usage:        2 bytes
 13081 ;; Hardware stack levels used:    1
 13082 ;; Hardware stack levels required when called:    1
 13083 ;; This function calls:
 13084 ;;		Nothing
 13085 ;; This function is called by:
 13086 ;;		_speedLimitSettingMenu
 13087 ;;		_stopTimeSettingMenu
 13088 ;;		_driverTimeSettingMenu
 13089 ;; This function uses a non-reentrant model
 13090 ;;
 13091                           
 13092                           	psect	text52
 13093  00592C                     __ptext52:
 13094                           	callstack 0
 13095  00592C                     _eepromWrite:
 13096                           	callstack 26
 13097                           
 13098                           ;incstack = 0
 13099                           ;eepromWrite@address stored from wreg
 13100  00592C  6E02               	movwf	eepromWrite@address^0,c
 13101  00592E                     
 13102                           ;fs_eeprom.c: 69: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 70: {;fs_
      +                          eeprom.c: 73:     EEADR = (uint8_t)address;
 13103  00592E  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 13104  005932                     
 13105                           ;fs_eeprom.c: 75:     EEDATA = data;
 13106  005932  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 13107  005936                     
 13108                           ;fs_eeprom.c: 76:     EECON1bits.EEPGD = 0;
 13109  005936  9EA6               	bcf	166,7,c	;volsfr
 13110  005938                     
 13111                           ;fs_eeprom.c: 77:     EECON1bits.CFGS = 0;
 13112  005938  9CA6               	bcf	166,6,c	;volsfr
 13113  00593A                     
 13114                           ;fs_eeprom.c: 78:     EECON1bits.WREN = 1;
 13115  00593A  84A6               	bsf	166,2,c	;volsfr
 13116  00593C                     
 13117                           ;fs_eeprom.c: 82:     EECON2 = 0x55;
 13118  00593C  0E55               	movlw	85
 13119  00593E  6EA7               	movwf	167,c	;volsfr
 13120  005940                     
 13121                           ;fs_eeprom.c: 83:     EECON2 = 0xAA;
 13122  005940  0EAA               	movlw	170
 13123  005942  6EA7               	movwf	167,c	;volsfr
 13124  005944                     
 13125                           ;fs_eeprom.c: 84:     EECON1bits.WR = 1;
 13126  005944  82A6               	bsf	166,1,c	;volsfr
 13127  005946                     l98:
 13128                           
 13129                           ;fs_eeprom.c: 87:     while(PIR2bits.EEIF == 0)
 13130  005946  A8A1               	btfss	161,4,c	;volatile
 13131  005948  EFA8  F02C         	goto	u6841
 13132  00594C  EFAA  F02C         	goto	u6840
 13133  005950                     u6841:
 13134  005950  EFA3  F02C         	goto	l98
 13135  005954                     u6840:
 13136  005954                     
 13137                           ;fs_eeprom.c: 92:     PIR2bits.EEIF = 0;
 13138  005954  98A1               	bcf	161,4,c	;volatile
 13139                           
 13140                           ;fs_eeprom.c: 93:     EECON1bits.WREN = 0;
 13141  005956  94A6               	bcf	166,2,c	;volsfr
 13142  005958  0012               	return		;funcret
 13143  00595A                     __end_of_eepromWrite:
 13144                           	callstack 0
 13145                           
 13146 ;; *************** function _buttonControlFlags *****************
 13147 ;; Defined at:
 13148 ;;		line 76 in file "fs_menu_controller.c"
 13149 ;; Parameters:    Size  Location     Type
 13150 ;;		None
 13151 ;; Auto vars:     Size  Location     Type
 13152 ;;		None
 13153 ;; Return value:  Size  Location     Type
 13154 ;;                  1    wreg      void 
 13155 ;; Registers used:
 13156 ;;		wreg, status,2, status,0
 13157 ;; Tracked objects:
 13158 ;;		On entry : 0/0
 13159 ;;		On exit  : 0/0
 13160 ;;		Unchanged: 0/0
 13161 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13162 ;;      Params:         0       0       0       0       0       0       0
 13163 ;;      Locals:         0       0       0       0       0       0       0
 13164 ;;      Temps:          0       0       0       0       0       0       0
 13165 ;;      Totals:         0       0       0       0       0       0       0
 13166 ;;Total ram usage:        0 bytes
 13167 ;; Hardware stack levels used:    1
 13168 ;; Hardware stack levels required when called:    1
 13169 ;; This function calls:
 13170 ;;		Nothing
 13171 ;; This function is called by:
 13172 ;;		_loopTaskMenuControl
 13173 ;; This function uses a non-reentrant model
 13174 ;;
 13175                           
 13176                           	psect	text53
 13177  0035C2                     __ptext53:
 13178                           	callstack 0
 13179  0035C2                     _buttonControlFlags:
 13180                           	callstack 28
 13181  0035C2                     
 13182                           ;fs_menu_controller.c: 79:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 13183  0035C2  0101               	movlb	1	; () banked
 13184  0035C4  51A5               	movf	_button_bounce_controller& (0+255),w,b
 13185  0035C6  A4D8               	btfss	status,2,c
 13186  0035C8  EFE8  F01A         	goto	u7531
 13187  0035CC  EFEA  F01A         	goto	u7530
 13188  0035D0                     u7531:
 13189  0035D0  EFF5  F01A         	goto	l6316
 13190  0035D4                     u7530:
 13191  0035D4                     
 13192                           ; BSR set to: 1
 13193  0035D4  BE81               	btfsc	129,7,c	;volatile
 13194  0035D6  EFEF  F01A         	goto	u7541
 13195  0035DA  EFF1  F01A         	goto	u7540
 13196  0035DE                     u7541:
 13197  0035DE  EFF5  F01A         	goto	l6316
 13198  0035E2                     u7540:
 13199  0035E2                     
 13200                           ; BSR set to: 1
 13201                           ;fs_menu_controller.c: 80:     {;fs_menu_controller.c: 81:         button_bounce_control
      +                          ler.menu = 1;
 13202  0035E2  0E01               	movlw	1
 13203  0035E4  6FA5               	movwf	_button_bounce_controller& (0+255),b
 13204                           
 13205                           ;fs_menu_controller.c: 82:         menu_flags.menu_input_flag = 1;
 13206  0035E6  0E01               	movlw	1
 13207  0035E8  6F9F               	movwf	_menu_flags& (0+255),b
 13208  0035EA                     l6316:
 13209                           
 13210                           ; BSR set to: 1
 13211                           ;fs_menu_controller.c: 85:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 13212  0035EA  AE81               	btfss	129,7,c	;volatile
 13213  0035EC  EFFA  F01A         	goto	u7551
 13214  0035F0  EFFC  F01A         	goto	u7550
 13215  0035F4                     u7551:
 13216  0035F4  EF08  F01B         	goto	l421
 13217  0035F8                     u7550:
 13218  0035F8                     
 13219                           ; BSR set to: 1
 13220  0035F8  05A5               	decf	_button_bounce_controller& (0+255),w,b
 13221  0035FA  A4D8               	btfss	status,2,c
 13222  0035FC  EF02  F01B         	goto	u7561
 13223  003600  EF04  F01B         	goto	u7560
 13224  003604                     u7561:
 13225  003604  EF08  F01B         	goto	l421
 13226  003608                     u7560:
 13227  003608                     
 13228                           ; BSR set to: 1
 13229                           ;fs_menu_controller.c: 86:     {;fs_menu_controller.c: 87:         button_bounce_control
      +                          ler.menu = 0;
 13230  003608  0E00               	movlw	0
 13231  00360A  6FA5               	movwf	_button_bounce_controller& (0+255),b
 13232                           
 13233                           ;fs_menu_controller.c: 88:         menu_flags.menu_input_flag = 0;
 13234  00360C  0E00               	movlw	0
 13235  00360E  6F9F               	movwf	_menu_flags& (0+255),b
 13236  003610                     l421:
 13237                           
 13238                           ; BSR set to: 1
 13239                           ;fs_menu_controller.c: 92:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 13240  003610  51A8               	movf	(_button_bounce_controller+3)& (0+255),w,b
 13241  003612  A4D8               	btfss	status,2,c
 13242  003614  EF0E  F01B         	goto	u7571
 13243  003618  EF10  F01B         	goto	u7570
 13244  00361C                     u7571:
 13245  00361C  EF1B  F01B         	goto	l6326
 13246  003620                     u7570:
 13247  003620                     
 13248                           ; BSR set to: 1
 13249  003620  B483               	btfsc	131,2,c	;volatile
 13250  003622  EF15  F01B         	goto	u7581
 13251  003626  EF17  F01B         	goto	u7580
 13252  00362A                     u7581:
 13253  00362A  EF1B  F01B         	goto	l6326
 13254  00362E                     u7580:
 13255  00362E                     
 13256                           ; BSR set to: 1
 13257                           ;fs_menu_controller.c: 93:     {;fs_menu_controller.c: 94:         button_bounce_control
      +                          ler.pause = 1;
 13258  00362E  0E01               	movlw	1
 13259  003630  6FA8               	movwf	(_button_bounce_controller+3)& (0+255),b
 13260                           
 13261                           ;fs_menu_controller.c: 95:         menu_flags.menu_pause_flag = 1;
 13262  003632  0E01               	movlw	1
 13263  003634  6FA2               	movwf	(_menu_flags+3)& (0+255),b
 13264  003636                     l6326:
 13265                           
 13266                           ; BSR set to: 1
 13267                           ;fs_menu_controller.c: 97:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 13268  003636  A483               	btfss	131,2,c	;volatile
 13269  003638  EF20  F01B         	goto	u7591
 13270  00363C  EF22  F01B         	goto	u7590
 13271  003640                     u7591:
 13272  003640  EF2E  F01B         	goto	l423
 13273  003644                     u7590:
 13274  003644                     
 13275                           ; BSR set to: 1
 13276  003644  05A8               	decf	(_button_bounce_controller+3)& (0+255),w,b
 13277  003646  A4D8               	btfss	status,2,c
 13278  003648  EF28  F01B         	goto	u7601
 13279  00364C  EF2A  F01B         	goto	u7600
 13280  003650                     u7601:
 13281  003650  EF2E  F01B         	goto	l423
 13282  003654                     u7600:
 13283  003654                     
 13284                           ; BSR set to: 1
 13285                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 0;
 13286  003654  0E00               	movlw	0
 13287  003656  6FA8               	movwf	(_button_bounce_controller+3)& (0+255),b
 13288                           
 13289                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 0;
 13290  003658  0E00               	movlw	0
 13291  00365A  6FA2               	movwf	(_menu_flags+3)& (0+255),b
 13292  00365C                     l423:
 13293                           
 13294                           ; BSR set to: 1
 13295                           ;fs_menu_controller.c: 104:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 13296  00365C  51A6               	movf	(_button_bounce_controller+1)& (0+255),w,b
 13297  00365E  A4D8               	btfss	status,2,c
 13298  003660  EF34  F01B         	goto	u7611
 13299  003664  EF36  F01B         	goto	u7610
 13300  003668                     u7611:
 13301  003668  EF41  F01B         	goto	l6336
 13302  00366C                     u7610:
 13303  00366C                     
 13304                           ; BSR set to: 1
 13305  00366C  B083               	btfsc	131,0,c	;volatile
 13306  00366E  EF3B  F01B         	goto	u7621
 13307  003672  EF3D  F01B         	goto	u7620
 13308  003676                     u7621:
 13309  003676  EF41  F01B         	goto	l6336
 13310  00367A                     u7620:
 13311  00367A                     
 13312                           ; BSR set to: 1
 13313                           ;fs_menu_controller.c: 105:     {;fs_menu_controller.c: 106:         button_bounce_contr
      +                          oller.start = 1;
 13314  00367A  0E01               	movlw	1
 13315  00367C  6FA6               	movwf	(_button_bounce_controller+1)& (0+255),b
 13316                           
 13317                           ;fs_menu_controller.c: 107:         menu_flags.menu_start_flag = 1;
 13318  00367E  0E01               	movlw	1
 13319  003680  6FA0               	movwf	(_menu_flags+1)& (0+255),b
 13320  003682                     l6336:
 13321                           
 13322                           ; BSR set to: 1
 13323                           ;fs_menu_controller.c: 109:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 13324  003682  A083               	btfss	131,0,c	;volatile
 13325  003684  EF46  F01B         	goto	u7631
 13326  003688  EF48  F01B         	goto	u7630
 13327  00368C                     u7631:
 13328  00368C  EF54  F01B         	goto	l425
 13329  003690                     u7630:
 13330  003690                     
 13331                           ; BSR set to: 1
 13332  003690  05A6               	decf	(_button_bounce_controller+1)& (0+255),w,b
 13333  003692  A4D8               	btfss	status,2,c
 13334  003694  EF4E  F01B         	goto	u7641
 13335  003698  EF50  F01B         	goto	u7640
 13336  00369C                     u7641:
 13337  00369C  EF54  F01B         	goto	l425
 13338  0036A0                     u7640:
 13339  0036A0                     
 13340                           ; BSR set to: 1
 13341                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 0;
 13342  0036A0  0E00               	movlw	0
 13343  0036A2  6FA6               	movwf	(_button_bounce_controller+1)& (0+255),b
 13344                           
 13345                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 0;
 13346  0036A4  0E00               	movlw	0
 13347  0036A6  6FA0               	movwf	(_menu_flags+1)& (0+255),b
 13348  0036A8                     l425:
 13349                           
 13350                           ; BSR set to: 1
 13351                           ;fs_menu_controller.c: 116:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 13352  0036A8  51A7               	movf	(_button_bounce_controller+2)& (0+255),w,b
 13353  0036AA  A4D8               	btfss	status,2,c
 13354  0036AC  EF5A  F01B         	goto	u7651
 13355  0036B0  EF5C  F01B         	goto	u7650
 13356  0036B4                     u7651:
 13357  0036B4  EF67  F01B         	goto	l6346
 13358  0036B8                     u7650:
 13359  0036B8                     
 13360                           ; BSR set to: 1
 13361  0036B8  B283               	btfsc	131,1,c	;volatile
 13362  0036BA  EF61  F01B         	goto	u7661
 13363  0036BE  EF63  F01B         	goto	u7660
 13364  0036C2                     u7661:
 13365  0036C2  EF67  F01B         	goto	l6346
 13366  0036C6                     u7660:
 13367  0036C6                     
 13368                           ; BSR set to: 1
 13369                           ;fs_menu_controller.c: 117:     {;fs_menu_controller.c: 118:         button_bounce_contr
      +                          oller.stop = 1;
 13370  0036C6  0E01               	movlw	1
 13371  0036C8  6FA7               	movwf	(_button_bounce_controller+2)& (0+255),b
 13372                           
 13373                           ;fs_menu_controller.c: 119:         menu_flags.menu_stop_flag = 1;
 13374  0036CA  0E01               	movlw	1
 13375  0036CC  6FA1               	movwf	(_menu_flags+2)& (0+255),b
 13376  0036CE                     l6346:
 13377                           
 13378                           ; BSR set to: 1
 13379                           ;fs_menu_controller.c: 121:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 13380  0036CE  A283               	btfss	131,1,c	;volatile
 13381  0036D0  EF6C  F01B         	goto	u7671
 13382  0036D4  EF6E  F01B         	goto	u7670
 13383  0036D8                     u7671:
 13384  0036D8  EF7A  F01B         	goto	l427
 13385  0036DC                     u7670:
 13386  0036DC                     
 13387                           ; BSR set to: 1
 13388  0036DC  05A7               	decf	(_button_bounce_controller+2)& (0+255),w,b
 13389  0036DE  A4D8               	btfss	status,2,c
 13390  0036E0  EF74  F01B         	goto	u7681
 13391  0036E4  EF76  F01B         	goto	u7680
 13392  0036E8                     u7681:
 13393  0036E8  EF7A  F01B         	goto	l427
 13394  0036EC                     u7680:
 13395  0036EC                     
 13396                           ; BSR set to: 1
 13397                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 0;
 13398  0036EC  0E00               	movlw	0
 13399  0036EE  6FA7               	movwf	(_button_bounce_controller+2)& (0+255),b
 13400                           
 13401                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 0;
 13402  0036F0  0E00               	movlw	0
 13403  0036F2  6FA1               	movwf	(_menu_flags+2)& (0+255),b
 13404  0036F4                     l427:
 13405                           
 13406                           ; BSR set to: 1
 13407                           ;fs_menu_controller.c: 128:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 13408  0036F4  51AA               	movf	(_button_bounce_controller+5)& (0+255),w,b
 13409  0036F6  A4D8               	btfss	status,2,c
 13410  0036F8  EF80  F01B         	goto	u7691
 13411  0036FC  EF82  F01B         	goto	u7690
 13412  003700                     u7691:
 13413  003700  EF8D  F01B         	goto	l6356
 13414  003704                     u7690:
 13415  003704                     
 13416                           ; BSR set to: 1
 13417  003704  BC81               	btfsc	129,6,c	;volatile
 13418  003706  EF87  F01B         	goto	u7701
 13419  00370A  EF89  F01B         	goto	u7700
 13420  00370E                     u7701:
 13421  00370E  EF8D  F01B         	goto	l6356
 13422  003712                     u7700:
 13423  003712                     
 13424                           ; BSR set to: 1
 13425                           ;fs_menu_controller.c: 129:     {;fs_menu_controller.c: 130:         button_bounce_contr
      +                          oller.increase = 1;
 13426  003712  0E01               	movlw	1
 13427  003714  6FAA               	movwf	(_button_bounce_controller+5)& (0+255),b
 13428                           
 13429                           ;fs_menu_controller.c: 131:         menu_flags.menu_increase_flag = 1;
 13430  003716  0E01               	movlw	1
 13431  003718  6FA3               	movwf	(_menu_flags+4)& (0+255),b
 13432  00371A                     l6356:
 13433                           
 13434                           ; BSR set to: 1
 13435                           ;fs_menu_controller.c: 133:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 13436  00371A  AC81               	btfss	129,6,c	;volatile
 13437  00371C  EF92  F01B         	goto	u7711
 13438  003720  EF94  F01B         	goto	u7710
 13439  003724                     u7711:
 13440  003724  EFA0  F01B         	goto	l429
 13441  003728                     u7710:
 13442  003728                     
 13443                           ; BSR set to: 1
 13444  003728  05AA               	decf	(_button_bounce_controller+5)& (0+255),w,b
 13445  00372A  A4D8               	btfss	status,2,c
 13446  00372C  EF9A  F01B         	goto	u7721
 13447  003730  EF9C  F01B         	goto	u7720
 13448  003734                     u7721:
 13449  003734  EFA0  F01B         	goto	l429
 13450  003738                     u7720:
 13451  003738                     
 13452                           ; BSR set to: 1
 13453                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 13454  003738  0E00               	movlw	0
 13455  00373A  6FAA               	movwf	(_button_bounce_controller+5)& (0+255),b
 13456                           
 13457                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 13458  00373C  0E00               	movlw	0
 13459  00373E  6FA3               	movwf	(_menu_flags+4)& (0+255),b
 13460  003740                     l429:
 13461                           
 13462                           ; BSR set to: 1
 13463                           ;fs_menu_controller.c: 140:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 13464  003740  51A9               	movf	(_button_bounce_controller+4)& (0+255),w,b
 13465  003742  A4D8               	btfss	status,2,c
 13466  003744  EFA6  F01B         	goto	u7731
 13467  003748  EFA8  F01B         	goto	u7730
 13468  00374C                     u7731:
 13469  00374C  EFB3  F01B         	goto	l6366
 13470  003750                     u7730:
 13471  003750                     
 13472                           ; BSR set to: 1
 13473  003750  B883               	btfsc	131,4,c	;volatile
 13474  003752  EFAD  F01B         	goto	u7741
 13475  003756  EFAF  F01B         	goto	u7740
 13476  00375A                     u7741:
 13477  00375A  EFB3  F01B         	goto	l6366
 13478  00375E                     u7740:
 13479  00375E                     
 13480                           ; BSR set to: 1
 13481                           ;fs_menu_controller.c: 141:     {;fs_menu_controller.c: 142:         button_bounce_contr
      +                          oller.decrease = 1;
 13482  00375E  0E01               	movlw	1
 13483  003760  6FA9               	movwf	(_button_bounce_controller+4)& (0+255),b
 13484                           
 13485                           ;fs_menu_controller.c: 143:         menu_flags.menu_decrease_flag = 1;
 13486  003762  0E01               	movlw	1
 13487  003764  6FA4               	movwf	(_menu_flags+5)& (0+255),b
 13488  003766                     l6366:
 13489                           
 13490                           ; BSR set to: 1
 13491                           ;fs_menu_controller.c: 145:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 13492  003766  A883               	btfss	131,4,c	;volatile
 13493  003768  EFB8  F01B         	goto	u7751
 13494  00376C  EFBA  F01B         	goto	u7750
 13495  003770                     u7751:
 13496  003770  EFC6  F01B         	goto	l432
 13497  003774                     u7750:
 13498  003774                     
 13499                           ; BSR set to: 1
 13500  003774  05A9               	decf	(_button_bounce_controller+4)& (0+255),w,b
 13501  003776  A4D8               	btfss	status,2,c
 13502  003778  EFC0  F01B         	goto	u7761
 13503  00377C  EFC2  F01B         	goto	u7760
 13504  003780                     u7761:
 13505  003780  EFC6  F01B         	goto	l432
 13506  003784                     u7760:
 13507  003784                     
 13508                           ; BSR set to: 1
 13509                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 13510  003784  0E00               	movlw	0
 13511  003786  6FA9               	movwf	(_button_bounce_controller+4)& (0+255),b
 13512                           
 13513                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 13514  003788  0E00               	movlw	0
 13515  00378A  6FA4               	movwf	(_menu_flags+5)& (0+255),b
 13516  00378C                     l432:
 13517                           
 13518                           ; BSR set to: 1
 13519  00378C  0012               	return		;funcret
 13520  00378E                     __end_of_buttonControlFlags:
 13521                           	callstack 0
 13522                           
 13523 ;; *************** function _loopTaskInit *****************
 13524 ;; Defined at:
 13525 ;;		line 86 in file "fs_main.c"
 13526 ;; Parameters:    Size  Location     Type
 13527 ;;		None
 13528 ;; Auto vars:     Size  Location     Type
 13529 ;;		None
 13530 ;; Return value:  Size  Location     Type
 13531 ;;                  1    wreg      void 
 13532 ;; Registers used:
 13533 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13534 ;; Tracked objects:
 13535 ;;		On entry : 0/0
 13536 ;;		On exit  : 0/0
 13537 ;;		Unchanged: 0/0
 13538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13539 ;;      Params:         0       0       0       0       0       0       0
 13540 ;;      Locals:         0       0       0       0       0       0       0
 13541 ;;      Temps:          0       0       0       0       0       0       0
 13542 ;;      Totals:         0       0       0       0       0       0       0
 13543 ;;Total ram usage:        0 bytes
 13544 ;; Hardware stack levels used:    1
 13545 ;; Hardware stack levels required when called:    5
 13546 ;; This function calls:
 13547 ;;		_PWM1_setDC
 13548 ;;		_PWM2_setDC
 13549 ;;		_PWM_Init
 13550 ;;		_adcInit
 13551 ;;		_lcdClear
 13552 ;;		_lcdInit
 13553 ;;		_mcuInit
 13554 ;;		_menuInitialize
 13555 ;;		_openLCD_Script
 13556 ;;		_systemInit
 13557 ;;		_timer_0_init
 13558 ;; This function is called by:
 13559 ;;		_main
 13560 ;; This function uses a non-reentrant model
 13561 ;;
 13562                           
 13563                           	psect	text54
 13564  0056F4                     __ptext54:
 13565                           	callstack 0
 13566  0056F4                     _loopTaskInit:
 13567                           	callstack 25
 13568  0056F4                     
 13569                           ;fs_main.c: 88:     mcuInit();
 13570  0056F4  EC13  F02D         	call	_mcuInit	;wreg free
 13571  0056F8                     
 13572                           ;fs_main.c: 89:     menuInitialize();
 13573  0056F8  ECAD  F02C         	call	_menuInitialize	;wreg free
 13574  0056FC                     
 13575                           ;fs_main.c: 91:     adcInit();
 13576  0056FC  EC99  F02B         	call	_adcInit	;wreg free
 13577  005700                     
 13578                           ;fs_main.c: 93:     timer_0_init();
 13579  005700  EC28  F02D         	call	_timer_0_init	;wreg free
 13580  005704                     
 13581                           ;fs_main.c: 94:     lcdInit();
 13582  005704  EC71  F027         	call	_lcdInit	;wreg free
 13583  005708                     
 13584                           ;fs_main.c: 95:     systemInit();
 13585  005708  EC14  F024         	call	_systemInit	;wreg free
 13586  00570C                     
 13587                           ;fs_main.c: 96:     lcdClear();
 13588  00570C  EC31  F02D         	call	_lcdClear	;wreg free
 13589  005710                     
 13590                           ;fs_main.c: 98:     PWM_Init();
 13591  005710  ECC1  F02C         	call	_PWM_Init	;wreg free
 13592  005714                     
 13593                           ;fs_main.c: 99:     PWM1_setDC(0);
 13594  005714  0E00               	movlw	0
 13595  005716  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
 13596  005718  0E00               	movlw	0
 13597  00571A  6E58               	movwf	PWM1_setDC@dutycycle^0,c
 13598  00571C  ECC8  F028         	call	_PWM1_setDC	;wreg free
 13599  005720                     
 13600                           ;fs_main.c: 100:     PWM2_setDC(0);
 13601  005720  0E00               	movlw	0
 13602  005722  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
 13603  005724  0E00               	movlw	0
 13604  005726  6E58               	movwf	PWM2_setDC@dutycycle^0,c
 13605  005728  EC8B  F028         	call	_PWM2_setDC	;wreg free
 13606  00572C                     
 13607                           ;fs_main.c: 101:     openLCD_Script();
 13608  00572C  ECAF  F02A         	call	_openLCD_Script	;wreg free
 13609  005730  0012               	return		;funcret
 13610  005732                     __end_of_loopTaskInit:
 13611                           	callstack 0
 13612                           
 13613 ;; *************** function _timer_0_init *****************
 13614 ;; Defined at:
 13615 ;;		line 77 in file "fs_timer.c"
 13616 ;; Parameters:    Size  Location     Type
 13617 ;;		None
 13618 ;; Auto vars:     Size  Location     Type
 13619 ;;		None
 13620 ;; Return value:  Size  Location     Type
 13621 ;;                  1    wreg      void 
 13622 ;; Registers used:
 13623 ;;		wreg, status,2
 13624 ;; Tracked objects:
 13625 ;;		On entry : 0/0
 13626 ;;		On exit  : 0/0
 13627 ;;		Unchanged: 0/0
 13628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13629 ;;      Params:         0       0       0       0       0       0       0
 13630 ;;      Locals:         0       0       0       0       0       0       0
 13631 ;;      Temps:          0       0       0       0       0       0       0
 13632 ;;      Totals:         0       0       0       0       0       0       0
 13633 ;;Total ram usage:        0 bytes
 13634 ;; Hardware stack levels used:    1
 13635 ;; Hardware stack levels required when called:    1
 13636 ;; This function calls:
 13637 ;;		Nothing
 13638 ;; This function is called by:
 13639 ;;		_loopTaskInit
 13640 ;; This function uses a non-reentrant model
 13641 ;;
 13642                           
 13643                           	psect	text55
 13644  005A50                     __ptext55:
 13645                           	callstack 0
 13646  005A50                     _timer_0_init:
 13647                           	callstack 28
 13648  005A50                     
 13649                           ;fs_timer.c: 79:   T0CON = 0x81;
 13650  005A50  0E81               	movlw	129
 13651  005A52  6ED5               	movwf	213,c	;volatile
 13652                           
 13653                           ;fs_timer.c: 80:   TMR0H = 0x63;
 13654  005A54  0E63               	movlw	99
 13655  005A56  6ED7               	movwf	215,c	;volatile
 13656                           
 13657                           ;fs_timer.c: 81:   TMR0L = 0xC0;
 13658  005A58  0EC0               	movlw	192
 13659  005A5A  6ED6               	movwf	214,c	;volatile
 13660  005A5C                     
 13661                           ;fs_timer.c: 82:   INTCONbits.GIE = 1;
 13662  005A5C  8EF2               	bsf	242,7,c	;volatile
 13663  005A5E                     
 13664                           ;fs_timer.c: 83:   INTCONbits.TMR0IE = 1;
 13665  005A5E  8AF2               	bsf	242,5,c	;volatile
 13666  005A60  0012               	return		;funcret
 13667  005A62                     __end_of_timer_0_init:
 13668                           	callstack 0
 13669                           
 13670 ;; *************** function _systemInit *****************
 13671 ;; Defined at:
 13672 ;;		line 49 in file "fs_mcu.c"
 13673 ;; Parameters:    Size  Location     Type
 13674 ;;		None
 13675 ;; Auto vars:     Size  Location     Type
 13676 ;;		None
 13677 ;; Return value:  Size  Location     Type
 13678 ;;                  1    wreg      void 
 13679 ;; Registers used:
 13680 ;;		wreg, status,2, cstack
 13681 ;; Tracked objects:
 13682 ;;		On entry : 0/0
 13683 ;;		On exit  : 0/0
 13684 ;;		Unchanged: 0/0
 13685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13686 ;;      Params:         0       0       0       0       0       0       0
 13687 ;;      Locals:         0       0       0       0       0       0       0
 13688 ;;      Temps:          2       0       0       0       0       0       0
 13689 ;;      Totals:         2       0       0       0       0       0       0
 13690 ;;Total ram usage:        2 bytes
 13691 ;; Hardware stack levels used:    1
 13692 ;; Hardware stack levels required when called:    2
 13693 ;; This function calls:
 13694 ;;		_eepromRead
 13695 ;; This function is called by:
 13696 ;;		_loopTaskInit
 13697 ;; This function uses a non-reentrant model
 13698 ;;
 13699                           
 13700                           	psect	text56
 13701  004828                     __ptext56:
 13702                           	callstack 0
 13703  004828                     _systemInit:
 13704                           	callstack 27
 13705  004828                     
 13706                           ;fs_mcu.c: 51:     driver_limit.pay_1 = 0;
 13707  004828  0E00               	movlw	0
 13708  00482A  0101               	movlb	1	; () banked
 13709  00482C  6F20               	movwf	_driver_limit& (0+255),b
 13710  00482E  0E00               	movlw	0
 13711  004830  6F21               	movwf	(_driver_limit+1)& (0+255),b
 13712  004832  0E00               	movlw	0
 13713  004834  6F22               	movwf	(_driver_limit+2)& (0+255),b
 13714  004836  0E00               	movlw	0
 13715  004838  6F23               	movwf	(_driver_limit+3)& (0+255),b
 13716                           
 13717                           ;fs_mcu.c: 52:     driver_limit.payda = 0;
 13718  00483A  0E00               	movlw	0
 13719  00483C  6F2C               	movwf	(_driver_limit+12)& (0+255),b
 13720  00483E  0E00               	movlw	0
 13721  004840  6F2D               	movwf	(_driver_limit+13)& (0+255),b
 13722  004842  0E00               	movlw	0
 13723  004844  6F2E               	movwf	(_driver_limit+14)& (0+255),b
 13724  004846  0E00               	movlw	0
 13725  004848  6F2F               	movwf	(_driver_limit+15)& (0+255),b
 13726                           
 13727                           ;fs_mcu.c: 53:     driver_limit.ortalama = 0;
 13728  00484A  0E00               	movlw	0
 13729  00484C  6F30               	movwf	(_driver_limit+16)& (0+255),b
 13730  00484E  0E00               	movlw	0
 13731  004850  6F31               	movwf	(_driver_limit+17)& (0+255),b
 13732  004852  0E00               	movlw	0
 13733  004854  6F32               	movwf	(_driver_limit+18)& (0+255),b
 13734  004856  0E00               	movlw	0
 13735  004858  6F33               	movwf	(_driver_limit+19)& (0+255),b
 13736                           
 13737                           ;fs_mcu.c: 54:     convert_data.convert_channel_0 = 0;
 13738  00485A  0E00               	movlw	0
 13739  00485C  6F01               	movwf	(_convert_data+1)& (0+255),b
 13740  00485E  0E00               	movlw	0
 13741  004860  6F00               	movwf	_convert_data& (0+255),b
 13742                           
 13743                           ;fs_mcu.c: 55:     convert_data.convert_channel_1 = 0;
 13744  004862  0E00               	movlw	0
 13745  004864  6F03               	movwf	(_convert_data+3)& (0+255),b
 13746  004866  0E00               	movlw	0
 13747  004868  6F02               	movwf	(_convert_data+2)& (0+255),b
 13748                           
 13749                           ;fs_mcu.c: 56:     convert_data.convert_channel_2 = 0;
 13750  00486A  0E00               	movlw	0
 13751  00486C  6F05               	movwf	(_convert_data+5)& (0+255),b
 13752  00486E  0E00               	movlw	0
 13753  004870  6F04               	movwf	(_convert_data+4)& (0+255),b
 13754                           
 13755                           ;fs_mcu.c: 57:     convert_data.convert_channel_3 = 0;
 13756  004872  0E00               	movlw	0
 13757  004874  6F07               	movwf	(_convert_data+7)& (0+255),b
 13758  004876  0E00               	movlw	0
 13759  004878  6F06               	movwf	(_convert_data+6)& (0+255),b
 13760                           
 13761                           ;fs_mcu.c: 58:     convert_data.convert_channel_4 = 0;
 13762  00487A  0E00               	movlw	0
 13763  00487C  6F09               	movwf	(_convert_data+9)& (0+255),b
 13764  00487E  0E00               	movlw	0
 13765  004880  6F08               	movwf	(_convert_data+8)& (0+255),b
 13766                           
 13767                           ;fs_mcu.c: 59:     convert_data.convert_channel_5 = 0;
 13768  004882  0E00               	movlw	0
 13769  004884  6F0B               	movwf	(_convert_data+11)& (0+255),b
 13770  004886  0E00               	movlw	0
 13771  004888  6F0A               	movwf	(_convert_data+10)& (0+255),b
 13772                           
 13773                           ;fs_mcu.c: 60:     convert_data.convert_channel_6 = 0;
 13774  00488A  0E00               	movlw	0
 13775  00488C  6F0D               	movwf	(_convert_data+13)& (0+255),b
 13776  00488E  0E00               	movlw	0
 13777  004890  6F0C               	movwf	(_convert_data+12)& (0+255),b
 13778                           
 13779                           ;fs_mcu.c: 61:     convert_data.convert_channel_7 = 0;
 13780  004892  0E00               	movlw	0
 13781  004894  6F0F               	movwf	(_convert_data+15)& (0+255),b
 13782  004896  0E00               	movlw	0
 13783  004898  6F0E               	movwf	(_convert_data+14)& (0+255),b
 13784                           
 13785                           ;fs_mcu.c: 62:     controller.leftMotorSpeed = 0;
 13786  00489A  0E00               	movlw	0
 13787  00489C  6F3B               	movwf	(_controller+7)& (0+255),b
 13788  00489E  0E00               	movlw	0
 13789  0048A0  6F3A               	movwf	(_controller+6)& (0+255),b
 13790                           
 13791                           ;fs_mcu.c: 63:     controller.rightMotorSpeed = 0;
 13792  0048A2  0E00               	movlw	0
 13793  0048A4  6F3D               	movwf	(_controller+9)& (0+255),b
 13794  0048A6  0E00               	movlw	0
 13795  0048A8  6F3C               	movwf	(_controller+8)& (0+255),b
 13796                           
 13797                           ;fs_mcu.c: 64:     timer_value.adc_conversion_time = 0;
 13798  0048AA  0E00               	movlw	0
 13799  0048AC  6F9C               	movwf	(_timer_value+5)& (0+255),b
 13800                           
 13801                           ;fs_mcu.c: 65:     controller.error = 0;
 13802  0048AE  0E00               	movlw	0
 13803  0048B0  6F35               	movwf	(_controller+1)& (0+255),b
 13804  0048B2  0E00               	movlw	0
 13805  0048B4  6F34               	movwf	_controller& (0+255),b
 13806                           
 13807                           ;fs_mcu.c: 67:     button_bounce_controller.menu = 0;
 13808  0048B6  0E00               	movlw	0
 13809  0048B8  6FA5               	movwf	_button_bounce_controller& (0+255),b
 13810                           
 13811                           ;fs_mcu.c: 68:     button_bounce_controller.pause = 0;
 13812  0048BA  0E00               	movlw	0
 13813  0048BC  6FA8               	movwf	(_button_bounce_controller+3)& (0+255),b
 13814                           
 13815                           ;fs_mcu.c: 69:     button_bounce_controller.start = 0;
 13816  0048BE  0E00               	movlw	0
 13817  0048C0  6FA6               	movwf	(_button_bounce_controller+1)& (0+255),b
 13818                           
 13819                           ;fs_mcu.c: 70:     button_bounce_controller.stop = 0;
 13820  0048C2  0E00               	movlw	0
 13821  0048C4  6FA7               	movwf	(_button_bounce_controller+2)& (0+255),b
 13822  0048C6                     
 13823                           ; BSR set to: 1
 13824                           ;fs_mcu.c: 71:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
 13825  0048C6  0E00               	movlw	0
 13826  0048C8  ECE8  F02C         	call	_eepromRead
 13827  0048CC  0100               	movlb	0	; () banked
 13828  0048CE  6FF3               	movwf	_menu_value& (0+255),b
 13829  0048D0                     
 13830                           ; BSR set to: 0
 13831                           ;fs_mcu.c: 72:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
 13832  0048D0  0E01               	movlw	1
 13833  0048D2  ECE8  F02C         	call	_eepromRead
 13834  0048D6  0100               	movlb	0	; () banked
 13835  0048D8  6FF4               	movwf	(_menu_value+1)& (0+255),b
 13836  0048DA                     
 13837                           ; BSR set to: 0
 13838                           ;fs_mcu.c: 73:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
 13839  0048DA  0E02               	movlw	2
 13840  0048DC  ECE8  F02C         	call	_eepromRead
 13841  0048E0  0100               	movlb	0	; () banked
 13842  0048E2  6FF5               	movwf	(_menu_value+2)& (0+255),b
 13843  0048E4                     
 13844                           ; BSR set to: 0
 13845                           ;fs_mcu.c: 75:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
 13846  0048E4  0E39               	movlw	57
 13847  0048E6  6E03               	movwf	(??_systemInit+1)^0,c
 13848  0048E8  0ED2               	movlw	210
 13849  0048EA  6E02               	movwf	??_systemInit^0,c
 13850  0048EC  0E4C               	movlw	76
 13851  0048EE                     u7947:
 13852  0048EE  2EE8               	decfsz	wreg,f,c
 13853  0048F0  D7FE               	bra	u7947
 13854  0048F2  2E02               	decfsz	??_systemInit^0,f,c
 13855  0048F4  D7FC               	bra	u7947
 13856  0048F6  2E03               	decfsz	(??_systemInit+1)^0,f,c
 13857  0048F8  D7FA               	bra	u7947
 13858  0048FA  D000               	nop2	
 13859  0048FC                     
 13860                           ;fs_mcu.c: 76:     timer_value.remainingMinute = menu_value.driver_time;
 13861  0048FC  C0F3  F19A         	movff	_menu_value,_timer_value+3
 13862  004900                     
 13863                           ;fs_mcu.c: 77:     timer_value.remainingSecond = 0;
 13864  004900  0E00               	movlw	0
 13865  004902  0101               	movlb	1	; () banked
 13866  004904  6F99               	movwf	(_timer_value+2)& (0+255),b
 13867  004906                     
 13868                           ; BSR set to: 1
 13869  004906  0012               	return		;funcret
 13870  004908                     __end_of_systemInit:
 13871                           	callstack 0
 13872                           
 13873 ;; *************** function _eepromRead *****************
 13874 ;; Defined at:
 13875 ;;		line 36 in file "fs_eeprom.c"
 13876 ;; Parameters:    Size  Location     Type
 13877 ;;  address         1    wreg     unsigned char 
 13878 ;; Auto vars:     Size  Location     Type
 13879 ;;  address         1    0[COMRAM] unsigned char 
 13880 ;; Return value:  Size  Location     Type
 13881 ;;                  1    wreg      unsigned char 
 13882 ;; Registers used:
 13883 ;;		wreg, status,2
 13884 ;; Tracked objects:
 13885 ;;		On entry : 0/0
 13886 ;;		On exit  : 0/0
 13887 ;;		Unchanged: 0/0
 13888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13889 ;;      Params:         0       0       0       0       0       0       0
 13890 ;;      Locals:         1       0       0       0       0       0       0
 13891 ;;      Temps:          0       0       0       0       0       0       0
 13892 ;;      Totals:         1       0       0       0       0       0       0
 13893 ;;Total ram usage:        1 bytes
 13894 ;; Hardware stack levels used:    1
 13895 ;; Hardware stack levels required when called:    1
 13896 ;; This function calls:
 13897 ;;		Nothing
 13898 ;; This function is called by:
 13899 ;;		_systemInit
 13900 ;; This function uses a non-reentrant model
 13901 ;;
 13902                           
 13903                           	psect	text57
 13904  0059D0                     __ptext57:
 13905                           	callstack 0
 13906  0059D0                     _eepromRead:
 13907                           	callstack 27
 13908                           
 13909                           ; BSR set to: 1
 13910                           ;incstack = 0
 13911                           ;eepromRead@address stored from wreg
 13912  0059D0  6E01               	movwf	eepromRead@address^0,c
 13913  0059D2                     
 13914                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 48
      +                          :     EEADR = (uint8_t)address;
 13915  0059D2  C001  FFA9         	movff	eepromRead@address,4009	;volatile
 13916  0059D6                     
 13917                           ;fs_eeprom.c: 50:     EECON1bits.EEPGD = 0;
 13918  0059D6  9EA6               	bcf	166,7,c	;volsfr
 13919  0059D8                     
 13920                           ;fs_eeprom.c: 51:     EECON1bits.CFGS = 0;
 13921  0059D8  9CA6               	bcf	166,6,c	;volsfr
 13922  0059DA                     
 13923                           ;fs_eeprom.c: 52:     EECON1bits.RD = 1;
 13924  0059DA  80A6               	bsf	166,0,c	;volsfr
 13925  0059DC                     l92:
 13926  0059DC  B0A6               	btfsc	166,0,c	;volsfr
 13927  0059DE  EFF3  F02C         	goto	u6901
 13928  0059E2  EFF5  F02C         	goto	u6900
 13929  0059E6                     u6901:
 13930  0059E6  EFEE  F02C         	goto	l92
 13931  0059EA                     u6900:
 13932  0059EA                     
 13933                           ;fs_eeprom.c: 58:     return EEDATA;
 13934  0059EA  50A8               	movf	168,w,c	;volatile
 13935  0059EC  0012               	return		;funcret
 13936  0059EE                     __end_of_eepromRead:
 13937                           	callstack 0
 13938                           
 13939 ;; *************** function _openLCD_Script *****************
 13940 ;; Defined at:
 13941 ;;		line 87 in file "fs_mcu.c"
 13942 ;; Parameters:    Size  Location     Type
 13943 ;;		None
 13944 ;; Auto vars:     Size  Location     Type
 13945 ;;		None
 13946 ;; Return value:  Size  Location     Type
 13947 ;;                  1    wreg      void 
 13948 ;; Registers used:
 13949 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 13950 ;; Tracked objects:
 13951 ;;		On entry : 0/0
 13952 ;;		On exit  : 0/0
 13953 ;;		Unchanged: 0/0
 13954 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13955 ;;      Params:         0       0       0       0       0       0       0
 13956 ;;      Locals:         0       0       0       0       0       0       0
 13957 ;;      Temps:          2       0       0       0       0       0       0
 13958 ;;      Totals:         2       0       0       0       0       0       0
 13959 ;;Total ram usage:        2 bytes
 13960 ;; Hardware stack levels used:    1
 13961 ;; Hardware stack levels required when called:    4
 13962 ;; This function calls:
 13963 ;;		_lcdClear
 13964 ;;		_lcdSetCursor
 13965 ;;		_lcdWriteString
 13966 ;; This function is called by:
 13967 ;;		_loopTaskInit
 13968 ;; This function uses a non-reentrant model
 13969 ;;
 13970                           
 13971                           	psect	text58
 13972  00555E                     __ptext58:
 13973                           	callstack 0
 13974  00555E                     _openLCD_Script:
 13975                           	callstack 25
 13976  00555E                     
 13977                           ;fs_mcu.c: 89:     lcdSetCursor(1,1);
 13978  00555E  0E01               	movlw	1
 13979  005560  6E04               	movwf	lcdSetCursor@b^0,c
 13980  005562  0E01               	movlw	1
 13981  005564  EC75  F029         	call	_lcdSetCursor
 13982  005568                     
 13983                           ;fs_mcu.c: 90:     lcdWriteString("   Ergin Oyun  ");
 13984  005568  0E89               	movlw	low STR_1
 13985  00556A  6E05               	movwf	lcdWriteString@a^0,c
 13986  00556C  0E06               	movlw	high STR_1
 13987  00556E  6E06               	movwf	(lcdWriteString@a+1)^0,c
 13988  005570  EC4C  F028         	call	_lcdWriteString	;wreg free
 13989  005574                     
 13990                           ;fs_mcu.c: 91:     lcdSetCursor(2,1);
 13991  005574  0E01               	movlw	1
 13992  005576  6E04               	movwf	lcdSetCursor@b^0,c
 13993  005578  0E02               	movlw	2
 13994  00557A  EC75  F029         	call	_lcdSetCursor
 13995                           
 13996                           ;fs_mcu.c: 92:     lcdWriteString(" iYi Eglenceler ");
 13997  00557E  0E68               	movlw	low STR_2
 13998  005580  6E05               	movwf	lcdWriteString@a^0,c
 13999  005582  0E06               	movlw	high STR_2
 14000  005584  6E06               	movwf	(lcdWriteString@a+1)^0,c
 14001  005586  EC4C  F028         	call	_lcdWriteString	;wreg free
 14002  00558A                     
 14003                           ;fs_mcu.c: 93:     _delay((unsigned long)((2500)*(64000000UL/4000.0)));
 14004  00558A  0ECB               	movlw	203
 14005  00558C  6E0C               	movwf	(??_openLCD_Script+1)^0,c
 14006  00558E  0EEC               	movlw	236
 14007  005590  6E0B               	movwf	??_openLCD_Script^0,c
 14008  005592  0E84               	movlw	132
 14009  005594                     u7957:
 14010  005594  2EE8               	decfsz	wreg,f,c
 14011  005596  D7FE               	bra	u7957
 14012  005598  2E0B               	decfsz	??_openLCD_Script^0,f,c
 14013  00559A  D7FC               	bra	u7957
 14014  00559C  2E0C               	decfsz	(??_openLCD_Script+1)^0,f,c
 14015  00559E  D7FA               	bra	u7957
 14016  0055A0  D000               	nop2	
 14017  0055A2                     
 14018                           ;fs_mcu.c: 94:     lcdClear();
 14019  0055A2  EC31  F02D         	call	_lcdClear	;wreg free
 14020  0055A6  0012               	return		;funcret
 14021  0055A8                     __end_of_openLCD_Script:
 14022                           	callstack 0
 14023                           
 14024 ;; *************** function _lcdWriteString *****************
 14025 ;; Defined at:
 14026 ;;		line 176 in file "fs_lcd.c"
 14027 ;; Parameters:    Size  Location     Type
 14028 ;;  a               2    4[COMRAM] PTR unsigned char 
 14029 ;;		 -> STR_12(17), driverTimeSettingMenu@textCursor2(16), STR_10(17), stopTimeSettingMenu@textCursor2(16), 
 14030 ;;		 -> STR_8(17), speedLimitSettingMenu@textCursor2(16), STR_6(17), STR_4(17), 
 14031 ;;		 -> secretMenu@textCursor2(16), STR_3(17), STR_2(17), STR_1(16), 
 14032 ;; Auto vars:     Size  Location     Type
 14033 ;;  i               2    8[COMRAM] int 
 14034 ;; Return value:  Size  Location     Type
 14035 ;;                  1    wreg      void 
 14036 ;; Registers used:
 14037 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14038 ;; Tracked objects:
 14039 ;;		On entry : 0/0
 14040 ;;		On exit  : 0/0
 14041 ;;		Unchanged: 0/0
 14042 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14043 ;;      Params:         2       0       0       0       0       0       0
 14044 ;;      Locals:         2       0       0       0       0       0       0
 14045 ;;      Temps:          2       0       0       0       0       0       0
 14046 ;;      Totals:         6       0       0       0       0       0       0
 14047 ;;Total ram usage:        6 bytes
 14048 ;; Hardware stack levels used:    1
 14049 ;; Hardware stack levels required when called:    3
 14050 ;; This function calls:
 14051 ;;		_lcdWriteChar
 14052 ;; This function is called by:
 14053 ;;		_openLCD_Script
 14054 ;;		_stopMenu
 14055 ;;		_secretMenu
 14056 ;;		_speedLimitSettingMenu
 14057 ;;		_stopTimeSettingMenu
 14058 ;;		_driverTimeSettingMenu
 14059 ;; This function uses a non-reentrant model
 14060 ;;
 14061                           
 14062                           	psect	text59
 14063  005098                     __ptext59:
 14064                           	callstack 0
 14065  005098                     _lcdWriteString:
 14066                           	callstack 24
 14067  005098                     
 14068                           ;fs_lcd.c: 176: void lcdWriteString(char *a);fs_lcd.c: 177: {;fs_lcd.c: 178:    int i;;f
      +                          s_lcd.c: 179:    for(i=0;a[i]!='\0';i++)
 14069  005098  0E00               	movlw	0
 14070  00509A  6E0A               	movwf	(lcdWriteString@i+1)^0,c
 14071  00509C  0E00               	movlw	0
 14072  00509E  6E09               	movwf	lcdWriteString@i^0,c
 14073  0050A0  EF6C  F028         	goto	l5870
 14074  0050A4                     l5866:
 14075                           
 14076                           ;fs_lcd.c: 180:    lcdWriteChar(a[i]);
 14077  0050A4  5009               	movf	lcdWriteString@i^0,w,c
 14078  0050A6  2405               	addwf	lcdWriteString@a^0,w,c
 14079  0050A8  6E07               	movwf	??_lcdWriteString^0,c
 14080  0050AA  500A               	movf	(lcdWriteString@i+1)^0,w,c
 14081  0050AC  2006               	addwfc	(lcdWriteString@a+1)^0,w,c
 14082  0050AE  6E08               	movwf	(??_lcdWriteString+1)^0,c
 14083  0050B0  C007  FFF6         	movff	??_lcdWriteString,tblptrl
 14084  0050B4  C008  FFF7         	movff	??_lcdWriteString+1,tblptrh
 14085  0050B8  6AF8               	clrf	tblptru,c
 14086  0050BA  0E05               	movlw	(high __ramtop+-1)
 14087  0050BC  64F7               	cpfsgt	tblptrh,c
 14088  0050BE  D003               	bra	u6877
 14089  0050C0  0008               	tblrd		*
 14090  0050C2  50F5               	movf	tablat,w,c
 14091  0050C4  D005               	bra	u6870
 14092  0050C6                     u6877:
 14093  0050C6  CFF6 FFE1          	movff	tblptrl,fsr1l
 14094  0050CA  CFF7 FFE2          	movff	tblptrh,fsr1h
 14095  0050CE  50E7               	movf	indf1,w,c
 14096  0050D0                     u6870:
 14097  0050D0  EC2A  F02C         	call	_lcdWriteChar
 14098  0050D4  4A09               	infsnz	lcdWriteString@i^0,f,c
 14099  0050D6  2A0A               	incf	(lcdWriteString@i+1)^0,f,c
 14100  0050D8                     l5870:
 14101  0050D8  5009               	movf	lcdWriteString@i^0,w,c
 14102  0050DA  2405               	addwf	lcdWriteString@a^0,w,c
 14103  0050DC  6E07               	movwf	??_lcdWriteString^0,c
 14104  0050DE  500A               	movf	(lcdWriteString@i+1)^0,w,c
 14105  0050E0  2006               	addwfc	(lcdWriteString@a+1)^0,w,c
 14106  0050E2  6E08               	movwf	(??_lcdWriteString+1)^0,c
 14107  0050E4  C007  FFF6         	movff	??_lcdWriteString,tblptrl
 14108  0050E8  C008  FFF7         	movff	??_lcdWriteString+1,tblptrh
 14109  0050EC  6AF8               	clrf	tblptru,c
 14110  0050EE  0E05               	movlw	(high __ramtop+-1)
 14111  0050F0  64F7               	cpfsgt	tblptrh,c
 14112  0050F2  D003               	bra	u6887
 14113  0050F4  0008               	tblrd		*
 14114  0050F6  50F5               	movf	tablat,w,c
 14115  0050F8  D005               	bra	u6880
 14116  0050FA                     u6887:
 14117  0050FA  CFF6 FFE1          	movff	tblptrl,fsr1l
 14118  0050FE  CFF7 FFE2          	movff	tblptrh,fsr1h
 14119  005102  50E7               	movf	indf1,w,c
 14120  005104                     u6880:
 14121  005104  0900               	iorlw	0
 14122  005106  A4D8               	btfss	status,2,c
 14123  005108  EF88  F028         	goto	u6891
 14124  00510C  EF8A  F028         	goto	u6890
 14125  005110                     u6891:
 14126  005110  EF52  F028         	goto	l5866
 14127  005114                     u6890:
 14128  005114  0012               	return		;funcret
 14129  005116                     __end_of_lcdWriteString:
 14130                           	callstack 0
 14131                           
 14132 ;; *************** function _lcdWriteChar *****************
 14133 ;; Defined at:
 14134 ;;		line 153 in file "fs_lcd.c"
 14135 ;; Parameters:    Size  Location     Type
 14136 ;;  a               1    wreg     unsigned char 
 14137 ;; Auto vars:     Size  Location     Type
 14138 ;;  a               1    3[COMRAM] unsigned char 
 14139 ;;  y               1    2[COMRAM] unsigned char 
 14140 ;;  temp            1    1[COMRAM] unsigned char 
 14141 ;; Return value:  Size  Location     Type
 14142 ;;                  1    wreg      void 
 14143 ;; Registers used:
 14144 ;;		wreg, status,2, status,0, cstack
 14145 ;; Tracked objects:
 14146 ;;		On entry : 0/0
 14147 ;;		On exit  : 0/0
 14148 ;;		Unchanged: 0/0
 14149 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14150 ;;      Params:         0       0       0       0       0       0       0
 14151 ;;      Locals:         3       0       0       0       0       0       0
 14152 ;;      Temps:          0       0       0       0       0       0       0
 14153 ;;      Totals:         3       0       0       0       0       0       0
 14154 ;;Total ram usage:        3 bytes
 14155 ;; Hardware stack levels used:    1
 14156 ;; Hardware stack levels required when called:    2
 14157 ;; This function calls:
 14158 ;;		_lcdPort
 14159 ;; This function is called by:
 14160 ;;		_lcdWriteString
 14161 ;; This function uses a non-reentrant model
 14162 ;;
 14163                           
 14164                           	psect	text60
 14165  005854                     __ptext60:
 14166                           	callstack 0
 14167  005854                     _lcdWriteChar:
 14168                           	callstack 24
 14169                           
 14170                           ;incstack = 0
 14171                           ;lcdWriteChar@a stored from wreg
 14172  005854  6E04               	movwf	lcdWriteChar@a^0,c
 14173  005856                     
 14174                           ;fs_lcd.c: 153: void lcdWriteChar(char a);fs_lcd.c: 154: {;fs_lcd.c: 155:    char temp,y
      +                          ;;fs_lcd.c: 156:    temp = a&0x0F;
 14175  005856  5004               	movf	lcdWriteChar@a^0,w,c
 14176  005858  0B0F               	andlw	15
 14177  00585A  6E02               	movwf	lcdWriteChar@temp^0,c
 14178                           
 14179                           ;fs_lcd.c: 157:    y = a&0xF0;
 14180  00585C  5004               	movf	lcdWriteChar@a^0,w,c
 14181  00585E  0BF0               	andlw	240
 14182  005860  6E03               	movwf	lcdWriteChar@y^0,c
 14183  005862                     
 14184                           ;fs_lcd.c: 158:    PORTDbits.RD6 = 1;
 14185  005862  8C83               	bsf	131,6,c	;volatile
 14186  005864                     
 14187                           ;fs_lcd.c: 159:    lcdPort(y>>4);
 14188  005864  3803               	swapf	lcdWriteChar@y^0,w,c
 14189  005866  0B0F               	andlw	15
 14190  005868  EC06  F02A         	call	_lcdPort
 14191  00586C                     
 14192                           ;fs_lcd.c: 160:    PORTDbits.RD7 = 1;
 14193  00586C  8E83               	bsf	131,7,c	;volatile
 14194  00586E                     
 14195                           ;fs_lcd.c: 161:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14196  00586E  0ED5               	movlw	213
 14197  005870                     u7967:
 14198  005870  2EE8               	decfsz	wreg,f,c
 14199  005872  D7FE               	bra	u7967
 14200  005874  F000               	nop	
 14201  005876                     
 14202                           ;fs_lcd.c: 162:    PORTDbits.RD7 = 0;
 14203  005876  9E83               	bcf	131,7,c	;volatile
 14204  005878                     
 14205                           ;fs_lcd.c: 163:    lcdPort(temp);
 14206  005878  5002               	movf	lcdWriteChar@temp^0,w,c
 14207  00587A  EC06  F02A         	call	_lcdPort
 14208  00587E                     
 14209                           ;fs_lcd.c: 164:    PORTDbits.RD7 = 1;
 14210  00587E  8E83               	bsf	131,7,c	;volatile
 14211  005880                     
 14212                           ;fs_lcd.c: 165:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14213  005880  0ED5               	movlw	213
 14214  005882                     u7977:
 14215  005882  2EE8               	decfsz	wreg,f,c
 14216  005884  D7FE               	bra	u7977
 14217  005886  F000               	nop	
 14218  005888                     
 14219                           ;fs_lcd.c: 166:    PORTDbits.RD7 = 0;
 14220  005888  9E83               	bcf	131,7,c	;volatile
 14221  00588A  0012               	return		;funcret
 14222  00588C                     __end_of_lcdWriteChar:
 14223                           	callstack 0
 14224                           
 14225 ;; *************** function _lcdSetCursor *****************
 14226 ;; Defined at:
 14227 ;;		line 83 in file "fs_lcd.c"
 14228 ;; Parameters:    Size  Location     Type
 14229 ;;  a               1    wreg     unsigned char 
 14230 ;;  b               1    3[COMRAM] unsigned char 
 14231 ;; Auto vars:     Size  Location     Type
 14232 ;;  a               1    4[COMRAM] unsigned char 
 14233 ;;  temp            1    7[COMRAM] unsigned char 
 14234 ;;  y               1    6[COMRAM] unsigned char 
 14235 ;;  z               1    5[COMRAM] unsigned char 
 14236 ;; Return value:  Size  Location     Type
 14237 ;;                  1    wreg      void 
 14238 ;; Registers used:
 14239 ;;		wreg, status,2, status,0, cstack
 14240 ;; Tracked objects:
 14241 ;;		On entry : 0/0
 14242 ;;		On exit  : 0/0
 14243 ;;		Unchanged: 0/0
 14244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14245 ;;      Params:         1       0       0       0       0       0       0
 14246 ;;      Locals:         4       0       0       0       0       0       0
 14247 ;;      Temps:          0       0       0       0       0       0       0
 14248 ;;      Totals:         5       0       0       0       0       0       0
 14249 ;;Total ram usage:        5 bytes
 14250 ;; Hardware stack levels used:    1
 14251 ;; Hardware stack levels required when called:    3
 14252 ;; This function calls:
 14253 ;;		_lcdCmd
 14254 ;; This function is called by:
 14255 ;;		_openLCD_Script
 14256 ;;		_stopMenu
 14257 ;;		_secretMenu
 14258 ;;		_speedLimitSettingMenu
 14259 ;;		_stopTimeSettingMenu
 14260 ;;		_driverTimeSettingMenu
 14261 ;; This function uses a non-reentrant model
 14262 ;;
 14263                           
 14264                           	psect	text61
 14265  0052EA                     __ptext61:
 14266                           	callstack 0
 14267  0052EA                     _lcdSetCursor:
 14268                           	callstack 24
 14269                           
 14270                           ;incstack = 0
 14271                           ;lcdSetCursor@a stored from wreg
 14272  0052EA  6E05               	movwf	lcdSetCursor@a^0,c
 14273  0052EC                     
 14274                           ;fs_lcd.c: 83: void lcdSetCursor(char a, char b);fs_lcd.c: 84: {;fs_lcd.c: 85:    char t
      +                          emp,z,y;;fs_lcd.c: 86:    if(a == 1)
 14275  0052EC  0405               	decf	lcdSetCursor@a^0,w,c
 14276  0052EE  A4D8               	btfss	status,2,c
 14277  0052F0  EF7C  F029         	goto	u6851
 14278  0052F4  EF7E  F029         	goto	u6850
 14279  0052F8                     u6851:
 14280  0052F8  EF8F  F029         	goto	l5856
 14281  0052FC                     u6850:
 14282  0052FC                     
 14283                           ;fs_lcd.c: 87:    {;fs_lcd.c: 88:      temp = 0x80 + b - 1;
 14284  0052FC  5004               	movf	lcdSetCursor@b^0,w,c
 14285  0052FE  0F7F               	addlw	127
 14286  005300  6E08               	movwf	lcdSetCursor@temp^0,c
 14287                           
 14288                           ;fs_lcd.c: 89:       z = temp>>4;
 14289  005302  3808               	swapf	lcdSetCursor@temp^0,w,c
 14290  005304  0B0F               	andlw	15
 14291  005306  6E06               	movwf	lcdSetCursor@z^0,c
 14292                           
 14293                           ;fs_lcd.c: 90:       y = temp & 0x0F;
 14294  005308  5008               	movf	lcdSetCursor@temp^0,w,c
 14295  00530A  0B0F               	andlw	15
 14296  00530C  6E07               	movwf	lcdSetCursor@y^0,c
 14297  00530E                     
 14298                           ;fs_lcd.c: 91:       lcdCmd(z);
 14299  00530E  5006               	movf	lcdSetCursor@z^0,w,c
 14300  005310  ECF7  F02C         	call	_lcdCmd
 14301  005314                     
 14302                           ;fs_lcd.c: 92:       lcdCmd(y);
 14303  005314  5007               	movf	lcdSetCursor@y^0,w,c
 14304  005316  ECF7  F02C         	call	_lcdCmd
 14305                           
 14306                           ;fs_lcd.c: 93:    }
 14307  00531A  EFA7  F029         	goto	l172
 14308  00531E                     l5856:
 14309  00531E  0E02               	movlw	2
 14310  005320  1805               	xorwf	lcdSetCursor@a^0,w,c
 14311  005322  A4D8               	btfss	status,2,c
 14312  005324  EF96  F029         	goto	u6861
 14313  005328  EF98  F029         	goto	u6860
 14314  00532C                     u6861:
 14315  00532C  EFA7  F029         	goto	l172
 14316  005330                     u6860:
 14317  005330                     
 14318                           ;fs_lcd.c: 95:    {;fs_lcd.c: 96:       temp = 0xC0 + b - 1;
 14319  005330  5004               	movf	lcdSetCursor@b^0,w,c
 14320  005332  0FBF               	addlw	191
 14321  005334  6E08               	movwf	lcdSetCursor@temp^0,c
 14322                           
 14323                           ;fs_lcd.c: 97:       z = temp>>4;
 14324  005336  3808               	swapf	lcdSetCursor@temp^0,w,c
 14325  005338  0B0F               	andlw	15
 14326  00533A  6E06               	movwf	lcdSetCursor@z^0,c
 14327                           
 14328                           ;fs_lcd.c: 98:       y = temp & 0x0F;
 14329  00533C  5008               	movf	lcdSetCursor@temp^0,w,c
 14330  00533E  0B0F               	andlw	15
 14331  005340  6E07               	movwf	lcdSetCursor@y^0,c
 14332  005342                     
 14333                           ;fs_lcd.c: 99:       lcdCmd(z);
 14334  005342  5006               	movf	lcdSetCursor@z^0,w,c
 14335  005344  ECF7  F02C         	call	_lcdCmd
 14336  005348                     
 14337                           ;fs_lcd.c: 100:       lcdCmd(y);
 14338  005348  5007               	movf	lcdSetCursor@y^0,w,c
 14339  00534A  ECF7  F02C         	call	_lcdCmd
 14340  00534E                     l172:
 14341  00534E  0012               	return		;funcret
 14342  005350                     __end_of_lcdSetCursor:
 14343                           	callstack 0
 14344                           
 14345 ;; *************** function _lcdClear *****************
 14346 ;; Defined at:
 14347 ;;		line 72 in file "fs_lcd.c"
 14348 ;; Parameters:    Size  Location     Type
 14349 ;;		None
 14350 ;; Auto vars:     Size  Location     Type
 14351 ;;		None
 14352 ;; Return value:  Size  Location     Type
 14353 ;;                  1    wreg      void 
 14354 ;; Registers used:
 14355 ;;		wreg, status,2, cstack
 14356 ;; Tracked objects:
 14357 ;;		On entry : 0/0
 14358 ;;		On exit  : 0/0
 14359 ;;		Unchanged: 0/0
 14360 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14361 ;;      Params:         0       0       0       0       0       0       0
 14362 ;;      Locals:         0       0       0       0       0       0       0
 14363 ;;      Temps:          0       0       0       0       0       0       0
 14364 ;;      Totals:         0       0       0       0       0       0       0
 14365 ;;Total ram usage:        0 bytes
 14366 ;; Hardware stack levels used:    1
 14367 ;; Hardware stack levels required when called:    3
 14368 ;; This function calls:
 14369 ;;		_lcdCmd
 14370 ;; This function is called by:
 14371 ;;		_loopTaskInit
 14372 ;;		_openLCD_Script
 14373 ;;		_mainMenu
 14374 ;; This function uses a non-reentrant model
 14375 ;;
 14376                           
 14377                           	psect	text62
 14378  005A62                     __ptext62:
 14379                           	callstack 0
 14380  005A62                     _lcdClear:
 14381                           	callstack 24
 14382  005A62                     
 14383                           ;fs_lcd.c: 74:    lcdCmd(0);
 14384  005A62  0E00               	movlw	0
 14385  005A64  ECF7  F02C         	call	_lcdCmd
 14386                           
 14387                           ;fs_lcd.c: 75:    lcdCmd(1);
 14388  005A68  0E01               	movlw	1
 14389  005A6A  ECF7  F02C         	call	_lcdCmd
 14390  005A6E  0012               	return		;funcret
 14391  005A70                     __end_of_lcdClear:
 14392                           	callstack 0
 14393                           
 14394 ;; *************** function _menuInitialize *****************
 14395 ;; Defined at:
 14396 ;;		line 35 in file "fs_menu_controller.c"
 14397 ;; Parameters:    Size  Location     Type
 14398 ;;		None
 14399 ;; Auto vars:     Size  Location     Type
 14400 ;;		None
 14401 ;; Return value:  Size  Location     Type
 14402 ;;                  1    wreg      void 
 14403 ;; Registers used:
 14404 ;;		None
 14405 ;; Tracked objects:
 14406 ;;		On entry : 0/0
 14407 ;;		On exit  : 0/0
 14408 ;;		Unchanged: 0/0
 14409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14410 ;;      Params:         0       0       0       0       0       0       0
 14411 ;;      Locals:         0       0       0       0       0       0       0
 14412 ;;      Temps:          0       0       0       0       0       0       0
 14413 ;;      Totals:         0       0       0       0       0       0       0
 14414 ;;Total ram usage:        0 bytes
 14415 ;; Hardware stack levels used:    1
 14416 ;; Hardware stack levels required when called:    1
 14417 ;; This function calls:
 14418 ;;		Nothing
 14419 ;; This function is called by:
 14420 ;;		_loopTaskInit
 14421 ;; This function uses a non-reentrant model
 14422 ;;
 14423                           
 14424                           	psect	text63
 14425  00595A                     __ptext63:
 14426                           	callstack 0
 14427  00595A                     _menuInitialize:
 14428                           	callstack 28
 14429  00595A                     
 14430                           ;fs_menu_controller.c: 38:     TRISBbits.RB6 = 1;
 14431  00595A  8C93               	bsf	147,6,c	;volatile
 14432                           
 14433                           ;fs_menu_controller.c: 41:     TRISBbits.RB7 = 1;
 14434  00595C  8E93               	bsf	147,7,c	;volatile
 14435                           
 14436                           ;fs_menu_controller.c: 43:     ANSELDbits.ANSD4 = 0;
 14437  00595E  010F               	movlb	15	; () banked
 14438  005960  993B               	bcf	59,4,b	;volatile
 14439                           
 14440                           ;fs_menu_controller.c: 44:     TRISDbits.RD4 = 1;
 14441  005962  8895               	bsf	149,4,c	;volatile
 14442                           
 14443                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD0 = 0;
 14444  005964  913B               	bcf	59,0,b	;volatile
 14445                           
 14446                           ;fs_menu_controller.c: 47:     TRISDbits.RD0 = 1;
 14447  005966  8095               	bsf	149,0,c	;volatile
 14448                           
 14449                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD1 = 0;
 14450  005968  933B               	bcf	59,1,b	;volatile
 14451                           
 14452                           ;fs_menu_controller.c: 50:     TRISDbits.RD1 = 1;
 14453  00596A  8295               	bsf	149,1,c	;volatile
 14454                           
 14455                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD2 = 0;
 14456  00596C  953B               	bcf	59,2,b	;volatile
 14457                           
 14458                           ;fs_menu_controller.c: 53:     TRISDbits.RD2 = 1;
 14459  00596E  8495               	bsf	149,2,c	;volatile
 14460                           
 14461                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD3 = 0;
 14462  005970  973B               	bcf	59,3,b	;volatile
 14463                           
 14464                           ;fs_menu_controller.c: 56:     TRISDbits.RD3 = 1;
 14465  005972  8695               	bsf	149,3,c	;volatile
 14466                           
 14467                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD5 = 0;
 14468  005974  9B3B               	bcf	59,5,b	;volatile
 14469                           
 14470                           ;fs_menu_controller.c: 59:     TRISDbits.RD5 = 0;
 14471  005976  9A95               	bcf	149,5,c	;volatile
 14472                           
 14473                           ;fs_menu_controller.c: 61:     ANSELCbits.ANSC5 = 0;
 14474  005978  9B3A               	bcf	58,5,b	;volatile
 14475                           
 14476                           ;fs_menu_controller.c: 62:     TRISCbits.RC5 = 0;
 14477  00597A  9A94               	bcf	148,5,c	;volatile
 14478                           
 14479                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC4 = 0;
 14480  00597C  993A               	bcf	58,4,b	;volatile
 14481                           
 14482                           ;fs_menu_controller.c: 65:     TRISCbits.RC4 = 0;
 14483  00597E  9894               	bcf	148,4,c	;volatile
 14484  005980                     
 14485                           ; BSR set to: 15
 14486  005980  0012               	return		;funcret
 14487  005982                     __end_of_menuInitialize:
 14488                           	callstack 0
 14489                           
 14490 ;; *************** function _mcuInit *****************
 14491 ;; Defined at:
 14492 ;;		line 35 in file "fs_mcu.c"
 14493 ;; Parameters:    Size  Location     Type
 14494 ;;		None
 14495 ;; Auto vars:     Size  Location     Type
 14496 ;;		None
 14497 ;; Return value:  Size  Location     Type
 14498 ;;                  1    wreg      void 
 14499 ;; Registers used:
 14500 ;;		wreg, status,2
 14501 ;; Tracked objects:
 14502 ;;		On entry : 0/0
 14503 ;;		On exit  : 0/0
 14504 ;;		Unchanged: 0/0
 14505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14506 ;;      Params:         0       0       0       0       0       0       0
 14507 ;;      Locals:         0       0       0       0       0       0       0
 14508 ;;      Temps:          0       0       0       0       0       0       0
 14509 ;;      Totals:         0       0       0       0       0       0       0
 14510 ;;Total ram usage:        0 bytes
 14511 ;; Hardware stack levels used:    1
 14512 ;; Hardware stack levels required when called:    1
 14513 ;; This function calls:
 14514 ;;		Nothing
 14515 ;; This function is called by:
 14516 ;;		_loopTaskInit
 14517 ;; This function uses a non-reentrant model
 14518 ;;
 14519                           
 14520                           	psect	text64
 14521  005A26                     __ptext64:
 14522                           	callstack 0
 14523  005A26                     _mcuInit:
 14524                           	callstack 28
 14525  005A26                     
 14526                           ;fs_mcu.c: 37:    OSCCONbits.IRCF = 0b111;
 14527  005A26  0E70               	movlw	112
 14528  005A28  12D3               	iorwf	211,f,c	;volatile
 14529  005A2A                     
 14530                           ;fs_mcu.c: 38:    OSCTUNEbits.PLLEN = 0b1;
 14531  005A2A  8C9B               	bsf	155,6,c	;volatile
 14532  005A2C                     l319:
 14533  005A2C  A4D3               	btfss	211,2,c	;volatile
 14534  005A2E  EF1B  F02D         	goto	u3561
 14535  005A32  EF1D  F02D         	goto	u3560
 14536  005A36                     u3561:
 14537  005A36  EF16  F02D         	goto	l319
 14538  005A3A                     u3560:
 14539  005A3A  0012               	return		;funcret
 14540  005A3C                     __end_of_mcuInit:
 14541                           	callstack 0
 14542                           
 14543 ;; *************** function _lcdInit *****************
 14544 ;; Defined at:
 14545 ;;		line 109 in file "fs_lcd.c"
 14546 ;; Parameters:    Size  Location     Type
 14547 ;;		None
 14548 ;; Auto vars:     Size  Location     Type
 14549 ;;		None
 14550 ;; Return value:  Size  Location     Type
 14551 ;;                  1    wreg      void 
 14552 ;; Registers used:
 14553 ;;		wreg, status,2, cstack
 14554 ;; Tracked objects:
 14555 ;;		On entry : 0/0
 14556 ;;		On exit  : 0/0
 14557 ;;		Unchanged: 0/0
 14558 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14559 ;;      Params:         0       0       0       0       0       0       0
 14560 ;;      Locals:         0       0       0       0       0       0       0
 14561 ;;      Temps:          2       0       0       0       0       0       0
 14562 ;;      Totals:         2       0       0       0       0       0       0
 14563 ;;Total ram usage:        2 bytes
 14564 ;; Hardware stack levels used:    1
 14565 ;; Hardware stack levels required when called:    3
 14566 ;; This function calls:
 14567 ;;		_lcdCmd
 14568 ;;		_lcdPort
 14569 ;; This function is called by:
 14570 ;;		_loopTaskInit
 14571 ;; This function uses a non-reentrant model
 14572 ;;
 14573                           
 14574                           	psect	text65
 14575  004EE2                     __ptext65:
 14576                           	callstack 0
 14577  004EE2                     _lcdInit:
 14578                           	callstack 26
 14579  004EE2                     
 14580                           ;fs_lcd.c: 111:     TRISDbits.RD6 = 0;
 14581  004EE2  9C95               	bcf	149,6,c	;volatile
 14582                           
 14583                           ;fs_lcd.c: 112:     ANSELDbits.ANSD6 = 0;
 14584  004EE4  010F               	movlb	15	; () banked
 14585  004EE6  9D3B               	bcf	59,6,b	;volatile
 14586                           
 14587                           ;fs_lcd.c: 114:     TRISDbits.RD7 = 0;
 14588  004EE8  9E95               	bcf	149,7,c	;volatile
 14589                           
 14590                           ;fs_lcd.c: 115:     ANSELDbits.ANSD7 = 0;
 14591  004EEA  9F3B               	bcf	59,7,b	;volatile
 14592                           
 14593                           ;fs_lcd.c: 117:     TRISBbits.RB0 = 0;
 14594  004EEC  9093               	bcf	147,0,c	;volatile
 14595                           
 14596                           ;fs_lcd.c: 118:     ANSELBbits.ANSB0 = 0;
 14597  004EEE  9139               	bcf	57,0,b	;volatile
 14598                           
 14599                           ;fs_lcd.c: 120:     TRISBbits.RB1 = 0;
 14600  004EF0  9293               	bcf	147,1,c	;volatile
 14601                           
 14602                           ;fs_lcd.c: 121:     ANSELBbits.ANSB1 = 0;
 14603  004EF2  9339               	bcf	57,1,b	;volatile
 14604                           
 14605                           ;fs_lcd.c: 123:     TRISBbits.RB2 = 0;
 14606  004EF4  9493               	bcf	147,2,c	;volatile
 14607                           
 14608                           ;fs_lcd.c: 124:     ANSELBbits.ANSB2 = 0;
 14609  004EF6  9539               	bcf	57,2,b	;volatile
 14610                           
 14611                           ;fs_lcd.c: 126:     TRISBbits.RB3 = 0;
 14612  004EF8  9693               	bcf	147,3,c	;volatile
 14613                           
 14614                           ;fs_lcd.c: 127:     ANSELBbits.ANSB3 = 0;
 14615  004EFA  9739               	bcf	57,3,b	;volatile
 14616  004EFC                     
 14617                           ; BSR set to: 15
 14618                           ;fs_lcd.c: 130:     lcdPort(0x00);
 14619  004EFC  0E00               	movlw	0
 14620  004EFE  EC06  F02A         	call	_lcdPort
 14621  004F02                     
 14622                           ;fs_lcd.c: 131:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14623  004F02  0E02               	movlw	2
 14624  004F04  6E05               	movwf	(??_lcdInit+1)^0,c
 14625  004F06  0EA0               	movlw	160
 14626  004F08  6E04               	movwf	??_lcdInit^0,c
 14627  004F0A  0E92               	movlw	146
 14628  004F0C                     u7987:
 14629  004F0C  2EE8               	decfsz	wreg,f,c
 14630  004F0E  D7FE               	bra	u7987
 14631  004F10  2E04               	decfsz	??_lcdInit^0,f,c
 14632  004F12  D7FC               	bra	u7987
 14633  004F14  2E05               	decfsz	(??_lcdInit+1)^0,f,c
 14634  004F16  D7FA               	bra	u7987
 14635  004F18  D000               	nop2	
 14636  004F1A                     
 14637                           ;fs_lcd.c: 132:     lcdCmd(0x03);
 14638  004F1A  0E03               	movlw	3
 14639  004F1C  ECF7  F02C         	call	_lcdCmd
 14640  004F20                     
 14641                           ;fs_lcd.c: 133:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14642  004F20  0E68               	movlw	104
 14643  004F22  6E04               	movwf	??_lcdInit^0,c
 14644  004F24  0EE4               	movlw	228
 14645  004F26                     u7997:
 14646  004F26  2EE8               	decfsz	wreg,f,c
 14647  004F28  D7FE               	bra	u7997
 14648  004F2A  2E04               	decfsz	??_lcdInit^0,f,c
 14649  004F2C  D7FC               	bra	u7997
 14650  004F2E  D000               	nop2	
 14651  004F30                     
 14652                           ;fs_lcd.c: 134:     lcdCmd(0x03);
 14653  004F30  0E03               	movlw	3
 14654  004F32  ECF7  F02C         	call	_lcdCmd
 14655  004F36                     
 14656                           ;fs_lcd.c: 135:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14657  004F36  0EE5               	movlw	229
 14658  004F38  6E04               	movwf	??_lcdInit^0,c
 14659  004F3A  0E91               	movlw	145
 14660  004F3C                     u8007:
 14661  004F3C  2EE8               	decfsz	wreg,f,c
 14662  004F3E  D7FE               	bra	u8007
 14663  004F40  2E04               	decfsz	??_lcdInit^0,f,c
 14664  004F42  D7FC               	bra	u8007
 14665  004F44  F000               	nop	
 14666  004F46                     
 14667                           ;fs_lcd.c: 136:     lcdCmd(0x03);
 14668  004F46  0E03               	movlw	3
 14669  004F48  ECF7  F02C         	call	_lcdCmd
 14670  004F4C                     
 14671                           ;fs_lcd.c: 137:     lcdCmd(0x02);
 14672  004F4C  0E02               	movlw	2
 14673  004F4E  ECF7  F02C         	call	_lcdCmd
 14674  004F52                     
 14675                           ;fs_lcd.c: 138:     lcdCmd(0x02);
 14676  004F52  0E02               	movlw	2
 14677  004F54  ECF7  F02C         	call	_lcdCmd
 14678  004F58                     
 14679                           ;fs_lcd.c: 139:     lcdCmd(0x08);
 14680  004F58  0E08               	movlw	8
 14681  004F5A  ECF7  F02C         	call	_lcdCmd
 14682  004F5E                     
 14683                           ;fs_lcd.c: 140:     lcdCmd(0x00);
 14684  004F5E  0E00               	movlw	0
 14685  004F60  ECF7  F02C         	call	_lcdCmd
 14686  004F64                     
 14687                           ;fs_lcd.c: 141:     lcdCmd(0x0C);
 14688  004F64  0E0C               	movlw	12
 14689  004F66  ECF7  F02C         	call	_lcdCmd
 14690  004F6A                     
 14691                           ;fs_lcd.c: 142:     lcdCmd(0x00);
 14692  004F6A  0E00               	movlw	0
 14693  004F6C  ECF7  F02C         	call	_lcdCmd
 14694  004F70                     
 14695                           ;fs_lcd.c: 143:     lcdCmd(0x06);
 14696  004F70  0E06               	movlw	6
 14697  004F72  ECF7  F02C         	call	_lcdCmd
 14698  004F76  0012               	return		;funcret
 14699  004F78                     __end_of_lcdInit:
 14700                           	callstack 0
 14701                           
 14702 ;; *************** function _lcdCmd *****************
 14703 ;; Defined at:
 14704 ;;		line 56 in file "fs_lcd.c"
 14705 ;; Parameters:    Size  Location     Type
 14706 ;;  a               1    wreg     unsigned char 
 14707 ;; Auto vars:     Size  Location     Type
 14708 ;;  a               1    2[COMRAM] unsigned char 
 14709 ;; Return value:  Size  Location     Type
 14710 ;;                  1    wreg      void 
 14711 ;; Registers used:
 14712 ;;		wreg, status,2, cstack
 14713 ;; Tracked objects:
 14714 ;;		On entry : 0/0
 14715 ;;		On exit  : 0/0
 14716 ;;		Unchanged: 0/0
 14717 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14718 ;;      Params:         0       0       0       0       0       0       0
 14719 ;;      Locals:         1       0       0       0       0       0       0
 14720 ;;      Temps:          1       0       0       0       0       0       0
 14721 ;;      Totals:         2       0       0       0       0       0       0
 14722 ;;Total ram usage:        2 bytes
 14723 ;; Hardware stack levels used:    1
 14724 ;; Hardware stack levels required when called:    2
 14725 ;; This function calls:
 14726 ;;		_lcdPort
 14727 ;; This function is called by:
 14728 ;;		_lcdClear
 14729 ;;		_lcdSetCursor
 14730 ;;		_lcdInit
 14731 ;;		_lcdShiftRight
 14732 ;;		_lcdShiftLeft
 14733 ;; This function uses a non-reentrant model
 14734 ;;
 14735                           
 14736                           	psect	text66
 14737  0059EE                     __ptext66:
 14738                           	callstack 0
 14739  0059EE                     _lcdCmd:
 14740                           	callstack 24
 14741                           
 14742                           ;incstack = 0
 14743                           ;lcdCmd@a stored from wreg
 14744  0059EE  6E03               	movwf	lcdCmd@a^0,c
 14745  0059F0                     
 14746                           ;fs_lcd.c: 56: void lcdCmd(char a);fs_lcd.c: 57: {;fs_lcd.c: 58:    PORTDbits.RD6 = 0;
 14747  0059F0  9C83               	bcf	131,6,c	;volatile
 14748  0059F2                     
 14749                           ;fs_lcd.c: 59:    lcdPort(a);
 14750  0059F2  5003               	movf	lcdCmd@a^0,w,c
 14751  0059F4  EC06  F02A         	call	_lcdPort
 14752  0059F8                     
 14753                           ;fs_lcd.c: 60:    PORTDbits.RD7 = 1;
 14754  0059F8  8E83               	bsf	131,7,c	;volatile
 14755  0059FA                     
 14756                           ;fs_lcd.c: 61:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 14757  0059FA  0E2A               	movlw	42
 14758  0059FC  6E02               	movwf	??_lcdCmd^0,c
 14759  0059FE  0E8E               	movlw	142
 14760  005A00                     u8017:
 14761  005A00  2EE8               	decfsz	wreg,f,c
 14762  005A02  D7FE               	bra	u8017
 14763  005A04  2E02               	decfsz	??_lcdCmd^0,f,c
 14764  005A06  D7FC               	bra	u8017
 14765  005A08                     
 14766                           ;fs_lcd.c: 62:    PORTDbits.RD7 = 0;
 14767  005A08  9E83               	bcf	131,7,c	;volatile
 14768  005A0A  0012               	return		;funcret
 14769  005A0C                     __end_of_lcdCmd:
 14770                           	callstack 0
 14771                           
 14772 ;; *************** function _lcdPort *****************
 14773 ;; Defined at:
 14774 ;;		line 33 in file "fs_lcd.c"
 14775 ;; Parameters:    Size  Location     Type
 14776 ;;  a               1    wreg     unsigned char 
 14777 ;; Auto vars:     Size  Location     Type
 14778 ;;  a               1    0[COMRAM] unsigned char 
 14779 ;; Return value:  Size  Location     Type
 14780 ;;                  1    wreg      void 
 14781 ;; Registers used:
 14782 ;;		wreg
 14783 ;; Tracked objects:
 14784 ;;		On entry : 0/0
 14785 ;;		On exit  : 0/0
 14786 ;;		Unchanged: 0/0
 14787 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14788 ;;      Params:         0       0       0       0       0       0       0
 14789 ;;      Locals:         1       0       0       0       0       0       0
 14790 ;;      Temps:          0       0       0       0       0       0       0
 14791 ;;      Totals:         1       0       0       0       0       0       0
 14792 ;;Total ram usage:        1 bytes
 14793 ;; Hardware stack levels used:    1
 14794 ;; Hardware stack levels required when called:    1
 14795 ;; This function calls:
 14796 ;;		Nothing
 14797 ;; This function is called by:
 14798 ;;		_lcdCmd
 14799 ;;		_lcdInit
 14800 ;;		_lcdWriteChar
 14801 ;; This function uses a non-reentrant model
 14802 ;;
 14803                           
 14804                           	psect	text67
 14805  00540C                     __ptext67:
 14806                           	callstack 0
 14807  00540C                     _lcdPort:
 14808                           	callstack 24
 14809                           
 14810                           ;incstack = 0
 14811                           ;lcdPort@a stored from wreg
 14812  00540C  6E01               	movwf	lcdPort@a^0,c
 14813  00540E                     
 14814                           ;fs_lcd.c: 33: void lcdPort(char a);fs_lcd.c: 34: {;fs_lcd.c: 35:    if(a & 1) { PORTBbi
      +                          ts.RB0 = 1;}
 14815  00540E  A001               	btfss	lcdPort@a^0,0,c
 14816  005410  EF0C  F02A         	goto	u6391
 14817  005414  EF0E  F02A         	goto	u6390
 14818  005418                     u6391:
 14819  005418  EF11  F02A         	goto	l152
 14820  00541C                     u6390:
 14821  00541C  8081               	bsf	129,0,c	;volatile
 14822  00541E  EF12  F02A         	goto	l5476
 14823  005422                     l152:
 14824  005422  9081               	bcf	129,0,c	;volatile
 14825  005424                     l5476:
 14826                           
 14827                           ;fs_lcd.c: 38:    if(a & 2) { PORTBbits.RB1 = 1;}
 14828  005424  A201               	btfss	lcdPort@a^0,1,c
 14829  005426  EF17  F02A         	goto	u6401
 14830  00542A  EF19  F02A         	goto	u6400
 14831  00542E                     u6401:
 14832  00542E  EF1C  F02A         	goto	l154
 14833  005432                     u6400:
 14834  005432  8281               	bsf	129,1,c	;volatile
 14835  005434  EF1D  F02A         	goto	l5480
 14836  005438                     l154:
 14837  005438  9281               	bcf	129,1,c	;volatile
 14838  00543A                     l5480:
 14839                           
 14840                           ;fs_lcd.c: 41:    if(a & 4) {PORTBbits.RB2 = 1;}
 14841  00543A  A401               	btfss	lcdPort@a^0,2,c
 14842  00543C  EF22  F02A         	goto	u6411
 14843  005440  EF24  F02A         	goto	u6410
 14844  005444                     u6411:
 14845  005444  EF27  F02A         	goto	l156
 14846  005448                     u6410:
 14847  005448  8481               	bsf	129,2,c	;volatile
 14848  00544A  EF28  F02A         	goto	l5484
 14849  00544E                     l156:
 14850  00544E  9481               	bcf	129,2,c	;volatile
 14851  005450                     l5484:
 14852                           
 14853                           ;fs_lcd.c: 44:    if(a & 8) {PORTBbits.RB3 = 1;}
 14854  005450  A601               	btfss	lcdPort@a^0,3,c
 14855  005452  EF2D  F02A         	goto	u6421
 14856  005456  EF2F  F02A         	goto	u6420
 14857  00545A                     u6421:
 14858  00545A  EF32  F02A         	goto	l158
 14859  00545E                     u6420:
 14860  00545E  8681               	bsf	129,3,c	;volatile
 14861  005460  EF33  F02A         	goto	l160
 14862  005464                     l158:
 14863  005464  9681               	bcf	129,3,c	;volatile
 14864  005466                     l160:
 14865  005466  0012               	return		;funcret
 14866  005468                     __end_of_lcdPort:
 14867                           	callstack 0
 14868                           
 14869 ;; *************** function _adcInit *****************
 14870 ;; Defined at:
 14871 ;;		line 53 in file "fs_adc.c"
 14872 ;; Parameters:    Size  Location     Type
 14873 ;;		None
 14874 ;; Auto vars:     Size  Location     Type
 14875 ;;		None
 14876 ;; Return value:  Size  Location     Type
 14877 ;;                  1    wreg      void 
 14878 ;; Registers used:
 14879 ;;		wreg, status,2
 14880 ;; Tracked objects:
 14881 ;;		On entry : 0/0
 14882 ;;		On exit  : 0/0
 14883 ;;		Unchanged: 0/0
 14884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14885 ;;      Params:         0       0       0       0       0       0       0
 14886 ;;      Locals:         0       0       0       0       0       0       0
 14887 ;;      Temps:          0       0       0       0       0       0       0
 14888 ;;      Totals:         0       0       0       0       0       0       0
 14889 ;;Total ram usage:        0 bytes
 14890 ;; Hardware stack levels used:    1
 14891 ;; Hardware stack levels required when called:    1
 14892 ;; This function calls:
 14893 ;;		Nothing
 14894 ;; This function is called by:
 14895 ;;		_loopTaskInit
 14896 ;; This function uses a non-reentrant model
 14897 ;;
 14898                           
 14899                           	psect	text68
 14900  005732                     __ptext68:
 14901                           	callstack 0
 14902  005732                     _adcInit:
 14903                           	callstack 28
 14904  005732                     
 14905                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 14906  005732  8092               	bsf	146,0,c	;volatile
 14907                           
 14908                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 14909  005734  010F               	movlb	15	; () banked
 14910  005736  8138               	bsf	56,0,b	;volatile
 14911                           
 14912                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 14913  005738  8292               	bsf	146,1,c	;volatile
 14914                           
 14915                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 14916  00573A  8338               	bsf	56,1,b	;volatile
 14917                           
 14918                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 14919  00573C  8492               	bsf	146,2,c	;volatile
 14920                           
 14921                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 14922  00573E  8538               	bsf	56,2,b	;volatile
 14923                           
 14924                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 14925  005740  8692               	bsf	146,3,c	;volatile
 14926                           
 14927                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 14928  005742  8738               	bsf	56,3,b	;volatile
 14929                           
 14930                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 14931  005744  8A92               	bsf	146,5,c	;volatile
 14932                           
 14933                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 14934  005746  8B38               	bsf	56,5,b	;volatile
 14935                           
 14936                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 14937  005748  8096               	bsf	150,0,c	;volatile
 14938                           
 14939                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 14940  00574A  813C               	bsf	60,0,b	;volatile
 14941                           
 14942                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 14943  00574C  8296               	bsf	150,1,c	;volatile
 14944                           
 14945                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 14946  00574E  833C               	bsf	60,1,b	;volatile
 14947                           
 14948                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 14949  005750  8496               	bsf	150,2,c	;volatile
 14950                           
 14951                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 14952  005752  853C               	bsf	60,2,b	;volatile
 14953  005754                     
 14954                           ; BSR set to: 15
 14955                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 14956  005754  0E01               	movlw	1
 14957  005756  6EC2               	movwf	194,c	;volatile
 14958                           
 14959                           ;fs_adc.c: 80:     ADCON1=0x00;
 14960  005758  0E00               	movlw	0
 14961  00575A  6EC1               	movwf	193,c	;volatile
 14962  00575C                     
 14963                           ; BSR set to: 15
 14964                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 14965  00575C  8EC0               	bsf	192,7,c	;volatile
 14966                           
 14967                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 14968  00575E  50C0               	movf	192,w,c	;volatile
 14969  005760  0BC7               	andlw	-57
 14970  005762  0910               	iorlw	16
 14971  005764  6EC0               	movwf	192,c	;volatile
 14972                           
 14973                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 14974  005766  50C0               	movf	192,w,c	;volatile
 14975  005768  0BF8               	andlw	-8
 14976  00576A  0906               	iorlw	6
 14977  00576C  6EC0               	movwf	192,c	;volatile
 14978  00576E                     
 14979                           ; BSR set to: 15
 14980  00576E  0012               	return		;funcret
 14981  005770                     __end_of_adcInit:
 14982                           	callstack 0
 14983                           
 14984 ;; *************** function _PWM_Init *****************
 14985 ;; Defined at:
 14986 ;;		line 34 in file "fs_pwm.c"
 14987 ;; Parameters:    Size  Location     Type
 14988 ;;		None
 14989 ;; Auto vars:     Size  Location     Type
 14990 ;;		None
 14991 ;; Return value:  Size  Location     Type
 14992 ;;                  1    wreg      void 
 14993 ;; Registers used:
 14994 ;;		wreg, status,2
 14995 ;; Tracked objects:
 14996 ;;		On entry : 0/0
 14997 ;;		On exit  : 0/0
 14998 ;;		Unchanged: 0/0
 14999 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15000 ;;      Params:         0       0       0       0       0       0       0
 15001 ;;      Locals:         0       0       0       0       0       0       0
 15002 ;;      Temps:          0       0       0       0       0       0       0
 15003 ;;      Totals:         0       0       0       0       0       0       0
 15004 ;;Total ram usage:        0 bytes
 15005 ;; Hardware stack levels used:    1
 15006 ;; Hardware stack levels required when called:    1
 15007 ;; This function calls:
 15008 ;;		Nothing
 15009 ;; This function is called by:
 15010 ;;		_loopTaskInit
 15011 ;; This function uses a non-reentrant model
 15012 ;;
 15013                           
 15014                           	psect	text69
 15015  005982                     __ptext69:
 15016                           	callstack 0
 15017  005982                     _PWM_Init:
 15018                           	callstack 28
 15019  005982                     
 15020                           ;fs_pwm.c: 36:     TRISCbits.RC2 = 0;
 15021  005982  9494               	bcf	148,2,c	;volatile
 15022                           
 15023                           ;fs_pwm.c: 37:     TRISCbits.RC1 = 0;
 15024  005984  9294               	bcf	148,1,c	;volatile
 15025  005986                     
 15026                           ;fs_pwm.c: 40:     CCP1CON = 0b00001100;
 15027  005986  0E0C               	movlw	12
 15028  005988  6EBD               	movwf	189,c	;volatile
 15029                           
 15030                           ;fs_pwm.c: 42:     CCP2CON = 0b00001100;
 15031  00598A  0E0C               	movlw	12
 15032  00598C  6E66               	movwf	102,c	;volatile
 15033                           
 15034                           ;fs_pwm.c: 46:     T2CONbits.T2CKPS = 0b01;
 15035  00598E  50BA               	movf	186,w,c	;volatile
 15036  005990  0BFC               	andlw	-4
 15037  005992  0901               	iorlw	1
 15038  005994  6EBA               	movwf	186,c	;volatile
 15039  005996                     
 15040                           ;fs_pwm.c: 47:     T2CONbits.TMR2ON = 1;
 15041  005996  84BA               	bsf	186,2,c	;volatile
 15042                           
 15043                           ;fs_pwm.c: 49:     TMR2 = 0;
 15044  005998  0E00               	movlw	0
 15045  00599A  6EBC               	movwf	188,c	;volatile
 15046                           
 15047                           ;fs_pwm.c: 50:     PR2 = 199;
 15048  00599C  0EC7               	movlw	199
 15049  00599E  6EBB               	movwf	187,c	;volatile
 15050                           
 15051                           ;fs_pwm.c: 51:     CCPR1L = 0;
 15052  0059A0  0E00               	movlw	0
 15053  0059A2  6EBE               	movwf	190,c	;volatile
 15054                           
 15055                           ;fs_pwm.c: 52:     CCPR2L = 0;
 15056  0059A4  0E00               	movlw	0
 15057  0059A6  6E67               	movwf	103,c	;volatile
 15058  0059A8  0012               	return		;funcret
 15059  0059AA                     __end_of_PWM_Init:
 15060                           	callstack 0
 15061                           
 15062 ;; *************** function _PWM2_setDC *****************
 15063 ;; Defined at:
 15064 ;;		line 76 in file "fs_pwm.c"
 15065 ;; Parameters:    Size  Location     Type
 15066 ;;  dutycycle       2   87[COMRAM] short 
 15067 ;; Auto vars:     Size  Location     Type
 15068 ;;  duty            2   91[COMRAM] unsigned short 
 15069 ;; Return value:  Size  Location     Type
 15070 ;;                  1    wreg      void 
 15071 ;; Registers used:
 15072 ;;		wreg, status,2, status,0, cstack
 15073 ;; Tracked objects:
 15074 ;;		On entry : 0/0
 15075 ;;		On exit  : 0/0
 15076 ;;		Unchanged: 0/0
 15077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15078 ;;      Params:         2       0       0       0       0       0       0
 15079 ;;      Locals:         2       0       0       0       0       0       0
 15080 ;;      Temps:          2       0       0       0       0       0       0
 15081 ;;      Totals:         6       0       0       0       0       0       0
 15082 ;;Total ram usage:        6 bytes
 15083 ;; Hardware stack levels used:    1
 15084 ;; Hardware stack levels required when called:    2
 15085 ;; This function calls:
 15086 ;;		___fltol
 15087 ;;		___xxtofl
 15088 ;;		_fabsf
 15089 ;; This function is called by:
 15090 ;;		_loopTaskInit
 15091 ;;		_stopMotor
 15092 ;;		_startMotor
 15093 ;; This function uses a non-reentrant model
 15094 ;;
 15095                           
 15096                           	psect	text70
 15097  005116                     __ptext70:
 15098                           	callstack 0
 15099  005116                     _PWM2_setDC:
 15100                           	callstack 24
 15101  005116                     
 15102                           ;fs_pwm.c: 80:     if (dutycycle <= 1023)
 15103  005116  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
 15104  005118  EF97  F028         	goto	u6780
 15105  00511C  0E04               	movlw	4
 15106  00511E  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
 15107  005120  B0D8               	btfsc	status,0,c
 15108  005122  EF95  F028         	goto	u6781
 15109  005126  EF97  F028         	goto	u6780
 15110  00512A                     u6781:
 15111  00512A  EFC7  F028         	goto	l589
 15112  00512E                     u6780:
 15113  00512E                     
 15114                           ;fs_pwm.c: 81:     {;fs_pwm.c: 82:         duty = (uint16_t) fabsf(dutycycle);
 15115  00512E  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
 15116  005132  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
 15117  005136  0E00               	movlw	0
 15118  005138  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15119  00513A  0EFF               	movlw	-1
 15120  00513C  6E10               	movwf	(___xxtofl@val+2)^0,c
 15121  00513E  6E11               	movwf	(___xxtofl@val+3)^0,c
 15122  005140  0E01               	movlw	1
 15123  005142  ECC7  F01B         	call	___xxtofl
 15124  005146  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15125  00514A  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15126  00514E  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15127  005152  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15128  005156  EC7C  F02C         	call	_fabsf	;wreg free
 15129  00515A  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15130  00515E  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15131  005162  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15132  005166  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15133  00516A  EC1E  F022         	call	___fltol	;wreg free
 15134  00516E  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
 15135  005172  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
 15136  005176                     
 15137                           ;fs_pwm.c: 83:         CCPR2L = duty>>2;
 15138  005176  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
 15139  00517A  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
 15140  00517E  90D8               	bcf	status,0,c
 15141  005180  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15142  005182  325A               	rrcf	??_PWM2_setDC^0,f,c
 15143  005184  90D8               	bcf	status,0,c
 15144  005186  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15145  005188  325A               	rrcf	??_PWM2_setDC^0,f,c
 15146  00518A  505A               	movf	??_PWM2_setDC^0,w,c
 15147  00518C  6E67               	movwf	103,c	;volatile
 15148  00518E                     l589:
 15149  00518E  0012               	return		;funcret
 15150  005190                     __end_of_PWM2_setDC:
 15151                           	callstack 0
 15152                           
 15153 ;; *************** function _PWM1_setDC *****************
 15154 ;; Defined at:
 15155 ;;		line 60 in file "fs_pwm.c"
 15156 ;; Parameters:    Size  Location     Type
 15157 ;;  dutycycle       2   87[COMRAM] short 
 15158 ;; Auto vars:     Size  Location     Type
 15159 ;;  duty            2   91[COMRAM] unsigned short 
 15160 ;; Return value:  Size  Location     Type
 15161 ;;                  1    wreg      void 
 15162 ;; Registers used:
 15163 ;;		wreg, status,2, status,0, cstack
 15164 ;; Tracked objects:
 15165 ;;		On entry : 0/0
 15166 ;;		On exit  : 0/0
 15167 ;;		Unchanged: 0/0
 15168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15169 ;;      Params:         2       0       0       0       0       0       0
 15170 ;;      Locals:         2       0       0       0       0       0       0
 15171 ;;      Temps:          2       0       0       0       0       0       0
 15172 ;;      Totals:         6       0       0       0       0       0       0
 15173 ;;Total ram usage:        6 bytes
 15174 ;; Hardware stack levels used:    1
 15175 ;; Hardware stack levels required when called:    2
 15176 ;; This function calls:
 15177 ;;		___fltol
 15178 ;;		___xxtofl
 15179 ;;		_fabsf
 15180 ;; This function is called by:
 15181 ;;		_loopTaskInit
 15182 ;;		_stopMotor
 15183 ;;		_startMotor
 15184 ;; This function uses a non-reentrant model
 15185 ;;
 15186                           
 15187                           	psect	text71
 15188  005190                     __ptext71:
 15189                           	callstack 0
 15190  005190                     _PWM1_setDC:
 15191                           	callstack 24
 15192  005190                     
 15193                           ;fs_pwm.c: 64:     if (dutycycle <= 1023)
 15194  005190  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
 15195  005192  EFD4  F028         	goto	u6770
 15196  005196  0E04               	movlw	4
 15197  005198  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
 15198  00519A  B0D8               	btfsc	status,0,c
 15199  00519C  EFD2  F028         	goto	u6771
 15200  0051A0  EFD4  F028         	goto	u6770
 15201  0051A4                     u6771:
 15202  0051A4  EF04  F029         	goto	l585
 15203  0051A8                     u6770:
 15204  0051A8                     
 15205                           ;fs_pwm.c: 65:     {;fs_pwm.c: 66:         duty = (uint16_t) fabsf(dutycycle);
 15206  0051A8  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
 15207  0051AC  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
 15208  0051B0  0E00               	movlw	0
 15209  0051B2  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15210  0051B4  0EFF               	movlw	-1
 15211  0051B6  6E10               	movwf	(___xxtofl@val+2)^0,c
 15212  0051B8  6E11               	movwf	(___xxtofl@val+3)^0,c
 15213  0051BA  0E01               	movlw	1
 15214  0051BC  ECC7  F01B         	call	___xxtofl
 15215  0051C0  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15216  0051C4  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15217  0051C8  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15218  0051CC  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15219  0051D0  EC7C  F02C         	call	_fabsf	;wreg free
 15220  0051D4  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15221  0051D8  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15222  0051DC  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15223  0051E0  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15224  0051E4  EC1E  F022         	call	___fltol	;wreg free
 15225  0051E8  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
 15226  0051EC  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
 15227  0051F0                     
 15228                           ;fs_pwm.c: 67:         CCPR1L = duty>>2;
 15229  0051F0  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
 15230  0051F4  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
 15231  0051F8  90D8               	bcf	status,0,c
 15232  0051FA  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15233  0051FC  325A               	rrcf	??_PWM1_setDC^0,f,c
 15234  0051FE  90D8               	bcf	status,0,c
 15235  005200  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15236  005202  325A               	rrcf	??_PWM1_setDC^0,f,c
 15237  005204  505A               	movf	??_PWM1_setDC^0,w,c
 15238  005206  6EBE               	movwf	190,c	;volatile
 15239  005208                     l585:
 15240  005208  0012               	return		;funcret
 15241  00520A                     __end_of_PWM1_setDC:
 15242                           	callstack 0
 15243                           
 15244 ;; *************** function _fabsf *****************
 15245 ;; Defined at:
 15246 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
 15247 ;; Parameters:    Size  Location     Type
 15248 ;;  x               4   27[COMRAM] float 
 15249 ;; Auto vars:     Size  Location     Type
 15250 ;;  u               4   31[COMRAM] struct .
 15251 ;; Return value:  Size  Location     Type
 15252 ;;                  4   27[COMRAM] float 
 15253 ;; Registers used:
 15254 ;;		status,2, status,0
 15255 ;; Tracked objects:
 15256 ;;		On entry : 0/0
 15257 ;;		On exit  : 0/0
 15258 ;;		Unchanged: 0/0
 15259 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15260 ;;      Params:         4       0       0       0       0       0       0
 15261 ;;      Locals:         4       0       0       0       0       0       0
 15262 ;;      Temps:          0       0       0       0       0       0       0
 15263 ;;      Totals:         8       0       0       0       0       0       0
 15264 ;;Total ram usage:        8 bytes
 15265 ;; Hardware stack levels used:    1
 15266 ;; Hardware stack levels required when called:    1
 15267 ;; This function calls:
 15268 ;;		Nothing
 15269 ;; This function is called by:
 15270 ;;		_PWM1_setDC
 15271 ;;		_PWM2_setDC
 15272 ;; This function uses a non-reentrant model
 15273 ;;
 15274                           
 15275                           	psect	text72
 15276  0058F8                     __ptext72:
 15277                           	callstack 0
 15278  0058F8                     _fabsf:
 15279                           	callstack 24
 15280  0058F8  C1B3  F020         	movff	fabsf@F463,fabsf@u
 15281  0058FC  C1B4  F021         	movff	fabsf@F463+1,fabsf@u+1
 15282  005900  C1B5  F022         	movff	fabsf@F463+2,fabsf@u+2
 15283  005904  C1B6  F023         	movff	fabsf@F463+3,fabsf@u+3
 15284  005908  C01C  F020         	movff	fabsf@x,fabsf@u
 15285  00590C  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
 15286  005910  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
 15287  005914  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
 15288  005918  9E23               	bcf	(fabsf@u+3)^0,7,c
 15289  00591A  C020  F01C         	movff	fabsf@u,?_fabsf
 15290  00591E  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
 15291  005922  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
 15292  005926  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
 15293  00592A  0012               	return		;funcret
 15294  00592C                     __end_of_fabsf:
 15295                           	callstack 0
 15296                           
 15297 ;; *************** function ___xxtofl *****************
 15298 ;; Defined at:
 15299 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 15300 ;; Parameters:    Size  Location     Type
 15301 ;;  sign            1    wreg     unsigned char 
 15302 ;;  val             4   13[COMRAM] long 
 15303 ;; Auto vars:     Size  Location     Type
 15304 ;;  sign            1   21[COMRAM] unsigned char 
 15305 ;;  arg             4   23[COMRAM] unsigned long 
 15306 ;;  exp             1   22[COMRAM] unsigned char 
 15307 ;; Return value:  Size  Location     Type
 15308 ;;                  4   13[COMRAM] unsigned char 
 15309 ;; Registers used:
 15310 ;;		wreg, status,2, status,0
 15311 ;; Tracked objects:
 15312 ;;		On entry : 0/0
 15313 ;;		On exit  : 0/0
 15314 ;;		Unchanged: 0/0
 15315 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15316 ;;      Params:         4       0       0       0       0       0       0
 15317 ;;      Locals:         6       0       0       0       0       0       0
 15318 ;;      Temps:          4       0       0       0       0       0       0
 15319 ;;      Totals:        14       0       0       0       0       0       0
 15320 ;;Total ram usage:       14 bytes
 15321 ;; Hardware stack levels used:    1
 15322 ;; Hardware stack levels required when called:    1
 15323 ;; This function calls:
 15324 ;;		Nothing
 15325 ;; This function is called by:
 15326 ;;		_scanAdcConversion
 15327 ;;		_calculatedAverageValue
 15328 ;;		_PWM1_setDC
 15329 ;;		_PWM2_setDC
 15330 ;;		_speedControl
 15331 ;; This function uses a non-reentrant model
 15332 ;;
 15333                           
 15334                           	psect	text73
 15335  00378E                     __ptext73:
 15336                           	callstack 0
 15337  00378E                     ___xxtofl:
 15338                           	callstack 24
 15339                           
 15340                           ;incstack = 0
 15341                           ;___xxtofl@sign stored from wreg
 15342  00378E  6E16               	movwf	___xxtofl@sign^0,c
 15343  003790  5016               	movf	___xxtofl@sign^0,w,c
 15344  003792  B4D8               	btfsc	status,2,c
 15345  003794  EFCE  F01B         	goto	u6461
 15346  003798  EFD0  F01B         	goto	u6460
 15347  00379C                     u6461:
 15348  00379C  EFF2  F01B         	goto	l1358
 15349  0037A0                     u6460:
 15350  0037A0  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 15351  0037A2  EFD7  F01B         	goto	u6470
 15352  0037A6  EFD5  F01B         	goto	u6471
 15353  0037AA                     u6471:
 15354  0037AA  EFF2  F01B         	goto	l1358
 15355  0037AE                     u6470:
 15356  0037AE  C00E  F012         	movff	___xxtofl@val,??___xxtofl
 15357  0037B2  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
 15358  0037B6  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
 15359  0037BA  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
 15360  0037BE  1E12               	comf	??___xxtofl^0,f,c
 15361  0037C0  1E13               	comf	(??___xxtofl+1)^0,f,c
 15362  0037C2  1E14               	comf	(??___xxtofl+2)^0,f,c
 15363  0037C4  1E15               	comf	(??___xxtofl+3)^0,f,c
 15364  0037C6  2A12               	incf	??___xxtofl^0,f,c
 15365  0037C8  0E00               	movlw	0
 15366  0037CA  2213               	addwfc	(??___xxtofl+1)^0,f,c
 15367  0037CC  2214               	addwfc	(??___xxtofl+2)^0,f,c
 15368  0037CE  2215               	addwfc	(??___xxtofl+3)^0,f,c
 15369  0037D0  C012  F018         	movff	??___xxtofl,___xxtofl@arg
 15370  0037D4  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
 15371  0037D8  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
 15372  0037DC  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
 15373  0037E0  EFFA  F01B         	goto	l5524
 15374  0037E4                     l1358:
 15375  0037E4  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
 15376  0037E8  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15377  0037EC  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15378  0037F0  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15379  0037F4                     l5524:
 15380  0037F4  500E               	movf	___xxtofl@val^0,w,c
 15381  0037F6  100F               	iorwf	(___xxtofl@val+1)^0,w,c
 15382  0037F8  1010               	iorwf	(___xxtofl@val+2)^0,w,c
 15383  0037FA  1011               	iorwf	(___xxtofl@val+3)^0,w,c
 15384  0037FC  A4D8               	btfss	status,2,c
 15385  0037FE  EF03  F01C         	goto	u6481
 15386  003802  EF05  F01C         	goto	u6480
 15387  003806                     u6481:
 15388  003806  EF0F  F01C         	goto	l5530
 15389  00380A                     u6480:
 15390  00380A  0E00               	movlw	0
 15391  00380C  6E0E               	movwf	?___xxtofl^0,c
 15392  00380E  0E00               	movlw	0
 15393  003810  6E0F               	movwf	(?___xxtofl+1)^0,c
 15394  003812  0E00               	movlw	0
 15395  003814  6E10               	movwf	(?___xxtofl+2)^0,c
 15396  003816  0E00               	movlw	0
 15397  003818  6E11               	movwf	(?___xxtofl+3)^0,c
 15398  00381A  EFA0  F01C         	goto	l1361
 15399  00381E                     l5530:
 15400  00381E  0E96               	movlw	150
 15401  003820  6E17               	movwf	___xxtofl@exp^0,c
 15402  003822  EF19  F01C         	goto	l5534
 15403  003826                     l5532:
 15404  003826  2A17               	incf	___xxtofl@exp^0,f,c
 15405  003828  90D8               	bcf	status,0,c
 15406  00382A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15407  00382C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15408  00382E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15409  003830  3218               	rrcf	___xxtofl@arg^0,f,c
 15410  003832                     l5534:
 15411  003832  0E00               	movlw	0
 15412  003834  1418               	andwf	___xxtofl@arg^0,w,c
 15413  003836  6E12               	movwf	??___xxtofl^0,c
 15414  003838  0E00               	movlw	0
 15415  00383A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15416  00383C  6E13               	movwf	(??___xxtofl+1)^0,c
 15417  00383E  0E00               	movlw	0
 15418  003840  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15419  003842  6E14               	movwf	(??___xxtofl+2)^0,c
 15420  003844  0EFE               	movlw	254
 15421  003846  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15422  003848  6E15               	movwf	(??___xxtofl+3)^0,c
 15423  00384A  5012               	movf	??___xxtofl^0,w,c
 15424  00384C  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15425  00384E  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15426  003850  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15427  003852  A4D8               	btfss	status,2,c
 15428  003854  EF2E  F01C         	goto	u6491
 15429  003858  EF30  F01C         	goto	u6490
 15430  00385C                     u6491:
 15431  00385C  EF13  F01C         	goto	l5532
 15432  003860                     u6490:
 15433  003860  EF3E  F01C         	goto	l1365
 15434  003864                     l5536:
 15435  003864  2A17               	incf	___xxtofl@exp^0,f,c
 15436  003866  0E01               	movlw	1
 15437  003868  2618               	addwf	___xxtofl@arg^0,f,c
 15438  00386A  0E00               	movlw	0
 15439  00386C  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
 15440  00386E  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
 15441  003870  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
 15442  003872  90D8               	bcf	status,0,c
 15443  003874  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15444  003876  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15445  003878  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15446  00387A  3218               	rrcf	___xxtofl@arg^0,f,c
 15447  00387C                     l1365:
 15448  00387C  0E00               	movlw	0
 15449  00387E  1418               	andwf	___xxtofl@arg^0,w,c
 15450  003880  6E12               	movwf	??___xxtofl^0,c
 15451  003882  0E00               	movlw	0
 15452  003884  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15453  003886  6E13               	movwf	(??___xxtofl+1)^0,c
 15454  003888  0E00               	movlw	0
 15455  00388A  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15456  00388C  6E14               	movwf	(??___xxtofl+2)^0,c
 15457  00388E  0EFF               	movlw	255
 15458  003890  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15459  003892  6E15               	movwf	(??___xxtofl+3)^0,c
 15460  003894  5012               	movf	??___xxtofl^0,w,c
 15461  003896  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15462  003898  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15463  00389A  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15464  00389C  A4D8               	btfss	status,2,c
 15465  00389E  EF53  F01C         	goto	u6501
 15466  0038A2  EF55  F01C         	goto	u6500
 15467  0038A6                     u6501:
 15468  0038A6  EF32  F01C         	goto	l5536
 15469  0038AA                     u6500:
 15470  0038AA  EF5D  F01C         	goto	l5544
 15471  0038AE                     l5542:
 15472  0038AE  0617               	decf	___xxtofl@exp^0,f,c
 15473  0038B0  90D8               	bcf	status,0,c
 15474  0038B2  3618               	rlcf	___xxtofl@arg^0,f,c
 15475  0038B4  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
 15476  0038B6  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
 15477  0038B8  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
 15478  0038BA                     l5544:
 15479  0038BA  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
 15480  0038BC  EF62  F01C         	goto	u6511
 15481  0038C0  EF64  F01C         	goto	u6510
 15482  0038C4                     u6511:
 15483  0038C4  EF6C  F01C         	goto	l1372
 15484  0038C8                     u6510:
 15485  0038C8  0E02               	movlw	2
 15486  0038CA  6017               	cpfslt	___xxtofl@exp^0,c
 15487  0038CC  EF6A  F01C         	goto	u6521
 15488  0038D0  EF6C  F01C         	goto	u6520
 15489  0038D4                     u6521:
 15490  0038D4  EF57  F01C         	goto	l5542
 15491  0038D8                     u6520:
 15492  0038D8                     l1372:
 15493  0038D8  B017               	btfsc	___xxtofl@exp^0,0,c
 15494  0038DA  EF71  F01C         	goto	u6531
 15495  0038DE  EF73  F01C         	goto	u6530
 15496  0038E2                     u6531:
 15497  0038E2  EF74  F01C         	goto	l5550
 15498  0038E6                     u6530:
 15499  0038E6  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
 15500  0038E8                     l5550:
 15501  0038E8  90D8               	bcf	status,0,c
 15502  0038EA  3217               	rrcf	___xxtofl@exp^0,f,c
 15503  0038EC  C017  F012         	movff	___xxtofl@exp,??___xxtofl
 15504  0038F0  6A13               	clrf	(??___xxtofl+1)^0,c
 15505  0038F2  6A14               	clrf	(??___xxtofl+2)^0,c
 15506  0038F4  6A15               	clrf	(??___xxtofl+3)^0,c
 15507  0038F6  C012  F015         	movff	??___xxtofl,??___xxtofl+3
 15508  0038FA  6A14               	clrf	(??___xxtofl+2)^0,c
 15509  0038FC  6A13               	clrf	(??___xxtofl+1)^0,c
 15510  0038FE  6A12               	clrf	??___xxtofl^0,c
 15511  003900  5012               	movf	??___xxtofl^0,w,c
 15512  003902  1218               	iorwf	___xxtofl@arg^0,f,c
 15513  003904  5013               	movf	(??___xxtofl+1)^0,w,c
 15514  003906  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
 15515  003908  5014               	movf	(??___xxtofl+2)^0,w,c
 15516  00390A  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
 15517  00390C  5015               	movf	(??___xxtofl+3)^0,w,c
 15518  00390E  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
 15519  003910  5016               	movf	___xxtofl@sign^0,w,c
 15520  003912  B4D8               	btfsc	status,2,c
 15521  003914  EF8E  F01C         	goto	u6541
 15522  003918  EF90  F01C         	goto	u6540
 15523  00391C                     u6541:
 15524  00391C  EF98  F01C         	goto	l5560
 15525  003920                     u6540:
 15526  003920  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 15527  003922  EF97  F01C         	goto	u6550
 15528  003926  EF95  F01C         	goto	u6551
 15529  00392A                     u6551:
 15530  00392A  EF98  F01C         	goto	l5560
 15531  00392E                     u6550:
 15532  00392E  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
 15533  003930                     l5560:
 15534  003930  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
 15535  003934  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
 15536  003938  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
 15537  00393C  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
 15538  003940                     l1361:
 15539  003940  0012               	return		;funcret
 15540  003942                     __end_of___xxtofl:
 15541                           	callstack 0
 15542                           
 15543 ;; *************** function ___fltol *****************
 15544 ;; Defined at:
 15545 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 15546 ;; Parameters:    Size  Location     Type
 15547 ;;  f1              4   77[COMRAM] unsigned char 
 15548 ;; Auto vars:     Size  Location     Type
 15549 ;;  exp1            1   86[COMRAM] unsigned char 
 15550 ;;  sign1           1   85[COMRAM] unsigned char 
 15551 ;; Return value:  Size  Location     Type
 15552 ;;                  4   77[COMRAM] long 
 15553 ;; Registers used:
 15554 ;;		wreg, status,2, status,0
 15555 ;; Tracked objects:
 15556 ;;		On entry : 0/0
 15557 ;;		On exit  : 0/0
 15558 ;;		Unchanged: 0/0
 15559 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15560 ;;      Params:         4       0       0       0       0       0       0
 15561 ;;      Locals:         2       0       0       0       0       0       0
 15562 ;;      Temps:          4       0       0       0       0       0       0
 15563 ;;      Totals:        10       0       0       0       0       0       0
 15564 ;;Total ram usage:       10 bytes
 15565 ;; Hardware stack levels used:    1
 15566 ;; Hardware stack levels required when called:    1
 15567 ;; This function calls:
 15568 ;;		Nothing
 15569 ;; This function is called by:
 15570 ;;		_scanAdcConversion
 15571 ;;		_calculatedAverageValue
 15572 ;;		_PWM1_setDC
 15573 ;;		_PWM2_setDC
 15574 ;;		_speedControl
 15575 ;;		_efgtoa
 15576 ;; This function uses a non-reentrant model
 15577 ;;
 15578                           
 15579                           	psect	text74
 15580  00443C                     __ptext74:
 15581                           	callstack 0
 15582  00443C                     ___fltol:
 15583                           	callstack 24
 15584  00443C  3450               	rlcf	(___fltol@f1+2)^0,w,c
 15585  00443E  3451               	rlcf	(___fltol@f1+3)^0,w,c
 15586  004440  6E57               	movwf	___fltol@exp1^0,c
 15587  004442  5057               	movf	___fltol@exp1^0,w,c
 15588  004444  A4D8               	btfss	status,2,c
 15589  004446  EF27  F022         	goto	u5211
 15590  00444A  EF29  F022         	goto	u5210
 15591  00444E                     u5211:
 15592  00444E  EF33  F022         	goto	l4892
 15593  004452                     u5210:
 15594  004452                     l4888:
 15595  004452  0E00               	movlw	0
 15596  004454  6E4E               	movwf	?___fltol^0,c
 15597  004456  0E00               	movlw	0
 15598  004458  6E4F               	movwf	(?___fltol+1)^0,c
 15599  00445A  0E00               	movlw	0
 15600  00445C  6E50               	movwf	(?___fltol+2)^0,c
 15601  00445E  0E00               	movlw	0
 15602  004460  6E51               	movwf	(?___fltol+3)^0,c
 15603  004462  EFA0  F022         	goto	l1000
 15604  004466                     l4892:
 15605  004466  C04E  F052         	movff	___fltol@f1,??___fltol
 15606  00446A  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 15607  00446E  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 15608  004472  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 15609  004476  0E20               	movlw	32
 15610  004478  EF43  F022         	goto	u5220
 15611  00447C                     u5225:
 15612  00447C  90D8               	bcf	status,0,c
 15613  00447E  3255               	rrcf	(??___fltol+3)^0,f,c
 15614  004480  3254               	rrcf	(??___fltol+2)^0,f,c
 15615  004482  3253               	rrcf	(??___fltol+1)^0,f,c
 15616  004484  3252               	rrcf	??___fltol^0,f,c
 15617  004486                     u5220:
 15618  004486  2EE8               	decfsz	wreg,f,c
 15619  004488  EF3E  F022         	goto	u5225
 15620  00448C  5052               	movf	??___fltol^0,w,c
 15621  00448E  6E56               	movwf	___fltol@sign1^0,c
 15622  004490  8E50               	bsf	(___fltol@f1+2)^0,7,c
 15623  004492  0EFF               	movlw	255
 15624  004494  164E               	andwf	___fltol@f1^0,f,c
 15625  004496  0EFF               	movlw	255
 15626  004498  164F               	andwf	(___fltol@f1+1)^0,f,c
 15627  00449A  0EFF               	movlw	255
 15628  00449C  1650               	andwf	(___fltol@f1+2)^0,f,c
 15629  00449E  0E00               	movlw	0
 15630  0044A0  1651               	andwf	(___fltol@f1+3)^0,f,c
 15631  0044A2  0E96               	movlw	150
 15632  0044A4  5E57               	subwf	___fltol@exp1^0,f,c
 15633  0044A6  BE57               	btfsc	___fltol@exp1^0,7,c
 15634  0044A8  EF5A  F022         	goto	u5230
 15635  0044AC  EF58  F022         	goto	u5231
 15636  0044B0                     u5231:
 15637  0044B0  EF70  F022         	goto	l4912
 15638  0044B4                     u5230:
 15639  0044B4  5057               	movf	___fltol@exp1^0,w,c
 15640  0044B6  0A80               	xorlw	128
 15641  0044B8  0F97               	addlw	151
 15642  0044BA  B0D8               	btfsc	status,0,c
 15643  0044BC  EF62  F022         	goto	u5241
 15644  0044C0  EF64  F022         	goto	u5240
 15645  0044C4                     u5241:
 15646  0044C4  EF66  F022         	goto	l4908
 15647  0044C8                     u5240:
 15648  0044C8  EF29  F022         	goto	l4888
 15649  0044CC                     l4908:
 15650  0044CC  90D8               	bcf	status,0,c
 15651  0044CE  3251               	rrcf	(___fltol@f1+3)^0,f,c
 15652  0044D0  3250               	rrcf	(___fltol@f1+2)^0,f,c
 15653  0044D2  324F               	rrcf	(___fltol@f1+1)^0,f,c
 15654  0044D4  324E               	rrcf	___fltol@f1^0,f,c
 15655  0044D6  3E57               	incfsz	___fltol@exp1^0,f,c
 15656  0044D8  EF66  F022         	goto	l4908
 15657  0044DC  EF88  F022         	goto	l4922
 15658  0044E0                     l4912:
 15659  0044E0  0E1F               	movlw	31
 15660  0044E2  6457               	cpfsgt	___fltol@exp1^0,c
 15661  0044E4  EF76  F022         	goto	u5251
 15662  0044E8  EF78  F022         	goto	u5250
 15663  0044EC                     u5251:
 15664  0044EC  EF80  F022         	goto	l4920
 15665  0044F0                     u5250:
 15666  0044F0  EF29  F022         	goto	l4888
 15667  0044F4                     l4918:
 15668  0044F4  90D8               	bcf	status,0,c
 15669  0044F6  364E               	rlcf	___fltol@f1^0,f,c
 15670  0044F8  364F               	rlcf	(___fltol@f1+1)^0,f,c
 15671  0044FA  3650               	rlcf	(___fltol@f1+2)^0,f,c
 15672  0044FC  3651               	rlcf	(___fltol@f1+3)^0,f,c
 15673  0044FE  0657               	decf	___fltol@exp1^0,f,c
 15674  004500                     l4920:
 15675  004500  5057               	movf	___fltol@exp1^0,w,c
 15676  004502  A4D8               	btfss	status,2,c
 15677  004504  EF86  F022         	goto	u5261
 15678  004508  EF88  F022         	goto	u5260
 15679  00450C                     u5261:
 15680  00450C  EF7A  F022         	goto	l4918
 15681  004510                     u5260:
 15682  004510                     l4922:
 15683  004510  5056               	movf	___fltol@sign1^0,w,c
 15684  004512  B4D8               	btfsc	status,2,c
 15685  004514  EF8E  F022         	goto	u5271
 15686  004518  EF90  F022         	goto	u5270
 15687  00451C                     u5271:
 15688  00451C  EF98  F022         	goto	l4926
 15689  004520                     u5270:
 15690  004520  1E51               	comf	(___fltol@f1+3)^0,f,c
 15691  004522  1E50               	comf	(___fltol@f1+2)^0,f,c
 15692  004524  1E4F               	comf	(___fltol@f1+1)^0,f,c
 15693  004526  6C4E               	negf	___fltol@f1^0,c
 15694  004528  0E00               	movlw	0
 15695  00452A  224F               	addwfc	(___fltol@f1+1)^0,f,c
 15696  00452C  2250               	addwfc	(___fltol@f1+2)^0,f,c
 15697  00452E  2251               	addwfc	(___fltol@f1+3)^0,f,c
 15698  004530                     l4926:
 15699  004530  C04E  F04E         	movff	___fltol@f1,?___fltol
 15700  004534  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 15701  004538  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 15702  00453C  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 15703  004540                     l1000:
 15704  004540  0012               	return		;funcret
 15705  004542                     __end_of___fltol:
 15706                           	callstack 0
 15707                           
 15708 ;; *************** function _TIMER0 *****************
 15709 ;; Defined at:
 15710 ;;		line 33 in file "fs_timer.c"
 15711 ;; Parameters:    Size  Location     Type
 15712 ;;		None
 15713 ;; Auto vars:     Size  Location     Type
 15714 ;;		None
 15715 ;; Return value:  Size  Location     Type
 15716 ;;                  1    wreg      void 
 15717 ;; Registers used:
 15718 ;;		wreg, status,2, status,0
 15719 ;; Tracked objects:
 15720 ;;		On entry : 0/0
 15721 ;;		On exit  : 0/0
 15722 ;;		Unchanged: 0/0
 15723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15724 ;;      Params:         0       0       0       0       0       0       0
 15725 ;;      Locals:         0       0       0       0       0       0       0
 15726 ;;      Temps:          0       0       0       0       0       0       0
 15727 ;;      Totals:         0       0       0       0       0       0       0
 15728 ;;Total ram usage:        0 bytes
 15729 ;; Hardware stack levels used:    1
 15730 ;; This function calls:
 15731 ;;		Nothing
 15732 ;; This function is called by:
 15733 ;;		Interrupt level 2
 15734 ;; This function uses a non-reentrant model
 15735 ;;
 15736                           
 15737                           	psect	intcode
 15738  000008                     __pintcode:
 15739                           	callstack 0
 15740  000008                     _TIMER0:
 15741                           	callstack 19
 15742                           
 15743                           ;incstack = 0
 15744  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15745  00000A                     
 15746                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15747  00000A  A4F2               	btfss	242,2,c	;volatile
 15748  00000C  EF0A  F000         	goto	i2u787_41
 15749  000010  EF0C  F000         	goto	i2u787_40
 15750  000014                     i2u787_41:
 15751  000014  EF55  F000         	goto	i2l697
 15752  000018                     i2u787_40:
 15753  000018  AAF2               	btfss	242,5,c	;volatile
 15754  00001A  EF11  F000         	goto	i2u788_41
 15755  00001E  EF13  F000         	goto	i2u788_40
 15756  000022                     i2u788_41:
 15757  000022  EF55  F000         	goto	i2l697
 15758  000026                     i2u788_40:
 15759  000026                     
 15760                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15761  000026  94F2               	bcf	242,2,c	;volatile
 15762  000028                     
 15763                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15764  000028  0E63               	movlw	99
 15765  00002A  6ED7               	movwf	215,c	;volatile
 15766                           
 15767                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15768  00002C  0EC0               	movlw	192
 15769  00002E  6ED6               	movwf	214,c	;volatile
 15770  000030                     
 15771                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 15772  000030  0101               	movlb	1	; () banked
 15773  000032  2B9C               	incf	(_timer_value+5)& (0+255),f,b
 15774  000034                     
 15775                           ; BSR set to: 1
 15776                           ;fs_timer.c: 43:         if (timer_value.adc_conversion_time >8)
 15777  000034  0E08               	movlw	8
 15778  000036  659C               	cpfsgt	(_timer_value+5)& (0+255),b
 15779  000038  EF20  F000         	goto	i2u789_41
 15780  00003C  EF22  F000         	goto	i2u789_40
 15781  000040                     i2u789_41:
 15782  000040  EF24  F000         	goto	i2l6488
 15783  000044                     i2u789_40:
 15784  000044                     
 15785                           ; BSR set to: 1
 15786                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.adc_conversion_time =
      +                           0;
 15787  000044  0E00               	movlw	0
 15788  000046  6F9C               	movwf	(_timer_value+5)& (0+255),b
 15789  000048                     i2l6488:
 15790                           
 15791                           ; BSR set to: 1
 15792                           ;fs_timer.c: 48:         if (startIsClick == 1)
 15793  000048  0100               	movlb	0	; () banked
 15794  00004A  05FE               	decf	_startIsClick& (0+255),w,b
 15795  00004C  A4D8               	btfss	status,2,c
 15796  00004E  EF2B  F000         	goto	i2u790_41
 15797  000052  EF2D  F000         	goto	i2u790_40
 15798  000056                     i2u790_41:
 15799  000056  EF30  F000         	goto	i2l6492
 15800  00005A                     i2u790_40:
 15801  00005A                     
 15802                           ; BSR set to: 0
 15803                           ;fs_timer.c: 49:         {;fs_timer.c: 50:             timer_value.second_counter++;
 15804  00005A  0101               	movlb	1	; () banked
 15805  00005C  4B9D               	infsnz	(_timer_value+6)& (0+255),f,b
 15806  00005E  2B9E               	incf	(_timer_value+7)& (0+255),f,b
 15807  000060                     i2l6492:
 15808                           
 15809                           ;fs_timer.c: 53:         if(button_bounce_controller.menu == 1)
 15810  000060  0101               	movlb	1	; () banked
 15811  000062  05A5               	decf	_button_bounce_controller& (0+255),w,b
 15812  000064  A4D8               	btfss	status,2,c
 15813  000066  EF37  F000         	goto	i2u791_41
 15814  00006A  EF39  F000         	goto	i2u791_40
 15815  00006E                     i2u791_41:
 15816  00006E  EF3A  F000         	goto	i2l6496
 15817  000072                     i2u791_40:
 15818  000072                     
 15819                           ; BSR set to: 1
 15820                           ;fs_timer.c: 54:         {;fs_timer.c: 55:              timer_value.menu_login_delay++;
 15821  000072  2B9B               	incf	(_timer_value+4)& (0+255),f,b
 15822  000074                     i2l6496:
 15823                           
 15824                           ; BSR set to: 1
 15825                           ;fs_timer.c: 57:         if(button_bounce_controller.menu == 0)
 15826  000074  51A5               	movf	_button_bounce_controller& (0+255),w,b
 15827  000076  A4D8               	btfss	status,2,c
 15828  000078  EF40  F000         	goto	i2u792_41
 15829  00007C  EF42  F000         	goto	i2u792_40
 15830  000080                     i2u792_41:
 15831  000080  EF44  F000         	goto	i2l6500
 15832  000084                     i2u792_40:
 15833  000084                     
 15834                           ; BSR set to: 1
 15835                           ;fs_timer.c: 58:         {;fs_timer.c: 59:              timer_value.menu_login_delay = 0
      +                          ;
 15836  000084  0E00               	movlw	0
 15837  000086  6F9B               	movwf	(_timer_value+4)& (0+255),b
 15838  000088                     i2l6500:
 15839                           
 15840                           ; BSR set to: 1
 15841                           ;fs_timer.c: 62:         if (timer_value.second_counter >= 100)
 15842  000088  519E               	movf	(_timer_value+7)& (0+255),w,b
 15843  00008A  E109               	bnz	i2u793_40
 15844  00008C  0E64               	movlw	100
 15845  00008E  5D9D               	subwf	(_timer_value+6)& (0+255),w,b
 15846  000090  A0D8               	btfss	status,0,c
 15847  000092  EF4D  F000         	goto	i2u793_41
 15848  000096  EF4F  F000         	goto	i2u793_40
 15849  00009A                     i2u793_41:
 15850  00009A  EF55  F000         	goto	i2l697
 15851  00009E                     i2u793_40:
 15852  00009E                     
 15853                           ; BSR set to: 1
 15854                           ;fs_timer.c: 63:         {;fs_timer.c: 64:             timer_value.second_counter = 0;
 15855  00009E  0E00               	movlw	0
 15856  0000A0  6F9E               	movwf	(_timer_value+7)& (0+255),b
 15857  0000A2  0E00               	movlw	0
 15858  0000A4  6F9D               	movwf	(_timer_value+6)& (0+255),b
 15859  0000A6                     
 15860                           ; BSR set to: 1
 15861                           ;fs_timer.c: 65:             timer_counter_flag.one_second_flag = 1;
 15862  0000A6  0100               	movlb	0	; () banked
 15863  0000A8  81FA               	bsf	_timer_counter_flag& (0+255),0,b
 15864  0000AA                     i2l697:
 15865  0000AA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15866  0000AC  0011               	retfie		f
 15867  0000AE                     __end_of_TIMER0:
 15868                           	callstack 0
 15869                           
 15870                           	psect	rparam
 15871  0000                     
 15872                           	psect	temp
 15873  00005F                     btemp:
 15874                           	callstack 0
 15875  00005F                     	ds	1
 15876  0000                     int$flags	set	btemp
 15877  0000                     wtemp8	set	btemp+1
 15878  0000                     ttemp5	set	btemp+1
 15879  0000                     ttemp6	set	btemp+4
 15880  0000                     ttemp7	set	btemp+8
 15881                           
 15882                           	psect	idloc
 15883                           
 15884                           ;Config register IDLOC0 @ 0x200000
 15885                           ;	unspecified, using default values
 15886  200000                     	org	2097152
 15887  200000  FF                 	db	255
 15888                           
 15889                           ;Config register IDLOC1 @ 0x200001
 15890                           ;	unspecified, using default values
 15891  200001                     	org	2097153
 15892  200001  FF                 	db	255
 15893                           
 15894                           ;Config register IDLOC2 @ 0x200002
 15895                           ;	unspecified, using default values
 15896  200002                     	org	2097154
 15897  200002  FF                 	db	255
 15898                           
 15899                           ;Config register IDLOC3 @ 0x200003
 15900                           ;	unspecified, using default values
 15901  200003                     	org	2097155
 15902  200003  FF                 	db	255
 15903                           
 15904                           ;Config register IDLOC4 @ 0x200004
 15905                           ;	unspecified, using default values
 15906  200004                     	org	2097156
 15907  200004  FF                 	db	255
 15908                           
 15909                           ;Config register IDLOC5 @ 0x200005
 15910                           ;	unspecified, using default values
 15911  200005                     	org	2097157
 15912  200005  FF                 	db	255
 15913                           
 15914                           ;Config register IDLOC6 @ 0x200006
 15915                           ;	unspecified, using default values
 15916  200006                     	org	2097158
 15917  200006  FF                 	db	255
 15918                           
 15919                           ;Config register IDLOC7 @ 0x200007
 15920                           ;	unspecified, using default values
 15921  200007                     	org	2097159
 15922  200007  FF                 	db	255
 15923                           
 15924                           	psect	config
 15925                           
 15926                           ; Padding undefined space
 15927  300000                     	org	3145728
 15928  300000  FF                 	db	255
 15929                           
 15930                           ;Config register CONFIG1H @ 0x300001
 15931                           ;	Oscillator Selection bits
 15932                           ;	FOSC = INTIO67, Internal oscillator block
 15933                           ;	4X PLL Enable
 15934                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15935                           ;	Primary clock enable bit
 15936                           ;	PRICLKEN = ON, Primary clock is always enabled
 15937                           ;	Fail-Safe Clock Monitor Enable bit
 15938                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15939                           ;	Internal/External Oscillator Switchover bit
 15940                           ;	IESO = ON, Oscillator Switchover mode enabled
 15941  300001                     	org	3145729
 15942  300001  B8                 	db	184
 15943                           
 15944                           ;Config register CONFIG2L @ 0x300002
 15945                           ;	Power-up Timer Enable bit
 15946                           ;	PWRTEN = OFF, Power up timer disabled
 15947                           ;	Brown-out Reset Enable bits
 15948                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15949                           ;	Brown Out Reset Voltage bits
 15950                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15951  300002                     	org	3145730
 15952  300002  1F                 	db	31
 15953                           
 15954                           ;Config register CONFIG2H @ 0x300003
 15955                           ;	Watchdog Timer Enable bits
 15956                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15957                           ;	Watchdog Timer Postscale Select bits
 15958                           ;	WDTPS = 32768, 1:32768
 15959  300003                     	org	3145731
 15960  300003  3C                 	db	60
 15961                           
 15962                           ; Padding undefined space
 15963  300004                     	org	3145732
 15964  300004  FF                 	db	255
 15965                           
 15966                           ;Config register CONFIG3H @ 0x300005
 15967                           ;	CCP2 MUX bit
 15968                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15969                           ;	PORTB A/D Enable bit
 15970                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15971                           ;	P3A/CCP3 Mux bit
 15972                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15973                           ;	HFINTOSC Fast Start-up
 15974                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15975                           ;	Timer3 Clock input mux bit
 15976                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15977                           ;	ECCP2 B output mux bit
 15978                           ;	P2BMX = PORTD2, P2B is on RD2
 15979                           ;	MCLR Pin Enable bit
 15980                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15981  300005                     	org	3145733
 15982  300005  BD                 	db	189
 15983                           
 15984                           ;Config register CONFIG4L @ 0x300006
 15985                           ;	Stack Full/Underflow Reset Enable bit
 15986                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15987                           ;	Single-Supply ICSP Enable bit
 15988                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15989                           ;	Extended Instruction Set Enable bit
 15990                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15991                           ;	Background Debug
 15992                           ;	DEBUG = 0x1, unprogrammed default
 15993  300006                     	org	3145734
 15994  300006  84                 	db	132
 15995                           
 15996                           ; Padding undefined space
 15997  300007                     	org	3145735
 15998  300007  FF                 	db	255
 15999                           
 16000                           ;Config register CONFIG5L @ 0x300008
 16001                           ;	Code Protection Block 0
 16002                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16003                           ;	Code Protection Block 1
 16004                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16005                           ;	Code Protection Block 2
 16006                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16007                           ;	Code Protection Block 3
 16008                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16009  300008                     	org	3145736
 16010  300008  0F                 	db	15
 16011                           
 16012                           ;Config register CONFIG5H @ 0x300009
 16013                           ;	Boot Block Code Protection bit
 16014                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16015                           ;	Data EEPROM Code Protection bit
 16016                           ;	CPD = OFF, Data EEPROM not code-protected
 16017  300009                     	org	3145737
 16018  300009  C0                 	db	192
 16019                           
 16020                           ;Config register CONFIG6L @ 0x30000A
 16021                           ;	Write Protection Block 0
 16022                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16023                           ;	Write Protection Block 1
 16024                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16025                           ;	Write Protection Block 2
 16026                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16027                           ;	Write Protection Block 3
 16028                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16029  30000A                     	org	3145738
 16030  30000A  0F                 	db	15
 16031                           
 16032                           ;Config register CONFIG6H @ 0x30000B
 16033                           ;	Configuration Register Write Protection bit
 16034                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16035                           ;	Boot Block Write Protection bit
 16036                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16037                           ;	Data EEPROM Write Protection bit
 16038                           ;	WRTD = OFF, Data EEPROM not write-protected
 16039  30000B                     	org	3145739
 16040  30000B  E0                 	db	224
 16041                           
 16042                           ;Config register CONFIG7L @ 0x30000C
 16043                           ;	Table Read Protection Block 0
 16044                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16045                           ;	Table Read Protection Block 1
 16046                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16047                           ;	Table Read Protection Block 2
 16048                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16049                           ;	Table Read Protection Block 3
 16050                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16051  30000C                     	org	3145740
 16052  30000C  0F                 	db	15
 16053                           
 16054                           ;Config register CONFIG7H @ 0x30000D
 16055                           ;	Boot Block Table Read Protection bit
 16056                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16057  30000D                     	org	3145741
 16058  30000D  40                 	db	64
 16059                           tosu	equ	0xFFF
 16060                           tosh	equ	0xFFE
 16061                           tosl	equ	0xFFD
 16062                           stkptr	equ	0xFFC
 16063                           pclatu	equ	0xFFB
 16064                           pclath	equ	0xFFA
 16065                           pcl	equ	0xFF9
 16066                           tblptru	equ	0xFF8
 16067                           tblptrh	equ	0xFF7
 16068                           tblptrl	equ	0xFF6
 16069                           tablat	equ	0xFF5
 16070                           prodh	equ	0xFF4
 16071                           prodl	equ	0xFF3
 16072                           indf0	equ	0xFEF
 16073                           postinc0	equ	0xFEE
 16074                           postdec0	equ	0xFED
 16075                           preinc0	equ	0xFEC
 16076                           plusw0	equ	0xFEB
 16077                           fsr0h	equ	0xFEA
 16078                           fsr0l	equ	0xFE9
 16079                           wreg	equ	0xFE8
 16080                           indf1	equ	0xFE7
 16081                           postinc1	equ	0xFE6
 16082                           postdec1	equ	0xFE5
 16083                           preinc1	equ	0xFE4
 16084                           plusw1	equ	0xFE3
 16085                           fsr1h	equ	0xFE2
 16086                           fsr1l	equ	0xFE1
 16087                           bsr	equ	0xFE0
 16088                           indf2	equ	0xFDF
 16089                           postinc2	equ	0xFDE
 16090                           postdec2	equ	0xFDD
 16091                           preinc2	equ	0xFDC
 16092                           plusw2	equ	0xFDB
 16093                           fsr2h	equ	0xFDA
 16094                           fsr2l	equ	0xFD9
 16095                           status	equ	0xFD8

Data Sizes:
    Strings     198
    Constant    0
    Data        64
    BSS         385
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     251
    BANK2           256      0     185
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_24(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_19(CODE[4]), STR_18(CODE[4]), STR_15(CODE[4]), STR_14(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_13(CODE[18]), STR_11(CODE[16]), STR_9(CODE[18]), STR_7(CODE[13]), 
		 -> STR_5(CODE[14]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_13(CODE[18]), STR_11(CODE[16]), STR_9(CODE[18]), STR_7(CODE[13]), 
		 -> STR_5(CODE[14]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_13(CODE[18]), STR_11(CODE[16]), STR_9(CODE[18]), STR_7(CODE[13]), 
		 -> STR_5(CODE[14]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_13(CODE[18]), STR_11(CODE[16]), STR_9(CODE[18]), STR_7(CODE[13]), 
		 -> STR_5(CODE[14]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2858_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 

    lcdWriteString@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_12(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_10(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_8(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_6(CODE[17]), STR_4(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), STR_2(CODE[17]), STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___fltol
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _loopTaskInit->_PWM1_setDC
    _loopTaskInit->_PWM2_setDC
    _systemInit->_eepromRead
    _openLCD_Script->_lcdWriteString
    _lcdWriteString->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdSetCursor->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdInit->_lcdCmd
    _lcdCmd->_lcdPort
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    ___fltol->___fldiv

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _loopTaskMenuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _startMotor->_calculatedAverageValue
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  309263
                       _loopTaskInit
                _loopTaskMenuControl
                _loopTaskTimeMachine
 ---------------------------------------------------------------------------------
 (1) _loopTaskTimeMachine                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskMenuControl                                  0     0      0  298483
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  298483
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   53801
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   10341
                                              0 BANK0     16    16      0
                       _lcdSetCursor
                     _lcdWriteString
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   53801
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   62934
                                            129 BANK0     16    16      0
                            ___fladd
                             ___flge
                            ___flsub
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0    7717
                                              0 BANK0     16    16      0
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   56088
                                              8 BANK0     16    16      0
                           _lcdClear
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   48261
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   12507
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   11872
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              10    10      0   16166
                                             87 COMRAM     2     2      0
                                              0 BANK0      8     8      0
                            ___fladd
                            ___fldiv
                            ___flmul
                            ___fltol
                            ___lldiv
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   53801
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    7716
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42910
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41941
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41557
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30585
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    4713
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3934
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5088
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    3375
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                            ___lldiv (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskInit                                         0     0      0   10780
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcdClear
                            _lcdInit
                            _mcuInit
                     _menuInitialize
                     _openLCD_Script
                         _systemInit
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (2) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _systemInit                                           2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (3) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openLCD_Script                                       2     2      0    2734
                                             10 COMRAM     2     2      0
                           _lcdClear
                       _lcdSetCursor
                     _lcdWriteString
 ---------------------------------------------------------------------------------
 (4) _lcdWriteString                                       6     4      2    1256
                                              4 COMRAM     6     4      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (5) _lcdWriteChar                                         3     3      0     178
                                              1 COMRAM     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (4) _lcdSetCursor                                         5     4      1    1368
                                              3 COMRAM     5     4      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (4) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mcuInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              2     2      0     198
                                              3 COMRAM     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (5) _lcdCmd                                               2     2      0     110
                                              1 COMRAM     2     2      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (6) _lcdPort                                              1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3858
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3858
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1918
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1445
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loopTaskInit
     _PWM1_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM2_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM_Init
     _adcInit
     _lcdClear
       _lcdCmd
         _lcdPort
     _lcdInit
       _lcdCmd
         _lcdPort
       _lcdPort
     _mcuInit
     _menuInitialize
     _openLCD_Script
       _lcdClear
         _lcdCmd
           _lcdPort
       _lcdSetCursor
         _lcdCmd
           _lcdPort
       _lcdWriteString
         _lcdWriteChar
           _lcdPort
     _systemInit
       _eepromRead
     _timer_0_init
   _loopTaskMenuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _lcdClear
           _lcdCmd
             _lcdPort
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___lldiv
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _pauseMenu
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _loopTaskTimeMachine

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      B9       8       72.3%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      FB       6       98.0%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2B2       9        0.0%
DATA                 0      0     2B2      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 28 19:36:00 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
              __end_of_systemInit 4908                      ___fldiv@sign 0045  
                              l60 5672                                l63 576E  
                              l57 564A                                l92 59DC  
                              l76 2216                                l94 59EA  
                              _KD 01F3                                l95 59EC  
                              l79 2A54                                l98 5946  
                              _KP 01F7                      ___awdiv@sign 0006  
             ___wmul@multiplicand 0003                               l100 5954  
                             l101 5958          ??_calculatedAverageValue 0058  
                             l160 5466                               l152 5422  
                             l154 5438                               l322 5A3A  
                             l163 5A0A                               l156 544E  
                             l172 534E                               l260 5730  
                             l325 4906                               l421 3610  
                             l158 5464                               l166 5A6E  
                             l175 4F76                               l319 5A2C  
                             l423 365C                               l184 5114  
                             l328 55A6                               l432 378C  
                             l512 42C8                               l417 5980  
                             l425 36A8                               l505 443A  
                             l257 5006                               l178 588A  
                             l514 4332                               l427 36F4  
                             l523 4226                               l700 5A60  
                             l452 4CE2                               l429 3740  
                             l526 5A70                               l470 5096  
                             l438 527E                               l703 59CE  
                             l463 3C7E                      _startIsClick 00FE  
                             l641 57AA                               l730 4ED0  
                             l458 3B48                               l482 5A24  
                             l459 3B98                               l475 4782  
                             l644 58C0                               l581 59A8  
                             l830 40FA                               l638 3AE6  
                             l479 4826                               l496 33AA  
                             l585 5208                               l817 3F96  
                             l737 4EE0                               l589 518E  
                             l934 4C30                               l962 4E3C  
                             l947 4D92                               l973 4644  
                             l968 45FE                               l977 581A  
                             _PR2 000FBB                   ?_openLCD_Script 0001  
                             _abs 56B4                               _pad 4AA8  
                    ___awmod@sign 0006                               wreg 000FE8  
                    ___flmul@aexp 002D                      ___flmul@bexp 002E  
             stopMenu@textCursor2 0060      __size_of_loopTaskTimeMachine 0090  
                    ___flmul@sign 0028                      ___flmul@temp 0033  
                    ___flmul@prod 002F                       _stopIsClick 00FD  
                  ??_lcdWriteChar 0002                     lcdWriteChar@a 0004  
                   lcdWriteChar@y 0003                      ___fltol@exp1 0057  
                            l1000 4540                              ?_abs 0013  
                            l1231 1AA4                              l1240 1D74  
                            l1232 1A92                              l1321 2640  
                            l1233 1A58                              l1324 24D2  
                            l1317 22DC                              l1334 2602  
                            l1326 254A                              l1327 2538  
                            l1432 4B30                              l1440 2E90  
                            l1248 1BBE                              l1361 3940  
                            l1257 1C8E                              l1273 55EC  
                            l1610 56EA                              l1434 4B6C  
                            l1442 2E98                              l1290 2C12  
                            l1258 1C7C                              l1522 0E4C  
                            l1372 38D8                              l1700 5A72  
                            l1460 30D2                              l1365 387C  
                            l1613 56F2                              l1429 4AEE  
                            l1285 2DEE                              l1605 4742  
                            l1358 37E4                              l1287 2C4E  
                            l1712 58F6                              l1296 2C94  
                            l4200 1936                              l5000 3446  
                            l1641 3E06                              l1298 2D0C  
                            l4210 196C                              l4202 193C  
                            l5010 3564                              l1650 35C0  
                            l1706 540A                              l1386 550A  
                            l1379 592A                              l1299 2CFA  
                            l1731 53AE                              l1660 5852  
                            l5020 581C                              l1644 3E0E  
                            l4300 1B32                              l4220 19A8  
                            l4212 197C                              l4204 194A  
                            l5012 3578                              l5004 34B8  
                            l5100 06D2                              l1716 49DC  
                            l1580 18B4                              l1653 3504  
                            l5030 5552                              l4302 1B58  
                            l4310 1BAE                              l4230 19C6  
                            l4222 19B6                              l4214 197E  
                            l4206 194C                              l5014 35A0  
                            l5006 34F4                              l1726 53A6  
                            l1478 1276                              l5110 0726  
                            l5102 06E2                              l4400 59AA  
                            l5032 5556                              l5024 550C  
                            l5040 2E38                              l4320 1C02  
                            l4312 1BD4                              l4304 1B8C  
                            l4240 19DA                              l4232 19CA  
                            l4224 19BA                              l4208 195C  
                            l4216 1986                              l5016 35B0  
                            l5008 3528                              l1496 0AB4  
                            l5120 076C                              l5112 072E  
                            l5104 06F0                              l6000 4160  
                            l4402 59C6                              l5026 5510  
                            l4410 3E22                              l4170 4A2A  
                            l4162 49DE                              l5050 2EA0  
                            l5042 2E58                              l4330 1C2C  
                            l4322 1C10                              l4314 1BE4  
                            l4306 1B8E                              l4250 19EE  
                            l4242 19DE                              l4234 19CE  
                            l4226 19BE                              l4218 1996  
                            l1674 57E2                              l5210 0B3E  
                            l5202 0AD2                              l5130 07A8  
                            l5122 0774                              l5114 0740  
                            l5106 06F8                              l1594 52E0  
                            l6010 4184                              l6002 4166  
                            l1595 52E8                              l1668 555C  
                            l5028 5524                              l4420 3E78  
                            l4412 3E42                              l4172 4A60  
                            l4164 49F0                              l5060 2ED8  
                            l5052 2EB2                              l5044 2E68  
                            l5036 2DF0                              l4500 2AA4  
                            l4340 1C5E                              l4332 1C3C  
                            l4324 1C12                              l4308 1B9E  
                            l4260 1A40                              l4252 19F2  
                            l4244 19E2                              l4236 19D2  
                            l4228 19C2                              l4180 18D0  
                            l5300 0F76                              l5220 0B7C  
                            l5204 0AE4                              l5212 0B42  
                            l5140 0824                              l5124 0778  
                            l5116 074E                              l5108 071C  
                            l1588 17FA                              l6020 41B0  
                            l6012 4196                              l6004 416A  
                            l6100 43AA                              l4430 3ECC  
                            l4422 3E84                              l4414 3E46  
                            l4406 3E10                              l4166 4A02  
                            l5062 2EDE                              l5070 2FD0  
                            l5054 2EC0                              l5046 2E6A  
                            l5038 2E10                              l4510 2AD6  
                            l4502 2AAC                              l4350 1CB8  
                            l4342 1C74                              l4326 1C20  
                            l4318 1BF8                              l4334 1C3E  
                            l4270 1A84                              l4262 1A50  
                            l4246 19E6                              l4238 19D6  
                            l4254 19F6                              l4190 1904  
                            l4182 18D2                              l5302 0F7C  
                            l5310 0FAA                              l5230 0BCA  
                            l5222 0B80                              l5214 0B4A  
                            l5206 0B00                              l5142 082E  
                            l5134 07DE                              l5126 077C  
                            l5118 0760                              l6030 41D2  
                            l6022 41B4                              l6014 419C  
                            l6006 416E                              l6110 43DA  
                            l6102 43BC                              l5400 3C98  
                            l4440 3F40                              l4432 3EDE  
                            l4424 3EA2                              l4416 3E54  
                            l4408 3E14                              l4168 4A0C  
                            l5072 2FEA                              l5080 304C  
                            l5064 2F60                              l5056 2EC6  
                            l5048 2E84                              l4600 2D64  
                            l4520 2B0A                              l4512 2AD8  
                            l4504 2ABC                              l4360 1D34  
                            l4352 1CF2                              l4328 1C28  
                            l4336 1C4C                              l4272 1A86  
                            l4264 1A66                              l4256 19FA  
                            l4248 19EA                              l4184 18E2  
                            l4192 190C                              l4176 18B6  
                            l5320 1060                              l5312 1002  
                            l5304 0F8E                              l5240 0C62  
                            l5224 0B92                              l5232 0BD2  
                            l5216 0B5C                              l5208 0B36  
                            l5152 08B2                              l5136 07F0  
                            l5128 0782                              l6032 41DC  
                            l6024 41B8                              l6016 41A0  
                            l6008 4172                              l6200 312E  
                            l6120 442C                              l6112 43E6  
                            l6104 43C2                              l6040 4228  
                            l1689 4AA6                              l1697 5630  
                            l5402 3C9C                              l4434 3F0C  
                            l4426 3EAA                              l4442 3F46  
                            l4418 3E74                              l4450 3F98  
                            l5090 3092                              l5082 305E  
                            l5074 3008                              l5066 2F66  
                            l5058 2ECE                              l4610 2DCE  
                            l4602 2D7E                              l4530 2B50  
                            l4514 2AE8                              l4522 2B12  
                            l4506 2AC2                              l4370 1D54  
                            l4362 1D38                              l4346 1C9E  
                            l4354 1CF4                              l4338 1C50  
                            l4290 1B0E                              l4282 1AD6  
                            l4274 1A90                              l4266 1A72  
                            l4258 1A24                              l4194 191C  
                            l4186 18F2                              l4178 18C2  
                            l5330 10B0                              l5322 107C  
                            l5314 1036                              l5306 0FA0  
                            l5250 0D46                              l5242 0CBA  
                            l5234 0BDA                              l5226 0BA0  
                            l5218 0B6E                              l5170 094C  
                            l5154 08C4                              l5138 080C  
                            l5146 0856                              l6034 41F8  
                            l6018 41AA                              l6026 41BC  
                            l6210 3188                              l6202 313A  
                            l6114 43F0                              l6106 43C6  
                            l6130 5022                              l6122 5008  
                            l6050 4266                              l6042 4234  
                            l6300 555E                              l5420 3D52  
                            l5412 3CF8                              l5404 3CB8  
                            l4444 3F56                              l4436 3F2C  
                            l4428 3EBE                              l4460 3FDC  
                            l4452 3F9C                              l4380 55FA  
                            l5092 309A                              l5084 306E  
                            l5076 3022                              l5068 2F6C  
                            l4612 2DDC                              l4604 2D94  
                            l4540 2B78                              l4532 2B54  
                            l4524 2B22                              l4516 2AF8  
                            l4508 2AC8                              l4700 2456  
                            l4372 1D62                              l4364 1D46  
                            l4356 1D04                              l4348 1CAA  
                            l4292 1B12                              l4284 1AE6  
                            l4276 1AB2                              l4268 1A76  
                            l4196 1922                              l4188 1902  
                            l5340 10F2                              l5332 10C0  
                            l5324 108E                              l5316 103E  
                            l5308 0FA4                              l5260 0DE0  
                            l5252 0D78                              l5244 0CEE  
                            l5236 0BEA                              l5228 0BB8  
                            l5180 0A1C                              l5172 0980  
                            l5156 08E0                              l5148 087C  
                            l5164 08FC                              l6036 4204  
                            l6028 41C6                              l5500 4E64  
                            l6220 3214                              l6212 31BA  
                            l6204 3144                              l6116 440C  
                            l6108 43D0                              l6140 5046  
                            l6132 5026                              l6124 5014  
                            l6060 42A0                              l6052 4278  
                            l6044 4238                              l3830 5754  
                            l6302 5568                              l6310 35C2  
                            l5430 3DD8                              l5414 3D0E  
                            l5406 3CEE                              l4446 3F76  
                            l4438 3F2E                              l4470 4044  
                            l4462 3FFC                              l4454 3FAA  
                            l4382 560C                              l4390 58D2  
                            l5086 3074                              l5094 30AA  
                            l5078 303C                              l4614 2DE2  
                            l4606 2DAE                              l4550 2BC6  
                            l4526 2B38                              l4518 2B08  
                            l4710 24D0                              l4702 248C  
                            l4630 2234                              l4374 1D64  
                            l4366 1D4C                              l4358 1D14  
                            l4294 1B20                              l4286 1AF4  
                            l4278 1AC2                              l4198 1934  
                            l5350 1122                              l5342 1100  
                            l5334 10D2                              l5326 109C  
                            l5270 0E68                              l5318 1042  
                            l5262 0E14                              l5254 0D8E  
                            l5238 0BFE                              l5246 0CF4  
                            l5190 0A86                              l5174 0986  
                            l5182 0A4E                              l5166 0916  
                            l6038 4218                              l5510 4EAE  
                            l5502 4E6C                              l6230 3276  
                            l6222 3218                              l6214 31C0  
                            l6206 316A                              l6118 4418  
                            l6150 5A10                              l6142 5056  
                            l6134 5030                              l6126 5018  
                            l6070 42DE                              l6062 42B2  
                            l6054 427E                              l6046 424A  
                            ?_pad 0011                              l5520 37A0  
                            l3832 575C                              l6304 5574  
                            l6320 3608                              l6312 35D4  
                            l5432 3DEA                              l5424 3D88  
                            l5416 3D16                              l5408 3CF2  
                            l4480 40BA                              l4472 4072  
                            l4464 401A                              l4456 3FCA  
                            l4384 5610                              l4392 58EA  
                            l5088 3086                              l4800 4C28  
                            l4616 2DE4                              l4608 2DCA  
                            l4560 2C10                              l4552 2BD6  
                            l4544 2B8C                              l4528 2B48  
                            l4536 2B68                              l4720 2530  
                            l4712 24E2                              l4704 249A  
                            l4640 227A                              l4632 2244  
                            l4624 2218                              l4368 1D4E  
                            l4296 1B22                              l4288 1B02  
                            l5360 1184                              l5352 1148  
                            l5344 1108                              l5336 10DA  
                            l5328 10AC                              l5280 0F0E  
                            l5272 0ECC                              l5264 0E24  
                            l5256 0DC0                              l5248 0D12  
                            l5192 0A8E                              l5184 0A5E  
                            l5176 09E0                              l5440 4932  
                            l5600 1460                              l5512 4EBE  
                            l5504 4E78                              l6160 476C  
                            l6152 4744                              l6240 32F6  
                            l6232 3280                              l6216 31F4  
                            l6208 3176                              l6224 324C  
                            l6080 4334                              l6144 5076  
                            l6136 503C                              l6128 501E  
                            l6072 42E8                              l6064 42B8  
                            l6056 4284                              l6048 4254  
                            l6400 4F78                              l5530 381E  
                            l5522 37AE                              l6306 558A  
                            l6330 3654                              l6322 3620  
                            l6314 35E2                              l5418 3D1E  
                            l4482 40DA                              l4474 4092  
                            l4466 4022                              l4458 3FCE  
                            l4378 55EE                              l4386 58C2  
                            l4810 4CFE                              l4570 2C5E  
                            l4562 2C1C                              l4554 2BDE  
                            l4546 2BA6                              l4538 2B78  
                            l4490 2A70                              l4730 259E  
                            l4714 24F0                              l4706 24B8  
                            l4650 22A6                              l4642 2280  
                            l4634 2254                              l4626 2224  
                            l4298 1B2C                              l5370 11CA  
                            l5362 119E                              l5354 1164  
                            l5346 1110                              l5338 10EA  
                            l5290 0F4A                              l5274 0EDC  
                            l5282 0F16                              l5266 0E38  
                            l5258 0DD0                              l5194 0AA8  
                            l5186 0A62                              l5178 0A14  
                            l5098 06C8                              l5450 4980  
                            l5602 1480                              l5610 14E8  
                            l5514 4EC0                              l5506 4E86  
                            l6170 47CA                              l6162 4794  
                            l6154 4750                              l6250 3354  
                            l6242 32FC                              l6234 32A6  
                            l6226 3260                              l6218 3206  
                            l6090 4372                              l6082 4340  
                            l6146 5088                              l6138 5042  
                            l6074 4304                              l6066 42BE  
                            l6058 428E                              l6410 4FBA  
                            l6402 4F88                              l4900 44A6  
                            l5540 3872                              l5532 3826  
                            l5524 37F4                              l3828 5732  
                            l6260 4F02                              l6308 55A2  
                            l6340 36A0                              l6332 366C  
                            l6324 362E                              l6316 35EA  
                            l5428 3DC6                              l4476 40A4  
                            l4468 4036                              l4388 58CE  
                            l4820 4D32                              l4812 4D02  
                            l4804 4CE4                              l4572 2C74  
                            l4580 2CA4                              l4564 2C3A  
                            l4556 2BEE                              l4548 2BB6  
                            l4492 2A72                              l4740 2606  
                            l4724 255A                              l4732 25A2  
                            l4716 24F4                              l4708 24C2  
                            l4660 22FC                              l4652 22B6  
                            l4644 2286                              l4636 2264  
                            l4628 2232                              l4396 57AC  
                            l5380 121A                              l5372 11DA  
                            l5364 11A4                              l5356 116C  
                            l5348 111C                              l5292 0F50  
                            l5284 0F28                              l5276 0EEE  
                            l5268 0E44                              l5188 0A74  
                            l5196 0AC0                              l5452 4992  
                            l5444 493E                              l5620 158E  
                            l5612 150A                              l5604 148E  
                            l5516 4ECA                              l5508 4E90  
                            l5460 5634                              l5700 1F9A  
                            l6180 481C                              l6164 47A4  
                            l6172 47D8                              l6156 4756  
                            l6244 3330                              l6236 32B2  
                            l6228 326A                              l6252 3388  
                            l6092 4384                              l6084 4344  
                            l6148 5A0C                              l6076 4310  
                            l6068 42D2                              l6420 4FE8  
                            l6412 4FCA                              l6404 4F8A  
                            l4910 44D6                              l4902 44B4  
                            l5550 38E8                              l5542 38AE  
                            l5534 3832                              l5526 380A  
                            l5518 3790                              l6270 4F46  
                            l6262 4F1A                              l3870 5A50  
                            l6430 56FC                              l6350 36EC  
                            l6342 36B8                              l6334 367A  
                            l6326 3636                              l6318 35F8  
                            l4478 40AA                              l4830 4D6C  
                            l4822 4D3A                              l4814 4D10  
                            l4806 4CE8                              l4582 2CB2  
                            l4574 2C7A                              l4566 2C3C  
                            l4558 2C02                              l4494 2A82  
                            l4486 2A56                              l4750 2630  
                            l4742 2616                              l4734 25BC  
                            l4726 2566                              l4718 2502  
                            l4670 233C                              l4654 22C6  
                            l4646 2294                              l4638 226A  
                            l5390 1256                              l5382 122C  
                            l5374 11E0                              l5366 11B6  
                            l5358 1172                              l5294 0F5C  
                            l5286 0F36                              l5278 0F00  
                            l5454 49BA                              l5446 494C  
                            l5438 4908                              l5630 1656  
                            l5622 15B2                              l5614 151A  
                            l5462 5646                              l5710 20B8  
                            l5702 1FA8                              l6174 47EC  
                            l6166 47B4                              l6158 475A  
                            l6254 339C                              l6246 3342  
                            l6238 32C4                              l6190 30FA  
                            l6182 30D4                              l6094 438A  
                            l6086 4356                              l6078 4324  
                            l6422 4FF2                              l6414 4FCE  
                            l6406 4F9A                              l4920 4500  
                            l4912 44E0                              l5560 3930  
                            l5552 38EC                              l5544 38BA  
                            l5536 3864                              l5480 543A  
                            l5472 540E                              l6280 4F64  
                            l6272 4F4C                              l6264 4F20  
                            l6256 4EE2                              l3864 5A26  
                            l3872 5A5C                              l6440 5710  
                            l6432 5700                              l6360 3738  
                            l6352 3704                              l6344 36C6  
                            l6336 3682                              l6328 3644  
                            l4760 4B6E                              l4824 4D48  
                            l4832 4D72                              l4816 4D18  
                            l4808 4CF6                              l4592 2D1C  
                            l4584 2CB6                              l4576 2C84  
                            l4568 2C4C                              l4496 2A92  
                            l4488 2A62                              l4840 4D94  
                            l4744 2624                              l4736 25D0  
                            l4728 2574                              l4680 2386  
                            l4672 2348                              l4664 2310  
                            l4656 22CC                              l4648 2296  
                            l5384 1238                              l5376 11E6  
                            l5368 11C2                              l5296 0F6C  
                            l5288 0F46                              l5448 4964  
                            l5632 1668                              l5624 15D6  
                            l5616 154C                              l5608 14D6  
                            l5464 5648                              l5712 2132  
                            l5704 2022                              l5800 3A48  
                            l6176 47FA                              l6168 47C6  
                            l6248 3350                              l6192 30FE  
                            l6184 30E0                              l6096 438E  
                            l6088 4360                              l6424 5002  
                            l6416 4FD4                              l6408 4FAA  
                            l4922 4510                              l5554 3910  
                            l5546 38C8                              l5538 3866  
                            l5490 5918                              l3890 5982  
                            l5482 5448                              l5474 541C  
                            l6282 4F6A                              l6274 4F52  
                            l6266 4F30                              l6258 4EFC  
                            l3866 5A2A                              l6290 48D0  
                            l3874 5A5E                              l6442 5714  
                            l6434 5704                              l6426 56F4  
                            l6370 3784                              l6362 3750  
                            l6354 3712                              l6346 36CE  
                            l6338 3690                              l4930 4AA8  
                            l4770 4B9A                              l4762 4B72  
                            l4834 4D82                              l4826 4D5E  
                            l4818 4D2A                              l4594 2D28  
                            l4586 2CC4                              l4578 2C92  
                            l4498 2AA2                              l4850 4E34  
                            l4842 4DC2                              l4746 2626  
                            l4738 25EA                              l4690 23D8  
                            l4682 2392                              l4674 2360  
                            l4666 231C                              l4658 22EC  
                            l4754 55A8                              l5386 1240  
                            l5298 0F70                              l5650 1796  
                            l5634 167E                              l5642 16E8  
                            l5626 161E                              l5618 155C  
                            l5570 12BC                              l5730 2714  
                            l5466 5658                              l5458 5634  
                            l5714 2140                              l5706 2030  
                            l5810 3A8C                              l5802 3A50  
                            l6178 480C                              l6194 310E  
                            l6186 30E4                              l6098 4398  
                            l6450 520E                              l6418 4FE6  
                            l4924 4520                              l4908 44CC  
                            l5556 3920                              l5548 38E6  
                            l5492 591A                              l3892 5986  
                            l5484 5450                              l5476 5424  
                            l6284 4F70                              l6276 4F58  
                            l6268 4F36                              l3868 595A  
                            l5900 59D8                              l6292 48DA  
                            l6444 5720                              l6436 5708  
                            l6428 56F8                              l6364 375E  
                            l6356 371A                              l6348 36DC  
                            l5396 3C80                              l4940 4AFA  
                            l4932 4AB8                              l4780 4BC8  
                            l4772 4BA2                              l4764 4B80  
                            l4836 4D8A                              l4828 4D66  
                            l4596 2D36                              l4588 2CF2  
                            l4852 4E3A                              l4844 4DD2  
                            l4860 4580                              l4748 262C  
                            l4692 23E8                              l4684 23A2  
                            l4676 236C                              l4668 2326  
                            l4756 55B8                              l5388 1250  
                            l5660 1832                              l5652 17CA  
                            l5644 1716                              l5636 168C  
                            l5580 133E                              l5572 12C2  
                            l5564 1278                              l5740 2984  
                            l5732 277E                              l5468 566A  
                            l5708 20AA                              l5820 3ADE  
                            l5812 3AA2                              l5804 3A62  
                            l6188 30F6                              l6196 3112  
                            l6380 4C4E                              l6372 4C32  
                            l6460 525A                              l6452 5212  
                            l4926 4530                              l4918 44F4  
                            l5558 392E                              l3894 5996  
                            l5486 545E                              l5478 5432  
                            l5750 59F8                              l6278 4F5E  
                            l5902 59DA                              l6294 48E4  
                            l6286 4828                              l6446 572C  
                            l6438 570C                              l6366 3766  
                            l6358 3728                              l5830 592E  
                            l5398 3C94                              l4942 4B0E  
                            l4934 4ACC                              l4790 4C02  
                            l4782 4BD0                              l4774 4BA6  
                            l4766 4B88                              l4598 2D60  
                            l4846 4E00                              l4870 45EC  
                            l4862 45AE                              l4694 2404  
                            l4686 23AE                              l4678 2378  
                            l5670 1870                              l5662 1840  
                            l5638 16BC                              l5582 135E  
                            l5590 13C6                              l5574 12E6  
                            l5566 129C                              l5822 5280  
                            l5742 299E                              l5734 27FC  
                            l5726 2642                              l5718 21BA  
                            l5814 3AAA                              l5806 3A6E  
                            l5910 3B16                              l6198 3124  
                            l6390 4C76                              l6382 4C56  
                            l6374 4C36                              l6462 526C  
                            l6454 5224                              l6470 5A40  
                            l5488 58F8                              l5752 59FA  
                            l5760 5864                              l6296 48FC  
                            l6288 48C6                              l6368 3774  
                            l5840 593C                              l5832 5932  
                            l4952 56B4                              l4944 4B12  
                            l4936 4ADA                              l4792 4C04  
                            l4784 4BDE                              l4776 4BAE  
                            l4768 4B8C                              l4848 4E10  
                            l4872 463C                              l4864 45BE  
                            l4856 4542                              l4696 2410  
                            l4688 23BE                              l4880 57FA  
                            l4960 46A4                              l5664 1854  
                            l5648 1784                              l5592 13EA  
                            l5584 136C                              l5576 131C  
                            l5568 12AA                              l5824 5288  
                            l5496 4E3E                              l5744 29E6  
                            l5736 289C                              l5728 2674  
                            l5816 3AC0                              l5808 3A84  
                            l5920 3B7A                              l5912 3B2C  
                            l5904 3AE8                              l6384 4C5E  
                            l6376 4C3E                              l6456 5236  
                            l6448 520A                              l6472 5A44  
                            l5754 5A08                              l5746 59F0  
                            l5850 52FC                              l5770 587E  
                            l5762 586C                              l6298 4900  
                            l5842 5940                              l5834 5936  
                            l4954 56CE                              l4946 4B40  
                            l4938 4AE6                              l4794 4C0A  
                            l4786 4BE4                              l4778 4BC0  
                            l4874 4642                              l4866 45CC  
                            l4858 4570                              l4698 242C  
                            l4882 580A                              l4970 46F6  
                            l4962 46CC                              l5658 180E  
                            l5594 13F4                              l5578 132C  
                            l5674 187E                              l5826 5296  
                            l5498 4E4E                              l5738 2906  
                            l5690 1E10                              l5682 1D76  
                            l5818 3AC8                              l5930 3BA8  
                            l5922 3B8A                              l5914 3B3C  
                            l5906 3AF4                              l6386 4C66  
                            l6378 4C46                              l6394 4C7E  
                            l6458 5248                              l4892 4466  
                            l5780 51A8                              l5748 59F2  
                            l5860 5342                              l5852 530E  
                            l5772 5880                              l5764 586E  
                            l5756 5856                              l5844 5944  
                            l5836 5938                              l6580 3D3C  
                            l4948 4B54                              l4788 4BFA  
                            l4796 4C10                              l4868 45DE  
                            l4964 46D8                              l4956 4646  
                            l4980 53C0                              l5676 18A2  
                            l5668 1862                              l5596 1402  
                            l5588 13B4                              l5828 52C4  
                            l5692 1E8A                              l5684 1D7A  
                            l5940 3BEA                              l5932 3BB8  
                            l5924 3B8E                              l5916 3B5A  
                            l5908 3B08                              l6388 4C6E  
                            l6468 5A3C                              l4894 4490  
                            l4886 443C                              l5782 51F0  
                            l5790 5176                              l5846 5A62  
                            l5862 5348                              l5854 5314  
                            l5774 5888                              l5766 5876  
                            l5758 5862                              l5870 50D8  
                            l5838 593A                              l4798 4C20  
                            l4878 57E4                              l4974 473A  
                            l4958 4666                              l4982 5350  
                            l5598 1426                              l5694 1E98  
                            l5686 1D88                              l5950 3C06  
                            l5942 3BEC                              l5934 3BC8  
                            l5926 3B90                              l5918 3B6A  
                            l4896 4492                              l4888 4452  
                            l5776 5190                              l5784 5116  
                            l5856 531E                              l5848 52EC  
                            l5768 5878                              l5864 5098  
                            l4968 46E4                              l4992 33AC  
                            l5872 5770                              l5696 1F12  
                            l5688 1E02                              l5792 3942  
                            l5880 58A8                              l5960 3C2E  
                            l5952 3C16                              l5944 3BEE  
                            l5936 3BD8                              l5928 3B92  
                            l6576 4C94                              l4898 44A2  
                            l5778 5190                              l5786 5116  
                            l5858 5330                              l5866 50A4  
                            l4994 33CC                              l4978 53B0  
                            l4986 5386                              l5890 54DC  
                            l5874 5792                              l6578 21D0  
                            l5698 1F20                              l5794 3942  
                            l5882 58B4                              l5970 3C4E  
                            l5954 3C26                              l5962 3C34  
                            l5946 3BF0                              l5938 3BDC  
                            l5788 512E                              l5868 50D4  
                            l4996 3424                              l4988 5398  
                            l5892 54F8                              l5884 54BA  
                            l5876 579E                              l5796 3942  
                            l5980 3C76                              l5972 3C56  
                            l5964 3C38                              l5956 3C2A  
                            l5948 3BF4                              l4998 3438  
                            l5886 54CC                              l5990 4128  
                            l5982 40FC                              l5798 3982  
                            l5878 588C                              l5974 3C5E  
                            l5966 3C3C                              l5958 3C2C  
                            l5896 59D2                              l5888 54D4  
                            l5992 413A                              l5984 4108  
                            l5976 3C66                              l5968 3C46  
                            l5898 59D6                              l5994 414C  
                            l5986 410C                              l5978 3C6E  
                            l5996 4152                              l5988 411E  
                            l5998 4156                              STR_1 0689  
                            STR_2 0668                              STR_3 0635  
                            STR_4 0613                              STR_5 0699  
                            STR_6 0613                              STR_7 06A7  
                            STR_8 0624                              STR_9 0601  
                            u4000 4A2A                              u4001 4A26  
                            u4010 4A60                              u4011 4A5C  
                            u4100 19B6                              u4020 18D0  
                            u4101 19B2                              u4021 18CC  
                            u4110 1A24                              u4030 18E2  
                            u4111 1A20                              u4031 18DE  
                            u5000 4B80                              u4200 1B02  
                            u4120 1A3C                              u4040 18F2  
                            u5001 4B7C                              u4201 1AFE  
                            u4121 1A36                              u4041 18EE  
                            u5010 4B9A                              u4210 1B20  
                            u4130 1A3E                              u4050 1934  
                            u5011 4B96                              u4211 1B1C  
                            u4051 1930                              u5020 4BC0  
                            u5100 4D5E                              u4300 1C5E  
                            u4220 1B58                              u4140 1A66  
                            u4060 194A                              u5021 4BBC  
                            u5101 4D5A                              u4301 1C5A  
                            u4221 1B54                              u4141 1A62  
                            u4061 1946                              u5030 4BDE  
                            u5110 4D82                              u4310 1C74  
                            u4230 1B9E                              u4150 1A84  
                            u4070 195C                              u5031 4BDA  
                            u5111 4D7E                              u4311 1C70  
                            u4231 1B9A                              u4151 1A80  
                            u4071 1958                              u5040 4BFA  
                            u5120 4DC2                              u5200 57FA  
                            u4400 1D62                              u4320 1C8A  
                            u4240 1BD4                              u4160 1AA4  
                            u4080 196C                              u6000 0BA0  
                            u5041 4BF6                              u5121 4DBE  
                            u5201 57F6                              u4401 1D5E  
                            u4321 1C86                              u4241 1BD0  
                            u4161 1AA0                              u4081 1968  
                            u6001 0B9C                              u5210 4452  
                            u4410 5630                              u5050 4C20  
                            u5130 4E00                              u4330 1C9E  
                            u4250 1BE4                              u4170 1AB2  
                            u4090 19A8                              u6010 0BCA  
                            u5211 444E                              u4411 562C  
                            u5051 4C1C                              u5131 4DFC  
                            u4331 1C9A                              u4251 1BE0  
                            u4171 1AAE                              u4091 19A4  
                            u6011 0BC6                              u5220 4486  
                            u4500 3F0C                              u4420 58EA  
                            u5300 4B30                              u5060 4CF6  
                            u5140 4E34                              u4340 1CB8  
                            u4260 1C10                              u4180 1AC2  
                            u6100 0F0E                              u6020 0D12  
                            u4501 3F08                              u4421 58E6  
                            u5301 4B2C                              u5061 4CF2  
                            u5141 4E30                              u4341 1CB4  
                            u4261 1C0C                              u4181 1ABE  
                            u6101 0F0A                              u6021 0D0E  
                            u5230 44B4                              u4510 3F56  
                            u5310 4B40                              u5070 4D10  
                            u5150 4570                              u4350 1CF2  
                            u4270 1C20                              u4190 1AF4  
                            u4430 57DC                              u6110 0F28  
                            u6030 0D78                              u5231 44B0  
                            u4511 3F52                              u5311 4B3C  
                            u5071 4D0C                              u5151 456C  
                            u4351 1CEE                              u4271 1C1C  
                            u4191 1AF0                              u4431 57D6  
                            u6111 0F24                              u6031 0D74  
                            u5240 44C8                              u3560 5A3A  
                            u4520 3FAA                              u5320 56CE  
                            u5080 4D2A                              u4600 2A92  
                            u5160 45AE                              u4360 1D04  
                            u4280 1C3C                              u5400 53F8  
                            u4440 57DE                              u6200 1184  
                            u6120 0F36                              u6040 0DC0  
                            u7000 3BB8                              u5241 44C4  
                            u5225 447C                              u3561 5A36  
                            u4521 3FA6                              u5321 56CA  
                            u5081 4D26                              u4601 2A8E  
                            u5161 45AA                              u4361 1D00  
                            u4281 1C38                              u6201 1180  
                            u6121 0F32                              u6041 0DBC  
                            u7001 3BB4                              u5250 44F0  
                            u4450 3E22                              u4530 3FDC  
                            u5090 4D48                              u4610 2AD6  
                            u5170 45CC                              u4370 1D14  
                            u4290 1C4C                              u5330 4686  
                            u5410 540A                              u6210 119E  
                            u6130 0F8E                              u6050 0DD0  
                            u7010 3BC8                              u5251 44EC  
                            u4451 3E1E                              u4531 3FD8  
                            u5091 4D44                              u4611 2AD2  
                            u5171 45C8                              u4371 1D10  
                            u4291 1C48                              u5411 5406  
                            u6211 119A                              u6131 0F8A  
                            u6051 0DCC                              u7011 3BC4  
                            u5260 4510                              u6300 3DC2  
                            u4460 3E54                              u4540 401A  
                            u4700 2C74                              u4620 2AE8  
                            u5180 45EC                              u4380 1D34  
                            u5340 46A4                              u5500 34D8  
                            u5420 5380                              u6220 11B6  
                            u6140 1060                              u6060 0E38  
                            u7100 4184                              u7020 3BD8  
                            u5261 450C                              u4461 3E50  
                            u4541 4016                              u4701 2C70  
                            u4621 2AE4                              u5181 45E8  
                            u4381 1D30                              u5341 46A0  
                            u5421 537A                              u6221 11B2  
                            u6141 105C                              u6061 0E34  
                            u7101 4180                              u7021 3BD4  
                            u5270 4520                              u6310 3DD8  
                            u4550 4044                              u4710 2C92  
                            u4630 2AF8                              u5190 463C  
                            u4390 1D46                              u5350 46CC  
                            u5510 34F4                              u5430 5382  
                            u6230 1214                              u6150 107C  
                            u6070 0EDC                              u7110 4196  
                            u7030 3C06                              u5271 451C  
                            u6311 3DD4                              u4471 3E7E  
                            u4551 4040                              u4711 2C8E  
                            u4631 2AF4                              u5191 4638  
                            u4391 1D42                              u5351 46C8  
                            u5335 467C                              u5511 34F0  
                            u5407 53EE                              u6231 120E  
                            u6151 1078                              u6071 0ED8  
                            u7111 4192                              u7031 3C02  
                            u6400 5432                              u6320 3DEA  
                            u4480 3EA2                              u4560 4072  
                            u5280 4AB8                              u5600 2E22  
                            u4800 2DDC                              u4720 2CB2  
                            u4640 2B38                              u5360 46F6  
                            u5520 3548                              u5440 5398  
                            u6240 1216                              u6160 108E  
                            u6080 0EEE                              u7120 4218  
                            u7040 3C16                              u6401 542E  
                            u6321 3DE6                              u4481 3E9E  
                            u4561 406E                              u5281 4AB4  
                            u4801 2DD8                              u4721 2CAE  
                            u4641 2B34                              u5361 46F2  
                            u5505 34CE                              u5441 5394  
                            u6161 108A                              u6081 0EEA  
                            u7121 4214                              u7041 3C12  
                            u7201 433A                              u6410 5448  
                            u4490 3ECC                              u4570 40BA  
                            u5290 4ADA                              u5610 2E38  
                            u4730 2CC4                              u4650 2B78  
                            u4810 2232                              u5530 3564  
                            u5450 33F4                              u6250 122C  
                            u6170 109C                              u6090 0F00  
                            u6330 4932                              u7050 3C26  
                            u7210 4356                              u6411 5444  
                            u4491 3EC8                              u4571 40B6  
                            u5291 4AD6                              u5611 2E34  
                            u4731 2CC0                              u4651 2B74  
                            u4811 222E                              u5531 3560  
                            u6251 1228                              u6171 1098  
                            u6091 0EFC                              u6331 492E  
                            u7051 3C22                              u7211 4352  
                            u7131 422E                              u6500 38AA  
                            u6420 545E                              u6260 3CB8  
                            u5700 304C                              u5620 2E68  
                            u4740 2CF2                              u4660 2BEE  
                            u4580 2A70                              u4900 24D0  
                            u4820 2244                              u5380 4730  
                            u5540 35A0                              u5460 3424  
                            u6180 10D2                              u6340 4964  
                            u7220 4372                              u7140 424A  
                            u6501 38A6                              u6421 545A  
                            u6261 3CB4                              u5701 3048  
                            u5621 2E64                              u4741 2CEE  
                            u4661 2BEA                              u4581 2A6C  
                            u4901 24CC                              u4821 2240  
                            u5381 472A                              u5541 359C  
                            u5525 353E                              u5461 3420  
                            u6181 10CE                              u6341 4960  
                            u7061 4102                              u7301 474A  
                            u7221 436E                              u7141 4246  
                            u6510 38C8                              u5550 584C  
                            u6270 3CEE                              u5710 305E  
                            u5630 2E84                              u4750 2D08  
                            u4670 2C10                              u4590 2A82  
                            u4910 24F0                              u4830 2254  
                            u5390 4732                              u5470 3446  
                            u6190 1100                              u6350 4980  
                            u7070 411E                              u6430 4E64  
                            u7310 476C                              u7230 4384  
                            u7150 4266                              u6511 38C4  
                            u8007 4F3C                              u5551 5846  
                            u6271 3CEA                              u5711 305A  
                            u5631 2E80                              u4751 2D04  
                            u4671 2C0C                              u4591 2A7E  
                            u4911 24EC                              u4831 2250  
                            u5375 4708                              u5471 3442  
                            u5455 33EA                              u6191 10FC  
                            u6351 497C                              u7071 411A  
                            u6431 4E60                              u7311 4768  
                            u7231 4380                              u7151 4262  
                            u6520 38D8                              u5560 584E  
                            u6280 3D0A                              u5720 306E  
                            u5640 2EB2                              u4760 2D1C  
                            u4680 2C3A                              u4920 2502  
                            u4840 2294                              u5800 07DA  
                            u6360 4992                              u6600 13B0  
                            u7080 413A                              u6440 4E86  
                            u7320 4794                              u7400 30F6  
                            u7240 43AA                              u7160 4278  
                            u6521 38D4                              u8017 5A00  
                            u6281 3D06                              u5721 306A  
                            u5641 2EAE                              u4761 2D18  
                            u4681 2C36                              u4921 24FE  
                            u4841 2290                              u6361 498E  
                            u7081 4136                              u6441 4E82  
                            u7321 4790                              u7401 30F2  
                            u7241 43A6                              u7161 4274  
                            u6530 38E6                              u5570 5524  
                            u6290 3DC0                              u5730 3086  
                            u5650 2EC0                              u4770 2D36  
                            u4690 2C5E                              u4930 2530  
                            u4850 22A6                              u5490 34B4  
                            u5810 07F0                              u6370 49BA  
                            u6610 13C6                              u7090 414C  
                            u6450 4EAE                              u7330 47A4  
                            u7410 310E                              u7250 43BC  
                            u7170 42A0                              u6531 38E2  
                            u5571 5520                              u6291 3DBA  
                            u5731 3082                              u5651 2EBC  
                            u4771 2D32                              u4691 2C5A  
                            u4931 252C                              u4851 22A2  
                            u5491 34B0                              u5811 07EC  
                            u6371 49B6                              u6611 13C2  
                            u7091 4148                              u6451 4EAA  
                            u7331 47A0                              u7411 310A  
                            u7251 43B8                              u7171 429C  
                            u6540 3920                              u6460 37A0  
                            u5580 5552                              u3980 49F0  
                            u5660 2FEA                              u4780 2D7E  
                            u4940 2546                              u4860 22B6  
                            u5900 0A86                              u5820 087C  
                            u5740 06F0                              u6700 15D6  
                            u6620 13EA                              u6380 5658  
                            u7340 47B4                              u7500 3342  
                            u7420 3124                              u7260 442C  
                            u7180 42B2                              u6541 391C  
                            u6461 379C                              u5581 554E  
                            u3981 49EC                              u5661 2FE6  
                            u4781 2D7A                              u4941 2542  
                            u4861 22B2                              u5485 345A  
                            u5901 0A82                              u5821 0878  
                            u5741 06EC                              u6701 15D2  
                            u6621 13E6                              u6381 5654  
                            u7341 47B0                              u7501 333E  
                            u7421 3120                              u7261 4428  
                            u7181 42AE                              u6550 392E  
                            u6470 37AE                              u6390 541C  
                            u3990 4A02                              u5670 3008  
                            u5590 2E20                              u4790 2DAE  
                            u4950 255A                              u4870 22EC  
                            u5486 3464                              u5910 0AA8  
                            u5830 08AC                              u5750 0740  
                            u6710 1668                              u6630 1426  
                            u7350 47C6                              u7510 3350  
                            u7430 3188                              u7190 4324  
                            u6551 392A                              u6471 37AA  
                            u6391 5418                              u3991 49FE  
                            u5671 3004                              u5591 2E1A  
                            u4791 2DAA                              u4951 2556  
                            u4871 22E8                              u5487 3474  
                            u5911 0AA4                              u5831 08A6  
                            u5751 073C                              u6711 1664  
                            u6631 1422                              u7351 47C2  
                            u7511 334C                              u7431 3184  
                            u7271 500E                              u7191 4320  
                            u6480 380A                              u7600 3654  
                            u5680 3022                              u4960 2574  
                            u4880 22FC                              u5920 0ACE  
                            u5840 08AE                              u5760 074E  
                            u6720 1716                              u6640 14D0  
                            u6560 129C                              u6800 3AA2  
                            u7360 47EC                              u7520 339C  
                            u7440 31BA                              u7280 5056  
                            u6481 3806                              u7601 3650  
                            u5681 301E                              u4961 2570  
                            u4881 22F8                              u5921 0ACA  
                            u5761 074A                              u6721 1712  
                            u6641 14CA                              u6561 1298  
                            u6801 3A9E                              u7361 47E8  
                            u7521 3398                              u7441 31B6  
                            u7281 5052                              u6490 3860  
                            u7610 366C                              u7530 35D4  
                            u5690 303C                              u4970 25BC  
                            u4890 2476                              u5930 0AE4  
                            u5850 08C4                              u5770 0760  
                            u6730 177E                              u6650 14D2  
                            u6570 12E6                              u6810 3AC0  
                            u7370 480C                              u7450 3206  
                            u7290 5088                              u6491 385C  
                            u7611 3668                              u7531 35D0  
                            u5691 3038                              u4971 25B8  
                            u5931 0AE0                              u5851 08C0  
                            u5771 075C                              u6731 1778  
                            u6571 12E2                              u6811 3ABC  
                            u7371 4808                              u7451 3202  
                            u7291 5084                              u6900 59EA  
                            u7700 3712                              u7620 367A  
                            u7540 35E2                              u4980 25EA  
                            u5940 0B00                              u5860 0948  
                            u5780 07A8                              u6740 1780  
                            u6660 14E8                              u6580 132C  
                            u6820 3ADE                              u7380 481C  
                            u7460 3214                              u6901 59E6  
                            u7701 370E                              u7621 3676  
                            u7541 35DE                              u4981 25E6  
                            u5941 0AFC                              u5861 0944  
                            u5781 07A4                              u6661 14E4  
                            u6581 1328                              u6821 3ADA  
                            u7381 4818                              u7461 3210  
                            u7710 3728                              u7630 3690  
                            u7550 35F8                              u4990 2624  
                            u5950 0B36                              u5870 09DC  
                            u5790 07D8                              u6750 1796  
                            u6670 151A                              u6590 13AE  
                            u6830 52E0                              u7470 3260  
                            u7711 3724                              u7631 368C  
                            u7551 35F4                              u4991 2620  
                            u4895 246C                              u5951 0B32  
                            u5871 09D8                              u5791 07D2  
                            u6751 1792                              u6671 1516  
                            u6591 13A8                              u6831 52DC  
                            u6911 3AEE                              u7471 325C  
                            u7391 30DA                              u7720 3738  
                            u7640 36A0                              u7560 3608  
                            u6840 5954                              u5960 0B5C  
                            u5880 0A4E                              u6760 1832  
                            u6680 155C                              u6920 3B08  
                            u7480 32C4                              u7800 4FBA  
                            u7721 3734                              u7641 369C  
                            u7561 3604                              u6841 5950  
                            u5961 0B58                              u5881 0A4A  
                            u6761 182E                              u6681 1558  
                            u6921 3B04                              u7481 32C0  
                            u7801 4FB6                              u6770 51A8  
                            u6850 52FC                              u7730 3750  
                            u7650 36B8                              u7570 3620  
                            u5970 0B6E                              u5890 0A74  
                            u6690 15B2                              u6930 3B2C  
                            u7490 32F6                              u7810 4FCA  
                            u6771 51A4                              u6851 52F8  
                            u7731 374C                              u7651 36B4  
                            u7571 361C                              u5971 0B6A  
                            u5891 0A70                              u6691 15AE  
                            u6931 3B28                              u7491 32F2  
                            u7811 4FC6                              u6780 512E  
                            u6860 5330                              u7740 375E  
                            u7660 36C6                              u7580 362E  
                            u5980 0B7C                              u6940 3B3C  
                            u7820 4FE6                              u6781 512A  
                            u6861 532C                              u7741 375A  
                            u7661 36C2                              u7581 362A  
                            u5981 0B78                              u6941 3B38  
                            u7821 4FE2                              u6870 50D0  
                            u7750 3774                              u7670 36DC  
                            u7590 3644                              u5990 0B92  
                            u6790 3A84                              u6950 3B5A  
                            u7830 5002                              u7751 3770  
                            u7671 36D8                              u7591 3640  
                            u5991 0B8E                              u6791 3A80  
                            u6951 3B56                              u7831 4FFE  
                            u6880 5104                              u7760 3784  
                            u7680 36EC                              u6960 3B6A  
                            u7840 5224                              u7761 3780  
                            u7681 36E8                              u6961 3B66  
                            u7841 5220                              u6890 5114  
                            u7690 3704                              u6970 3B7A  
                            u7850 5248                              u7770 4F88  
                            u6891 5110                              u7691 3700  
                            u6971 3B76                              u7851 5244  
                            u7771 4F84                              u6980 3B8A  
                            u7860 526C                              u7780 4F9A  
                            u6877 50C6                              u6981 3B86  
                            u7861 5268                              u7781 4F96  
                            u6990 3BA8                              u7790 4FAA  
                            u6887 50FA                              u6991 3BA4  
                            u7791 4FA6                              u7947 48EE  
                            u7957 5594                              u7967 5870  
                            u7977 5882                              u7987 4F0C  
                            u7997 4F26                              _TMR2 000FBC  
           ??_stopTimeSettingMenu 005F                              abs@a 0013  
                            _dbuf 0269                              _atoi 3C80  
                            _main 5A3C                              _dtoa 2DF0  
                            _prec 00F6                              _nout 01B7  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              btemp 005F  
                   ___fpclassifyf 4646                              prodh 000FF4  
                            prodl 000FF3                              start 00AE  
                 ___fldiv@new_exp 0046                      _tolower$3160 000D  
                    ___param_bank 000000           ??_driverTimeSettingMenu 005F  
                           ??_abs 0015                             ??_pad 0017  
speedLimitSettingMenu@textCursor2 00E1                     ___fltol@sign1 0056  
                 __end_of___aodiv 3F98                             ?_atoi 0008  
                 __end_of___fladd 1D76                             ?_main 0001  
                           ?_dtoa 001C                   __end_of___aomod 40FC  
                 __end_of_adcInit 5770                   __end_of___fldiv 2DF0  
                 __end_of___awdiv 4C32                   __end_of___flneg 581C  
                           _EEADR 000FA9                             STR_10 0657  
                           STR_11 0679                             STR_12 0646  
                           STR_13 0601                             STR_22 06C4  
                           STR_14 06B4                             STR_15 06BC  
                           STR_24 06C4                             STR_18 06B8  
                           STR_19 06C0                   __end_of___awmod 4D94  
                 __end_of___flmul 2642                   __end_of___flsub 55EE  
                 __end_of___fltol 4542                   __end_of___lldiv 4EE2  
                           _T0CON 000FD5                   ___awdiv@divisor 0003  
                           i2l697 00AA                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 00A9                             _TMR0H 000FD7  
                           _TMR0L 000FD6                   __end_of_lcdInit 4F78  
                 __end_of_lcdPort 5468                             _fabsf 58F8  
                 __end_of_mcuInit 5A3C                             _flags 00F8  
                           _fputc 49DE                             _fputs 55EE  
                 __end_of_isdigit 5854                       ?_PWM1_setDC 0058  
                    _adc_raw_data 0187                       ?_PWM2_setDC 0058  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 01B9  
                           _putch 5A72                             dtoa@d 001E  
                           dtoa@i 003E                             dtoa@n 0036  
                           dtoa@p 0030                             dtoa@s 0034  
                           dtoa@w 0032                   __end_of_isspace 555E  
                 __end_of_isupper 57E4                  __end_of_PWM_Init 59AA  
                           tablat 000FF5                             ttemp5 0060  
                           ttemp6 0063                             ttemp7 0067  
                           status 000FD8            ?_speedLimitSettingMenu 0001  
                           wtemp8 0060                   __end_of_sprintf 550C  
                  ?___fpclassifyf 0001                   __end_of_tolower 53B0  
                 __end_of_strncmp 49DE                     ?_readAdcValue 0001  
                 __initialization 5468                      __end_of_atoi 3E10  
                    __end_of_main 5A50                      __end_of_dtoa 30D4  
     _KP@fs_speed_controller$F955 01EF                            ??_atoi 000A  
                          ??_main 005F                            ??_dtoa 0026  
             _loopTaskMenuControl 520A                     __activetblptr 000002  
 __size_of_calculatedAverageValue 0414              __end_of_lcdSetCursor 5350  
                ??_lcdWriteString 0007          stopTimeSettingMenu@F7081 0249  
                          ?_fabsf 001C                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            ?_fputc 0001  
                          ?_fputs 000A                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _EEDATA 000FA8  
                          _CCPR1L 000FBE                            _CCPR2L 000F67  
                          _EECON2 000FA7                  ___awdiv@dividend 0001  
                          ?_putch 0001                            i2l6500 0088  
                          i2l6502 009E                            i2l6504 00A6  
                          i2l6480 0028                            i2l6490 005A  
                          i2l6482 0030                            i2l6474 000A  
                          i2l6492 0060                            i2l6484 0034  
                          i2l6476 0018                            i2l6494 0072  
                          i2l6486 0044                            i2l6478 0026  
                          i2l6496 0074                            i2l6488 0048  
                          i2l6498 0084                            _TIMER0 0008  
                  ??_readAdcValue 0003              ?_loopTaskMenuControl 0001  
                __end_of___xxtofl 3942                 _scanAdcConversion 1D76  
              _timer_counter_flag 00FA                  __end_of_lcdClear 5A70  
              ?_scanAdcConversion 0001              __size_of_eepromWrite 002E  
                    vfprintf@cfmt 00CD                            ___flge 4542  
                          ___fleq 4D94                  __end_of_mainMenu 3C80  
                       ??___aodiv 0011                         ??___fladd 003D  
                       ??___aomod 0011                            ___wmul 59AA  
                       ??_adcInit 0001                         ??___fldiv 003D  
                       ??___awdiv 0005              __end_of_lcdWriteChar 588C  
                       ??___flneg 0005                   lcdWriteString@a 0005  
                       ??___awmod 0005                   lcdWriteString@i 0009  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _lcdCmd 59EE                            _efgtoa 06C8  
                          _floorf 33AC               __size_of_PWM1_setDC 007A  
                          fabsf@u 0020                            fabsf@x 001C  
                __end_of_exitLine 5A72               __size_of_PWM2_setDC 007A  
               _secretMenuCounter 00FC               ??_scanAdcConversion 0058  
                          clear_0 548E                            clear_1 549A  
                          clear_2 54A6                   eepromWrite@data 0001  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                       ??_lcdInit 0004                   ___awmod@counter 0005  
                          pad@buf 0013                         ??_lcdPort 0001  
                          dtoa@fp 001C                            _strcpy 53B0  
                          _strlen 58C2                         ??_mcuInit 0001  
                          fputc@c 0001              readAdcValue@adcValue 0006  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_isdigit 0003  
                 ___fpclassifyf@e 0009                   ___fpclassifyf@u 000B  
                 ___fpclassifyf@x 0001                      __mediumconst 0000  
                       ??_isspace 0003                            tblptrh 000FF7  
                       ??_isupper 0003                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0001  
                __end_of_vfprintf 52EA                         ??_sprintf 005F  
                       ??_tolower 0009                  __end_of_stopMenu 5098  
                       ??_strncmp 0007        __end_of_buttonControlFlags 378E  
                      ___flge@ff1 0035                        ___flge@ff2 0039  
                 ??___fpclassifyf 0005                      ___xxtofl@arg 0018  
                    ___xxtofl@exp 0017                     mainMenu@F7065 0177  
                    ___xxtofl@val 000E                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005         __end_of_scanAdcConversion 2218  
                      __accesstop 0060           __end_of__initialization 54AC  
           ??_loopTaskMenuControl 005F                        ___flneg@f1 0001  
          _calculatedAverageValue 2642                     ___rparam_used 000001  
                      ___fltol@f1 004E               _loopTaskTimeMachine 4F78  
                  __pcstackCOMRAM 0001                      __pidataBANK1 5674  
      driverTimeSettingMenu@F7084 0239                     __end_of_fabsf 592C  
                ??_openLCD_Script 000B                     __end_of_fputc 4AA8  
                   __end_of_fputs 5632                     __end_of_putch 5A74  
                       ?_PWM_Init 0001      _KP@fs_speed_controller$F1171 01E7  
    _KP@fs_speed_controller$F2220 01C7      _KP@fs_speed_controller$F1353 01DF  
    _KP@fs_speed_controller$F2087 01CF      _KP@fs_speed_controller$F2375 01BF  
    _KP@fs_speed_controller$F1856 01D7                 eepromRead@address 0001  
            ?_loopTaskTimeMachine 0001                  lcdWriteChar@temp 0002  
                         ??_fabsf 0020                     ?_loopTaskInit 0001  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_putch 0001                        __pbssBANK0 00F3  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
             PWM1_setDC@dutycycle 0058                           ?_TIMER0 0001  
                         ?___flge 0035                           ?___fleq 0001  
              __size_of_pauseMenu 00E4                           ?___wmul 0001  
                         ?_lcdCmd 0001                           ?_efgtoa 0058  
  __size_of_driverTimeSettingMenu 012C                           _CCP1CON 000FBD  
                         _CCP2CON 000F66                           ?_floorf 004E  
           __size_of_lcdSetCursor 0066     __end_of_driverTimeSettingMenu 4228  
                      ??_PWM_Init 0001                           ?_strcpy 0001  
                         ?_strlen 0001              __end_of_readAdcValue 5674  
                      _eepromRead 59D0                         ?___xxtofl 000E  
           ??_loopTaskTimeMachine 0001    stopTimeSettingMenu@textCursor2 00E1  
              __size_of_vfpfcnvrt 063E                         ?_lcdClear 0001  
     __end_of_stopTimeSettingMenu 4334                    ??_loopTaskInit 005E  
              __size_of_startMenu 001A                      ??_PWM1_setDC 005A  
                    ??_PWM2_setDC 005A           __size_of_menuInitialize 0028  
         ??_speedLimitSettingMenu 005F                         ?_mainMenu 0001  
                   _menu_selected 00FB                __size_of_stopMotor 003C  
      __size_of_scanAdcConversion 04A2                         ?_exitLine 0001  
                 __size_of_TIMER0 00A6                        _controller 0134  
           __size_of_lcdWriteChar 0038                      _lcdSetCursor 52EA  
                         __Hparam 0000                           __Lparam 0000  
             PWM2_setDC@dutycycle 0058                   __size_of___flge 0104  
                 __size_of___fleq 00AA                           ___aodiv 3E10  
                         ___fladd 18B6                           ___aomod 3F98  
                         _adcInit 5732                           ___fldiv 2A56  
                         ___awdiv 4B6E                           ___flneg 57E4  
                         ___awmod 4CE4                           ___flmul 2218  
                         ___flsub 55A8                           ___fltol 443C  
                         ___lldiv 4E3E                   __size_of___wmul 0026  
                       ?_vfprintf 00C7                   __size_of_lcdCmd 001E  
                    __psmallconst 0600                   __size_of_efgtoa 0BB0  
                       ?_stopMenu 0001                   __size_of_floorf 0216  
                         __pcinit 5468                __end_of_PWM1_setDC 520A  
                         __ramtop 0600                __end_of_PWM2_setDC 5190  
                         _lcdInit 4EE2                           __ptext0 5A3C  
                         __ptext1 4F78                           __ptext2 520A  
                         __ptext3 4C32                           __ptext4 4228  
                         __ptext5 5008                           __ptext6 5A0C  
                         __ptext7 4334                           __ptext8 30D4  
                         __ptext9 4744                           _lcdPort 540C  
                      _menu_flags 019F                        _menu_value 00F3  
                 __size_of_strcpy 005C                   __size_of_strlen 0036  
                         _mcuInit 5A26                         _T2CONbits 000FBA  
                    __size_of_abs 0040                      __size_of_pad 00C6  
                         _isdigit 581C                        ??___xxtofl 0012  
                ___awmod@dividend 0001                           lcdCmd@a 0003  
                         _isspace 550C                           _isupper 57AC  
                      ??_lcdClear 0004                           efgtoa@c 005E  
                         efgtoa@d 0087                           efgtoa@e 009F  
                         efgtoa@f 005A                           efgtoa@g 009B  
                         efgtoa@h 0091                           efgtoa@i 0099  
                         efgtoa@l 0095                           efgtoa@m 0083  
                         efgtoa@n 00A1                           efgtoa@p 008B  
                         efgtoa@t 007F                           efgtoa@u 00A3  
                         efgtoa@w 008E                     ?_speedControl 0058  
                         atoi@neg 000E                     ?_timer_0_init 0001  
               __end_of_pauseMenu 4828                           _sprintf 54BA  
                         _tolower 5350                      _lcdWriteChar 5854  
                         _strncmp 4908              end_of_initialization 54AC  
                      ??_mainMenu 005E              speedControl@position 0058  
                         floorf@e 0064                           floorf@m 0060  
                         floorf@u 0066                           floorf@x 004E  
                      _secretMenu 30D4                           fputc@fp 0003  
                      ??_exitLine 0001                     __Lmediumconst 0000  
                         fputs@fp 000C                   ___lldiv@divisor 0005  
                 ___lldiv@counter 000D                 __end_of_vfpfcnvrt 18B6  
                      efgtoa@mode 0090                        efgtoa@sign 0089  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                 __end_of_startMenu 5A26  
                      ??_vfprintf 005F                        ??_stopMenu 005E  
                         strcpy@d 0009                           strlen@a 0003  
                         strcpy@s 0007                           strlen@s 0001  
               __end_of_stopMotor 57AC                         _PORTBbits 000F81  
                       _PORTDbits 000F83                       ?_eepromRead 0001  
                     ___fladd@grs 0044                     ___xxtofl@sign 0016  
                  pauseMenu@F7071 0157                         _TRISAbits 000F92  
                  ??_speedControl 005C                         _TRISBbits 000F93  
                       _TRISCbits 000F94                         _TRISDbits 000F95  
                       _TRISEbits 000F96                    ??_timer_0_init 0001  
            pauseMenu@textCursor2 0060                       ___fldiv@grs 0048  
                     ___fldiv@rem 0041                        _startMotor 588C  
         ?_calculatedAverageValue 0001                       ___flmul@grs 0029  
                   ??_eepromWrite 0002          _button_bounce_controller 01A5  
                  __end_of_TIMER0 00AE               mainMenu@textCursor2 0068  
                   ?_stateMachine 0001                _buttonControlFlags 35C2  
            __end_of_loopTaskInit 5732                      _convert_data 0100  
           __size_of_readAdcValue 0042                    __end_of___flge 4646  
                  __end_of___fleq 4E3E                       vfpfcnvrt@ap 00AB  
                     vfpfcnvrt@ct 00C3                       vfpfcnvrt@fp 00A7  
                     vfpfcnvrt@ll 00B1                    __end_of___wmul 59D0  
                  __end_of_lcdCmd 5A0C                    __end_of_efgtoa 1278  
             ?_buttonControlFlags 0001                    __end_of_floorf 35C2  
                      floorf@F524 01AB                    __end_of_strcpy 540C  
                  __end_of_strlen 58F8                 __size_of_PWM_Init 0028  
             start_initialization 5468                        _systemInit 4828  
                     __end_of_abs 56F4                       __end_of_pad 4B6E  
     __end_of_loopTaskMenuControl 5280    __end_of_calculatedAverageValue 2A56  
                  _menuInitialize 595A                      _driver_limit 0120  
                     ?_secretMenu 0001              ??_buttonControlFlags 0001  
                        ??_TIMER0 0001                     stopMenu@F7068 0167  
         __size_of_lcdWriteString 007E             __end_of___fpclassifyf 4744  
                    _readAdcValue 5632                    ??_stateMachine 00F1  
             __size_of_eepromRead 001E                       vfprintf@fmt 00C9  
                        ??___flge 003D                          ??___fleq 0009  
             __end_of_eepromWrite 595A                          ??___wmul 0005  
                        ??_lcdCmd 0002                          ??_efgtoa 006A  
                     __pdataBANK1 01BB                          ??_floorf 0052  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0039                         ___fladd@b 0035  
                       ___fldiv@a 0039                         ___fldiv@b 0035  
                       ___flmul@a 0020                         ___flmul@b 001C  
                       ___flsub@a 0049                         ___flsub@b 0045  
          __end_of_menuInitialize 5982                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                 __size_of___xxtofl 01B4  
                     ?_startMotor 0001                 __size_of_lcdClear 000E  
  __size_of_speedLimitSettingMenu 0108     __end_of_speedLimitSettingMenu 443C  
               __size_of_mainMenu 0198                         _atoi$3065 0010  
                       _atoi$3066 0014                         _atoi$3067 0012  
                 secretMenu@F7075 0147                 __size_of_exitLine 0002  
                     _efgtoa$3003 0077                       _efgtoa$3007 0079  
                     _efgtoa$3008 007B                       _efgtoa$3009 007D  
                     _efgtoa$2998 0073                       _efgtoa$2999 0075  
                       _dtoa$2974 002E              __end_of_speedControl 3AE8  
                       __pintcode 0008              __end_of_timer_0_init 5A62  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001       _calculatedAverageValue$3396 0060  
     _calculatedAverageValue$3397 0064       __end_of_loopTaskTimeMachine 5008  
                        ?_lcdInit 0001               __size_of_secretMenu 02D8  
                        ?_lcdPort 0001                 __size_of_vfprintf 006A  
           _driverTimeSettingMenu 40FC                 __size_of_stopMenu 0090  
                        ?_mcuInit 0001                         fabsf@F463 01B3  
                     __smallconst 0600                          ?_isdigit 0001  
                        ?_isspace 0001                   ?_menuInitialize 0001  
                     ?_systemInit 0001                          ?_isupper 0001  
         __size_of_openLCD_Script 004A                    __size_of_fabsf 0034  
                        ?_sprintf 00CF                          ?_tolower 0007  
                  __size_of_fputc 00CA                    __size_of_fputs 0044  
                        ?_strncmp 0001                    __size_of_putch 0002  
              eepromWrite@address 0002                         _pauseMenu 4744  
                  ___wmul@product 0005      __size_of_stopTimeSettingMenu 010C  
                        _LATCbits 000F8B                          _LATDbits 000F8C  
                     _eepromWrite 592C             __size_of_loopTaskInit 003E  
                  PWM1_setDC@duty 005C                          _PIR2bits 000FA1  
                        i2u790_40 005A                          i2u790_41 0056  
                        i2u791_40 0072                          i2u791_41 006E  
                        i2u792_40 0084                          i2u792_41 0080  
                        i2u793_40 009E                          i2u793_41 009A  
                        i2u787_40 0018                          i2u787_41 0014  
                        i2u788_40 0026                          i2u788_41 0022  
                        i2u789_40 0044                          i2u789_41 0040  
                    _pauseIsClick 00FF               __size_of_startMotor 0036  
                       _vfpfcnvrt 1278                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0                          _PWM_Init 5982  
               ___wmul@multiplier 0001                         _startMenu 5A0C  
driverTimeSettingMenu@textCursor2 00E1                      ??_eepromRead 0001  
                  PWM2_setDC@duty 005C                         _stopMotor 5770  
      speedLimitSettingMenu@F7078 0259              __end_of_stateMachine 4CE4  
                    _isspace$3096 0007                        vfpfcnvrt@c 00C6  
                      vfpfcnvrt@f 00BF                      _loopTaskInit 56F4  
                       copy_data0 547C                    _lcdWriteString 5098  
                      ?_pauseMenu 0001                        _EECON1bits 000FA6  
                lcdSetCursor@temp 0008                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 59EE  
             __size_of_systemInit 00E0                  __size_of___aodiv 0188  
                __size_of___fladd 04C0                  __size_of___aomod 0164  
                __size_of_adcInit 003E                  __size_of___fldiv 039A  
                __size_of___awdiv 00C4                  __size_of___flneg 0038  
                __size_of___awmod 00B0                  __size_of___flmul 042A  
                __size_of___flsub 0046                  __size_of___fltol 0106  
                __size_of___lldiv 00A4                        ?_vfpfcnvrt 00A7  
          ?_driverTimeSettingMenu 0001                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        ?_startMenu 0001  
                      _ANSELAbits 000F38                        _ANSELBbits 000F39  
                      _ANSELCbits 000F3A                        _ANSELDbits 000F3B  
                      _ANSELEbits 000F3C                  __size_of_lcdInit 0096  
              ___fpclassifyf@F463 01AF                  __size_of_lcdPort 005C  
                      sprintf@fmt 00D1                          ___xxtofl 378E  
                __size_of_mcuInit 0016                        ?_stopMotor 0001  
                __size_of_isdigit 0038                          _lcdClear 5A62  
                __size_of_isspace 0052                          __ptext10 3AE8  
                        __ptext11 588C                          __ptext20 54BA  
                        __ptext12 3942                          __ptext21 5280  
                        __ptext13 1D76                          __ptext30 55A8  
                        __ptext22 1278                          __ptext14 5632  
                        __ptext31 18B6                          __ptext23 4908  
                        __ptext15 2642                          __ptext40 4AA8  
                        __ptext32 57E4                          __ptext24 06C8  
                        __ptext16 4E3E                          __ptext41 58C2  
                        __ptext33 2218                          __ptext25 5350  
                        __ptext17 5A70                          __ptext50 581C  
                        __ptext42 55EE                          __ptext34 4542  
                        __ptext26 57AC                          __ptext18 40FC  
                        __ptext51 59AA                          __ptext43 49DE  
                        __ptext35 4D94                          __ptext27 53B0  
                        __ptext19 5770                          __ptext60 5854  
                        __ptext52 592C                          __ptext44 5A72  
                        __ptext36 2A56                          __ptext28 33AC  
                        __ptext61 52EA                          __ptext53 35C2  
                        __ptext45 56B4                          __ptext37 4CE4  
                        __ptext29 4646                          __ptext70 5116  
                        __ptext62 5A62                          __ptext54 56F4  
                        __ptext46 3F98                          __ptext38 4B6E  
                        __ptext71 5190                          __ptext63 595A  
                        __ptext55 5A50                          __ptext47 3E10  
                        __ptext39 2DF0                          __ptext72 58F8  
                        __ptext64 5A26                          __ptext56 4828  
                        __ptext48 3C80                          __ptext73 378E  
                        __ptext65 4EE2                          __ptext57 59D0  
                        __ptext49 550C                          __ptext74 443C  
                        __ptext66 59EE                          __ptext58 555E  
                        __ptext67 540C                          __ptext59 5098  
                        __ptext68 5732                          __ptext69 5982  
                __size_of_isupper 0038            __end_of_lcdWriteString 5116  
                        _mainMenu 3AE8                  __size_of_sprintf 0052  
                __size_of_tolower 0060                      ??_secretMenu 005F  
                      strcpy@dest 0001                  __size_of_strncmp 00D6  
                   lcdSetCursor@a 0005                     lcdSetCursor@b 0004  
                   lcdSetCursor@y 0007                     lcdSetCursor@z 0006  
                        _exitLine 5A70                     __size_of_atoi 0190  
                   __size_of_main 0014                     __size_of_dtoa 02E4  
           __size_of_speedControl 01A6             __size_of_timer_0_init 0012  
           secretMenu@textCursor2 00E1                          efgtoa@fp 0058  
                        efgtoa@ne 0085                          efgtoa@pp 0081  
                        efgtoa@ou 006F                          lcdPort@a 0001  
                        int$flags 005F                          _vfprintf 5280  
                        _stopMenu 5008            readAdcValue@adcChannel 0005  
                ___aomod@dividend 0001                __end_of_secretMenu 33AC  
                  _vfpfcnvrt$3023 00B9                    _vfpfcnvrt$3024 00BB  
                  _vfpfcnvrt$3029 00BD                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2                    _openLCD_Script 555E  
    _KD@fs_speed_controller$F1172 01E3      _KD@fs_speed_controller$F2221 01C3  
    _KD@fs_speed_controller$F1354 01DB      _KD@fs_speed_controller$F2088 01CB  
    _KD@fs_speed_controller$F2376 01BB      _KD@fs_speed_controller$F1857 01D3  
                        isdigit@c 0001                      _speedControl 3942  
                    _timer_0_init 5A50                   ?_lcdWriteString 0005  
                    ??_startMotor 005E                          intlevel2 0000  
                       sprintf@ap 00D9                       ??_pauseMenu 005E  
     __size_of_buttonControlFlags 01CC                          isspace@c 0001  
                ___lldiv@dividend 0001      __size_of_loopTaskMenuControl 0076  
                       strcpy@src 0003                     ?_lcdSetCursor 0004  
                        isupper@c 0001                         strncmp@_l 0001  
                       strncmp@_r 0003                        _OSCCONbits 000FD3  
                     efgtoa@nmode 008D                      _procces_data 0200  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 00AD  
                 ___aomod@counter 0011                  ??_menuInitialize 0001  
              __end_of_startMotor 58C2             __size_of_stateMachine 00B2  
     _KD@fs_speed_controller$F956 01EB                       ??_startMenu 0001  
             _stopTimeSettingMenu 4228            __end_of_openLCD_Script 55A8  
                        sprintf@f 00DB                          tolower@c 0007  
                        sprintf@s 00CF            __size_of___fpclassifyf 00FE  
                ___lldiv@quotient 0009                       ??_stopMotor 005E  
                    ??_systemInit 0002                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
                     _timer_value 0197                     ?_lcdWriteChar 0001  
                   ___fladd@signs 0041                        _PWM1_setDC 5190  
                      _PWM2_setDC 5116                      ___aodiv@sign 0012  
                     _textCursor2 0220                      ___fladd@aexp 0042  
                    ___fladd@bexp 0043              ?_stopTimeSettingMenu 0001  
                    ?_eepromWrite 0001                    ??_lcdSetCursor 0005  
           _speedLimitSettingMenu 4334                      ___aomod@sign 0012  
                    _stateMachine 4C32  
