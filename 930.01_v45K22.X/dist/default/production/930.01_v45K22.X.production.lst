

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 16 00:52:15 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=1
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=1
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=2
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=2
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=3
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=3
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=2
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    88                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    89                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    90                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    91                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    92                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    93  0000                     
    94                           ; Version 2.20
    95                           ; Generated 05/05/2020 GMT
    96                           ; 
    97                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    98                           ; All rights reserved.
    99                           ; 
   100                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   101                           ; 
   102                           ; Redistribution and use in source and binary forms, with or without modification, are
   103                           ; permitted provided that the following conditions are met:
   104                           ; 
   105                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   106                           ;        conditions and the following disclaimer.
   107                           ; 
   108                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   109                           ;        of conditions and the following disclaimer in the documentation and/or other
   110                           ;        materials provided with the distribution.
   111                           ; 
   112                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   113                           ;        software without specific prior written permission.
   114                           ; 
   115                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   116                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   117                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   118                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   119                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   120                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   121                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   122                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   123                           ; 
   124                           ; 
   125                           ; Code-generator required, PIC18F45K22 Definitions
   126                           ; 
   127                           ; SFR Addresses
   128  0000                     
   129                           	psect	eeprom_data
   130  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   131  0000                     
   132                           	psect	idataBANK1
   133  005CDA                     __pidataBANK1:
   134                           	callstack 0
   135                           
   136                           ;initializer for _KD@fs_speed_controller$F1840
   137  005CDA  0000               	dw	0
   138  005CDC  3F80               	dw	16256
   139                           
   140                           ;initializer for _KP@fs_speed_controller$F1839
   141  005CDE  CCCD               	dw	52429
   142  005CE0  3E4C               	dw	15948
   143                           
   144                           ;initializer for _KD@fs_speed_controller$F1637
   145  005CE2  0000               	dw	0
   146  005CE4  3F80               	dw	16256
   147                           
   148                           ;initializer for _KP@fs_speed_controller$F1636
   149  005CE6  CCCD               	dw	52429
   150  005CE8  3E4C               	dw	15948
   151                           
   152                           ;initializer for _KD@fs_speed_controller$F1185
   153  005CEA  0000               	dw	0
   154  005CEC  3F80               	dw	16256
   155                           
   156                           ;initializer for _KP@fs_speed_controller$F1184
   157  005CEE  CCCD               	dw	52429
   158  005CF0  3E4C               	dw	15948
   159                           
   160                           ;initializer for _KD
   161  005CF2  0000               	dw	0
   162  005CF4  3F80               	dw	16256
   163                           
   164                           ;initializer for _KP
   165  005CF6  CCCD               	dw	52429
   166  005CF8  3E4C               	dw	15948
   167  0000                     _ANSELCbits	set	3898
   168  0000                     _ANSELBbits	set	3897
   169  0000                     _ANSELDbits	set	3899
   170  0000                     _ANSELEbits	set	3900
   171  0000                     _ANSELAbits	set	3896
   172  0000                     _T0CON	set	4053
   173  0000                     _TMR0L	set	4054
   174  0000                     _TMR0H	set	4055
   175  0000                     _INTCONbits	set	4082
   176  0000                     _CCPR2L	set	3943
   177  0000                     _CCPR1L	set	4030
   178  0000                     _PR2	set	4027
   179  0000                     _TMR2	set	4028
   180  0000                     _T2CONbits	set	4026
   181  0000                     _CCP2CON	set	3942
   182  0000                     _CCP1CON	set	4029
   183  0000                     _LATCbits	set	3979
   184  0000                     _LATDbits	set	3980
   185  0000                     _TRISCbits	set	3988
   186  0000                     _OSCTUNEbits	set	3995
   187  0000                     _OSCCONbits	set	4051
   188  0000                     _TRISBbits	set	3987
   189  0000                     _TRISDbits	set	3989
   190  0000                     _PORTDbits	set	3971
   191  0000                     _PORTBbits	set	3969
   192  0000                     _PIR2bits	set	4001
   193  0000                     _EECON2	set	4007
   194  0000                     _EEDATA	set	4008
   195  0000                     _EECON1bits	set	4006
   196  0000                     _EEADR	set	4009
   197  0000                     _ADCON2bits	set	4032
   198  0000                     _ADCON1	set	4033
   199  0000                     _ADCON0	set	4034
   200  0000                     _TRISEbits	set	3990
   201  0000                     _TRISAbits	set	3986
   202  0000                     _ADRESL	set	4035
   203  0000                     _ADRESH	set	4036
   204  0000                     _ADCON0bits	set	4034
   205                           
   206                           	psect	smallconst
   207  000600                     __psmallconst:
   208                           	callstack 0
   209  000600  00                 	db	0
   210  000601                     STR_12:
   211  000601  25                 	db	37
   212  000602  64                 	db	100	;'d'
   213  000603  20                 	db	32
   214  000604  20                 	db	32
   215  000605  20                 	db	32
   216  000606  20                 	db	32
   217  000607  20                 	db	32
   218  000608  20                 	db	32
   219  000609  20                 	db	32
   220  00060A  20                 	db	32
   221  00060B  20                 	db	32
   222  00060C  20                 	db	32
   223  00060D  20                 	db	32
   224  00060E  20                 	db	32
   225  00060F  20                 	db	32
   226  000610  20                 	db	32
   227  000611  20                 	db	32
   228  000612  00                 	db	0
   229  000613                     STR_7:
   230  000613  50                 	db	80	;'P'
   231  000614  49                 	db	73	;'I'
   232  000615  44                 	db	68	;'D'
   233  000616  20                 	db	32
   234  000617  50                 	db	80	;'P'
   235  000618  41                 	db	65	;'A'
   236  000619  52                 	db	82	;'R'
   237  00061A  41                 	db	65	;'A'
   238  00061B  4D                 	db	77	;'M'
   239  00061C  20                 	db	32
   240  00061D  20                 	db	32
   241  00061E  20                 	db	32
   242  00061F  20                 	db	32
   243  000620  20                 	db	32
   244  000621  20                 	db	32
   245  000622  20                 	db	32
   246  000623  00                 	db	0
   247  000624                     STR_11:
   248  000624  48                 	db	72	;'H'
   249  000625  49                 	db	73	;'I'
   250  000626  5A                 	db	90	;'Z'
   251  000627  20                 	db	32
   252  000628  4C                 	db	76	;'L'
   253  000629  69                 	db	105	;'i'
   254  00062A  4D                 	db	77	;'M'
   255  00062B  69                 	db	105	;'i'
   256  00062C  54                 	db	84	;'T'
   257  00062D  69                 	db	105	;'i'
   258  00062E  20                 	db	32
   259  00062F  20                 	db	32
   260  000630  20                 	db	32
   261  000631  20                 	db	32
   262  000632  20                 	db	32
   263  000633  20                 	db	32
   264  000634  00                 	db	0
   265  000635                     STR_1:
   266  000635  4B                 	db	75	;'K'
   267  000636  41                 	db	65	;'A'
   268  000637  4C                 	db	76	;'L'
   269  000638  41                 	db	65	;'A'
   270  000639  4E                 	db	78	;'N'
   271  00063A  20                 	db	32
   272  00063B  5A                 	db	90	;'Z'
   273  00063C  41                 	db	65	;'A'
   274  00063D  4D                 	db	77	;'M'
   275  00063E  41                 	db	65	;'A'
   276  00063F  4E                 	db	78	;'N'
   277  000640  20                 	db	32
   278  000641  20                 	db	32
   279  000642  20                 	db	32
   280  000643  20                 	db	32
   281  000644  20                 	db	32
   282  000645  00                 	db	0
   283  000646                     STR_3:
   284  000646  5A                 	db	90	;'Z'
   285  000647  41                 	db	65	;'A'
   286  000648  4D                 	db	77	;'M'
   287  000649  41                 	db	65	;'A'
   288  00064A  4E                 	db	78	;'N'
   289  00064B  20                 	db	32
   290  00064C  44                 	db	68	;'D'
   291  00064D  4F                 	db	79	;'O'
   292  00064E  4C                 	db	76	;'L'
   293  00064F  44                 	db	68	;'D'
   294  000650  55                 	db	85	;'U'
   295  000651  20                 	db	32
   296  000652  20                 	db	32
   297  000653  20                 	db	32
   298  000654  20                 	db	32
   299  000655  20                 	db	32
   300  000656  00                 	db	0
   301  000657                     STR_5:
   302  000657  48                 	db	72	;'H'
   303  000658  41                 	db	65	;'A'
   304  000659  52                 	db	82	;'R'
   305  00065A  45                 	db	69	;'E'
   306  00065B  4B                 	db	75	;'K'
   307  00065C  45                 	db	69	;'E'
   308  00065D  54                 	db	84	;'T'
   309  00065E  20                 	db	32
   310  00065F  44                 	db	68	;'D'
   311  000660  55                 	db	85	;'U'
   312  000661  52                 	db	82	;'R'
   313  000662  44                 	db	68	;'D'
   314  000663  55                 	db	85	;'U'
   315  000664  20                 	db	32
   316  000665  20                 	db	32
   317  000666  20                 	db	32
   318  000667  00                 	db	0
   319  000668                     STR_15:
   320  000668  48                 	db	72	;'H'
   321  000669  41                 	db	65	;'A'
   322  00066A  52                 	db	82	;'R'
   323  00066B  45                 	db	69	;'E'
   324  00066C  4B                 	db	75	;'K'
   325  00066D  54                 	db	84	;'T'
   326  00066E  20                 	db	32
   327  00066F  5A                 	db	90	;'Z'
   328  000670  41                 	db	65	;'A'
   329  000671  4D                 	db	77	;'M'
   330  000672  41                 	db	65	;'A'
   331  000673  4E                 	db	78	;'N'
   332  000674  49                 	db	73	;'I'
   333  000675  20                 	db	32
   334  000676  64                 	db	100	;'d'
   335  000677  6B                 	db	107	;'k'
   336  000678  00                 	db	0
   337  000679                     STR_13:
   338  000679  44                 	db	68	;'D'
   339  00067A  55                 	db	85	;'U'
   340  00067B  52                 	db	82	;'R'
   341  00067C  4D                 	db	77	;'M'
   342  00067D  41                 	db	65	;'A'
   343  00067E  20                 	db	32
   344  00067F  5A                 	db	90	;'Z'
   345  000680  41                 	db	65	;'A'
   346  000681  4D                 	db	77	;'M'
   347  000682  41                 	db	65	;'A'
   348  000683  4E                 	db	78	;'N'
   349  000684  49                 	db	73	;'I'
   350  000685  20                 	db	32
   351  000686  20                 	db	32
   352  000687  6D                 	db	109	;'m'
   353  000688  73                 	db	115	;'s'
   354  000689  00                 	db	0
   355  00068A                     STR_14:
   356  00068A  25                 	db	37
   357  00068B  64                 	db	100	;'d'
   358  00068C  20                 	db	32
   359  00068D  20                 	db	32
   360  00068E  20                 	db	32
   361  00068F  20                 	db	32
   362  000690  20                 	db	32
   363  000691  20                 	db	32
   364  000692  20                 	db	32
   365  000693  20                 	db	32
   366  000694  20                 	db	32
   367  000695  20                 	db	32
   368  000696  20                 	db	32
   369  000697  20                 	db	32
   370  000698  20                 	db	32
   371  000699  00                 	db	0
   372  00069A                     STR_4:
   373  00069A  20                 	db	32
   374  00069B  20                 	db	32
   375  00069C  20                 	db	32
   376  00069D  20                 	db	32
   377  00069E  20                 	db	32
   378  00069F  20                 	db	32
   379  0006A0  25                 	db	37
   380  0006A1  64                 	db	100	;'d'
   381  0006A2  3A                 	db	58	;':'
   382  0006A3  25                 	db	37
   383  0006A4  64                 	db	100	;'d'
   384  0006A5  20                 	db	32
   385  0006A6  20                 	db	32
   386  0006A7  20                 	db	32
   387  0006A8  20                 	db	32
   388  0006A9  00                 	db	0
   389  0006AA                     STR_2:
   390  0006AA  20                 	db	32
   391  0006AB  20                 	db	32
   392  0006AC  20                 	db	32
   393  0006AD  20                 	db	32
   394  0006AE  20                 	db	32
   395  0006AF  20                 	db	32
   396  0006B0  25                 	db	37
   397  0006B1  64                 	db	100	;'d'
   398  0006B2  3A                 	db	58	;':'
   399  0006B3  25                 	db	37
   400  0006B4  64                 	db	100	;'d'
   401  0006B5  20                 	db	32
   402  0006B6  20                 	db	32
   403  0006B7  20                 	db	32
   404  0006B8  00                 	db	0
   405  0006B9                     STR_8:
   406  0006B9  4B                 	db	75	;'K'
   407  0006BA  70                 	db	112	;'p'
   408  0006BB  3A                 	db	58	;':'
   409  0006BC  25                 	db	37
   410  0006BD  35                 	db	53	;'5'
   411  0006BE  2E                 	db	46
   412  0006BF  31                 	db	49	;'1'
   413  0006C0  66                 	db	102	;'f'
   414  0006C1  20                 	db	32
   415  0006C2  20                 	db	32
   416  0006C3  20                 	db	32
   417  0006C4  20                 	db	32
   418  0006C5  20                 	db	32
   419  0006C6  00                 	db	0
   420  0006C7                     STR_10:
   421  0006C7  4B                 	db	75	;'K'
   422  0006C8  64                 	db	100	;'d'
   423  0006C9  3A                 	db	58	;':'
   424  0006CA  25                 	db	37
   425  0006CB  35                 	db	53	;'5'
   426  0006CC  2E                 	db	46
   427  0006CD  31                 	db	49	;'1'
   428  0006CE  66                 	db	102	;'f'
   429  0006CF  20                 	db	32
   430  0006D0  20                 	db	32
   431  0006D1  20                 	db	32
   432  0006D2  20                 	db	32
   433  0006D3  00                 	db	0
   434  0006D4                     STR_17:
   435  0006D4  49                 	db	73	;'I'
   436  0006D5  4E                 	db	78	;'N'
   437  0006D6  46                 	db	70	;'F'
   438  0006D7  00                 	db	0
   439  0006D8                     STR_21:
   440  0006D8  4E                 	db	78	;'N'
   441  0006D9  41                 	db	65	;'A'
   442  0006DA  4E                 	db	78	;'N'
   443  0006DB  00                 	db	0
   444  0006DC                     STR_18:
   445  0006DC  69                 	db	105	;'i'
   446  0006DD  6E                 	db	110	;'n'
   447  0006DE  66                 	db	102	;'f'
   448  0006DF  00                 	db	0
   449  0006E0                     STR_22:
   450  0006E0  6E                 	db	110	;'n'
   451  0006E1  61                 	db	97	;'a'
   452  0006E2  6E                 	db	110	;'n'
   453  0006E3  00                 	db	0
   454  0006E4                     STR_25:
   455  0006E4  6C                 	db	108	;'l'
   456  0006E5  66                 	db	102	;'f'
   457  0006E6  00                 	db	0
   458  0006E7  00                 	db	0	; dummy byte at the end
   459  0000                     
   460                           ; #config settings
   461                           
   462                           	psect	cinit
   463  00583A                     __pcinit:
   464                           	callstack 0
   465  00583A                     start_initialization:
   466                           	callstack 0
   467  00583A                     __initialization:
   468                           	callstack 0
   469                           
   470                           ; Initialize objects allocated to BANK1 (32 bytes)
   471                           ; load TBLPTR registers with __pidataBANK1
   472  00583A  0EDA               	movlw	low __pidataBANK1
   473  00583C  6EF6               	movwf	tblptrl,c
   474  00583E  0E5C               	movlw	high __pidataBANK1
   475  005840  6EF7               	movwf	tblptrh,c
   476  005842  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   477  005844  6EF8               	movwf	tblptru,c
   478  005846  EE01  F0D3         	lfsr	0,__pdataBANK1
   479  00584A  EE10 F020          	lfsr	1,32
   480  00584E                     copy_data0:
   481  00584E  0009               	tblrd		*+
   482  005850  CFF5 FFEE          	movff	tablat,postinc0
   483  005854  50E5               	movf	postdec1,w,c
   484  005856  50E1               	movf	fsr1l,w,c
   485  005858  E1FA               	bnz	copy_data0
   486                           
   487                           ; Clear objects allocated to BANK2 (144 bytes)
   488  00585A  EE02  F000         	lfsr	0,__pbssBANK2
   489  00585E  0E90               	movlw	144
   490  005860                     clear_0:
   491  005860  6AEE               	clrf	postinc0,c
   492  005862  06E8               	decf	wreg,f,c
   493  005864  E1FD               	bnz	clear_0
   494                           
   495                           ; Clear objects allocated to BANK1 (211 bytes)
   496  005866  EE01  F000         	lfsr	0,__pbssBANK1
   497  00586A  0ED3               	movlw	211
   498  00586C                     clear_1:
   499  00586C  6AEE               	clrf	postinc0,c
   500  00586E  06E8               	decf	wreg,f,c
   501  005870  E1FD               	bnz	clear_1
   502                           
   503                           ; Clear objects allocated to BANK0 (13 bytes)
   504  005872  EE00  F0F3         	lfsr	0,__pbssBANK0
   505  005876  0E0D               	movlw	13
   506  005878                     clear_2:
   507  005878  6AEE               	clrf	postinc0,c
   508  00587A  06E8               	decf	wreg,f,c
   509  00587C  E1FD               	bnz	clear_2
   510  00587E                     end_of_initialization:
   511                           	callstack 0
   512  00587E                     __end_of__initialization:
   513                           	callstack 0
   514  00587E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   515  005880  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   516  005882  0E00               	movlw	low (__Lmediumconst shr (0+16))
   517  005884  6EF8               	movwf	tblptru,c
   518  005886  0100               	movlb	0
   519  005888  EF67  F026         	goto	_main	;jump to C main() function
   520                           
   521                           	psect	bssBANK0
   522  0000F3                     __pbssBANK0:
   523                           	callstack 0
   524  0000F3                     _menu_value:
   525                           	callstack 0
   526  0000F3                     	ds	3
   527  0000F6                     _prec:
   528                           	callstack 0
   529  0000F6                     	ds	2
   530  0000F8                     _flags:
   531                           	callstack 0
   532  0000F8                     	ds	2
   533  0000FA                     _menu_selected:
   534                           	callstack 0
   535  0000FA                     	ds	1
   536  0000FB                     _secretMenuCounter:
   537                           	callstack 0
   538  0000FB                     	ds	1
   539  0000FC                     _stopIsClick:
   540                           	callstack 0
   541  0000FC                     	ds	1
   542  0000FD                     _startIsClick:
   543                           	callstack 0
   544  0000FD                     	ds	1
   545  0000FE                     _pauseIsClick:
   546                           	callstack 0
   547  0000FE                     	ds	1
   548  0000FF                     _timer_counter_flag:
   549                           	callstack 0
   550  0000FF                     	ds	1
   551                           
   552                           	psect	bssBANK1
   553  000100                     __pbssBANK1:
   554                           	callstack 0
   555  000100                     _convert_data:
   556                           	callstack 0
   557  000100                     	ds	48
   558  000130                     _procces_data:
   559                           	callstack 0
   560  000130                     	ds	32
   561  000150                     _controller:
   562                           	callstack 0
   563  000150                     	ds	19
   564  000163                     	ds	16
   565  000173                     	ds	16
   566  000183                     	ds	16
   567  000193                     _adc_raw_data:
   568                           	callstack 0
   569  000193                     	ds	16
   570  0001A3                     _driver_limit:
   571                           	callstack 0
   572  0001A3                     	ds	12
   573  0001AF                     _timer_value:
   574                           	callstack 0
   575  0001AF                     	ds	8
   576  0001B7                     _menu_flags:
   577                           	callstack 0
   578  0001B7                     	ds	6
   579  0001BD                     _button_bounce_controller:
   580                           	callstack 0
   581  0001BD                     	ds	6
   582  0001C3                     floorf@F524:
   583                           	callstack 0
   584  0001C3                     	ds	4
   585  0001C7                     ___fpclassifyf@F463:
   586                           	callstack 0
   587  0001C7                     	ds	4
   588  0001CB                     fabsf@F463:
   589                           	callstack 0
   590  0001CB                     	ds	4
   591  0001CF                     _nout:
   592                           	callstack 0
   593  0001CF                     	ds	2
   594  0001D1                     _width:
   595                           	callstack 0
   596  0001D1                     	ds	2
   597                           
   598                           	psect	dataBANK1
   599  0001D3                     __pdataBANK1:
   600                           	callstack 0
   601  0001D3                     	ds	4
   602  0001D7                     	ds	4
   603  0001DB                     _KD@fs_speed_controller$F1637:
   604                           	callstack 0
   605  0001DB                     	ds	4
   606  0001DF                     _KP@fs_speed_controller$F1636:
   607                           	callstack 0
   608  0001DF                     	ds	4
   609  0001E3                     	ds	4
   610  0001E7                     	ds	4
   611  0001EB                     	ds	4
   612  0001EF                     	ds	4
   613                           
   614                           	psect	bssBANK2
   615  000200                     __pbssBANK2:
   616                           	callstack 0
   617  000200                     	ds	16
   618  000210                     	ds	16
   619  000220                     	ds	16
   620  000230                     	ds	16
   621  000240                     _dbuf:
   622                           	callstack 0
   623  000240                     	ds	80
   624                           
   625                           	psect	cstackBANK0
   626  000060                     __pcstackBANK0:
   627                           	callstack 0
   628  000060                     floorf@m:
   629                           	callstack 0
   630                           
   631                           ; 4 bytes @ 0x0
   632  000060                     	ds	4
   633  000064                     floorf@e:
   634                           	callstack 0
   635                           
   636                           ; 2 bytes @ 0x4
   637  000064                     	ds	2
   638  000066                     floorf@u:
   639                           	callstack 0
   640                           
   641                           ; 4 bytes @ 0x6
   642  000066                     	ds	4
   643  00006A                     ??_efgtoa:
   644                           
   645                           ; 1 bytes @ 0xA
   646  00006A                     	ds	5
   647  00006F                     efgtoa@ou:
   648                           	callstack 0
   649                           
   650                           ; 4 bytes @ 0xF
   651  00006F                     	ds	4
   652  000073                     _efgtoa$2564:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x13
   656  000073                     	ds	2
   657  000075                     _efgtoa$2565:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x15
   661  000075                     	ds	2
   662  000077                     _efgtoa$2569:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x17
   666  000077                     	ds	2
   667  000079                     _efgtoa$2573:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x19
   671  000079                     	ds	2
   672  00007B                     _efgtoa$2574:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x1B
   676  00007B                     	ds	2
   677  00007D                     _efgtoa$2575:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x1D
   681  00007D                     	ds	2
   682  00007F                     efgtoa@t:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x1F
   686  00007F                     	ds	2
   687  000081                     efgtoa@pp:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x21
   691  000081                     	ds	2
   692  000083                     efgtoa@m:
   693                           	callstack 0
   694                           
   695                           ; 2 bytes @ 0x23
   696  000083                     	ds	2
   697  000085                     efgtoa@ne:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x25
   701  000085                     	ds	2
   702  000087                     efgtoa@d:
   703                           	callstack 0
   704                           
   705                           ; 2 bytes @ 0x27
   706  000087                     	ds	2
   707  000089                     efgtoa@sign:
   708                           	callstack 0
   709                           
   710                           ; 2 bytes @ 0x29
   711  000089                     	ds	2
   712  00008B                     efgtoa@p:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x2B
   716  00008B                     	ds	2
   717  00008D                     efgtoa@nmode:
   718                           	callstack 0
   719                           
   720                           ; 1 bytes @ 0x2D
   721  00008D                     	ds	1
   722  00008E                     efgtoa@w:
   723                           	callstack 0
   724                           
   725                           ; 2 bytes @ 0x2E
   726  00008E                     	ds	2
   727  000090                     efgtoa@mode:
   728                           	callstack 0
   729                           
   730                           ; 1 bytes @ 0x30
   731  000090                     	ds	1
   732  000091                     efgtoa@h:
   733                           	callstack 0
   734                           
   735                           ; 4 bytes @ 0x31
   736  000091                     	ds	4
   737  000095                     efgtoa@l:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x35
   741  000095                     	ds	4
   742  000099                     efgtoa@i:
   743                           	callstack 0
   744                           
   745                           ; 2 bytes @ 0x39
   746  000099                     	ds	2
   747  00009B                     efgtoa@g:
   748                           	callstack 0
   749                           
   750                           ; 4 bytes @ 0x3B
   751  00009B                     	ds	4
   752  00009F                     efgtoa@e:
   753                           	callstack 0
   754                           
   755                           ; 2 bytes @ 0x3F
   756  00009F                     	ds	2
   757  0000A1                     efgtoa@n:
   758                           	callstack 0
   759                           
   760                           ; 2 bytes @ 0x41
   761  0000A1                     	ds	2
   762  0000A3                     efgtoa@u:
   763                           	callstack 0
   764                           
   765                           ; 4 bytes @ 0x43
   766  0000A3                     	ds	4
   767  0000A7                     ?_vfpfcnvrt:
   768                           	callstack 0
   769  0000A7                     vfpfcnvrt@fp:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x47
   773  0000A7                     	ds	2
   774  0000A9                     vfpfcnvrt@fmt:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x49
   778  0000A9                     	ds	2
   779  0000AB                     vfpfcnvrt@ap:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x4B
   783  0000AB                     	ds	2
   784  0000AD                     ??_vfpfcnvrt:
   785                           
   786                           ; 1 bytes @ 0x4D
   787  0000AD                     	ds	4
   788  0000B1                     vfpfcnvrt@ll:
   789                           	callstack 0
   790                           
   791                           ; 8 bytes @ 0x51
   792  0000B1                     	ds	8
   793  0000B9                     _vfpfcnvrt$2589:
   794                           	callstack 0
   795                           
   796                           ; 2 bytes @ 0x59
   797  0000B9                     	ds	2
   798  0000BB                     _vfpfcnvrt$2590:
   799                           	callstack 0
   800                           
   801                           ; 2 bytes @ 0x5B
   802  0000BB                     	ds	2
   803  0000BD                     _vfpfcnvrt$2595:
   804                           	callstack 0
   805                           
   806                           ; 2 bytes @ 0x5D
   807  0000BD                     	ds	2
   808  0000BF                     vfpfcnvrt@f:
   809                           	callstack 0
   810                           
   811                           ; 4 bytes @ 0x5F
   812  0000BF                     	ds	4
   813  0000C3                     vfpfcnvrt@ct:
   814                           	callstack 0
   815                           
   816                           ; 3 bytes @ 0x63
   817  0000C3                     	ds	3
   818  0000C6                     vfpfcnvrt@c:
   819                           	callstack 0
   820                           
   821                           ; 1 bytes @ 0x66
   822  0000C6                     	ds	1
   823  0000C7                     ?_vfprintf:
   824                           	callstack 0
   825  0000C7                     vfprintf@fp:
   826                           	callstack 0
   827                           
   828                           ; 2 bytes @ 0x67
   829  0000C7                     	ds	2
   830  0000C9                     vfprintf@fmt:
   831                           	callstack 0
   832                           
   833                           ; 2 bytes @ 0x69
   834  0000C9                     	ds	2
   835  0000CB                     vfprintf@ap:
   836                           	callstack 0
   837                           
   838                           ; 2 bytes @ 0x6B
   839  0000CB                     	ds	2
   840  0000CD                     vfprintf@cfmt:
   841                           	callstack 0
   842                           
   843                           ; 2 bytes @ 0x6D
   844  0000CD                     	ds	2
   845  0000CF                     ?_sprintf:
   846                           	callstack 0
   847  0000CF                     sprintf@s:
   848                           	callstack 0
   849                           
   850                           ; 2 bytes @ 0x6F
   851  0000CF                     	ds	2
   852  0000D1                     sprintf@fmt:
   853                           	callstack 0
   854                           
   855                           ; 2 bytes @ 0x71
   856  0000D1                     	ds	8
   857  0000D9                     sprintf@ap:
   858                           	callstack 0
   859                           
   860                           ; 2 bytes @ 0x79
   861  0000D9                     	ds	2
   862  0000DB                     sprintf@f:
   863                           	callstack 0
   864                           
   865                           ; 6 bytes @ 0x7B
   866  0000DB                     	ds	6
   867  0000E1                     mainMenu@textCursor2:
   868                           	callstack 0
   869  0000E1                     stopMenu@textCursor2:
   870                           	callstack 0
   871  0000E1                     pauseMenu@textCursor2:
   872                           	callstack 0
   873  0000E1                     secretMenu@textCursor2:
   874                           	callstack 0
   875  0000E1                     speedLimitSettingMenu@textCursor2:
   876                           	callstack 0
   877  0000E1                     stopTimeSettingMenu@textCursor2:
   878                           	callstack 0
   879  0000E1                     driverTimeSettingMenu@textCursor2:
   880                           	callstack 0
   881                           
   882                           ; 16 bytes @ 0x81
   883  0000E1                     	ds	16
   884  0000F1                     ??_stateMachine:
   885                           
   886                           ; 1 bytes @ 0x91
   887  0000F1                     	ds	2
   888                           
   889                           	psect	cstackCOMRAM
   890  000001                     __pcstackCOMRAM:
   891                           	callstack 0
   892  000001                     ?_strlen:
   893                           	callstack 0
   894  000001                     ?___fpclassifyf:
   895                           	callstack 0
   896  000001                     ?_isupper:
   897                           	callstack 0
   898  000001                     ?_isdigit:
   899                           	callstack 0
   900  000001                     ?_strncmp:
   901                           	callstack 0
   902  000001                     ?_isspace:
   903                           	callstack 0
   904  000001                     ?_readAdcValue:
   905                           	callstack 0
   906  000001                     ?___wmul:
   907                           	callstack 0
   908  000001                     ?___awdiv:
   909                           	callstack 0
   910  000001                     ?___awmod:
   911                           	callstack 0
   912  000001                     ?___lmul:
   913                           	callstack 0
   914  000001                     ?___lldiv:
   915                           	callstack 0
   916  000001                     ?___flneg:
   917                           	callstack 0
   918  000001                     ?___aodiv:
   919                           	callstack 0
   920  000001                     ?___aomod:
   921                           	callstack 0
   922  000001                     eepromRead@address:
   923                           	callstack 0
   924  000001                     eepromWrite@data:
   925                           	callstack 0
   926  000001                     Lcd_Port@a:
   927                           	callstack 0
   928  000001                     ___wmul@multiplier:
   929                           	callstack 0
   930  000001                     ___awdiv@dividend:
   931                           	callstack 0
   932  000001                     ___awmod@dividend:
   933                           	callstack 0
   934  000001                     isdigit@c:
   935                           	callstack 0
   936  000001                     isspace@c:
   937                           	callstack 0
   938  000001                     isupper@c:
   939                           	callstack 0
   940  000001                     fputc@c:
   941                           	callstack 0
   942  000001                     strcpy@dest:
   943                           	callstack 0
   944  000001                     strlen@s:
   945                           	callstack 0
   946  000001                     strncmp@_l:
   947                           	callstack 0
   948  000001                     ___lmul@multiplier:
   949                           	callstack 0
   950  000001                     ___lldiv@dividend:
   951                           	callstack 0
   952  000001                     ___fleq@ff1:
   953                           	callstack 0
   954  000001                     ___flneg@f1:
   955                           	callstack 0
   956  000001                     ___fpclassifyf@x:
   957                           	callstack 0
   958  000001                     ___aodiv@dividend:
   959                           	callstack 0
   960  000001                     ___aomod@dividend:
   961                           	callstack 0
   962                           
   963                           ; 8 bytes @ 0x0
   964  000001                     	ds	1
   965  000002                     ??_system_init:
   966  000002                     ??_Lcd_Cmd:
   967  000002                     eepromWrite@address:
   968                           	callstack 0
   969  000002                     Lcd_Write_Char@temp:
   970                           	callstack 0
   971                           
   972                           ; 1 bytes @ 0x1
   973  000002                     	ds	1
   974  000003                     ??_isupper:
   975  000003                     ??_isdigit:
   976  000003                     ??_isspace:
   977  000003                     ??_readAdcValue:
   978  000003                     Lcd_Cmd@a:
   979                           	callstack 0
   980  000003                     Lcd_Write_Char@y:
   981                           	callstack 0
   982  000003                     ___wmul@multiplicand:
   983                           	callstack 0
   984  000003                     ___awdiv@divisor:
   985                           	callstack 0
   986  000003                     ___awmod@divisor:
   987                           	callstack 0
   988  000003                     fputc@fp:
   989                           	callstack 0
   990  000003                     strcpy@src:
   991                           	callstack 0
   992  000003                     strlen@a:
   993                           	callstack 0
   994  000003                     strncmp@_r:
   995                           	callstack 0
   996                           
   997                           ; 2 bytes @ 0x2
   998  000003                     	ds	1
   999  000004                     ??_lcd_init:
  1000  000004                     Lcd_Set_Cursor@b:
  1001                           	callstack 0
  1002  000004                     Lcd_Write_Char@a:
  1003                           	callstack 0
  1004                           
  1005                           ; 1 bytes @ 0x3
  1006  000004                     	ds	1
  1007  000005                     ??_fputc:
  1008  000005                     ??___fpclassifyf:
  1009  000005                     ??_strcpy:
  1010  000005                     readAdcValue@adcChannel:
  1011                           	callstack 0
  1012  000005                     Lcd_Set_Cursor@a:
  1013                           	callstack 0
  1014  000005                     ___awdiv@counter:
  1015                           	callstack 0
  1016  000005                     ___awmod@counter:
  1017                           	callstack 0
  1018  000005                     Lcd_Write_String@a:
  1019                           	callstack 0
  1020  000005                     ___wmul@product:
  1021                           	callstack 0
  1022  000005                     strncmp@n:
  1023                           	callstack 0
  1024  000005                     ___lmul@multiplicand:
  1025                           	callstack 0
  1026  000005                     ___lldiv@divisor:
  1027                           	callstack 0
  1028  000005                     ___fleq@ff2:
  1029                           	callstack 0
  1030                           
  1031                           ; 4 bytes @ 0x4
  1032  000005                     	ds	1
  1033  000006                     Lcd_Set_Cursor@z:
  1034                           	callstack 0
  1035  000006                     ___awdiv@sign:
  1036                           	callstack 0
  1037  000006                     ___awmod@sign:
  1038                           	callstack 0
  1039  000006                     readAdcValue@adcValue:
  1040                           	callstack 0
  1041                           
  1042                           ; 2 bytes @ 0x5
  1043  000006                     	ds	1
  1044  000007                     ??_strncmp:
  1045  000007                     ??_Lcd_Write_String:
  1046  000007                     ?_tolower:
  1047                           	callstack 0
  1048  000007                     Lcd_Set_Cursor@y:
  1049                           	callstack 0
  1050  000007                     _isspace$2662:
  1051                           	callstack 0
  1052  000007                     ___awdiv@quotient:
  1053                           	callstack 0
  1054  000007                     strcpy@s:
  1055                           	callstack 0
  1056  000007                     tolower@c:
  1057                           	callstack 0
  1058                           
  1059                           ; 2 bytes @ 0x6
  1060  000007                     	ds	1
  1061  000008                     ?_atoi:
  1062                           	callstack 0
  1063  000008                     Lcd_Set_Cursor@temp:
  1064                           	callstack 0
  1065  000008                     atoi@s:
  1066                           	callstack 0
  1067  000008                     strncmp@l:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0x7
  1071  000008                     	ds	1
  1072  000009                     ??_tolower:
  1073  000009                     ??___fleq:
  1074  000009                     Lcd_Write_String@i:
  1075                           	callstack 0
  1076  000009                     ___fpclassifyf@e:
  1077                           	callstack 0
  1078  000009                     strcpy@d:
  1079                           	callstack 0
  1080  000009                     ___lmul@product:
  1081                           	callstack 0
  1082  000009                     ___lldiv@quotient:
  1083                           	callstack 0
  1084  000009                     ___aodiv@divisor:
  1085                           	callstack 0
  1086  000009                     ___aomod@divisor:
  1087                           	callstack 0
  1088                           
  1089                           ; 8 bytes @ 0x8
  1090  000009                     	ds	1
  1091  00000A                     ??_atoi:
  1092  00000A                     fputs@s:
  1093                           	callstack 0
  1094  00000A                     strncmp@r:
  1095                           	callstack 0
  1096                           
  1097                           ; 2 bytes @ 0x9
  1098  00000A                     	ds	1
  1099  00000B                     ___fpclassifyf@u:
  1100                           	callstack 0
  1101                           
  1102                           ; 4 bytes @ 0xA
  1103  00000B                     	ds	1
  1104  00000C                     fputs@fp:
  1105                           	callstack 0
  1106                           
  1107                           ; 2 bytes @ 0xB
  1108  00000C                     	ds	1
  1109  00000D                     ___lldiv@counter:
  1110                           	callstack 0
  1111  00000D                     _tolower$2726:
  1112                           	callstack 0
  1113                           
  1114                           ; 2 bytes @ 0xC
  1115  00000D                     	ds	1
  1116  00000E                     ?___xxtofl:
  1117                           	callstack 0
  1118  00000E                     fputs@c:
  1119                           	callstack 0
  1120  00000E                     atoi@neg:
  1121                           	callstack 0
  1122  00000E                     ___xxtofl@val:
  1123                           	callstack 0
  1124                           
  1125                           ; 4 bytes @ 0xD
  1126  00000E                     	ds	1
  1127  00000F                     fputs@i:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0xE
  1131  00000F                     	ds	1
  1132  000010                     _atoi$2631:
  1133                           	callstack 0
  1134                           
  1135                           ; 2 bytes @ 0xF
  1136  000010                     	ds	1
  1137  000011                     ?_pad:
  1138                           	callstack 0
  1139  000011                     ___aodiv@counter:
  1140                           	callstack 0
  1141  000011                     ___aomod@counter:
  1142                           	callstack 0
  1143  000011                     pad@fp:
  1144                           	callstack 0
  1145                           
  1146                           ; 2 bytes @ 0x10
  1147  000011                     	ds	1
  1148  000012                     ??___xxtofl:
  1149  000012                     ___aodiv@sign:
  1150                           	callstack 0
  1151  000012                     ___aomod@sign:
  1152                           	callstack 0
  1153  000012                     _atoi$2633:
  1154                           	callstack 0
  1155                           
  1156                           ; 2 bytes @ 0x11
  1157  000012                     	ds	1
  1158  000013                     ?_abs:
  1159                           	callstack 0
  1160  000013                     pad@buf:
  1161                           	callstack 0
  1162  000013                     abs@a:
  1163                           	callstack 0
  1164  000013                     ___aodiv@quotient:
  1165                           	callstack 0
  1166                           
  1167                           ; 8 bytes @ 0x12
  1168  000013                     	ds	1
  1169  000014                     _atoi$2632:
  1170                           	callstack 0
  1171                           
  1172                           ; 1 bytes @ 0x13
  1173  000014                     	ds	1
  1174  000015                     ??_abs:
  1175  000015                     pad@p:
  1176                           	callstack 0
  1177  000015                     atoi@n:
  1178                           	callstack 0
  1179                           
  1180                           ; 2 bytes @ 0x14
  1181  000015                     	ds	1
  1182  000016                     ___xxtofl@sign:
  1183                           	callstack 0
  1184                           
  1185                           ; 1 bytes @ 0x15
  1186  000016                     	ds	1
  1187  000017                     ??_pad:
  1188  000017                     ___xxtofl@exp:
  1189                           	callstack 0
  1190                           
  1191                           ; 1 bytes @ 0x16
  1192  000017                     	ds	1
  1193  000018                     pad@i:
  1194                           	callstack 0
  1195  000018                     ___xxtofl@arg:
  1196                           	callstack 0
  1197                           
  1198                           ; 4 bytes @ 0x17
  1199  000018                     	ds	2
  1200  00001A                     pad@w:
  1201                           	callstack 0
  1202                           
  1203                           ; 2 bytes @ 0x19
  1204  00001A                     	ds	2
  1205  00001C                     ??_calculatedAverageValue:
  1206  00001C                     ?_dtoa:
  1207                           	callstack 0
  1208  00001C                     ?_fabsf:
  1209                           	callstack 0
  1210  00001C                     ?___flmul:
  1211                           	callstack 0
  1212  00001C                     dtoa@fp:
  1213                           	callstack 0
  1214  00001C                     ___flmul@b:
  1215                           	callstack 0
  1216  00001C                     fabsf@x:
  1217                           	callstack 0
  1218                           
  1219                           ; 4 bytes @ 0x1B
  1220  00001C                     	ds	2
  1221  00001E                     dtoa@d:
  1222                           	callstack 0
  1223                           
  1224                           ; 8 bytes @ 0x1D
  1225  00001E                     	ds	2
  1226  000020                     ___flmul@a:
  1227                           	callstack 0
  1228  000020                     fabsf@u:
  1229                           	callstack 0
  1230                           
  1231                           ; 4 bytes @ 0x1F
  1232  000020                     	ds	4
  1233  000024                     ??___flmul:
  1234                           
  1235                           ; 1 bytes @ 0x23
  1236  000024                     	ds	2
  1237  000026                     ??_dtoa:
  1238                           
  1239                           ; 1 bytes @ 0x25
  1240  000026                     	ds	2
  1241  000028                     ___flmul@sign:
  1242                           	callstack 0
  1243                           
  1244                           ; 1 bytes @ 0x27
  1245  000028                     	ds	1
  1246  000029                     ___flmul@grs:
  1247                           	callstack 0
  1248                           
  1249                           ; 4 bytes @ 0x28
  1250  000029                     	ds	4
  1251  00002D                     ___flmul@aexp:
  1252                           	callstack 0
  1253                           
  1254                           ; 1 bytes @ 0x2C
  1255  00002D                     	ds	1
  1256  00002E                     ___flmul@bexp:
  1257                           	callstack 0
  1258  00002E                     _dtoa$2540:
  1259                           	callstack 0
  1260                           
  1261                           ; 2 bytes @ 0x2D
  1262  00002E                     	ds	1
  1263  00002F                     ___flmul@prod:
  1264                           	callstack 0
  1265                           
  1266                           ; 4 bytes @ 0x2E
  1267  00002F                     	ds	1
  1268  000030                     dtoa@p:
  1269                           	callstack 0
  1270                           
  1271                           ; 2 bytes @ 0x2F
  1272  000030                     	ds	2
  1273  000032                     dtoa@w:
  1274                           	callstack 0
  1275                           
  1276                           ; 2 bytes @ 0x31
  1277  000032                     	ds	1
  1278  000033                     ___flmul@temp:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x32
  1282  000033                     	ds	1
  1283  000034                     dtoa@s:
  1284                           	callstack 0
  1285                           
  1286                           ; 2 bytes @ 0x33
  1287  000034                     	ds	1
  1288  000035                     ?___fladd:
  1289                           	callstack 0
  1290  000035                     ?___fldiv:
  1291                           	callstack 0
  1292  000035                     ___flge@ff1:
  1293                           	callstack 0
  1294  000035                     ___fladd@b:
  1295                           	callstack 0
  1296  000035                     ___fldiv@b:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x34
  1300  000035                     	ds	1
  1301  000036                     dtoa@n:
  1302                           	callstack 0
  1303                           
  1304                           ; 8 bytes @ 0x35
  1305  000036                     	ds	3
  1306  000039                     ___flge@ff2:
  1307                           	callstack 0
  1308  000039                     ___fladd@a:
  1309                           	callstack 0
  1310  000039                     ___fldiv@a:
  1311                           	callstack 0
  1312                           
  1313                           ; 4 bytes @ 0x38
  1314  000039                     	ds	4
  1315  00003D                     ??___fladd:
  1316  00003D                     ??___fldiv:
  1317  00003D                     ??___flge:
  1318                           
  1319                           ; 1 bytes @ 0x3C
  1320  00003D                     	ds	1
  1321  00003E                     dtoa@i:
  1322                           	callstack 0
  1323                           
  1324                           ; 2 bytes @ 0x3D
  1325  00003E                     	ds	3
  1326  000041                     ___fladd@signs:
  1327                           	callstack 0
  1328  000041                     ___fldiv@rem:
  1329                           	callstack 0
  1330                           
  1331                           ; 4 bytes @ 0x40
  1332  000041                     	ds	1
  1333  000042                     ___fladd@aexp:
  1334                           	callstack 0
  1335                           
  1336                           ; 1 bytes @ 0x41
  1337  000042                     	ds	1
  1338  000043                     ___fladd@bexp:
  1339                           	callstack 0
  1340                           
  1341                           ; 1 bytes @ 0x42
  1342  000043                     	ds	1
  1343  000044                     ___fladd@grs:
  1344                           	callstack 0
  1345                           
  1346                           ; 1 bytes @ 0x43
  1347  000044                     	ds	1
  1348  000045                     ?___flsub:
  1349                           	callstack 0
  1350  000045                     ___fldiv@sign:
  1351                           	callstack 0
  1352  000045                     ___flsub@b:
  1353                           	callstack 0
  1354                           
  1355                           ; 4 bytes @ 0x44
  1356  000045                     	ds	1
  1357  000046                     ___fldiv@new_exp:
  1358                           	callstack 0
  1359                           
  1360                           ; 2 bytes @ 0x45
  1361  000046                     	ds	2
  1362  000048                     ___fldiv@grs:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x47
  1366  000048                     	ds	1
  1367  000049                     ___flsub@a:
  1368                           	callstack 0
  1369                           
  1370                           ; 4 bytes @ 0x48
  1371  000049                     	ds	3
  1372  00004C                     ___fldiv@bexp:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x4B
  1376  00004C                     	ds	1
  1377  00004D                     ___fldiv@aexp:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x4C
  1381  00004D                     	ds	1
  1382  00004E                     ?_floorf:
  1383                           	callstack 0
  1384  00004E                     ?___fltol:
  1385                           	callstack 0
  1386  00004E                     ___fltol@f1:
  1387                           	callstack 0
  1388  00004E                     floorf@x:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x4D
  1392  00004E                     	ds	4
  1393  000052                     ??_floorf:
  1394  000052                     ??___fltol:
  1395                           
  1396                           ; 1 bytes @ 0x51
  1397  000052                     	ds	4
  1398  000056                     ___fltol@sign1:
  1399                           	callstack 0
  1400                           
  1401                           ; 1 bytes @ 0x55
  1402  000056                     	ds	1
  1403  000057                     ___fltol@exp1:
  1404                           	callstack 0
  1405                           
  1406                           ; 1 bytes @ 0x56
  1407  000057                     	ds	1
  1408  000058                     ??_scanAdcConversion:
  1409  000058                     ?_efgtoa:
  1410                           	callstack 0
  1411  000058                     PWM1_setDC@dutycycle:
  1412                           	callstack 0
  1413  000058                     PWM2_setDC@dutycycle:
  1414                           	callstack 0
  1415  000058                     efgtoa@fp:
  1416                           	callstack 0
  1417  000058                     speedControl@position:
  1418                           	callstack 0
  1419                           
  1420                           ; 4 bytes @ 0x57
  1421  000058                     	ds	2
  1422  00005A                     ??_PWM1_setDC:
  1423  00005A                     ??_PWM2_setDC:
  1424  00005A                     efgtoa@f:
  1425                           	callstack 0
  1426                           
  1427                           ; 4 bytes @ 0x59
  1428  00005A                     	ds	2
  1429  00005C                     ??_speedControl:
  1430  00005C                     PWM1_setDC@duty:
  1431                           	callstack 0
  1432  00005C                     PWM2_setDC@duty:
  1433                           	callstack 0
  1434                           
  1435                           ; 2 bytes @ 0x5B
  1436  00005C                     	ds	2
  1437  00005E                     efgtoa@c:
  1438                           	callstack 0
  1439                           
  1440                           ; 1 bytes @ 0x5D
  1441  00005E                     	ds	1
  1442  00005F                     
  1443                           ; 1 bytes @ 0x5E
  1444 ;;
  1445 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1446 ;;
  1447 ;; *************** function _main *****************
  1448 ;; Defined at:
  1449 ;;		line 40 in file "fs_main.c"
  1450 ;; Parameters:    Size  Location     Type
  1451 ;;		None
  1452 ;; Auto vars:     Size  Location     Type
  1453 ;;		None
  1454 ;; Return value:  Size  Location     Type
  1455 ;;                  1    wreg      void 
  1456 ;; Registers used:
  1457 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1458 ;; Tracked objects:
  1459 ;;		On entry : 0/0
  1460 ;;		On exit  : 0/0
  1461 ;;		Unchanged: 0/0
  1462 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1463 ;;      Params:         0       0       0       0       0       0       0
  1464 ;;      Locals:         0       0       0       0       0       0       0
  1465 ;;      Temps:          0       0       0       0       0       0       0
  1466 ;;      Totals:         0       0       0       0       0       0       0
  1467 ;;Total ram usage:        0 bytes
  1468 ;; Hardware stack levels required when called:   12
  1469 ;; This function calls:
  1470 ;;		_Lcd_Clear
  1471 ;;		_PWM1_setDC
  1472 ;;		_PWM2_setDC
  1473 ;;		_PWM_Init
  1474 ;;		_adcInit
  1475 ;;		_lcd_init
  1476 ;;		_mcu_init
  1477 ;;		_menuControl
  1478 ;;		_menuInitialize
  1479 ;;		_system_init
  1480 ;;		_timer_0_init
  1481 ;; This function is called by:
  1482 ;;		Startup code after reset
  1483 ;; This function uses a non-reentrant model
  1484 ;;
  1485                           
  1486                           	psect	text0
  1487  004CCE                     __ptext0:
  1488                           	callstack 0
  1489  004CCE                     _main:
  1490                           	callstack 19
  1491  004CCE                     
  1492                           ;fs_main.c: 42:     mcu_init();
  1493  004CCE  ECA8  F02E         	call	_mcu_init	;wreg free
  1494  004CD2                     
  1495                           ;fs_main.c: 43:     menuInitialize();
  1496  004CD2  EC32  F02E         	call	_menuInitialize	;wreg free
  1497  004CD6                     
  1498                           ;fs_main.c: 45:     adcInit();
  1499  004CD6  EC1E  F02D         	call	_adcInit	;wreg free
  1500  004CDA                     
  1501                           ;fs_main.c: 47:     timer_0_init();
  1502  004CDA  ECB3  F02E         	call	_timer_0_init	;wreg free
  1503  004CDE                     
  1504                           ;fs_main.c: 48:     lcd_init();
  1505  004CDE  ECB5  F029         	call	_lcd_init	;wreg free
  1506  004CE2                     
  1507                           ;fs_main.c: 49:     system_init();
  1508  004CE2  ECE2  F022         	call	_system_init	;wreg free
  1509  004CE6                     
  1510                           ;fs_main.c: 50:     Lcd_Clear();
  1511  004CE6  ECBC  F02E         	call	_Lcd_Clear	;wreg free
  1512  004CEA                     
  1513                           ;fs_main.c: 52:     PWM_Init();
  1514  004CEA  EC46  F02E         	call	_PWM_Init	;wreg free
  1515  004CEE                     
  1516                           ;fs_main.c: 53:     PWM1_setDC(0);
  1517  004CEE  0E00               	movlw	0
  1518  004CF0  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1519  004CF2  0E00               	movlw	0
  1520  004CF4  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1521  004CF6  EC7C  F02A         	call	_PWM1_setDC	;wreg free
  1522  004CFA                     
  1523                           ;fs_main.c: 54:     PWM2_setDC(0);
  1524  004CFA  0E00               	movlw	0
  1525  004CFC  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1526  004CFE  0E00               	movlw	0
  1527  004D00  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1528  004D02  EC3F  F02A         	call	_PWM2_setDC	;wreg free
  1529  004D06                     l6314:
  1530                           
  1531                           ;fs_main.c: 57: {;fs_main.c: 58:     if (timer_counter_flag.one_second_flag == 1)
  1532  004D06  0100               	movlb	0	; () banked
  1533  004D08  A1FF               	btfss	_timer_counter_flag& (0+255),0,b
  1534  004D0A  EF89  F026         	goto	u7841
  1535  004D0E  EF8B  F026         	goto	u7840
  1536  004D12                     u7841:
  1537  004D12  EFCA  F026         	goto	l6340
  1538  004D16                     u7840:
  1539  004D16                     
  1540                           ; BSR set to: 0
  1541                           ;fs_main.c: 59:     {;fs_main.c: 60:         timer_counter_flag.one_second_flag = 0;
  1542  004D16  91FF               	bcf	_timer_counter_flag& (0+255),0,b
  1543  004D18                     
  1544                           ; BSR set to: 0
  1545                           ;fs_main.c: 62:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1546  004D18  05FD               	decf	_startIsClick& (0+255),w,b
  1547  004D1A  A4D8               	btfss	status,2,c
  1548  004D1C  EF92  F026         	goto	u7851
  1549  004D20  EF94  F026         	goto	u7850
  1550  004D24                     u7851:
  1551  004D24  EFCA  F026         	goto	l6340
  1552  004D28                     u7850:
  1553  004D28                     
  1554                           ; BSR set to: 0
  1555  004D28  51FE               	movf	_pauseIsClick& (0+255),w,b
  1556  004D2A  A4D8               	btfss	status,2,c
  1557  004D2C  EF9A  F026         	goto	u7861
  1558  004D30  EF9C  F026         	goto	u7860
  1559  004D34                     u7861:
  1560  004D34  EFCA  F026         	goto	l6340
  1561  004D38                     u7860:
  1562  004D38                     
  1563                           ; BSR set to: 0
  1564  004D38  51FC               	movf	_stopIsClick& (0+255),w,b
  1565  004D3A  A4D8               	btfss	status,2,c
  1566  004D3C  EFA2  F026         	goto	u7871
  1567  004D40  EFA4  F026         	goto	u7870
  1568  004D44                     u7871:
  1569  004D44  EFCA  F026         	goto	l6340
  1570  004D48                     u7870:
  1571  004D48                     
  1572                           ; BSR set to: 0
  1573  004D48  51FA               	movf	_menu_selected& (0+255),w,b
  1574  004D4A  A4D8               	btfss	status,2,c
  1575  004D4C  EFAA  F026         	goto	u7881
  1576  004D50  EFAC  F026         	goto	u7880
  1577  004D54                     u7881:
  1578  004D54  EFCA  F026         	goto	l6340
  1579  004D58                     u7880:
  1580  004D58                     
  1581                           ; BSR set to: 0
  1582                           ;fs_main.c: 63:         {;fs_main.c: 64:             timer_value.second++;
  1583  004D58  0101               	movlb	1	; () banked
  1584  004D5A  2BAF               	incf	_timer_value& (0+255),f,b
  1585  004D5C                     
  1586                           ; BSR set to: 1
  1587                           ;fs_main.c: 65:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1588  004D5C  51AF               	movf	_timer_value& (0+255),w,b
  1589  004D5E  083C               	sublw	60
  1590  004D60  6FB1               	movwf	(_timer_value+2)& (0+255),b
  1591  004D62                     
  1592                           ; BSR set to: 1
  1593                           ;fs_main.c: 67:             if (timer_value.remainingSecond == 59 )
  1594  004D62  0E3B               	movlw	59
  1595  004D64  19B1               	xorwf	(_timer_value+2)& (0+255),w,b
  1596  004D66  A4D8               	btfss	status,2,c
  1597  004D68  EFB8  F026         	goto	u7891
  1598  004D6C  EFBA  F026         	goto	u7890
  1599  004D70                     u7891:
  1600  004D70  EFC0  F026         	goto	l6336
  1601  004D74                     u7890:
  1602  004D74                     
  1603                           ; BSR set to: 1
  1604                           ;fs_main.c: 68:             {;fs_main.c: 69:                 timer_value.minute++;
  1605  004D74  2BB0               	incf	(_timer_value+1)& (0+255),f,b
  1606  004D76                     
  1607                           ; BSR set to: 1
  1608                           ;fs_main.c: 70:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1609  004D76  51B0               	movf	(_timer_value+1)& (0+255),w,b
  1610  004D78  0100               	movlb	0	; () banked
  1611  004D7A  5DF3               	subwf	_menu_value& (0+255),w,b
  1612  004D7C  0101               	movlb	1	; () banked
  1613  004D7E  6FB2               	movwf	(_timer_value+3)& (0+255),b
  1614  004D80                     l6336:
  1615                           
  1616                           ; BSR set to: 1
  1617                           ;fs_main.c: 73:             if (timer_value.second > 59)
  1618  004D80  0E3B               	movlw	59
  1619  004D82  65AF               	cpfsgt	_timer_value& (0+255),b
  1620  004D84  EFC6  F026         	goto	u7901
  1621  004D88  EFC8  F026         	goto	u7900
  1622  004D8C                     u7901:
  1623  004D8C  EFCA  F026         	goto	l6340
  1624  004D90                     u7900:
  1625  004D90                     
  1626                           ; BSR set to: 1
  1627                           ;fs_main.c: 74:             {;fs_main.c: 75:                 timer_value.second = 0;
  1628  004D90  0E00               	movlw	0
  1629  004D92  6FAF               	movwf	_timer_value& (0+255),b
  1630  004D94                     l6340:
  1631                           
  1632                           ;fs_main.c: 80:     menuControl();
  1633  004D94  ECB9  F02A         	call	_menuControl	;wreg free
  1634  004D98  EF83  F026         	goto	l6314
  1635  004D9C  EF4D  F000         	goto	start
  1636  004DA0                     __end_of_main:
  1637                           	callstack 0
  1638                           
  1639 ;; *************** function _timer_0_init *****************
  1640 ;; Defined at:
  1641 ;;		line 72 in file "fs_timer.c"
  1642 ;; Parameters:    Size  Location     Type
  1643 ;;		None
  1644 ;; Auto vars:     Size  Location     Type
  1645 ;;		None
  1646 ;; Return value:  Size  Location     Type
  1647 ;;                  1    wreg      void 
  1648 ;; Registers used:
  1649 ;;		wreg, status,2
  1650 ;; Tracked objects:
  1651 ;;		On entry : 0/0
  1652 ;;		On exit  : 0/0
  1653 ;;		Unchanged: 0/0
  1654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1655 ;;      Params:         0       0       0       0       0       0       0
  1656 ;;      Locals:         0       0       0       0       0       0       0
  1657 ;;      Temps:          0       0       0       0       0       0       0
  1658 ;;      Totals:         0       0       0       0       0       0       0
  1659 ;;Total ram usage:        0 bytes
  1660 ;; Hardware stack levels used:    1
  1661 ;; Hardware stack levels required when called:    1
  1662 ;; This function calls:
  1663 ;;		Nothing
  1664 ;; This function is called by:
  1665 ;;		_main
  1666 ;; This function uses a non-reentrant model
  1667 ;;
  1668                           
  1669                           	psect	text1
  1670  005D66                     __ptext1:
  1671                           	callstack 0
  1672  005D66                     _timer_0_init:
  1673                           	callstack 29
  1674  005D66                     
  1675                           ;fs_timer.c: 74:   T0CON = 0x81;
  1676  005D66  0E81               	movlw	129
  1677  005D68  6ED5               	movwf	213,c	;volatile
  1678                           
  1679                           ;fs_timer.c: 75:   TMR0H = 0x63;
  1680  005D6A  0E63               	movlw	99
  1681  005D6C  6ED7               	movwf	215,c	;volatile
  1682                           
  1683                           ;fs_timer.c: 76:   TMR0L = 0xC0;
  1684  005D6E  0EC0               	movlw	192
  1685  005D70  6ED6               	movwf	214,c	;volatile
  1686  005D72                     
  1687                           ;fs_timer.c: 77:   INTCONbits.GIE = 1;
  1688  005D72  8EF2               	bsf	242,7,c	;volatile
  1689  005D74                     
  1690                           ;fs_timer.c: 78:   INTCONbits.TMR0IE = 1;
  1691  005D74  8AF2               	bsf	242,5,c	;volatile
  1692  005D76  0012               	return		;funcret
  1693  005D78                     __end_of_timer_0_init:
  1694                           	callstack 0
  1695                           
  1696 ;; *************** function _system_init *****************
  1697 ;; Defined at:
  1698 ;;		line 56 in file "fs_mcu.c"
  1699 ;; Parameters:    Size  Location     Type
  1700 ;;		None
  1701 ;; Auto vars:     Size  Location     Type
  1702 ;;		None
  1703 ;; Return value:  Size  Location     Type
  1704 ;;                  1    wreg      void 
  1705 ;; Registers used:
  1706 ;;		wreg, status,2, cstack
  1707 ;; Tracked objects:
  1708 ;;		On entry : 0/0
  1709 ;;		On exit  : 0/0
  1710 ;;		Unchanged: 0/0
  1711 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1712 ;;      Params:         0       0       0       0       0       0       0
  1713 ;;      Locals:         0       0       0       0       0       0       0
  1714 ;;      Temps:          2       0       0       0       0       0       0
  1715 ;;      Totals:         2       0       0       0       0       0       0
  1716 ;;Total ram usage:        2 bytes
  1717 ;; Hardware stack levels used:    1
  1718 ;; Hardware stack levels required when called:    2
  1719 ;; This function calls:
  1720 ;;		_eepromRead
  1721 ;; This function is called by:
  1722 ;;		_main
  1723 ;; This function uses a non-reentrant model
  1724 ;;
  1725                           
  1726                           	psect	text2
  1727  0045C4                     __ptext2:
  1728                           	callstack 0
  1729  0045C4                     _system_init:
  1730                           	callstack 28
  1731  0045C4                     
  1732                           ;fs_mcu.c: 58:     driver_limit.pay = 0;
  1733  0045C4  0E00               	movlw	0
  1734  0045C6  0101               	movlb	1	; () banked
  1735  0045C8  6FA3               	movwf	_driver_limit& (0+255),b
  1736  0045CA  0E00               	movlw	0
  1737  0045CC  6FA4               	movwf	(_driver_limit+1)& (0+255),b
  1738  0045CE  0E00               	movlw	0
  1739  0045D0  6FA5               	movwf	(_driver_limit+2)& (0+255),b
  1740  0045D2  0E00               	movlw	0
  1741  0045D4  6FA6               	movwf	(_driver_limit+3)& (0+255),b
  1742                           
  1743                           ;fs_mcu.c: 59:     driver_limit.payda = 0;
  1744  0045D6  0E00               	movlw	0
  1745  0045D8  6FA7               	movwf	(_driver_limit+4)& (0+255),b
  1746  0045DA  0E00               	movlw	0
  1747  0045DC  6FA8               	movwf	(_driver_limit+5)& (0+255),b
  1748  0045DE  0E00               	movlw	0
  1749  0045E0  6FA9               	movwf	(_driver_limit+6)& (0+255),b
  1750  0045E2  0E00               	movlw	0
  1751  0045E4  6FAA               	movwf	(_driver_limit+7)& (0+255),b
  1752                           
  1753                           ;fs_mcu.c: 60:     driver_limit.ortalama = 0;
  1754  0045E6  0E00               	movlw	0
  1755  0045E8  6FAB               	movwf	(_driver_limit+8)& (0+255),b
  1756  0045EA  0E00               	movlw	0
  1757  0045EC  6FAC               	movwf	(_driver_limit+9)& (0+255),b
  1758  0045EE  0E00               	movlw	0
  1759  0045F0  6FAD               	movwf	(_driver_limit+10)& (0+255),b
  1760  0045F2  0E00               	movlw	0
  1761  0045F4  6FAE               	movwf	(_driver_limit+11)& (0+255),b
  1762                           
  1763                           ;fs_mcu.c: 61:     convert_data.convert_channel_0 = 0;
  1764  0045F6  0E00               	movlw	0
  1765  0045F8  6F00               	movwf	_convert_data& (0+255),b
  1766  0045FA  0E00               	movlw	0
  1767  0045FC  6F01               	movwf	(_convert_data+1)& (0+255),b
  1768  0045FE  0E00               	movlw	0
  1769  004600  6F02               	movwf	(_convert_data+2)& (0+255),b
  1770  004602  0E00               	movlw	0
  1771  004604  6F03               	movwf	(_convert_data+3)& (0+255),b
  1772                           
  1773                           ;fs_mcu.c: 62:     convert_data.convert_channel_1 = 0;
  1774  004606  0E00               	movlw	0
  1775  004608  6F04               	movwf	(_convert_data+4)& (0+255),b
  1776  00460A  0E00               	movlw	0
  1777  00460C  6F05               	movwf	(_convert_data+5)& (0+255),b
  1778  00460E  0E00               	movlw	0
  1779  004610  6F06               	movwf	(_convert_data+6)& (0+255),b
  1780  004612  0E00               	movlw	0
  1781  004614  6F07               	movwf	(_convert_data+7)& (0+255),b
  1782                           
  1783                           ;fs_mcu.c: 63:     convert_data.convert_channel_2 = 0;
  1784  004616  0E00               	movlw	0
  1785  004618  6F08               	movwf	(_convert_data+8)& (0+255),b
  1786  00461A  0E00               	movlw	0
  1787  00461C  6F09               	movwf	(_convert_data+9)& (0+255),b
  1788  00461E  0E00               	movlw	0
  1789  004620  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1790  004622  0E00               	movlw	0
  1791  004624  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1792                           
  1793                           ;fs_mcu.c: 64:     convert_data.convert_channel_3 = 0;
  1794  004626  0E00               	movlw	0
  1795  004628  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1796  00462A  0E00               	movlw	0
  1797  00462C  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1798  00462E  0E00               	movlw	0
  1799  004630  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1800  004632  0E00               	movlw	0
  1801  004634  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1802                           
  1803                           ;fs_mcu.c: 65:     convert_data.convert_channel_4 = 0;
  1804  004636  0E00               	movlw	0
  1805  004638  6F10               	movwf	(_convert_data+16)& (0+255),b
  1806  00463A  0E00               	movlw	0
  1807  00463C  6F11               	movwf	(_convert_data+17)& (0+255),b
  1808  00463E  0E00               	movlw	0
  1809  004640  6F12               	movwf	(_convert_data+18)& (0+255),b
  1810  004642  0E00               	movlw	0
  1811  004644  6F13               	movwf	(_convert_data+19)& (0+255),b
  1812                           
  1813                           ;fs_mcu.c: 66:     convert_data.convert_channel_5 = 0;
  1814  004646  0E00               	movlw	0
  1815  004648  6F14               	movwf	(_convert_data+20)& (0+255),b
  1816  00464A  0E00               	movlw	0
  1817  00464C  6F15               	movwf	(_convert_data+21)& (0+255),b
  1818  00464E  0E00               	movlw	0
  1819  004650  6F16               	movwf	(_convert_data+22)& (0+255),b
  1820  004652  0E00               	movlw	0
  1821  004654  6F17               	movwf	(_convert_data+23)& (0+255),b
  1822                           
  1823                           ;fs_mcu.c: 67:     convert_data.convert_channel_6 = 0;
  1824  004656  0E00               	movlw	0
  1825  004658  6F18               	movwf	(_convert_data+24)& (0+255),b
  1826  00465A  0E00               	movlw	0
  1827  00465C  6F19               	movwf	(_convert_data+25)& (0+255),b
  1828  00465E  0E00               	movlw	0
  1829  004660  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1830  004662  0E00               	movlw	0
  1831  004664  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1832                           
  1833                           ;fs_mcu.c: 68:     convert_data.convert_channel_7 = 0;
  1834  004666  0E00               	movlw	0
  1835  004668  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1836  00466A  0E00               	movlw	0
  1837  00466C  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1838  00466E  0E00               	movlw	0
  1839  004670  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1840  004672  0E00               	movlw	0
  1841  004674  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1842                           
  1843                           ;fs_mcu.c: 69:     controller.leftMotorSpeed = 0;
  1844  004676  0E00               	movlw	0
  1845  004678  6F57               	movwf	(_controller+7)& (0+255),b
  1846  00467A  0E00               	movlw	0
  1847  00467C  6F56               	movwf	(_controller+6)& (0+255),b
  1848                           
  1849                           ;fs_mcu.c: 70:     controller.rightMotorSpeed = 0;
  1850  00467E  0E00               	movlw	0
  1851  004680  6F59               	movwf	(_controller+9)& (0+255),b
  1852  004682  0E00               	movlw	0
  1853  004684  6F58               	movwf	(_controller+8)& (0+255),b
  1854                           
  1855                           ;fs_mcu.c: 71:     timer_value.timer_0_counter = 0;
  1856  004686  0E00               	movlw	0
  1857  004688  6FB4               	movwf	(_timer_value+5)& (0+255),b
  1858                           
  1859                           ;fs_mcu.c: 72:     controller.error = 0;
  1860  00468A  0E00               	movlw	0
  1861  00468C  6F51               	movwf	(_controller+1)& (0+255),b
  1862  00468E  0E00               	movlw	0
  1863  004690  6F50               	movwf	_controller& (0+255),b
  1864                           
  1865                           ;fs_mcu.c: 74:     button_bounce_controller.menu = 0;
  1866  004692  0E00               	movlw	0
  1867  004694  6FBD               	movwf	_button_bounce_controller& (0+255),b
  1868                           
  1869                           ;fs_mcu.c: 75:     button_bounce_controller.pause = 0;
  1870  004696  0E00               	movlw	0
  1871  004698  6FC0               	movwf	(_button_bounce_controller+3)& (0+255),b
  1872                           
  1873                           ;fs_mcu.c: 76:     button_bounce_controller.start = 0;
  1874  00469A  0E00               	movlw	0
  1875  00469C  6FBE               	movwf	(_button_bounce_controller+1)& (0+255),b
  1876                           
  1877                           ;fs_mcu.c: 77:     button_bounce_controller.stop = 0;
  1878  00469E  0E00               	movlw	0
  1879  0046A0  6FBF               	movwf	(_button_bounce_controller+2)& (0+255),b
  1880  0046A2                     
  1881                           ; BSR set to: 1
  1882                           ;fs_mcu.c: 78:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1883  0046A2  0E00               	movlw	0
  1884  0046A4  EC7D  F02E         	call	_eepromRead
  1885  0046A8  0100               	movlb	0	; () banked
  1886  0046AA  6FF3               	movwf	_menu_value& (0+255),b
  1887  0046AC                     
  1888                           ; BSR set to: 0
  1889                           ;fs_mcu.c: 79:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1890  0046AC  0E01               	movlw	1
  1891  0046AE  EC7D  F02E         	call	_eepromRead
  1892  0046B2  0100               	movlb	0	; () banked
  1893  0046B4  6FF4               	movwf	(_menu_value+1)& (0+255),b
  1894  0046B6                     
  1895                           ; BSR set to: 0
  1896                           ;fs_mcu.c: 80:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1897  0046B6  0E02               	movlw	2
  1898  0046B8  EC7D  F02E         	call	_eepromRead
  1899  0046BC  0100               	movlb	0	; () banked
  1900  0046BE  6FF5               	movwf	(_menu_value+2)& (0+255),b
  1901  0046C0                     
  1902                           ; BSR set to: 0
  1903                           ;fs_mcu.c: 82:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1904  0046C0  0E39               	movlw	57
  1905  0046C2  6E03               	movwf	(??_system_init+1)^0,c
  1906  0046C4  0ED2               	movlw	210
  1907  0046C6  6E02               	movwf	??_system_init^0,c
  1908  0046C8  0E4C               	movlw	76
  1909  0046CA                     u7977:
  1910  0046CA  2EE8               	decfsz	wreg,f,c
  1911  0046CC  D7FE               	bra	u7977
  1912  0046CE  2E02               	decfsz	??_system_init^0,f,c
  1913  0046D0  D7FC               	bra	u7977
  1914  0046D2  2E03               	decfsz	(??_system_init+1)^0,f,c
  1915  0046D4  D7FA               	bra	u7977
  1916  0046D6  D000               	nop2	
  1917  0046D8                     
  1918                           ;fs_mcu.c: 83:     timer_value.remainingMinute = menu_value.driver_time;
  1919  0046D8  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  1920  0046DC                     
  1921                           ;fs_mcu.c: 84:     timer_value.remainingSecond = 0;
  1922  0046DC  0E00               	movlw	0
  1923  0046DE  0101               	movlb	1	; () banked
  1924  0046E0  6FB1               	movwf	(_timer_value+2)& (0+255),b
  1925  0046E2                     
  1926                           ; BSR set to: 1
  1927  0046E2  0012               	return		;funcret
  1928  0046E4                     __end_of_system_init:
  1929                           	callstack 0
  1930                           
  1931 ;; *************** function _eepromRead *****************
  1932 ;; Defined at:
  1933 ;;		line 36 in file "fs_eeprom.c"
  1934 ;; Parameters:    Size  Location     Type
  1935 ;;  address         1    wreg     unsigned char 
  1936 ;; Auto vars:     Size  Location     Type
  1937 ;;  address         1    0[COMRAM] unsigned char 
  1938 ;; Return value:  Size  Location     Type
  1939 ;;                  1    wreg      unsigned char 
  1940 ;; Registers used:
  1941 ;;		wreg, status,2
  1942 ;; Tracked objects:
  1943 ;;		On entry : 0/0
  1944 ;;		On exit  : 0/0
  1945 ;;		Unchanged: 0/0
  1946 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1947 ;;      Params:         0       0       0       0       0       0       0
  1948 ;;      Locals:         1       0       0       0       0       0       0
  1949 ;;      Temps:          0       0       0       0       0       0       0
  1950 ;;      Totals:         1       0       0       0       0       0       0
  1951 ;;Total ram usage:        1 bytes
  1952 ;; Hardware stack levels used:    1
  1953 ;; Hardware stack levels required when called:    1
  1954 ;; This function calls:
  1955 ;;		Nothing
  1956 ;; This function is called by:
  1957 ;;		_system_init
  1958 ;; This function uses a non-reentrant model
  1959 ;;
  1960                           
  1961                           	psect	text3
  1962  005CFA                     __ptext3:
  1963                           	callstack 0
  1964  005CFA                     _eepromRead:
  1965                           	callstack 28
  1966                           
  1967                           ; BSR set to: 1
  1968                           ;incstack = 0
  1969                           ;eepromRead@address stored from wreg
  1970  005CFA  6E01               	movwf	eepromRead@address^0,c
  1971  005CFC                     
  1972                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1973  005CFC  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1974  005D00                     
  1975                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1976  005D00  9EA6               	bcf	166,7,c	;volsfr
  1977  005D02                     
  1978                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1979  005D02  9CA6               	bcf	166,6,c	;volsfr
  1980  005D04                     
  1981                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1982  005D04  80A6               	bsf	166,0,c	;volsfr
  1983  005D06                     l70:
  1984  005D06  B0A6               	btfsc	166,0,c	;volsfr
  1985  005D08  EF88  F02E         	goto	u7551
  1986  005D0C  EF8A  F02E         	goto	u7550
  1987  005D10                     u7551:
  1988  005D10  EF83  F02E         	goto	l70
  1989  005D14                     u7550:
  1990  005D14                     
  1991                           ;fs_eeprom.c: 51:     return EEDATA;
  1992  005D14  50A8               	movf	168,w,c	;volatile
  1993  005D16  0012               	return		;funcret
  1994  005D18                     __end_of_eepromRead:
  1995                           	callstack 0
  1996                           
  1997 ;; *************** function _menuInitialize *****************
  1998 ;; Defined at:
  1999 ;;		line 38 in file "fs_menu_controller.c"
  2000 ;; Parameters:    Size  Location     Type
  2001 ;;		None
  2002 ;; Auto vars:     Size  Location     Type
  2003 ;;		None
  2004 ;; Return value:  Size  Location     Type
  2005 ;;                  1    wreg      void 
  2006 ;; Registers used:
  2007 ;;		None
  2008 ;; Tracked objects:
  2009 ;;		On entry : 0/0
  2010 ;;		On exit  : 0/0
  2011 ;;		Unchanged: 0/0
  2012 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2013 ;;      Params:         0       0       0       0       0       0       0
  2014 ;;      Locals:         0       0       0       0       0       0       0
  2015 ;;      Temps:          0       0       0       0       0       0       0
  2016 ;;      Totals:         0       0       0       0       0       0       0
  2017 ;;Total ram usage:        0 bytes
  2018 ;; Hardware stack levels used:    1
  2019 ;; Hardware stack levels required when called:    1
  2020 ;; This function calls:
  2021 ;;		Nothing
  2022 ;; This function is called by:
  2023 ;;		_main
  2024 ;; This function uses a non-reentrant model
  2025 ;;
  2026                           
  2027                           	psect	text4
  2028  005C64                     __ptext4:
  2029                           	callstack 0
  2030  005C64                     _menuInitialize:
  2031                           	callstack 29
  2032  005C64                     
  2033                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  2034  005C64  8C93               	bsf	147,6,c	;volatile
  2035                           
  2036                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  2037  005C66  8E93               	bsf	147,7,c	;volatile
  2038                           
  2039                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2040  005C68  010F               	movlb	15	; () banked
  2041  005C6A  993B               	bcf	59,4,b	;volatile
  2042                           
  2043                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2044  005C6C  8895               	bsf	149,4,c	;volatile
  2045                           
  2046                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2047  005C6E  913B               	bcf	59,0,b	;volatile
  2048                           
  2049                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2050  005C70  8095               	bsf	149,0,c	;volatile
  2051                           
  2052                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2053  005C72  933B               	bcf	59,1,b	;volatile
  2054                           
  2055                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2056  005C74  8295               	bsf	149,1,c	;volatile
  2057                           
  2058                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2059  005C76  953B               	bcf	59,2,b	;volatile
  2060                           
  2061                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2062  005C78  8495               	bsf	149,2,c	;volatile
  2063                           
  2064                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2065  005C7A  973B               	bcf	59,3,b	;volatile
  2066                           
  2067                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2068  005C7C  8695               	bsf	149,3,c	;volatile
  2069                           
  2070                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2071  005C7E  9B3B               	bcf	59,5,b	;volatile
  2072                           
  2073                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2074  005C80  9A95               	bcf	149,5,c	;volatile
  2075                           
  2076                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2077  005C82  9B3A               	bcf	58,5,b	;volatile
  2078                           
  2079                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2080  005C84  9A94               	bcf	148,5,c	;volatile
  2081                           
  2082                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2083  005C86  993A               	bcf	58,4,b	;volatile
  2084                           
  2085                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2086  005C88  9894               	bcf	148,4,c	;volatile
  2087  005C8A                     
  2088                           ; BSR set to: 15
  2089  005C8A  0012               	return		;funcret
  2090  005C8C                     __end_of_menuInitialize:
  2091                           	callstack 0
  2092                           
  2093 ;; *************** function _menuControl *****************
  2094 ;; Defined at:
  2095 ;;		line 162 in file "fs_menu_controller.c"
  2096 ;; Parameters:    Size  Location     Type
  2097 ;;		None
  2098 ;; Auto vars:     Size  Location     Type
  2099 ;;		None
  2100 ;; Return value:  Size  Location     Type
  2101 ;;                  1    wreg      void 
  2102 ;; Registers used:
  2103 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2104 ;; Tracked objects:
  2105 ;;		On entry : 0/0
  2106 ;;		On exit  : 0/0
  2107 ;;		Unchanged: 0/0
  2108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2109 ;;      Params:         0       0       0       0       0       0       0
  2110 ;;      Locals:         0       0       0       0       0       0       0
  2111 ;;      Temps:          0       0       0       0       0       0       0
  2112 ;;      Totals:         0       0       0       0       0       0       0
  2113 ;;Total ram usage:        0 bytes
  2114 ;; Hardware stack levels used:    1
  2115 ;; Hardware stack levels required when called:   11
  2116 ;; This function calls:
  2117 ;;		_buttonControlFlags
  2118 ;;		_stateMachine
  2119 ;; This function is called by:
  2120 ;;		_main
  2121 ;; This function uses a non-reentrant model
  2122 ;;
  2123                           
  2124                           	psect	text5
  2125  005572                     __ptext5:
  2126                           	callstack 0
  2127  005572                     _menuControl:
  2128                           	callstack 19
  2129  005572                     
  2130                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2131  005572  EC0A  F01C         	call	_buttonControlFlags	;wreg free
  2132  005576                     
  2133                           ;fs_menu_controller.c: 165:     stateMachine();
  2134  005576  ECB9  F028         	call	_stateMachine	;wreg free
  2135  00557A                     
  2136                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2137  00557A  0101               	movlb	1	; () banked
  2138  00557C  05B8               	decf	(_menu_flags+1)& (0+255),w,b
  2139  00557E  A4D8               	btfss	status,2,c
  2140  005580  EFC4  F02A         	goto	u7811
  2141  005584  EFC6  F02A         	goto	u7810
  2142  005588                     u7811:
  2143  005588  EFCF  F02A         	goto	l6282
  2144  00558C                     u7810:
  2145  00558C                     
  2146                           ; BSR set to: 1
  2147                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2148  00558C  0E00               	movlw	0
  2149  00558E  6FB8               	movwf	(_menu_flags+1)& (0+255),b
  2150                           
  2151                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2152  005590  0E01               	movlw	1
  2153  005592  0100               	movlb	0	; () banked
  2154  005594  6FFD               	movwf	_startIsClick& (0+255),b
  2155                           
  2156                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2157  005596  0E00               	movlw	0
  2158  005598  6FFE               	movwf	_pauseIsClick& (0+255),b
  2159                           
  2160                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2161  00559A  0E00               	movlw	0
  2162  00559C  6FFC               	movwf	_stopIsClick& (0+255),b
  2163  00559E                     l6282:
  2164                           
  2165                           ;fs_menu_controller.c: 175:     if (menu_flags.menu_pause_flag == 1)
  2166  00559E  0101               	movlb	1	; () banked
  2167  0055A0  05BA               	decf	(_menu_flags+3)& (0+255),w,b
  2168  0055A2  A4D8               	btfss	status,2,c
  2169  0055A4  EFD6  F02A         	goto	u7821
  2170  0055A8  EFD8  F02A         	goto	u7820
  2171  0055AC                     u7821:
  2172  0055AC  EFE1  F02A         	goto	l6286
  2173  0055B0                     u7820:
  2174  0055B0                     
  2175                           ; BSR set to: 1
  2176                           ;fs_menu_controller.c: 176:     {;fs_menu_controller.c: 177:         menu_flags.menu_pau
      +                          se_flag = 0;
  2177  0055B0  0E00               	movlw	0
  2178  0055B2  6FBA               	movwf	(_menu_flags+3)& (0+255),b
  2179                           
  2180                           ;fs_menu_controller.c: 178:         pauseIsClick = 1;
  2181  0055B4  0E01               	movlw	1
  2182  0055B6  0100               	movlb	0	; () banked
  2183  0055B8  6FFE               	movwf	_pauseIsClick& (0+255),b
  2184                           
  2185                           ;fs_menu_controller.c: 179:         startIsClick = 0;
  2186  0055BA  0E00               	movlw	0
  2187  0055BC  6FFD               	movwf	_startIsClick& (0+255),b
  2188                           
  2189                           ;fs_menu_controller.c: 180:         stopIsClick = 0;
  2190  0055BE  0E00               	movlw	0
  2191  0055C0  6FFC               	movwf	_stopIsClick& (0+255),b
  2192  0055C2                     l6286:
  2193                           
  2194                           ;fs_menu_controller.c: 183:     if (menu_flags.menu_stop_flag == 1)
  2195  0055C2  0101               	movlb	1	; () banked
  2196  0055C4  05B9               	decf	(_menu_flags+2)& (0+255),w,b
  2197  0055C6  A4D8               	btfss	status,2,c
  2198  0055C8  EFE8  F02A         	goto	u7831
  2199  0055CC  EFEA  F02A         	goto	u7830
  2200  0055D0                     u7831:
  2201  0055D0  EFF3  F02A         	goto	l351
  2202  0055D4                     u7830:
  2203  0055D4                     
  2204                           ; BSR set to: 1
  2205                           ;fs_menu_controller.c: 184:     {;fs_menu_controller.c: 185:         menu_flags.menu_sto
      +                          p_flag = 0;
  2206  0055D4  0E00               	movlw	0
  2207  0055D6  6FB9               	movwf	(_menu_flags+2)& (0+255),b
  2208                           
  2209                           ;fs_menu_controller.c: 186:         pauseIsClick = 0;
  2210  0055D8  0E00               	movlw	0
  2211  0055DA  0100               	movlb	0	; () banked
  2212  0055DC  6FFE               	movwf	_pauseIsClick& (0+255),b
  2213                           
  2214                           ;fs_menu_controller.c: 187:         startIsClick = 0;
  2215  0055DE  0E00               	movlw	0
  2216  0055E0  6FFD               	movwf	_startIsClick& (0+255),b
  2217                           
  2218                           ;fs_menu_controller.c: 188:         stopIsClick = 1;
  2219  0055E2  0E01               	movlw	1
  2220  0055E4  6FFC               	movwf	_stopIsClick& (0+255),b
  2221  0055E6                     l351:
  2222  0055E6  0012               	return		;funcret
  2223  0055E8                     __end_of_menuControl:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _stateMachine *****************
  2227 ;; Defined at:
  2228 ;;		line 199 in file "fs_menu_controller.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;		None
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2242 ;;      Params:         0       0       0       0       0       0       0
  2243 ;;      Locals:         0       0       0       0       0       0       0
  2244 ;;      Temps:          0       2       0       0       0       0       0
  2245 ;;      Totals:         0       2       0       0       0       0       0
  2246 ;;Total ram usage:        2 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:   10
  2249 ;; This function calls:
  2250 ;;		_driverTimeSettingMenu
  2251 ;;		_mainMenu
  2252 ;;		_pauseMenu
  2253 ;;		_secretMenu
  2254 ;;		_speedLimitSettingMenu
  2255 ;;		_startMenu
  2256 ;;		_stopMenu
  2257 ;;		_stopTimeSettingMenu
  2258 ;; This function is called by:
  2259 ;;		_menuControl
  2260 ;; This function uses a non-reentrant model
  2261 ;;
  2262                           
  2263                           	psect	text6
  2264  005172                     __ptext6:
  2265                           	callstack 0
  2266  005172                     _stateMachine:
  2267                           	callstack 19
  2268  005172                     
  2269                           ;fs_menu_controller.c: 202:     switch (menu_selected)
  2270  005172  EFDB  F028         	goto	l6198
  2271  005176                     l6180:
  2272                           
  2273                           ; BSR set to: 0
  2274                           ;fs_menu_controller.c: 206:             mainMenu();
  2275  005176  ECA9  F01E         	call	_mainMenu	;wreg free
  2276                           
  2277                           ;fs_menu_controller.c: 209:         break;
  2278  00517A  EF0D  F029         	goto	l365
  2279  00517E                     l6182:
  2280                           
  2281                           ; BSR set to: 0
  2282                           ;fs_menu_controller.c: 212:             driverTimeSettingMenu();
  2283  00517E  EC4E  F022         	call	_driverTimeSettingMenu	;wreg free
  2284                           
  2285                           ;fs_menu_controller.c: 213:         break;
  2286  005182  EF0D  F029         	goto	l365
  2287  005186                     l6184:
  2288                           
  2289                           ; BSR set to: 0
  2290                           ;fs_menu_controller.c: 216:             stopTimeSettingMenu();
  2291  005186  EC72  F023         	call	_stopTimeSettingMenu	;wreg free
  2292                           
  2293                           ;fs_menu_controller.c: 217:         break;
  2294  00518A  EF0D  F029         	goto	l365
  2295  00518E                     l6186:
  2296                           
  2297                           ; BSR set to: 0
  2298                           ;fs_menu_controller.c: 220:             speedLimitSettingMenu();
  2299  00518E  EC79  F024         	call	_speedLimitSettingMenu	;wreg free
  2300                           
  2301                           ;fs_menu_controller.c: 221:         break;
  2302  005192  EF0D  F029         	goto	l365
  2303  005196                     l6188:
  2304                           
  2305                           ; BSR set to: 0
  2306                           ;fs_menu_controller.c: 225:             stopMenu();
  2307  005196  ECD0  F026         	call	_stopMenu	;wreg free
  2308                           
  2309                           ;fs_menu_controller.c: 227:         break;
  2310  00519A  EF0D  F029         	goto	l365
  2311  00519E                     l6190:
  2312                           
  2313                           ; BSR set to: 0
  2314                           ;fs_menu_controller.c: 230:             startMenu();
  2315  00519E  EC9B  F02E         	call	_startMenu	;wreg free
  2316                           
  2317                           ;fs_menu_controller.c: 231:         break;
  2318  0051A2  EF0D  F029         	goto	l365
  2319  0051A6                     l6192:
  2320                           
  2321                           ; BSR set to: 0
  2322                           ;fs_menu_controller.c: 235:             pauseMenu();
  2323  0051A6  ECB3  F021         	call	_pauseMenu	;wreg free
  2324                           
  2325                           ;fs_menu_controller.c: 237:         break;
  2326  0051AA  EF0D  F029         	goto	l365
  2327  0051AE                     l6194:
  2328                           
  2329                           ; BSR set to: 0
  2330                           ;fs_menu_controller.c: 244:             secretMenu();
  2331  0051AE  EC95  F019         	call	_secretMenu	;wreg free
  2332                           
  2333                           ;fs_menu_controller.c: 245:         break;
  2334  0051B2  EF0D  F029         	goto	l365
  2335  0051B6                     l6198:
  2336  0051B6  0100               	movlb	0	; () banked
  2337  0051B8  51FA               	movf	_menu_selected& (0+255),w,b
  2338  0051BA  6FF1               	movwf	??_stateMachine& (0+255),b
  2339  0051BC  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  2340                           
  2341                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2342                           ; Switch size 1, requested type "simple"
  2343                           ; Number of cases is 1, Range of values is 0 to 0
  2344                           ; switch strategies available:
  2345                           ; Name         Instructions Cycles
  2346                           ; simple_byte            4     3 (average)
  2347                           ;	Chosen strategy is simple_byte
  2348  0051BE  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  2349  0051C0  0A00               	xorlw	0	; case 0
  2350  0051C2  B4D8               	btfsc	status,2,c
  2351  0051C4  EFE6  F028         	goto	l6440
  2352  0051C8  EF0D  F029         	goto	l365
  2353  0051CC                     l6440:
  2354                           
  2355                           ; BSR set to: 0
  2356                           ; Switch size 1, requested type "simple"
  2357                           ; Number of cases is 9, Range of values is 0 to 8
  2358                           ; switch strategies available:
  2359                           ; Name         Instructions Cycles
  2360                           ; simple_byte           28    15 (average)
  2361                           ;	Chosen strategy is simple_byte
  2362  0051CC  51F1               	movf	??_stateMachine& (0+255),w,b
  2363  0051CE  0A00               	xorlw	0	; case 0
  2364  0051D0  B4D8               	btfsc	status,2,c
  2365  0051D2  EFBB  F028         	goto	l6180
  2366  0051D6  0A01               	xorlw	1	; case 1
  2367  0051D8  B4D8               	btfsc	status,2,c
  2368  0051DA  EFBF  F028         	goto	l6182
  2369  0051DE  0A03               	xorlw	3	; case 2
  2370  0051E0  B4D8               	btfsc	status,2,c
  2371  0051E2  EFC3  F028         	goto	l6184
  2372  0051E6  0A01               	xorlw	1	; case 3
  2373  0051E8  B4D8               	btfsc	status,2,c
  2374  0051EA  EFC7  F028         	goto	l6186
  2375  0051EE  0A07               	xorlw	7	; case 4
  2376  0051F0  B4D8               	btfsc	status,2,c
  2377  0051F2  EFCB  F028         	goto	l6188
  2378  0051F6  0A01               	xorlw	1	; case 5
  2379  0051F8  B4D8               	btfsc	status,2,c
  2380  0051FA  EFCF  F028         	goto	l6190
  2381  0051FE  0A03               	xorlw	3	; case 6
  2382  005200  B4D8               	btfsc	status,2,c
  2383  005202  EFD3  F028         	goto	l6192
  2384  005206  0A01               	xorlw	1	; case 7
  2385  005208  B4D8               	btfsc	status,2,c
  2386  00520A  EF0D  F029         	goto	l365
  2387  00520E  0A0F               	xorlw	15	; case 8
  2388  005210  B4D8               	btfsc	status,2,c
  2389  005212  EFD7  F028         	goto	l6194
  2390  005216  EF0D  F029         	goto	l365
  2391  00521A                     l365:
  2392  00521A  0012               	return		;funcret
  2393  00521C                     __end_of_stateMachine:
  2394                           	callstack 0
  2395                           
  2396 ;; *************** function _stopTimeSettingMenu *****************
  2397 ;; Defined at:
  2398 ;;		line 542 in file "fs_menu_controller.c"
  2399 ;; Parameters:    Size  Location     Type
  2400 ;;		None
  2401 ;; Auto vars:     Size  Location     Type
  2402 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2403 ;; Return value:  Size  Location     Type
  2404 ;;                  1    wreg      void 
  2405 ;; Registers used:
  2406 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2407 ;; Tracked objects:
  2408 ;;		On entry : 0/0
  2409 ;;		On exit  : 0/0
  2410 ;;		Unchanged: 0/0
  2411 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2412 ;;      Params:         0       0       0       0       0       0       0
  2413 ;;      Locals:         0      16       0       0       0       0       0
  2414 ;;      Temps:          0       0       0       0       0       0       0
  2415 ;;      Totals:         0      16       0       0       0       0       0
  2416 ;;Total ram usage:       16 bytes
  2417 ;; Hardware stack levels used:    1
  2418 ;; Hardware stack levels required when called:    9
  2419 ;; This function calls:
  2420 ;;		_Lcd_Set_Cursor
  2421 ;;		_Lcd_Write_String
  2422 ;;		_eepromWrite
  2423 ;;		_sprintf
  2424 ;;		_stopMotor
  2425 ;; This function is called by:
  2426 ;;		_stateMachine
  2427 ;; This function uses a non-reentrant model
  2428 ;;
  2429                           
  2430                           	psect	text7
  2431  0046E4                     __ptext7:
  2432                           	callstack 0
  2433  0046E4                     _stopTimeSettingMenu:
  2434                           	callstack 19
  2435  0046E4                     
  2436                           ;fs_menu_controller.c: 544:     char textCursor2[16] = {0};
  2437  0046E4  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2438  0046E8  0E0F               	movlw	15
  2439  0046EA                     u7151:
  2440  0046EA  6ADE               	clrf	postinc2,c
  2441  0046EC  06E8               	decf	wreg,f,c
  2442  0046EE  E2FD               	bc	u7151
  2443  0046F0                     
  2444                           ;fs_menu_controller.c: 546:     stopMotor();
  2445  0046F0  EC3D  F02D         	call	_stopMotor	;wreg free
  2446  0046F4                     
  2447                           ;fs_menu_controller.c: 548:     if (menu_flags.menu_input_flag == 1)
  2448  0046F4  0101               	movlb	1	; () banked
  2449  0046F6  05B7               	decf	_menu_flags& (0+255),w,b
  2450  0046F8  A4D8               	btfss	status,2,c
  2451  0046FA  EF81  F023         	goto	u7161
  2452  0046FE  EF83  F023         	goto	u7160
  2453  004702                     u7161:
  2454  004702  EF88  F023         	goto	l5884
  2455  004706                     u7160:
  2456  004706                     
  2457                           ; BSR set to: 1
  2458                           ;fs_menu_controller.c: 549:     {;fs_menu_controller.c: 550:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2459  004706  0E00               	movlw	0
  2460  004708  6FB7               	movwf	_menu_flags& (0+255),b
  2461                           
  2462                           ;fs_menu_controller.c: 551:         menu_selected = SPEED_LIMIT_SETTING;
  2463  00470A  0E03               	movlw	3
  2464  00470C  0100               	movlb	0	; () banked
  2465  00470E  6FFA               	movwf	_menu_selected& (0+255),b
  2466  004710                     l5884:
  2467                           
  2468                           ;fs_menu_controller.c: 554:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2469  004710  0101               	movlb	1	; () banked
  2470  004712  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  2471  004714  A4D8               	btfss	status,2,c
  2472  004716  EF8F  F023         	goto	u7171
  2473  00471A  EF91  F023         	goto	u7170
  2474  00471E                     u7171:
  2475  00471E  EFA5  F023         	goto	l5894
  2476  004722                     u7170:
  2477  004722                     
  2478                           ; BSR set to: 1
  2479  004722  0EFA               	movlw	250
  2480  004724  0100               	movlb	0	; () banked
  2481  004726  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2482  004728  EF98  F023         	goto	u7181
  2483  00472C  EF9A  F023         	goto	u7180
  2484  004730                     u7181:
  2485  004730  EFA5  F023         	goto	l5894
  2486  004734                     u7180:
  2487  004734                     
  2488                           ; BSR set to: 0
  2489                           ;fs_menu_controller.c: 555:     {;fs_menu_controller.c: 556:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2490  004734  0E00               	movlw	0
  2491  004736  0101               	movlb	1	; () banked
  2492  004738  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  2493  00473A                     
  2494                           ; BSR set to: 1
  2495                           ;fs_menu_controller.c: 557:         menu_value.stop_time += 10;
  2496  00473A  0E0A               	movlw	10
  2497  00473C  0100               	movlb	0	; () banked
  2498  00473E  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2499  004740                     
  2500                           ; BSR set to: 0
  2501                           ;fs_menu_controller.c: 558:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2502  004740  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2503  004744  0E01               	movlw	1
  2504  004746  EC1B  F02E         	call	_eepromWrite
  2505  00474A                     l5894:
  2506                           
  2507                           ;fs_menu_controller.c: 561:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2508  00474A  0101               	movlb	1	; () banked
  2509  00474C  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  2510  00474E  A4D8               	btfss	status,2,c
  2511  004750  EFAC  F023         	goto	u7191
  2512  004754  EFAE  F023         	goto	u7190
  2513  004758                     u7191:
  2514  004758  EFC2  F023         	goto	l424
  2515  00475C                     u7190:
  2516  00475C                     
  2517                           ; BSR set to: 1
  2518  00475C  0E0A               	movlw	10
  2519  00475E  0100               	movlb	0	; () banked
  2520  004760  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2521  004762  EFB5  F023         	goto	u7201
  2522  004766  EFB7  F023         	goto	u7200
  2523  00476A                     u7201:
  2524  00476A  EFC2  F023         	goto	l424
  2525  00476E                     u7200:
  2526  00476E                     
  2527                           ; BSR set to: 0
  2528                           ;fs_menu_controller.c: 562:     {;fs_menu_controller.c: 563:          menu_flags.menu_de
      +                          crease_flag = 0;
  2529  00476E  0E00               	movlw	0
  2530  004770  0101               	movlb	1	; () banked
  2531  004772  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  2532  004774                     
  2533                           ; BSR set to: 1
  2534                           ;fs_menu_controller.c: 564:          menu_value.stop_time -= 10;
  2535  004774  0E0A               	movlw	10
  2536  004776  0100               	movlb	0	; () banked
  2537  004778  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2538  00477A                     
  2539                           ; BSR set to: 0
  2540                           ;fs_menu_controller.c: 565:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2541  00477A  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2542  00477E  0E01               	movlw	1
  2543  004780  EC1B  F02E         	call	_eepromWrite
  2544  004784                     l424:
  2545                           
  2546                           ;fs_menu_controller.c: 567:     Lcd_Set_Cursor(1,1);
  2547  004784  0E01               	movlw	1
  2548  004786  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2549  004788  0E01               	movlw	1
  2550  00478A  EC5E  F02B         	call	_Lcd_Set_Cursor
  2551  00478E                     
  2552                           ;fs_menu_controller.c: 568:     Lcd_Write_String("DURMA ZAMANI  ms");
  2553  00478E  0E79               	movlw	low STR_13
  2554  004790  6E05               	movwf	Lcd_Write_String@a^0,c
  2555  004792  0E06               	movlw	high STR_13
  2556  004794  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2557  004796  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  2558  00479A                     
  2559                           ;fs_menu_controller.c: 569:     Lcd_Set_Cursor(2,1);
  2560  00479A  0E01               	movlw	1
  2561  00479C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2562  00479E  0E02               	movlw	2
  2563  0047A0  EC5E  F02B         	call	_Lcd_Set_Cursor
  2564  0047A4                     
  2565                           ;fs_menu_controller.c: 570:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2566  0047A4  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2567  0047A6  0100               	movlb	0	; () banked
  2568  0047A8  6FCF               	movwf	sprintf@s& (0+255),b
  2569  0047AA  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2570  0047AC  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2571  0047AE  0E8A               	movlw	low STR_14
  2572  0047B0  6FD1               	movwf	sprintf@fmt& (0+255),b
  2573  0047B2  0E06               	movlw	high STR_14
  2574  0047B4  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2575  0047B6  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2576  0047BA  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2577  0047BC  EC46  F02C         	call	_sprintf	;wreg free
  2578  0047C0                     
  2579                           ;fs_menu_controller.c: 571:     Lcd_Write_String(textCursor2);
  2580  0047C0  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2581  0047C2  6E05               	movwf	Lcd_Write_String@a^0,c
  2582  0047C4  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2583  0047C6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2584  0047C8  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  2585  0047CC                     
  2586                           ;fs_menu_controller.c: 573:     if(timer_value.menu_login_delay == 100)
  2587  0047CC  0E64               	movlw	100
  2588  0047CE  0101               	movlb	1	; () banked
  2589  0047D0  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  2590  0047D2  A4D8               	btfss	status,2,c
  2591  0047D4  EFEE  F023         	goto	u7211
  2592  0047D8  EFF0  F023         	goto	u7210
  2593  0047DC                     u7211:
  2594  0047DC  EFF5  F023         	goto	l426
  2595  0047E0                     u7210:
  2596  0047E0                     
  2597                           ; BSR set to: 1
  2598                           ;fs_menu_controller.c: 574:     {;fs_menu_controller.c: 575:         timer_value.menu_lo
      +                          gin_delay = 0;
  2599  0047E0  0E00               	movlw	0
  2600  0047E2  6FB3               	movwf	(_timer_value+4)& (0+255),b
  2601                           
  2602                           ;fs_menu_controller.c: 576:         menu_selected = PAUSE_MENU;
  2603  0047E4  0E06               	movlw	6
  2604  0047E6  0100               	movlb	0	; () banked
  2605  0047E8  6FFA               	movwf	_menu_selected& (0+255),b
  2606  0047EA                     l426:
  2607  0047EA  0012               	return		;funcret
  2608  0047EC                     __end_of_stopTimeSettingMenu:
  2609                           	callstack 0
  2610                           
  2611 ;; *************** function _stopMenu *****************
  2612 ;; Defined at:
  2613 ;;		line 314 in file "fs_menu_controller.c"
  2614 ;; Parameters:    Size  Location     Type
  2615 ;;		None
  2616 ;; Auto vars:     Size  Location     Type
  2617 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2618 ;; Return value:  Size  Location     Type
  2619 ;;                  1    wreg      void 
  2620 ;; Registers used:
  2621 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2622 ;; Tracked objects:
  2623 ;;		On entry : 0/0
  2624 ;;		On exit  : 0/0
  2625 ;;		Unchanged: 0/0
  2626 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2627 ;;      Params:         0       0       0       0       0       0       0
  2628 ;;      Locals:         0      16       0       0       0       0       0
  2629 ;;      Temps:          0       0       0       0       0       0       0
  2630 ;;      Totals:         0      16       0       0       0       0       0
  2631 ;;Total ram usage:       16 bytes
  2632 ;; Hardware stack levels used:    1
  2633 ;; Hardware stack levels required when called:    9
  2634 ;; This function calls:
  2635 ;;		_Lcd_Set_Cursor
  2636 ;;		_Lcd_Write_String
  2637 ;;		_sprintf
  2638 ;;		_stopMotor
  2639 ;; This function is called by:
  2640 ;;		_stateMachine
  2641 ;; This function uses a non-reentrant model
  2642 ;;
  2643                           
  2644                           	psect	text8
  2645  004DA0                     __ptext8:
  2646                           	callstack 0
  2647  004DA0                     _stopMenu:
  2648                           	callstack 19
  2649  004DA0                     
  2650                           ;fs_menu_controller.c: 316:     char textCursor2[16] = {0};
  2651  004DA0  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2652  004DA4  0E0F               	movlw	15
  2653  004DA6                     u7291:
  2654  004DA6  6ADE               	clrf	postinc2,c
  2655  004DA8  06E8               	decf	wreg,f,c
  2656  004DAA  E2FD               	bc	u7291
  2657  004DAC                     
  2658                           ;fs_menu_controller.c: 318:     startIsClick = 0;
  2659  004DAC  0E00               	movlw	0
  2660  004DAE  0100               	movlb	0	; () banked
  2661  004DB0  6FFD               	movwf	_startIsClick& (0+255),b
  2662  004DB2                     
  2663                           ; BSR set to: 0
  2664                           ;fs_menu_controller.c: 319:     pauseIsClick = 0;
  2665  004DB2  0E00               	movlw	0
  2666  004DB4  6FFE               	movwf	_pauseIsClick& (0+255),b
  2667  004DB6                     
  2668                           ; BSR set to: 0
  2669                           ;fs_menu_controller.c: 320:     stopIsClick = 1;
  2670  004DB6  0E01               	movlw	1
  2671  004DB8  6FFC               	movwf	_stopIsClick& (0+255),b
  2672  004DBA                     
  2673                           ; BSR set to: 0
  2674                           ;fs_menu_controller.c: 322:     Lcd_Set_Cursor(1,1);
  2675  004DBA  0E01               	movlw	1
  2676  004DBC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2677  004DBE  0E01               	movlw	1
  2678  004DC0  EC5E  F02B         	call	_Lcd_Set_Cursor
  2679  004DC4                     
  2680                           ;fs_menu_controller.c: 323:     Lcd_Write_String("ZAMAN DOLDU     ");
  2681  004DC4  0E46               	movlw	low STR_3
  2682  004DC6  6E05               	movwf	Lcd_Write_String@a^0,c
  2683  004DC8  0E06               	movlw	high STR_3
  2684  004DCA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2685  004DCC  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  2686  004DD0                     
  2687                           ;fs_menu_controller.c: 325:     timer_value.remainingSecond = 0;
  2688  004DD0  0E00               	movlw	0
  2689  004DD2  0101               	movlb	1	; () banked
  2690  004DD4  6FB1               	movwf	(_timer_value+2)& (0+255),b
  2691  004DD6                     
  2692                           ; BSR set to: 1
  2693                           ;fs_menu_controller.c: 326:     timer_value.remainingMinute = 0;
  2694  004DD6  0E00               	movlw	0
  2695  004DD8  6FB2               	movwf	(_timer_value+3)& (0+255),b
  2696  004DDA                     
  2697                           ; BSR set to: 1
  2698                           ;fs_menu_controller.c: 328:     Lcd_Set_Cursor(2,1);
  2699  004DDA  0E01               	movlw	1
  2700  004DDC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2701  004DDE  0E02               	movlw	2
  2702  004DE0  EC5E  F02B         	call	_Lcd_Set_Cursor
  2703  004DE4                     
  2704                           ;fs_menu_controller.c: 329:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2705  004DE4  0EE1               	movlw	low stopMenu@textCursor2
  2706  004DE6  0100               	movlb	0	; () banked
  2707  004DE8  6FCF               	movwf	sprintf@s& (0+255),b
  2708  004DEA  0E00               	movlw	high stopMenu@textCursor2
  2709  004DEC  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2710  004DEE  0E9A               	movlw	low STR_4
  2711  004DF0  6FD1               	movwf	sprintf@fmt& (0+255),b
  2712  004DF2  0E06               	movlw	high STR_4
  2713  004DF4  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2714  004DF6  0101               	movlb	1	; () banked
  2715  004DF8  51B2               	movf	(_timer_value+3)& (0+255),w,b
  2716  004DFA  0100               	movlb	0	; () banked
  2717  004DFC  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2718  004DFE  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2719  004E00  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2720  004E02  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2721  004E04  C1B1  F0D5         	movff	_timer_value+2,?_sprintf+6
  2722  004E08  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2723  004E0A  EC46  F02C         	call	_sprintf	;wreg free
  2724  004E0E                     
  2725                           ;fs_menu_controller.c: 330:     Lcd_Write_String(textCursor2);
  2726  004E0E  0EE1               	movlw	low stopMenu@textCursor2
  2727  004E10  6E05               	movwf	Lcd_Write_String@a^0,c
  2728  004E12  0E00               	movlw	high stopMenu@textCursor2
  2729  004E14  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2730  004E16  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  2731  004E1A                     
  2732                           ;fs_menu_controller.c: 332:     if (menu_flags.menu_start_flag == 1)
  2733  004E1A  0101               	movlb	1	; () banked
  2734  004E1C  05B8               	decf	(_menu_flags+1)& (0+255),w,b
  2735  004E1E  A4D8               	btfss	status,2,c
  2736  004E20  EF14  F027         	goto	u7301
  2737  004E24  EF16  F027         	goto	u7300
  2738  004E28                     u7301:
  2739  004E28  EF26  F027         	goto	l5984
  2740  004E2C                     u7300:
  2741  004E2C                     
  2742                           ; BSR set to: 1
  2743                           ;fs_menu_controller.c: 333:     {;fs_menu_controller.c: 334:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2744  004E2C  0E00               	movlw	0
  2745  004E2E  6FB8               	movwf	(_menu_flags+1)& (0+255),b
  2746                           
  2747                           ;fs_menu_controller.c: 335:         menu_selected = START_MENU;
  2748  004E30  0E05               	movlw	5
  2749  004E32  0100               	movlb	0	; () banked
  2750  004E34  6FFA               	movwf	_menu_selected& (0+255),b
  2751                           
  2752                           ;fs_menu_controller.c: 337:         startIsClick = 1;
  2753  004E36  0E01               	movlw	1
  2754  004E38  6FFD               	movwf	_startIsClick& (0+255),b
  2755                           
  2756                           ;fs_menu_controller.c: 338:         pauseIsClick = 0;
  2757  004E3A  0E00               	movlw	0
  2758  004E3C  6FFE               	movwf	_pauseIsClick& (0+255),b
  2759                           
  2760                           ;fs_menu_controller.c: 339:         stopIsClick = 0;
  2761  004E3E  0E00               	movlw	0
  2762  004E40  6FFC               	movwf	_stopIsClick& (0+255),b
  2763                           
  2764                           ;fs_menu_controller.c: 340:         timer_value.second = 0;
  2765  004E42  0E00               	movlw	0
  2766  004E44  0101               	movlb	1	; () banked
  2767  004E46  6FAF               	movwf	_timer_value& (0+255),b
  2768                           
  2769                           ;fs_menu_controller.c: 341:         timer_value.minute = 0;
  2770  004E48  0E00               	movlw	0
  2771  004E4A  6FB0               	movwf	(_timer_value+1)& (0+255),b
  2772  004E4C                     l5984:
  2773                           
  2774                           ; BSR set to: 1
  2775                           ;fs_menu_controller.c: 344:     if ( timer_value.menu_login_delay == 100)
  2776  004E4C  0E64               	movlw	100
  2777  004E4E  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  2778  004E50  A4D8               	btfss	status,2,c
  2779  004E52  EF2D  F027         	goto	u7311
  2780  004E56  EF2F  F027         	goto	u7310
  2781  004E5A                     u7311:
  2782  004E5A  EF34  F027         	goto	l5988
  2783  004E5E                     u7310:
  2784  004E5E                     
  2785                           ; BSR set to: 1
  2786                           ;fs_menu_controller.c: 345:     {;fs_menu_controller.c: 346:         timer_value.menu_lo
      +                          gin_delay = 0;
  2787  004E5E  0E00               	movlw	0
  2788  004E60  6FB3               	movwf	(_timer_value+4)& (0+255),b
  2789                           
  2790                           ;fs_menu_controller.c: 347:         menu_selected = DRIVER_TIME_SETTING;
  2791  004E62  0E01               	movlw	1
  2792  004E64  0100               	movlb	0	; () banked
  2793  004E66  6FFA               	movwf	_menu_selected& (0+255),b
  2794  004E68                     l5988:
  2795                           
  2796                           ;fs_menu_controller.c: 349: stopMotor();
  2797  004E68  EC3D  F02D         	call	_stopMotor	;wreg free
  2798  004E6C  0012               	return		;funcret
  2799  004E6E                     __end_of_stopMenu:
  2800                           	callstack 0
  2801                           
  2802 ;; *************** function _startMenu *****************
  2803 ;; Defined at:
  2804 ;;		line 412 in file "fs_menu_controller.c"
  2805 ;; Parameters:    Size  Location     Type
  2806 ;;		None
  2807 ;; Auto vars:     Size  Location     Type
  2808 ;;		None
  2809 ;; Return value:  Size  Location     Type
  2810 ;;                  1    wreg      void 
  2811 ;; Registers used:
  2812 ;;		wreg, status,2
  2813 ;; Tracked objects:
  2814 ;;		On entry : 0/0
  2815 ;;		On exit  : 0/0
  2816 ;;		Unchanged: 0/0
  2817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2818 ;;      Params:         0       0       0       0       0       0       0
  2819 ;;      Locals:         0       0       0       0       0       0       0
  2820 ;;      Temps:          0       0       0       0       0       0       0
  2821 ;;      Totals:         0       0       0       0       0       0       0
  2822 ;;Total ram usage:        0 bytes
  2823 ;; Hardware stack levels used:    1
  2824 ;; Hardware stack levels required when called:    1
  2825 ;; This function calls:
  2826 ;;		Nothing
  2827 ;; This function is called by:
  2828 ;;		_stateMachine
  2829 ;; This function uses a non-reentrant model
  2830 ;;
  2831                           
  2832                           	psect	text9
  2833  005D36                     __ptext9:
  2834                           	callstack 0
  2835  005D36                     _startMenu:
  2836                           	callstack 27
  2837  005D36                     
  2838                           ;fs_menu_controller.c: 414:     timer_value.remainingMinute = menu_value.driver_time;
  2839  005D36  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  2840  005D3A                     
  2841                           ;fs_menu_controller.c: 415:     timer_value.remainingSecond = 0;
  2842  005D3A  0E00               	movlw	0
  2843  005D3C  0101               	movlb	1	; () banked
  2844  005D3E  6FB1               	movwf	(_timer_value+2)& (0+255),b
  2845                           
  2846                           ;fs_menu_controller.c: 416:     startIsClick = 1;
  2847  005D40  0E01               	movlw	1
  2848  005D42  0100               	movlb	0	; () banked
  2849  005D44  6FFD               	movwf	_startIsClick& (0+255),b
  2850                           
  2851                           ;fs_menu_controller.c: 417:     stopIsClick = 0;
  2852  005D46  0E00               	movlw	0
  2853  005D48  6FFC               	movwf	_stopIsClick& (0+255),b
  2854                           
  2855                           ;fs_menu_controller.c: 418:     menu_selected = MAIN_MENU;
  2856  005D4A  0E00               	movlw	0
  2857  005D4C  6FFA               	movwf	_menu_selected& (0+255),b
  2858  005D4E                     
  2859                           ; BSR set to: 0
  2860  005D4E  0012               	return		;funcret
  2861  005D50                     __end_of_startMenu:
  2862                           	callstack 0
  2863                           
  2864 ;; *************** function _speedLimitSettingMenu *****************
  2865 ;; Defined at:
  2866 ;;		line 499 in file "fs_menu_controller.c"
  2867 ;; Parameters:    Size  Location     Type
  2868 ;;		None
  2869 ;; Auto vars:     Size  Location     Type
  2870 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2871 ;; Return value:  Size  Location     Type
  2872 ;;                  1    wreg      void 
  2873 ;; Registers used:
  2874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2875 ;; Tracked objects:
  2876 ;;		On entry : 0/0
  2877 ;;		On exit  : 0/0
  2878 ;;		Unchanged: 0/0
  2879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2880 ;;      Params:         0       0       0       0       0       0       0
  2881 ;;      Locals:         0      16       0       0       0       0       0
  2882 ;;      Temps:          0       0       0       0       0       0       0
  2883 ;;      Totals:         0      16       0       0       0       0       0
  2884 ;;Total ram usage:       16 bytes
  2885 ;; Hardware stack levels used:    1
  2886 ;; Hardware stack levels required when called:    9
  2887 ;; This function calls:
  2888 ;;		_Lcd_Set_Cursor
  2889 ;;		_Lcd_Write_String
  2890 ;;		_eepromWrite
  2891 ;;		_sprintf
  2892 ;;		_stopMotor
  2893 ;; This function is called by:
  2894 ;;		_stateMachine
  2895 ;; This function uses a non-reentrant model
  2896 ;;
  2897                           
  2898                           	psect	text10
  2899  0048F2                     __ptext10:
  2900                           	callstack 0
  2901  0048F2                     _speedLimitSettingMenu:
  2902                           	callstack 19
  2903  0048F2                     
  2904                           ;fs_menu_controller.c: 501:     char textCursor2[16] = {0};
  2905  0048F2  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  2906  0048F6  0E0F               	movlw	15
  2907  0048F8                     u7221:
  2908  0048F8  6ADE               	clrf	postinc2,c
  2909  0048FA  06E8               	decf	wreg,f,c
  2910  0048FC  E2FD               	bc	u7221
  2911  0048FE                     
  2912                           ;fs_menu_controller.c: 502:     stopMotor();
  2913  0048FE  EC3D  F02D         	call	_stopMotor	;wreg free
  2914  004902                     
  2915                           ;fs_menu_controller.c: 504:     if (menu_flags.menu_input_flag == 1)
  2916  004902  0101               	movlb	1	; () banked
  2917  004904  05B7               	decf	_menu_flags& (0+255),w,b
  2918  004906  A4D8               	btfss	status,2,c
  2919  004908  EF88  F024         	goto	u7231
  2920  00490C  EF8A  F024         	goto	u7230
  2921  004910                     u7231:
  2922  004910  EF8F  F024         	goto	l5924
  2923  004914                     u7230:
  2924  004914                     
  2925                           ; BSR set to: 1
  2926                           ;fs_menu_controller.c: 505:     {;fs_menu_controller.c: 506:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2927  004914  0E00               	movlw	0
  2928  004916  6FB7               	movwf	_menu_flags& (0+255),b
  2929                           
  2930                           ;fs_menu_controller.c: 507:         menu_selected = DRIVER_TIME_SETTING;
  2931  004918  0E01               	movlw	1
  2932  00491A  0100               	movlb	0	; () banked
  2933  00491C  6FFA               	movwf	_menu_selected& (0+255),b
  2934  00491E                     l5924:
  2935                           
  2936                           ;fs_menu_controller.c: 510:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  2937  00491E  0101               	movlb	1	; () banked
  2938  004920  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  2939  004922  A4D8               	btfss	status,2,c
  2940  004924  EF96  F024         	goto	u7241
  2941  004928  EF98  F024         	goto	u7240
  2942  00492C                     u7241:
  2943  00492C  EFAB  F024         	goto	l5934
  2944  004930                     u7240:
  2945  004930                     
  2946                           ; BSR set to: 1
  2947  004930  0E05               	movlw	5
  2948  004932  0100               	movlb	0	; () banked
  2949  004934  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  2950  004936  EF9F  F024         	goto	u7251
  2951  00493A  EFA1  F024         	goto	u7250
  2952  00493E                     u7251:
  2953  00493E  EFAB  F024         	goto	l5934
  2954  004942                     u7250:
  2955  004942                     
  2956                           ; BSR set to: 0
  2957                           ;fs_menu_controller.c: 511:     {;fs_menu_controller.c: 512:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2958  004942  0E00               	movlw	0
  2959  004944  0101               	movlb	1	; () banked
  2960  004946  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  2961  004948                     
  2962                           ; BSR set to: 1
  2963                           ;fs_menu_controller.c: 513:         menu_value.speed_limit += 1;
  2964  004948  0100               	movlb	0	; () banked
  2965  00494A  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  2966  00494C                     
  2967                           ; BSR set to: 0
  2968                           ;fs_menu_controller.c: 514:         eepromWrite(0x02,menu_value.speed_limit);
  2969  00494C  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2970  004950  0E02               	movlw	2
  2971  004952  EC1B  F02E         	call	_eepromWrite
  2972  004956                     l5934:
  2973                           
  2974                           ;fs_menu_controller.c: 517:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  2975  004956  0101               	movlb	1	; () banked
  2976  004958  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  2977  00495A  A4D8               	btfss	status,2,c
  2978  00495C  EFB2  F024         	goto	u7261
  2979  004960  EFB4  F024         	goto	u7260
  2980  004964                     u7261:
  2981  004964  EFC7  F024         	goto	l5944
  2982  004968                     u7260:
  2983  004968                     
  2984                           ; BSR set to: 1
  2985  004968  0E01               	movlw	1
  2986  00496A  0100               	movlb	0	; () banked
  2987  00496C  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  2988  00496E  EFBB  F024         	goto	u7271
  2989  004972  EFBD  F024         	goto	u7270
  2990  004976                     u7271:
  2991  004976  EFC7  F024         	goto	l5944
  2992  00497A                     u7270:
  2993  00497A                     
  2994                           ; BSR set to: 0
  2995                           ;fs_menu_controller.c: 518:     {;fs_menu_controller.c: 519:          menu_flags.menu_de
      +                          crease_flag = 0;
  2996  00497A  0E00               	movlw	0
  2997  00497C  0101               	movlb	1	; () banked
  2998  00497E  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  2999  004980                     
  3000                           ; BSR set to: 1
  3001                           ;fs_menu_controller.c: 520:          menu_value.speed_limit -= 1;
  3002  004980  0100               	movlb	0	; () banked
  3003  004982  07F5               	decf	(_menu_value+2)& (0+255),f,b
  3004  004984                     
  3005                           ; BSR set to: 0
  3006                           ;fs_menu_controller.c: 521:          eepromWrite(0x02,menu_value.speed_limit);
  3007  004984  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3008  004988  0E02               	movlw	2
  3009  00498A  EC1B  F02E         	call	_eepromWrite
  3010  00498E                     l5944:
  3011                           
  3012                           ;fs_menu_controller.c: 523:     Lcd_Set_Cursor(1,1);
  3013  00498E  0E01               	movlw	1
  3014  004990  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3015  004992  0E01               	movlw	1
  3016  004994  EC5E  F02B         	call	_Lcd_Set_Cursor
  3017  004998                     
  3018                           ;fs_menu_controller.c: 524:     Lcd_Write_String("HIZ LiMiTi      ");
  3019  004998  0E24               	movlw	low STR_11
  3020  00499A  6E05               	movwf	Lcd_Write_String@a^0,c
  3021  00499C  0E06               	movlw	high STR_11
  3022  00499E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3023  0049A0  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3024  0049A4                     
  3025                           ;fs_menu_controller.c: 525:     Lcd_Set_Cursor(2,1);
  3026  0049A4  0E01               	movlw	1
  3027  0049A6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3028  0049A8  0E02               	movlw	2
  3029  0049AA  EC5E  F02B         	call	_Lcd_Set_Cursor
  3030  0049AE                     
  3031                           ;fs_menu_controller.c: 526:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  3032  0049AE  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3033  0049B0  0100               	movlb	0	; () banked
  3034  0049B2  6FCF               	movwf	sprintf@s& (0+255),b
  3035  0049B4  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3036  0049B6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3037  0049B8  0E01               	movlw	low STR_12
  3038  0049BA  6FD1               	movwf	sprintf@fmt& (0+255),b
  3039  0049BC  0E06               	movlw	high STR_12
  3040  0049BE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3041  0049C0  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  3042  0049C4  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3043  0049C6  EC46  F02C         	call	_sprintf	;wreg free
  3044  0049CA                     
  3045                           ;fs_menu_controller.c: 527:     Lcd_Write_String(textCursor2);
  3046  0049CA  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3047  0049CC  6E05               	movwf	Lcd_Write_String@a^0,c
  3048  0049CE  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3049  0049D0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3050  0049D2  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3051  0049D6                     
  3052                           ;fs_menu_controller.c: 529:     if(timer_value.menu_login_delay == 100)
  3053  0049D6  0E64               	movlw	100
  3054  0049D8  0101               	movlb	1	; () banked
  3055  0049DA  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3056  0049DC  A4D8               	btfss	status,2,c
  3057  0049DE  EFF3  F024         	goto	u7281
  3058  0049E2  EFF5  F024         	goto	u7280
  3059  0049E6                     u7281:
  3060  0049E6  EFFA  F024         	goto	l417
  3061  0049EA                     u7280:
  3062  0049EA                     
  3063                           ; BSR set to: 1
  3064                           ;fs_menu_controller.c: 530:     {;fs_menu_controller.c: 531:         timer_value.menu_lo
      +                          gin_delay = 0;
  3065  0049EA  0E00               	movlw	0
  3066  0049EC  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3067                           
  3068                           ;fs_menu_controller.c: 532:         menu_selected = PAUSE_MENU;
  3069  0049EE  0E06               	movlw	6
  3070  0049F0  0100               	movlb	0	; () banked
  3071  0049F2  6FFA               	movwf	_menu_selected& (0+255),b
  3072  0049F4                     l417:
  3073  0049F4  0012               	return		;funcret
  3074  0049F6                     __end_of_speedLimitSettingMenu:
  3075                           	callstack 0
  3076                           
  3077 ;; *************** function _secretMenu *****************
  3078 ;; Defined at:
  3079 ;;		line 427 in file "fs_menu_controller.c"
  3080 ;; Parameters:    Size  Location     Type
  3081 ;;		None
  3082 ;; Auto vars:     Size  Location     Type
  3083 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3084 ;; Return value:  Size  Location     Type
  3085 ;;                  1    wreg      void 
  3086 ;; Registers used:
  3087 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3088 ;; Tracked objects:
  3089 ;;		On entry : 0/0
  3090 ;;		On exit  : 0/0
  3091 ;;		Unchanged: 0/0
  3092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3093 ;;      Params:         0       0       0       0       0       0       0
  3094 ;;      Locals:         0      16       0       0       0       0       0
  3095 ;;      Temps:          0       0       0       0       0       0       0
  3096 ;;      Totals:         0      16       0       0       0       0       0
  3097 ;;Total ram usage:       16 bytes
  3098 ;; Hardware stack levels used:    1
  3099 ;; Hardware stack levels required when called:    9
  3100 ;; This function calls:
  3101 ;;		_Lcd_Set_Cursor
  3102 ;;		_Lcd_Write_String
  3103 ;;		___fladd
  3104 ;;		___flge
  3105 ;;		___flsub
  3106 ;;		_sprintf
  3107 ;;		_stopMotor
  3108 ;; This function is called by:
  3109 ;;		_stateMachine
  3110 ;; This function uses a non-reentrant model
  3111 ;;
  3112                           
  3113                           	psect	text11
  3114  00332A                     __ptext11:
  3115                           	callstack 0
  3116  00332A                     _secretMenu:
  3117                           	callstack 19
  3118  00332A                     
  3119                           ;fs_menu_controller.c: 429:     char textCursor2[16] = {0};
  3120  00332A  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  3121  00332E  0E0F               	movlw	15
  3122  003330                     u7411:
  3123  003330  6ADE               	clrf	postinc2,c
  3124  003332  06E8               	decf	wreg,f,c
  3125  003334  E2FD               	bc	u7411
  3126  003336                     
  3127                           ;fs_menu_controller.c: 431:     stopMotor();
  3128  003336  EC3D  F02D         	call	_stopMotor	;wreg free
  3129  00333A                     
  3130                           ;fs_menu_controller.c: 433:     if (menu_flags.menu_input_flag == 1)
  3131  00333A  0101               	movlb	1	; () banked
  3132  00333C  05B7               	decf	_menu_flags& (0+255),w,b
  3133  00333E  A4D8               	btfss	status,2,c
  3134  003340  EFA4  F019         	goto	u7421
  3135  003344  EFA6  F019         	goto	u7420
  3136  003348                     u7421:
  3137  003348  EFB4  F019         	goto	l6048
  3138  00334C                     u7420:
  3139  00334C                     
  3140                           ; BSR set to: 1
  3141                           ;fs_menu_controller.c: 434:     {;fs_menu_controller.c: 435:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3142  00334C  0E00               	movlw	0
  3143  00334E  6FB7               	movwf	_menu_flags& (0+255),b
  3144  003350                     
  3145                           ; BSR set to: 1
  3146                           ;fs_menu_controller.c: 436:         secretMenuCounter++;
  3147  003350  0100               	movlb	0	; () banked
  3148  003352  2BFB               	incf	_secretMenuCounter& (0+255),f,b
  3149  003354                     
  3150                           ; BSR set to: 0
  3151                           ;fs_menu_controller.c: 438:         if (secretMenuCounter >2)
  3152  003354  0E02               	movlw	2
  3153  003356  65FB               	cpfsgt	_secretMenuCounter& (0+255),b
  3154  003358  EFB0  F019         	goto	u7431
  3155  00335C  EFB2  F019         	goto	u7430
  3156  003360                     u7431:
  3157  003360  EFB4  F019         	goto	l6048
  3158  003364                     u7430:
  3159  003364                     
  3160                           ; BSR set to: 0
  3161                           ;fs_menu_controller.c: 439:         {;fs_menu_controller.c: 440:             secretMenuC
      +                          ounter = 1;
  3162  003364  0E01               	movlw	1
  3163  003366  6FFB               	movwf	_secretMenuCounter& (0+255),b
  3164  003368                     l6048:
  3165                           
  3166                           ;fs_menu_controller.c: 444:     if (secretMenuCounter == 1)
  3167  003368  0100               	movlb	0	; () banked
  3168  00336A  05FB               	decf	_secretMenuCounter& (0+255),w,b
  3169  00336C  A4D8               	btfss	status,2,c
  3170  00336E  EFBB  F019         	goto	u7441
  3171  003372  EFBD  F019         	goto	u7440
  3172  003376                     u7441:
  3173  003376  EF51  F01A         	goto	l6076
  3174  00337A                     u7440:
  3175  00337A                     
  3176                           ; BSR set to: 0
  3177                           ;fs_menu_controller.c: 445:     {;fs_menu_controller.c: 446:         Lcd_Set_Cursor(1,1)
      +                          ;
  3178  00337A  0E01               	movlw	1
  3179  00337C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3180  00337E  0E01               	movlw	1
  3181  003380  EC5E  F02B         	call	_Lcd_Set_Cursor
  3182  003384                     
  3183                           ;fs_menu_controller.c: 447:         Lcd_Write_String("PID PARAM       ");
  3184  003384  0E13               	movlw	low STR_7
  3185  003386  6E05               	movwf	Lcd_Write_String@a^0,c
  3186  003388  0E06               	movlw	high STR_7
  3187  00338A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3188  00338C  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3189  003390                     
  3190                           ;fs_menu_controller.c: 448:         Lcd_Set_Cursor(2,1);
  3191  003390  0E01               	movlw	1
  3192  003392  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3193  003394  0E02               	movlw	2
  3194  003396  EC5E  F02B         	call	_Lcd_Set_Cursor
  3195  00339A                     
  3196                           ;fs_menu_controller.c: 449:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3197  00339A  0EE1               	movlw	low secretMenu@textCursor2
  3198  00339C  0100               	movlb	0	; () banked
  3199  00339E  6FCF               	movwf	sprintf@s& (0+255),b
  3200  0033A0  0E00               	movlw	high secretMenu@textCursor2
  3201  0033A2  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3202  0033A4  0EB9               	movlw	low STR_8
  3203  0033A6  6FD1               	movwf	sprintf@fmt& (0+255),b
  3204  0033A8  0E06               	movlw	high STR_8
  3205  0033AA  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3206  0033AC  C1DF  F0D3         	movff	_KP@fs_speed_controller$F1636,?_sprintf+4
  3207  0033B0  C1E0  F0D4         	movff	_KP@fs_speed_controller$F1636+1,?_sprintf+5
  3208  0033B4  C1E1  F0D5         	movff	_KP@fs_speed_controller$F1636+2,?_sprintf+6
  3209  0033B8  C1E2  F0D6         	movff	_KP@fs_speed_controller$F1636+3,?_sprintf+7
  3210  0033BC  EC46  F02C         	call	_sprintf	;wreg free
  3211  0033C0                     
  3212                           ;fs_menu_controller.c: 450:         Lcd_Write_String(textCursor2);
  3213  0033C0  0EE1               	movlw	low secretMenu@textCursor2
  3214  0033C2  6E05               	movwf	Lcd_Write_String@a^0,c
  3215  0033C4  0E00               	movlw	high secretMenu@textCursor2
  3216  0033C6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3217  0033C8  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3218  0033CC                     
  3219                           ;fs_menu_controller.c: 452:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  3220  0033CC  0101               	movlb	1	; () banked
  3221  0033CE  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  3222  0033D0  A4D8               	btfss	status,2,c
  3223  0033D2  EFED  F019         	goto	u7451
  3224  0033D6  EFEF  F019         	goto	u7450
  3225  0033DA                     u7451:
  3226  0033DA  EF25  F01A         	goto	l6068
  3227  0033DE                     u7450:
  3228  0033DE                     
  3229                           ; BSR set to: 1
  3230  0033DE  C1DF  F035         	movff	_KP@fs_speed_controller$F1636,___flge@ff1
  3231  0033E2  C1E0  F036         	movff	_KP@fs_speed_controller$F1636+1,___flge@ff1+1
  3232  0033E6  C1E1  F037         	movff	_KP@fs_speed_controller$F1636+2,___flge@ff1+2
  3233  0033EA  C1E2  F038         	movff	_KP@fs_speed_controller$F1636+3,___flge@ff1+3
  3234  0033EE  0E00               	movlw	0
  3235  0033F0  6E39               	movwf	___flge@ff2^0,c
  3236  0033F2  0E00               	movlw	0
  3237  0033F4  6E3A               	movwf	(___flge@ff2+1)^0,c
  3238  0033F6  0E20               	movlw	32
  3239  0033F8  6E3B               	movwf	(___flge@ff2+2)^0,c
  3240  0033FA  0E40               	movlw	64
  3241  0033FC  6E3C               	movwf	(___flge@ff2+3)^0,c
  3242  0033FE  ECFB  F024         	call	___flge	;wreg free
  3243  003402  B0D8               	btfsc	status,0,c
  3244  003404  EF06  F01A         	goto	u7461
  3245  003408  EF08  F01A         	goto	u7460
  3246  00340C                     u7461:
  3247  00340C  EF25  F01A         	goto	l6068
  3248  003410                     u7460:
  3249  003410                     
  3250                           ;fs_menu_controller.c: 453:         {;fs_menu_controller.c: 454:             menu_flags.
      +                          menu_increase_flag = 0;
  3251  003410  0E00               	movlw	0
  3252  003412  0101               	movlb	1	; () banked
  3253  003414  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  3254  003416                     
  3255                           ; BSR set to: 1
  3256                           ;fs_menu_controller.c: 455:             KP += 0.1;
  3257  003416  C1DF  F035         	movff	_KP@fs_speed_controller$F1636,___fladd@b
  3258  00341A  C1E0  F036         	movff	_KP@fs_speed_controller$F1636+1,___fladd@b+1
  3259  00341E  C1E1  F037         	movff	_KP@fs_speed_controller$F1636+2,___fladd@b+2
  3260  003422  C1E2  F038         	movff	_KP@fs_speed_controller$F1636+3,___fladd@b+3
  3261  003426  0ECD               	movlw	205
  3262  003428  6E39               	movwf	___fladd@a^0,c
  3263  00342A  0ECC               	movlw	204
  3264  00342C  6E3A               	movwf	(___fladd@a+1)^0,c
  3265  00342E  0ECC               	movlw	204
  3266  003430  6E3B               	movwf	(___fladd@a+2)^0,c
  3267  003432  0E3D               	movlw	61
  3268  003434  6E3C               	movwf	(___fladd@a+3)^0,c
  3269  003436  EC6E  F010         	call	___fladd	;wreg free
  3270  00343A  C035  F1DF         	movff	?___fladd,_KP@fs_speed_controller$F1636
  3271  00343E  C036  F1E0         	movff	?___fladd+1,_KP@fs_speed_controller$F1636+1
  3272  003442  C037  F1E1         	movff	?___fladd+2,_KP@fs_speed_controller$F1636+2
  3273  003446  C038  F1E2         	movff	?___fladd+3,_KP@fs_speed_controller$F1636+3
  3274  00344A                     l6068:
  3275                           
  3276                           ;fs_menu_controller.c: 458:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  3277  00344A  0101               	movlb	1	; () banked
  3278  00344C  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  3279  00344E  A4D8               	btfss	status,2,c
  3280  003450  EF2C  F01A         	goto	u7471
  3281  003454  EF2E  F01A         	goto	u7470
  3282  003458                     u7471:
  3283  003458  EF51  F01A         	goto	l6076
  3284  00345C                     u7470:
  3285  00345C                     
  3286                           ; BSR set to: 1
  3287  00345C  BFE2               	btfsc	(_KP@fs_speed_controller$F1636+3)& (0+255),7,b
  3288  00345E  EF33  F01A         	goto	u7481
  3289  003462  EF35  F01A         	goto	u7480
  3290  003466                     u7481:
  3291  003466  EF51  F01A         	goto	l6076
  3292  00346A                     u7480:
  3293  00346A                     
  3294                           ; BSR set to: 1
  3295                           ;fs_menu_controller.c: 459:         {;fs_menu_controller.c: 460:             menu_flags.
      +                          menu_decrease_flag = 0;
  3296  00346A  0E00               	movlw	0
  3297  00346C  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  3298  00346E                     
  3299                           ; BSR set to: 1
  3300                           ;fs_menu_controller.c: 461:              KP -= 0.1;
  3301  00346E  C1DF  F045         	movff	_KP@fs_speed_controller$F1636,___flsub@b
  3302  003472  C1E0  F046         	movff	_KP@fs_speed_controller$F1636+1,___flsub@b+1
  3303  003476  C1E1  F047         	movff	_KP@fs_speed_controller$F1636+2,___flsub@b+2
  3304  00347A  C1E2  F048         	movff	_KP@fs_speed_controller$F1636+3,___flsub@b+3
  3305  00347E  0ECD               	movlw	205
  3306  003480  6E49               	movwf	___flsub@a^0,c
  3307  003482  0ECC               	movlw	204
  3308  003484  6E4A               	movwf	(___flsub@a+1)^0,c
  3309  003486  0ECC               	movlw	204
  3310  003488  6E4B               	movwf	(___flsub@a+2)^0,c
  3311  00348A  0E3D               	movlw	61
  3312  00348C  6E4C               	movwf	(___flsub@a+3)^0,c
  3313  00348E  EC98  F02C         	call	___flsub	;wreg free
  3314  003492  C045  F1DF         	movff	?___flsub,_KP@fs_speed_controller$F1636
  3315  003496  C046  F1E0         	movff	?___flsub+1,_KP@fs_speed_controller$F1636+1
  3316  00349A  C047  F1E1         	movff	?___flsub+2,_KP@fs_speed_controller$F1636+2
  3317  00349E  C048  F1E2         	movff	?___flsub+3,_KP@fs_speed_controller$F1636+3
  3318  0034A2                     l6076:
  3319                           
  3320                           ;fs_menu_controller.c: 465:     if (secretMenuCounter == 2)
  3321  0034A2  0E02               	movlw	2
  3322  0034A4  0100               	movlb	0	; () banked
  3323  0034A6  19FB               	xorwf	_secretMenuCounter& (0+255),w,b
  3324  0034A8  A4D8               	btfss	status,2,c
  3325  0034AA  EF59  F01A         	goto	u7491
  3326  0034AE  EF5B  F01A         	goto	u7490
  3327  0034B2                     u7491:
  3328  0034B2  EFEF  F01A         	goto	l6104
  3329  0034B6                     u7490:
  3330  0034B6                     
  3331                           ; BSR set to: 0
  3332                           ;fs_menu_controller.c: 466:     {;fs_menu_controller.c: 467:         Lcd_Set_Cursor(1,1)
      +                          ;
  3333  0034B6  0E01               	movlw	1
  3334  0034B8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3335  0034BA  0E01               	movlw	1
  3336  0034BC  EC5E  F02B         	call	_Lcd_Set_Cursor
  3337  0034C0                     
  3338                           ;fs_menu_controller.c: 468:         Lcd_Write_String("PID PARAM       ");
  3339  0034C0  0E13               	movlw	low STR_7
  3340  0034C2  6E05               	movwf	Lcd_Write_String@a^0,c
  3341  0034C4  0E06               	movlw	high STR_7
  3342  0034C6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3343  0034C8  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3344  0034CC                     
  3345                           ;fs_menu_controller.c: 469:         Lcd_Set_Cursor(2,1);
  3346  0034CC  0E01               	movlw	1
  3347  0034CE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3348  0034D0  0E02               	movlw	2
  3349  0034D2  EC5E  F02B         	call	_Lcd_Set_Cursor
  3350  0034D6                     
  3351                           ;fs_menu_controller.c: 470:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3352  0034D6  0EE1               	movlw	low secretMenu@textCursor2
  3353  0034D8  0100               	movlb	0	; () banked
  3354  0034DA  6FCF               	movwf	sprintf@s& (0+255),b
  3355  0034DC  0E00               	movlw	high secretMenu@textCursor2
  3356  0034DE  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3357  0034E0  0EC7               	movlw	low STR_10
  3358  0034E2  6FD1               	movwf	sprintf@fmt& (0+255),b
  3359  0034E4  0E06               	movlw	high STR_10
  3360  0034E6  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3361  0034E8  C1DB  F0D3         	movff	_KD@fs_speed_controller$F1637,?_sprintf+4
  3362  0034EC  C1DC  F0D4         	movff	_KD@fs_speed_controller$F1637+1,?_sprintf+5
  3363  0034F0  C1DD  F0D5         	movff	_KD@fs_speed_controller$F1637+2,?_sprintf+6
  3364  0034F4  C1DE  F0D6         	movff	_KD@fs_speed_controller$F1637+3,?_sprintf+7
  3365  0034F8  EC46  F02C         	call	_sprintf	;wreg free
  3366  0034FC                     
  3367                           ;fs_menu_controller.c: 471:         Lcd_Write_String(textCursor2);
  3368  0034FC  0EE1               	movlw	low secretMenu@textCursor2
  3369  0034FE  6E05               	movwf	Lcd_Write_String@a^0,c
  3370  003500  0E00               	movlw	high secretMenu@textCursor2
  3371  003502  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3372  003504  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3373  003508                     
  3374                           ;fs_menu_controller.c: 473:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3375  003508  0101               	movlb	1	; () banked
  3376  00350A  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  3377  00350C  A4D8               	btfss	status,2,c
  3378  00350E  EF8B  F01A         	goto	u7501
  3379  003512  EF8D  F01A         	goto	u7500
  3380  003516                     u7501:
  3381  003516  EFC3  F01A         	goto	l6096
  3382  00351A                     u7500:
  3383  00351A                     
  3384                           ; BSR set to: 1
  3385  00351A  C1DB  F035         	movff	_KD@fs_speed_controller$F1637,___flge@ff1
  3386  00351E  C1DC  F036         	movff	_KD@fs_speed_controller$F1637+1,___flge@ff1+1
  3387  003522  C1DD  F037         	movff	_KD@fs_speed_controller$F1637+2,___flge@ff1+2
  3388  003526  C1DE  F038         	movff	_KD@fs_speed_controller$F1637+3,___flge@ff1+3
  3389  00352A  0E00               	movlw	0
  3390  00352C  6E39               	movwf	___flge@ff2^0,c
  3391  00352E  0E00               	movlw	0
  3392  003530  6E3A               	movwf	(___flge@ff2+1)^0,c
  3393  003532  0E20               	movlw	32
  3394  003534  6E3B               	movwf	(___flge@ff2+2)^0,c
  3395  003536  0E40               	movlw	64
  3396  003538  6E3C               	movwf	(___flge@ff2+3)^0,c
  3397  00353A  ECFB  F024         	call	___flge	;wreg free
  3398  00353E  B0D8               	btfsc	status,0,c
  3399  003540  EFA4  F01A         	goto	u7511
  3400  003544  EFA6  F01A         	goto	u7510
  3401  003548                     u7511:
  3402  003548  EFC3  F01A         	goto	l6096
  3403  00354C                     u7510:
  3404  00354C                     
  3405                           ;fs_menu_controller.c: 474:         {;fs_menu_controller.c: 475:             menu_flags.
      +                          menu_increase_flag = 0;
  3406  00354C  0E00               	movlw	0
  3407  00354E  0101               	movlb	1	; () banked
  3408  003550  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  3409  003552                     
  3410                           ; BSR set to: 1
  3411                           ;fs_menu_controller.c: 476:             KD += 0.1;
  3412  003552  C1DB  F035         	movff	_KD@fs_speed_controller$F1637,___fladd@b
  3413  003556  C1DC  F036         	movff	_KD@fs_speed_controller$F1637+1,___fladd@b+1
  3414  00355A  C1DD  F037         	movff	_KD@fs_speed_controller$F1637+2,___fladd@b+2
  3415  00355E  C1DE  F038         	movff	_KD@fs_speed_controller$F1637+3,___fladd@b+3
  3416  003562  0ECD               	movlw	205
  3417  003564  6E39               	movwf	___fladd@a^0,c
  3418  003566  0ECC               	movlw	204
  3419  003568  6E3A               	movwf	(___fladd@a+1)^0,c
  3420  00356A  0ECC               	movlw	204
  3421  00356C  6E3B               	movwf	(___fladd@a+2)^0,c
  3422  00356E  0E3D               	movlw	61
  3423  003570  6E3C               	movwf	(___fladd@a+3)^0,c
  3424  003572  EC6E  F010         	call	___fladd	;wreg free
  3425  003576  C035  F1DB         	movff	?___fladd,_KD@fs_speed_controller$F1637
  3426  00357A  C036  F1DC         	movff	?___fladd+1,_KD@fs_speed_controller$F1637+1
  3427  00357E  C037  F1DD         	movff	?___fladd+2,_KD@fs_speed_controller$F1637+2
  3428  003582  C038  F1DE         	movff	?___fladd+3,_KD@fs_speed_controller$F1637+3
  3429  003586                     l6096:
  3430                           
  3431                           ;fs_menu_controller.c: 479:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3432  003586  0101               	movlb	1	; () banked
  3433  003588  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  3434  00358A  A4D8               	btfss	status,2,c
  3435  00358C  EFCA  F01A         	goto	u7521
  3436  003590  EFCC  F01A         	goto	u7520
  3437  003594                     u7521:
  3438  003594  EFEF  F01A         	goto	l6104
  3439  003598                     u7520:
  3440  003598                     
  3441                           ; BSR set to: 1
  3442  003598  BFDE               	btfsc	(_KD@fs_speed_controller$F1637+3)& (0+255),7,b
  3443  00359A  EFD1  F01A         	goto	u7531
  3444  00359E  EFD3  F01A         	goto	u7530
  3445  0035A2                     u7531:
  3446  0035A2  EFEF  F01A         	goto	l6104
  3447  0035A6                     u7530:
  3448  0035A6                     
  3449                           ; BSR set to: 1
  3450                           ;fs_menu_controller.c: 480:         {;fs_menu_controller.c: 481:             menu_flags.
      +                          menu_decrease_flag = 0;
  3451  0035A6  0E00               	movlw	0
  3452  0035A8  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  3453  0035AA                     
  3454                           ; BSR set to: 1
  3455                           ;fs_menu_controller.c: 482:              KD -= 0.1;
  3456  0035AA  C1DB  F045         	movff	_KD@fs_speed_controller$F1637,___flsub@b
  3457  0035AE  C1DC  F046         	movff	_KD@fs_speed_controller$F1637+1,___flsub@b+1
  3458  0035B2  C1DD  F047         	movff	_KD@fs_speed_controller$F1637+2,___flsub@b+2
  3459  0035B6  C1DE  F048         	movff	_KD@fs_speed_controller$F1637+3,___flsub@b+3
  3460  0035BA  0ECD               	movlw	205
  3461  0035BC  6E49               	movwf	___flsub@a^0,c
  3462  0035BE  0ECC               	movlw	204
  3463  0035C0  6E4A               	movwf	(___flsub@a+1)^0,c
  3464  0035C2  0ECC               	movlw	204
  3465  0035C4  6E4B               	movwf	(___flsub@a+2)^0,c
  3466  0035C6  0E3D               	movlw	61
  3467  0035C8  6E4C               	movwf	(___flsub@a+3)^0,c
  3468  0035CA  EC98  F02C         	call	___flsub	;wreg free
  3469  0035CE  C045  F1DB         	movff	?___flsub,_KD@fs_speed_controller$F1637
  3470  0035D2  C046  F1DC         	movff	?___flsub+1,_KD@fs_speed_controller$F1637+1
  3471  0035D6  C047  F1DD         	movff	?___flsub+2,_KD@fs_speed_controller$F1637+2
  3472  0035DA  C048  F1DE         	movff	?___flsub+3,_KD@fs_speed_controller$F1637+3
  3473  0035DE                     l6104:
  3474                           
  3475                           ;fs_menu_controller.c: 486:     if ( timer_value.menu_login_delay == 100)
  3476  0035DE  0E64               	movlw	100
  3477  0035E0  0101               	movlb	1	; () banked
  3478  0035E2  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3479  0035E4  A4D8               	btfss	status,2,c
  3480  0035E6  EFF7  F01A         	goto	u7541
  3481  0035EA  EFF9  F01A         	goto	u7540
  3482  0035EE                     u7541:
  3483  0035EE  EFFE  F01A         	goto	l408
  3484  0035F2                     u7540:
  3485  0035F2                     
  3486                           ; BSR set to: 1
  3487                           ;fs_menu_controller.c: 487:     {;fs_menu_controller.c: 488:         timer_value.menu_lo
      +                          gin_delay = 0;
  3488  0035F2  0E00               	movlw	0
  3489  0035F4  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3490                           
  3491                           ;fs_menu_controller.c: 489:         menu_selected = PAUSE_MENU;
  3492  0035F6  0E06               	movlw	6
  3493  0035F8  0100               	movlb	0	; () banked
  3494  0035FA  6FFA               	movwf	_menu_selected& (0+255),b
  3495  0035FC                     l408:
  3496  0035FC  0012               	return		;funcret
  3497  0035FE                     __end_of_secretMenu:
  3498                           	callstack 0
  3499                           
  3500 ;; *************** function _pauseMenu *****************
  3501 ;; Defined at:
  3502 ;;		line 359 in file "fs_menu_controller.c"
  3503 ;; Parameters:    Size  Location     Type
  3504 ;;		None
  3505 ;; Auto vars:     Size  Location     Type
  3506 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3507 ;; Return value:  Size  Location     Type
  3508 ;;                  1    wreg      void 
  3509 ;; Registers used:
  3510 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3511 ;; Tracked objects:
  3512 ;;		On entry : 0/0
  3513 ;;		On exit  : 0/0
  3514 ;;		Unchanged: 0/0
  3515 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3516 ;;      Params:         0       0       0       0       0       0       0
  3517 ;;      Locals:         0      16       0       0       0       0       0
  3518 ;;      Temps:          0       0       0       0       0       0       0
  3519 ;;      Totals:         0      16       0       0       0       0       0
  3520 ;;Total ram usage:       16 bytes
  3521 ;; Hardware stack levels used:    1
  3522 ;; Hardware stack levels required when called:    9
  3523 ;; This function calls:
  3524 ;;		_Lcd_Set_Cursor
  3525 ;;		_Lcd_Write_String
  3526 ;;		_sprintf
  3527 ;;		_stopMotor
  3528 ;; This function is called by:
  3529 ;;		_stateMachine
  3530 ;; This function uses a non-reentrant model
  3531 ;;
  3532                           
  3533                           	psect	text12
  3534  004366                     __ptext12:
  3535                           	callstack 0
  3536  004366                     _pauseMenu:
  3537                           	callstack 19
  3538  004366                     
  3539                           ;fs_menu_controller.c: 361:     char textCursor2[16] = {0};
  3540  004366  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3541  00436A  0E0F               	movlw	15
  3542  00436C                     u7321:
  3543  00436C  6ADE               	clrf	postinc2,c
  3544  00436E  06E8               	decf	wreg,f,c
  3545  004370  E2FD               	bc	u7321
  3546  004372                     
  3547                           ;fs_menu_controller.c: 363:     startIsClick = 0;
  3548  004372  0E00               	movlw	0
  3549  004374  0100               	movlb	0	; () banked
  3550  004376  6FFD               	movwf	_startIsClick& (0+255),b
  3551  004378                     
  3552                           ; BSR set to: 0
  3553                           ;fs_menu_controller.c: 367:     Lcd_Set_Cursor(1,1);
  3554  004378  0E01               	movlw	1
  3555  00437A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3556  00437C  0E01               	movlw	1
  3557  00437E  EC5E  F02B         	call	_Lcd_Set_Cursor
  3558  004382                     
  3559                           ;fs_menu_controller.c: 368:     Lcd_Write_String("HAREKET DURDU   ");
  3560  004382  0E57               	movlw	low STR_5
  3561  004384  6E05               	movwf	Lcd_Write_String@a^0,c
  3562  004386  0E06               	movlw	high STR_5
  3563  004388  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3564  00438A  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3565  00438E                     
  3566                           ;fs_menu_controller.c: 369:     Lcd_Set_Cursor(2,1);
  3567  00438E  0E01               	movlw	1
  3568  004390  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3569  004392  0E02               	movlw	2
  3570  004394  EC5E  F02B         	call	_Lcd_Set_Cursor
  3571  004398                     
  3572                           ;fs_menu_controller.c: 370:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3573  004398  0EE1               	movlw	low pauseMenu@textCursor2
  3574  00439A  0100               	movlb	0	; () banked
  3575  00439C  6FCF               	movwf	sprintf@s& (0+255),b
  3576  00439E  0E00               	movlw	high pauseMenu@textCursor2
  3577  0043A0  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3578  0043A2  0E9A               	movlw	low STR_4
  3579  0043A4  6FD1               	movwf	sprintf@fmt& (0+255),b
  3580  0043A6  0E06               	movlw	high STR_4
  3581  0043A8  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3582  0043AA  0101               	movlb	1	; () banked
  3583  0043AC  51B2               	movf	(_timer_value+3)& (0+255),w,b
  3584  0043AE  0100               	movlb	0	; () banked
  3585  0043B0  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3586  0043B2  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3587  0043B4  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3588  0043B6  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3589  0043B8  C1B1  F0D5         	movff	_timer_value+2,?_sprintf+6
  3590  0043BC  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3591  0043BE  EC46  F02C         	call	_sprintf	;wreg free
  3592  0043C2                     
  3593                           ;fs_menu_controller.c: 371:     Lcd_Write_String(textCursor2);
  3594  0043C2  0EE1               	movlw	low pauseMenu@textCursor2
  3595  0043C4  6E05               	movwf	Lcd_Write_String@a^0,c
  3596  0043C6  0E00               	movlw	high pauseMenu@textCursor2
  3597  0043C8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3598  0043CA  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3599  0043CE                     
  3600                           ;fs_menu_controller.c: 373:     if (menu_flags.menu_start_flag == 1)
  3601  0043CE  0101               	movlb	1	; () banked
  3602  0043D0  05B8               	decf	(_menu_flags+1)& (0+255),w,b
  3603  0043D2  A4D8               	btfss	status,2,c
  3604  0043D4  EFEE  F021         	goto	u7331
  3605  0043D8  EFF0  F021         	goto	u7330
  3606  0043DC                     u7331:
  3607  0043DC  EFFB  F021         	goto	l387
  3608  0043E0                     u7330:
  3609  0043E0                     
  3610                           ; BSR set to: 1
  3611                           ;fs_menu_controller.c: 374:     {;fs_menu_controller.c: 375:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3612  0043E0  0E00               	movlw	0
  3613  0043E2  6FB8               	movwf	(_menu_flags+1)& (0+255),b
  3614                           
  3615                           ;fs_menu_controller.c: 376:         menu_selected = MAIN_MENU;
  3616  0043E4  0E00               	movlw	0
  3617  0043E6  0100               	movlb	0	; () banked
  3618  0043E8  6FFA               	movwf	_menu_selected& (0+255),b
  3619                           
  3620                           ;fs_menu_controller.c: 378:         startIsClick = 1;
  3621  0043EA  0E01               	movlw	1
  3622  0043EC  6FFD               	movwf	_startIsClick& (0+255),b
  3623                           
  3624                           ;fs_menu_controller.c: 379:         pauseIsClick = 0;
  3625  0043EE  0E00               	movlw	0
  3626  0043F0  6FFE               	movwf	_pauseIsClick& (0+255),b
  3627                           
  3628                           ;fs_menu_controller.c: 380:         stopIsClick = 0;
  3629  0043F2  0E00               	movlw	0
  3630  0043F4  6FFC               	movwf	_stopIsClick& (0+255),b
  3631  0043F6                     l387:
  3632                           
  3633                           ;fs_menu_controller.c: 383:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3634  0043F6  0100               	movlb	0	; () banked
  3635  0043F8  51FD               	movf	_startIsClick& (0+255),w,b
  3636  0043FA  A4D8               	btfss	status,2,c
  3637  0043FC  EF02  F022         	goto	u7341
  3638  004400  EF04  F022         	goto	u7340
  3639  004404                     u7341:
  3640  004404  EF26  F022         	goto	l6022
  3641  004408                     u7340:
  3642  004408                     
  3643                           ; BSR set to: 0
  3644  004408  51FE               	movf	_pauseIsClick& (0+255),w,b
  3645  00440A  A4D8               	btfss	status,2,c
  3646  00440C  EF0A  F022         	goto	u7351
  3647  004410  EF0C  F022         	goto	u7350
  3648  004414                     u7351:
  3649  004414  EF26  F022         	goto	l6022
  3650  004418                     u7350:
  3651  004418                     
  3652                           ; BSR set to: 0
  3653  004418  05FC               	decf	_stopIsClick& (0+255),w,b
  3654  00441A  A4D8               	btfss	status,2,c
  3655  00441C  EF12  F022         	goto	u7361
  3656  004420  EF14  F022         	goto	u7360
  3657  004424                     u7361:
  3658  004424  EF26  F022         	goto	l6022
  3659  004428                     u7360:
  3660  004428                     
  3661                           ; BSR set to: 0
  3662  004428  0E06               	movlw	6
  3663  00442A  19FA               	xorwf	_menu_selected& (0+255),w,b
  3664  00442C  A4D8               	btfss	status,2,c
  3665  00442E  EF1B  F022         	goto	u7371
  3666  004432  EF1D  F022         	goto	u7370
  3667  004436                     u7371:
  3668  004436  EF26  F022         	goto	l6022
  3669  00443A                     u7370:
  3670  00443A                     
  3671                           ; BSR set to: 0
  3672                           ;fs_menu_controller.c: 384:     {;fs_menu_controller.c: 385:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3673  00443A  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  3674  00443E                     
  3675                           ; BSR set to: 0
  3676                           ;fs_menu_controller.c: 386:          timer_value.remainingSecond = 0;
  3677  00443E  0E00               	movlw	0
  3678  004440  0101               	movlb	1	; () banked
  3679  004442  6FB1               	movwf	(_timer_value+2)& (0+255),b
  3680                           
  3681                           ;fs_menu_controller.c: 387:          timer_value.second = 0;
  3682  004444  0E00               	movlw	0
  3683  004446  6FAF               	movwf	_timer_value& (0+255),b
  3684                           
  3685                           ;fs_menu_controller.c: 388:          timer_value.minute = 0;
  3686  004448  0E00               	movlw	0
  3687  00444A  6FB0               	movwf	(_timer_value+1)& (0+255),b
  3688  00444C                     l6022:
  3689                           
  3690                           ;fs_menu_controller.c: 391:     if ( timer_value.menu_login_delay == 100)
  3691  00444C  0E64               	movlw	100
  3692  00444E  0101               	movlb	1	; () banked
  3693  004450  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3694  004452  A4D8               	btfss	status,2,c
  3695  004454  EF2E  F022         	goto	u7381
  3696  004458  EF30  F022         	goto	u7380
  3697  00445C                     u7381:
  3698  00445C  EF35  F022         	goto	l6026
  3699  004460                     u7380:
  3700  004460                     
  3701                           ; BSR set to: 1
  3702                           ;fs_menu_controller.c: 392:     {;fs_menu_controller.c: 393:         timer_value.menu_lo
      +                          gin_delay = 0;
  3703  004460  0E00               	movlw	0
  3704  004462  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3705                           
  3706                           ;fs_menu_controller.c: 394:         menu_selected = DRIVER_TIME_SETTING;
  3707  004464  0E01               	movlw	1
  3708  004466  0100               	movlb	0	; () banked
  3709  004468  6FFA               	movwf	_menu_selected& (0+255),b
  3710  00446A                     l6026:
  3711                           
  3712                           ;fs_menu_controller.c: 397:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3713  00446A  0101               	movlb	1	; () banked
  3714  00446C  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  3715  00446E  A4D8               	btfss	status,2,c
  3716  004470  EF3C  F022         	goto	u7391
  3717  004474  EF3E  F022         	goto	u7390
  3718  004478                     u7391:
  3719  004478  EF4B  F022         	goto	l6032
  3720  00447C                     u7390:
  3721  00447C                     
  3722                           ; BSR set to: 1
  3723  00447C  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  3724  00447E  A4D8               	btfss	status,2,c
  3725  004480  EF44  F022         	goto	u7401
  3726  004484  EF46  F022         	goto	u7400
  3727  004488                     u7401:
  3728  004488  EF4B  F022         	goto	l6032
  3729  00448C                     u7400:
  3730  00448C                     
  3731                           ; BSR set to: 1
  3732                           ;fs_menu_controller.c: 398:     {;fs_menu_controller.c: 399:         menu_selected = SEC
      +                          RET_MENU;
  3733  00448C  0E08               	movlw	8
  3734  00448E  0100               	movlb	0	; () banked
  3735  004490  6FFA               	movwf	_menu_selected& (0+255),b
  3736                           
  3737                           ;fs_menu_controller.c: 400:         secretMenuCounter = 1;
  3738  004492  0E01               	movlw	1
  3739  004494  6FFB               	movwf	_secretMenuCounter& (0+255),b
  3740  004496                     l6032:
  3741                           
  3742                           ;fs_menu_controller.c: 402:     stopMotor();
  3743  004496  EC3D  F02D         	call	_stopMotor	;wreg free
  3744  00449A  0012               	return		;funcret
  3745  00449C                     __end_of_pauseMenu:
  3746                           	callstack 0
  3747                           
  3748 ;; *************** function _mainMenu *****************
  3749 ;; Defined at:
  3750 ;;		line 256 in file "fs_menu_controller.c"
  3751 ;; Parameters:    Size  Location     Type
  3752 ;;		None
  3753 ;; Auto vars:     Size  Location     Type
  3754 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3755 ;; Return value:  Size  Location     Type
  3756 ;;                  1    wreg      void 
  3757 ;; Registers used:
  3758 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3759 ;; Tracked objects:
  3760 ;;		On entry : 0/0
  3761 ;;		On exit  : 0/0
  3762 ;;		Unchanged: 0/0
  3763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3764 ;;      Params:         0       0       0       0       0       0       0
  3765 ;;      Locals:         0      16       0       0       0       0       0
  3766 ;;      Temps:          0       0       0       0       0       0       0
  3767 ;;      Totals:         0      16       0       0       0       0       0
  3768 ;;Total ram usage:       16 bytes
  3769 ;; Hardware stack levels used:    1
  3770 ;; Hardware stack levels required when called:    9
  3771 ;; This function calls:
  3772 ;;		_Lcd_Set_Cursor
  3773 ;;		_Lcd_Write_String
  3774 ;;		_sprintf
  3775 ;;		_startMotor
  3776 ;; This function is called by:
  3777 ;;		_stateMachine
  3778 ;; This function uses a non-reentrant model
  3779 ;;
  3780                           
  3781                           	psect	text13
  3782  003D52                     __ptext13:
  3783                           	callstack 0
  3784  003D52                     _mainMenu:
  3785                           	callstack 19
  3786  003D52                     
  3787                           ;fs_menu_controller.c: 258:     char textCursor2[16] = {0};
  3788  003D52  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  3789  003D56  0E0F               	movlw	15
  3790  003D58                     u6931:
  3791  003D58  6ADE               	clrf	postinc2,c
  3792  003D5A  06E8               	decf	wreg,f,c
  3793  003D5C  E2FD               	bc	u6931
  3794  003D5E                     
  3795                           ;fs_menu_controller.c: 260:     Lcd_Set_Cursor(1,1);
  3796  003D5E  0E01               	movlw	1
  3797  003D60  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3798  003D62  0E01               	movlw	1
  3799  003D64  EC5E  F02B         	call	_Lcd_Set_Cursor
  3800  003D68                     
  3801                           ;fs_menu_controller.c: 261:     Lcd_Write_String("KALAN ZAMAN     ");
  3802  003D68  0E35               	movlw	low STR_1
  3803  003D6A  6E05               	movwf	Lcd_Write_String@a^0,c
  3804  003D6C  0E06               	movlw	high STR_1
  3805  003D6E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3806  003D70  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3807  003D74                     
  3808                           ;fs_menu_controller.c: 262:     Lcd_Set_Cursor(2,1);
  3809  003D74  0E01               	movlw	1
  3810  003D76  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3811  003D78  0E02               	movlw	2
  3812  003D7A  EC5E  F02B         	call	_Lcd_Set_Cursor
  3813  003D7E                     
  3814                           ;fs_menu_controller.c: 263:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  3815  003D7E  0EE1               	movlw	low mainMenu@textCursor2
  3816  003D80  0100               	movlb	0	; () banked
  3817  003D82  6FCF               	movwf	sprintf@s& (0+255),b
  3818  003D84  0E00               	movlw	high mainMenu@textCursor2
  3819  003D86  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3820  003D88  0EAA               	movlw	low STR_2
  3821  003D8A  6FD1               	movwf	sprintf@fmt& (0+255),b
  3822  003D8C  0E06               	movlw	high STR_2
  3823  003D8E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3824  003D90  0101               	movlb	1	; () banked
  3825  003D92  51B2               	movf	(_timer_value+3)& (0+255),w,b
  3826  003D94  0100               	movlb	0	; () banked
  3827  003D96  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3828  003D98  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3829  003D9A  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3830  003D9C  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3831  003D9E  C1B1  F0D5         	movff	_timer_value+2,?_sprintf+6
  3832  003DA2  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3833  003DA4  EC46  F02C         	call	_sprintf	;wreg free
  3834  003DA8                     
  3835                           ;fs_menu_controller.c: 264:     Lcd_Write_String(textCursor2);
  3836  003DA8  0EE1               	movlw	low mainMenu@textCursor2
  3837  003DAA  6E05               	movwf	Lcd_Write_String@a^0,c
  3838  003DAC  0E00               	movlw	high mainMenu@textCursor2
  3839  003DAE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3840  003DB0  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  3841  003DB4                     
  3842                           ;fs_menu_controller.c: 266:     if ( timer_value.menu_login_delay == 100)
  3843  003DB4  0E64               	movlw	100
  3844  003DB6  0101               	movlb	1	; () banked
  3845  003DB8  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  3846  003DBA  A4D8               	btfss	status,2,c
  3847  003DBC  EFE2  F01E         	goto	u6941
  3848  003DC0  EFE4  F01E         	goto	u6940
  3849  003DC4                     u6941:
  3850  003DC4  EFE9  F01E         	goto	l5768
  3851  003DC8                     u6940:
  3852  003DC8                     
  3853                           ; BSR set to: 1
  3854                           ;fs_menu_controller.c: 267:     {;fs_menu_controller.c: 268:         timer_value.menu_lo
      +                          gin_delay = 0;
  3855  003DC8  0E00               	movlw	0
  3856  003DCA  6FB3               	movwf	(_timer_value+4)& (0+255),b
  3857                           
  3858                           ;fs_menu_controller.c: 269:         menu_selected = DRIVER_TIME_SETTING;
  3859  003DCC  0E01               	movlw	1
  3860  003DCE  0100               	movlb	0	; () banked
  3861  003DD0  6FFA               	movwf	_menu_selected& (0+255),b
  3862  003DD2                     l5768:
  3863                           
  3864                           ;fs_menu_controller.c: 272:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  3865  003DD2  0101               	movlb	1	; () banked
  3866  003DD4  51B2               	movf	(_timer_value+3)& (0+255),w,b
  3867  003DD6  0A80               	xorlw	128
  3868  003DD8  0F7F               	addlw	-129
  3869  003DDA  B0D8               	btfsc	status,0,c
  3870  003DDC  EFF2  F01E         	goto	u6951
  3871  003DE0  EFF4  F01E         	goto	u6950
  3872  003DE4                     u6951:
  3873  003DE4  EF02  F01F         	goto	l371
  3874  003DE8                     u6950:
  3875  003DE8                     
  3876                           ; BSR set to: 1
  3877  003DE8  51B1               	movf	(_timer_value+2)& (0+255),w,b
  3878  003DEA  A4D8               	btfss	status,2,c
  3879  003DEC  EFFA  F01E         	goto	u6961
  3880  003DF0  EFFC  F01E         	goto	u6960
  3881  003DF4                     u6961:
  3882  003DF4  EF02  F01F         	goto	l371
  3883  003DF8                     u6960:
  3884  003DF8                     
  3885                           ; BSR set to: 1
  3886                           ;fs_menu_controller.c: 273:     {;fs_menu_controller.c: 274:             menu_selected =
      +                           STOP_MENU;
  3887  003DF8  0E04               	movlw	4
  3888  003DFA  0100               	movlb	0	; () banked
  3889  003DFC  6FFA               	movwf	_menu_selected& (0+255),b
  3890                           
  3891                           ;fs_menu_controller.c: 275:             timer_value.minute = 0;
  3892  003DFE  0E00               	movlw	0
  3893  003E00  0101               	movlb	1	; () banked
  3894  003E02  6FB0               	movwf	(_timer_value+1)& (0+255),b
  3895  003E04                     l371:
  3896                           
  3897                           ; BSR set to: 1
  3898                           ;fs_menu_controller.c: 278:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  3899  003E04  0100               	movlb	0	; () banked
  3900  003E06  51FD               	movf	_startIsClick& (0+255),w,b
  3901  003E08  A4D8               	btfss	status,2,c
  3902  003E0A  EF09  F01F         	goto	u6971
  3903  003E0E  EF0B  F01F         	goto	u6970
  3904  003E12                     u6971:
  3905  003E12  EF2A  F01F         	goto	l372
  3906  003E16                     u6970:
  3907  003E16                     
  3908                           ; BSR set to: 0
  3909  003E16  05FE               	decf	_pauseIsClick& (0+255),w,b
  3910  003E18  A4D8               	btfss	status,2,c
  3911  003E1A  EF11  F01F         	goto	u6981
  3912  003E1E  EF13  F01F         	goto	u6980
  3913  003E22                     u6981:
  3914  003E22  EF2A  F01F         	goto	l372
  3915  003E26                     u6980:
  3916  003E26                     
  3917                           ; BSR set to: 0
  3918  003E26  51FC               	movf	_stopIsClick& (0+255),w,b
  3919  003E28  A4D8               	btfss	status,2,c
  3920  003E2A  EF19  F01F         	goto	u6991
  3921  003E2E  EF1B  F01F         	goto	u6990
  3922  003E32                     u6991:
  3923  003E32  EF2A  F01F         	goto	l372
  3924  003E36                     u6990:
  3925  003E36                     
  3926                           ; BSR set to: 0
  3927  003E36  51FA               	movf	_menu_selected& (0+255),w,b
  3928  003E38  A4D8               	btfss	status,2,c
  3929  003E3A  EF21  F01F         	goto	u7001
  3930  003E3E  EF23  F01F         	goto	u7000
  3931  003E42                     u7001:
  3932  003E42  EF2A  F01F         	goto	l372
  3933  003E46                     u7000:
  3934  003E46                     
  3935                           ; BSR set to: 0
  3936                           ;fs_menu_controller.c: 279:     {;fs_menu_controller.c: 280:         menu_selected = PAU
      +                          SE_MENU;
  3937  003E46  0E06               	movlw	6
  3938  003E48  6FFA               	movwf	_menu_selected& (0+255),b
  3939  003E4A                     
  3940                           ; BSR set to: 0
  3941                           ;fs_menu_controller.c: 281:         LATDbits.LATD5 = 0;
  3942  003E4A  9A8C               	bcf	140,5,c	;volatile
  3943  003E4C                     
  3944                           ; BSR set to: 0
  3945                           ;fs_menu_controller.c: 282:         LATCbits.LATC5 = 0;
  3946  003E4C  9A8B               	bcf	139,5,c	;volatile
  3947  003E4E                     
  3948                           ; BSR set to: 0
  3949                           ;fs_menu_controller.c: 283:         LATCbits.LATC4 = 0;
  3950  003E4E  988B               	bcf	139,4,c	;volatile
  3951                           
  3952                           ;fs_menu_controller.c: 284:         startIsClick = 0;
  3953  003E50  0E00               	movlw	0
  3954  003E52  6FFD               	movwf	_startIsClick& (0+255),b
  3955  003E54                     l372:
  3956                           
  3957                           ; BSR set to: 0
  3958                           ;fs_menu_controller.c: 287:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  3959  003E54  51FD               	movf	_startIsClick& (0+255),w,b
  3960  003E56  A4D8               	btfss	status,2,c
  3961  003E58  EF30  F01F         	goto	u7011
  3962  003E5C  EF32  F01F         	goto	u7010
  3963  003E60                     u7011:
  3964  003E60  EF56  F01F         	goto	l5804
  3965  003E64                     u7010:
  3966  003E64                     
  3967                           ; BSR set to: 0
  3968  003E64  51FE               	movf	_pauseIsClick& (0+255),w,b
  3969  003E66  A4D8               	btfss	status,2,c
  3970  003E68  EF38  F01F         	goto	u7021
  3971  003E6C  EF3A  F01F         	goto	u7020
  3972  003E70                     u7021:
  3973  003E70  EF56  F01F         	goto	l5804
  3974  003E74                     u7020:
  3975  003E74                     
  3976                           ; BSR set to: 0
  3977  003E74  05FC               	decf	_stopIsClick& (0+255),w,b
  3978  003E76  A4D8               	btfss	status,2,c
  3979  003E78  EF40  F01F         	goto	u7031
  3980  003E7C  EF42  F01F         	goto	u7030
  3981  003E80                     u7031:
  3982  003E80  EF56  F01F         	goto	l5804
  3983  003E84                     u7030:
  3984  003E84                     
  3985                           ; BSR set to: 0
  3986  003E84  51FA               	movf	_menu_selected& (0+255),w,b
  3987  003E86  A4D8               	btfss	status,2,c
  3988  003E88  EF48  F01F         	goto	u7041
  3989  003E8C  EF4A  F01F         	goto	u7040
  3990  003E90                     u7041:
  3991  003E90  EF56  F01F         	goto	l5804
  3992  003E94                     u7040:
  3993  003E94                     
  3994                           ; BSR set to: 0
  3995                           ;fs_menu_controller.c: 288:     {;fs_menu_controller.c: 289:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3996  003E94  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  3997  003E98                     
  3998                           ; BSR set to: 0
  3999                           ;fs_menu_controller.c: 290:          timer_value.remainingSecond = 0;
  4000  003E98  0E00               	movlw	0
  4001  003E9A  0101               	movlb	1	; () banked
  4002  003E9C  6FB1               	movwf	(_timer_value+2)& (0+255),b
  4003                           
  4004                           ;fs_menu_controller.c: 291:          timer_value.second = 0;
  4005  003E9E  0E00               	movlw	0
  4006  003EA0  6FAF               	movwf	_timer_value& (0+255),b
  4007                           
  4008                           ;fs_menu_controller.c: 292:          timer_value.minute = 0;
  4009  003EA2  0E00               	movlw	0
  4010  003EA4  6FB0               	movwf	(_timer_value+1)& (0+255),b
  4011  003EA6                     
  4012                           ; BSR set to: 1
  4013                           ;fs_menu_controller.c: 293:          LATDbits.LATD5 = 0;
  4014  003EA6  9A8C               	bcf	140,5,c	;volatile
  4015  003EA8                     
  4016                           ; BSR set to: 1
  4017                           ;fs_menu_controller.c: 294:          LATCbits.LATC5 = 0;
  4018  003EA8  9A8B               	bcf	139,5,c	;volatile
  4019  003EAA                     
  4020                           ; BSR set to: 1
  4021                           ;fs_menu_controller.c: 295:          LATCbits.LATC4 = 0;
  4022  003EAA  988B               	bcf	139,4,c	;volatile
  4023  003EAC                     l5804:
  4024                           
  4025                           ;fs_menu_controller.c: 298:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  4026  003EAC  0100               	movlb	0	; () banked
  4027  003EAE  05FD               	decf	_startIsClick& (0+255),w,b
  4028  003EB0  A4D8               	btfss	status,2,c
  4029  003EB2  EF5D  F01F         	goto	u7051
  4030  003EB6  EF5F  F01F         	goto	u7050
  4031  003EBA                     u7051:
  4032  003EBA  EF74  F01F         	goto	l375
  4033  003EBE                     u7050:
  4034  003EBE                     
  4035                           ; BSR set to: 0
  4036  003EBE  51FE               	movf	_pauseIsClick& (0+255),w,b
  4037  003EC0  A4D8               	btfss	status,2,c
  4038  003EC2  EF65  F01F         	goto	u7061
  4039  003EC6  EF67  F01F         	goto	u7060
  4040  003ECA                     u7061:
  4041  003ECA  EF74  F01F         	goto	l375
  4042  003ECE                     u7060:
  4043  003ECE                     
  4044                           ; BSR set to: 0
  4045  003ECE  51FC               	movf	_stopIsClick& (0+255),w,b
  4046  003ED0  A4D8               	btfss	status,2,c
  4047  003ED2  EF6D  F01F         	goto	u7071
  4048  003ED6  EF6F  F01F         	goto	u7070
  4049  003EDA                     u7071:
  4050  003EDA  EF74  F01F         	goto	l375
  4051  003EDE                     u7070:
  4052  003EDE                     
  4053                           ; BSR set to: 0
  4054                           ;fs_menu_controller.c: 299:     {;fs_menu_controller.c: 300:         startMotor();
  4055  003EDE  ECCB  F02D         	call	_startMotor	;wreg free
  4056  003EE2                     
  4057                           ;fs_menu_controller.c: 301:         LATDbits.LATD5 = 1;
  4058  003EE2  8A8C               	bsf	140,5,c	;volatile
  4059  003EE4                     
  4060                           ;fs_menu_controller.c: 302:         LATCbits.LATC5 = 1;
  4061  003EE4  8A8B               	bsf	139,5,c	;volatile
  4062  003EE6                     
  4063                           ;fs_menu_controller.c: 303:         LATCbits.LATC4 = 1;
  4064  003EE6  888B               	bsf	139,4,c	;volatile
  4065  003EE8                     l375:
  4066  003EE8  0012               	return		;funcret
  4067  003EEA                     __end_of_mainMenu:
  4068                           	callstack 0
  4069                           
  4070 ;; *************** function _startMotor *****************
  4071 ;; Defined at:
  4072 ;;		line 95 in file "fs_speed_controller.c"
  4073 ;; Parameters:    Size  Location     Type
  4074 ;;		None
  4075 ;; Auto vars:     Size  Location     Type
  4076 ;;		None
  4077 ;; Return value:  Size  Location     Type
  4078 ;;                  1    wreg      void 
  4079 ;; Registers used:
  4080 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4081 ;; Tracked objects:
  4082 ;;		On entry : 0/0
  4083 ;;		On exit  : 0/0
  4084 ;;		Unchanged: 0/0
  4085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4086 ;;      Params:         0       0       0       0       0       0       0
  4087 ;;      Locals:         0       0       0       0       0       0       0
  4088 ;;      Temps:          0       0       0       0       0       0       0
  4089 ;;      Totals:         0       0       0       0       0       0       0
  4090 ;;Total ram usage:        0 bytes
  4091 ;; Hardware stack levels used:    1
  4092 ;; Hardware stack levels required when called:    3
  4093 ;; This function calls:
  4094 ;;		_PWM1_setDC
  4095 ;;		_PWM2_setDC
  4096 ;;		_calculatedAverageValue
  4097 ;;		_scanAdcConversion
  4098 ;;		_speedControl
  4099 ;; This function is called by:
  4100 ;;		_mainMenu
  4101 ;; This function uses a non-reentrant model
  4102 ;;
  4103                           
  4104                           	psect	text14
  4105  005B96                     __ptext14:
  4106                           	callstack 0
  4107  005B96                     _startMotor:
  4108                           	callstack 24
  4109  005B96                     
  4110                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  4111  005B96  EC4C  F009         	call	_scanAdcConversion	;wreg free
  4112  005B9A                     
  4113                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  4114  005B9A  ECB0  F016         	call	_calculatedAverageValue	;wreg free
  4115  005B9E                     
  4116                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  4117  005B9E  C1AB  F058         	movff	_driver_limit+8,speedControl@position
  4118  005BA2  C1AC  F059         	movff	_driver_limit+9,speedControl@position+1
  4119  005BA6  C1AD  F05A         	movff	_driver_limit+10,speedControl@position+2
  4120  005BAA  C1AE  F05B         	movff	_driver_limit+11,speedControl@position+3
  4121  005BAE  ECF0  F01C         	call	_speedControl	;wreg free
  4122                           
  4123                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  4124  005BB2  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  4125  005BB6  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  4126  005BBA  EC7C  F02A         	call	_PWM1_setDC	;wreg free
  4127                           
  4128                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  4129  005BBE  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  4130  005BC2  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  4131  005BC6  EC3F  F02A         	call	_PWM2_setDC	;wreg free
  4132  005BCA  0012               	return		;funcret
  4133  005BCC                     __end_of_startMotor:
  4134                           	callstack 0
  4135                           
  4136 ;; *************** function _speedControl *****************
  4137 ;; Defined at:
  4138 ;;		line 38 in file "fs_speed_controller.c"
  4139 ;; Parameters:    Size  Location     Type
  4140 ;;  position        4   87[COMRAM] float 
  4141 ;; Auto vars:     Size  Location     Type
  4142 ;;  pos             4    0        float 
  4143 ;; Return value:  Size  Location     Type
  4144 ;;                  1    wreg      void 
  4145 ;; Registers used:
  4146 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4147 ;; Tracked objects:
  4148 ;;		On entry : 0/0
  4149 ;;		On exit  : 0/0
  4150 ;;		Unchanged: 0/0
  4151 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4152 ;;      Params:         4       0       0       0       0       0       0
  4153 ;;      Locals:         0       4       0       0       0       0       0
  4154 ;;      Temps:          2       0       0       0       0       0       0
  4155 ;;      Totals:         6       4       0       0       0       0       0
  4156 ;;Total ram usage:       10 bytes
  4157 ;; Hardware stack levels used:    1
  4158 ;; Hardware stack levels required when called:    2
  4159 ;; This function calls:
  4160 ;;		___fladd
  4161 ;;		___flmul
  4162 ;;		___fltol
  4163 ;;		___xxtofl
  4164 ;; This function is called by:
  4165 ;;		_startMotor
  4166 ;; This function uses a non-reentrant model
  4167 ;;
  4168                           
  4169                           	psect	text15
  4170  0039E0                     __ptext15:
  4171                           	callstack 0
  4172  0039E0                     _speedControl:
  4173                           	callstack 24
  4174  0039E0                     
  4175                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  4176  0039E0  0E00               	movlw	0
  4177  0039E2  6E39               	movwf	___fladd@a^0,c
  4178  0039E4  0E80               	movlw	128
  4179  0039E6  6E3A               	movwf	(___fladd@a+1)^0,c
  4180  0039E8  0E54               	movlw	84
  4181  0039EA  6E3B               	movwf	(___fladd@a+2)^0,c
  4182  0039EC  0EC5               	movlw	197
  4183  0039EE  6E3C               	movwf	(___fladd@a+3)^0,c
  4184  0039F0  C058  F035         	movff	speedControl@position,___fladd@b
  4185  0039F4  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4186  0039F8  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4187  0039FC  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4188  003A00  EC6E  F010         	call	___fladd	;wreg free
  4189  003A04  C035  F04E         	movff	?___fladd,___fltol@f1
  4190  003A08  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4191  003A0C  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4192  003A10  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4193  003A14  ECF6  F023         	call	___fltol	;wreg free
  4194  003A18  C04E  F150         	movff	?___fltol,_controller
  4195  003A1C  C04F  F151         	movff	?___fltol+1,_controller+1
  4196  003A20  0E00               	movlw	0
  4197  003A22  6E20               	movwf	___flmul@a^0,c
  4198  003A24  0E00               	movlw	0
  4199  003A26  6E21               	movwf	(___flmul@a+1)^0,c
  4200  003A28  0E80               	movlw	128
  4201  003A2A  6E22               	movwf	(___flmul@a+2)^0,c
  4202  003A2C  0E3F               	movlw	63
  4203  003A2E  6E23               	movwf	(___flmul@a+3)^0,c
  4204  003A30  0101               	movlb	1	; () banked
  4205  003A32  5152               	movf	(_controller+2)& (0+255),w,b
  4206  003A34  5D50               	subwf	_controller& (0+255),w,b
  4207  003A36  6E5C               	movwf	??_speedControl^0,c
  4208  003A38  5153               	movf	(_controller+3)& (0+255),w,b
  4209  003A3A  5951               	subwfb	(_controller+1)& (0+255),w,b
  4210  003A3C  6E5D               	movwf	(??_speedControl+1)^0,c
  4211  003A3E  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4212  003A42  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4213  003A46  0E00               	movlw	0
  4214  003A48  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4215  003A4A  0EFF               	movlw	-1
  4216  003A4C  6E10               	movwf	(___xxtofl@val+2)^0,c
  4217  003A4E  6E11               	movwf	(___xxtofl@val+3)^0,c
  4218  003A50  0E01               	movlw	1
  4219  003A52  ECCF  F01D         	call	___xxtofl
  4220  003A56  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4221  003A5A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4222  003A5E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4223  003A62  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4224  003A66  ECCE  F012         	call	___flmul	;wreg free
  4225  003A6A  C01C  F039         	movff	?___flmul,___fladd@a
  4226  003A6E  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4227  003A72  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4228  003A76  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4229  003A7A  0ECD               	movlw	205
  4230  003A7C  6E20               	movwf	___flmul@a^0,c
  4231  003A7E  0ECC               	movlw	204
  4232  003A80  6E21               	movwf	(___flmul@a+1)^0,c
  4233  003A82  0E4C               	movlw	76
  4234  003A84  6E22               	movwf	(___flmul@a+2)^0,c
  4235  003A86  0E3E               	movlw	62
  4236  003A88  6E23               	movwf	(___flmul@a+3)^0,c
  4237  003A8A  C150  F00E         	movff	_controller,___xxtofl@val
  4238  003A8E  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4239  003A92  0E00               	movlw	0
  4240  003A94  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4241  003A96  0EFF               	movlw	-1
  4242  003A98  6E10               	movwf	(___xxtofl@val+2)^0,c
  4243  003A9A  6E11               	movwf	(___xxtofl@val+3)^0,c
  4244  003A9C  0E01               	movlw	1
  4245  003A9E  ECCF  F01D         	call	___xxtofl
  4246  003AA2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4247  003AA6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4248  003AAA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4249  003AAE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4250  003AB2  ECCE  F012         	call	___flmul	;wreg free
  4251  003AB6  C01C  F035         	movff	?___flmul,___fladd@b
  4252  003ABA  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4253  003ABE  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4254  003AC2  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4255  003AC6  EC6E  F010         	call	___fladd	;wreg free
  4256  003ACA  C035  F04E         	movff	?___fladd,___fltol@f1
  4257  003ACE  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4258  003AD2  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4259  003AD6  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4260  003ADA  ECF6  F023         	call	___fltol	;wreg free
  4261  003ADE  C04E  F154         	movff	?___fltol,_controller+4
  4262  003AE2  C04F  F155         	movff	?___fltol+1,_controller+5
  4263  003AE6                     
  4264                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4265  003AE6  C150  F152         	movff	_controller,_controller+2
  4266  003AEA  C151  F153         	movff	_controller+1,_controller+3
  4267  003AEE                     
  4268                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4269  003AEE  0E0E               	movlw	14
  4270  003AF0  0101               	movlb	1	; () banked
  4271  003AF2  2554               	addwf	(_controller+4)& (0+255),w,b
  4272  003AF4  6F56               	movwf	(_controller+6)& (0+255),b
  4273  003AF6  0E01               	movlw	1
  4274  003AF8  2155               	addwfc	(_controller+5)& (0+255),w,b
  4275  003AFA  6F57               	movwf	(_controller+7)& (0+255),b
  4276  003AFC                     
  4277                           ; BSR set to: 1
  4278                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4279  003AFC  5154               	movf	(_controller+4)& (0+255),w,b
  4280  003AFE  08C8               	sublw	200
  4281  003B00  6F58               	movwf	(_controller+8)& (0+255),b
  4282  003B02  5155               	movf	(_controller+5)& (0+255),w,b
  4283  003B04  A0D8               	btfss	status,0,c
  4284  003B06  2AE8               	incf	wreg,f,c
  4285  003B08  0800               	sublw	0
  4286  003B0A  6F59               	movwf	(_controller+9)& (0+255),b
  4287  003B0C                     
  4288                           ; BSR set to: 1
  4289                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4290  003B0C  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4291  003B0E  EF94  F01D         	goto	u6820
  4292  003B12  5157               	movf	(_controller+7)& (0+255),w,b
  4293  003B14  E107               	bnz	u6821
  4294  003B16  0E32               	movlw	50
  4295  003B18  5D56               	subwf	(_controller+6)& (0+255),w,b
  4296  003B1A  B0D8               	btfsc	status,0,c
  4297  003B1C  EF92  F01D         	goto	u6821
  4298  003B20  EF94  F01D         	goto	u6820
  4299  003B24                     u6821:
  4300  003B24  EF98  F01D         	goto	l5668
  4301  003B28                     u6820:
  4302  003B28                     
  4303                           ; BSR set to: 1
  4304                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4305  003B28  0E00               	movlw	0
  4306  003B2A  6F57               	movwf	(_controller+7)& (0+255),b
  4307  003B2C  0E32               	movlw	50
  4308  003B2E  6F56               	movwf	(_controller+6)& (0+255),b
  4309  003B30                     l5668:
  4310                           
  4311                           ; BSR set to: 1
  4312                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4313  003B30  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4314  003B32  EFA6  F01D         	goto	u6830
  4315  003B36  5159               	movf	(_controller+9)& (0+255),w,b
  4316  003B38  E107               	bnz	u6831
  4317  003B3A  0E32               	movlw	50
  4318  003B3C  5D58               	subwf	(_controller+8)& (0+255),w,b
  4319  003B3E  B0D8               	btfsc	status,0,c
  4320  003B40  EFA4  F01D         	goto	u6831
  4321  003B44  EFA6  F01D         	goto	u6830
  4322  003B48                     u6831:
  4323  003B48  EFAA  F01D         	goto	l5672
  4324  003B4C                     u6830:
  4325  003B4C                     
  4326                           ; BSR set to: 1
  4327                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4328  003B4C  0E00               	movlw	0
  4329  003B4E  6F59               	movwf	(_controller+9)& (0+255),b
  4330  003B50  0E32               	movlw	50
  4331  003B52  6F58               	movwf	(_controller+8)& (0+255),b
  4332  003B54                     l5672:
  4333                           
  4334                           ; BSR set to: 1
  4335                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4336  003B54  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4337  003B56  EFB6  F01D         	goto	u6841
  4338  003B5A  0E5F               	movlw	95
  4339  003B5C  5D56               	subwf	(_controller+6)& (0+255),w,b
  4340  003B5E  0E01               	movlw	1
  4341  003B60  5957               	subwfb	(_controller+7)& (0+255),w,b
  4342  003B62  A0D8               	btfss	status,0,c
  4343  003B64  EFB6  F01D         	goto	u6841
  4344  003B68  EFB8  F01D         	goto	u6840
  4345  003B6C                     u6841:
  4346  003B6C  EFBC  F01D         	goto	l5676
  4347  003B70                     u6840:
  4348  003B70                     
  4349                           ; BSR set to: 1
  4350                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4351  003B70  0E01               	movlw	1
  4352  003B72  6F57               	movwf	(_controller+7)& (0+255),b
  4353  003B74  0E5E               	movlw	94
  4354  003B76  6F56               	movwf	(_controller+6)& (0+255),b
  4355  003B78                     l5676:
  4356                           
  4357                           ; BSR set to: 1
  4358                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4359  003B78  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4360  003B7A  EFC8  F01D         	goto	u6851
  4361  003B7E  0E5F               	movlw	95
  4362  003B80  5D58               	subwf	(_controller+8)& (0+255),w,b
  4363  003B82  0E01               	movlw	1
  4364  003B84  5959               	subwfb	(_controller+9)& (0+255),w,b
  4365  003B86  A0D8               	btfss	status,0,c
  4366  003B88  EFC8  F01D         	goto	u6851
  4367  003B8C  EFCA  F01D         	goto	u6850
  4368  003B90                     u6851:
  4369  003B90  EFCE  F01D         	goto	l493
  4370  003B94                     u6850:
  4371  003B94                     
  4372                           ; BSR set to: 1
  4373                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4374  003B94  0E01               	movlw	1
  4375  003B96  6F59               	movwf	(_controller+9)& (0+255),b
  4376  003B98  0E5E               	movlw	94
  4377  003B9A  6F58               	movwf	(_controller+8)& (0+255),b
  4378  003B9C                     l493:
  4379                           
  4380                           ; BSR set to: 1
  4381  003B9C  0012               	return		;funcret
  4382  003B9E                     __end_of_speedControl:
  4383                           	callstack 0
  4384                           
  4385 ;; *************** function _scanAdcConversion *****************
  4386 ;; Defined at:
  4387 ;;		line 93 in file "fs_adc.c"
  4388 ;; Parameters:    Size  Location     Type
  4389 ;;		None
  4390 ;; Auto vars:     Size  Location     Type
  4391 ;;		None
  4392 ;; Return value:  Size  Location     Type
  4393 ;;                  1    wreg      void 
  4394 ;; Registers used:
  4395 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4396 ;; Tracked objects:
  4397 ;;		On entry : 0/0
  4398 ;;		On exit  : 0/0
  4399 ;;		Unchanged: 0/0
  4400 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4401 ;;      Params:         0       0       0       0       0       0       0
  4402 ;;      Locals:         0       0       0       0       0       0       0
  4403 ;;      Temps:          2       0       0       0       0       0       0
  4404 ;;      Totals:         2       0       0       0       0       0       0
  4405 ;;Total ram usage:        2 bytes
  4406 ;; Hardware stack levels used:    1
  4407 ;; Hardware stack levels required when called:    2
  4408 ;; This function calls:
  4409 ;;		___fldiv
  4410 ;;		___flmul
  4411 ;;		___fltol
  4412 ;;		___xxtofl
  4413 ;;		_readAdcValue
  4414 ;; This function is called by:
  4415 ;;		_startMotor
  4416 ;; This function uses a non-reentrant model
  4417 ;;
  4418                           
  4419                           	psect	text16
  4420  001298                     __ptext16:
  4421                           	callstack 0
  4422  001298                     _scanAdcConversion:
  4423                           	callstack 24
  4424  001298                     
  4425                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4426  001298  EF20  F00D         	goto	l5586
  4427  00129C                     l5534:
  4428                           
  4429                           ; BSR set to: 1
  4430                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4431  00129C  0E00               	movlw	0
  4432  00129E  ECDD  F02C         	call	_readAdcValue
  4433  0012A2  C001  F193         	movff	?_readAdcValue,_adc_raw_data
  4434  0012A6  C002  F194         	movff	?_readAdcValue+1,_adc_raw_data+1
  4435  0012AA                     
  4436                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4437  0012AA  0E00               	movlw	0
  4438  0012AC  6E20               	movwf	___flmul@a^0,c
  4439  0012AE  0E00               	movlw	0
  4440  0012B0  6E21               	movwf	(___flmul@a+1)^0,c
  4441  0012B2  0EA0               	movlw	160
  4442  0012B4  6E22               	movwf	(___flmul@a+2)^0,c
  4443  0012B6  0E40               	movlw	64
  4444  0012B8  6E23               	movwf	(___flmul@a+3)^0,c
  4445  0012BA  C193  F00E         	movff	_adc_raw_data,___xxtofl@val
  4446  0012BE  C194  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4447  0012C2  6A10               	clrf	(___xxtofl@val+2)^0,c
  4448  0012C4  6A11               	clrf	(___xxtofl@val+3)^0,c
  4449  0012C6  0E00               	movlw	0
  4450  0012C8  ECCF  F01D         	call	___xxtofl
  4451  0012CC  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4452  0012D0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4453  0012D4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4454  0012D8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4455  0012DC  ECCE  F012         	call	___flmul	;wreg free
  4456  0012E0  C01C  F035         	movff	?___flmul,___fldiv@b
  4457  0012E4  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4458  0012E8  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4459  0012EC  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4460  0012F0  0E00               	movlw	0
  4461  0012F2  6E39               	movwf	___fldiv@a^0,c
  4462  0012F4  0E00               	movlw	0
  4463  0012F6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4464  0012F8  0E80               	movlw	128
  4465  0012FA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4466  0012FC  0E44               	movlw	68
  4467  0012FE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4468  001300  ECE3  F014         	call	___fldiv	;wreg free
  4469  001304  C035  F130         	movff	?___fldiv,_procces_data
  4470  001308  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4471  00130C  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4472  001310  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4473  001314                     
  4474                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4475  001314  0E00               	movlw	0
  4476  001316  6E39               	movwf	___fldiv@a^0,c
  4477  001318  0E00               	movlw	0
  4478  00131A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4479  00131C  0EA0               	movlw	160
  4480  00131E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4481  001320  0E40               	movlw	64
  4482  001322  6E3C               	movwf	(___fldiv@a+3)^0,c
  4483  001324  0E00               	movlw	0
  4484  001326  6E20               	movwf	___flmul@a^0,c
  4485  001328  0EC0               	movlw	192
  4486  00132A  6E21               	movwf	(___flmul@a+1)^0,c
  4487  00132C  0E79               	movlw	121
  4488  00132E  6E22               	movwf	(___flmul@a+2)^0,c
  4489  001330  0E44               	movlw	68
  4490  001332  6E23               	movwf	(___flmul@a+3)^0,c
  4491  001334  C130  F01C         	movff	_procces_data,___flmul@b
  4492  001338  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4493  00133C  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4494  001340  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4495  001344  ECCE  F012         	call	___flmul	;wreg free
  4496  001348  C01C  F035         	movff	?___flmul,___fldiv@b
  4497  00134C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4498  001350  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4499  001354  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4500  001358  ECE3  F014         	call	___fldiv	;wreg free
  4501  00135C  C035  F04E         	movff	?___fldiv,___fltol@f1
  4502  001360  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4503  001364  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4504  001368  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4505  00136C  ECF6  F023         	call	___fltol	;wreg free
  4506  001370  C04E  F100         	movff	?___fltol,_convert_data
  4507  001374  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4508  001378  C050  F102         	movff	?___fltol+2,_convert_data+2
  4509  00137C  C051  F103         	movff	?___fltol+3,_convert_data+3
  4510                           
  4511                           ;fs_adc.c: 101:         break;
  4512  001380  EF4E  F00D         	goto	l54
  4513  001384                     l5540:
  4514                           
  4515                           ; BSR set to: 1
  4516                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4517  001384  0E01               	movlw	1
  4518  001386  ECDD  F02C         	call	_readAdcValue
  4519  00138A  C001  F195         	movff	?_readAdcValue,_adc_raw_data+2
  4520  00138E  C002  F196         	movff	?_readAdcValue+1,_adc_raw_data+3
  4521  001392                     
  4522                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4523  001392  0E00               	movlw	0
  4524  001394  6E20               	movwf	___flmul@a^0,c
  4525  001396  0E00               	movlw	0
  4526  001398  6E21               	movwf	(___flmul@a+1)^0,c
  4527  00139A  0EA0               	movlw	160
  4528  00139C  6E22               	movwf	(___flmul@a+2)^0,c
  4529  00139E  0E40               	movlw	64
  4530  0013A0  6E23               	movwf	(___flmul@a+3)^0,c
  4531  0013A2  C195  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4532  0013A6  C196  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4533  0013AA  6A10               	clrf	(___xxtofl@val+2)^0,c
  4534  0013AC  6A11               	clrf	(___xxtofl@val+3)^0,c
  4535  0013AE  0E00               	movlw	0
  4536  0013B0  ECCF  F01D         	call	___xxtofl
  4537  0013B4  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4538  0013B8  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4539  0013BC  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4540  0013C0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4541  0013C4  ECCE  F012         	call	___flmul	;wreg free
  4542  0013C8  C01C  F035         	movff	?___flmul,___fldiv@b
  4543  0013CC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4544  0013D0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4545  0013D4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4546  0013D8  0E00               	movlw	0
  4547  0013DA  6E39               	movwf	___fldiv@a^0,c
  4548  0013DC  0E00               	movlw	0
  4549  0013DE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4550  0013E0  0E80               	movlw	128
  4551  0013E2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4552  0013E4  0E44               	movlw	68
  4553  0013E6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4554  0013E8  ECE3  F014         	call	___fldiv	;wreg free
  4555  0013EC  C035  F134         	movff	?___fldiv,_procces_data+4
  4556  0013F0  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4557  0013F4  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4558  0013F8  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4559  0013FC                     
  4560                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4561  0013FC  0E00               	movlw	0
  4562  0013FE  6E39               	movwf	___fldiv@a^0,c
  4563  001400  0E00               	movlw	0
  4564  001402  6E3A               	movwf	(___fldiv@a+1)^0,c
  4565  001404  0EA0               	movlw	160
  4566  001406  6E3B               	movwf	(___fldiv@a+2)^0,c
  4567  001408  0E40               	movlw	64
  4568  00140A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4569  00140C  0E00               	movlw	0
  4570  00140E  6E20               	movwf	___flmul@a^0,c
  4571  001410  0EC0               	movlw	192
  4572  001412  6E21               	movwf	(___flmul@a+1)^0,c
  4573  001414  0E79               	movlw	121
  4574  001416  6E22               	movwf	(___flmul@a+2)^0,c
  4575  001418  0E44               	movlw	68
  4576  00141A  6E23               	movwf	(___flmul@a+3)^0,c
  4577  00141C  C134  F01C         	movff	_procces_data+4,___flmul@b
  4578  001420  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4579  001424  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4580  001428  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4581  00142C  ECCE  F012         	call	___flmul	;wreg free
  4582  001430  C01C  F035         	movff	?___flmul,___fldiv@b
  4583  001434  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4584  001438  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4585  00143C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4586  001440  ECE3  F014         	call	___fldiv	;wreg free
  4587  001444  C035  F04E         	movff	?___fldiv,___fltol@f1
  4588  001448  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4589  00144C  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4590  001450  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4591  001454  ECF6  F023         	call	___fltol	;wreg free
  4592  001458  C04E  F104         	movff	?___fltol,_convert_data+4
  4593  00145C  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4594  001460  C050  F106         	movff	?___fltol+2,_convert_data+6
  4595  001464  C051  F107         	movff	?___fltol+3,_convert_data+7
  4596                           
  4597                           ;fs_adc.c: 107:         break;
  4598  001468  EF4E  F00D         	goto	l54
  4599  00146C                     l5546:
  4600                           
  4601                           ; BSR set to: 1
  4602                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4603  00146C  0E02               	movlw	2
  4604  00146E  ECDD  F02C         	call	_readAdcValue
  4605  001472  C001  F197         	movff	?_readAdcValue,_adc_raw_data+4
  4606  001476  C002  F198         	movff	?_readAdcValue+1,_adc_raw_data+5
  4607  00147A                     
  4608                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4609  00147A  0E00               	movlw	0
  4610  00147C  6E20               	movwf	___flmul@a^0,c
  4611  00147E  0E00               	movlw	0
  4612  001480  6E21               	movwf	(___flmul@a+1)^0,c
  4613  001482  0EA0               	movlw	160
  4614  001484  6E22               	movwf	(___flmul@a+2)^0,c
  4615  001486  0E40               	movlw	64
  4616  001488  6E23               	movwf	(___flmul@a+3)^0,c
  4617  00148A  C197  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4618  00148E  C198  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4619  001492  6A10               	clrf	(___xxtofl@val+2)^0,c
  4620  001494  6A11               	clrf	(___xxtofl@val+3)^0,c
  4621  001496  0E00               	movlw	0
  4622  001498  ECCF  F01D         	call	___xxtofl
  4623  00149C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4624  0014A0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4625  0014A4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4626  0014A8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4627  0014AC  ECCE  F012         	call	___flmul	;wreg free
  4628  0014B0  C01C  F035         	movff	?___flmul,___fldiv@b
  4629  0014B4  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4630  0014B8  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4631  0014BC  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4632  0014C0  0E00               	movlw	0
  4633  0014C2  6E39               	movwf	___fldiv@a^0,c
  4634  0014C4  0E00               	movlw	0
  4635  0014C6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4636  0014C8  0E80               	movlw	128
  4637  0014CA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4638  0014CC  0E44               	movlw	68
  4639  0014CE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4640  0014D0  ECE3  F014         	call	___fldiv	;wreg free
  4641  0014D4  C035  F138         	movff	?___fldiv,_procces_data+8
  4642  0014D8  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4643  0014DC  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4644  0014E0  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4645  0014E4                     
  4646                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4647  0014E4  0E00               	movlw	0
  4648  0014E6  6E39               	movwf	___fldiv@a^0,c
  4649  0014E8  0E00               	movlw	0
  4650  0014EA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4651  0014EC  0EA0               	movlw	160
  4652  0014EE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4653  0014F0  0E40               	movlw	64
  4654  0014F2  6E3C               	movwf	(___fldiv@a+3)^0,c
  4655  0014F4  0E00               	movlw	0
  4656  0014F6  6E20               	movwf	___flmul@a^0,c
  4657  0014F8  0EC0               	movlw	192
  4658  0014FA  6E21               	movwf	(___flmul@a+1)^0,c
  4659  0014FC  0E79               	movlw	121
  4660  0014FE  6E22               	movwf	(___flmul@a+2)^0,c
  4661  001500  0E44               	movlw	68
  4662  001502  6E23               	movwf	(___flmul@a+3)^0,c
  4663  001504  C138  F01C         	movff	_procces_data+8,___flmul@b
  4664  001508  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4665  00150C  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4666  001510  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4667  001514  ECCE  F012         	call	___flmul	;wreg free
  4668  001518  C01C  F035         	movff	?___flmul,___fldiv@b
  4669  00151C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4670  001520  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4671  001524  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4672  001528  ECE3  F014         	call	___fldiv	;wreg free
  4673  00152C  C035  F04E         	movff	?___fldiv,___fltol@f1
  4674  001530  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4675  001534  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4676  001538  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4677  00153C  ECF6  F023         	call	___fltol	;wreg free
  4678  001540  C04E  F108         	movff	?___fltol,_convert_data+8
  4679  001544  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4680  001548  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4681  00154C  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4682  001550                     
  4683                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4684  001550  0E00               	movlw	0
  4685  001552  6E39               	movwf	___fldiv@a^0,c
  4686  001554  0E00               	movlw	0
  4687  001556  6E3A               	movwf	(___fldiv@a+1)^0,c
  4688  001558  0EA0               	movlw	160
  4689  00155A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4690  00155C  0E40               	movlw	64
  4691  00155E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4692  001560  0E00               	movlw	0
  4693  001562  6E20               	movwf	___flmul@a^0,c
  4694  001564  0EC0               	movlw	192
  4695  001566  6E21               	movwf	(___flmul@a+1)^0,c
  4696  001568  0E79               	movlw	121
  4697  00156A  6E22               	movwf	(___flmul@a+2)^0,c
  4698  00156C  0E44               	movlw	68
  4699  00156E  6E23               	movwf	(___flmul@a+3)^0,c
  4700  001570  C138  F01C         	movff	_procces_data+8,___flmul@b
  4701  001574  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4702  001578  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4703  00157C  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4704  001580  ECCE  F012         	call	___flmul	;wreg free
  4705  001584  C01C  F035         	movff	?___flmul,___fldiv@b
  4706  001588  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4707  00158C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4708  001590  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4709  001594  ECE3  F014         	call	___fldiv	;wreg free
  4710  001598  C035  F04E         	movff	?___fldiv,___fltol@f1
  4711  00159C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4712  0015A0  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4713  0015A4  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4714  0015A8  ECF6  F023         	call	___fltol	;wreg free
  4715  0015AC  C04E  F124         	movff	?___fltol,_convert_data+36
  4716  0015B0  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4717                           
  4718                           ;fs_adc.c: 114:         break;
  4719  0015B4  EF4E  F00D         	goto	l54
  4720  0015B8                     l5554:
  4721                           
  4722                           ; BSR set to: 1
  4723                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4724  0015B8  0E03               	movlw	3
  4725  0015BA  ECDD  F02C         	call	_readAdcValue
  4726  0015BE  C001  F199         	movff	?_readAdcValue,_adc_raw_data+6
  4727  0015C2  C002  F19A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4728  0015C6                     
  4729                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4730  0015C6  0E00               	movlw	0
  4731  0015C8  6E20               	movwf	___flmul@a^0,c
  4732  0015CA  0E00               	movlw	0
  4733  0015CC  6E21               	movwf	(___flmul@a+1)^0,c
  4734  0015CE  0EA0               	movlw	160
  4735  0015D0  6E22               	movwf	(___flmul@a+2)^0,c
  4736  0015D2  0E40               	movlw	64
  4737  0015D4  6E23               	movwf	(___flmul@a+3)^0,c
  4738  0015D6  C199  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4739  0015DA  C19A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4740  0015DE  6A10               	clrf	(___xxtofl@val+2)^0,c
  4741  0015E0  6A11               	clrf	(___xxtofl@val+3)^0,c
  4742  0015E2  0E00               	movlw	0
  4743  0015E4  ECCF  F01D         	call	___xxtofl
  4744  0015E8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4745  0015EC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4746  0015F0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4747  0015F4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4748  0015F8  ECCE  F012         	call	___flmul	;wreg free
  4749  0015FC  C01C  F035         	movff	?___flmul,___fldiv@b
  4750  001600  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4751  001604  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4752  001608  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4753  00160C  0E00               	movlw	0
  4754  00160E  6E39               	movwf	___fldiv@a^0,c
  4755  001610  0E00               	movlw	0
  4756  001612  6E3A               	movwf	(___fldiv@a+1)^0,c
  4757  001614  0E80               	movlw	128
  4758  001616  6E3B               	movwf	(___fldiv@a+2)^0,c
  4759  001618  0E44               	movlw	68
  4760  00161A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4761  00161C  ECE3  F014         	call	___fldiv	;wreg free
  4762  001620  C035  F13C         	movff	?___fldiv,_procces_data+12
  4763  001624  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4764  001628  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4765  00162C  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4766  001630                     
  4767                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4768  001630  0E00               	movlw	0
  4769  001632  6E39               	movwf	___fldiv@a^0,c
  4770  001634  0E00               	movlw	0
  4771  001636  6E3A               	movwf	(___fldiv@a+1)^0,c
  4772  001638  0EA0               	movlw	160
  4773  00163A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4774  00163C  0E40               	movlw	64
  4775  00163E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4776  001640  0E00               	movlw	0
  4777  001642  6E20               	movwf	___flmul@a^0,c
  4778  001644  0EC0               	movlw	192
  4779  001646  6E21               	movwf	(___flmul@a+1)^0,c
  4780  001648  0E79               	movlw	121
  4781  00164A  6E22               	movwf	(___flmul@a+2)^0,c
  4782  00164C  0E44               	movlw	68
  4783  00164E  6E23               	movwf	(___flmul@a+3)^0,c
  4784  001650  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4785  001654  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4786  001658  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4787  00165C  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4788  001660  ECCE  F012         	call	___flmul	;wreg free
  4789  001664  C01C  F035         	movff	?___flmul,___fldiv@b
  4790  001668  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4791  00166C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4792  001670  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4793  001674  ECE3  F014         	call	___fldiv	;wreg free
  4794  001678  C035  F04E         	movff	?___fldiv,___fltol@f1
  4795  00167C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4796  001680  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4797  001684  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4798  001688  ECF6  F023         	call	___fltol	;wreg free
  4799  00168C  C04E  F10C         	movff	?___fltol,_convert_data+12
  4800  001690  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4801  001694  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4802  001698  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4803                           
  4804                           ;fs_adc.c: 120:         break;
  4805  00169C  EF4E  F00D         	goto	l54
  4806  0016A0                     l5560:
  4807                           
  4808                           ; BSR set to: 1
  4809                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4810  0016A0  0E04               	movlw	4
  4811  0016A2  ECDD  F02C         	call	_readAdcValue
  4812  0016A6  C001  F19B         	movff	?_readAdcValue,_adc_raw_data+8
  4813  0016AA  C002  F19C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4814  0016AE                     
  4815                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4816  0016AE  0E00               	movlw	0
  4817  0016B0  6E20               	movwf	___flmul@a^0,c
  4818  0016B2  0E00               	movlw	0
  4819  0016B4  6E21               	movwf	(___flmul@a+1)^0,c
  4820  0016B6  0EA0               	movlw	160
  4821  0016B8  6E22               	movwf	(___flmul@a+2)^0,c
  4822  0016BA  0E40               	movlw	64
  4823  0016BC  6E23               	movwf	(___flmul@a+3)^0,c
  4824  0016BE  C19B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4825  0016C2  C19C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4826  0016C6  6A10               	clrf	(___xxtofl@val+2)^0,c
  4827  0016C8  6A11               	clrf	(___xxtofl@val+3)^0,c
  4828  0016CA  0E00               	movlw	0
  4829  0016CC  ECCF  F01D         	call	___xxtofl
  4830  0016D0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4831  0016D4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4832  0016D8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4833  0016DC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4834  0016E0  ECCE  F012         	call	___flmul	;wreg free
  4835  0016E4  C01C  F035         	movff	?___flmul,___fldiv@b
  4836  0016E8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4837  0016EC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4838  0016F0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4839  0016F4  0E00               	movlw	0
  4840  0016F6  6E39               	movwf	___fldiv@a^0,c
  4841  0016F8  0E00               	movlw	0
  4842  0016FA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4843  0016FC  0E80               	movlw	128
  4844  0016FE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4845  001700  0E44               	movlw	68
  4846  001702  6E3C               	movwf	(___fldiv@a+3)^0,c
  4847  001704  ECE3  F014         	call	___fldiv	;wreg free
  4848  001708  C035  F140         	movff	?___fldiv,_procces_data+16
  4849  00170C  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4850  001710  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4851  001714  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4852  001718                     
  4853                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4854  001718  0E00               	movlw	0
  4855  00171A  6E39               	movwf	___fldiv@a^0,c
  4856  00171C  0E00               	movlw	0
  4857  00171E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4858  001720  0EA0               	movlw	160
  4859  001722  6E3B               	movwf	(___fldiv@a+2)^0,c
  4860  001724  0E40               	movlw	64
  4861  001726  6E3C               	movwf	(___fldiv@a+3)^0,c
  4862  001728  0E00               	movlw	0
  4863  00172A  6E20               	movwf	___flmul@a^0,c
  4864  00172C  0EC0               	movlw	192
  4865  00172E  6E21               	movwf	(___flmul@a+1)^0,c
  4866  001730  0E79               	movlw	121
  4867  001732  6E22               	movwf	(___flmul@a+2)^0,c
  4868  001734  0E44               	movlw	68
  4869  001736  6E23               	movwf	(___flmul@a+3)^0,c
  4870  001738  C140  F01C         	movff	_procces_data+16,___flmul@b
  4871  00173C  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4872  001740  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4873  001744  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4874  001748  ECCE  F012         	call	___flmul	;wreg free
  4875  00174C  C01C  F035         	movff	?___flmul,___fldiv@b
  4876  001750  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4877  001754  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4878  001758  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4879  00175C  ECE3  F014         	call	___fldiv	;wreg free
  4880  001760  C035  F04E         	movff	?___fldiv,___fltol@f1
  4881  001764  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4882  001768  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4883  00176C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4884  001770  ECF6  F023         	call	___fltol	;wreg free
  4885  001774  C04E  F110         	movff	?___fltol,_convert_data+16
  4886  001778  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4887  00177C  C050  F112         	movff	?___fltol+2,_convert_data+18
  4888  001780  C051  F113         	movff	?___fltol+3,_convert_data+19
  4889                           
  4890                           ;fs_adc.c: 126:         break;
  4891  001784  EF4E  F00D         	goto	l54
  4892  001788                     l5566:
  4893                           
  4894                           ; BSR set to: 1
  4895                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4896  001788  0E05               	movlw	5
  4897  00178A  ECDD  F02C         	call	_readAdcValue
  4898  00178E  C001  F19D         	movff	?_readAdcValue,_adc_raw_data+10
  4899  001792  C002  F19E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4900  001796                     
  4901                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4902  001796  0E00               	movlw	0
  4903  001798  6E20               	movwf	___flmul@a^0,c
  4904  00179A  0E00               	movlw	0
  4905  00179C  6E21               	movwf	(___flmul@a+1)^0,c
  4906  00179E  0EA0               	movlw	160
  4907  0017A0  6E22               	movwf	(___flmul@a+2)^0,c
  4908  0017A2  0E40               	movlw	64
  4909  0017A4  6E23               	movwf	(___flmul@a+3)^0,c
  4910  0017A6  C19D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4911  0017AA  C19E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4912  0017AE  6A10               	clrf	(___xxtofl@val+2)^0,c
  4913  0017B0  6A11               	clrf	(___xxtofl@val+3)^0,c
  4914  0017B2  0E00               	movlw	0
  4915  0017B4  ECCF  F01D         	call	___xxtofl
  4916  0017B8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4917  0017BC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4918  0017C0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4919  0017C4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4920  0017C8  ECCE  F012         	call	___flmul	;wreg free
  4921  0017CC  C01C  F035         	movff	?___flmul,___fldiv@b
  4922  0017D0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4923  0017D4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4924  0017D8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4925  0017DC  0E00               	movlw	0
  4926  0017DE  6E39               	movwf	___fldiv@a^0,c
  4927  0017E0  0E00               	movlw	0
  4928  0017E2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4929  0017E4  0E80               	movlw	128
  4930  0017E6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4931  0017E8  0E44               	movlw	68
  4932  0017EA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4933  0017EC  ECE3  F014         	call	___fldiv	;wreg free
  4934  0017F0  C035  F144         	movff	?___fldiv,_procces_data+20
  4935  0017F4  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4936  0017F8  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4937  0017FC  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4938  001800                     
  4939                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4940  001800  0E00               	movlw	0
  4941  001802  6E39               	movwf	___fldiv@a^0,c
  4942  001804  0E00               	movlw	0
  4943  001806  6E3A               	movwf	(___fldiv@a+1)^0,c
  4944  001808  0EA0               	movlw	160
  4945  00180A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4946  00180C  0E40               	movlw	64
  4947  00180E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4948  001810  0E00               	movlw	0
  4949  001812  6E20               	movwf	___flmul@a^0,c
  4950  001814  0EC0               	movlw	192
  4951  001816  6E21               	movwf	(___flmul@a+1)^0,c
  4952  001818  0E79               	movlw	121
  4953  00181A  6E22               	movwf	(___flmul@a+2)^0,c
  4954  00181C  0E44               	movlw	68
  4955  00181E  6E23               	movwf	(___flmul@a+3)^0,c
  4956  001820  C144  F01C         	movff	_procces_data+20,___flmul@b
  4957  001824  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4958  001828  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4959  00182C  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4960  001830  ECCE  F012         	call	___flmul	;wreg free
  4961  001834  C01C  F035         	movff	?___flmul,___fldiv@b
  4962  001838  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4963  00183C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4964  001840  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4965  001844  ECE3  F014         	call	___fldiv	;wreg free
  4966  001848  C035  F04E         	movff	?___fldiv,___fltol@f1
  4967  00184C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4968  001850  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4969  001854  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4970  001858  ECF6  F023         	call	___fltol	;wreg free
  4971  00185C  C04E  F114         	movff	?___fltol,_convert_data+20
  4972  001860  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4973  001864  C050  F116         	movff	?___fltol+2,_convert_data+22
  4974  001868  C051  F117         	movff	?___fltol+3,_convert_data+23
  4975                           
  4976                           ;fs_adc.c: 132:         break;
  4977  00186C  EF4E  F00D         	goto	l54
  4978  001870                     l5572:
  4979                           
  4980                           ; BSR set to: 1
  4981                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4982  001870  0E06               	movlw	6
  4983  001872  ECDD  F02C         	call	_readAdcValue
  4984  001876  C001  F19F         	movff	?_readAdcValue,_adc_raw_data+12
  4985  00187A  C002  F1A0         	movff	?_readAdcValue+1,_adc_raw_data+13
  4986  00187E                     
  4987                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4988  00187E  0E00               	movlw	0
  4989  001880  6E20               	movwf	___flmul@a^0,c
  4990  001882  0E00               	movlw	0
  4991  001884  6E21               	movwf	(___flmul@a+1)^0,c
  4992  001886  0EA0               	movlw	160
  4993  001888  6E22               	movwf	(___flmul@a+2)^0,c
  4994  00188A  0E40               	movlw	64
  4995  00188C  6E23               	movwf	(___flmul@a+3)^0,c
  4996  00188E  C19F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4997  001892  C1A0  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4998  001896  6A10               	clrf	(___xxtofl@val+2)^0,c
  4999  001898  6A11               	clrf	(___xxtofl@val+3)^0,c
  5000  00189A  0E00               	movlw	0
  5001  00189C  ECCF  F01D         	call	___xxtofl
  5002  0018A0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5003  0018A4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5004  0018A8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5005  0018AC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5006  0018B0  ECCE  F012         	call	___flmul	;wreg free
  5007  0018B4  C01C  F035         	movff	?___flmul,___fldiv@b
  5008  0018B8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5009  0018BC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5010  0018C0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5011  0018C4  0E00               	movlw	0
  5012  0018C6  6E39               	movwf	___fldiv@a^0,c
  5013  0018C8  0E00               	movlw	0
  5014  0018CA  6E3A               	movwf	(___fldiv@a+1)^0,c
  5015  0018CC  0E80               	movlw	128
  5016  0018CE  6E3B               	movwf	(___fldiv@a+2)^0,c
  5017  0018D0  0E44               	movlw	68
  5018  0018D2  6E3C               	movwf	(___fldiv@a+3)^0,c
  5019  0018D4  ECE3  F014         	call	___fldiv	;wreg free
  5020  0018D8  C035  F148         	movff	?___fldiv,_procces_data+24
  5021  0018DC  C036  F149         	movff	?___fldiv+1,_procces_data+25
  5022  0018E0  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  5023  0018E4  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  5024  0018E8                     
  5025                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  5026  0018E8  0E00               	movlw	0
  5027  0018EA  6E39               	movwf	___fldiv@a^0,c
  5028  0018EC  0E00               	movlw	0
  5029  0018EE  6E3A               	movwf	(___fldiv@a+1)^0,c
  5030  0018F0  0EA0               	movlw	160
  5031  0018F2  6E3B               	movwf	(___fldiv@a+2)^0,c
  5032  0018F4  0E40               	movlw	64
  5033  0018F6  6E3C               	movwf	(___fldiv@a+3)^0,c
  5034  0018F8  0E00               	movlw	0
  5035  0018FA  6E20               	movwf	___flmul@a^0,c
  5036  0018FC  0EC0               	movlw	192
  5037  0018FE  6E21               	movwf	(___flmul@a+1)^0,c
  5038  001900  0E79               	movlw	121
  5039  001902  6E22               	movwf	(___flmul@a+2)^0,c
  5040  001904  0E44               	movlw	68
  5041  001906  6E23               	movwf	(___flmul@a+3)^0,c
  5042  001908  C148  F01C         	movff	_procces_data+24,___flmul@b
  5043  00190C  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  5044  001910  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  5045  001914  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  5046  001918  ECCE  F012         	call	___flmul	;wreg free
  5047  00191C  C01C  F035         	movff	?___flmul,___fldiv@b
  5048  001920  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5049  001924  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5050  001928  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5051  00192C  ECE3  F014         	call	___fldiv	;wreg free
  5052  001930  C035  F04E         	movff	?___fldiv,___fltol@f1
  5053  001934  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5054  001938  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5055  00193C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5056  001940  ECF6  F023         	call	___fltol	;wreg free
  5057  001944  C04E  F118         	movff	?___fltol,_convert_data+24
  5058  001948  C04F  F119         	movff	?___fltol+1,_convert_data+25
  5059  00194C  C050  F11A         	movff	?___fltol+2,_convert_data+26
  5060  001950  C051  F11B         	movff	?___fltol+3,_convert_data+27
  5061                           
  5062                           ;fs_adc.c: 138:         break;
  5063  001954  EF4E  F00D         	goto	l54
  5064  001958                     l5578:
  5065                           
  5066                           ; BSR set to: 1
  5067                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  5068  001958  0E07               	movlw	7
  5069  00195A  ECDD  F02C         	call	_readAdcValue
  5070  00195E  C001  F1A1         	movff	?_readAdcValue,_adc_raw_data+14
  5071  001962  C002  F1A2         	movff	?_readAdcValue+1,_adc_raw_data+15
  5072  001966                     
  5073                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  5074  001966  0E00               	movlw	0
  5075  001968  6E20               	movwf	___flmul@a^0,c
  5076  00196A  0E00               	movlw	0
  5077  00196C  6E21               	movwf	(___flmul@a+1)^0,c
  5078  00196E  0EA0               	movlw	160
  5079  001970  6E22               	movwf	(___flmul@a+2)^0,c
  5080  001972  0E40               	movlw	64
  5081  001974  6E23               	movwf	(___flmul@a+3)^0,c
  5082  001976  C1A1  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  5083  00197A  C1A2  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  5084  00197E  6A10               	clrf	(___xxtofl@val+2)^0,c
  5085  001980  6A11               	clrf	(___xxtofl@val+3)^0,c
  5086  001982  0E00               	movlw	0
  5087  001984  ECCF  F01D         	call	___xxtofl
  5088  001988  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5089  00198C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5090  001990  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5091  001994  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5092  001998  ECCE  F012         	call	___flmul	;wreg free
  5093  00199C  C01C  F035         	movff	?___flmul,___fldiv@b
  5094  0019A0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5095  0019A4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5096  0019A8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5097  0019AC  0E00               	movlw	0
  5098  0019AE  6E39               	movwf	___fldiv@a^0,c
  5099  0019B0  0E00               	movlw	0
  5100  0019B2  6E3A               	movwf	(___fldiv@a+1)^0,c
  5101  0019B4  0E80               	movlw	128
  5102  0019B6  6E3B               	movwf	(___fldiv@a+2)^0,c
  5103  0019B8  0E44               	movlw	68
  5104  0019BA  6E3C               	movwf	(___fldiv@a+3)^0,c
  5105  0019BC  ECE3  F014         	call	___fldiv	;wreg free
  5106  0019C0  C035  F14C         	movff	?___fldiv,_procces_data+28
  5107  0019C4  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  5108  0019C8  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  5109  0019CC  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  5110  0019D0                     
  5111                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  5112  0019D0  0E00               	movlw	0
  5113  0019D2  6E39               	movwf	___fldiv@a^0,c
  5114  0019D4  0E00               	movlw	0
  5115  0019D6  6E3A               	movwf	(___fldiv@a+1)^0,c
  5116  0019D8  0EA0               	movlw	160
  5117  0019DA  6E3B               	movwf	(___fldiv@a+2)^0,c
  5118  0019DC  0E40               	movlw	64
  5119  0019DE  6E3C               	movwf	(___fldiv@a+3)^0,c
  5120  0019E0  0E00               	movlw	0
  5121  0019E2  6E20               	movwf	___flmul@a^0,c
  5122  0019E4  0EC0               	movlw	192
  5123  0019E6  6E21               	movwf	(___flmul@a+1)^0,c
  5124  0019E8  0E79               	movlw	121
  5125  0019EA  6E22               	movwf	(___flmul@a+2)^0,c
  5126  0019EC  0E44               	movlw	68
  5127  0019EE  6E23               	movwf	(___flmul@a+3)^0,c
  5128  0019F0  C14C  F01C         	movff	_procces_data+28,___flmul@b
  5129  0019F4  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  5130  0019F8  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  5131  0019FC  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  5132  001A00  ECCE  F012         	call	___flmul	;wreg free
  5133  001A04  C01C  F035         	movff	?___flmul,___fldiv@b
  5134  001A08  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5135  001A0C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5136  001A10  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5137  001A14  ECE3  F014         	call	___fldiv	;wreg free
  5138  001A18  C035  F04E         	movff	?___fldiv,___fltol@f1
  5139  001A1C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5140  001A20  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5141  001A24  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5142  001A28  ECF6  F023         	call	___fltol	;wreg free
  5143  001A2C  C04E  F11C         	movff	?___fltol,_convert_data+28
  5144  001A30  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5145  001A34  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5146  001A38  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5147                           
  5148                           ;fs_adc.c: 144:         break;
  5149  001A3C  EF4E  F00D         	goto	l54
  5150  001A40                     l5586:
  5151  001A40  0101               	movlb	1	; () banked
  5152  001A42  51B4               	movf	(_timer_value+5)& (0+255),w,b
  5153  001A44  6E58               	movwf	??_scanAdcConversion^0,c
  5154  001A46  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5155                           
  5156                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5157                           ; Switch size 1, requested type "simple"
  5158                           ; Number of cases is 1, Range of values is 0 to 0
  5159                           ; switch strategies available:
  5160                           ; Name         Instructions Cycles
  5161                           ; simple_byte            4     3 (average)
  5162                           ;	Chosen strategy is simple_byte
  5163  001A48  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5164  001A4A  0A00               	xorlw	0	; case 0
  5165  001A4C  B4D8               	btfsc	status,2,c
  5166  001A4E  EF2B  F00D         	goto	l6442
  5167  001A52  EF4E  F00D         	goto	l54
  5168  001A56                     l6442:
  5169                           
  5170                           ; BSR set to: 1
  5171                           ; Switch size 1, requested type "simple"
  5172                           ; Number of cases is 8, Range of values is 1 to 8
  5173                           ; switch strategies available:
  5174                           ; Name         Instructions Cycles
  5175                           ; simple_byte           25    13 (average)
  5176                           ;	Chosen strategy is simple_byte
  5177  001A56  5058               	movf	??_scanAdcConversion^0,w,c
  5178  001A58  0A01               	xorlw	1	; case 1
  5179  001A5A  B4D8               	btfsc	status,2,c
  5180  001A5C  EF4E  F009         	goto	l5534
  5181  001A60  0A03               	xorlw	3	; case 2
  5182  001A62  B4D8               	btfsc	status,2,c
  5183  001A64  EFC2  F009         	goto	l5540
  5184  001A68  0A01               	xorlw	1	; case 3
  5185  001A6A  B4D8               	btfsc	status,2,c
  5186  001A6C  EF36  F00A         	goto	l5546
  5187  001A70  0A07               	xorlw	7	; case 4
  5188  001A72  B4D8               	btfsc	status,2,c
  5189  001A74  EFDC  F00A         	goto	l5554
  5190  001A78  0A01               	xorlw	1	; case 5
  5191  001A7A  B4D8               	btfsc	status,2,c
  5192  001A7C  EF50  F00B         	goto	l5560
  5193  001A80  0A03               	xorlw	3	; case 6
  5194  001A82  B4D8               	btfsc	status,2,c
  5195  001A84  EFC4  F00B         	goto	l5566
  5196  001A88  0A01               	xorlw	1	; case 7
  5197  001A8A  B4D8               	btfsc	status,2,c
  5198  001A8C  EF38  F00C         	goto	l5572
  5199  001A90  0A0F               	xorlw	15	; case 8
  5200  001A92  B4D8               	btfsc	status,2,c
  5201  001A94  EFAC  F00C         	goto	l5578
  5202  001A98  EF4E  F00D         	goto	l54
  5203  001A9C                     l54:
  5204  001A9C  0012               	return		;funcret
  5205  001A9E                     __end_of_scanAdcConversion:
  5206                           	callstack 0
  5207                           
  5208 ;; *************** function _readAdcValue *****************
  5209 ;; Defined at:
  5210 ;;		line 34 in file "fs_adc.c"
  5211 ;; Parameters:    Size  Location     Type
  5212 ;;  adcChannel      1    wreg     unsigned char 
  5213 ;; Auto vars:     Size  Location     Type
  5214 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5215 ;;  adcValue        2    5[COMRAM] unsigned short 
  5216 ;; Return value:  Size  Location     Type
  5217 ;;                  2    0[COMRAM] unsigned short 
  5218 ;; Registers used:
  5219 ;;		wreg, status,2, status,0
  5220 ;; Tracked objects:
  5221 ;;		On entry : 0/0
  5222 ;;		On exit  : 0/0
  5223 ;;		Unchanged: 0/0
  5224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5225 ;;      Params:         2       0       0       0       0       0       0
  5226 ;;      Locals:         3       0       0       0       0       0       0
  5227 ;;      Temps:          2       0       0       0       0       0       0
  5228 ;;      Totals:         7       0       0       0       0       0       0
  5229 ;;Total ram usage:        7 bytes
  5230 ;; Hardware stack levels used:    1
  5231 ;; Hardware stack levels required when called:    1
  5232 ;; This function calls:
  5233 ;;		Nothing
  5234 ;; This function is called by:
  5235 ;;		_scanAdcConversion
  5236 ;; This function uses a non-reentrant model
  5237 ;;
  5238                           
  5239                           	psect	text17
  5240  0059BA                     __ptext17:
  5241                           	callstack 0
  5242  0059BA                     _readAdcValue:
  5243                           	callstack 24
  5244                           
  5245                           ;incstack = 0
  5246                           ;readAdcValue@adcChannel stored from wreg
  5247  0059BA  6E05               	movwf	readAdcValue@adcChannel^0,c
  5248  0059BC                     
  5249                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5250  0059BC  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5251  0059C0  4603               	rlncf	??_readAdcValue^0,f,c
  5252  0059C2  4603               	rlncf	??_readAdcValue^0,f,c
  5253  0059C4  50C2               	movf	194,w,c	;volatile
  5254  0059C6  1803               	xorwf	??_readAdcValue^0,w,c
  5255  0059C8  0B83               	andlw	-125
  5256  0059CA  1803               	xorwf	??_readAdcValue^0,w,c
  5257  0059CC  6EC2               	movwf	194,c	;volatile
  5258  0059CE                     
  5259                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5260  0059CE  80C2               	bsf	194,0,c	;volatile
  5261  0059D0                     
  5262                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5263  0059D0  82C2               	bsf	194,1,c	;volatile
  5264  0059D2                     l35:
  5265  0059D2  B2C2               	btfsc	194,1,c	;volatile
  5266  0059D4  EFEE  F02C         	goto	u6391
  5267  0059D8  EFF0  F02C         	goto	u6390
  5268  0059DC                     u6391:
  5269  0059DC  EFE9  F02C         	goto	l35
  5270  0059E0                     u6390:
  5271  0059E0                     
  5272                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5273  0059E0  50C4               	movf	196,w,c	;volatile
  5274  0059E2  6E04               	movwf	(??_readAdcValue+1)^0,c
  5275  0059E4  6A03               	clrf	??_readAdcValue^0,c
  5276  0059E6  50C3               	movf	195,w,c	;volatile
  5277  0059E8  2403               	addwf	??_readAdcValue^0,w,c
  5278  0059EA  6E06               	movwf	readAdcValue@adcValue^0,c
  5279  0059EC  0E00               	movlw	0
  5280  0059EE  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5281  0059F0  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5282  0059F2                     
  5283                           ;fs_adc.c: 43:     return adcValue;
  5284  0059F2  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5285  0059F6  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5286  0059FA  0012               	return		;funcret
  5287  0059FC                     __end_of_readAdcValue:
  5288                           	callstack 0
  5289                           
  5290 ;; *************** function _calculatedAverageValue *****************
  5291 ;; Defined at:
  5292 ;;		line 154 in file "fs_adc.c"
  5293 ;; Parameters:    Size  Location     Type
  5294 ;;		None
  5295 ;; Auto vars:     Size  Location     Type
  5296 ;;		None
  5297 ;; Return value:  Size  Location     Type
  5298 ;;                  1    wreg      void 
  5299 ;; Registers used:
  5300 ;;		wreg, status,2, status,0, cstack
  5301 ;; Tracked objects:
  5302 ;;		On entry : 0/0
  5303 ;;		On exit  : 0/0
  5304 ;;		Unchanged: 0/0
  5305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5306 ;;      Params:         0       0       0       0       0       0       0
  5307 ;;      Locals:         0       0       0       0       0       0       0
  5308 ;;      Temps:         24       0       0       0       0       0       0
  5309 ;;      Totals:        24       0       0       0       0       0       0
  5310 ;;Total ram usage:       24 bytes
  5311 ;; Hardware stack levels used:    1
  5312 ;; Hardware stack levels required when called:    2
  5313 ;; This function calls:
  5314 ;;		___lldiv
  5315 ;;		___lmul
  5316 ;;		___xxtofl
  5317 ;; This function is called by:
  5318 ;;		_startMotor
  5319 ;; This function uses a non-reentrant model
  5320 ;;
  5321                           
  5322                           	psect	text18
  5323  002D60                     __ptext18:
  5324                           	callstack 0
  5325  002D60                     _calculatedAverageValue:
  5326                           	callstack 24
  5327  002D60                     
  5328                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5329  002D60  0E00               	movlw	0
  5330  002D62  0101               	movlb	1	; () banked
  5331  002D64  6FA3               	movwf	_driver_limit& (0+255),b
  5332  002D66  0E00               	movlw	0
  5333  002D68  6FA4               	movwf	(_driver_limit+1)& (0+255),b
  5334  002D6A  0E00               	movlw	0
  5335  002D6C  6FA5               	movwf	(_driver_limit+2)& (0+255),b
  5336  002D6E  0E00               	movlw	0
  5337  002D70  6FA6               	movwf	(_driver_limit+3)& (0+255),b
  5338                           
  5339                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5340  002D72  0E00               	movlw	0
  5341  002D74  6FA7               	movwf	(_driver_limit+4)& (0+255),b
  5342  002D76  0E00               	movlw	0
  5343  002D78  6FA8               	movwf	(_driver_limit+5)& (0+255),b
  5344  002D7A  0E00               	movlw	0
  5345  002D7C  6FA9               	movwf	(_driver_limit+6)& (0+255),b
  5346  002D7E  0E00               	movlw	0
  5347  002D80  6FAA               	movwf	(_driver_limit+7)& (0+255),b
  5348                           
  5349                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5350  002D82  0E00               	movlw	0
  5351  002D84  6FAB               	movwf	(_driver_limit+8)& (0+255),b
  5352  002D86  0E00               	movlw	0
  5353  002D88  6FAC               	movwf	(_driver_limit+9)& (0+255),b
  5354  002D8A  0E00               	movlw	0
  5355  002D8C  6FAD               	movwf	(_driver_limit+10)& (0+255),b
  5356  002D8E  0E00               	movlw	0
  5357  002D90  6FAE               	movwf	(_driver_limit+11)& (0+255),b
  5358  002D92                     
  5359                           ; BSR set to: 1
  5360                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5361  002D92  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5362  002D96  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5363  002D9A  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5364  002D9E  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5365  002DA2  0EB8               	movlw	184
  5366  002DA4  6E05               	movwf	___lmul@multiplicand^0,c
  5367  002DA6  0E0B               	movlw	11
  5368  002DA8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5369  002DAA  0E00               	movlw	0
  5370  002DAC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5371  002DAE  0E00               	movlw	0
  5372  002DB0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5373  002DB2  ECF4  F02A         	call	___lmul	;wreg free
  5374  002DB6  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5375  002DBA  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5376  002DBE  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5377  002DC2  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5378  002DC6  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5379  002DCA  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5380  002DCE  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5381  002DD2  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5382  002DD6  0ED0               	movlw	208
  5383  002DD8  6E05               	movwf	___lmul@multiplicand^0,c
  5384  002DDA  0E07               	movlw	7
  5385  002DDC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5386  002DDE  0E00               	movlw	0
  5387  002DE0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5388  002DE2  0E00               	movlw	0
  5389  002DE4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5390  002DE6  ECF4  F02A         	call	___lmul	;wreg free
  5391  002DEA  5001               	movf	?___lmul^0,w,c
  5392  002DEC  241C               	addwf	??_calculatedAverageValue^0,w,c
  5393  002DEE  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5394  002DF0  5002               	movf	(?___lmul+1)^0,w,c
  5395  002DF2  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5396  002DF4  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5397  002DF6  5003               	movf	(?___lmul+2)^0,w,c
  5398  002DF8  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5399  002DFA  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5400  002DFC  5004               	movf	(?___lmul+3)^0,w,c
  5401  002DFE  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5402  002E00  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5403  002E02  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5404  002E06  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5405  002E0A  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5406  002E0E  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5407  002E12  0EE8               	movlw	232
  5408  002E14  6E05               	movwf	___lmul@multiplicand^0,c
  5409  002E16  0E03               	movlw	3
  5410  002E18  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5411  002E1A  0E00               	movlw	0
  5412  002E1C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5413  002E1E  0E00               	movlw	0
  5414  002E20  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5415  002E22  ECF4  F02A         	call	___lmul	;wreg free
  5416  002E26  5001               	movf	?___lmul^0,w,c
  5417  002E28  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5418  002E2A  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5419  002E2C  5002               	movf	(?___lmul+1)^0,w,c
  5420  002E2E  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5421  002E30  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5422  002E32  5003               	movf	(?___lmul+2)^0,w,c
  5423  002E34  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5424  002E36  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5425  002E38  5004               	movf	(?___lmul+3)^0,w,c
  5426  002E3A  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5427  002E3C  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5428  002E3E  0101               	movlb	1	; () banked
  5429  002E40  5100               	movf	_convert_data& (0+255),w,b
  5430  002E42  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5431  002E44  6FA3               	movwf	_driver_limit& (0+255),b
  5432  002E46  5101               	movf	(_convert_data+1)& (0+255),w,b
  5433  002E48  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5434  002E4A  6FA4               	movwf	(_driver_limit+1)& (0+255),b
  5435  002E4C  5102               	movf	(_convert_data+2)& (0+255),w,b
  5436  002E4E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5437  002E50  6FA5               	movwf	(_driver_limit+2)& (0+255),b
  5438  002E52  5103               	movf	(_convert_data+3)& (0+255),w,b
  5439  002E54  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5440  002E56  6FA6               	movwf	(_driver_limit+3)& (0+255),b
  5441  002E58                     
  5442                           ; BSR set to: 1
  5443                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5444  002E58  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5445  002E5C  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5446  002E60  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5447  002E64  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5448  002E68  0E58               	movlw	88
  5449  002E6A  6E05               	movwf	___lmul@multiplicand^0,c
  5450  002E6C  0E1B               	movlw	27
  5451  002E6E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5452  002E70  0E00               	movlw	0
  5453  002E72  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5454  002E74  0E00               	movlw	0
  5455  002E76  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5456  002E78  ECF4  F02A         	call	___lmul	;wreg free
  5457  002E7C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5458  002E80  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5459  002E84  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5460  002E88  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5461  002E8C  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5462  002E90  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5463  002E94  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5464  002E98  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5465  002E9C  0E70               	movlw	112
  5466  002E9E  6E05               	movwf	___lmul@multiplicand^0,c
  5467  002EA0  0E17               	movlw	23
  5468  002EA2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5469  002EA4  0E00               	movlw	0
  5470  002EA6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5471  002EA8  0E00               	movlw	0
  5472  002EAA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5473  002EAC  ECF4  F02A         	call	___lmul	;wreg free
  5474  002EB0  5001               	movf	?___lmul^0,w,c
  5475  002EB2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5476  002EB4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5477  002EB6  5002               	movf	(?___lmul+1)^0,w,c
  5478  002EB8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5479  002EBA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5480  002EBC  5003               	movf	(?___lmul+2)^0,w,c
  5481  002EBE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5482  002EC0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5483  002EC2  5004               	movf	(?___lmul+3)^0,w,c
  5484  002EC4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5485  002EC6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5486  002EC8  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5487  002ECC  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5488  002ED0  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5489  002ED4  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5490  002ED8  0E88               	movlw	136
  5491  002EDA  6E05               	movwf	___lmul@multiplicand^0,c
  5492  002EDC  0E13               	movlw	19
  5493  002EDE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5494  002EE0  0E00               	movlw	0
  5495  002EE2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5496  002EE4  0E00               	movlw	0
  5497  002EE6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5498  002EE8  ECF4  F02A         	call	___lmul	;wreg free
  5499  002EEC  5001               	movf	?___lmul^0,w,c
  5500  002EEE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5501  002EF0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5502  002EF2  5002               	movf	(?___lmul+1)^0,w,c
  5503  002EF4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5504  002EF6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5505  002EF8  5003               	movf	(?___lmul+2)^0,w,c
  5506  002EFA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5507  002EFC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5508  002EFE  5004               	movf	(?___lmul+3)^0,w,c
  5509  002F00  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5510  002F02  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5511  002F04  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5512  002F08  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5513  002F0C  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5514  002F10  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5515  002F14  0EA0               	movlw	160
  5516  002F16  6E05               	movwf	___lmul@multiplicand^0,c
  5517  002F18  0E0F               	movlw	15
  5518  002F1A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5519  002F1C  0E00               	movlw	0
  5520  002F1E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5521  002F20  0E00               	movlw	0
  5522  002F22  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5523  002F24  ECF4  F02A         	call	___lmul	;wreg free
  5524  002F28  5001               	movf	?___lmul^0,w,c
  5525  002F2A  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5526  002F2C  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5527  002F2E  5002               	movf	(?___lmul+1)^0,w,c
  5528  002F30  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5529  002F32  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5530  002F34  5003               	movf	(?___lmul+2)^0,w,c
  5531  002F36  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5532  002F38  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5533  002F3A  5004               	movf	(?___lmul+3)^0,w,c
  5534  002F3C  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5535  002F3E  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5536  002F40  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5537  002F42  0101               	movlb	1	; () banked
  5538  002F44  27A3               	addwf	_driver_limit& (0+255),f,b
  5539  002F46  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5540  002F48  23A4               	addwfc	(_driver_limit+1)& (0+255),f,b
  5541  002F4A  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5542  002F4C  23A5               	addwfc	(_driver_limit+2)& (0+255),f,b
  5543  002F4E  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5544  002F50  23A6               	addwfc	(_driver_limit+3)& (0+255),f,b
  5545  002F52                     
  5546                           ; BSR set to: 1
  5547                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5548  002F52  5108               	movf	(_convert_data+8)& (0+255),w,b
  5549  002F54  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5550  002F56  6E1C               	movwf	??_calculatedAverageValue^0,c
  5551  002F58  5109               	movf	(_convert_data+9)& (0+255),w,b
  5552  002F5A  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5553  002F5C  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5554  002F5E  510A               	movf	(_convert_data+10)& (0+255),w,b
  5555  002F60  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5556  002F62  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5557  002F64  510B               	movf	(_convert_data+11)& (0+255),w,b
  5558  002F66  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5559  002F68  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5560  002F6A  510C               	movf	(_convert_data+12)& (0+255),w,b
  5561  002F6C  241C               	addwf	??_calculatedAverageValue^0,w,c
  5562  002F6E  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5563  002F70  510D               	movf	(_convert_data+13)& (0+255),w,b
  5564  002F72  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5565  002F74  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5566  002F76  510E               	movf	(_convert_data+14)& (0+255),w,b
  5567  002F78  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5568  002F7A  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5569  002F7C  510F               	movf	(_convert_data+15)& (0+255),w,b
  5570  002F7E  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5571  002F80  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5572  002F82  5110               	movf	(_convert_data+16)& (0+255),w,b
  5573  002F84  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5574  002F86  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5575  002F88  5111               	movf	(_convert_data+17)& (0+255),w,b
  5576  002F8A  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5577  002F8C  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5578  002F8E  5112               	movf	(_convert_data+18)& (0+255),w,b
  5579  002F90  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5580  002F92  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5581  002F94  5113               	movf	(_convert_data+19)& (0+255),w,b
  5582  002F96  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5583  002F98  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5584  002F9A  5114               	movf	(_convert_data+20)& (0+255),w,b
  5585  002F9C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5586  002F9E  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5587  002FA0  5115               	movf	(_convert_data+21)& (0+255),w,b
  5588  002FA2  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5589  002FA4  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5590  002FA6  5116               	movf	(_convert_data+22)& (0+255),w,b
  5591  002FA8  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5592  002FAA  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5593  002FAC  5117               	movf	(_convert_data+23)& (0+255),w,b
  5594  002FAE  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5595  002FB0  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5596  002FB2  5118               	movf	(_convert_data+24)& (0+255),w,b
  5597  002FB4  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5598  002FB6  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5599  002FB8  5119               	movf	(_convert_data+25)& (0+255),w,b
  5600  002FBA  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5601  002FBC  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5602  002FBE  511A               	movf	(_convert_data+26)& (0+255),w,b
  5603  002FC0  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5604  002FC2  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5605  002FC4  511B               	movf	(_convert_data+27)& (0+255),w,b
  5606  002FC6  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5607  002FC8  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5608  002FCA  511C               	movf	(_convert_data+28)& (0+255),w,b
  5609  002FCC  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5610  002FCE  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5611  002FD0  511D               	movf	(_convert_data+29)& (0+255),w,b
  5612  002FD2  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5613  002FD4  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5614  002FD6  511E               	movf	(_convert_data+30)& (0+255),w,b
  5615  002FD8  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5616  002FDA  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5617  002FDC  511F               	movf	(_convert_data+31)& (0+255),w,b
  5618  002FDE  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5619  002FE0  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5620  002FE2  5100               	movf	_convert_data& (0+255),w,b
  5621  002FE4  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5622  002FE6  6FA7               	movwf	(_driver_limit+4)& (0+255),b
  5623  002FE8  5101               	movf	(_convert_data+1)& (0+255),w,b
  5624  002FEA  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5625  002FEC  6FA8               	movwf	(_driver_limit+5)& (0+255),b
  5626  002FEE  5102               	movf	(_convert_data+2)& (0+255),w,b
  5627  002FF0  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5628  002FF2  6FA9               	movwf	(_driver_limit+6)& (0+255),b
  5629  002FF4  5103               	movf	(_convert_data+3)& (0+255),w,b
  5630  002FF6  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5631  002FF8  6FAA               	movwf	(_driver_limit+7)& (0+255),b
  5632  002FFA                     
  5633                           ; BSR set to: 1
  5634                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5635  002FFA  C1A7  F005         	movff	_driver_limit+4,___lldiv@divisor
  5636  002FFE  C1A8  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5637  003002  C1A9  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5638  003006  C1AA  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5639  00300A  C1A3  F001         	movff	_driver_limit,___lldiv@dividend
  5640  00300E  C1A4  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5641  003012  C1A5  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5642  003016  C1A6  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5643  00301A  EC63  F029         	call	___lldiv	;wreg free
  5644  00301E  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5645  003022  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5646  003026  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5647  00302A  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5648  00302E  0E00               	movlw	0
  5649  003030  ECCF  F01D         	call	___xxtofl
  5650  003034  C00E  F1AB         	movff	?___xxtofl,_driver_limit+8
  5651  003038  C00F  F1AC         	movff	?___xxtofl+1,_driver_limit+9
  5652  00303C  C010  F1AD         	movff	?___xxtofl+2,_driver_limit+10
  5653  003040  C011  F1AE         	movff	?___xxtofl+3,_driver_limit+11
  5654  003044  0012               	return		;funcret
  5655  003046                     __end_of_calculatedAverageValue:
  5656                           	callstack 0
  5657                           
  5658 ;; *************** function ___lmul *****************
  5659 ;; Defined at:
  5660 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5661 ;; Parameters:    Size  Location     Type
  5662 ;;  multiplier      4    0[COMRAM] unsigned long 
  5663 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5664 ;; Auto vars:     Size  Location     Type
  5665 ;;  product         4    8[COMRAM] unsigned long 
  5666 ;; Return value:  Size  Location     Type
  5667 ;;                  4    0[COMRAM] unsigned long 
  5668 ;; Registers used:
  5669 ;;		wreg, status,2, status,0
  5670 ;; Tracked objects:
  5671 ;;		On entry : 0/0
  5672 ;;		On exit  : 0/0
  5673 ;;		Unchanged: 0/0
  5674 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5675 ;;      Params:         8       0       0       0       0       0       0
  5676 ;;      Locals:         4       0       0       0       0       0       0
  5677 ;;      Temps:          0       0       0       0       0       0       0
  5678 ;;      Totals:        12       0       0       0       0       0       0
  5679 ;;Total ram usage:       12 bytes
  5680 ;; Hardware stack levels used:    1
  5681 ;; Hardware stack levels required when called:    1
  5682 ;; This function calls:
  5683 ;;		Nothing
  5684 ;; This function is called by:
  5685 ;;		_calculatedAverageValue
  5686 ;; This function uses a non-reentrant model
  5687 ;;
  5688                           
  5689                           	psect	text19
  5690  0055E8                     __ptext19:
  5691                           	callstack 0
  5692  0055E8                     ___lmul:
  5693                           	callstack 24
  5694  0055E8  0E00               	movlw	0
  5695  0055EA  6E09               	movwf	___lmul@product^0,c
  5696  0055EC  0E00               	movlw	0
  5697  0055EE  6E0A               	movwf	(___lmul@product+1)^0,c
  5698  0055F0  0E00               	movlw	0
  5699  0055F2  6E0B               	movwf	(___lmul@product+2)^0,c
  5700  0055F4  0E00               	movlw	0
  5701  0055F6  6E0C               	movwf	(___lmul@product+3)^0,c
  5702  0055F8                     l5338:
  5703  0055F8  A001               	btfss	___lmul@multiplier^0,0,c
  5704  0055FA  EF01  F02B         	goto	u6441
  5705  0055FE  EF03  F02B         	goto	u6440
  5706  005602                     u6441:
  5707  005602  EF0B  F02B         	goto	l5342
  5708  005606                     u6440:
  5709  005606  5005               	movf	___lmul@multiplicand^0,w,c
  5710  005608  2609               	addwf	___lmul@product^0,f,c
  5711  00560A  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5712  00560C  220A               	addwfc	(___lmul@product+1)^0,f,c
  5713  00560E  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5714  005610  220B               	addwfc	(___lmul@product+2)^0,f,c
  5715  005612  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5716  005614  220C               	addwfc	(___lmul@product+3)^0,f,c
  5717  005616                     l5342:
  5718  005616  90D8               	bcf	status,0,c
  5719  005618  3605               	rlcf	___lmul@multiplicand^0,f,c
  5720  00561A  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5721  00561C  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5722  00561E  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5723  005620  90D8               	bcf	status,0,c
  5724  005622  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5725  005624  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5726  005626  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5727  005628  3201               	rrcf	___lmul@multiplier^0,f,c
  5728  00562A  5001               	movf	___lmul@multiplier^0,w,c
  5729  00562C  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5730  00562E  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5731  005630  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5732  005632  A4D8               	btfss	status,2,c
  5733  005634  EF1E  F02B         	goto	u6451
  5734  005638  EF20  F02B         	goto	u6450
  5735  00563C                     u6451:
  5736  00563C  EFFC  F02A         	goto	l5338
  5737  005640                     u6450:
  5738  005640  C009  F001         	movff	___lmul@product,?___lmul
  5739  005644  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5740  005648  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5741  00564C  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5742  005650  0012               	return		;funcret
  5743  005652                     __end_of___lmul:
  5744                           	callstack 0
  5745                           
  5746 ;; *************** function ___lldiv *****************
  5747 ;; Defined at:
  5748 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5749 ;; Parameters:    Size  Location     Type
  5750 ;;  dividend        4    0[COMRAM] unsigned long 
  5751 ;;  divisor         4    4[COMRAM] unsigned long 
  5752 ;; Auto vars:     Size  Location     Type
  5753 ;;  quotient        4    8[COMRAM] unsigned long 
  5754 ;;  counter         1   12[COMRAM] unsigned char 
  5755 ;; Return value:  Size  Location     Type
  5756 ;;                  4    0[COMRAM] unsigned long 
  5757 ;; Registers used:
  5758 ;;		wreg, status,2, status,0
  5759 ;; Tracked objects:
  5760 ;;		On entry : 0/0
  5761 ;;		On exit  : 0/0
  5762 ;;		Unchanged: 0/0
  5763 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5764 ;;      Params:         8       0       0       0       0       0       0
  5765 ;;      Locals:         5       0       0       0       0       0       0
  5766 ;;      Temps:          0       0       0       0       0       0       0
  5767 ;;      Totals:        13       0       0       0       0       0       0
  5768 ;;Total ram usage:       13 bytes
  5769 ;; Hardware stack levels used:    1
  5770 ;; Hardware stack levels required when called:    1
  5771 ;; This function calls:
  5772 ;;		Nothing
  5773 ;; This function is called by:
  5774 ;;		_calculatedAverageValue
  5775 ;; This function uses a non-reentrant model
  5776 ;;
  5777                           
  5778                           	psect	text20
  5779  0052C6                     __ptext20:
  5780                           	callstack 0
  5781  0052C6                     ___lldiv:
  5782                           	callstack 24
  5783  0052C6  0E00               	movlw	0
  5784  0052C8  6E09               	movwf	___lldiv@quotient^0,c
  5785  0052CA  0E00               	movlw	0
  5786  0052CC  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5787  0052CE  0E00               	movlw	0
  5788  0052D0  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5789  0052D2  0E00               	movlw	0
  5790  0052D4  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5791  0052D6  5005               	movf	___lldiv@divisor^0,w,c
  5792  0052D8  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5793  0052DA  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5794  0052DC  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5795  0052DE  B4D8               	btfsc	status,2,c
  5796  0052E0  EF74  F029         	goto	u6461
  5797  0052E4  EF76  F029         	goto	u6460
  5798  0052E8                     u6461:
  5799  0052E8  EFAC  F029         	goto	l570
  5800  0052EC                     u6460:
  5801  0052EC  0E01               	movlw	1
  5802  0052EE  6E0D               	movwf	___lldiv@counter^0,c
  5803  0052F0  EF80  F029         	goto	l5354
  5804  0052F4                     l5352:
  5805  0052F4  90D8               	bcf	status,0,c
  5806  0052F6  3605               	rlcf	___lldiv@divisor^0,f,c
  5807  0052F8  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5808  0052FA  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5809  0052FC  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5810  0052FE  2A0D               	incf	___lldiv@counter^0,f,c
  5811  005300                     l5354:
  5812  005300  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5813  005302  EF85  F029         	goto	u6471
  5814  005306  EF87  F029         	goto	u6470
  5815  00530A                     u6471:
  5816  00530A  EF7A  F029         	goto	l5352
  5817  00530E                     u6470:
  5818  00530E                     l5356:
  5819  00530E  90D8               	bcf	status,0,c
  5820  005310  3609               	rlcf	___lldiv@quotient^0,f,c
  5821  005312  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5822  005314  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5823  005316  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5824  005318  5005               	movf	___lldiv@divisor^0,w,c
  5825  00531A  5C01               	subwf	___lldiv@dividend^0,w,c
  5826  00531C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5827  00531E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5828  005320  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5829  005322  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5830  005324  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5831  005326  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5832  005328  A0D8               	btfss	status,0,c
  5833  00532A  EF99  F029         	goto	u6481
  5834  00532E  EF9B  F029         	goto	u6480
  5835  005332                     u6481:
  5836  005332  EFA4  F029         	goto	l5364
  5837  005336                     u6480:
  5838  005336  5005               	movf	___lldiv@divisor^0,w,c
  5839  005338  5E01               	subwf	___lldiv@dividend^0,f,c
  5840  00533A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5841  00533C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5842  00533E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5843  005340  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5844  005342  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5845  005344  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5846  005346  8009               	bsf	___lldiv@quotient^0,0,c
  5847  005348                     l5364:
  5848  005348  90D8               	bcf	status,0,c
  5849  00534A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5850  00534C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5851  00534E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5852  005350  3205               	rrcf	___lldiv@divisor^0,f,c
  5853  005352  2E0D               	decfsz	___lldiv@counter^0,f,c
  5854  005354  EF87  F029         	goto	l5356
  5855  005358                     l570:
  5856  005358  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5857  00535C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5858  005360  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5859  005364  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5860  005368  0012               	return		;funcret
  5861  00536A                     __end_of___lldiv:
  5862                           	callstack 0
  5863                           
  5864 ;; *************** function _driverTimeSettingMenu *****************
  5865 ;; Defined at:
  5866 ;;		line 587 in file "fs_menu_controller.c"
  5867 ;; Parameters:    Size  Location     Type
  5868 ;;		None
  5869 ;; Auto vars:     Size  Location     Type
  5870 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  5871 ;; Return value:  Size  Location     Type
  5872 ;;                  1    wreg      void 
  5873 ;; Registers used:
  5874 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5875 ;; Tracked objects:
  5876 ;;		On entry : 0/0
  5877 ;;		On exit  : 0/0
  5878 ;;		Unchanged: 0/0
  5879 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5880 ;;      Params:         0       0       0       0       0       0       0
  5881 ;;      Locals:         0      16       0       0       0       0       0
  5882 ;;      Temps:          0       0       0       0       0       0       0
  5883 ;;      Totals:         0      16       0       0       0       0       0
  5884 ;;Total ram usage:       16 bytes
  5885 ;; Hardware stack levels used:    1
  5886 ;; Hardware stack levels required when called:    9
  5887 ;; This function calls:
  5888 ;;		_Lcd_Set_Cursor
  5889 ;;		_Lcd_Write_String
  5890 ;;		_eepromWrite
  5891 ;;		_sprintf
  5892 ;;		_stopMotor
  5893 ;; This function is called by:
  5894 ;;		_stateMachine
  5895 ;; This function uses a non-reentrant model
  5896 ;;
  5897                           
  5898                           	psect	text21
  5899  00449C                     __ptext21:
  5900                           	callstack 0
  5901  00449C                     _driverTimeSettingMenu:
  5902                           	callstack 19
  5903  00449C                     
  5904                           ;fs_menu_controller.c: 589:     char textCursor2[16] = {0};
  5905  00449C  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  5906  0044A0  0E0F               	movlw	15
  5907  0044A2                     u7081:
  5908  0044A2  6ADE               	clrf	postinc2,c
  5909  0044A4  06E8               	decf	wreg,f,c
  5910  0044A6  E2FD               	bc	u7081
  5911  0044A8                     
  5912                           ;fs_menu_controller.c: 591:     stopMotor();
  5913  0044A8  EC3D  F02D         	call	_stopMotor	;wreg free
  5914  0044AC                     
  5915                           ;fs_menu_controller.c: 593:     if (menu_flags.menu_input_flag == 1)
  5916  0044AC  0101               	movlb	1	; () banked
  5917  0044AE  05B7               	decf	_menu_flags& (0+255),w,b
  5918  0044B0  A4D8               	btfss	status,2,c
  5919  0044B2  EF5D  F022         	goto	u7091
  5920  0044B6  EF5F  F022         	goto	u7090
  5921  0044BA                     u7091:
  5922  0044BA  EF64  F022         	goto	l5826
  5923  0044BE                     u7090:
  5924  0044BE                     
  5925                           ; BSR set to: 1
  5926                           ;fs_menu_controller.c: 594:     {;fs_menu_controller.c: 595:         menu_flags.menu_inp
      +                          ut_flag = 0;
  5927  0044BE  0E00               	movlw	0
  5928  0044C0  6FB7               	movwf	_menu_flags& (0+255),b
  5929                           
  5930                           ;fs_menu_controller.c: 596:         menu_selected = STOP_TIME_SETTING;
  5931  0044C2  0E02               	movlw	2
  5932  0044C4  0100               	movlb	0	; () banked
  5933  0044C6  6FFA               	movwf	_menu_selected& (0+255),b
  5934  0044C8                     l5826:
  5935                           
  5936                           ;fs_menu_controller.c: 599:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  5937  0044C8  0101               	movlb	1	; () banked
  5938  0044CA  05BB               	decf	(_menu_flags+4)& (0+255),w,b
  5939  0044CC  A4D8               	btfss	status,2,c
  5940  0044CE  EF6B  F022         	goto	u7101
  5941  0044D2  EF6D  F022         	goto	u7100
  5942  0044D6                     u7101:
  5943  0044D6  EF89  F022         	goto	l5844
  5944  0044DA                     u7100:
  5945  0044DA                     
  5946                           ; BSR set to: 1
  5947  0044DA  0E1E               	movlw	30
  5948  0044DC  0100               	movlb	0	; () banked
  5949  0044DE  61F3               	cpfslt	_menu_value& (0+255),b
  5950  0044E0  EF74  F022         	goto	u7111
  5951  0044E4  EF76  F022         	goto	u7110
  5952  0044E8                     u7111:
  5953  0044E8  EF89  F022         	goto	l5844
  5954  0044EC                     u7110:
  5955  0044EC                     
  5956                           ; BSR set to: 0
  5957                           ;fs_menu_controller.c: 600:     {;fs_menu_controller.c: 601:         menu_flags.menu_inc
      +                          rease_flag = 0;
  5958  0044EC  0E00               	movlw	0
  5959  0044EE  0101               	movlb	1	; () banked
  5960  0044F0  6FBB               	movwf	(_menu_flags+4)& (0+255),b
  5961  0044F2                     
  5962                           ; BSR set to: 1
  5963                           ;fs_menu_controller.c: 602:         menu_value.driver_time++;
  5964  0044F2  0100               	movlb	0	; () banked
  5965  0044F4  2BF3               	incf	_menu_value& (0+255),f,b
  5966  0044F6                     
  5967                           ; BSR set to: 0
  5968                           ;fs_menu_controller.c: 603:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5969  0044F6  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5970  0044FA  0E00               	movlw	0
  5971  0044FC  EC1B  F02E         	call	_eepromWrite
  5972  004500                     
  5973                           ;fs_menu_controller.c: 604:         timer_value.minute =0 ;
  5974  004500  0E00               	movlw	0
  5975  004502  0101               	movlb	1	; () banked
  5976  004504  6FB0               	movwf	(_timer_value+1)& (0+255),b
  5977  004506                     
  5978                           ; BSR set to: 1
  5979                           ;fs_menu_controller.c: 605:         timer_value.second = 0;
  5980  004506  0E00               	movlw	0
  5981  004508  6FAF               	movwf	_timer_value& (0+255),b
  5982  00450A                     
  5983                           ; BSR set to: 1
  5984                           ;fs_menu_controller.c: 606:         timer_value.remainingSecond = 0;
  5985  00450A  0E00               	movlw	0
  5986  00450C  6FB1               	movwf	(_timer_value+2)& (0+255),b
  5987  00450E                     
  5988                           ; BSR set to: 1
  5989                           ;fs_menu_controller.c: 607:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  5990  00450E  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  5991  004512                     l5844:
  5992                           
  5993                           ;fs_menu_controller.c: 610:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  5994  004512  0101               	movlb	1	; () banked
  5995  004514  05BC               	decf	(_menu_flags+5)& (0+255),w,b
  5996  004516  A4D8               	btfss	status,2,c
  5997  004518  EF90  F022         	goto	u7121
  5998  00451C  EF92  F022         	goto	u7120
  5999  004520                     u7121:
  6000  004520  EFAE  F022         	goto	l5862
  6001  004524                     u7120:
  6002  004524                     
  6003                           ; BSR set to: 1
  6004  004524  0100               	movlb	0	; () banked
  6005  004526  51F3               	movf	_menu_value& (0+255),w,b
  6006  004528  B4D8               	btfsc	status,2,c
  6007  00452A  EF99  F022         	goto	u7131
  6008  00452E  EF9B  F022         	goto	u7130
  6009  004532                     u7131:
  6010  004532  EFAE  F022         	goto	l5862
  6011  004536                     u7130:
  6012  004536                     
  6013                           ; BSR set to: 0
  6014                           ;fs_menu_controller.c: 611:     {;fs_menu_controller.c: 612:          menu_flags.menu_de
      +                          crease_flag = 0;
  6015  004536  0E00               	movlw	0
  6016  004538  0101               	movlb	1	; () banked
  6017  00453A  6FBC               	movwf	(_menu_flags+5)& (0+255),b
  6018  00453C                     
  6019                           ; BSR set to: 1
  6020                           ;fs_menu_controller.c: 613:          menu_value.driver_time--;
  6021  00453C  0100               	movlb	0	; () banked
  6022  00453E  07F3               	decf	_menu_value& (0+255),f,b
  6023  004540                     
  6024                           ; BSR set to: 0
  6025                           ;fs_menu_controller.c: 614:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6026  004540  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6027  004544  0E00               	movlw	0
  6028  004546  EC1B  F02E         	call	_eepromWrite
  6029  00454A                     
  6030                           ;fs_menu_controller.c: 615:          timer_value.minute =0 ;
  6031  00454A  0E00               	movlw	0
  6032  00454C  0101               	movlb	1	; () banked
  6033  00454E  6FB0               	movwf	(_timer_value+1)& (0+255),b
  6034  004550                     
  6035                           ; BSR set to: 1
  6036                           ;fs_menu_controller.c: 616:          timer_value.second = 0;
  6037  004550  0E00               	movlw	0
  6038  004552  6FAF               	movwf	_timer_value& (0+255),b
  6039  004554                     
  6040                           ; BSR set to: 1
  6041                           ;fs_menu_controller.c: 617:          timer_value.remainingSecond = 0;
  6042  004554  0E00               	movlw	0
  6043  004556  6FB1               	movwf	(_timer_value+2)& (0+255),b
  6044  004558                     
  6045                           ; BSR set to: 1
  6046                           ;fs_menu_controller.c: 618:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  6047  004558  C0F3  F1B2         	movff	_menu_value,_timer_value+3
  6048  00455C                     l5862:
  6049                           
  6050                           ;fs_menu_controller.c: 620:     Lcd_Set_Cursor(1,1);
  6051  00455C  0E01               	movlw	1
  6052  00455E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6053  004560  0E01               	movlw	1
  6054  004562  EC5E  F02B         	call	_Lcd_Set_Cursor
  6055  004566                     
  6056                           ;fs_menu_controller.c: 621:     Lcd_Write_String("HAREKT ZAMANI dk");
  6057  004566  0E68               	movlw	low STR_15
  6058  004568  6E05               	movwf	Lcd_Write_String@a^0,c
  6059  00456A  0E06               	movlw	high STR_15
  6060  00456C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6061  00456E  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  6062  004572                     
  6063                           ;fs_menu_controller.c: 622:     Lcd_Set_Cursor(2,1);
  6064  004572  0E01               	movlw	1
  6065  004574  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6066  004576  0E02               	movlw	2
  6067  004578  EC5E  F02B         	call	_Lcd_Set_Cursor
  6068  00457C                     
  6069                           ;fs_menu_controller.c: 623:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  6070  00457C  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6071  00457E  0100               	movlb	0	; () banked
  6072  004580  6FCF               	movwf	sprintf@s& (0+255),b
  6073  004582  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6074  004584  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  6075  004586  0E01               	movlw	low STR_12
  6076  004588  6FD1               	movwf	sprintf@fmt& (0+255),b
  6077  00458A  0E06               	movlw	high STR_12
  6078  00458C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  6079  00458E  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  6080  004592  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  6081  004594  EC46  F02C         	call	_sprintf	;wreg free
  6082  004598                     
  6083                           ;fs_menu_controller.c: 624:     Lcd_Write_String(textCursor2);
  6084  004598  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6085  00459A  6E05               	movwf	Lcd_Write_String@a^0,c
  6086  00459C  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6087  00459E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6088  0045A0  EC00  F02A         	call	_Lcd_Write_String	;wreg free
  6089  0045A4                     
  6090                           ;fs_menu_controller.c: 626:     if(timer_value.menu_login_delay == 100)
  6091  0045A4  0E64               	movlw	100
  6092  0045A6  0101               	movlb	1	; () banked
  6093  0045A8  19B3               	xorwf	(_timer_value+4)& (0+255),w,b
  6094  0045AA  A4D8               	btfss	status,2,c
  6095  0045AC  EFDA  F022         	goto	u7141
  6096  0045B0  EFDC  F022         	goto	u7140
  6097  0045B4                     u7141:
  6098  0045B4  EFE1  F022         	goto	l435
  6099  0045B8                     u7140:
  6100  0045B8                     
  6101                           ; BSR set to: 1
  6102                           ;fs_menu_controller.c: 627:     {;fs_menu_controller.c: 628:         timer_value.menu_lo
      +                          gin_delay = 0;
  6103  0045B8  0E00               	movlw	0
  6104  0045BA  6FB3               	movwf	(_timer_value+4)& (0+255),b
  6105                           
  6106                           ;fs_menu_controller.c: 629:         menu_selected = PAUSE_MENU;
  6107  0045BC  0E06               	movlw	6
  6108  0045BE  0100               	movlb	0	; () banked
  6109  0045C0  6FFA               	movwf	_menu_selected& (0+255),b
  6110  0045C2                     l435:
  6111  0045C2  0012               	return		;funcret
  6112  0045C4                     __end_of_driverTimeSettingMenu:
  6113                           	callstack 0
  6114                           
  6115 ;; *************** function _stopMotor *****************
  6116 ;; Defined at:
  6117 ;;		line 79 in file "fs_speed_controller.c"
  6118 ;; Parameters:    Size  Location     Type
  6119 ;;		None
  6120 ;; Auto vars:     Size  Location     Type
  6121 ;;		None
  6122 ;; Return value:  Size  Location     Type
  6123 ;;                  1    wreg      void 
  6124 ;; Registers used:
  6125 ;;		wreg, status,2, status,0, cstack
  6126 ;; Tracked objects:
  6127 ;;		On entry : 0/0
  6128 ;;		On exit  : 0/0
  6129 ;;		Unchanged: 0/0
  6130 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6131 ;;      Params:         0       0       0       0       0       0       0
  6132 ;;      Locals:         0       0       0       0       0       0       0
  6133 ;;      Temps:          0       0       0       0       0       0       0
  6134 ;;      Totals:         0       0       0       0       0       0       0
  6135 ;;Total ram usage:        0 bytes
  6136 ;; Hardware stack levels used:    1
  6137 ;; Hardware stack levels required when called:    3
  6138 ;; This function calls:
  6139 ;;		_PWM1_setDC
  6140 ;;		_PWM2_setDC
  6141 ;; This function is called by:
  6142 ;;		_stopMenu
  6143 ;;		_pauseMenu
  6144 ;;		_secretMenu
  6145 ;;		_speedLimitSettingMenu
  6146 ;;		_stopTimeSettingMenu
  6147 ;;		_driverTimeSettingMenu
  6148 ;; This function uses a non-reentrant model
  6149 ;;
  6150                           
  6151                           	psect	text22
  6152  005A7A                     __ptext22:
  6153                           	callstack 0
  6154  005A7A                     _stopMotor:
  6155                           	callstack 24
  6156  005A7A                     
  6157                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  6158  005A7A  0E00               	movlw	0
  6159  005A7C  0101               	movlb	1	; () banked
  6160  005A7E  6F59               	movwf	(_controller+9)& (0+255),b
  6161  005A80  0E00               	movlw	0
  6162  005A82  6F58               	movwf	(_controller+8)& (0+255),b
  6163                           
  6164                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  6165  005A84  0E00               	movlw	0
  6166  005A86  6F57               	movwf	(_controller+7)& (0+255),b
  6167  005A88  0E00               	movlw	0
  6168  005A8A  6F56               	movwf	(_controller+6)& (0+255),b
  6169                           
  6170                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  6171  005A8C  0E00               	movlw	0
  6172  005A8E  6FAB               	movwf	(_driver_limit+8)& (0+255),b
  6173  005A90  0E00               	movlw	0
  6174  005A92  6FAC               	movwf	(_driver_limit+9)& (0+255),b
  6175  005A94  0E00               	movlw	0
  6176  005A96  6FAD               	movwf	(_driver_limit+10)& (0+255),b
  6177  005A98  0E00               	movlw	0
  6178  005A9A  6FAE               	movwf	(_driver_limit+11)& (0+255),b
  6179  005A9C                     
  6180                           ; BSR set to: 1
  6181                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  6182  005A9C  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  6183  005AA0  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  6184  005AA4  EC7C  F02A         	call	_PWM1_setDC	;wreg free
  6185  005AA8                     
  6186                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  6187  005AA8  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  6188  005AAC  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  6189  005AB0  EC3F  F02A         	call	_PWM2_setDC	;wreg free
  6190  005AB4  0012               	return		;funcret
  6191  005AB6                     __end_of_stopMotor:
  6192                           	callstack 0
  6193                           
  6194 ;; *************** function _PWM2_setDC *****************
  6195 ;; Defined at:
  6196 ;;		line 59 in file "fs_pwm.c"
  6197 ;; Parameters:    Size  Location     Type
  6198 ;;  dutycycle       2   87[COMRAM] short 
  6199 ;; Auto vars:     Size  Location     Type
  6200 ;;  duty            2   91[COMRAM] unsigned short 
  6201 ;; Return value:  Size  Location     Type
  6202 ;;                  1    wreg      void 
  6203 ;; Registers used:
  6204 ;;		wreg, status,2, status,0, cstack
  6205 ;; Tracked objects:
  6206 ;;		On entry : 0/0
  6207 ;;		On exit  : 0/0
  6208 ;;		Unchanged: 0/0
  6209 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6210 ;;      Params:         2       0       0       0       0       0       0
  6211 ;;      Locals:         2       0       0       0       0       0       0
  6212 ;;      Temps:          2       0       0       0       0       0       0
  6213 ;;      Totals:         6       0       0       0       0       0       0
  6214 ;;Total ram usage:        6 bytes
  6215 ;; Hardware stack levels used:    1
  6216 ;; Hardware stack levels required when called:    2
  6217 ;; This function calls:
  6218 ;;		___fltol
  6219 ;;		___xxtofl
  6220 ;;		_fabsf
  6221 ;; This function is called by:
  6222 ;;		_main
  6223 ;;		_stopMotor
  6224 ;;		_startMotor
  6225 ;; This function uses a non-reentrant model
  6226 ;;
  6227                           
  6228                           	psect	text23
  6229  00547E                     __ptext23:
  6230                           	callstack 0
  6231  00547E                     _PWM2_setDC:
  6232                           	callstack 24
  6233  00547E                     
  6234                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  6235  00547E  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  6236  005480  EF4B  F02A         	goto	u6810
  6237  005484  0E04               	movlw	4
  6238  005486  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  6239  005488  B0D8               	btfsc	status,0,c
  6240  00548A  EF49  F02A         	goto	u6811
  6241  00548E  EF4B  F02A         	goto	u6810
  6242  005492                     u6811:
  6243  005492  EF7B  F02A         	goto	l464
  6244  005496                     u6810:
  6245  005496                     
  6246                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  6247  005496  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  6248  00549A  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  6249  00549E  0E00               	movlw	0
  6250  0054A0  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6251  0054A2  0EFF               	movlw	-1
  6252  0054A4  6E10               	movwf	(___xxtofl@val+2)^0,c
  6253  0054A6  6E11               	movwf	(___xxtofl@val+3)^0,c
  6254  0054A8  0E01               	movlw	1
  6255  0054AA  ECCF  F01D         	call	___xxtofl
  6256  0054AE  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6257  0054B2  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6258  0054B6  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6259  0054BA  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6260  0054BE  EC01  F02E         	call	_fabsf	;wreg free
  6261  0054C2  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6262  0054C6  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6263  0054CA  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6264  0054CE  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6265  0054D2  ECF6  F023         	call	___fltol	;wreg free
  6266  0054D6  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  6267  0054DA  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  6268  0054DE                     
  6269                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  6270  0054DE  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  6271  0054E2  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  6272  0054E6  90D8               	bcf	status,0,c
  6273  0054E8  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6274  0054EA  325A               	rrcf	??_PWM2_setDC^0,f,c
  6275  0054EC  90D8               	bcf	status,0,c
  6276  0054EE  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6277  0054F0  325A               	rrcf	??_PWM2_setDC^0,f,c
  6278  0054F2  505A               	movf	??_PWM2_setDC^0,w,c
  6279  0054F4  6E67               	movwf	103,c	;volatile
  6280  0054F6                     l464:
  6281  0054F6  0012               	return		;funcret
  6282  0054F8                     __end_of_PWM2_setDC:
  6283                           	callstack 0
  6284                           
  6285 ;; *************** function _PWM1_setDC *****************
  6286 ;; Defined at:
  6287 ;;		line 43 in file "fs_pwm.c"
  6288 ;; Parameters:    Size  Location     Type
  6289 ;;  dutycycle       2   87[COMRAM] short 
  6290 ;; Auto vars:     Size  Location     Type
  6291 ;;  duty            2   91[COMRAM] unsigned short 
  6292 ;; Return value:  Size  Location     Type
  6293 ;;                  1    wreg      void 
  6294 ;; Registers used:
  6295 ;;		wreg, status,2, status,0, cstack
  6296 ;; Tracked objects:
  6297 ;;		On entry : 0/0
  6298 ;;		On exit  : 0/0
  6299 ;;		Unchanged: 0/0
  6300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6301 ;;      Params:         2       0       0       0       0       0       0
  6302 ;;      Locals:         2       0       0       0       0       0       0
  6303 ;;      Temps:          2       0       0       0       0       0       0
  6304 ;;      Totals:         6       0       0       0       0       0       0
  6305 ;;Total ram usage:        6 bytes
  6306 ;; Hardware stack levels used:    1
  6307 ;; Hardware stack levels required when called:    2
  6308 ;; This function calls:
  6309 ;;		___fltol
  6310 ;;		___xxtofl
  6311 ;;		_fabsf
  6312 ;; This function is called by:
  6313 ;;		_main
  6314 ;;		_stopMotor
  6315 ;;		_startMotor
  6316 ;; This function uses a non-reentrant model
  6317 ;;
  6318                           
  6319                           	psect	text24
  6320  0054F8                     __ptext24:
  6321                           	callstack 0
  6322  0054F8                     _PWM1_setDC:
  6323                           	callstack 24
  6324  0054F8                     
  6325                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  6326  0054F8  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  6327  0054FA  EF88  F02A         	goto	u6800
  6328  0054FE  0E04               	movlw	4
  6329  005500  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  6330  005502  B0D8               	btfsc	status,0,c
  6331  005504  EF86  F02A         	goto	u6801
  6332  005508  EF88  F02A         	goto	u6800
  6333  00550C                     u6801:
  6334  00550C  EFB8  F02A         	goto	l460
  6335  005510                     u6800:
  6336  005510                     
  6337                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  6338  005510  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  6339  005514  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  6340  005518  0E00               	movlw	0
  6341  00551A  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6342  00551C  0EFF               	movlw	-1
  6343  00551E  6E10               	movwf	(___xxtofl@val+2)^0,c
  6344  005520  6E11               	movwf	(___xxtofl@val+3)^0,c
  6345  005522  0E01               	movlw	1
  6346  005524  ECCF  F01D         	call	___xxtofl
  6347  005528  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6348  00552C  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6349  005530  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6350  005534  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6351  005538  EC01  F02E         	call	_fabsf	;wreg free
  6352  00553C  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6353  005540  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6354  005544  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6355  005548  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6356  00554C  ECF6  F023         	call	___fltol	;wreg free
  6357  005550  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  6358  005554  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  6359  005558                     
  6360                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  6361  005558  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  6362  00555C  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  6363  005560  90D8               	bcf	status,0,c
  6364  005562  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6365  005564  325A               	rrcf	??_PWM1_setDC^0,f,c
  6366  005566  90D8               	bcf	status,0,c
  6367  005568  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6368  00556A  325A               	rrcf	??_PWM1_setDC^0,f,c
  6369  00556C  505A               	movf	??_PWM1_setDC^0,w,c
  6370  00556E  6EBE               	movwf	190,c	;volatile
  6371  005570                     l460:
  6372  005570  0012               	return		;funcret
  6373  005572                     __end_of_PWM1_setDC:
  6374                           	callstack 0
  6375                           
  6376 ;; *************** function _fabsf *****************
  6377 ;; Defined at:
  6378 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  6379 ;; Parameters:    Size  Location     Type
  6380 ;;  x               4   27[COMRAM] float 
  6381 ;; Auto vars:     Size  Location     Type
  6382 ;;  u               4   31[COMRAM] struct .
  6383 ;; Return value:  Size  Location     Type
  6384 ;;                  4   27[COMRAM] float 
  6385 ;; Registers used:
  6386 ;;		status,2, status,0
  6387 ;; Tracked objects:
  6388 ;;		On entry : 0/0
  6389 ;;		On exit  : 0/0
  6390 ;;		Unchanged: 0/0
  6391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6392 ;;      Params:         4       0       0       0       0       0       0
  6393 ;;      Locals:         4       0       0       0       0       0       0
  6394 ;;      Temps:          0       0       0       0       0       0       0
  6395 ;;      Totals:         8       0       0       0       0       0       0
  6396 ;;Total ram usage:        8 bytes
  6397 ;; Hardware stack levels used:    1
  6398 ;; Hardware stack levels required when called:    1
  6399 ;; This function calls:
  6400 ;;		Nothing
  6401 ;; This function is called by:
  6402 ;;		_PWM1_setDC
  6403 ;;		_PWM2_setDC
  6404 ;; This function uses a non-reentrant model
  6405 ;;
  6406                           
  6407                           	psect	text25
  6408  005C02                     __ptext25:
  6409                           	callstack 0
  6410  005C02                     _fabsf:
  6411                           	callstack 24
  6412  005C02  C1CB  F020         	movff	fabsf@F463,fabsf@u
  6413  005C06  C1CC  F021         	movff	fabsf@F463+1,fabsf@u+1
  6414  005C0A  C1CD  F022         	movff	fabsf@F463+2,fabsf@u+2
  6415  005C0E  C1CE  F023         	movff	fabsf@F463+3,fabsf@u+3
  6416  005C12  C01C  F020         	movff	fabsf@x,fabsf@u
  6417  005C16  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  6418  005C1A  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  6419  005C1E  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  6420  005C22  9E23               	bcf	(fabsf@u+3)^0,7,c
  6421  005C24  C020  F01C         	movff	fabsf@u,?_fabsf
  6422  005C28  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  6423  005C2C  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  6424  005C30  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  6425  005C34  0012               	return		;funcret
  6426  005C36                     __end_of_fabsf:
  6427                           	callstack 0
  6428                           
  6429 ;; *************** function ___xxtofl *****************
  6430 ;; Defined at:
  6431 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  6432 ;; Parameters:    Size  Location     Type
  6433 ;;  sign            1    wreg     unsigned char 
  6434 ;;  val             4   13[COMRAM] long 
  6435 ;; Auto vars:     Size  Location     Type
  6436 ;;  sign            1   21[COMRAM] unsigned char 
  6437 ;;  arg             4   23[COMRAM] unsigned long 
  6438 ;;  exp             1   22[COMRAM] unsigned char 
  6439 ;; Return value:  Size  Location     Type
  6440 ;;                  4   13[COMRAM] unsigned char 
  6441 ;; Registers used:
  6442 ;;		wreg, status,2, status,0
  6443 ;; Tracked objects:
  6444 ;;		On entry : 0/0
  6445 ;;		On exit  : 0/0
  6446 ;;		Unchanged: 0/0
  6447 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6448 ;;      Params:         4       0       0       0       0       0       0
  6449 ;;      Locals:         6       0       0       0       0       0       0
  6450 ;;      Temps:          4       0       0       0       0       0       0
  6451 ;;      Totals:        14       0       0       0       0       0       0
  6452 ;;Total ram usage:       14 bytes
  6453 ;; Hardware stack levels used:    1
  6454 ;; Hardware stack levels required when called:    1
  6455 ;; This function calls:
  6456 ;;		Nothing
  6457 ;; This function is called by:
  6458 ;;		_scanAdcConversion
  6459 ;;		_calculatedAverageValue
  6460 ;;		_PWM1_setDC
  6461 ;;		_PWM2_setDC
  6462 ;;		_speedControl
  6463 ;; This function uses a non-reentrant model
  6464 ;;
  6465                           
  6466                           	psect	text26
  6467  003B9E                     __ptext26:
  6468                           	callstack 0
  6469  003B9E                     ___xxtofl:
  6470                           	callstack 24
  6471                           
  6472                           ;incstack = 0
  6473                           ;___xxtofl@sign stored from wreg
  6474  003B9E  6E16               	movwf	___xxtofl@sign^0,c
  6475  003BA0  5016               	movf	___xxtofl@sign^0,w,c
  6476  003BA2  B4D8               	btfsc	status,2,c
  6477  003BA4  EFD6  F01D         	goto	u6491
  6478  003BA8  EFD8  F01D         	goto	u6490
  6479  003BAC                     u6491:
  6480  003BAC  EFFA  F01D         	goto	l1198
  6481  003BB0                     u6490:
  6482  003BB0  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6483  003BB2  EFDF  F01D         	goto	u6500
  6484  003BB6  EFDD  F01D         	goto	u6501
  6485  003BBA                     u6501:
  6486  003BBA  EFFA  F01D         	goto	l1198
  6487  003BBE                     u6500:
  6488  003BBE  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6489  003BC2  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6490  003BC6  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6491  003BCA  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6492  003BCE  1E12               	comf	??___xxtofl^0,f,c
  6493  003BD0  1E13               	comf	(??___xxtofl+1)^0,f,c
  6494  003BD2  1E14               	comf	(??___xxtofl+2)^0,f,c
  6495  003BD4  1E15               	comf	(??___xxtofl+3)^0,f,c
  6496  003BD6  2A12               	incf	??___xxtofl^0,f,c
  6497  003BD8  0E00               	movlw	0
  6498  003BDA  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6499  003BDC  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6500  003BDE  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6501  003BE0  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6502  003BE4  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6503  003BE8  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6504  003BEC  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6505  003BF0  EF02  F01E         	goto	l5374
  6506  003BF4                     l1198:
  6507  003BF4  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6508  003BF8  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6509  003BFC  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6510  003C00  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6511  003C04                     l5374:
  6512  003C04  500E               	movf	___xxtofl@val^0,w,c
  6513  003C06  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6514  003C08  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6515  003C0A  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6516  003C0C  A4D8               	btfss	status,2,c
  6517  003C0E  EF0B  F01E         	goto	u6511
  6518  003C12  EF0D  F01E         	goto	u6510
  6519  003C16                     u6511:
  6520  003C16  EF17  F01E         	goto	l5380
  6521  003C1A                     u6510:
  6522  003C1A  0E00               	movlw	0
  6523  003C1C  6E0E               	movwf	?___xxtofl^0,c
  6524  003C1E  0E00               	movlw	0
  6525  003C20  6E0F               	movwf	(?___xxtofl+1)^0,c
  6526  003C22  0E00               	movlw	0
  6527  003C24  6E10               	movwf	(?___xxtofl+2)^0,c
  6528  003C26  0E00               	movlw	0
  6529  003C28  6E11               	movwf	(?___xxtofl+3)^0,c
  6530  003C2A  EFA8  F01E         	goto	l1201
  6531  003C2E                     l5380:
  6532  003C2E  0E96               	movlw	150
  6533  003C30  6E17               	movwf	___xxtofl@exp^0,c
  6534  003C32  EF21  F01E         	goto	l5384
  6535  003C36                     l5382:
  6536  003C36  2A17               	incf	___xxtofl@exp^0,f,c
  6537  003C38  90D8               	bcf	status,0,c
  6538  003C3A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6539  003C3C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6540  003C3E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6541  003C40  3218               	rrcf	___xxtofl@arg^0,f,c
  6542  003C42                     l5384:
  6543  003C42  0E00               	movlw	0
  6544  003C44  1418               	andwf	___xxtofl@arg^0,w,c
  6545  003C46  6E12               	movwf	??___xxtofl^0,c
  6546  003C48  0E00               	movlw	0
  6547  003C4A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6548  003C4C  6E13               	movwf	(??___xxtofl+1)^0,c
  6549  003C4E  0E00               	movlw	0
  6550  003C50  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6551  003C52  6E14               	movwf	(??___xxtofl+2)^0,c
  6552  003C54  0EFE               	movlw	254
  6553  003C56  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6554  003C58  6E15               	movwf	(??___xxtofl+3)^0,c
  6555  003C5A  5012               	movf	??___xxtofl^0,w,c
  6556  003C5C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6557  003C5E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6558  003C60  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6559  003C62  A4D8               	btfss	status,2,c
  6560  003C64  EF36  F01E         	goto	u6521
  6561  003C68  EF38  F01E         	goto	u6520
  6562  003C6C                     u6521:
  6563  003C6C  EF1B  F01E         	goto	l5382
  6564  003C70                     u6520:
  6565  003C70  EF46  F01E         	goto	l1205
  6566  003C74                     l5386:
  6567  003C74  2A17               	incf	___xxtofl@exp^0,f,c
  6568  003C76  0E01               	movlw	1
  6569  003C78  2618               	addwf	___xxtofl@arg^0,f,c
  6570  003C7A  0E00               	movlw	0
  6571  003C7C  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6572  003C7E  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6573  003C80  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6574  003C82  90D8               	bcf	status,0,c
  6575  003C84  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6576  003C86  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6577  003C88  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6578  003C8A  3218               	rrcf	___xxtofl@arg^0,f,c
  6579  003C8C                     l1205:
  6580  003C8C  0E00               	movlw	0
  6581  003C8E  1418               	andwf	___xxtofl@arg^0,w,c
  6582  003C90  6E12               	movwf	??___xxtofl^0,c
  6583  003C92  0E00               	movlw	0
  6584  003C94  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6585  003C96  6E13               	movwf	(??___xxtofl+1)^0,c
  6586  003C98  0E00               	movlw	0
  6587  003C9A  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6588  003C9C  6E14               	movwf	(??___xxtofl+2)^0,c
  6589  003C9E  0EFF               	movlw	255
  6590  003CA0  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6591  003CA2  6E15               	movwf	(??___xxtofl+3)^0,c
  6592  003CA4  5012               	movf	??___xxtofl^0,w,c
  6593  003CA6  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6594  003CA8  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6595  003CAA  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6596  003CAC  A4D8               	btfss	status,2,c
  6597  003CAE  EF5B  F01E         	goto	u6531
  6598  003CB2  EF5D  F01E         	goto	u6530
  6599  003CB6                     u6531:
  6600  003CB6  EF3A  F01E         	goto	l5386
  6601  003CBA                     u6530:
  6602  003CBA  EF65  F01E         	goto	l5394
  6603  003CBE                     l5392:
  6604  003CBE  0617               	decf	___xxtofl@exp^0,f,c
  6605  003CC0  90D8               	bcf	status,0,c
  6606  003CC2  3618               	rlcf	___xxtofl@arg^0,f,c
  6607  003CC4  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6608  003CC6  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6609  003CC8  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6610  003CCA                     l5394:
  6611  003CCA  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6612  003CCC  EF6A  F01E         	goto	u6541
  6613  003CD0  EF6C  F01E         	goto	u6540
  6614  003CD4                     u6541:
  6615  003CD4  EF74  F01E         	goto	l1212
  6616  003CD8                     u6540:
  6617  003CD8  0E02               	movlw	2
  6618  003CDA  6017               	cpfslt	___xxtofl@exp^0,c
  6619  003CDC  EF72  F01E         	goto	u6551
  6620  003CE0  EF74  F01E         	goto	u6550
  6621  003CE4                     u6551:
  6622  003CE4  EF5F  F01E         	goto	l5392
  6623  003CE8                     u6550:
  6624  003CE8                     l1212:
  6625  003CE8  B017               	btfsc	___xxtofl@exp^0,0,c
  6626  003CEA  EF79  F01E         	goto	u6561
  6627  003CEE  EF7B  F01E         	goto	u6560
  6628  003CF2                     u6561:
  6629  003CF2  EF7C  F01E         	goto	l5400
  6630  003CF6                     u6560:
  6631  003CF6  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6632  003CF8                     l5400:
  6633  003CF8  90D8               	bcf	status,0,c
  6634  003CFA  3217               	rrcf	___xxtofl@exp^0,f,c
  6635  003CFC  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6636  003D00  6A13               	clrf	(??___xxtofl+1)^0,c
  6637  003D02  6A14               	clrf	(??___xxtofl+2)^0,c
  6638  003D04  6A15               	clrf	(??___xxtofl+3)^0,c
  6639  003D06  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6640  003D0A  6A14               	clrf	(??___xxtofl+2)^0,c
  6641  003D0C  6A13               	clrf	(??___xxtofl+1)^0,c
  6642  003D0E  6A12               	clrf	??___xxtofl^0,c
  6643  003D10  5012               	movf	??___xxtofl^0,w,c
  6644  003D12  1218               	iorwf	___xxtofl@arg^0,f,c
  6645  003D14  5013               	movf	(??___xxtofl+1)^0,w,c
  6646  003D16  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6647  003D18  5014               	movf	(??___xxtofl+2)^0,w,c
  6648  003D1A  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6649  003D1C  5015               	movf	(??___xxtofl+3)^0,w,c
  6650  003D1E  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6651  003D20  5016               	movf	___xxtofl@sign^0,w,c
  6652  003D22  B4D8               	btfsc	status,2,c
  6653  003D24  EF96  F01E         	goto	u6571
  6654  003D28  EF98  F01E         	goto	u6570
  6655  003D2C                     u6571:
  6656  003D2C  EFA0  F01E         	goto	l5410
  6657  003D30                     u6570:
  6658  003D30  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6659  003D32  EF9F  F01E         	goto	u6580
  6660  003D36  EF9D  F01E         	goto	u6581
  6661  003D3A                     u6581:
  6662  003D3A  EFA0  F01E         	goto	l5410
  6663  003D3E                     u6580:
  6664  003D3E  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6665  003D40                     l5410:
  6666  003D40  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6667  003D44  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6668  003D48  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6669  003D4C  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6670  003D50                     l1201:
  6671  003D50  0012               	return		;funcret
  6672  003D52                     __end_of___xxtofl:
  6673                           	callstack 0
  6674                           
  6675 ;; *************** function _sprintf *****************
  6676 ;; Defined at:
  6677 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6678 ;; Parameters:    Size  Location     Type
  6679 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6680 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  6681 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  6682 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6683 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
  6684 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
  6685 ;; Auto vars:     Size  Location     Type
  6686 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6687 ;;  ap              2  121[BANK0 ] PTR void [1]
  6688 ;;		 -> ?_sprintf(2), 
  6689 ;;  ret             2    0        int 
  6690 ;; Return value:  Size  Location     Type
  6691 ;;                  2  111[BANK0 ] int 
  6692 ;; Registers used:
  6693 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6694 ;; Tracked objects:
  6695 ;;		On entry : 0/0
  6696 ;;		On exit  : 0/0
  6697 ;;		Unchanged: 0/0
  6698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6699 ;;      Params:         0       8       0       0       0       0       0
  6700 ;;      Locals:         0      10       0       0       0       0       0
  6701 ;;      Temps:          0       0       0       0       0       0       0
  6702 ;;      Totals:         0      18       0       0       0       0       0
  6703 ;;Total ram usage:       18 bytes
  6704 ;; Hardware stack levels used:    1
  6705 ;; Hardware stack levels required when called:    8
  6706 ;; This function calls:
  6707 ;;		_vfprintf
  6708 ;; This function is called by:
  6709 ;;		_mainMenu
  6710 ;;		_stopMenu
  6711 ;;		_pauseMenu
  6712 ;;		_secretMenu
  6713 ;;		_speedLimitSettingMenu
  6714 ;;		_stopTimeSettingMenu
  6715 ;;		_driverTimeSettingMenu
  6716 ;; This function uses a non-reentrant model
  6717 ;;
  6718                           
  6719                           	psect	text27
  6720  00588C                     __ptext27:
  6721                           	callstack 0
  6722  00588C                     _sprintf:
  6723                           	callstack 19
  6724  00588C  0ED3               	movlw	low (?_sprintf+4)
  6725  00588E  0100               	movlb	0	; () banked
  6726  005890  6FD9               	movwf	sprintf@ap& (0+255),b
  6727  005892  0E00               	movlw	high (?_sprintf+4)
  6728  005894  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6729  005896  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6730  00589A  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6731  00589E                     
  6732                           ; BSR set to: 0
  6733  00589E  0E00               	movlw	0
  6734  0058A0  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6735  0058A2  0E00               	movlw	0
  6736  0058A4  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6737  0058A6                     
  6738                           ; BSR set to: 0
  6739  0058A6  0E00               	movlw	0
  6740  0058A8  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6741  0058AA  0E00               	movlw	0
  6742  0058AC  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6743  0058AE                     
  6744                           ; BSR set to: 0
  6745  0058AE  0EDB               	movlw	low sprintf@f
  6746  0058B0  6FC7               	movwf	vfprintf@fp& (0+255),b
  6747  0058B2  0E00               	movlw	high sprintf@f
  6748  0058B4  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6749  0058B6  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6750  0058BA  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6751  0058BE  0ED9               	movlw	low sprintf@ap
  6752  0058C0  6FCB               	movwf	vfprintf@ap& (0+255),b
  6753  0058C2  0E00               	movlw	high sprintf@ap
  6754  0058C4  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6755  0058C6  EC29  F02B         	call	_vfprintf	;wreg free
  6756  0058CA  0100               	movlb	0	; () banked
  6757  0058CC  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6758  0058CE  25CF               	addwf	sprintf@s& (0+255),w,b
  6759  0058D0  6ED9               	movwf	fsr2l,c
  6760  0058D2  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6761  0058D4  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6762  0058D6  6EDA               	movwf	fsr2h,c
  6763  0058D8  0E00               	movlw	0
  6764  0058DA  6EDF               	movwf	indf2,c
  6765  0058DC                     
  6766                           ; BSR set to: 0
  6767  0058DC  0012               	return		;funcret
  6768  0058DE                     __end_of_sprintf:
  6769                           	callstack 0
  6770                           
  6771 ;; *************** function _vfprintf *****************
  6772 ;; Defined at:
  6773 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6774 ;; Parameters:    Size  Location     Type
  6775 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6776 ;;		 -> sprintf@f(6), 
  6777 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6778 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
  6779 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
  6780 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6781 ;;		 -> sprintf@ap(2), 
  6782 ;; Auto vars:     Size  Location     Type
  6783 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6784 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
  6785 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
  6786 ;; Return value:  Size  Location     Type
  6787 ;;                  2  103[BANK0 ] int 
  6788 ;; Registers used:
  6789 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6790 ;; Tracked objects:
  6791 ;;		On entry : 0/0
  6792 ;;		On exit  : 0/0
  6793 ;;		Unchanged: 0/0
  6794 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6795 ;;      Params:         0       6       0       0       0       0       0
  6796 ;;      Locals:         0       2       0       0       0       0       0
  6797 ;;      Temps:          0       0       0       0       0       0       0
  6798 ;;      Totals:         0       8       0       0       0       0       0
  6799 ;;Total ram usage:        8 bytes
  6800 ;; Hardware stack levels used:    1
  6801 ;; Hardware stack levels required when called:    7
  6802 ;; This function calls:
  6803 ;;		_vfpfcnvrt
  6804 ;; This function is called by:
  6805 ;;		_sprintf
  6806 ;; This function uses a non-reentrant model
  6807 ;;
  6808                           
  6809                           	psect	text28
  6810  005652                     __ptext28:
  6811                           	callstack 0
  6812  005652                     _vfprintf:
  6813                           	callstack 19
  6814  005652                     
  6815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6816  005652  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6817  005656  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6818  00565A                     
  6819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6820  00565A  0E00               	movlw	0
  6821  00565C  0101               	movlb	1	; () banked
  6822  00565E  6FD0               	movwf	(_nout+1)& (0+255),b
  6823  005660  0E00               	movlw	0
  6824  005662  6FCF               	movwf	_nout& (0+255),b
  6825                           
  6826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6827  005664  EF4B  F02B         	goto	l5686
  6828  005668                     l5684:
  6829                           
  6830                           ; BSR set to: 1
  6831                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6832  005668  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6833  00566C  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6834  005670  0ECD               	movlw	low vfprintf@cfmt
  6835  005672  0100               	movlb	0	; () banked
  6836  005674  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6837  005676  0E00               	movlw	high vfprintf@cfmt
  6838  005678  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6839  00567A  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6840  00567E  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6841  005682  EC4F  F00D         	call	_vfpfcnvrt	;wreg free
  6842  005686  0100               	movlb	0	; () banked
  6843  005688  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6844  00568A  0101               	movlb	1	; () banked
  6845  00568C  27CF               	addwf	_nout& (0+255),f,b
  6846  00568E  0100               	movlb	0	; () banked
  6847  005690  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6848  005692  0101               	movlb	1	; () banked
  6849  005694  23D0               	addwfc	(_nout+1)& (0+255),f,b
  6850  005696                     l5686:
  6851                           
  6852                           ; BSR set to: 1
  6853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6854  005696  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6855  00569A  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6856  00569E                     	if	0	;tblptru may be non-zero
  6857  00569E                     	endif
  6858  00569E                     	if	0	;tblptru may be non-zero
  6859  00569E                     	endif
  6860  00569E  0008               	tblrd		*
  6861  0056A0  50F5               	movf	tablat,w,c
  6862  0056A2  0900               	iorlw	0
  6863  0056A4  A4D8               	btfss	status,2,c
  6864  0056A6  EF57  F02B         	goto	u6861
  6865  0056AA  EF59  F02B         	goto	u6860
  6866  0056AE                     u6861:
  6867  0056AE  EF34  F02B         	goto	l5684
  6868  0056B2                     u6860:
  6869  0056B2                     
  6870                           ; BSR set to: 1
  6871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6872  0056B2  C1CF  F0C7         	movff	_nout,?_vfprintf
  6873  0056B6  C1D0  F0C8         	movff	_nout+1,?_vfprintf+1
  6874  0056BA                     
  6875                           ; BSR set to: 1
  6876  0056BA  0012               	return		;funcret
  6877  0056BC                     __end_of_vfprintf:
  6878                           	callstack 0
  6879                           
  6880 ;; *************** function _vfpfcnvrt *****************
  6881 ;; Defined at:
  6882 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6883 ;; Parameters:    Size  Location     Type
  6884 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6885 ;;		 -> sprintf@f(6), 
  6886 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6887 ;;		 -> vfprintf@cfmt(2), 
  6888 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6889 ;;		 -> sprintf@ap(2), 
  6890 ;; Auto vars:     Size  Location     Type
  6891 ;;  ll              8   81[BANK0 ] long long 
  6892 ;;  llu             8    0        unsigned long long 
  6893 ;;  f               4   95[BANK0 ] unsigned long long 
  6894 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6895 ;;  vp              3    0        PTR void 
  6896 ;;  cp              3    0        PTR unsigned char 
  6897 ;;  i               2    0        int 
  6898 ;;  done            2    0        int 
  6899 ;;  c               1  102[BANK0 ] unsigned char 
  6900 ;; Return value:  Size  Location     Type
  6901 ;;                  2   71[BANK0 ] int 
  6902 ;; Registers used:
  6903 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6904 ;; Tracked objects:
  6905 ;;		On entry : 0/0
  6906 ;;		On exit  : 0/0
  6907 ;;		Unchanged: 0/0
  6908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6909 ;;      Params:         0       6       0       0       0       0       0
  6910 ;;      Locals:         0      22       0       0       0       0       0
  6911 ;;      Temps:          0       4       0       0       0       0       0
  6912 ;;      Totals:         0      32       0       0       0       0       0
  6913 ;;Total ram usage:       32 bytes
  6914 ;; Hardware stack levels used:    1
  6915 ;; Hardware stack levels required when called:    6
  6916 ;; This function calls:
  6917 ;;		_atoi
  6918 ;;		_dtoa
  6919 ;;		_efgtoa
  6920 ;;		_fputc
  6921 ;;		_isdigit
  6922 ;;		_isupper
  6923 ;;		_strncmp
  6924 ;;		_tolower
  6925 ;; This function is called by:
  6926 ;;		_vfprintf
  6927 ;; This function uses a non-reentrant model
  6928 ;;
  6929                           
  6930                           	psect	text29
  6931  001A9E                     __ptext29:
  6932                           	callstack 0
  6933  001A9E                     _vfpfcnvrt:
  6934                           	callstack 19
  6935  001A9E                     
  6936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6937  001A9E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6938  001AA2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6939  001AA6  CFDE FFF6          	movff	postinc2,tblptrl
  6940  001AAA  CFDD FFF7          	movff	postdec2,tblptrh
  6941  001AAE                     	if	0	;tblptru may be non-zero
  6942  001AAE                     	endif
  6943  001AAE                     	if	0	;tblptru may be non-zero
  6944  001AAE                     	endif
  6945  001AAE  0008               	tblrd		*
  6946  001AB0  50F5               	movf	tablat,w,c
  6947  001AB2  0A25               	xorlw	37
  6948  001AB4  A4D8               	btfss	status,2,c
  6949  001AB6  EF5F  F00D         	goto	u6591
  6950  001ABA  EF61  F00D         	goto	u6590
  6951  001ABE                     u6591:
  6952  001ABE  EF52  F010         	goto	l5524
  6953  001AC2                     u6590:
  6954  001AC2                     
  6955                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6956  001AC2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6957  001AC6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6958  001ACA  2ADE               	incf	postinc2,f,c
  6959  001ACC  0E00               	movlw	0
  6960  001ACE  22DD               	addwfc	postdec2,f,c
  6961  001AD0                     
  6962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6963  001AD0  0E00               	movlw	0
  6964  001AD2  0101               	movlb	1	; () banked
  6965  001AD4  6FD2               	movwf	(_width+1)& (0+255),b
  6966  001AD6  0E00               	movlw	0
  6967  001AD8  6FD1               	movwf	_width& (0+255),b
  6968  001ADA  C1D1  F0F8         	movff	_width,_flags
  6969  001ADE  C1D2  F0F9         	movff	_width+1,_flags+1
  6970  001AE2                     
  6971                           ; BSR set to: 1
  6972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6973  001AE2  0100               	movlb	0	; () banked
  6974  001AE4  69F6               	setf	_prec& (0+255),b
  6975  001AE6  69F7               	setf	(_prec+1)& (0+255),b
  6976  001AE8                     
  6977                           ; BSR set to: 0
  6978                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6979  001AE8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6980  001AEC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6981  001AF0  CFDE FFF6          	movff	postinc2,tblptrl
  6982  001AF4  CFDD FFF7          	movff	postdec2,tblptrh
  6983  001AF8                     	if	0	;tblptru may be non-zero
  6984  001AF8                     	endif
  6985  001AF8                     	if	0	;tblptru may be non-zero
  6986  001AF8                     	endif
  6987  001AF8  0008               	tblrd		*
  6988  001AFA  50F5               	movf	tablat,w,c
  6989  001AFC  0A2A               	xorlw	42
  6990  001AFE  A4D8               	btfss	status,2,c
  6991  001B00  EF84  F00D         	goto	u6601
  6992  001B04  EF86  F00D         	goto	u6600
  6993  001B08                     u6601:
  6994  001B08  EFB2  F00D         	goto	l5430
  6995  001B0C                     u6600:
  6996  001B0C                     
  6997                           ; BSR set to: 0
  6998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6999  001B0C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7000  001B10  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7001  001B14  2ADE               	incf	postinc2,f,c
  7002  001B16  0E00               	movlw	0
  7003  001B18  22DD               	addwfc	postdec2,f,c
  7004                           
  7005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7006  001B1A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7007  001B1E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7008  001B22  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7009  001B26  0E02               	movlw	2
  7010  001B28  26DE               	addwf	postinc2,f,c
  7011  001B2A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7012  001B2E  0E00               	movlw	0
  7013  001B30  22DD               	addwfc	postdec2,f,c
  7014  001B32  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7015  001B36  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7016  001B3A  CFDE F1D1          	movff	postinc2,_width
  7017  001B3E  CFDD F1D2          	movff	postdec2,_width+1
  7018  001B42                     
  7019                           ; BSR set to: 0
  7020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  7021  001B42  0101               	movlb	1	; () banked
  7022  001B44  BFD2               	btfsc	(_width+1)& (0+255),7,b
  7023  001B46  EFA9  F00D         	goto	u6610
  7024  001B4A  EFA7  F00D         	goto	u6611
  7025  001B4E                     u6611:
  7026  001B4E  EFF6  F00D         	goto	l5440
  7027  001B52                     u6610:
  7028  001B52                     
  7029                           ; BSR set to: 1
  7030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  7031  001B52  0100               	movlb	0	; () banked
  7032  001B54  81F8               	bsf	_flags& (0+255),0,b
  7033                           
  7034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  7035  001B56  0101               	movlb	1	; () banked
  7036  001B58  6DD1               	negf	_width& (0+255),b
  7037  001B5A  1FD2               	comf	(_width+1)& (0+255),f,b
  7038  001B5C  B0D8               	btfsc	status,0,c
  7039  001B5E  2BD2               	incf	(_width+1)& (0+255),f,b
  7040  001B60  EFF6  F00D         	goto	l5440
  7041  001B64                     l5430:
  7042                           
  7043                           ; BSR set to: 0
  7044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  7045  001B64  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7046  001B68  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7047  001B6C  CFDE F008          	movff	postinc2,atoi@s
  7048  001B70  CFDD F009          	movff	postdec2,atoi@s+1
  7049  001B74  EC75  F01F         	call	_atoi	;wreg free
  7050  001B78  C008  F1D1         	movff	?_atoi,_width
  7051  001B7C  C009  F1D2         	movff	?_atoi+1,_width+1
  7052                           
  7053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7054  001B80  EFC9  F00D         	goto	l5434
  7055  001B84                     l5432:
  7056                           
  7057                           ; BSR set to: 0
  7058                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  7059  001B84  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7060  001B88  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7061  001B8C  2ADE               	incf	postinc2,f,c
  7062  001B8E  0E00               	movlw	0
  7063  001B90  22DD               	addwfc	postdec2,f,c
  7064  001B92                     l5434:
  7065  001B92  0ED0               	movlw	208
  7066  001B94  0100               	movlb	0	; () banked
  7067  001B96  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7068  001B98  0EFF               	movlw	255
  7069  001B9A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7070  001B9C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7071  001BA0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7072  001BA4  CFDE FFF6          	movff	postinc2,tblptrl
  7073  001BA8  CFDD FFF7          	movff	postdec2,tblptrh
  7074  001BAC                     	if	0	;tblptru may be non-zero
  7075  001BAC                     	endif
  7076  001BAC                     	if	0	;tblptru may be non-zero
  7077  001BAC                     	endif
  7078  001BAC  0008               	tblrd		*
  7079  001BAE  50F5               	movf	tablat,w,c
  7080  001BB0  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7081  001BB2  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7082  001BB4  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7083  001BB6  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7084  001BB8  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7085  001BBA  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7086  001BBC  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7087  001BBE  E10A               	bnz	u6620
  7088  001BC0  0E0A               	movlw	10
  7089  001BC2  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7090  001BC4  A0D8               	btfss	status,0,c
  7091  001BC6  EFE7  F00D         	goto	u6621
  7092  001BCA  EFEA  F00D         	goto	u6620
  7093  001BCE                     u6621:
  7094  001BCE  0E01               	movlw	1
  7095  001BD0  EFEB  F00D         	goto	u6630
  7096  001BD4                     u6620:
  7097  001BD4  0E00               	movlw	0
  7098  001BD6                     u6630:
  7099  001BD6  6FB9               	movwf	_vfpfcnvrt$2589& (0+255),b
  7100  001BD8  6BBA               	clrf	(_vfpfcnvrt$2589+1)& (0+255),b
  7101  001BDA                     
  7102                           ; BSR set to: 0
  7103  001BDA  51B9               	movf	_vfpfcnvrt$2589& (0+255),w,b
  7104  001BDC  11BA               	iorwf	(_vfpfcnvrt$2589+1)& (0+255),w,b
  7105  001BDE  A4D8               	btfss	status,2,c
  7106  001BE0  EFF4  F00D         	goto	u6641
  7107  001BE4  EFF6  F00D         	goto	u6640
  7108  001BE8                     u6641:
  7109  001BE8  EFC2  F00D         	goto	l5432
  7110  001BEC                     u6640:
  7111  001BEC                     l5440:
  7112                           
  7113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  7114  001BEC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7115  001BF0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7116  001BF4  CFDE FFF6          	movff	postinc2,tblptrl
  7117  001BF8  CFDD FFF7          	movff	postdec2,tblptrh
  7118  001BFC                     	if	0	;tblptru may be non-zero
  7119  001BFC                     	endif
  7120  001BFC                     	if	0	;tblptru may be non-zero
  7121  001BFC                     	endif
  7122  001BFC  0008               	tblrd		*
  7123  001BFE  50F5               	movf	tablat,w,c
  7124  001C00  0A2E               	xorlw	46
  7125  001C02  A4D8               	btfss	status,2,c
  7126  001C04  EF06  F00E         	goto	u6651
  7127  001C08  EF08  F00E         	goto	u6650
  7128  001C0C                     u6651:
  7129  001C0C  EF87  F00E         	goto	l5460
  7130  001C10                     u6650:
  7131  001C10                     
  7132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  7133  001C10  0E00               	movlw	0
  7134  001C12  0100               	movlb	0	; () banked
  7135  001C14  6FF7               	movwf	(_prec+1)& (0+255),b
  7136  001C16  0E00               	movlw	0
  7137  001C18  6FF6               	movwf	_prec& (0+255),b
  7138  001C1A                     
  7139                           ; BSR set to: 0
  7140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  7141  001C1A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7142  001C1E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7143  001C22  2ADE               	incf	postinc2,f,c
  7144  001C24  0E00               	movlw	0
  7145  001C26  22DD               	addwfc	postdec2,f,c
  7146  001C28                     
  7147                           ; BSR set to: 0
  7148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  7149  001C28  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7150  001C2C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7151  001C30  CFDE FFF6          	movff	postinc2,tblptrl
  7152  001C34  CFDD FFF7          	movff	postdec2,tblptrh
  7153  001C38                     	if	0	;tblptru may be non-zero
  7154  001C38                     	endif
  7155  001C38                     	if	0	;tblptru may be non-zero
  7156  001C38                     	endif
  7157  001C38  0008               	tblrd		*
  7158  001C3A  50F5               	movf	tablat,w,c
  7159  001C3C  0A2A               	xorlw	42
  7160  001C3E  A4D8               	btfss	status,2,c
  7161  001C40  EF24  F00E         	goto	u6661
  7162  001C44  EF26  F00E         	goto	u6660
  7163  001C48                     u6661:
  7164  001C48  EF43  F00E         	goto	l5450
  7165  001C4C                     u6660:
  7166  001C4C                     
  7167                           ; BSR set to: 0
  7168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  7169  001C4C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7170  001C50  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7171  001C54  2ADE               	incf	postinc2,f,c
  7172  001C56  0E00               	movlw	0
  7173  001C58  22DD               	addwfc	postdec2,f,c
  7174                           
  7175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7176  001C5A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7177  001C5E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7178  001C62  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7179  001C66  0E02               	movlw	2
  7180  001C68  26DE               	addwf	postinc2,f,c
  7181  001C6A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7182  001C6E  0E00               	movlw	0
  7183  001C70  22DD               	addwfc	postdec2,f,c
  7184  001C72  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7185  001C76  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7186  001C7A  CFDE F0F6          	movff	postinc2,_prec
  7187  001C7E  CFDD F0F7          	movff	postdec2,_prec+1
  7188                           
  7189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  7190  001C82  EF87  F00E         	goto	l5460
  7191  001C86                     l5450:
  7192                           
  7193                           ; BSR set to: 0
  7194                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  7195  001C86  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7196  001C8A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7197  001C8E  CFDE F008          	movff	postinc2,atoi@s
  7198  001C92  CFDD F009          	movff	postdec2,atoi@s+1
  7199  001C96  EC75  F01F         	call	_atoi	;wreg free
  7200  001C9A  C008  F0F6         	movff	?_atoi,_prec
  7201  001C9E  C009  F0F7         	movff	?_atoi+1,_prec+1
  7202                           
  7203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7204  001CA2  EF5A  F00E         	goto	l5454
  7205  001CA6                     l5452:
  7206                           
  7207                           ; BSR set to: 0
  7208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  7209  001CA6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7210  001CAA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7211  001CAE  2ADE               	incf	postinc2,f,c
  7212  001CB0  0E00               	movlw	0
  7213  001CB2  22DD               	addwfc	postdec2,f,c
  7214  001CB4                     l5454:
  7215  001CB4  0ED0               	movlw	208
  7216  001CB6  0100               	movlb	0	; () banked
  7217  001CB8  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7218  001CBA  0EFF               	movlw	255
  7219  001CBC  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7220  001CBE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7221  001CC2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7222  001CC6  CFDE FFF6          	movff	postinc2,tblptrl
  7223  001CCA  CFDD FFF7          	movff	postdec2,tblptrh
  7224  001CCE                     	if	0	;tblptru may be non-zero
  7225  001CCE                     	endif
  7226  001CCE                     	if	0	;tblptru may be non-zero
  7227  001CCE                     	endif
  7228  001CCE  0008               	tblrd		*
  7229  001CD0  50F5               	movf	tablat,w,c
  7230  001CD2  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7231  001CD4  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7232  001CD6  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7233  001CD8  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7234  001CDA  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7235  001CDC  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7236  001CDE  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7237  001CE0  E10A               	bnz	u6670
  7238  001CE2  0E0A               	movlw	10
  7239  001CE4  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7240  001CE6  A0D8               	btfss	status,0,c
  7241  001CE8  EF78  F00E         	goto	u6671
  7242  001CEC  EF7B  F00E         	goto	u6670
  7243  001CF0                     u6671:
  7244  001CF0  0E01               	movlw	1
  7245  001CF2  EF7C  F00E         	goto	u6680
  7246  001CF6                     u6670:
  7247  001CF6  0E00               	movlw	0
  7248  001CF8                     u6680:
  7249  001CF8  6FBB               	movwf	_vfpfcnvrt$2590& (0+255),b
  7250  001CFA  6BBC               	clrf	(_vfpfcnvrt$2590+1)& (0+255),b
  7251  001CFC                     
  7252                           ; BSR set to: 0
  7253  001CFC  51BB               	movf	_vfpfcnvrt$2590& (0+255),w,b
  7254  001CFE  11BC               	iorwf	(_vfpfcnvrt$2590+1)& (0+255),w,b
  7255  001D00  A4D8               	btfss	status,2,c
  7256  001D02  EF85  F00E         	goto	u6691
  7257  001D06  EF87  F00E         	goto	u6690
  7258  001D0A                     u6691:
  7259  001D0A  EF53  F00E         	goto	l5452
  7260  001D0E                     u6690:
  7261  001D0E                     l5460:
  7262                           
  7263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  7264  001D0E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7265  001D12  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7266  001D16  CFDE FFF6          	movff	postinc2,tblptrl
  7267  001D1A  CFDD FFF7          	movff	postdec2,tblptrh
  7268  001D1E                     	if	0	;tblptru may be non-zero
  7269  001D1E                     	endif
  7270  001D1E                     	if	0	;tblptru may be non-zero
  7271  001D1E                     	endif
  7272  001D1E  0008               	tblrd		*
  7273  001D20  50F5               	movf	tablat,w,c
  7274  001D22  6E07               	movwf	tolower@c^0,c
  7275  001D24  6A08               	clrf	(tolower@c+1)^0,c
  7276  001D26  EC91  F02B         	call	_tolower	;wreg free
  7277  001D2A  5007               	movf	?_tolower^0,w,c
  7278  001D2C  0100               	movlb	0	; () banked
  7279  001D2E  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  7280  001D30                     
  7281                           ; BSR set to: 0
  7282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  7283  001D30  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  7284  001D32  B4D8               	btfsc	status,2,c
  7285  001D34  EF9E  F00E         	goto	u6701
  7286  001D38  EFA0  F00E         	goto	u6700
  7287  001D3C                     u6701:
  7288  001D3C  EFDA  F00E         	goto	l5470
  7289  001D40                     u6700:
  7290  001D40                     
  7291                           ; BSR set to: 0
  7292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  7293  001D40  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7294  001D44  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7295  001D48  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7296  001D4C  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7297  001D50  0E01               	movlw	1
  7298  001D52  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7299  001D54  0E00               	movlw	0
  7300  001D56  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7301  001D58  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7302  001D5C  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7303  001D60                     	if	0	;tblptru may be non-zero
  7304  001D60                     	endif
  7305  001D60                     	if	0	;tblptru may be non-zero
  7306  001D60                     	endif
  7307  001D60  0008               	tblrd		*
  7308  001D62  50F5               	movf	tablat,w,c
  7309  001D64  6E07               	movwf	tolower@c^0,c
  7310  001D66  6A08               	clrf	(tolower@c+1)^0,c
  7311  001D68  EC91  F02B         	call	_tolower	;wreg free
  7312  001D6C  5007               	movf	?_tolower^0,w,c
  7313  001D6E  0100               	movlb	0	; () banked
  7314  001D70  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  7315  001D72                     
  7316                           ; BSR set to: 0
  7317                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  7318  001D72  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  7319  001D74  B4D8               	btfsc	status,2,c
  7320  001D76  EFBF  F00E         	goto	u6711
  7321  001D7A  EFC1  F00E         	goto	u6710
  7322  001D7E                     u6711:
  7323  001D7E  EFDA  F00E         	goto	l5470
  7324  001D82                     u6710:
  7325  001D82                     
  7326                           ; BSR set to: 0
  7327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  7328  001D82  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7329  001D86  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7330  001D8A  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7331  001D8E  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7332  001D92  0E02               	movlw	2
  7333  001D94  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7334  001D96  0E00               	movlw	0
  7335  001D98  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7336  001D9A  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7337  001D9E  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7338  001DA2                     	if	0	;tblptru may be non-zero
  7339  001DA2                     	endif
  7340  001DA2                     	if	0	;tblptru may be non-zero
  7341  001DA2                     	endif
  7342  001DA2  0008               	tblrd		*
  7343  001DA4  50F5               	movf	tablat,w,c
  7344  001DA6  6E07               	movwf	tolower@c^0,c
  7345  001DA8  6A08               	clrf	(tolower@c+1)^0,c
  7346  001DAA  EC91  F02B         	call	_tolower	;wreg free
  7347  001DAE  5007               	movf	?_tolower^0,w,c
  7348  001DB0  0100               	movlb	0	; () banked
  7349  001DB2  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  7350  001DB4                     l5470:
  7351                           
  7352                           ; BSR set to: 0
  7353                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7354  001DB4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7355  001DB8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7356  001DBC  CFDE FFF6          	movff	postinc2,tblptrl
  7357  001DC0  CFDD FFF7          	movff	postdec2,tblptrh
  7358  001DC4                     	if	0	;tblptru may be non-zero
  7359  001DC4                     	endif
  7360  001DC4                     	if	0	;tblptru may be non-zero
  7361  001DC4                     	endif
  7362  001DC4  0008               	tblrd		*
  7363  001DC6  50F5               	movf	tablat,w,c
  7364  001DC8  0A64               	xorlw	100
  7365  001DCA  B4D8               	btfsc	status,2,c
  7366  001DCC  EFEA  F00E         	goto	u6721
  7367  001DD0  EFEC  F00E         	goto	u6720
  7368  001DD4                     u6721:
  7369  001DD4  EFFE  F00E         	goto	l5474
  7370  001DD8                     u6720:
  7371  001DD8                     
  7372                           ; BSR set to: 0
  7373  001DD8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7374  001DDC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7375  001DE0  CFDE FFF6          	movff	postinc2,tblptrl
  7376  001DE4  CFDD FFF7          	movff	postdec2,tblptrh
  7377  001DE8                     	if	0	;tblptru may be non-zero
  7378  001DE8                     	endif
  7379  001DE8                     	if	0	;tblptru may be non-zero
  7380  001DE8                     	endif
  7381  001DE8  0008               	tblrd		*
  7382  001DEA  50F5               	movf	tablat,w,c
  7383  001DEC  0A69               	xorlw	105
  7384  001DEE  A4D8               	btfss	status,2,c
  7385  001DF0  EFFC  F00E         	goto	u6731
  7386  001DF4  EFFE  F00E         	goto	u6730
  7387  001DF8                     u6731:
  7388  001DF8  EF3E  F00F         	goto	l5480
  7389  001DFC                     u6730:
  7390  001DFC                     l5474:
  7391                           
  7392                           ; BSR set to: 0
  7393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  7394  001DFC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7395  001E00  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7396  001E04  2ADE               	incf	postinc2,f,c
  7397  001E06  0E00               	movlw	0
  7398  001E08  22DD               	addwfc	postdec2,f,c
  7399                           
  7400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7401  001E0A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7402  001E0E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7403  001E12  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7404  001E16  0E02               	movlw	2
  7405  001E18  26DE               	addwf	postinc2,f,c
  7406  001E1A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7407  001E1E  0E00               	movlw	0
  7408  001E20  22DD               	addwfc	postdec2,f,c
  7409  001E22  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7410  001E26  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7411  001E2A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  7412  001E2E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  7413  001E32  0E00               	movlw	0
  7414  001E34  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7415  001E36  0EFF               	movlw	-1
  7416  001E38  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7417  001E3A  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7418  001E3C  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7419  001E3E  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7420  001E40  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7421  001E42  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7422  001E44                     
  7423                           ; BSR set to: 0
  7424                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  7425  001E44  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7426  001E48  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7427  001E4C  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7428  001E50  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7429  001E54  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7430  001E58  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7431  001E5C  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7432  001E60  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7433  001E64  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7434  001E68  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7435  001E6C  EC23  F018         	call	_dtoa	;wreg free
  7436  001E70  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  7437  001E74  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7438  001E78  EF6D  F010         	goto	l1420
  7439  001E7C                     l5480:
  7440                           
  7441                           ; BSR set to: 0
  7442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  7443  001E7C  0E66               	movlw	102
  7444  001E7E  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  7445  001E80  A4D8               	btfss	status,2,c
  7446  001E82  EF45  F00F         	goto	u6741
  7447  001E86  EF47  F00F         	goto	u6740
  7448  001E8A                     u6741:
  7449  001E8A  EF87  F00F         	goto	l5492
  7450  001E8E                     u6740:
  7451  001E8E                     
  7452                           ; BSR set to: 0
  7453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  7454  001E8E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7455  001E92  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7456  001E96  CFDE FFF6          	movff	postinc2,tblptrl
  7457  001E9A  CFDD FFF7          	movff	postdec2,tblptrh
  7458  001E9E                     	if	0	;tblptru may be non-zero
  7459  001E9E                     	endif
  7460  001E9E                     	if	0	;tblptru may be non-zero
  7461  001E9E                     	endif
  7462  001E9E  0008               	tblrd		*
  7463  001EA0  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7464  001EA4                     
  7465                           ; BSR set to: 0
  7466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  7467  001EA4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7468  001EA8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7469  001EAC  2ADE               	incf	postinc2,f,c
  7470  001EAE  0E00               	movlw	0
  7471  001EB0  22DD               	addwfc	postdec2,f,c
  7472  001EB2                     
  7473                           ; BSR set to: 0
  7474                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7475  001EB2  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7476  001EB6  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7477  001EBA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7478  001EBE  0E04               	movlw	4
  7479  001EC0  26DE               	addwf	postinc2,f,c
  7480  001EC2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7481  001EC6  0E00               	movlw	0
  7482  001EC8  22DD               	addwfc	postdec2,f,c
  7483  001ECA  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7484  001ECE  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7485  001ED2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7486  001ED6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7487  001EDA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7488  001EDE  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7489  001EE2                     l5488:
  7490                           
  7491                           ; BSR set to: 0
  7492                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7493  001EE2  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7494  001EE6  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7495  001EEA  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7496  001EEE  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7497  001EF2  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7498  001EF6  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7499  001EFA  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7500  001EFE  EC74  F003         	call	_efgtoa	;wreg free
  7501  001F02  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7502  001F06  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7503  001F0A  EF6D  F010         	goto	l1420
  7504  001F0E                     l5492:
  7505                           
  7506                           ; BSR set to: 0
  7507                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7508  001F0E  0EC3               	movlw	low vfpfcnvrt@ct
  7509  001F10  6E01               	movwf	strncmp@_l^0,c
  7510  001F12  0E00               	movlw	high vfpfcnvrt@ct
  7511  001F14  6E02               	movwf	(strncmp@_l+1)^0,c
  7512  001F16  0EE4               	movlw	low STR_25
  7513  001F18  6E03               	movwf	strncmp@_r^0,c
  7514  001F1A  0E06               	movlw	high STR_25
  7515  001F1C  6E04               	movwf	(strncmp@_r+1)^0,c
  7516  001F1E  0E00               	movlw	0
  7517  001F20  6E06               	movwf	(strncmp@n+1)^0,c
  7518  001F22  0E02               	movlw	2
  7519  001F24  6E05               	movwf	strncmp@n^0,c
  7520  001F26  ECFC  F025         	call	_strncmp	;wreg free
  7521  001F2A  5001               	movf	?_strncmp^0,w,c
  7522  001F2C  1002               	iorwf	(?_strncmp+1)^0,w,c
  7523  001F2E  A4D8               	btfss	status,2,c
  7524  001F30  EF9C  F00F         	goto	u6751
  7525  001F34  EF9E  F00F         	goto	u6750
  7526  001F38                     u6751:
  7527  001F38  EF1A  F010         	goto	l5508
  7528  001F3C                     u6750:
  7529  001F3C                     
  7530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7531  001F3C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7532  001F40  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7533  001F44  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7534  001F48  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7535  001F4C  0E01               	movlw	1
  7536  001F4E  0100               	movlb	0	; () banked
  7537  001F50  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7538  001F52  0E00               	movlw	0
  7539  001F54  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7540  001F56  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7541  001F5A  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7542  001F5E                     	if	0	;tblptru may be non-zero
  7543  001F5E                     	endif
  7544  001F5E                     	if	0	;tblptru may be non-zero
  7545  001F5E                     	endif
  7546  001F5E  0008               	tblrd		*
  7547  001F60  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7548  001F64  0EBF               	movlw	191
  7549  001F66  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7550  001F68  0EFF               	movlw	255
  7551  001F6A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7552  001F6C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7553  001F70  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7554  001F74  CFDE FFF6          	movff	postinc2,tblptrl
  7555  001F78  CFDD FFF7          	movff	postdec2,tblptrh
  7556  001F7C                     	if	0	;tblptru may be non-zero
  7557  001F7C                     	endif
  7558  001F7C                     	if	0	;tblptru may be non-zero
  7559  001F7C                     	endif
  7560  001F7C  0008               	tblrd		*
  7561  001F7E  50F5               	movf	tablat,w,c
  7562  001F80  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7563  001F82  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7564  001F84  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7565  001F86  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7566  001F88  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7567  001F8A  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7568  001F8C  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7569  001F8E  E10A               	bnz	u6760
  7570  001F90  0E1A               	movlw	26
  7571  001F92  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7572  001F94  A0D8               	btfss	status,0,c
  7573  001F96  EFCF  F00F         	goto	u6761
  7574  001F9A  EFD2  F00F         	goto	u6760
  7575  001F9E                     u6761:
  7576  001F9E  0E01               	movlw	1
  7577  001FA0  EFD3  F00F         	goto	u6770
  7578  001FA4                     u6760:
  7579  001FA4  0E00               	movlw	0
  7580  001FA6                     u6770:
  7581  001FA6  6FBD               	movwf	_vfpfcnvrt$2595& (0+255),b
  7582  001FA8  6BBE               	clrf	(_vfpfcnvrt$2595+1)& (0+255),b
  7583  001FAA                     
  7584                           ; BSR set to: 0
  7585  001FAA  51BD               	movf	_vfpfcnvrt$2595& (0+255),w,b
  7586  001FAC  11BE               	iorwf	(_vfpfcnvrt$2595+1)& (0+255),w,b
  7587  001FAE  B4D8               	btfsc	status,2,c
  7588  001FB0  EFDC  F00F         	goto	u6781
  7589  001FB4  EFDE  F00F         	goto	u6780
  7590  001FB8                     u6781:
  7591  001FB8  EFF8  F00F         	goto	l5502
  7592  001FBC                     u6780:
  7593  001FBC                     
  7594                           ; BSR set to: 0
  7595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7596  001FBC  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7597  001FC0  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7598  001FC4  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7599  001FC8  0E04               	movlw	4
  7600  001FCA  26DE               	addwf	postinc2,f,c
  7601  001FCC  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7602  001FD0  0E00               	movlw	0
  7603  001FD2  22DD               	addwfc	postdec2,f,c
  7604  001FD4  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7605  001FD8  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7606  001FDC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7607  001FE0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7608  001FE4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7609  001FE8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7610                           
  7611                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7612  001FEC  EF10  F010         	goto	l1428
  7613  001FF0                     l5502:
  7614                           
  7615                           ; BSR set to: 0
  7616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7617  001FF0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7618  001FF4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7619  001FF8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7620  001FFC  0E04               	movlw	4
  7621  001FFE  26DE               	addwf	postinc2,f,c
  7622  002000  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7623  002004  0E00               	movlw	0
  7624  002006  22DD               	addwfc	postdec2,f,c
  7625  002008  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7626  00200C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7627  002010  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7628  002014  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7629  002018  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7630  00201C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7631  002020                     l1428:
  7632                           
  7633                           ; BSR set to: 0
  7634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7635  002020  0E02               	movlw	2
  7636  002022  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7637  002026  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7638  00202A  26DE               	addwf	postinc2,f,c
  7639  00202C  0E00               	movlw	0
  7640  00202E  22DD               	addwfc	postdec2,f,c
  7641  002030  EF71  F00F         	goto	l5488
  7642  002034                     l5508:
  7643                           
  7644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7645  002034  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7646  002038  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7647  00203C  CFDE FFF6          	movff	postinc2,tblptrl
  7648  002040  CFDD FFF7          	movff	postdec2,tblptrh
  7649  002044                     	if	0	;tblptru may be non-zero
  7650  002044                     	endif
  7651  002044                     	if	0	;tblptru may be non-zero
  7652  002044                     	endif
  7653  002044  0008               	tblrd		*
  7654  002046  50F5               	movf	tablat,w,c
  7655  002048  0A25               	xorlw	37
  7656  00204A  A4D8               	btfss	status,2,c
  7657  00204C  EF2A  F010         	goto	u6791
  7658  002050  EF2C  F010         	goto	u6790
  7659  002054                     u6791:
  7660  002054  EF44  F010         	goto	l5518
  7661  002058                     u6790:
  7662  002058                     
  7663                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7664  002058  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7665  00205C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7666  002060  2ADE               	incf	postinc2,f,c
  7667  002062  0E00               	movlw	0
  7668  002064  22DD               	addwfc	postdec2,f,c
  7669  002066                     
  7670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7671  002066  0E00               	movlw	0
  7672  002068  6E02               	movwf	(fputc@c+1)^0,c
  7673  00206A  0E25               	movlw	37
  7674  00206C  6E01               	movwf	fputc@c^0,c
  7675  00206E  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7676  002072  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7677  002076  EC37  F027         	call	_fputc	;wreg free
  7678  00207A                     l5514:
  7679                           
  7680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7681  00207A  0E00               	movlw	0
  7682  00207C  0100               	movlb	0	; () banked
  7683  00207E  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7684  002080  0E01               	movlw	1
  7685  002082  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7686  002084  EF6D  F010         	goto	l1420
  7687  002088                     l5518:
  7688                           
  7689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7690  002088  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7691  00208C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7692  002090  2ADE               	incf	postinc2,f,c
  7693  002092  0E00               	movlw	0
  7694  002094  22DD               	addwfc	postdec2,f,c
  7695  002096                     
  7696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7697  002096  0E00               	movlw	0
  7698  002098  0100               	movlb	0	; () banked
  7699  00209A  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7700  00209C  0E00               	movlw	0
  7701  00209E  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7702  0020A0  EF6D  F010         	goto	l1420
  7703  0020A4                     l5524:
  7704                           
  7705                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7706  0020A4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7707  0020A8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7708  0020AC  CFDE FFF6          	movff	postinc2,tblptrl
  7709  0020B0  CFDD FFF7          	movff	postdec2,tblptrh
  7710  0020B4                     	if	0	;tblptru may be non-zero
  7711  0020B4                     	endif
  7712  0020B4                     	if	0	;tblptru may be non-zero
  7713  0020B4                     	endif
  7714  0020B4  0008               	tblrd		*
  7715  0020B6  50F5               	movf	tablat,w,c
  7716  0020B8  6E01               	movwf	fputc@c^0,c
  7717  0020BA  6A02               	clrf	(fputc@c+1)^0,c
  7718  0020BC  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7719  0020C0  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7720  0020C4  EC37  F027         	call	_fputc	;wreg free
  7721  0020C8                     
  7722                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7723  0020C8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7724  0020CC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7725  0020D0  2ADE               	incf	postinc2,f,c
  7726  0020D2  0E00               	movlw	0
  7727  0020D4  22DD               	addwfc	postdec2,f,c
  7728  0020D6  EF3D  F010         	goto	l5514
  7729  0020DA                     l1420:
  7730  0020DA  0012               	return		;funcret
  7731  0020DC                     __end_of_vfpfcnvrt:
  7732                           	callstack 0
  7733                           
  7734 ;; *************** function _strncmp *****************
  7735 ;; Defined at:
  7736 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7737 ;; Parameters:    Size  Location     Type
  7738 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7739 ;;		 -> vfpfcnvrt@ct(3), 
  7740 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7741 ;;		 -> STR_27(3), 
  7742 ;;  n               2    4[COMRAM] unsigned int 
  7743 ;; Auto vars:     Size  Location     Type
  7744 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7745 ;;		 -> STR_27(3), 
  7746 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7747 ;;		 -> vfpfcnvrt@ct(3), 
  7748 ;; Return value:  Size  Location     Type
  7749 ;;                  2    0[COMRAM] int 
  7750 ;; Registers used:
  7751 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7752 ;; Tracked objects:
  7753 ;;		On entry : 0/0
  7754 ;;		On exit  : 0/0
  7755 ;;		Unchanged: 0/0
  7756 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7757 ;;      Params:         6       0       0       0       0       0       0
  7758 ;;      Locals:         4       0       0       0       0       0       0
  7759 ;;      Temps:          1       0       0       0       0       0       0
  7760 ;;      Totals:        11       0       0       0       0       0       0
  7761 ;;Total ram usage:       11 bytes
  7762 ;; Hardware stack levels used:    1
  7763 ;; Hardware stack levels required when called:    1
  7764 ;; This function calls:
  7765 ;;		Nothing
  7766 ;; This function is called by:
  7767 ;;		_vfpfcnvrt
  7768 ;; This function uses a non-reentrant model
  7769 ;;
  7770                           
  7771                           	psect	text30
  7772  004BF8                     __ptext30:
  7773                           	callstack 0
  7774  004BF8                     _strncmp:
  7775                           	callstack 23
  7776  004BF8  C001  F008         	movff	strncmp@_l,strncmp@l
  7777  004BFC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7778  004C00  C003  F00A         	movff	strncmp@_r,strncmp@r
  7779  004C04  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7780  004C08  0605               	decf	strncmp@n^0,f,c
  7781  004C0A  A0D8               	btfss	status,0,c
  7782  004C0C  0606               	decf	(strncmp@n+1)^0,f,c
  7783  004C0E  2805               	incf	strncmp@n^0,w,c
  7784  004C10  E106               	bnz	u6341
  7785  004C12  2806               	incf	(strncmp@n+1)^0,w,c
  7786  004C14  A4D8               	btfss	status,2,c
  7787  004C16  EF0F  F026         	goto	u6341
  7788  004C1A  EF11  F026         	goto	u6340
  7789  004C1E                     u6341:
  7790  004C1E  EF1E  F026         	goto	l5286
  7791  004C22                     u6340:
  7792  004C22  0E00               	movlw	0
  7793  004C24  6E02               	movwf	(?_strncmp+1)^0,c
  7794  004C26  0E00               	movlw	0
  7795  004C28  6E01               	movwf	?_strncmp^0,c
  7796  004C2A  EF66  F026         	goto	l1556
  7797  004C2E                     l5284:
  7798  004C2E  4A08               	infsnz	strncmp@l^0,f,c
  7799  004C30  2A09               	incf	(strncmp@l+1)^0,f,c
  7800  004C32  4A0A               	infsnz	strncmp@r^0,f,c
  7801  004C34  2A0B               	incf	(strncmp@r+1)^0,f,c
  7802  004C36  0605               	decf	strncmp@n^0,f,c
  7803  004C38  A0D8               	btfss	status,0,c
  7804  004C3A  0606               	decf	(strncmp@n+1)^0,f,c
  7805  004C3C                     l5286:
  7806  004C3C  C008  FFD9         	movff	strncmp@l,fsr2l
  7807  004C40  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7808  004C44  50DF               	movf	indf2,w,c
  7809  004C46  B4D8               	btfsc	status,2,c
  7810  004C48  EF28  F026         	goto	u6351
  7811  004C4C  EF2A  F026         	goto	u6350
  7812  004C50                     u6351:
  7813  004C50  EF55  F026         	goto	l5294
  7814  004C54                     u6350:
  7815  004C54  C00A  FFF6         	movff	strncmp@r,tblptrl
  7816  004C58  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7817  004C5C                     	if	0	;tblptru may be non-zero
  7818  004C5C                     	endif
  7819  004C5C                     	if	0	;tblptru may be non-zero
  7820  004C5C                     	endif
  7821  004C5C  0008               	tblrd		*
  7822  004C5E  50F5               	movf	tablat,w,c
  7823  004C60  0900               	iorlw	0
  7824  004C62  B4D8               	btfsc	status,2,c
  7825  004C64  EF36  F026         	goto	u6361
  7826  004C68  EF38  F026         	goto	u6360
  7827  004C6C                     u6361:
  7828  004C6C  EF55  F026         	goto	l5294
  7829  004C70                     u6360:
  7830  004C70  5005               	movf	strncmp@n^0,w,c
  7831  004C72  1006               	iorwf	(strncmp@n+1)^0,w,c
  7832  004C74  B4D8               	btfsc	status,2,c
  7833  004C76  EF3F  F026         	goto	u6371
  7834  004C7A  EF41  F026         	goto	u6370
  7835  004C7E                     u6371:
  7836  004C7E  EF55  F026         	goto	l5294
  7837  004C82                     u6370:
  7838  004C82  C008  FFD9         	movff	strncmp@l,fsr2l
  7839  004C86  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7840  004C8A  50DF               	movf	indf2,w,c
  7841  004C8C  6E07               	movwf	??_strncmp^0,c
  7842  004C8E  C00A  FFF6         	movff	strncmp@r,tblptrl
  7843  004C92  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7844  004C96                     	if	0	;tblptru may be non-zero
  7845  004C96                     	endif
  7846  004C96                     	if	0	;tblptru may be non-zero
  7847  004C96                     	endif
  7848  004C96  0008               	tblrd		*
  7849  004C98  50F5               	movf	tablat,w,c
  7850  004C9A  1807               	xorwf	??_strncmp^0,w,c
  7851  004C9C  B4D8               	btfsc	status,2,c
  7852  004C9E  EF53  F026         	goto	u6381
  7853  004CA2  EF55  F026         	goto	u6380
  7854  004CA6                     u6381:
  7855  004CA6  EF17  F026         	goto	l5284
  7856  004CAA                     u6380:
  7857  004CAA                     l5294:
  7858  004CAA  C008  FFD9         	movff	strncmp@l,fsr2l
  7859  004CAE  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7860  004CB2  50DF               	movf	indf2,w,c
  7861  004CB4  6E07               	movwf	??_strncmp^0,c
  7862  004CB6  C00A  FFF6         	movff	strncmp@r,tblptrl
  7863  004CBA  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7864  004CBE                     	if	0	;tblptru may be non-zero
  7865  004CBE                     	endif
  7866  004CBE                     	if	0	;tblptru may be non-zero
  7867  004CBE                     	endif
  7868  004CBE  0008               	tblrd		*
  7869  004CC0  50F5               	movf	tablat,w,c
  7870  004CC2  5C07               	subwf	??_strncmp^0,w,c
  7871  004CC4  6E01               	movwf	?_strncmp^0,c
  7872  004CC6  6A02               	clrf	(?_strncmp+1)^0,c
  7873  004CC8  A0D8               	btfss	status,0,c
  7874  004CCA  0602               	decf	(?_strncmp+1)^0,f,c
  7875  004CCC                     l1556:
  7876  004CCC  0012               	return		;funcret
  7877  004CCE                     __end_of_strncmp:
  7878                           	callstack 0
  7879                           
  7880 ;; *************** function _efgtoa *****************
  7881 ;; Defined at:
  7882 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7883 ;; Parameters:    Size  Location     Type
  7884 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7885 ;;		 -> sprintf@f(6), 
  7886 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7887 ;;  c               1   93[COMRAM] unsigned char 
  7888 ;; Auto vars:     Size  Location     Type
  7889 ;;  u               4   67[BANK0 ] unsigned char 
  7890 ;;  g               4   59[BANK0 ] unsigned char 
  7891 ;;  l               4   53[BANK0 ] unsigned char 
  7892 ;;  h               4   49[BANK0 ] unsigned char 
  7893 ;;  ou              4   15[BANK0 ] unsigned char 
  7894 ;;  n               2   65[BANK0 ] int 
  7895 ;;  e               2   63[BANK0 ] int 
  7896 ;;  i               2   57[BANK0 ] int 
  7897 ;;  w               2   46[BANK0 ] int 
  7898 ;;  p               2   43[BANK0 ] int 
  7899 ;;  sign            2   41[BANK0 ] int 
  7900 ;;  d               2   39[BANK0 ] int 
  7901 ;;  ne              2   37[BANK0 ] int 
  7902 ;;  m               2   35[BANK0 ] int 
  7903 ;;  pp              2   33[BANK0 ] int 
  7904 ;;  t               2   31[BANK0 ] int 
  7905 ;;  mode            1   48[BANK0 ] unsigned char 
  7906 ;;  nmode           1   45[BANK0 ] unsigned char 
  7907 ;; Return value:  Size  Location     Type
  7908 ;;                  2   87[COMRAM] int 
  7909 ;; Registers used:
  7910 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7911 ;; Tracked objects:
  7912 ;;		On entry : 0/0
  7913 ;;		On exit  : 0/0
  7914 ;;		Unchanged: 0/0
  7915 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7916 ;;      Params:         7       0       0       0       0       0       0
  7917 ;;      Locals:         0      56       0       0       0       0       0
  7918 ;;      Temps:          0       5       0       0       0       0       0
  7919 ;;      Totals:         7      61       0       0       0       0       0
  7920 ;;Total ram usage:       68 bytes
  7921 ;; Hardware stack levels used:    1
  7922 ;; Hardware stack levels required when called:    5
  7923 ;; This function calls:
  7924 ;;		___awdiv
  7925 ;;		___awmod
  7926 ;;		___fladd
  7927 ;;		___fldiv
  7928 ;;		___fleq
  7929 ;;		___flge
  7930 ;;		___flmul
  7931 ;;		___flneg
  7932 ;;		___flsub
  7933 ;;		___fltol
  7934 ;;		___fpclassifyf
  7935 ;;		_floorf
  7936 ;;		_isupper
  7937 ;;		_pad
  7938 ;;		_strcpy
  7939 ;;		_tolower
  7940 ;; This function is called by:
  7941 ;;		_vfpfcnvrt
  7942 ;; This function uses a non-reentrant model
  7943 ;;
  7944                           
  7945                           	psect	text31
  7946  0006E8                     __ptext31:
  7947                           	callstack 0
  7948  0006E8                     _efgtoa:
  7949                           	callstack 19
  7950  0006E8                     
  7951                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7952  0006E8  0E00               	movlw	0
  7953  0006EA  0100               	movlb	0	; () banked
  7954  0006EC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7955  0006EE  0E00               	movlw	0
  7956  0006F0  6F89               	movwf	efgtoa@sign& (0+255),b
  7957  0006F2                     
  7958                           ; BSR set to: 0
  7959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7960  0006F2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7961  0006F6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7962  0006FA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7963  0006FE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7964  000702                     
  7965                           ; BSR set to: 0
  7966                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7967  000702  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7968  000704  EF88  F003         	goto	u5750
  7969  000708  EF86  F003         	goto	u5751
  7970  00070C                     u5751:
  7971  00070C  EF9E  F003         	goto	l4948
  7972  000710                     u5750:
  7973  000710                     
  7974                           ; BSR set to: 0
  7975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7976  000710  0E00               	movlw	0
  7977  000712  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7978  000714  0E01               	movlw	1
  7979  000716  6F89               	movwf	efgtoa@sign& (0+255),b
  7980  000718                     
  7981                           ; BSR set to: 0
  7982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7983  000718  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7984  00071C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7985  000720  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7986  000724  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7987  000728  EC77  F02D         	call	___flneg	;wreg free
  7988  00072C  C001  F09B         	movff	?___flneg,efgtoa@g
  7989  000730  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7990  000734  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7991  000738  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7992  00073C                     l4948:
  7993                           
  7994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7995  00073C  0E00               	movlw	0
  7996  00073E  0100               	movlb	0	; () banked
  7997  000740  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7998  000742  0E00               	movlw	0
  7999  000744  6FA1               	movwf	efgtoa@n& (0+255),b
  8000  000746                     
  8001                           ; BSR set to: 0
  8002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  8003  000746  C1D1  F08E         	movff	_width,efgtoa@w
  8004  00074A  C1D2  F08F         	movff	_width+1,efgtoa@w+1
  8005  00074E                     
  8006                           ; BSR set to: 0
  8007                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  8008  00074E  5189               	movf	efgtoa@sign& (0+255),w,b
  8009  000750  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8010  000752  A4D8               	btfss	status,2,c
  8011  000754  EFAE  F003         	goto	u5761
  8012  000758  EFB0  F003         	goto	u5760
  8013  00075C                     u5761:
  8014  00075C  EFB7  F003         	goto	l4956
  8015  000760                     u5760:
  8016  000760                     
  8017                           ; BSR set to: 0
  8018  000760  A5F8               	btfss	_flags& (0+255),2,b
  8019  000762  EFB5  F003         	goto	u5771
  8020  000766  EFB7  F003         	goto	u5770
  8021  00076A                     u5771:
  8022  00076A  EFD1  F003         	goto	l4968
  8023  00076E                     u5770:
  8024  00076E                     l4956:
  8025                           
  8026                           ; BSR set to: 0
  8027                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  8028  00076E  5189               	movf	efgtoa@sign& (0+255),w,b
  8029  000770  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8030  000772  A4D8               	btfss	status,2,c
  8031  000774  EFBE  F003         	goto	u5781
  8032  000778  EFC0  F003         	goto	u5780
  8033  00077C                     u5781:
  8034  00077C  EFC6  F003         	goto	l4960
  8035  000780                     u5780:
  8036  000780                     
  8037                           ; BSR set to: 0
  8038  000780  0E00               	movlw	0
  8039  000782  6F74               	movwf	(_efgtoa$2564+1)& (0+255),b
  8040  000784  0E2B               	movlw	43
  8041  000786  6F73               	movwf	_efgtoa$2564& (0+255),b
  8042  000788  EFCA  F003         	goto	l4962
  8043  00078C                     l4960:
  8044                           
  8045                           ; BSR set to: 0
  8046  00078C  0E00               	movlw	0
  8047  00078E  6F74               	movwf	(_efgtoa$2564+1)& (0+255),b
  8048  000790  0E2D               	movlw	45
  8049  000792  6F73               	movwf	_efgtoa$2564& (0+255),b
  8050  000794                     l4962:
  8051                           
  8052                           ; BSR set to: 0
  8053  000794  C073  F240         	movff	_efgtoa$2564,_dbuf
  8054  000798                     
  8055                           ; BSR set to: 0
  8056                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  8057  000798  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8058  00079A  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8059  00079C                     
  8060                           ; BSR set to: 0
  8061                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  8062  00079C  078E               	decf	efgtoa@w& (0+255),f,b
  8063  00079E  A0D8               	btfss	status,0,c
  8064  0007A0  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8065  0007A2                     l4968:
  8066                           
  8067                           ; BSR set to: 0
  8068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8069  0007A2  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8070  0007A6  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8071  0007AA  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8072  0007AE  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8073  0007B2  EC7D  F025         	call	___fpclassifyf	;wreg free
  8074  0007B6  0401               	decf	?___fpclassifyf^0,w,c
  8075  0007B8  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8076  0007BA  A4D8               	btfss	status,2,c
  8077  0007BC  EFE2  F003         	goto	u5791
  8078  0007C0  EFE4  F003         	goto	u5790
  8079  0007C4                     u5791:
  8080  0007C4  EF3B  F004         	goto	l4986
  8081  0007C8                     u5790:
  8082  0007C8  0EBF               	movlw	191
  8083  0007CA  0100               	movlb	0	; () banked
  8084  0007CC  6F6A               	movwf	??_efgtoa& (0+255),b
  8085  0007CE  0EFF               	movlw	255
  8086  0007D0  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8087  0007D2  505E               	movf	efgtoa@c^0,w,c
  8088  0007D4  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8089  0007D6  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8090  0007D8  516A               	movf	??_efgtoa& (0+255),w,b
  8091  0007DA  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8092  0007DC  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8093  0007DE  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8094  0007E0  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8095  0007E2  E10A               	bnz	u5800
  8096  0007E4  0E1A               	movlw	26
  8097  0007E6  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8098  0007E8  A0D8               	btfss	status,0,c
  8099  0007EA  EFF9  F003         	goto	u5801
  8100  0007EE  EFFC  F003         	goto	u5800
  8101  0007F2                     u5801:
  8102  0007F2  0E01               	movlw	1
  8103  0007F4  EFFD  F003         	goto	u5810
  8104  0007F8                     u5800:
  8105  0007F8  0E00               	movlw	0
  8106  0007FA                     u5810:
  8107  0007FA  6F75               	movwf	_efgtoa$2565& (0+255),b
  8108  0007FC  6B76               	clrf	(_efgtoa$2565+1)& (0+255),b
  8109  0007FE                     
  8110                           ; BSR set to: 0
  8111  0007FE  5175               	movf	_efgtoa$2565& (0+255),w,b
  8112  000800  1176               	iorwf	(_efgtoa$2565+1)& (0+255),w,b
  8113  000802  B4D8               	btfsc	status,2,c
  8114  000804  EF06  F004         	goto	u5821
  8115  000808  EF08  F004         	goto	u5820
  8116  00080C                     u5821:
  8117  00080C  EF16  F004         	goto	l4978
  8118  000810                     u5820:
  8119  000810                     
  8120                           ; BSR set to: 0
  8121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  8122  000810  0E40               	movlw	low _dbuf
  8123  000812  25A1               	addwf	efgtoa@n& (0+255),w,b
  8124  000814  6E01               	movwf	strcpy@dest^0,c
  8125  000816  0E02               	movlw	high _dbuf
  8126  000818  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8127  00081A  6E02               	movwf	(strcpy@dest+1)^0,c
  8128  00081C  0ED4               	movlw	low STR_17
  8129  00081E  6E03               	movwf	strcpy@src^0,c
  8130  000820  0E06               	movlw	high STR_17
  8131  000822  6E04               	movwf	(strcpy@src+1)^0,c
  8132  000824  ECC1  F02B         	call	_strcpy	;wreg free
  8133                           
  8134                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  8135  000828  EF22  F004         	goto	l4980
  8136  00082C                     l4978:
  8137                           
  8138                           ; BSR set to: 0
  8139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  8140  00082C  0E40               	movlw	low _dbuf
  8141  00082E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8142  000830  6E01               	movwf	strcpy@dest^0,c
  8143  000832  0E02               	movlw	high _dbuf
  8144  000834  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8145  000836  6E02               	movwf	(strcpy@dest+1)^0,c
  8146  000838  0EDC               	movlw	low STR_18
  8147  00083A  6E03               	movwf	strcpy@src^0,c
  8148  00083C  0E06               	movlw	high STR_18
  8149  00083E  6E04               	movwf	(strcpy@src+1)^0,c
  8150  000840  ECC1  F02B         	call	_strcpy	;wreg free
  8151  000844                     l4980:
  8152                           
  8153                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8154  000844  0100               	movlb	0	; () banked
  8155  000846  0EFD               	movlw	253
  8156  000848  278E               	addwf	efgtoa@w& (0+255),f,b
  8157  00084A  0EFF               	movlw	255
  8158  00084C  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8159  00084E                     l4982:
  8160                           
  8161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8162  00084E  C058  F011         	movff	efgtoa@fp,pad@fp
  8163  000852  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  8164  000856  0E40               	movlw	low _dbuf
  8165  000858  6E13               	movwf	pad@buf^0,c
  8166  00085A  0E02               	movlw	high _dbuf
  8167  00085C  6E14               	movwf	(pad@buf+1)^0,c
  8168  00085E  C08E  F015         	movff	efgtoa@w,pad@p
  8169  000862  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  8170  000866  EC9C  F027         	call	_pad	;wreg free
  8171  00086A  C011  F058         	movff	?_pad,?_efgtoa
  8172  00086E  C012  F059         	movff	?_pad+1,?_efgtoa+1
  8173  000872  EF4B  F009         	goto	l1318
  8174  000876                     l4986:
  8175                           
  8176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8177  000876  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8178  00087A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8179  00087E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8180  000882  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8181  000886  EC7D  F025         	call	___fpclassifyf	;wreg free
  8182  00088A  5001               	movf	?___fpclassifyf^0,w,c
  8183  00088C  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8184  00088E  A4D8               	btfss	status,2,c
  8185  000890  EF4C  F004         	goto	u5831
  8186  000894  EF4E  F004         	goto	u5830
  8187  000898                     u5831:
  8188  000898  EF8E  F004         	goto	l5004
  8189  00089C                     u5830:
  8190  00089C  0EBF               	movlw	191
  8191  00089E  0100               	movlb	0	; () banked
  8192  0008A0  6F6A               	movwf	??_efgtoa& (0+255),b
  8193  0008A2  0EFF               	movlw	255
  8194  0008A4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8195  0008A6  505E               	movf	efgtoa@c^0,w,c
  8196  0008A8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8197  0008AA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8198  0008AC  516A               	movf	??_efgtoa& (0+255),w,b
  8199  0008AE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8200  0008B0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8201  0008B2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8202  0008B4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8203  0008B6  E10A               	bnz	u5840
  8204  0008B8  0E1A               	movlw	26
  8205  0008BA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8206  0008BC  A0D8               	btfss	status,0,c
  8207  0008BE  EF63  F004         	goto	u5841
  8208  0008C2  EF66  F004         	goto	u5840
  8209  0008C6                     u5841:
  8210  0008C6  0E01               	movlw	1
  8211  0008C8  EF67  F004         	goto	u5850
  8212  0008CC                     u5840:
  8213  0008CC  0E00               	movlw	0
  8214  0008CE                     u5850:
  8215  0008CE  6F77               	movwf	_efgtoa$2569& (0+255),b
  8216  0008D0  6B78               	clrf	(_efgtoa$2569+1)& (0+255),b
  8217  0008D2                     
  8218                           ; BSR set to: 0
  8219  0008D2  5177               	movf	_efgtoa$2569& (0+255),w,b
  8220  0008D4  1178               	iorwf	(_efgtoa$2569+1)& (0+255),w,b
  8221  0008D6  B4D8               	btfsc	status,2,c
  8222  0008D8  EF70  F004         	goto	u5861
  8223  0008DC  EF72  F004         	goto	u5860
  8224  0008E0                     u5861:
  8225  0008E0  EF80  F004         	goto	l4996
  8226  0008E4                     u5860:
  8227  0008E4                     
  8228                           ; BSR set to: 0
  8229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  8230  0008E4  0E40               	movlw	low _dbuf
  8231  0008E6  25A1               	addwf	efgtoa@n& (0+255),w,b
  8232  0008E8  6E01               	movwf	strcpy@dest^0,c
  8233  0008EA  0E02               	movlw	high _dbuf
  8234  0008EC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8235  0008EE  6E02               	movwf	(strcpy@dest+1)^0,c
  8236  0008F0  0ED8               	movlw	low STR_21
  8237  0008F2  6E03               	movwf	strcpy@src^0,c
  8238  0008F4  0E06               	movlw	high STR_21
  8239  0008F6  6E04               	movwf	(strcpy@src+1)^0,c
  8240  0008F8  ECC1  F02B         	call	_strcpy	;wreg free
  8241                           
  8242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  8243  0008FC  EF22  F004         	goto	l4980
  8244  000900                     l4996:
  8245                           
  8246                           ; BSR set to: 0
  8247                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  8248  000900  0E40               	movlw	low _dbuf
  8249  000902  25A1               	addwf	efgtoa@n& (0+255),w,b
  8250  000904  6E01               	movwf	strcpy@dest^0,c
  8251  000906  0E02               	movlw	high _dbuf
  8252  000908  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8253  00090A  6E02               	movwf	(strcpy@dest+1)^0,c
  8254  00090C  0EE0               	movlw	low STR_22
  8255  00090E  6E03               	movwf	strcpy@src^0,c
  8256  000910  0E06               	movlw	high STR_22
  8257  000912  6E04               	movwf	(strcpy@src+1)^0,c
  8258  000914  ECC1  F02B         	call	_strcpy	;wreg free
  8259  000918  EF22  F004         	goto	l4980
  8260  00091C                     l5004:
  8261                           
  8262                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  8263  00091C  0E00               	movlw	0
  8264  00091E  0100               	movlb	0	; () banked
  8265  000920  6FA3               	movwf	efgtoa@u& (0+255),b
  8266  000922  0E00               	movlw	0
  8267  000924  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8268  000926  0E80               	movlw	128
  8269  000928  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8270  00092A  0E3F               	movlw	63
  8271  00092C  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8272                           
  8273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  8274  00092E  0E00               	movlw	0
  8275  000930  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8276  000932  0E00               	movlw	0
  8277  000934  6F9F               	movwf	efgtoa@e& (0+255),b
  8278  000936                     
  8279                           ; BSR set to: 0
  8280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  8281  000936  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  8282  00093A  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  8283  00093E  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  8284  000942  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  8285  000946  0E00               	movlw	0
  8286  000948  6E05               	movwf	___fleq@ff2^0,c
  8287  00094A  0E00               	movlw	0
  8288  00094C  6E06               	movwf	(___fleq@ff2+1)^0,c
  8289  00094E  0E00               	movlw	0
  8290  000950  6E07               	movwf	(___fleq@ff2+2)^0,c
  8291  000952  0E00               	movlw	0
  8292  000954  6E08               	movwf	(___fleq@ff2+3)^0,c
  8293  000956  EC0E  F029         	call	___fleq	;wreg free
  8294  00095A  B0D8               	btfsc	status,0,c
  8295  00095C  EFB2  F004         	goto	u5871
  8296  000960  EFB4  F004         	goto	u5870
  8297  000964                     u5871:
  8298  000964  EF37  F005         	goto	l5022
  8299  000968                     u5870:
  8300  000968  EFD3  F004         	goto	l5014
  8301  00096C                     l5010:
  8302                           
  8303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  8304  00096C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8305  000970  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8306  000974  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8307  000978  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8308  00097C  0E00               	movlw	0
  8309  00097E  6E20               	movwf	___flmul@a^0,c
  8310  000980  0E00               	movlw	0
  8311  000982  6E21               	movwf	(___flmul@a+1)^0,c
  8312  000984  0E20               	movlw	32
  8313  000986  6E22               	movwf	(___flmul@a+2)^0,c
  8314  000988  0E41               	movlw	65
  8315  00098A  6E23               	movwf	(___flmul@a+3)^0,c
  8316  00098C  ECCE  F012         	call	___flmul	;wreg free
  8317  000990  C01C  F0A3         	movff	?___flmul,efgtoa@u
  8318  000994  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  8319  000998  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  8320  00099C  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  8321  0009A0                     
  8322                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  8323  0009A0  0100               	movlb	0	; () banked
  8324  0009A2  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  8325  0009A4  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8326  0009A6                     l5014:
  8327                           
  8328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  8329  0009A6  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8330  0009AA  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8331  0009AE  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8332  0009B2  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8333  0009B6  0E00               	movlw	0
  8334  0009B8  6E20               	movwf	___flmul@a^0,c
  8335  0009BA  0E00               	movlw	0
  8336  0009BC  6E21               	movwf	(___flmul@a+1)^0,c
  8337  0009BE  0E20               	movlw	32
  8338  0009C0  6E22               	movwf	(___flmul@a+2)^0,c
  8339  0009C2  0E41               	movlw	65
  8340  0009C4  6E23               	movwf	(___flmul@a+3)^0,c
  8341  0009C6  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8342  0009CA  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8343  0009CE  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8344  0009D2  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8345  0009D6  ECCE  F012         	call	___flmul	;wreg free
  8346  0009DA  C01C  F039         	movff	?___flmul,___flge@ff2
  8347  0009DE  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  8348  0009E2  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  8349  0009E6  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  8350  0009EA  ECFB  F024         	call	___flge	;wreg free
  8351  0009EE  B0D8               	btfsc	status,0,c
  8352  0009F0  EFFC  F004         	goto	u5881
  8353  0009F4  EFFE  F004         	goto	u5880
  8354  0009F8                     u5881:
  8355  0009F8  EFB6  F004         	goto	l5010
  8356  0009FC                     u5880:
  8357  0009FC  EF1E  F005         	goto	l5020
  8358  000A00                     l5016:
  8359                           
  8360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  8361  000A00  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8362  000A04  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8363  000A08  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8364  000A0C  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8365  000A10  0E00               	movlw	0
  8366  000A12  6E39               	movwf	___fldiv@a^0,c
  8367  000A14  0E00               	movlw	0
  8368  000A16  6E3A               	movwf	(___fldiv@a+1)^0,c
  8369  000A18  0E20               	movlw	32
  8370  000A1A  6E3B               	movwf	(___fldiv@a+2)^0,c
  8371  000A1C  0E41               	movlw	65
  8372  000A1E  6E3C               	movwf	(___fldiv@a+3)^0,c
  8373  000A20  ECE3  F014         	call	___fldiv	;wreg free
  8374  000A24  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8375  000A28  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8376  000A2C  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8377  000A30  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8378  000A34                     
  8379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  8380  000A34  0100               	movlb	0	; () banked
  8381  000A36  079F               	decf	efgtoa@e& (0+255),f,b
  8382  000A38  A0D8               	btfss	status,0,c
  8383  000A3A  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  8384  000A3C                     l5020:
  8385                           
  8386                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  8387  000A3C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8388  000A40  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8389  000A44  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8390  000A48  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8391  000A4C  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  8392  000A50  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  8393  000A54  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  8394  000A58  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  8395  000A5C  ECFB  F024         	call	___flge	;wreg free
  8396  000A60  A0D8               	btfss	status,0,c
  8397  000A62  EF35  F005         	goto	u5891
  8398  000A66  EF37  F005         	goto	u5890
  8399  000A6A                     u5891:
  8400  000A6A  EF00  F005         	goto	l5016
  8401  000A6E                     u5890:
  8402  000A6E                     l5022:
  8403                           
  8404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  8405  000A6E  C05E  F007         	movff	efgtoa@c,tolower@c
  8406  000A72  6A08               	clrf	(tolower@c+1)^0,c
  8407  000A74  EC91  F02B         	call	_tolower	;wreg free
  8408  000A78  5007               	movf	?_tolower^0,w,c
  8409  000A7A  0100               	movlb	0	; () banked
  8410  000A7C  6F90               	movwf	efgtoa@mode& (0+255),b
  8411  000A7E                     
  8412                           ; BSR set to: 0
  8413                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  8414  000A7E  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  8415  000A82                     
  8416                           ; BSR set to: 0
  8417                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  8418  000A82  0E67               	movlw	103
  8419  000A84  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8420  000A86  A4D8               	btfss	status,2,c
  8421  000A88  EF48  F005         	goto	u5901
  8422  000A8C  EF4A  F005         	goto	u5900
  8423  000A90                     u5901:
  8424  000A90  EF70  F005         	goto	l5036
  8425  000A94                     u5900:
  8426  000A94                     
  8427                           ; BSR set to: 0
  8428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  8429  000A94  51F6               	movf	_prec& (0+255),w,b
  8430  000A96  11F7               	iorwf	(_prec+1)& (0+255),w,b
  8431  000A98  A4D8               	btfss	status,2,c
  8432  000A9A  EF51  F005         	goto	u5911
  8433  000A9E  EF53  F005         	goto	u5910
  8434  000AA2                     u5911:
  8435  000AA2  EF57  F005         	goto	l5032
  8436  000AA6                     u5910:
  8437  000AA6                     
  8438                           ; BSR set to: 0
  8439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  8440  000AA6  0E00               	movlw	0
  8441  000AA8  6FF7               	movwf	(_prec+1)& (0+255),b
  8442  000AAA  0E01               	movlw	1
  8443  000AAC  6FF6               	movwf	_prec& (0+255),b
  8444  000AAE                     l5032:
  8445                           
  8446                           ; BSR set to: 0
  8447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  8448  000AAE  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8449  000AB0  EF64  F005         	goto	u5920
  8450  000AB4  51F7               	movf	(_prec+1)& (0+255),w,b
  8451  000AB6  E106               	bnz	u5921
  8452  000AB8  05F6               	decf	_prec& (0+255),w,b
  8453  000ABA  B0D8               	btfsc	status,0,c
  8454  000ABC  EF62  F005         	goto	u5921
  8455  000AC0  EF64  F005         	goto	u5920
  8456  000AC4                     u5921:
  8457  000AC4  EF6A  F005         	goto	l1336
  8458  000AC8                     u5920:
  8459  000AC8                     l5034:
  8460                           
  8461                           ; BSR set to: 0
  8462  000AC8  0E00               	movlw	0
  8463  000ACA  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8464  000ACC  0E06               	movlw	6
  8465  000ACE  6F8B               	movwf	efgtoa@p& (0+255),b
  8466  000AD0  EF79  F005         	goto	l5042
  8467  000AD4                     l1336:
  8468                           
  8469                           ; BSR set to: 0
  8470  000AD4  C0F6  F08B         	movff	_prec,efgtoa@p
  8471  000AD8  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  8472  000ADC  EF79  F005         	goto	l5042
  8473  000AE0                     l5036:
  8474                           
  8475                           ; BSR set to: 0
  8476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  8477  000AE0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8478  000AE2  EF75  F005         	goto	u5931
  8479  000AE6  EF77  F005         	goto	u5930
  8480  000AEA                     u5931:
  8481  000AEA  EF64  F005         	goto	l5034
  8482  000AEE                     u5930:
  8483  000AEE  EF6A  F005         	goto	l1336
  8484  000AF2                     l5042:
  8485                           
  8486                           ; BSR set to: 0
  8487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8488  000AF2  0E67               	movlw	103
  8489  000AF4  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8490  000AF6  A4D8               	btfss	status,2,c
  8491  000AF8  EF80  F005         	goto	u5941
  8492  000AFC  EF82  F005         	goto	u5940
  8493  000B00                     u5941:
  8494  000B00  EFB1  F005         	goto	l5052
  8495  000B04                     u5940:
  8496  000B04                     
  8497                           ; BSR set to: 0
  8498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8499  000B04  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8500  000B06  EF90  F005         	goto	u5950
  8501  000B0A  0EFC               	movlw	252
  8502  000B0C  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8503  000B0E  0EFF               	movlw	255
  8504  000B10  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8505  000B12  A0D8               	btfss	status,0,c
  8506  000B14  EF8E  F005         	goto	u5951
  8507  000B18  EF90  F005         	goto	u5950
  8508  000B1C                     u5951:
  8509  000B1C  EFAF  F005         	goto	l5050
  8510  000B20                     u5950:
  8511  000B20                     
  8512                           ; BSR set to: 0
  8513  000B20  0EFF               	movlw	255
  8514  000B22  6F6A               	movwf	??_efgtoa& (0+255),b
  8515  000B24  0EFF               	movlw	255
  8516  000B26  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8517  000B28  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8518  000B2C  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8519  000B30  516A               	movf	??_efgtoa& (0+255),w,b
  8520  000B32  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8521  000B34  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8522  000B36  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8523  000B38  519F               	movf	efgtoa@e& (0+255),w,b
  8524  000B3A  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8525  000B3C  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8526  000B3E  0A80               	xorlw	128
  8527  000B40  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8528  000B42  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8529  000B44  0A80               	xorlw	128
  8530  000B46  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8531  000B48  A0D8               	btfss	status,0,c
  8532  000B4A  EFA9  F005         	goto	u5961
  8533  000B4E  EFAB  F005         	goto	u5960
  8534  000B52                     u5961:
  8535  000B52  EFAF  F005         	goto	l5050
  8536  000B56                     u5960:
  8537  000B56                     
  8538                           ; BSR set to: 0
  8539                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8540  000B56  0E66               	movlw	102
  8541  000B58  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8542                           
  8543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8544  000B5A  EFB1  F005         	goto	l5052
  8545  000B5E                     l5050:
  8546                           
  8547                           ; BSR set to: 0
  8548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8549  000B5E  0E65               	movlw	101
  8550  000B60  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8551  000B62                     l5052:
  8552                           
  8553                           ; BSR set to: 0
  8554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8555  000B62  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8556  000B66  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8557  000B6A                     
  8558                           ; BSR set to: 0
  8559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8560  000B6A  0E67               	movlw	103
  8561  000B6C  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8562  000B6E  A4D8               	btfss	status,2,c
  8563  000B70  EFBC  F005         	goto	u5971
  8564  000B74  EFBE  F005         	goto	u5970
  8565  000B78                     u5971:
  8566  000B78  EFCE  F005         	goto	l5060
  8567  000B7C                     u5970:
  8568  000B7C                     
  8569                           ; BSR set to: 0
  8570  000B7C  0E66               	movlw	102
  8571  000B7E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8572  000B80  A4D8               	btfss	status,2,c
  8573  000B82  EFC5  F005         	goto	u5981
  8574  000B86  EFC7  F005         	goto	u5980
  8575  000B8A                     u5981:
  8576  000B8A  EFD0  F005         	goto	l5062
  8577  000B8E                     u5980:
  8578  000B8E                     
  8579                           ; BSR set to: 0
  8580  000B8E  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8581  000B90  EFCE  F005         	goto	u5990
  8582  000B94  EFCC  F005         	goto	u5991
  8583  000B98                     u5991:
  8584  000B98  EFD0  F005         	goto	l5062
  8585  000B9C                     u5990:
  8586  000B9C                     l5060:
  8587                           
  8588                           ; BSR set to: 0
  8589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8590  000B9C  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8591  000B9E  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8592  000BA0                     l5062:
  8593                           
  8594                           ; BSR set to: 0
  8595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8596  000BA0  0E66               	movlw	102
  8597  000BA2  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8598  000BA4  A4D8               	btfss	status,2,c
  8599  000BA6  EFD7  F005         	goto	u6001
  8600  000BAA  EFD9  F005         	goto	u6000
  8601  000BAE                     u6001:
  8602  000BAE  EFF9  F005         	goto	l5072
  8603  000BB2                     u6000:
  8604  000BB2                     
  8605                           ; BSR set to: 0
  8606                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8607  000BB2  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8608  000BB4  EFE0  F005         	goto	u6010
  8609  000BB8  EFDE  F005         	goto	u6011
  8610  000BBC                     u6011:
  8611  000BBC  EFEC  F005         	goto	l5068
  8612  000BC0                     u6010:
  8613  000BC0                     
  8614                           ; BSR set to: 0
  8615                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8616  000BC0  0E00               	movlw	0
  8617  000BC2  6FA3               	movwf	efgtoa@u& (0+255),b
  8618  000BC4  0E00               	movlw	0
  8619  000BC6  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8620  000BC8  0E80               	movlw	128
  8621  000BCA  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8622  000BCC  0E3F               	movlw	63
  8623  000BCE  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8624                           
  8625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8626  000BD0  0E00               	movlw	0
  8627  000BD2  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8628  000BD4  0E00               	movlw	0
  8629  000BD6  6F9F               	movwf	efgtoa@e& (0+255),b
  8630  000BD8                     l5068:
  8631                           
  8632                           ; BSR set to: 0
  8633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8634  000BD8  0E67               	movlw	103
  8635  000BDA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8636  000BDC  B4D8               	btfsc	status,2,c
  8637  000BDE  EFF3  F005         	goto	u6021
  8638  000BE2  EFF5  F005         	goto	u6020
  8639  000BE6                     u6021:
  8640  000BE6  EFF9  F005         	goto	l5072
  8641  000BEA                     u6020:
  8642  000BEA                     
  8643                           ; BSR set to: 0
  8644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8645  000BEA  519F               	movf	efgtoa@e& (0+255),w,b
  8646  000BEC  2783               	addwf	efgtoa@m& (0+255),f,b
  8647  000BEE  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8648  000BF0  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8649  000BF2                     l5072:
  8650                           
  8651                           ; BSR set to: 0
  8652                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8653  000BF2  0E00               	movlw	0
  8654  000BF4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8655  000BF6  0E00               	movlw	0
  8656  000BF8  6F99               	movwf	efgtoa@i& (0+255),b
  8657  000BFA                     
  8658                           ; BSR set to: 0
  8659                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8660  000BFA  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8661  000BFE  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8662  000C02  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8663  000C06  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8664  000C0A                     
  8665                           ; BSR set to: 0
  8666                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8667  000C0A  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8668  000C0E  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8669  000C12  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8670  000C16  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8671                           
  8672                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8673  000C1A  EF8A  F006         	goto	l5086
  8674  000C1E                     l5078:
  8675                           
  8676                           ; BSR set to: 0
  8677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8678  000C1E  C091  F035         	movff	efgtoa@h,___fldiv@b
  8679  000C22  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8680  000C26  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8681  000C2A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8682  000C2E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8683  000C32  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8684  000C36  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8685  000C3A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8686  000C3E  ECE3  F014         	call	___fldiv	;wreg free
  8687  000C42  C035  F04E         	movff	?___fldiv,floorf@x
  8688  000C46  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8689  000C4A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8690  000C4E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8691  000C52  ECFF  F01A         	call	_floorf	;wreg free
  8692  000C56  C04E  F095         	movff	?_floorf,efgtoa@l
  8693  000C5A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8694  000C5E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8695  000C62  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8696                           
  8697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8698  000C66  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8699  000C6A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8700  000C6E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8701  000C72  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8702  000C76  ECF6  F023         	call	___fltol	;wreg free
  8703  000C7A  C04E  F087         	movff	?___fltol,efgtoa@d
  8704  000C7E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8705  000C82                     
  8706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8707  000C82  C091  F045         	movff	efgtoa@h,___flsub@b
  8708  000C86  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8709  000C8A  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8710  000C8E  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8711  000C92  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8712  000C96  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8713  000C9A  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8714  000C9E  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8715  000CA2  C095  F01C         	movff	efgtoa@l,___flmul@b
  8716  000CA6  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8717  000CAA  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8718  000CAE  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8719  000CB2  ECCE  F012         	call	___flmul	;wreg free
  8720  000CB6  C01C  F049         	movff	?___flmul,___flsub@a
  8721  000CBA  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8722  000CBE  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8723  000CC2  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8724  000CC6  EC98  F02C         	call	___flsub	;wreg free
  8725  000CCA  C045  F091         	movff	?___flsub,efgtoa@h
  8726  000CCE  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8727  000CD2  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8728  000CD6  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8729  000CDA                     
  8730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8731  000CDA  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8732  000CDE  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8733  000CE2  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8734  000CE6  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8735  000CEA  0E00               	movlw	0
  8736  000CEC  6E39               	movwf	___fldiv@a^0,c
  8737  000CEE  0E00               	movlw	0
  8738  000CF0  6E3A               	movwf	(___fldiv@a+1)^0,c
  8739  000CF2  0E20               	movlw	32
  8740  000CF4  6E3B               	movwf	(___fldiv@a+2)^0,c
  8741  000CF6  0E41               	movlw	65
  8742  000CF8  6E3C               	movwf	(___fldiv@a+3)^0,c
  8743  000CFA  ECE3  F014         	call	___fldiv	;wreg free
  8744  000CFE  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8745  000D02  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8746  000D06  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8747  000D0A  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8748  000D0E                     
  8749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8750  000D0E  0100               	movlb	0	; () banked
  8751  000D10  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8752  000D12  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8753  000D14                     l5086:
  8754                           
  8755                           ; BSR set to: 0
  8756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8757  000D14  5183               	movf	efgtoa@m& (0+255),w,b
  8758  000D16  5D99               	subwf	efgtoa@i& (0+255),w,b
  8759  000D18  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8760  000D1A  0A80               	xorlw	128
  8761  000D1C  6F6A               	movwf	??_efgtoa& (0+255),b
  8762  000D1E  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8763  000D20  0A80               	xorlw	128
  8764  000D22  596A               	subwfb	??_efgtoa& (0+255),w,b
  8765  000D24  A0D8               	btfss	status,0,c
  8766  000D26  EF97  F006         	goto	u6031
  8767  000D2A  EF99  F006         	goto	u6030
  8768  000D2E                     u6031:
  8769  000D2E  EF0F  F006         	goto	l5078
  8770  000D32                     u6030:
  8771  000D32                     
  8772                           ; BSR set to: 0
  8773                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8774  000D32  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8775  000D36  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8776  000D3A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8777  000D3E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8778  000D42  0E00               	movlw	0
  8779  000D44  6E20               	movwf	___flmul@a^0,c
  8780  000D46  0E00               	movlw	0
  8781  000D48  6E21               	movwf	(___flmul@a+1)^0,c
  8782  000D4A  0EA0               	movlw	160
  8783  000D4C  6E22               	movwf	(___flmul@a+2)^0,c
  8784  000D4E  0E40               	movlw	64
  8785  000D50  6E23               	movwf	(___flmul@a+3)^0,c
  8786  000D52  ECCE  F012         	call	___flmul	;wreg free
  8787  000D56  C01C  F095         	movff	?___flmul,efgtoa@l
  8788  000D5A  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8789  000D5E  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8790  000D62  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8791  000D66                     
  8792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8793  000D66  C091  F035         	movff	efgtoa@h,___flge@ff1
  8794  000D6A  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8795  000D6E  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8796  000D72  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8797  000D76  C095  F039         	movff	efgtoa@l,___flge@ff2
  8798  000D7A  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8799  000D7E  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8800  000D82  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8801  000D86  ECFB  F024         	call	___flge	;wreg free
  8802  000D8A  B0D8               	btfsc	status,0,c
  8803  000D8C  EFCA  F006         	goto	u6041
  8804  000D90  EFCC  F006         	goto	u6040
  8805  000D94                     u6041:
  8806  000D94  EFD7  F006         	goto	l5094
  8807  000D98                     u6040:
  8808  000D98                     
  8809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8810  000D98  0E00               	movlw	0
  8811  000D9A  0100               	movlb	0	; () banked
  8812  000D9C  6F95               	movwf	efgtoa@l& (0+255),b
  8813  000D9E  0E00               	movlw	0
  8814  000DA0  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8815  000DA2  0E00               	movlw	0
  8816  000DA4  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8817  000DA6  0E00               	movlw	0
  8818  000DA8  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8819                           
  8820                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8821  000DAA  EF00  F007         	goto	l5100
  8822  000DAE                     l5094:
  8823                           
  8824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8825  000DAE  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8826  000DB2  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8827  000DB6  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8828  000DBA  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8829  000DBE  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8830  000DC2  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8831  000DC6  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8832  000DCA  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8833  000DCE  EC0E  F029         	call	___fleq	;wreg free
  8834  000DD2  A0D8               	btfss	status,0,c
  8835  000DD4  EFEE  F006         	goto	u6051
  8836  000DD8  EFF0  F006         	goto	u6050
  8837  000DDC                     u6051:
  8838  000DDC  EF00  F007         	goto	l5100
  8839  000DE0                     u6050:
  8840  000DE0  0100               	movlb	0	; () banked
  8841  000DE2  B187               	btfsc	efgtoa@d& (0+255),0,b
  8842  000DE4  EFF6  F006         	goto	u6061
  8843  000DE8  EFF8  F006         	goto	u6060
  8844  000DEC                     u6061:
  8845  000DEC  EF00  F007         	goto	l5100
  8846  000DF0                     u6060:
  8847  000DF0                     
  8848                           ; BSR set to: 0
  8849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8850  000DF0  0E00               	movlw	0
  8851  000DF2  6F95               	movwf	efgtoa@l& (0+255),b
  8852  000DF4  0E00               	movlw	0
  8853  000DF6  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8854  000DF8  0E00               	movlw	0
  8855  000DFA  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8856  000DFC  0E00               	movlw	0
  8857  000DFE  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8858  000E00                     l5100:
  8859                           
  8860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8861  000E00  C09B  F035         	movff	efgtoa@g,___fladd@b
  8862  000E04  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8863  000E08  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8864  000E0C  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8865  000E10  C095  F039         	movff	efgtoa@l,___fladd@a
  8866  000E14  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8867  000E18  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8868  000E1C  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8869  000E20  EC6E  F010         	call	___fladd	;wreg free
  8870  000E24  C035  F091         	movff	?___fladd,efgtoa@h
  8871  000E28  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8872  000E2C  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8873  000E30  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8874  000E34                     
  8875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8876  000E34  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8877  000E38  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8878  000E3C  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8879  000E40  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8880  000E44                     
  8881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8882  000E44  0E65               	movlw	101
  8883  000E46  0100               	movlb	0	; () banked
  8884  000E48  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8885  000E4A  B4D8               	btfsc	status,2,c
  8886  000E4C  EF2A  F007         	goto	u6071
  8887  000E50  EF2C  F007         	goto	u6070
  8888  000E54                     u6071:
  8889  000E54  EF32  F007         	goto	l5108
  8890  000E58                     u6070:
  8891  000E58                     
  8892                           ; BSR set to: 0
  8893  000E58  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8894  000E5C  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8895  000E60  EF36  F007         	goto	l1362
  8896  000E64                     l5108:
  8897                           
  8898                           ; BSR set to: 0
  8899  000E64  0E00               	movlw	0
  8900  000E66  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8901  000E68  0E00               	movlw	0
  8902  000E6A  6F85               	movwf	efgtoa@ne& (0+255),b
  8903  000E6C                     l1362:
  8904                           
  8905                           ; BSR set to: 0
  8906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8907  000E6C  0E00               	movlw	0
  8908  000E6E  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8909  000E70  0E00               	movlw	0
  8910  000E72  6F81               	movwf	efgtoa@pp& (0+255),b
  8911                           
  8912                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8913  000E74  0E00               	movlw	0
  8914  000E76  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8915  000E78  0E00               	movlw	0
  8916  000E7A  6F7F               	movwf	efgtoa@t& (0+255),b
  8917                           
  8918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8919  000E7C  0E00               	movlw	0
  8920  000E7E  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8921  000E80  0E00               	movlw	0
  8922  000E82  6F99               	movwf	efgtoa@i& (0+255),b
  8923                           
  8924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8925  000E84  EF31  F008         	goto	l5158
  8926  000E88                     l5110:
  8927                           
  8928                           ; BSR set to: 0
  8929                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8930  000E88  C091  F035         	movff	efgtoa@h,___fldiv@b
  8931  000E8C  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8932  000E90  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8933  000E94  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8934  000E98  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8935  000E9C  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8936  000EA0  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8937  000EA4  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8938  000EA8  ECE3  F014         	call	___fldiv	;wreg free
  8939  000EAC  C035  F04E         	movff	?___fldiv,floorf@x
  8940  000EB0  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8941  000EB4  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8942  000EB8  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8943  000EBC  ECFF  F01A         	call	_floorf	;wreg free
  8944  000EC0  C04E  F095         	movff	?_floorf,efgtoa@l
  8945  000EC4  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8946  000EC8  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8947  000ECC  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8948                           
  8949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8950  000ED0  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8951  000ED4  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8952  000ED8  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8953  000EDC  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8954  000EE0  ECF6  F023         	call	___fltol	;wreg free
  8955  000EE4  C04E  F087         	movff	?___fltol,efgtoa@d
  8956  000EE8  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8957  000EEC                     
  8958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8959  000EEC  0100               	movlb	0	; () banked
  8960  000EEE  B9F8               	btfsc	_flags& (0+255),4,b
  8961  000EF0  EF7C  F007         	goto	u6081
  8962  000EF4  EF7E  F007         	goto	u6080
  8963  000EF8                     u6081:
  8964  000EF8  EF9B  F007         	goto	l5122
  8965  000EFC                     u6080:
  8966  000EFC                     
  8967                           ; BSR set to: 0
  8968  000EFC  5187               	movf	efgtoa@d& (0+255),w,b
  8969  000EFE  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8970  000F00  A4D8               	btfss	status,2,c
  8971  000F02  EF85  F007         	goto	u6091
  8972  000F06  EF87  F007         	goto	u6090
  8973  000F0A                     u6091:
  8974  000F0A  EF9B  F007         	goto	l5122
  8975  000F0E                     u6090:
  8976  000F0E                     
  8977                           ; BSR set to: 0
  8978  000F0E  0E67               	movlw	103
  8979  000F10  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8980  000F12  A4D8               	btfss	status,2,c
  8981  000F14  EF8E  F007         	goto	u6101
  8982  000F18  EF90  F007         	goto	u6100
  8983  000F1C                     u6101:
  8984  000F1C  EF9B  F007         	goto	l5122
  8985  000F20                     u6100:
  8986  000F20                     
  8987                           ; BSR set to: 0
  8988  000F20  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8989  000F22  EF97  F007         	goto	u6110
  8990  000F26  EF95  F007         	goto	u6111
  8991  000F2A                     u6111:
  8992  000F2A  EF9B  F007         	goto	l5122
  8993  000F2E                     u6110:
  8994  000F2E                     
  8995                           ; BSR set to: 0
  8996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8997  000F2E  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8998  000F30  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8999                           
  9000                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  9001  000F32  EFE5  F007         	goto	l5150
  9002  000F36                     l5122:
  9003                           
  9004                           ; BSR set to: 0
  9005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  9006  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  9007  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9008  000F3A  A4D8               	btfss	status,2,c
  9009  000F3C  EFA2  F007         	goto	u6121
  9010  000F40  EFA4  F007         	goto	u6120
  9011  000F44                     u6121:
  9012  000F44  EFCE  F007         	goto	l5142
  9013  000F48                     u6120:
  9014  000F48                     
  9015                           ; BSR set to: 0
  9016  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9017  000F4A  EFAB  F007         	goto	u6130
  9018  000F4E  EFA9  F007         	goto	u6131
  9019  000F52                     u6131:
  9020  000F52  EFCE  F007         	goto	l5142
  9021  000F56                     u6130:
  9022  000F56                     
  9023                           ; BSR set to: 0
  9024                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  9025  000F56  0E40               	movlw	low _dbuf
  9026  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  9027  000F5A  6ED9               	movwf	fsr2l,c
  9028  000F5C  0E02               	movlw	high _dbuf
  9029  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9030  000F60  6EDA               	movwf	fsr2h,c
  9031  000F62  0E2E               	movlw	46
  9032  000F64  6EDF               	movwf	indf2,c
  9033  000F66                     
  9034                           ; BSR set to: 0
  9035  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9036  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9037  000F6A                     
  9038                           ; BSR set to: 0
  9039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  9040  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  9041  000F6C  A0D8               	btfss	status,0,c
  9042  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9043  000F70                     
  9044                           ; BSR set to: 0
  9045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  9046  000F70  0E00               	movlw	0
  9047  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9048  000F74  0E01               	movlw	1
  9049  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  9050  000F78  EFCE  F007         	goto	l5142
  9051  000F7C                     l5134:
  9052                           
  9053                           ; BSR set to: 0
  9054                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  9055  000F7C  0E40               	movlw	low _dbuf
  9056  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9057  000F80  6ED9               	movwf	fsr2l,c
  9058  000F82  0E02               	movlw	high _dbuf
  9059  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9060  000F86  6EDA               	movwf	fsr2h,c
  9061  000F88  0E30               	movlw	48
  9062  000F8A  6EDF               	movwf	indf2,c
  9063  000F8C                     
  9064                           ; BSR set to: 0
  9065  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9066  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9067  000F90                     
  9068                           ; BSR set to: 0
  9069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  9070  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  9071  000F92  A0D8               	btfss	status,0,c
  9072  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9073  000F96                     
  9074                           ; BSR set to: 0
  9075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  9076  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  9077  000F98  A0D8               	btfss	status,0,c
  9078  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  9079  000F9C                     l5142:
  9080                           
  9081                           ; BSR set to: 0
  9082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  9083  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  9084  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9085  000FA0  A4D8               	btfss	status,2,c
  9086  000FA2  EFD5  F007         	goto	u6141
  9087  000FA6  EFD7  F007         	goto	u6140
  9088  000FAA                     u6141:
  9089  000FAA  EFBE  F007         	goto	l5134
  9090  000FAE                     u6140:
  9091  000FAE                     
  9092                           ; BSR set to: 0
  9093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  9094  000FAE  0E40               	movlw	low _dbuf
  9095  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  9096  000FB2  6ED9               	movwf	fsr2l,c
  9097  000FB4  0E02               	movlw	high _dbuf
  9098  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9099  000FB8  6EDA               	movwf	fsr2h,c
  9100  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  9101  000FBC  0F30               	addlw	48
  9102  000FBE  6EDF               	movwf	indf2,c
  9103  000FC0                     
  9104                           ; BSR set to: 0
  9105  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9106  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9107  000FC4                     
  9108                           ; BSR set to: 0
  9109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  9110  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  9111  000FC6  A0D8               	btfss	status,0,c
  9112  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9113  000FCA                     l5150:
  9114                           
  9115                           ; BSR set to: 0
  9116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  9117  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  9118  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  9119  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  9120  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  9121  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  9122  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  9123  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  9124  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  9125  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  9126  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  9127  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  9128  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  9129  000FFA  ECCE  F012         	call	___flmul	;wreg free
  9130  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  9131  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  9132  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  9133  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  9134  00100E  EC98  F02C         	call	___flsub	;wreg free
  9135  001012  C045  F091         	movff	?___flsub,efgtoa@h
  9136  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  9137  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  9138  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  9139  001022                     
  9140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  9141  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  9142  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  9143  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  9144  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  9145  001032  0E00               	movlw	0
  9146  001034  6E39               	movwf	___fldiv@a^0,c
  9147  001036  0E00               	movlw	0
  9148  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  9149  00103A  0E20               	movlw	32
  9150  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  9151  00103E  0E41               	movlw	65
  9152  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  9153  001042  ECE3  F014         	call	___fldiv	;wreg free
  9154  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9155  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9156  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9157  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9158  001056                     
  9159                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  9160  001056  0100               	movlb	0	; () banked
  9161  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  9162  00105A  A0D8               	btfss	status,0,c
  9163  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  9164  00105E                     
  9165                           ; BSR set to: 0
  9166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  9167  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9168  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9169  001062                     l5158:
  9170                           
  9171                           ; BSR set to: 0
  9172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9173  001062  5183               	movf	efgtoa@m& (0+255),w,b
  9174  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  9175  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9176  001068  0A80               	xorlw	128
  9177  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  9178  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9179  00106E  0A80               	xorlw	128
  9180  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  9181  001072  B0D8               	btfsc	status,0,c
  9182  001074  EF3E  F008         	goto	u6151
  9183  001078  EF40  F008         	goto	u6150
  9184  00107C                     u6151:
  9185  00107C  EF4E  F008         	goto	l5162
  9186  001080                     u6150:
  9187  001080                     
  9188                           ; BSR set to: 0
  9189  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9190  001082  EF4C  F008         	goto	u6161
  9191  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  9192  001088  E109               	bnz	u6160
  9193  00108A  0E4B               	movlw	75
  9194  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  9195  00108E  A0D8               	btfss	status,0,c
  9196  001090  EF4C  F008         	goto	u6161
  9197  001094  EF4E  F008         	goto	u6160
  9198  001098                     u6161:
  9199  001098  EF44  F007         	goto	l5110
  9200  00109C                     u6160:
  9201  00109C                     l5162:
  9202                           
  9203                           ; BSR set to: 0
  9204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  9205  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  9206  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9207  0010A0  A4D8               	btfss	status,2,c
  9208  0010A2  EF55  F008         	goto	u6171
  9209  0010A6  EF57  F008         	goto	u6170
  9210  0010AA                     u6171:
  9211  0010AA  EF68  F008         	goto	l5170
  9212  0010AE                     u6170:
  9213  0010AE                     
  9214                           ; BSR set to: 0
  9215  0010AE  A9F8               	btfss	_flags& (0+255),4,b
  9216  0010B0  EF5C  F008         	goto	u6181
  9217  0010B4  EF5E  F008         	goto	u6180
  9218  0010B8                     u6181:
  9219  0010B8  EF68  F008         	goto	l5170
  9220  0010BC                     u6180:
  9221  0010BC                     
  9222                           ; BSR set to: 0
  9223                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  9224  0010BC  0E40               	movlw	low _dbuf
  9225  0010BE  25A1               	addwf	efgtoa@n& (0+255),w,b
  9226  0010C0  6ED9               	movwf	fsr2l,c
  9227  0010C2  0E02               	movlw	high _dbuf
  9228  0010C4  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9229  0010C6  6EDA               	movwf	fsr2h,c
  9230  0010C8  0E2E               	movlw	46
  9231  0010CA  6EDF               	movwf	indf2,c
  9232  0010CC                     
  9233                           ; BSR set to: 0
  9234  0010CC  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9235  0010CE  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9236  0010D0                     l5170:
  9237                           
  9238                           ; BSR set to: 0
  9239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  9240  0010D0  0E40               	movlw	low _dbuf
  9241  0010D2  25A1               	addwf	efgtoa@n& (0+255),w,b
  9242  0010D4  6ED9               	movwf	fsr2l,c
  9243  0010D6  0E02               	movlw	high _dbuf
  9244  0010D8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9245  0010DA  6EDA               	movwf	fsr2h,c
  9246  0010DC  0E00               	movlw	0
  9247  0010DE  6EDF               	movwf	indf2,c
  9248  0010E0                     
  9249                           ; BSR set to: 0
  9250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  9251  0010E0  0E65               	movlw	101
  9252  0010E2  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9253  0010E4  A4D8               	btfss	status,2,c
  9254  0010E6  EF77  F008         	goto	u6191
  9255  0010EA  EF79  F008         	goto	u6190
  9256  0010EE                     u6191:
  9257  0010EE  EF27  F004         	goto	l4982
  9258  0010F2                     u6190:
  9259  0010F2                     
  9260                           ; BSR set to: 0
  9261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  9262  0010F2  0E00               	movlw	0
  9263  0010F4  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9264  0010F6  0E4F               	movlw	79
  9265  0010F8  6F99               	movwf	efgtoa@i& (0+255),b
  9266  0010FA                     
  9267                           ; BSR set to: 0
  9268                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  9269  0010FA  0E40               	movlw	low _dbuf
  9270  0010FC  2599               	addwf	efgtoa@i& (0+255),w,b
  9271  0010FE  6ED9               	movwf	fsr2l,c
  9272  001100  0E02               	movlw	high _dbuf
  9273  001102  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9274  001104  6EDA               	movwf	fsr2h,c
  9275  001106  0E00               	movlw	0
  9276  001108  6EDF               	movwf	indf2,c
  9277  00110A                     
  9278                           ; BSR set to: 0
  9279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  9280  00110A  0E00               	movlw	0
  9281  00110C  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9282  00110E  0E00               	movlw	0
  9283  001110  6F89               	movwf	efgtoa@sign& (0+255),b
  9284  001112                     
  9285                           ; BSR set to: 0
  9286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  9287  001112  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9288  001114  EF90  F008         	goto	u6200
  9289  001118  EF8E  F008         	goto	u6201
  9290  00111C                     u6201:
  9291  00111C  EF98  F008         	goto	l5186
  9292  001120                     u6200:
  9293  001120                     
  9294                           ; BSR set to: 0
  9295                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  9296  001120  0E00               	movlw	0
  9297  001122  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9298  001124  0E01               	movlw	1
  9299  001126  6F89               	movwf	efgtoa@sign& (0+255),b
  9300  001128                     
  9301                           ; BSR set to: 0
  9302                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  9303  001128  6D9F               	negf	efgtoa@e& (0+255),b
  9304  00112A  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  9305  00112C  B0D8               	btfsc	status,0,c
  9306  00112E  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  9307  001130                     l5186:
  9308                           
  9309                           ; BSR set to: 0
  9310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  9311  001130  0E00               	movlw	0
  9312  001132  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  9313  001134  0E02               	movlw	2
  9314  001136  6F8B               	movwf	efgtoa@p& (0+255),b
  9315                           
  9316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9317  001138  EFC9  F008         	goto	l5198
  9318  00113C                     l5188:
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  9322  00113C  0799               	decf	efgtoa@i& (0+255),f,b
  9323  00113E  A0D8               	btfss	status,0,c
  9324  001140  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9325  001142                     
  9326                           ; BSR set to: 0
  9327                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  9328  001142  0E40               	movlw	low _dbuf
  9329  001144  2599               	addwf	efgtoa@i& (0+255),w,b
  9330  001146  6ED9               	movwf	fsr2l,c
  9331  001148  0E02               	movlw	high _dbuf
  9332  00114A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9333  00114C  6EDA               	movwf	fsr2h,c
  9334  00114E  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  9335  001152  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  9336  001156  0E00               	movlw	0
  9337  001158  6E04               	movwf	(___awmod@divisor+1)^0,c
  9338  00115A  0E0A               	movlw	10
  9339  00115C  6E03               	movwf	___awmod@divisor^0,c
  9340  00115E  EC61  F028         	call	___awmod	;wreg free
  9341  001162  5001               	movf	?___awmod^0,w,c
  9342  001164  0F30               	addlw	48
  9343  001166  6EDF               	movwf	indf2,c
  9344  001168                     
  9345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  9346  001168  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  9347  00116C  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  9348  001170  0E00               	movlw	0
  9349  001172  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9350  001174  0E0A               	movlw	10
  9351  001176  6E03               	movwf	___awdiv@divisor^0,c
  9352  001178  ECFF  F027         	call	___awdiv	;wreg free
  9353  00117C  C001  F09F         	movff	?___awdiv,efgtoa@e
  9354  001180  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  9355  001184                     
  9356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  9357  001184  0100               	movlb	0	; () banked
  9358  001186  078B               	decf	efgtoa@p& (0+255),f,b
  9359  001188  A0D8               	btfss	status,0,c
  9360  00118A  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  9361  00118C                     
  9362                           ; BSR set to: 0
  9363                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  9364  00118C  078E               	decf	efgtoa@w& (0+255),f,b
  9365  00118E  A0D8               	btfss	status,0,c
  9366  001190  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9367  001192                     l5198:
  9368                           
  9369                           ; BSR set to: 0
  9370                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9371  001192  519F               	movf	efgtoa@e& (0+255),w,b
  9372  001194  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9373  001196  A4D8               	btfss	status,2,c
  9374  001198  EFD0  F008         	goto	u6211
  9375  00119C  EFD2  F008         	goto	u6210
  9376  0011A0                     u6211:
  9377  0011A0  EF9E  F008         	goto	l5188
  9378  0011A4                     u6210:
  9379  0011A4                     
  9380                           ; BSR set to: 0
  9381  0011A4  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9382  0011A6  EFDF  F008         	goto	u6220
  9383  0011AA  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  9384  0011AC  E106               	bnz	u6221
  9385  0011AE  058B               	decf	efgtoa@p& (0+255),w,b
  9386  0011B0  B0D8               	btfsc	status,0,c
  9387  0011B2  EFDD  F008         	goto	u6221
  9388  0011B6  EFDF  F008         	goto	u6220
  9389  0011BA                     u6221:
  9390  0011BA  EF9E  F008         	goto	l5188
  9391  0011BE                     u6220:
  9392  0011BE                     
  9393                           ; BSR set to: 0
  9394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  9395  0011BE  0799               	decf	efgtoa@i& (0+255),f,b
  9396  0011C0  A0D8               	btfss	status,0,c
  9397  0011C2  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9398  0011C4                     
  9399                           ; BSR set to: 0
  9400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  9401  0011C4  5189               	movf	efgtoa@sign& (0+255),w,b
  9402  0011C6  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9403  0011C8  A4D8               	btfss	status,2,c
  9404  0011CA  EFE9  F008         	goto	u6231
  9405  0011CE  EFEB  F008         	goto	u6230
  9406  0011D2                     u6231:
  9407  0011D2  EFF1  F008         	goto	l5208
  9408  0011D6                     u6230:
  9409  0011D6                     
  9410                           ; BSR set to: 0
  9411  0011D6  0E00               	movlw	0
  9412  0011D8  6F7A               	movwf	(_efgtoa$2573+1)& (0+255),b
  9413  0011DA  0E2B               	movlw	43
  9414  0011DC  6F79               	movwf	_efgtoa$2573& (0+255),b
  9415  0011DE  EFF5  F008         	goto	l5210
  9416  0011E2                     l5208:
  9417                           
  9418                           ; BSR set to: 0
  9419  0011E2  0E00               	movlw	0
  9420  0011E4  6F7A               	movwf	(_efgtoa$2573+1)& (0+255),b
  9421  0011E6  0E2D               	movlw	45
  9422  0011E8  6F79               	movwf	_efgtoa$2573& (0+255),b
  9423  0011EA                     l5210:
  9424                           
  9425                           ; BSR set to: 0
  9426  0011EA  0E40               	movlw	low _dbuf
  9427  0011EC  2599               	addwf	efgtoa@i& (0+255),w,b
  9428  0011EE  6ED9               	movwf	fsr2l,c
  9429  0011F0  0E02               	movlw	high _dbuf
  9430  0011F2  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9431  0011F4  6EDA               	movwf	fsr2h,c
  9432  0011F6  C079  FFDF         	movff	_efgtoa$2573,indf2
  9433  0011FA                     
  9434                           ; BSR set to: 0
  9435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  9436  0011FA  078E               	decf	efgtoa@w& (0+255),f,b
  9437  0011FC  A0D8               	btfss	status,0,c
  9438  0011FE  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9439  001200                     
  9440                           ; BSR set to: 0
  9441                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9442  001200  0799               	decf	efgtoa@i& (0+255),f,b
  9443  001202  A0D8               	btfss	status,0,c
  9444  001204  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9445  001206                     
  9446                           ; BSR set to: 0
  9447  001206  0EBF               	movlw	191
  9448  001208  6F6A               	movwf	??_efgtoa& (0+255),b
  9449  00120A  0EFF               	movlw	255
  9450  00120C  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  9451  00120E  505E               	movf	efgtoa@c^0,w,c
  9452  001210  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  9453  001212  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  9454  001214  516A               	movf	??_efgtoa& (0+255),w,b
  9455  001216  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  9456  001218  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  9457  00121A  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9458  00121C  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  9459  00121E  E10A               	bnz	u6240
  9460  001220  0E1A               	movlw	26
  9461  001222  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  9462  001224  A0D8               	btfss	status,0,c
  9463  001226  EF17  F009         	goto	u6241
  9464  00122A  EF1A  F009         	goto	u6240
  9465  00122E                     u6241:
  9466  00122E  0E01               	movlw	1
  9467  001230  EF1B  F009         	goto	u6250
  9468  001234                     u6240:
  9469  001234  0E00               	movlw	0
  9470  001236                     u6250:
  9471  001236  6F7D               	movwf	_efgtoa$2575& (0+255),b
  9472  001238  6B7E               	clrf	(_efgtoa$2575+1)& (0+255),b
  9473  00123A                     
  9474                           ; BSR set to: 0
  9475  00123A  517D               	movf	_efgtoa$2575& (0+255),w,b
  9476  00123C  117E               	iorwf	(_efgtoa$2575+1)& (0+255),w,b
  9477  00123E  A4D8               	btfss	status,2,c
  9478  001240  EF24  F009         	goto	u6261
  9479  001244  EF26  F009         	goto	u6260
  9480  001248                     u6261:
  9481  001248  EF2C  F009         	goto	l5224
  9482  00124C                     u6260:
  9483  00124C                     
  9484                           ; BSR set to: 0
  9485  00124C  0E00               	movlw	0
  9486  00124E  6F7C               	movwf	(_efgtoa$2574+1)& (0+255),b
  9487  001250  0E65               	movlw	101
  9488  001252  6F7B               	movwf	_efgtoa$2574& (0+255),b
  9489  001254  EF30  F009         	goto	l5226
  9490  001258                     l5224:
  9491                           
  9492                           ; BSR set to: 0
  9493  001258  0E00               	movlw	0
  9494  00125A  6F7C               	movwf	(_efgtoa$2574+1)& (0+255),b
  9495  00125C  0E45               	movlw	69
  9496  00125E  6F7B               	movwf	_efgtoa$2574& (0+255),b
  9497  001260                     l5226:
  9498                           
  9499                           ; BSR set to: 0
  9500  001260  0E40               	movlw	low _dbuf
  9501  001262  2599               	addwf	efgtoa@i& (0+255),w,b
  9502  001264  6ED9               	movwf	fsr2l,c
  9503  001266  0E02               	movlw	high _dbuf
  9504  001268  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9505  00126A  6EDA               	movwf	fsr2h,c
  9506  00126C  C07B  FFDF         	movff	_efgtoa$2574,indf2
  9507  001270                     
  9508                           ; BSR set to: 0
  9509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9510  001270  078E               	decf	efgtoa@w& (0+255),f,b
  9511  001272  A0D8               	btfss	status,0,c
  9512  001274  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9513  001276                     
  9514                           ; BSR set to: 0
  9515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9516  001276  0E40               	movlw	low _dbuf
  9517  001278  25A1               	addwf	efgtoa@n& (0+255),w,b
  9518  00127A  6E01               	movwf	strcpy@dest^0,c
  9519  00127C  0E02               	movlw	high _dbuf
  9520  00127E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9521  001280  6E02               	movwf	(strcpy@dest+1)^0,c
  9522  001282  0E40               	movlw	low _dbuf
  9523  001284  2599               	addwf	efgtoa@i& (0+255),w,b
  9524  001286  6E03               	movwf	strcpy@src^0,c
  9525  001288  0E02               	movlw	high _dbuf
  9526  00128A  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9527  00128C  6E04               	movwf	(strcpy@src+1)^0,c
  9528  00128E  ECC1  F02B         	call	_strcpy	;wreg free
  9529  001292  EF27  F004         	goto	l4982
  9530  001296                     l1318:
  9531  001296  0012               	return		;funcret
  9532  001298                     __end_of_efgtoa:
  9533                           	callstack 0
  9534                           
  9535 ;; *************** function _tolower *****************
  9536 ;; Defined at:
  9537 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9538 ;; Parameters:    Size  Location     Type
  9539 ;;  c               2    6[COMRAM] int 
  9540 ;; Auto vars:     Size  Location     Type
  9541 ;;		None
  9542 ;; Return value:  Size  Location     Type
  9543 ;;                  2    6[COMRAM] int 
  9544 ;; Registers used:
  9545 ;;		wreg, status,2, status,0
  9546 ;; Tracked objects:
  9547 ;;		On entry : 0/0
  9548 ;;		On exit  : 0/0
  9549 ;;		Unchanged: 0/0
  9550 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9551 ;;      Params:         2       0       0       0       0       0       0
  9552 ;;      Locals:         2       0       0       0       0       0       0
  9553 ;;      Temps:          4       0       0       0       0       0       0
  9554 ;;      Totals:         8       0       0       0       0       0       0
  9555 ;;Total ram usage:        8 bytes
  9556 ;; Hardware stack levels used:    1
  9557 ;; Hardware stack levels required when called:    2
  9558 ;; This function calls:
  9559 ;;		_isupper
  9560 ;; This function is called by:
  9561 ;;		_efgtoa
  9562 ;;		_vfpfcnvrt
  9563 ;; This function uses a non-reentrant model
  9564 ;;
  9565                           
  9566                           	psect	text32
  9567  005722                     __ptext32:
  9568                           	callstack 0
  9569  005722                     _tolower:
  9570                           	callstack 22
  9571  005722  0EBF               	movlw	191
  9572  005724  6E09               	movwf	??_tolower^0,c
  9573  005726  0EFF               	movlw	255
  9574  005728  6E0A               	movwf	(??_tolower+1)^0,c
  9575  00572A  C007  F00B         	movff	tolower@c,??_tolower+2
  9576  00572E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9577  005732  5009               	movf	??_tolower^0,w,c
  9578  005734  260B               	addwf	(??_tolower+2)^0,f,c
  9579  005736  500A               	movf	(??_tolower+1)^0,w,c
  9580  005738  220C               	addwfc	(??_tolower+3)^0,f,c
  9581  00573A  500C               	movf	(??_tolower+3)^0,w,c
  9582  00573C  E10A               	bnz	u5430
  9583  00573E  0E1A               	movlw	26
  9584  005740  5C0B               	subwf	(??_tolower+2)^0,w,c
  9585  005742  A0D8               	btfss	status,0,c
  9586  005744  EFA6  F02B         	goto	u5431
  9587  005748  EFA9  F02B         	goto	u5430
  9588  00574C                     u5431:
  9589  00574C  0E01               	movlw	1
  9590  00574E  EFAA  F02B         	goto	u5440
  9591  005752                     u5430:
  9592  005752  0E00               	movlw	0
  9593  005754                     u5440:
  9594  005754  6E0D               	movwf	_tolower$2726^0,c
  9595  005756  6A0E               	clrf	(_tolower$2726+1)^0,c
  9596  005758  500D               	movf	_tolower$2726^0,w,c
  9597  00575A  100E               	iorwf	(_tolower$2726+1)^0,w,c
  9598  00575C  B4D8               	btfsc	status,2,c
  9599  00575E  EFB3  F02B         	goto	u5451
  9600  005762  EFB5  F02B         	goto	u5450
  9601  005766                     u5451:
  9602  005766  EFBC  F02B         	goto	l1566
  9603  00576A                     u5450:
  9604  00576A  0E20               	movlw	32
  9605  00576C  1007               	iorwf	tolower@c^0,w,c
  9606  00576E  6E07               	movwf	?_tolower^0,c
  9607  005770  5008               	movf	(tolower@c+1)^0,w,c
  9608  005772  6E08               	movwf	(?_tolower+1)^0,c
  9609  005774  EFC0  F02B         	goto	l1571
  9610  005778                     l1566:
  9611  005778  C007  F007         	movff	tolower@c,?_tolower
  9612  00577C  C008  F008         	movff	tolower@c+1,?_tolower+1
  9613  005780                     l1571:
  9614  005780  0012               	return		;funcret
  9615  005782                     __end_of_tolower:
  9616                           	callstack 0
  9617                           
  9618 ;; *************** function _isupper *****************
  9619 ;; Defined at:
  9620 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9621 ;; Parameters:    Size  Location     Type
  9622 ;;  c               2    0[COMRAM] int 
  9623 ;; Auto vars:     Size  Location     Type
  9624 ;;		None
  9625 ;; Return value:  Size  Location     Type
  9626 ;;                  2    0[COMRAM] int 
  9627 ;; Registers used:
  9628 ;;		wreg, status,2, status,0
  9629 ;; Tracked objects:
  9630 ;;		On entry : 0/0
  9631 ;;		On exit  : 0/0
  9632 ;;		Unchanged: 0/0
  9633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9634 ;;      Params:         2       0       0       0       0       0       0
  9635 ;;      Locals:         0       0       0       0       0       0       0
  9636 ;;      Temps:          4       0       0       0       0       0       0
  9637 ;;      Totals:         6       0       0       0       0       0       0
  9638 ;;Total ram usage:        6 bytes
  9639 ;; Hardware stack levels used:    1
  9640 ;; Hardware stack levels required when called:    1
  9641 ;; This function calls:
  9642 ;;		Nothing
  9643 ;; This function is called by:
  9644 ;;		_efgtoa
  9645 ;;		_vfpfcnvrt
  9646 ;;		_tolower
  9647 ;; This function uses a non-reentrant model
  9648 ;;
  9649                           
  9650                           	psect	text33
  9651  005AB6                     __ptext33:
  9652                           	callstack 0
  9653  005AB6                     _isupper:
  9654                           	callstack 22
  9655  005AB6  0EBF               	movlw	191
  9656  005AB8  6E03               	movwf	??_isupper^0,c
  9657  005ABA  0EFF               	movlw	255
  9658  005ABC  6E04               	movwf	(??_isupper+1)^0,c
  9659  005ABE  C001  F005         	movff	isupper@c,??_isupper+2
  9660  005AC2  C002  F006         	movff	isupper@c+1,??_isupper+3
  9661  005AC6  5003               	movf	??_isupper^0,w,c
  9662  005AC8  2605               	addwf	(??_isupper+2)^0,f,c
  9663  005ACA  5004               	movf	(??_isupper+1)^0,w,c
  9664  005ACC  2206               	addwfc	(??_isupper+3)^0,f,c
  9665  005ACE  5006               	movf	(??_isupper+3)^0,w,c
  9666  005AD0  E10A               	bnz	u4440
  9667  005AD2  0E1A               	movlw	26
  9668  005AD4  5C05               	subwf	(??_isupper+2)^0,w,c
  9669  005AD6  A0D8               	btfss	status,0,c
  9670  005AD8  EF70  F02D         	goto	u4441
  9671  005ADC  EF73  F02D         	goto	u4440
  9672  005AE0                     u4441:
  9673  005AE0  0E01               	movlw	1
  9674  005AE2  EF74  F02D         	goto	u4450
  9675  005AE6                     u4440:
  9676  005AE6  0E00               	movlw	0
  9677  005AE8                     u4450:
  9678  005AE8  6E01               	movwf	?_isupper^0,c
  9679  005AEA  6A02               	clrf	(?_isupper+1)^0,c
  9680  005AEC  0012               	return		;funcret
  9681  005AEE                     __end_of_isupper:
  9682                           	callstack 0
  9683                           
  9684 ;; *************** function _strcpy *****************
  9685 ;; Defined at:
  9686 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9687 ;; Parameters:    Size  Location     Type
  9688 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9689 ;;		 -> dbuf(80), 
  9690 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9691 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9692 ;;		 -> dbuf(80), 
  9693 ;; Auto vars:     Size  Location     Type
  9694 ;;  d               2    8[COMRAM] PTR unsigned char 
  9695 ;;		 -> dbuf(80), 
  9696 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9697 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9698 ;;		 -> dbuf(80), 
  9699 ;; Return value:  Size  Location     Type
  9700 ;;                  2    0[COMRAM] PTR unsigned char 
  9701 ;; Registers used:
  9702 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9703 ;; Tracked objects:
  9704 ;;		On entry : 0/0
  9705 ;;		On exit  : 0/0
  9706 ;;		Unchanged: 0/0
  9707 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9708 ;;      Params:         4       0       0       0       0       0       0
  9709 ;;      Locals:         4       0       0       0       0       0       0
  9710 ;;      Temps:          2       0       0       0       0       0       0
  9711 ;;      Totals:        10       0       0       0       0       0       0
  9712 ;;Total ram usage:       10 bytes
  9713 ;; Hardware stack levels used:    1
  9714 ;; Hardware stack levels required when called:    1
  9715 ;; This function calls:
  9716 ;;		Nothing
  9717 ;; This function is called by:
  9718 ;;		_efgtoa
  9719 ;; This function uses a non-reentrant model
  9720 ;;
  9721                           
  9722                           	psect	text34
  9723  005782                     __ptext34:
  9724                           	callstack 0
  9725  005782                     _strcpy:
  9726                           	callstack 22
  9727  005782  C003  F007         	movff	strcpy@src,strcpy@s
  9728  005786  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9729  00578A  C001  F009         	movff	strcpy@dest,strcpy@d
  9730  00578E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9731  005792                     l4820:
  9732  005792  5007               	movf	strcpy@s^0,w,c
  9733  005794  6E05               	movwf	??_strcpy^0,c
  9734  005796  5008               	movf	(strcpy@s+1)^0,w,c
  9735  005798  6E06               	movwf	(??_strcpy+1)^0,c
  9736  00579A  4A07               	infsnz	strcpy@s^0,f,c
  9737  00579C  2A08               	incf	(strcpy@s+1)^0,f,c
  9738  00579E  C005  FFF6         	movff	??_strcpy,tblptrl
  9739  0057A2  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9740  0057A6  6AF8               	clrf	tblptru,c
  9741  0057A8  C009  FFD9         	movff	strcpy@d,fsr2l
  9742  0057AC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9743  0057B0  4A09               	infsnz	strcpy@d^0,f,c
  9744  0057B2  2A0A               	incf	(strcpy@d+1)^0,f,c
  9745  0057B4  0E05               	movlw	(high __ramtop+-1)
  9746  0057B6  64F7               	cpfsgt	tblptrh,c
  9747  0057B8  D003               	bra	u5417
  9748  0057BA  0008               	tblrd		*
  9749  0057BC  50F5               	movf	tablat,w,c
  9750  0057BE  D005               	bra	u5410
  9751  0057C0                     u5417:
  9752  0057C0  CFF6 FFE1          	movff	tblptrl,fsr1l
  9753  0057C4  CFF7 FFE2          	movff	tblptrh,fsr1h
  9754  0057C8  50E7               	movf	indf1,w,c
  9755  0057CA                     u5410:
  9756  0057CA  6EDF               	movwf	indf2,c
  9757  0057CC  50DF               	movf	indf2,w,c
  9758  0057CE  A4D8               	btfss	status,2,c
  9759  0057D0  EFEC  F02B         	goto	u5421
  9760  0057D4  EFEE  F02B         	goto	u5420
  9761  0057D8                     u5421:
  9762  0057D8  EFC9  F02B         	goto	l4820
  9763  0057DC                     u5420:
  9764  0057DC  0012               	return		;funcret
  9765  0057DE                     __end_of_strcpy:
  9766                           	callstack 0
  9767                           
  9768 ;; *************** function _floorf *****************
  9769 ;; Defined at:
  9770 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9771 ;; Parameters:    Size  Location     Type
  9772 ;;  x               4   77[COMRAM] float 
  9773 ;; Auto vars:     Size  Location     Type
  9774 ;;  u               4    6[BANK0 ] struct .
  9775 ;;  m               4    0[BANK0 ] unsigned long 
  9776 ;;  e               2    4[BANK0 ] int 
  9777 ;; Return value:  Size  Location     Type
  9778 ;;                  4   77[COMRAM] float 
  9779 ;; Registers used:
  9780 ;;		wreg, status,2, status,0
  9781 ;; Tracked objects:
  9782 ;;		On entry : 0/0
  9783 ;;		On exit  : 0/0
  9784 ;;		Unchanged: 0/0
  9785 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9786 ;;      Params:         4       0       0       0       0       0       0
  9787 ;;      Locals:         0      10       0       0       0       0       0
  9788 ;;      Temps:          6       0       0       0       0       0       0
  9789 ;;      Totals:        10      10       0       0       0       0       0
  9790 ;;Total ram usage:       20 bytes
  9791 ;; Hardware stack levels used:    1
  9792 ;; Hardware stack levels required when called:    1
  9793 ;; This function calls:
  9794 ;;		Nothing
  9795 ;; This function is called by:
  9796 ;;		_efgtoa
  9797 ;; This function uses a non-reentrant model
  9798 ;;
  9799                           
  9800                           	psect	text35
  9801  0035FE                     __ptext35:
  9802                           	callstack 0
  9803  0035FE                     _floorf:
  9804                           	callstack 22
  9805  0035FE  C1C3  F066         	movff	floorf@F524,floorf@u
  9806  003602  C1C4  F067         	movff	floorf@F524+1,floorf@u+1
  9807  003606  C1C5  F068         	movff	floorf@F524+2,floorf@u+2
  9808  00360A  C1C6  F069         	movff	floorf@F524+3,floorf@u+3
  9809  00360E  C04E  F066         	movff	floorf@x,floorf@u
  9810  003612  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9811  003616  C050  F068         	movff	floorf@x+2,floorf@u+2
  9812  00361A  C051  F069         	movff	floorf@x+3,floorf@u+3
  9813  00361E  0E81               	movlw	129
  9814  003620  6E52               	movwf	??_floorf^0,c
  9815  003622  0EFF               	movlw	255
  9816  003624  6E53               	movwf	(??_floorf+1)^0,c
  9817  003626  C066  F054         	movff	floorf@u,??_floorf+2
  9818  00362A  C067  F055         	movff	floorf@u+1,??_floorf+3
  9819  00362E  C068  F056         	movff	floorf@u+2,??_floorf+4
  9820  003632  C069  F057         	movff	floorf@u+3,??_floorf+5
  9821  003636  0E18               	movlw	24
  9822  003638  EF23  F01B         	goto	u5460
  9823  00363C                     u5465:
  9824  00363C  90D8               	bcf	status,0,c
  9825  00363E  3257               	rrcf	(??_floorf+5)^0,f,c
  9826  003640  3256               	rrcf	(??_floorf+4)^0,f,c
  9827  003642  3255               	rrcf	(??_floorf+3)^0,f,c
  9828  003644  3254               	rrcf	(??_floorf+2)^0,f,c
  9829  003646                     u5460:
  9830  003646  2EE8               	decfsz	wreg,f,c
  9831  003648  EF1E  F01B         	goto	u5465
  9832  00364C  5054               	movf	(??_floorf+2)^0,w,c
  9833  00364E  2452               	addwf	??_floorf^0,w,c
  9834  003650  0100               	movlb	0	; () banked
  9835  003652  6F64               	movwf	floorf@e& (0+255),b
  9836  003654  0E00               	movlw	0
  9837  003656  2053               	addwfc	(??_floorf+1)^0,w,c
  9838  003658  6F65               	movwf	(floorf@e+1)& (0+255),b
  9839  00365A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9840  00365C  EF39  F01B         	goto	u5471
  9841  003660  5165               	movf	(floorf@e+1)& (0+255),w,b
  9842  003662  E109               	bnz	u5470
  9843  003664  0E17               	movlw	23
  9844  003666  5D64               	subwf	floorf@e& (0+255),w,b
  9845  003668  A0D8               	btfss	status,0,c
  9846  00366A  EF39  F01B         	goto	u5471
  9847  00366E  EF3B  F01B         	goto	u5470
  9848  003672                     u5471:
  9849  003672  EF45  F01B         	goto	l4838
  9850  003676                     u5470:
  9851  003676                     l4836:
  9852                           
  9853                           ; BSR set to: 0
  9854  003676  C04E  F04E         	movff	floorf@x,?_floorf
  9855  00367A  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9856  00367E  C050  F050         	movff	floorf@x+2,?_floorf+2
  9857  003682  C051  F051         	movff	floorf@x+3,?_floorf+3
  9858  003686  EF09  F01C         	goto	l1490
  9859  00368A                     l4838:
  9860                           
  9861                           ; BSR set to: 0
  9862  00368A  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9863  00368C  EF4A  F01B         	goto	u5481
  9864  003690  EF4C  F01B         	goto	u5480
  9865  003694                     u5481:
  9866  003694  EFBD  F01B         	goto	l4848
  9867  003698                     u5480:
  9868  003698                     
  9869                           ; BSR set to: 0
  9870  003698  C064  F052         	movff	floorf@e,??_floorf
  9871  00369C  0EFF               	movlw	255
  9872  00369E  6E53               	movwf	(??_floorf+1)^0,c
  9873  0036A0  0EFF               	movlw	255
  9874  0036A2  6E54               	movwf	(??_floorf+2)^0,c
  9875  0036A4  0E7F               	movlw	127
  9876  0036A6  6E55               	movwf	(??_floorf+3)^0,c
  9877  0036A8  0E00               	movlw	0
  9878  0036AA  6E56               	movwf	(??_floorf+4)^0,c
  9879  0036AC                     u5495:
  9880  0036AC  6652               	tstfsz	??_floorf^0,c
  9881  0036AE  EF5B  F01B         	goto	u5496
  9882  0036B2  EF63  F01B         	goto	u5497
  9883  0036B6                     u5496:
  9884  0036B6  3456               	rlcf	(??_floorf+4)^0,w,c
  9885  0036B8  3256               	rrcf	(??_floorf+4)^0,f,c
  9886  0036BA  3255               	rrcf	(??_floorf+3)^0,f,c
  9887  0036BC  3254               	rrcf	(??_floorf+2)^0,f,c
  9888  0036BE  3253               	rrcf	(??_floorf+1)^0,f,c
  9889  0036C0  2E52               	decfsz	??_floorf^0,f,c
  9890  0036C2  EF56  F01B         	goto	u5495
  9891  0036C6                     u5497:
  9892  0036C6  C053  F060         	movff	??_floorf+1,floorf@m
  9893  0036CA  C054  F061         	movff	??_floorf+2,floorf@m+1
  9894  0036CE  C055  F062         	movff	??_floorf+3,floorf@m+2
  9895  0036D2  C056  F063         	movff	??_floorf+4,floorf@m+3
  9896  0036D6  0100               	movlb	0	; () banked
  9897  0036D8  5160               	movf	floorf@m& (0+255),w,b
  9898  0036DA  1566               	andwf	floorf@u& (0+255),w,b
  9899  0036DC  6E52               	movwf	??_floorf^0,c
  9900  0036DE  5161               	movf	(floorf@m+1)& (0+255),w,b
  9901  0036E0  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9902  0036E2  6E53               	movwf	(??_floorf+1)^0,c
  9903  0036E4  5162               	movf	(floorf@m+2)& (0+255),w,b
  9904  0036E6  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9905  0036E8  6E54               	movwf	(??_floorf+2)^0,c
  9906  0036EA  5163               	movf	(floorf@m+3)& (0+255),w,b
  9907  0036EC  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9908  0036EE  6E55               	movwf	(??_floorf+3)^0,c
  9909  0036F0  5052               	movf	??_floorf^0,w,c
  9910  0036F2  1053               	iorwf	(??_floorf+1)^0,w,c
  9911  0036F4  1054               	iorwf	(??_floorf+2)^0,w,c
  9912  0036F6  1055               	iorwf	(??_floorf+3)^0,w,c
  9913  0036F8  A4D8               	btfss	status,2,c
  9914  0036FA  EF81  F01B         	goto	u5501
  9915  0036FE  EF83  F01B         	goto	u5500
  9916  003702                     u5501:
  9917  003702  EF85  F01B         	goto	l4844
  9918  003706                     u5500:
  9919  003706  EF3B  F01B         	goto	l4836
  9920  00370A                     l4844:
  9921                           
  9922                           ; BSR set to: 0
  9923  00370A  C066  F052         	movff	floorf@u,??_floorf
  9924  00370E  C067  F053         	movff	floorf@u+1,??_floorf+1
  9925  003712  C068  F054         	movff	floorf@u+2,??_floorf+2
  9926  003716  C069  F055         	movff	floorf@u+3,??_floorf+3
  9927  00371A  0E20               	movlw	32
  9928  00371C  EF95  F01B         	goto	u5510
  9929  003720                     u5515:
  9930  003720  90D8               	bcf	status,0,c
  9931  003722  3255               	rrcf	(??_floorf+3)^0,f,c
  9932  003724  3254               	rrcf	(??_floorf+2)^0,f,c
  9933  003726  3253               	rrcf	(??_floorf+1)^0,f,c
  9934  003728  3252               	rrcf	??_floorf^0,f,c
  9935  00372A                     u5510:
  9936  00372A  2EE8               	decfsz	wreg,f,c
  9937  00372C  EF90  F01B         	goto	u5515
  9938  003730  5052               	movf	??_floorf^0,w,c
  9939  003732  1053               	iorwf	(??_floorf+1)^0,w,c
  9940  003734  1054               	iorwf	(??_floorf+2)^0,w,c
  9941  003736  1055               	iorwf	(??_floorf+3)^0,w,c
  9942  003738  B4D8               	btfsc	status,2,c
  9943  00373A  EFA1  F01B         	goto	u5521
  9944  00373E  EFA3  F01B         	goto	u5520
  9945  003742                     u5521:
  9946  003742  EFAB  F01B         	goto	l1493
  9947  003746                     u5520:
  9948  003746                     
  9949                           ; BSR set to: 0
  9950  003746  5160               	movf	floorf@m& (0+255),w,b
  9951  003748  2766               	addwf	floorf@u& (0+255),f,b
  9952  00374A  5161               	movf	(floorf@m+1)& (0+255),w,b
  9953  00374C  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9954  00374E  5162               	movf	(floorf@m+2)& (0+255),w,b
  9955  003750  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9956  003752  5163               	movf	(floorf@m+3)& (0+255),w,b
  9957  003754  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9958  003756                     l1493:
  9959                           
  9960                           ; BSR set to: 0
  9961  003756  1D60               	comf	floorf@m& (0+255),w,b
  9962  003758  6E52               	movwf	??_floorf^0,c
  9963  00375A  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9964  00375C  6E53               	movwf	(??_floorf+1)^0,c
  9965  00375E  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9966  003760  6E54               	movwf	(??_floorf+2)^0,c
  9967  003762  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9968  003764  6E55               	movwf	(??_floorf+3)^0,c
  9969  003766  5052               	movf	??_floorf^0,w,c
  9970  003768  1766               	andwf	floorf@u& (0+255),f,b
  9971  00376A  5053               	movf	(??_floorf+1)^0,w,c
  9972  00376C  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9973  00376E  5054               	movf	(??_floorf+2)^0,w,c
  9974  003770  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9975  003772  5055               	movf	(??_floorf+3)^0,w,c
  9976  003774  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9977  003776  EF01  F01C         	goto	l4856
  9978  00377A                     l4848:
  9979                           
  9980                           ; BSR set to: 0
  9981  00377A  C066  F052         	movff	floorf@u,??_floorf
  9982  00377E  C067  F053         	movff	floorf@u+1,??_floorf+1
  9983  003782  C068  F054         	movff	floorf@u+2,??_floorf+2
  9984  003786  C069  F055         	movff	floorf@u+3,??_floorf+3
  9985  00378A  0E20               	movlw	32
  9986  00378C  EFCD  F01B         	goto	u5530
  9987  003790                     u5535:
  9988  003790  90D8               	bcf	status,0,c
  9989  003792  3255               	rrcf	(??_floorf+3)^0,f,c
  9990  003794  3254               	rrcf	(??_floorf+2)^0,f,c
  9991  003796  3253               	rrcf	(??_floorf+1)^0,f,c
  9992  003798  3252               	rrcf	??_floorf^0,f,c
  9993  00379A                     u5530:
  9994  00379A  2EE8               	decfsz	wreg,f,c
  9995  00379C  EFC8  F01B         	goto	u5535
  9996  0037A0  5052               	movf	??_floorf^0,w,c
  9997  0037A2  1053               	iorwf	(??_floorf+1)^0,w,c
  9998  0037A4  1054               	iorwf	(??_floorf+2)^0,w,c
  9999  0037A6  1055               	iorwf	(??_floorf+3)^0,w,c
 10000  0037A8  A4D8               	btfss	status,2,c
 10001  0037AA  EFD9  F01B         	goto	u5541
 10002  0037AE  EFDB  F01B         	goto	u5540
 10003  0037B2                     u5541:
 10004  0037B2  EFE5  F01B         	goto	l4852
 10005  0037B6                     u5540:
 10006  0037B6                     
 10007                           ; BSR set to: 0
 10008  0037B6  0E00               	movlw	0
 10009  0037B8  6F66               	movwf	floorf@u& (0+255),b
 10010  0037BA  0E00               	movlw	0
 10011  0037BC  6F67               	movwf	(floorf@u+1)& (0+255),b
 10012  0037BE  0E00               	movlw	0
 10013  0037C0  6F68               	movwf	(floorf@u+2)& (0+255),b
 10014  0037C2  0E00               	movlw	0
 10015  0037C4  6F69               	movwf	(floorf@u+3)& (0+255),b
 10016  0037C6  EF01  F01C         	goto	l4856
 10017  0037CA                     l4852:
 10018                           
 10019                           ; BSR set to: 0
 10020  0037CA  90D8               	bcf	status,0,c
 10021  0037CC  3566               	rlcf	floorf@u& (0+255),w,b
 10022  0037CE  6E52               	movwf	??_floorf^0,c
 10023  0037D0  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 10024  0037D2  6E53               	movwf	(??_floorf+1)^0,c
 10025  0037D4  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 10026  0037D6  6E54               	movwf	(??_floorf+2)^0,c
 10027  0037D8  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 10028  0037DA  6E55               	movwf	(??_floorf+3)^0,c
 10029  0037DC  5052               	movf	??_floorf^0,w,c
 10030  0037DE  1053               	iorwf	(??_floorf+1)^0,w,c
 10031  0037E0  1054               	iorwf	(??_floorf+2)^0,w,c
 10032  0037E2  1055               	iorwf	(??_floorf+3)^0,w,c
 10033  0037E4  B4D8               	btfsc	status,2,c
 10034  0037E6  EFF7  F01B         	goto	u5551
 10035  0037EA  EFF9  F01B         	goto	u5550
 10036  0037EE                     u5551:
 10037  0037EE  EF01  F01C         	goto	l4856
 10038  0037F2                     u5550:
 10039  0037F2                     
 10040                           ; BSR set to: 0
 10041  0037F2  0E00               	movlw	0
 10042  0037F4  6F66               	movwf	floorf@u& (0+255),b
 10043  0037F6  0E00               	movlw	0
 10044  0037F8  6F67               	movwf	(floorf@u+1)& (0+255),b
 10045  0037FA  0E80               	movlw	128
 10046  0037FC  6F68               	movwf	(floorf@u+2)& (0+255),b
 10047  0037FE  0EBF               	movlw	191
 10048  003800  6F69               	movwf	(floorf@u+3)& (0+255),b
 10049  003802                     l4856:
 10050                           
 10051                           ; BSR set to: 0
 10052  003802  C066  F04E         	movff	floorf@u,?_floorf
 10053  003806  C067  F04F         	movff	floorf@u+1,?_floorf+1
 10054  00380A  C068  F050         	movff	floorf@u+2,?_floorf+2
 10055  00380E  C069  F051         	movff	floorf@u+3,?_floorf+3
 10056  003812                     l1490:
 10057                           
 10058                           ; BSR set to: 0
 10059  003812  0012               	return		;funcret
 10060  003814                     __end_of_floorf:
 10061                           	callstack 0
 10062                           
 10063 ;; *************** function ___fpclassifyf *****************
 10064 ;; Defined at:
 10065 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
 10066 ;; Parameters:    Size  Location     Type
 10067 ;;  x               4    0[COMRAM] float 
 10068 ;; Auto vars:     Size  Location     Type
 10069 ;;  u               4   10[COMRAM] struct .
 10070 ;;  e               2    8[COMRAM] int 
 10071 ;; Return value:  Size  Location     Type
 10072 ;;                  2    0[COMRAM] int 
 10073 ;; Registers used:
 10074 ;;		wreg, status,2, status,0
 10075 ;; Tracked objects:
 10076 ;;		On entry : 0/0
 10077 ;;		On exit  : 0/0
 10078 ;;		Unchanged: 0/0
 10079 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10080 ;;      Params:         4       0       0       0       0       0       0
 10081 ;;      Locals:         6       0       0       0       0       0       0
 10082 ;;      Temps:          4       0       0       0       0       0       0
 10083 ;;      Totals:        14       0       0       0       0       0       0
 10084 ;;Total ram usage:       14 bytes
 10085 ;; Hardware stack levels used:    1
 10086 ;; Hardware stack levels required when called:    1
 10087 ;; This function calls:
 10088 ;;		Nothing
 10089 ;; This function is called by:
 10090 ;;		_efgtoa
 10091 ;; This function uses a non-reentrant model
 10092 ;;
 10093                           
 10094                           	psect	text36
 10095  004AFA                     __ptext36:
 10096                           	callstack 0
 10097  004AFA                     ___fpclassifyf:
 10098                           	callstack 22
 10099  004AFA  C1C7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10100  004AFE  C1C8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10101  004B02  C1C9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10102  004B06  C1CA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10103  004B0A  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 10104  004B0E  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10105  004B12  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10106  004B16  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10107  004B1A  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10108  004B1E  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10109  004B22  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10110  004B26  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10111  004B2A  0E18               	movlw	24
 10112  004B2C  EF9D  F025         	goto	u5340
 10113  004B30                     u5345:
 10114  004B30  90D8               	bcf	status,0,c
 10115  004B32  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 10116  004B34  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 10117  004B36  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 10118  004B38  3205               	rrcf	??___fpclassifyf^0,f,c
 10119  004B3A                     u5340:
 10120  004B3A  2EE8               	decfsz	wreg,f,c
 10121  004B3C  EF98  F025         	goto	u5345
 10122  004B40  5005               	movf	??___fpclassifyf^0,w,c
 10123  004B42  6E09               	movwf	___fpclassifyf@e^0,c
 10124  004B44  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 10125  004B46  5009               	movf	___fpclassifyf@e^0,w,c
 10126  004B48  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10127  004B4A  A4D8               	btfss	status,2,c
 10128  004B4C  EFAA  F025         	goto	u5351
 10129  004B50  EFAC  F025         	goto	u5350
 10130  004B54                     u5351:
 10131  004B54  EFCC  F025         	goto	l4808
 10132  004B58                     u5350:
 10133  004B58  90D8               	bcf	status,0,c
 10134  004B5A  340B               	rlcf	___fpclassifyf@u^0,w,c
 10135  004B5C  6E05               	movwf	??___fpclassifyf^0,c
 10136  004B5E  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10137  004B60  6E06               	movwf	(??___fpclassifyf+1)^0,c
 10138  004B62  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10139  004B64  6E07               	movwf	(??___fpclassifyf+2)^0,c
 10140  004B66  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10141  004B68  6E08               	movwf	(??___fpclassifyf+3)^0,c
 10142  004B6A  5005               	movf	??___fpclassifyf^0,w,c
 10143  004B6C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10144  004B6E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10145  004B70  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10146  004B72  A4D8               	btfss	status,2,c
 10147  004B74  EFBE  F025         	goto	u5361
 10148  004B78  EFC0  F025         	goto	u5360
 10149  004B7C                     u5361:
 10150  004B7C  EFC6  F025         	goto	l4804
 10151  004B80                     u5360:
 10152  004B80  0E00               	movlw	0
 10153  004B82  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10154  004B84  0E02               	movlw	2
 10155  004B86  6E01               	movwf	?___fpclassifyf^0,c
 10156  004B88  EFFB  F025         	goto	l1445
 10157  004B8C                     l4804:
 10158  004B8C  0E00               	movlw	0
 10159  004B8E  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10160  004B90  0E03               	movlw	3
 10161  004B92  6E01               	movwf	?___fpclassifyf^0,c
 10162  004B94  EFFB  F025         	goto	l1445
 10163  004B98                     l4808:
 10164  004B98  2809               	incf	___fpclassifyf@e^0,w,c
 10165  004B9A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10166  004B9C  A4D8               	btfss	status,2,c
 10167  004B9E  EFD3  F025         	goto	u5371
 10168  004BA2  EFD5  F025         	goto	u5370
 10169  004BA6                     u5371:
 10170  004BA6  EFF7  F025         	goto	l4814
 10171  004BAA                     u5370:
 10172  004BAA  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10173  004BAE  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10174  004BB2  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10175  004BB6  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10176  004BBA  0E09               	movlw	9
 10177  004BBC                     u5385:
 10178  004BBC  90D8               	bcf	status,0,c
 10179  004BBE  3605               	rlcf	??___fpclassifyf^0,f,c
 10180  004BC0  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 10181  004BC2  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 10182  004BC4  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 10183  004BC6  2EE8               	decfsz	wreg,f,c
 10184  004BC8  EFDE  F025         	goto	u5385
 10185  004BCC  5005               	movf	??___fpclassifyf^0,w,c
 10186  004BCE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10187  004BD0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10188  004BD2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10189  004BD4  B4D8               	btfsc	status,2,c
 10190  004BD6  EFEF  F025         	goto	u5391
 10191  004BDA  EFF2  F025         	goto	u5390
 10192  004BDE                     u5391:
 10193  004BDE  0E01               	movlw	1
 10194  004BE0  EFF3  F025         	goto	u5400
 10195  004BE4                     u5390:
 10196  004BE4  0E00               	movlw	0
 10197  004BE6                     u5400:
 10198  004BE6  6E01               	movwf	?___fpclassifyf^0,c
 10199  004BE8  6A02               	clrf	(?___fpclassifyf+1)^0,c
 10200  004BEA  EFFB  F025         	goto	l1445
 10201  004BEE                     l4814:
 10202  004BEE  0E00               	movlw	0
 10203  004BF0  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10204  004BF2  0E04               	movlw	4
 10205  004BF4  6E01               	movwf	?___fpclassifyf^0,c
 10206  004BF6                     l1445:
 10207  004BF6  0012               	return		;funcret
 10208  004BF8                     __end_of___fpclassifyf:
 10209                           	callstack 0
 10210                           
 10211 ;; *************** function ___fltol *****************
 10212 ;; Defined at:
 10213 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 10214 ;; Parameters:    Size  Location     Type
 10215 ;;  f1              4   77[COMRAM] int 
 10216 ;; Auto vars:     Size  Location     Type
 10217 ;;  exp1            1   86[COMRAM] unsigned char 
 10218 ;;  sign1           1   85[COMRAM] unsigned char 
 10219 ;; Return value:  Size  Location     Type
 10220 ;;                  4   77[COMRAM] long 
 10221 ;; Registers used:
 10222 ;;		wreg, status,2, status,0
 10223 ;; Tracked objects:
 10224 ;;		On entry : 0/0
 10225 ;;		On exit  : 0/0
 10226 ;;		Unchanged: 0/0
 10227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10228 ;;      Params:         4       0       0       0       0       0       0
 10229 ;;      Locals:         2       0       0       0       0       0       0
 10230 ;;      Temps:          4       0       0       0       0       0       0
 10231 ;;      Totals:        10       0       0       0       0       0       0
 10232 ;;Total ram usage:       10 bytes
 10233 ;; Hardware stack levels used:    1
 10234 ;; Hardware stack levels required when called:    1
 10235 ;; This function calls:
 10236 ;;		Nothing
 10237 ;; This function is called by:
 10238 ;;		_scanAdcConversion
 10239 ;;		_PWM1_setDC
 10240 ;;		_PWM2_setDC
 10241 ;;		_speedControl
 10242 ;;		_efgtoa
 10243 ;; This function uses a non-reentrant model
 10244 ;;
 10245                           
 10246                           	psect	text37
 10247  0047EC                     __ptext37:
 10248                           	callstack 0
 10249  0047EC                     ___fltol:
 10250                           	callstack 24
 10251  0047EC  3450               	rlcf	(___fltol@f1+2)^0,w,c
 10252  0047EE  3451               	rlcf	(___fltol@f1+3)^0,w,c
 10253  0047F0  6E57               	movwf	___fltol@exp1^0,c
 10254  0047F2  5057               	movf	___fltol@exp1^0,w,c
 10255  0047F4  A4D8               	btfss	status,2,c
 10256  0047F6  EFFF  F023         	goto	u5221
 10257  0047FA  EF01  F024         	goto	u5220
 10258  0047FE                     u5221:
 10259  0047FE  EF0B  F024         	goto	l4732
 10260  004802                     u5220:
 10261  004802                     l4728:
 10262  004802  0E00               	movlw	0
 10263  004804  6E4E               	movwf	?___fltol^0,c
 10264  004806  0E00               	movlw	0
 10265  004808  6E4F               	movwf	(?___fltol+1)^0,c
 10266  00480A  0E00               	movlw	0
 10267  00480C  6E50               	movwf	(?___fltol+2)^0,c
 10268  00480E  0E00               	movlw	0
 10269  004810  6E51               	movwf	(?___fltol+3)^0,c
 10270  004812  EF78  F024         	goto	l840
 10271  004816                     l4732:
 10272  004816  C04E  F052         	movff	___fltol@f1,??___fltol
 10273  00481A  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 10274  00481E  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 10275  004822  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 10276  004826  0E20               	movlw	32
 10277  004828  EF1B  F024         	goto	u5230
 10278  00482C                     u5235:
 10279  00482C  90D8               	bcf	status,0,c
 10280  00482E  3255               	rrcf	(??___fltol+3)^0,f,c
 10281  004830  3254               	rrcf	(??___fltol+2)^0,f,c
 10282  004832  3253               	rrcf	(??___fltol+1)^0,f,c
 10283  004834  3252               	rrcf	??___fltol^0,f,c
 10284  004836                     u5230:
 10285  004836  2EE8               	decfsz	wreg,f,c
 10286  004838  EF16  F024         	goto	u5235
 10287  00483C  5052               	movf	??___fltol^0,w,c
 10288  00483E  6E56               	movwf	___fltol@sign1^0,c
 10289  004840  8E50               	bsf	(___fltol@f1+2)^0,7,c
 10290  004842  0EFF               	movlw	255
 10291  004844  164E               	andwf	___fltol@f1^0,f,c
 10292  004846  0EFF               	movlw	255
 10293  004848  164F               	andwf	(___fltol@f1+1)^0,f,c
 10294  00484A  0EFF               	movlw	255
 10295  00484C  1650               	andwf	(___fltol@f1+2)^0,f,c
 10296  00484E  0E00               	movlw	0
 10297  004850  1651               	andwf	(___fltol@f1+3)^0,f,c
 10298  004852  0E96               	movlw	150
 10299  004854  5E57               	subwf	___fltol@exp1^0,f,c
 10300  004856  BE57               	btfsc	___fltol@exp1^0,7,c
 10301  004858  EF32  F024         	goto	u5240
 10302  00485C  EF30  F024         	goto	u5241
 10303  004860                     u5241:
 10304  004860  EF48  F024         	goto	l4752
 10305  004864                     u5240:
 10306  004864  5057               	movf	___fltol@exp1^0,w,c
 10307  004866  0A80               	xorlw	128
 10308  004868  0F97               	addlw	151
 10309  00486A  B0D8               	btfsc	status,0,c
 10310  00486C  EF3A  F024         	goto	u5251
 10311  004870  EF3C  F024         	goto	u5250
 10312  004874                     u5251:
 10313  004874  EF3E  F024         	goto	l4748
 10314  004878                     u5250:
 10315  004878  EF01  F024         	goto	l4728
 10316  00487C                     l4748:
 10317  00487C  90D8               	bcf	status,0,c
 10318  00487E  3251               	rrcf	(___fltol@f1+3)^0,f,c
 10319  004880  3250               	rrcf	(___fltol@f1+2)^0,f,c
 10320  004882  324F               	rrcf	(___fltol@f1+1)^0,f,c
 10321  004884  324E               	rrcf	___fltol@f1^0,f,c
 10322  004886  3E57               	incfsz	___fltol@exp1^0,f,c
 10323  004888  EF3E  F024         	goto	l4748
 10324  00488C  EF60  F024         	goto	l4762
 10325  004890                     l4752:
 10326  004890  0E1F               	movlw	31
 10327  004892  6457               	cpfsgt	___fltol@exp1^0,c
 10328  004894  EF4E  F024         	goto	u5261
 10329  004898  EF50  F024         	goto	u5260
 10330  00489C                     u5261:
 10331  00489C  EF58  F024         	goto	l4760
 10332  0048A0                     u5260:
 10333  0048A0  EF01  F024         	goto	l4728
 10334  0048A4                     l4758:
 10335  0048A4  90D8               	bcf	status,0,c
 10336  0048A6  364E               	rlcf	___fltol@f1^0,f,c
 10337  0048A8  364F               	rlcf	(___fltol@f1+1)^0,f,c
 10338  0048AA  3650               	rlcf	(___fltol@f1+2)^0,f,c
 10339  0048AC  3651               	rlcf	(___fltol@f1+3)^0,f,c
 10340  0048AE  0657               	decf	___fltol@exp1^0,f,c
 10341  0048B0                     l4760:
 10342  0048B0  5057               	movf	___fltol@exp1^0,w,c
 10343  0048B2  A4D8               	btfss	status,2,c
 10344  0048B4  EF5E  F024         	goto	u5271
 10345  0048B8  EF60  F024         	goto	u5270
 10346  0048BC                     u5271:
 10347  0048BC  EF52  F024         	goto	l4758
 10348  0048C0                     u5270:
 10349  0048C0                     l4762:
 10350  0048C0  5056               	movf	___fltol@sign1^0,w,c
 10351  0048C2  B4D8               	btfsc	status,2,c
 10352  0048C4  EF66  F024         	goto	u5281
 10353  0048C8  EF68  F024         	goto	u5280
 10354  0048CC                     u5281:
 10355  0048CC  EF70  F024         	goto	l4766
 10356  0048D0                     u5280:
 10357  0048D0  1E51               	comf	(___fltol@f1+3)^0,f,c
 10358  0048D2  1E50               	comf	(___fltol@f1+2)^0,f,c
 10359  0048D4  1E4F               	comf	(___fltol@f1+1)^0,f,c
 10360  0048D6  6C4E               	negf	___fltol@f1^0,c
 10361  0048D8  0E00               	movlw	0
 10362  0048DA  224F               	addwfc	(___fltol@f1+1)^0,f,c
 10363  0048DC  2250               	addwfc	(___fltol@f1+2)^0,f,c
 10364  0048DE  2251               	addwfc	(___fltol@f1+3)^0,f,c
 10365  0048E0                     l4766:
 10366  0048E0  C04E  F04E         	movff	___fltol@f1,?___fltol
 10367  0048E4  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 10368  0048E8  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 10369  0048EC  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 10370  0048F0                     l840:
 10371  0048F0  0012               	return		;funcret
 10372  0048F2                     __end_of___fltol:
 10373                           	callstack 0
 10374                           
 10375 ;; *************** function ___flsub *****************
 10376 ;; Defined at:
 10377 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10378 ;; Parameters:    Size  Location     Type
 10379 ;;  b               4   68[COMRAM] long 
 10380 ;;  a               4   72[COMRAM] long 
 10381 ;; Auto vars:     Size  Location     Type
 10382 ;;		None
 10383 ;; Return value:  Size  Location     Type
 10384 ;;                  4   68[COMRAM] long 
 10385 ;; Registers used:
 10386 ;;		wreg, status,2, status,0, cstack
 10387 ;; Tracked objects:
 10388 ;;		On entry : 0/0
 10389 ;;		On exit  : 0/0
 10390 ;;		Unchanged: 0/0
 10391 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10392 ;;      Params:         8       0       0       0       0       0       0
 10393 ;;      Locals:         0       0       0       0       0       0       0
 10394 ;;      Temps:          0       0       0       0       0       0       0
 10395 ;;      Totals:         8       0       0       0       0       0       0
 10396 ;;Total ram usage:        8 bytes
 10397 ;; Hardware stack levels used:    1
 10398 ;; Hardware stack levels required when called:    2
 10399 ;; This function calls:
 10400 ;;		___fladd
 10401 ;; This function is called by:
 10402 ;;		_secretMenu
 10403 ;;		_efgtoa
 10404 ;; This function uses a non-reentrant model
 10405 ;;
 10406                           
 10407                           	psect	text38
 10408  005930                     __ptext38:
 10409                           	callstack 0
 10410  005930                     ___flsub:
 10411                           	callstack 21
 10412  005930  0E00               	movlw	0
 10413  005932  1A49               	xorwf	___flsub@a^0,f,c
 10414  005934  0E00               	movlw	0
 10415  005936  1A4A               	xorwf	(___flsub@a+1)^0,f,c
 10416  005938  0E00               	movlw	0
 10417  00593A  1A4B               	xorwf	(___flsub@a+2)^0,f,c
 10418  00593C  0E80               	movlw	128
 10419  00593E  1A4C               	xorwf	(___flsub@a+3)^0,f,c
 10420  005940  C045  F035         	movff	___flsub@b,___fladd@b
 10421  005944  C046  F036         	movff	___flsub@b+1,___fladd@b+1
 10422  005948  C047  F037         	movff	___flsub@b+2,___fladd@b+2
 10423  00594C  C048  F038         	movff	___flsub@b+3,___fladd@b+3
 10424  005950  C049  F039         	movff	___flsub@a,___fladd@a
 10425  005954  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
 10426  005958  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
 10427  00595C  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
 10428  005960  EC6E  F010         	call	___fladd	;wreg free
 10429  005964  C035  F045         	movff	?___fladd,?___flsub
 10430  005968  C036  F046         	movff	?___fladd+1,?___flsub+1
 10431  00596C  C037  F047         	movff	?___fladd+2,?___flsub+2
 10432  005970  C038  F048         	movff	?___fladd+3,?___flsub+3
 10433  005974  0012               	return		;funcret
 10434  005976                     __end_of___flsub:
 10435                           	callstack 0
 10436                           
 10437 ;; *************** function ___fladd *****************
 10438 ;; Defined at:
 10439 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10440 ;; Parameters:    Size  Location     Type
 10441 ;;  b               4   52[COMRAM] long 
 10442 ;;  a               4   56[COMRAM] long 
 10443 ;; Auto vars:     Size  Location     Type
 10444 ;;  grs             1   67[COMRAM] unsigned char 
 10445 ;;  bexp            1   66[COMRAM] unsigned char 
 10446 ;;  aexp            1   65[COMRAM] unsigned char 
 10447 ;;  signs           1   64[COMRAM] unsigned char 
 10448 ;; Return value:  Size  Location     Type
 10449 ;;                  4   52[COMRAM] unsigned char 
 10450 ;; Registers used:
 10451 ;;		wreg, status,2, status,0
 10452 ;; Tracked objects:
 10453 ;;		On entry : 0/0
 10454 ;;		On exit  : 0/0
 10455 ;;		Unchanged: 0/0
 10456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10457 ;;      Params:         8       0       0       0       0       0       0
 10458 ;;      Locals:         4       0       0       0       0       0       0
 10459 ;;      Temps:          4       0       0       0       0       0       0
 10460 ;;      Totals:        16       0       0       0       0       0       0
 10461 ;;Total ram usage:       16 bytes
 10462 ;; Hardware stack levels used:    1
 10463 ;; Hardware stack levels required when called:    1
 10464 ;; This function calls:
 10465 ;;		Nothing
 10466 ;; This function is called by:
 10467 ;;		_secretMenu
 10468 ;;		_speedControl
 10469 ;;		___flsub
 10470 ;;		_efgtoa
 10471 ;; This function uses a non-reentrant model
 10472 ;;
 10473                           
 10474                           	psect	text39
 10475  0020DC                     __ptext39:
 10476                           	callstack 0
 10477  0020DC                     ___fladd:
 10478                           	callstack 21
 10479  0020DC  5038               	movf	(___fladd@b+3)^0,w,c
 10480  0020DE  0B80               	andlw	128
 10481  0020E0  6E41               	movwf	___fladd@signs^0,c
 10482  0020E2  5038               	movf	(___fladd@b+3)^0,w,c
 10483  0020E4  2438               	addwf	(___fladd@b+3)^0,w,c
 10484  0020E6  6E43               	movwf	___fladd@bexp^0,c
 10485  0020E8  AE37               	btfss	(___fladd@b+2)^0,7,c
 10486  0020EA  EF79  F010         	goto	u4031
 10487  0020EE  EF7B  F010         	goto	u4030
 10488  0020F2                     u4031:
 10489  0020F2  EF7C  F010         	goto	l4022
 10490  0020F6                     u4030:
 10491  0020F6  8043               	bsf	___fladd@bexp^0,0,c
 10492  0020F8                     l4022:
 10493  0020F8  5043               	movf	___fladd@bexp^0,w,c
 10494  0020FA  B4D8               	btfsc	status,2,c
 10495  0020FC  EF82  F010         	goto	u4041
 10496  002100  EF84  F010         	goto	u4040
 10497  002104                     u4041:
 10498  002104  EF99  F010         	goto	l4032
 10499  002108                     u4040:
 10500  002108  2843               	incf	___fladd@bexp^0,w,c
 10501  00210A  A4D8               	btfss	status,2,c
 10502  00210C  EF8A  F010         	goto	u4051
 10503  002110  EF8C  F010         	goto	u4050
 10504  002114                     u4051:
 10505  002114  EF94  F010         	goto	l4028
 10506  002118                     u4050:
 10507  002118  0E00               	movlw	0
 10508  00211A  6E35               	movwf	___fladd@b^0,c
 10509  00211C  0E00               	movlw	0
 10510  00211E  6E36               	movwf	(___fladd@b+1)^0,c
 10511  002120  0E00               	movlw	0
 10512  002122  6E37               	movwf	(___fladd@b+2)^0,c
 10513  002124  0E00               	movlw	0
 10514  002126  6E38               	movwf	(___fladd@b+3)^0,c
 10515  002128                     l4028:
 10516  002128  8E37               	bsf	(___fladd@b+2)^0,7,c
 10517  00212A  0E00               	movlw	0
 10518  00212C  6E38               	movwf	(___fladd@b+3)^0,c
 10519  00212E  EFA1  F010         	goto	l4034
 10520  002132                     l4032:
 10521  002132  0E00               	movlw	0
 10522  002134  6E35               	movwf	___fladd@b^0,c
 10523  002136  0E00               	movlw	0
 10524  002138  6E36               	movwf	(___fladd@b+1)^0,c
 10525  00213A  0E00               	movlw	0
 10526  00213C  6E37               	movwf	(___fladd@b+2)^0,c
 10527  00213E  0E00               	movlw	0
 10528  002140  6E38               	movwf	(___fladd@b+3)^0,c
 10529  002142                     l4034:
 10530  002142  503C               	movf	(___fladd@a+3)^0,w,c
 10531  002144  0B80               	andlw	128
 10532  002146  6E42               	movwf	___fladd@aexp^0,c
 10533  002148  5041               	movf	___fladd@signs^0,w,c
 10534  00214A  1842               	xorwf	___fladd@aexp^0,w,c
 10535  00214C  B4D8               	btfsc	status,2,c
 10536  00214E  EFAB  F010         	goto	u4061
 10537  002152  EFAD  F010         	goto	u4060
 10538  002156                     u4061:
 10539  002156  EFAE  F010         	goto	l4040
 10540  00215A                     u4060:
 10541  00215A  8C41               	bsf	___fladd@signs^0,6,c
 10542  00215C                     l4040:
 10543  00215C  503C               	movf	(___fladd@a+3)^0,w,c
 10544  00215E  243C               	addwf	(___fladd@a+3)^0,w,c
 10545  002160  6E42               	movwf	___fladd@aexp^0,c
 10546  002162  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10547  002164  EFB6  F010         	goto	u4071
 10548  002168  EFB8  F010         	goto	u4070
 10549  00216C                     u4071:
 10550  00216C  EFB9  F010         	goto	l4046
 10551  002170                     u4070:
 10552  002170  8042               	bsf	___fladd@aexp^0,0,c
 10553  002172                     l4046:
 10554  002172  5042               	movf	___fladd@aexp^0,w,c
 10555  002174  B4D8               	btfsc	status,2,c
 10556  002176  EFBF  F010         	goto	u4081
 10557  00217A  EFC1  F010         	goto	u4080
 10558  00217E                     u4081:
 10559  00217E  EFD6  F010         	goto	l4056
 10560  002182                     u4080:
 10561  002182  2842               	incf	___fladd@aexp^0,w,c
 10562  002184  A4D8               	btfss	status,2,c
 10563  002186  EFC7  F010         	goto	u4091
 10564  00218A  EFC9  F010         	goto	u4090
 10565  00218E                     u4091:
 10566  00218E  EFD1  F010         	goto	l4052
 10567  002192                     u4090:
 10568  002192  0E00               	movlw	0
 10569  002194  6E39               	movwf	___fladd@a^0,c
 10570  002196  0E00               	movlw	0
 10571  002198  6E3A               	movwf	(___fladd@a+1)^0,c
 10572  00219A  0E00               	movlw	0
 10573  00219C  6E3B               	movwf	(___fladd@a+2)^0,c
 10574  00219E  0E00               	movlw	0
 10575  0021A0  6E3C               	movwf	(___fladd@a+3)^0,c
 10576  0021A2                     l4052:
 10577  0021A2  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10578  0021A4  0E00               	movlw	0
 10579  0021A6  6E3C               	movwf	(___fladd@a+3)^0,c
 10580  0021A8  EFDE  F010         	goto	l4058
 10581  0021AC                     l4056:
 10582  0021AC  0E00               	movlw	0
 10583  0021AE  6E39               	movwf	___fladd@a^0,c
 10584  0021B0  0E00               	movlw	0
 10585  0021B2  6E3A               	movwf	(___fladd@a+1)^0,c
 10586  0021B4  0E00               	movlw	0
 10587  0021B6  6E3B               	movwf	(___fladd@a+2)^0,c
 10588  0021B8  0E00               	movlw	0
 10589  0021BA  6E3C               	movwf	(___fladd@a+3)^0,c
 10590  0021BC                     l4058:
 10591  0021BC  5043               	movf	___fladd@bexp^0,w,c
 10592  0021BE  5C42               	subwf	___fladd@aexp^0,w,c
 10593  0021C0  B0D8               	btfsc	status,0,c
 10594  0021C2  EFE5  F010         	goto	u4101
 10595  0021C6  EFE7  F010         	goto	u4100
 10596  0021CA                     u4101:
 10597  0021CA  EF0E  F011         	goto	l4094
 10598  0021CE                     u4100:
 10599  0021CE  AC41               	btfss	___fladd@signs^0,6,c
 10600  0021D0  EFEC  F010         	goto	u4111
 10601  0021D4  EFEE  F010         	goto	u4110
 10602  0021D8                     u4111:
 10603  0021D8  EFF0  F010         	goto	l4064
 10604  0021DC                     u4110:
 10605  0021DC  0E80               	movlw	128
 10606  0021DE  1A41               	xorwf	___fladd@signs^0,f,c
 10607  0021E0                     l4064:
 10608  0021E0  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10609  0021E4  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10610  0021E8  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10611  0021EC  C035  F044         	movff	___fladd@b,___fladd@grs
 10612  0021F0  C039  F035         	movff	___fladd@a,___fladd@b
 10613  0021F4  C044  F039         	movff	___fladd@grs,___fladd@a
 10614  0021F8  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10615  0021FC  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10616  002200  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10617  002204  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10618  002208  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10619  00220C  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10620  002210  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10621  002214  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10622  002218  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10623  00221C                     l4094:
 10624  00221C  0E00               	movlw	0
 10625  00221E  6E44               	movwf	___fladd@grs^0,c
 10626  002220  5043               	movf	___fladd@bexp^0,w,c
 10627  002222  C042  F03D         	movff	___fladd@aexp,??___fladd
 10628  002226  6A3E               	clrf	(??___fladd+1)^0,c
 10629  002228  5E3D               	subwf	??___fladd^0,f,c
 10630  00222A  0E00               	movlw	0
 10631  00222C  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10632  00222E  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10633  002230  EF23  F011         	goto	u4121
 10634  002234  503E               	movf	(??___fladd+1)^0,w,c
 10635  002236  E109               	bnz	u4120
 10636  002238  0E1A               	movlw	26
 10637  00223A  5C3D               	subwf	??___fladd^0,w,c
 10638  00223C  A0D8               	btfss	status,0,c
 10639  00223E  EF23  F011         	goto	u4121
 10640  002242  EF25  F011         	goto	u4120
 10641  002246                     u4121:
 10642  002246  EF5C  F011         	goto	l1072
 10643  00224A                     u4120:
 10644  00224A  5035               	movf	___fladd@b^0,w,c
 10645  00224C  1036               	iorwf	(___fladd@b+1)^0,w,c
 10646  00224E  1037               	iorwf	(___fladd@b+2)^0,w,c
 10647  002250  1038               	iorwf	(___fladd@b+3)^0,w,c
 10648  002252  A4D8               	btfss	status,2,c
 10649  002254  EF2E  F011         	goto	u4131
 10650  002258  EF31  F011         	goto	u4130
 10651  00225C                     u4131:
 10652  00225C  0E01               	movlw	1
 10653  00225E  EF32  F011         	goto	u4140
 10654  002262                     u4130:
 10655  002262  0E00               	movlw	0
 10656  002264                     u4140:
 10657  002264  6E44               	movwf	___fladd@grs^0,c
 10658  002266  0E00               	movlw	0
 10659  002268  6E35               	movwf	___fladd@b^0,c
 10660  00226A  0E00               	movlw	0
 10661  00226C  6E36               	movwf	(___fladd@b+1)^0,c
 10662  00226E  0E00               	movlw	0
 10663  002270  6E37               	movwf	(___fladd@b+2)^0,c
 10664  002272  0E00               	movlw	0
 10665  002274  6E38               	movwf	(___fladd@b+3)^0,c
 10666  002276  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10667  00227A  EF65  F011         	goto	l1071
 10668  00227E                     l1073:
 10669  00227E  A044               	btfss	___fladd@grs^0,0,c
 10670  002280  EF44  F011         	goto	u4151
 10671  002284  EF46  F011         	goto	u4150
 10672  002288                     u4151:
 10673  002288  EF4C  F011         	goto	l4106
 10674  00228C                     u4150:
 10675  00228C  90D8               	bcf	status,0,c
 10676  00228E  3044               	rrcf	___fladd@grs^0,w,c
 10677  002290  0901               	iorlw	1
 10678  002292  6E44               	movwf	___fladd@grs^0,c
 10679  002294  EF4E  F011         	goto	l4108
 10680  002298                     l4106:
 10681  002298  90D8               	bcf	status,0,c
 10682  00229A  3244               	rrcf	___fladd@grs^0,f,c
 10683  00229C                     l4108:
 10684  00229C  A035               	btfss	___fladd@b^0,0,c
 10685  00229E  EF53  F011         	goto	u4161
 10686  0022A2  EF55  F011         	goto	u4160
 10687  0022A6                     u4161:
 10688  0022A6  EF56  F011         	goto	l4112
 10689  0022AA                     u4160:
 10690  0022AA  8E44               	bsf	___fladd@grs^0,7,c
 10691  0022AC                     l4112:
 10692  0022AC  3438               	rlcf	(___fladd@b+3)^0,w,c
 10693  0022AE  3238               	rrcf	(___fladd@b+3)^0,f,c
 10694  0022B0  3237               	rrcf	(___fladd@b+2)^0,f,c
 10695  0022B2  3236               	rrcf	(___fladd@b+1)^0,f,c
 10696  0022B4  3235               	rrcf	___fladd@b^0,f,c
 10697  0022B6  2A43               	incf	___fladd@bexp^0,f,c
 10698  0022B8                     l1072:
 10699  0022B8  5042               	movf	___fladd@aexp^0,w,c
 10700  0022BA  5C43               	subwf	___fladd@bexp^0,w,c
 10701  0022BC  A0D8               	btfss	status,0,c
 10702  0022BE  EF63  F011         	goto	u4171
 10703  0022C2  EF65  F011         	goto	u4170
 10704  0022C6                     u4171:
 10705  0022C6  EF3F  F011         	goto	l1073
 10706  0022CA                     u4170:
 10707  0022CA                     l1071:
 10708  0022CA  BC41               	btfsc	___fladd@signs^0,6,c
 10709  0022CC  EF6A  F011         	goto	u4181
 10710  0022D0  EF6C  F011         	goto	u4180
 10711  0022D4                     u4181:
 10712  0022D4  EFAC  F011         	goto	l4140
 10713  0022D8                     u4180:
 10714  0022D8  5043               	movf	___fladd@bexp^0,w,c
 10715  0022DA  A4D8               	btfss	status,2,c
 10716  0022DC  EF72  F011         	goto	u4191
 10717  0022E0  EF74  F011         	goto	u4190
 10718  0022E4                     u4191:
 10719  0022E4  EF7E  F011         	goto	l4122
 10720  0022E8                     u4190:
 10721  0022E8  0E00               	movlw	0
 10722  0022EA  6E35               	movwf	?___fladd^0,c
 10723  0022EC  0E00               	movlw	0
 10724  0022EE  6E36               	movwf	(?___fladd+1)^0,c
 10725  0022F0  0E00               	movlw	0
 10726  0022F2  6E37               	movwf	(?___fladd+2)^0,c
 10727  0022F4  0E00               	movlw	0
 10728  0022F6  6E38               	movwf	(?___fladd+3)^0,c
 10729  0022F8  EFCD  F012         	goto	l1080
 10730  0022FC                     l4122:
 10731  0022FC  5039               	movf	___fladd@a^0,w,c
 10732  0022FE  2635               	addwf	___fladd@b^0,f,c
 10733  002300  503A               	movf	(___fladd@a+1)^0,w,c
 10734  002302  2236               	addwfc	(___fladd@b+1)^0,f,c
 10735  002304  503B               	movf	(___fladd@a+2)^0,w,c
 10736  002306  2237               	addwfc	(___fladd@b+2)^0,f,c
 10737  002308  503C               	movf	(___fladd@a+3)^0,w,c
 10738  00230A  2238               	addwfc	(___fladd@b+3)^0,f,c
 10739  00230C  A038               	btfss	(___fladd@b+3)^0,0,c
 10740  00230E  EF8B  F011         	goto	u4201
 10741  002312  EF8D  F011         	goto	u4200
 10742  002316                     u4201:
 10743  002316  EF39  F012         	goto	l4176
 10744  00231A                     u4200:
 10745  00231A  A044               	btfss	___fladd@grs^0,0,c
 10746  00231C  EF92  F011         	goto	u4211
 10747  002320  EF94  F011         	goto	u4210
 10748  002324                     u4211:
 10749  002324  EF9A  F011         	goto	l4130
 10750  002328                     u4210:
 10751  002328  90D8               	bcf	status,0,c
 10752  00232A  3044               	rrcf	___fladd@grs^0,w,c
 10753  00232C  0901               	iorlw	1
 10754  00232E  6E44               	movwf	___fladd@grs^0,c
 10755  002330  EF9C  F011         	goto	l4132
 10756  002334                     l4130:
 10757  002334  90D8               	bcf	status,0,c
 10758  002336  3244               	rrcf	___fladd@grs^0,f,c
 10759  002338                     l4132:
 10760  002338  A035               	btfss	___fladd@b^0,0,c
 10761  00233A  EFA1  F011         	goto	u4221
 10762  00233E  EFA3  F011         	goto	u4220
 10763  002342                     u4221:
 10764  002342  EFA4  F011         	goto	l4136
 10765  002346                     u4220:
 10766  002346  8E44               	bsf	___fladd@grs^0,7,c
 10767  002348                     l4136:
 10768  002348  3438               	rlcf	(___fladd@b+3)^0,w,c
 10769  00234A  3238               	rrcf	(___fladd@b+3)^0,f,c
 10770  00234C  3237               	rrcf	(___fladd@b+2)^0,f,c
 10771  00234E  3236               	rrcf	(___fladd@b+1)^0,f,c
 10772  002350  3235               	rrcf	___fladd@b^0,f,c
 10773  002352  2A43               	incf	___fladd@bexp^0,f,c
 10774  002354  EF39  F012         	goto	l4176
 10775  002358                     l4140:
 10776  002358  5039               	movf	___fladd@a^0,w,c
 10777  00235A  5C35               	subwf	___fladd@b^0,w,c
 10778  00235C  503A               	movf	(___fladd@a+1)^0,w,c
 10779  00235E  5836               	subwfb	(___fladd@b+1)^0,w,c
 10780  002360  503B               	movf	(___fladd@a+2)^0,w,c
 10781  002362  5837               	subwfb	(___fladd@b+2)^0,w,c
 10782  002364  5038               	movf	(___fladd@b+3)^0,w,c
 10783  002366  0A80               	xorlw	128
 10784  002368  6E3D               	movwf	??___fladd^0,c
 10785  00236A  503C               	movf	(___fladd@a+3)^0,w,c
 10786  00236C  0A80               	xorlw	128
 10787  00236E  583D               	subwfb	??___fladd^0,w,c
 10788  002370  B0D8               	btfsc	status,0,c
 10789  002372  EFBD  F011         	goto	u4231
 10790  002376  EFBF  F011         	goto	u4230
 10791  00237A                     u4231:
 10792  00237A  EFEA  F011         	goto	l4150
 10793  00237E                     u4230:
 10794  00237E  5035               	movf	___fladd@b^0,w,c
 10795  002380  5C39               	subwf	___fladd@a^0,w,c
 10796  002382  6E3D               	movwf	??___fladd^0,c
 10797  002384  5036               	movf	(___fladd@b+1)^0,w,c
 10798  002386  583A               	subwfb	(___fladd@a+1)^0,w,c
 10799  002388  6E3E               	movwf	(??___fladd+1)^0,c
 10800  00238A  5037               	movf	(___fladd@b+2)^0,w,c
 10801  00238C  583B               	subwfb	(___fladd@a+2)^0,w,c
 10802  00238E  6E3F               	movwf	(??___fladd+2)^0,c
 10803  002390  5038               	movf	(___fladd@b+3)^0,w,c
 10804  002392  583C               	subwfb	(___fladd@a+3)^0,w,c
 10805  002394  6E40               	movwf	(??___fladd+3)^0,c
 10806  002396  0EFF               	movlw	255
 10807  002398  243D               	addwf	??___fladd^0,w,c
 10808  00239A  6E35               	movwf	___fladd@b^0,c
 10809  00239C  0EFF               	movlw	255
 10810  00239E  203E               	addwfc	(??___fladd+1)^0,w,c
 10811  0023A0  6E36               	movwf	(___fladd@b+1)^0,c
 10812  0023A2  0EFF               	movlw	255
 10813  0023A4  203F               	addwfc	(??___fladd+2)^0,w,c
 10814  0023A6  6E37               	movwf	(___fladd@b+2)^0,c
 10815  0023A8  0EFF               	movlw	255
 10816  0023AA  2040               	addwfc	(??___fladd+3)^0,w,c
 10817  0023AC  6E38               	movwf	(___fladd@b+3)^0,c
 10818  0023AE  0E80               	movlw	128
 10819  0023B0  1A41               	xorwf	___fladd@signs^0,f,c
 10820  0023B2  6C44               	negf	___fladd@grs^0,c
 10821  0023B4  5044               	movf	___fladd@grs^0,w,c
 10822  0023B6  A4D8               	btfss	status,2,c
 10823  0023B8  EFE0  F011         	goto	u4241
 10824  0023BC  EFE2  F011         	goto	u4240
 10825  0023C0                     u4241:
 10826  0023C0  EFF2  F011         	goto	l1088
 10827  0023C4                     u4240:
 10828  0023C4  0E01               	movlw	1
 10829  0023C6  2635               	addwf	___fladd@b^0,f,c
 10830  0023C8  0E00               	movlw	0
 10831  0023CA  2236               	addwfc	(___fladd@b+1)^0,f,c
 10832  0023CC  2237               	addwfc	(___fladd@b+2)^0,f,c
 10833  0023CE  2238               	addwfc	(___fladd@b+3)^0,f,c
 10834  0023D0  EFF2  F011         	goto	l1088
 10835  0023D4                     l4150:
 10836  0023D4  5039               	movf	___fladd@a^0,w,c
 10837  0023D6  5E35               	subwf	___fladd@b^0,f,c
 10838  0023D8  503A               	movf	(___fladd@a+1)^0,w,c
 10839  0023DA  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10840  0023DC  503B               	movf	(___fladd@a+2)^0,w,c
 10841  0023DE  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10842  0023E0  503C               	movf	(___fladd@a+3)^0,w,c
 10843  0023E2  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10844  0023E4                     l1088:
 10845  0023E4  5035               	movf	___fladd@b^0,w,c
 10846  0023E6  1036               	iorwf	(___fladd@b+1)^0,w,c
 10847  0023E8  1037               	iorwf	(___fladd@b+2)^0,w,c
 10848  0023EA  1038               	iorwf	(___fladd@b+3)^0,w,c
 10849  0023EC  A4D8               	btfss	status,2,c
 10850  0023EE  EFFB  F011         	goto	u4251
 10851  0023F2  EFFD  F011         	goto	u4250
 10852  0023F6                     u4251:
 10853  0023F6  EF32  F012         	goto	l4174
 10854  0023FA                     u4250:
 10855  0023FA  5044               	movf	___fladd@grs^0,w,c
 10856  0023FC  A4D8               	btfss	status,2,c
 10857  0023FE  EF03  F012         	goto	u4261
 10858  002402  EF05  F012         	goto	u4260
 10859  002406                     u4261:
 10860  002406  EF32  F012         	goto	l4174
 10861  00240A                     u4260:
 10862  00240A  0E00               	movlw	0
 10863  00240C  6E35               	movwf	?___fladd^0,c
 10864  00240E  0E00               	movlw	0
 10865  002410  6E36               	movwf	(?___fladd+1)^0,c
 10866  002412  0E00               	movlw	0
 10867  002414  6E37               	movwf	(?___fladd+2)^0,c
 10868  002416  0E00               	movlw	0
 10869  002418  6E38               	movwf	(?___fladd+3)^0,c
 10870  00241A  EFCD  F012         	goto	l1080
 10871  00241E                     l4158:
 10872  00241E  90D8               	bcf	status,0,c
 10873  002420  3635               	rlcf	___fladd@b^0,f,c
 10874  002422  3636               	rlcf	(___fladd@b+1)^0,f,c
 10875  002424  3637               	rlcf	(___fladd@b+2)^0,f,c
 10876  002426  3638               	rlcf	(___fladd@b+3)^0,f,c
 10877  002428  AE44               	btfss	___fladd@grs^0,7,c
 10878  00242A  EF19  F012         	goto	u4271
 10879  00242E  EF1B  F012         	goto	u4270
 10880  002432                     u4271:
 10881  002432  EF1C  F012         	goto	l4164
 10882  002436                     u4270:
 10883  002436  8035               	bsf	___fladd@b^0,0,c
 10884  002438                     l4164:
 10885  002438  A044               	btfss	___fladd@grs^0,0,c
 10886  00243A  EF21  F012         	goto	u4281
 10887  00243E  EF23  F012         	goto	u4280
 10888  002442                     u4281:
 10889  002442  EF27  F012         	goto	l4168
 10890  002446                     u4280:
 10891  002446  80D8               	bsf	status,0,c
 10892  002448  3644               	rlcf	___fladd@grs^0,f,c
 10893  00244A  EF29  F012         	goto	l4170
 10894  00244E                     l4168:
 10895  00244E  90D8               	bcf	status,0,c
 10896  002450  3644               	rlcf	___fladd@grs^0,f,c
 10897  002452                     l4170:
 10898  002452  5043               	movf	___fladd@bexp^0,w,c
 10899  002454  B4D8               	btfsc	status,2,c
 10900  002456  EF2F  F012         	goto	u4291
 10901  00245A  EF31  F012         	goto	u4290
 10902  00245E                     u4291:
 10903  00245E  EF32  F012         	goto	l4174
 10904  002462                     u4290:
 10905  002462  0643               	decf	___fladd@bexp^0,f,c
 10906  002464                     l4174:
 10907  002464  AE37               	btfss	(___fladd@b+2)^0,7,c
 10908  002466  EF37  F012         	goto	u4301
 10909  00246A  EF39  F012         	goto	u4300
 10910  00246E                     u4301:
 10911  00246E  EF0F  F012         	goto	l4158
 10912  002472                     u4300:
 10913  002472                     l4176:
 10914  002472  0E00               	movlw	0
 10915  002474  6E42               	movwf	___fladd@aexp^0,c
 10916  002476  AE44               	btfss	___fladd@grs^0,7,c
 10917  002478  EF40  F012         	goto	u4311
 10918  00247C  EF42  F012         	goto	u4310
 10919  002480                     u4311:
 10920  002480  EF5A  F012         	goto	l1097
 10921  002484                     u4310:
 10922  002484  C044  F03D         	movff	___fladd@grs,??___fladd
 10923  002488  0E7F               	movlw	127
 10924  00248A  163D               	andwf	??___fladd^0,f,c
 10925  00248C  B4D8               	btfsc	status,2,c
 10926  00248E  EF4B  F012         	goto	u4321
 10927  002492  EF4D  F012         	goto	u4320
 10928  002496                     u4321:
 10929  002496  EF51  F012         	goto	l1098
 10930  00249A                     u4320:
 10931  00249A                     l4182:
 10932  00249A  0E01               	movlw	1
 10933  00249C  6E42               	movwf	___fladd@aexp^0,c
 10934  00249E  EF5A  F012         	goto	l1097
 10935  0024A2                     l1098:
 10936  0024A2  A035               	btfss	___fladd@b^0,0,c
 10937  0024A4  EF56  F012         	goto	u4331
 10938  0024A8  EF58  F012         	goto	u4330
 10939  0024AC                     u4331:
 10940  0024AC  EF5A  F012         	goto	l1097
 10941  0024B0                     u4330:
 10942  0024B0  EF4D  F012         	goto	l4182
 10943  0024B4                     l1097:
 10944  0024B4  5042               	movf	___fladd@aexp^0,w,c
 10945  0024B6  B4D8               	btfsc	status,2,c
 10946  0024B8  EF60  F012         	goto	u4341
 10947  0024BC  EF62  F012         	goto	u4340
 10948  0024C0                     u4341:
 10949  0024C0  EF8D  F012         	goto	l4194
 10950  0024C4                     u4340:
 10951  0024C4  0E01               	movlw	1
 10952  0024C6  2635               	addwf	___fladd@b^0,f,c
 10953  0024C8  0E00               	movlw	0
 10954  0024CA  2236               	addwfc	(___fladd@b+1)^0,f,c
 10955  0024CC  2237               	addwfc	(___fladd@b+2)^0,f,c
 10956  0024CE  2238               	addwfc	(___fladd@b+3)^0,f,c
 10957  0024D0  A038               	btfss	(___fladd@b+3)^0,0,c
 10958  0024D2  EF6D  F012         	goto	u4351
 10959  0024D6  EF6F  F012         	goto	u4350
 10960  0024DA                     u4351:
 10961  0024DA  EF8D  F012         	goto	l4194
 10962  0024DE                     u4350:
 10963  0024DE  C035  F03D         	movff	___fladd@b,??___fladd
 10964  0024E2  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10965  0024E6  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10966  0024EA  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10967  0024EE  3440               	rlcf	(??___fladd+3)^0,w,c
 10968  0024F0  3240               	rrcf	(??___fladd+3)^0,f,c
 10969  0024F2  323F               	rrcf	(??___fladd+2)^0,f,c
 10970  0024F4  323E               	rrcf	(??___fladd+1)^0,f,c
 10971  0024F6  323D               	rrcf	??___fladd^0,f,c
 10972  0024F8  C03D  F035         	movff	??___fladd,___fladd@b
 10973  0024FC  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10974  002500  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10975  002504  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10976  002508  2843               	incf	___fladd@bexp^0,w,c
 10977  00250A  B4D8               	btfsc	status,2,c
 10978  00250C  EF8A  F012         	goto	u4361
 10979  002510  EF8C  F012         	goto	u4360
 10980  002514                     u4361:
 10981  002514  EF8D  F012         	goto	l4194
 10982  002518                     u4360:
 10983  002518  2A43               	incf	___fladd@bexp^0,f,c
 10984  00251A                     l4194:
 10985  00251A  2843               	incf	___fladd@bexp^0,w,c
 10986  00251C  B4D8               	btfsc	status,2,c
 10987  00251E  EF93  F012         	goto	u4371
 10988  002522  EF95  F012         	goto	u4370
 10989  002526                     u4371:
 10990  002526  EF9D  F012         	goto	l4198
 10991  00252A                     u4370:
 10992  00252A  5043               	movf	___fladd@bexp^0,w,c
 10993  00252C  A4D8               	btfss	status,2,c
 10994  00252E  EF9B  F012         	goto	u4381
 10995  002532  EF9D  F012         	goto	u4380
 10996  002536                     u4381:
 10997  002536  EFAF  F012         	goto	l4202
 10998  00253A                     u4380:
 10999  00253A                     l4198:
 11000  00253A  0E00               	movlw	0
 11001  00253C  6E35               	movwf	___fladd@b^0,c
 11002  00253E  0E00               	movlw	0
 11003  002540  6E36               	movwf	(___fladd@b+1)^0,c
 11004  002542  0E00               	movlw	0
 11005  002544  6E37               	movwf	(___fladd@b+2)^0,c
 11006  002546  0E00               	movlw	0
 11007  002548  6E38               	movwf	(___fladd@b+3)^0,c
 11008  00254A  5043               	movf	___fladd@bexp^0,w,c
 11009  00254C  A4D8               	btfss	status,2,c
 11010  00254E  EFAB  F012         	goto	u4391
 11011  002552  EFAD  F012         	goto	u4390
 11012  002556                     u4391:
 11013  002556  EFAF  F012         	goto	l4202
 11014  00255A                     u4390:
 11015  00255A  0E00               	movlw	0
 11016  00255C  6E41               	movwf	___fladd@signs^0,c
 11017  00255E                     l4202:
 11018  00255E  A043               	btfss	___fladd@bexp^0,0,c
 11019  002560  EFB4  F012         	goto	u4401
 11020  002564  EFB6  F012         	goto	u4400
 11021  002568                     u4401:
 11022  002568  EFB9  F012         	goto	l4206
 11023  00256C                     u4400:
 11024  00256C  8E37               	bsf	(___fladd@b+2)^0,7,c
 11025  00256E  EFBA  F012         	goto	l4208
 11026  002572                     l4206:
 11027  002572  9E37               	bcf	(___fladd@b+2)^0,7,c
 11028  002574                     l4208:
 11029  002574  90D8               	bcf	status,0,c
 11030  002576  3043               	rrcf	___fladd@bexp^0,w,c
 11031  002578  6E38               	movwf	(___fladd@b+3)^0,c
 11032  00257A  AE41               	btfss	___fladd@signs^0,7,c
 11033  00257C  EFC2  F012         	goto	u4411
 11034  002580  EFC4  F012         	goto	u4410
 11035  002584                     u4411:
 11036  002584  EFC5  F012         	goto	l4214
 11037  002588                     u4410:
 11038  002588  8E38               	bsf	(___fladd@b+3)^0,7,c
 11039  00258A                     l4214:
 11040  00258A  C035  F035         	movff	___fladd@b,?___fladd
 11041  00258E  C036  F036         	movff	___fladd@b+1,?___fladd+1
 11042  002592  C037  F037         	movff	___fladd@b+2,?___fladd+2
 11043  002596  C038  F038         	movff	___fladd@b+3,?___fladd+3
 11044  00259A                     l1080:
 11045  00259A  0012               	return		;funcret
 11046  00259C                     __end_of___fladd:
 11047                           	callstack 0
 11048                           
 11049 ;; *************** function ___flneg *****************
 11050 ;; Defined at:
 11051 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 11052 ;; Parameters:    Size  Location     Type
 11053 ;;  f1              4    0[COMRAM] unsigned char 
 11054 ;; Auto vars:     Size  Location     Type
 11055 ;;		None
 11056 ;; Return value:  Size  Location     Type
 11057 ;;                  4    0[COMRAM] unsigned char 
 11058 ;; Registers used:
 11059 ;;		wreg, status,2, status,0
 11060 ;; Tracked objects:
 11061 ;;		On entry : 0/0
 11062 ;;		On exit  : 0/0
 11063 ;;		Unchanged: 0/0
 11064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11065 ;;      Params:         4       0       0       0       0       0       0
 11066 ;;      Locals:         0       0       0       0       0       0       0
 11067 ;;      Temps:          0       0       0       0       0       0       0
 11068 ;;      Totals:         4       0       0       0       0       0       0
 11069 ;;Total ram usage:        4 bytes
 11070 ;; Hardware stack levels used:    1
 11071 ;; Hardware stack levels required when called:    1
 11072 ;; This function calls:
 11073 ;;		Nothing
 11074 ;; This function is called by:
 11075 ;;		_efgtoa
 11076 ;; This function uses a non-reentrant model
 11077 ;;
 11078                           
 11079                           	psect	text40
 11080  005AEE                     __ptext40:
 11081                           	callstack 0
 11082  005AEE                     ___flneg:
 11083                           	callstack 22
 11084  005AEE  5001               	movf	___flneg@f1^0,w,c
 11085  005AF0  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11086  005AF2  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11087  005AF4  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11088  005AF6  B4D8               	btfsc	status,2,c
 11089  005AF8  EF80  F02D         	goto	u5211
 11090  005AFC  EF82  F02D         	goto	u5210
 11091  005B00                     u5211:
 11092  005B00  EF8A  F02D         	goto	l4722
 11093  005B04                     u5210:
 11094  005B04  0E00               	movlw	0
 11095  005B06  1A01               	xorwf	___flneg@f1^0,f,c
 11096  005B08  0E00               	movlw	0
 11097  005B0A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11098  005B0C  0E00               	movlw	0
 11099  005B0E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11100  005B10  0E80               	movlw	128
 11101  005B12  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11102  005B14                     l4722:
 11103  005B14  C001  F001         	movff	___flneg@f1,?___flneg
 11104  005B18  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11105  005B1C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11106  005B20  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11107  005B24  0012               	return		;funcret
 11108  005B26                     __end_of___flneg:
 11109                           	callstack 0
 11110                           
 11111 ;; *************** function ___flmul *****************
 11112 ;; Defined at:
 11113 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 11114 ;; Parameters:    Size  Location     Type
 11115 ;;  b               4   27[COMRAM] unsigned char 
 11116 ;;  a               4   31[COMRAM] unsigned char 
 11117 ;; Auto vars:     Size  Location     Type
 11118 ;;  prod            4   46[COMRAM] struct .
 11119 ;;  grs             4   40[COMRAM] unsigned long 
 11120 ;;  temp            2   50[COMRAM] struct .
 11121 ;;  bexp            1   45[COMRAM] unsigned char 
 11122 ;;  aexp            1   44[COMRAM] unsigned char 
 11123 ;;  sign            1   39[COMRAM] unsigned char 
 11124 ;; Return value:  Size  Location     Type
 11125 ;;                  4   27[COMRAM] unsigned char 
 11126 ;; Registers used:
 11127 ;;		wreg, status,2, status,0, prodl, prodh
 11128 ;; Tracked objects:
 11129 ;;		On entry : 0/0
 11130 ;;		On exit  : 0/0
 11131 ;;		Unchanged: 0/0
 11132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11133 ;;      Params:         8       0       0       0       0       0       0
 11134 ;;      Locals:        13       0       0       0       0       0       0
 11135 ;;      Temps:          4       0       0       0       0       0       0
 11136 ;;      Totals:        25       0       0       0       0       0       0
 11137 ;;Total ram usage:       25 bytes
 11138 ;; Hardware stack levels used:    1
 11139 ;; Hardware stack levels required when called:    1
 11140 ;; This function calls:
 11141 ;;		Nothing
 11142 ;; This function is called by:
 11143 ;;		_scanAdcConversion
 11144 ;;		_speedControl
 11145 ;;		_efgtoa
 11146 ;; This function uses a non-reentrant model
 11147 ;;
 11148                           
 11149                           	psect	text41
 11150  00259C                     __ptext41:
 11151                           	callstack 0
 11152  00259C                     ___flmul:
 11153                           	callstack 22
 11154  00259C  501F               	movf	(___flmul@b+3)^0,w,c
 11155  00259E  0B80               	andlw	128
 11156  0025A0  6E28               	movwf	___flmul@sign^0,c
 11157  0025A2  501F               	movf	(___flmul@b+3)^0,w,c
 11158  0025A4  241F               	addwf	(___flmul@b+3)^0,w,c
 11159  0025A6  6E2E               	movwf	___flmul@bexp^0,c
 11160  0025A8  AE1E               	btfss	(___flmul@b+2)^0,7,c
 11161  0025AA  EFD9  F012         	goto	u4821
 11162  0025AE  EFDB  F012         	goto	u4820
 11163  0025B2                     u4821:
 11164  0025B2  EFDC  F012         	goto	l4470
 11165  0025B6                     u4820:
 11166  0025B6  802E               	bsf	___flmul@bexp^0,0,c
 11167  0025B8                     l4470:
 11168  0025B8  502E               	movf	___flmul@bexp^0,w,c
 11169  0025BA  B4D8               	btfsc	status,2,c
 11170  0025BC  EFE2  F012         	goto	u4831
 11171  0025C0  EFE4  F012         	goto	u4830
 11172  0025C4                     u4831:
 11173  0025C4  EFF7  F012         	goto	l4478
 11174  0025C8                     u4830:
 11175  0025C8  282E               	incf	___flmul@bexp^0,w,c
 11176  0025CA  A4D8               	btfss	status,2,c
 11177  0025CC  EFEA  F012         	goto	u4841
 11178  0025D0  EFEC  F012         	goto	u4840
 11179  0025D4                     u4841:
 11180  0025D4  EFF4  F012         	goto	l4476
 11181  0025D8                     u4840:
 11182  0025D8  0E00               	movlw	0
 11183  0025DA  6E1C               	movwf	___flmul@b^0,c
 11184  0025DC  0E00               	movlw	0
 11185  0025DE  6E1D               	movwf	(___flmul@b+1)^0,c
 11186  0025E0  0E00               	movlw	0
 11187  0025E2  6E1E               	movwf	(___flmul@b+2)^0,c
 11188  0025E4  0E00               	movlw	0
 11189  0025E6  6E1F               	movwf	(___flmul@b+3)^0,c
 11190  0025E8                     l4476:
 11191  0025E8  8E1E               	bsf	(___flmul@b+2)^0,7,c
 11192  0025EA  EFFF  F012         	goto	l4480
 11193  0025EE                     l4478:
 11194  0025EE  0E00               	movlw	0
 11195  0025F0  6E1C               	movwf	___flmul@b^0,c
 11196  0025F2  0E00               	movlw	0
 11197  0025F4  6E1D               	movwf	(___flmul@b+1)^0,c
 11198  0025F6  0E00               	movlw	0
 11199  0025F8  6E1E               	movwf	(___flmul@b+2)^0,c
 11200  0025FA  0E00               	movlw	0
 11201  0025FC  6E1F               	movwf	(___flmul@b+3)^0,c
 11202  0025FE                     l4480:
 11203  0025FE  5023               	movf	(___flmul@a+3)^0,w,c
 11204  002600  0B80               	andlw	128
 11205  002602  1A28               	xorwf	___flmul@sign^0,f,c
 11206  002604  5023               	movf	(___flmul@a+3)^0,w,c
 11207  002606  2423               	addwf	(___flmul@a+3)^0,w,c
 11208  002608  6E2D               	movwf	___flmul@aexp^0,c
 11209  00260A  AE22               	btfss	(___flmul@a+2)^0,7,c
 11210  00260C  EF0A  F013         	goto	u4851
 11211  002610  EF0C  F013         	goto	u4850
 11212  002614                     u4851:
 11213  002614  EF0D  F013         	goto	l4488
 11214  002618                     u4850:
 11215  002618  802D               	bsf	___flmul@aexp^0,0,c
 11216  00261A                     l4488:
 11217  00261A  502D               	movf	___flmul@aexp^0,w,c
 11218  00261C  B4D8               	btfsc	status,2,c
 11219  00261E  EF13  F013         	goto	u4861
 11220  002622  EF15  F013         	goto	u4860
 11221  002626                     u4861:
 11222  002626  EF28  F013         	goto	l4496
 11223  00262A                     u4860:
 11224  00262A  282D               	incf	___flmul@aexp^0,w,c
 11225  00262C  A4D8               	btfss	status,2,c
 11226  00262E  EF1B  F013         	goto	u4871
 11227  002632  EF1D  F013         	goto	u4870
 11228  002636                     u4871:
 11229  002636  EF25  F013         	goto	l4494
 11230  00263A                     u4870:
 11231  00263A  0E00               	movlw	0
 11232  00263C  6E20               	movwf	___flmul@a^0,c
 11233  00263E  0E00               	movlw	0
 11234  002640  6E21               	movwf	(___flmul@a+1)^0,c
 11235  002642  0E00               	movlw	0
 11236  002644  6E22               	movwf	(___flmul@a+2)^0,c
 11237  002646  0E00               	movlw	0
 11238  002648  6E23               	movwf	(___flmul@a+3)^0,c
 11239  00264A                     l4494:
 11240  00264A  8E22               	bsf	(___flmul@a+2)^0,7,c
 11241  00264C  EF30  F013         	goto	l1157
 11242  002650                     l4496:
 11243  002650  0E00               	movlw	0
 11244  002652  6E20               	movwf	___flmul@a^0,c
 11245  002654  0E00               	movlw	0
 11246  002656  6E21               	movwf	(___flmul@a+1)^0,c
 11247  002658  0E00               	movlw	0
 11248  00265A  6E22               	movwf	(___flmul@a+2)^0,c
 11249  00265C  0E00               	movlw	0
 11250  00265E  6E23               	movwf	(___flmul@a+3)^0,c
 11251  002660                     l1157:
 11252  002660  502D               	movf	___flmul@aexp^0,w,c
 11253  002662  B4D8               	btfsc	status,2,c
 11254  002664  EF36  F013         	goto	u4881
 11255  002668  EF38  F013         	goto	u4880
 11256  00266C                     u4881:
 11257  00266C  EF40  F013         	goto	l4500
 11258  002670                     u4880:
 11259  002670  502E               	movf	___flmul@bexp^0,w,c
 11260  002672  A4D8               	btfss	status,2,c
 11261  002674  EF3E  F013         	goto	u4891
 11262  002678  EF40  F013         	goto	u4890
 11263  00267C                     u4891:
 11264  00267C  EF4A  F013         	goto	l4504
 11265  002680                     u4890:
 11266  002680                     l4500:
 11267  002680  0E00               	movlw	0
 11268  002682  6E1C               	movwf	?___flmul^0,c
 11269  002684  0E00               	movlw	0
 11270  002686  6E1D               	movwf	(?___flmul+1)^0,c
 11271  002688  0E00               	movlw	0
 11272  00268A  6E1E               	movwf	(?___flmul+2)^0,c
 11273  00268C  0E00               	movlw	0
 11274  00268E  6E1F               	movwf	(?___flmul+3)^0,c
 11275  002690  EFE2  F014         	goto	l1161
 11276  002694                     l4504:
 11277  002694  5022               	movf	(___flmul@a+2)^0,w,c
 11278  002696  021C               	mulwf	___flmul@b^0,c
 11279  002698  CFF3 F033          	movff	prodl,___flmul@temp
 11280  00269C  CFF4 F034          	movff	prodh,___flmul@temp+1
 11281  0026A0  5033               	movf	___flmul@temp^0,w,c
 11282  0026A2  6E29               	movwf	___flmul@grs^0,c
 11283  0026A4  6A2A               	clrf	(___flmul@grs+1)^0,c
 11284  0026A6  6A2B               	clrf	(___flmul@grs+2)^0,c
 11285  0026A8  6A2C               	clrf	(___flmul@grs+3)^0,c
 11286  0026AA  5034               	movf	(___flmul@temp+1)^0,w,c
 11287  0026AC  6E2F               	movwf	___flmul@prod^0,c
 11288  0026AE  6A30               	clrf	(___flmul@prod+1)^0,c
 11289  0026B0  6A31               	clrf	(___flmul@prod+2)^0,c
 11290  0026B2  6A32               	clrf	(___flmul@prod+3)^0,c
 11291  0026B4  5021               	movf	(___flmul@a+1)^0,w,c
 11292  0026B6  021D               	mulwf	(___flmul@b+1)^0,c
 11293  0026B8  CFF3 F033          	movff	prodl,___flmul@temp
 11294  0026BC  CFF4 F034          	movff	prodh,___flmul@temp+1
 11295  0026C0  5033               	movf	___flmul@temp^0,w,c
 11296  0026C2  2629               	addwf	___flmul@grs^0,f,c
 11297  0026C4  0E00               	movlw	0
 11298  0026C6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11299  0026C8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11300  0026CA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11301  0026CC  5034               	movf	(___flmul@temp+1)^0,w,c
 11302  0026CE  262F               	addwf	___flmul@prod^0,f,c
 11303  0026D0  0E00               	movlw	0
 11304  0026D2  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11305  0026D4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11306  0026D6  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11307  0026D8  5020               	movf	___flmul@a^0,w,c
 11308  0026DA  021E               	mulwf	(___flmul@b+2)^0,c
 11309  0026DC  CFF3 F033          	movff	prodl,___flmul@temp
 11310  0026E0  CFF4 F034          	movff	prodh,___flmul@temp+1
 11311  0026E4  5033               	movf	___flmul@temp^0,w,c
 11312  0026E6  2629               	addwf	___flmul@grs^0,f,c
 11313  0026E8  0E00               	movlw	0
 11314  0026EA  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11315  0026EC  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11316  0026EE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11317  0026F0  5034               	movf	(___flmul@temp+1)^0,w,c
 11318  0026F2  262F               	addwf	___flmul@prod^0,f,c
 11319  0026F4  0E00               	movlw	0
 11320  0026F6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11321  0026F8  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11322  0026FA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11323  0026FC  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11324  002700  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11325  002704  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11326  002708  6A29               	clrf	___flmul@grs^0,c
 11327  00270A  5020               	movf	___flmul@a^0,w,c
 11328  00270C  021D               	mulwf	(___flmul@b+1)^0,c
 11329  00270E  CFF3 F033          	movff	prodl,___flmul@temp
 11330  002712  CFF4 F034          	movff	prodh,___flmul@temp+1
 11331  002716  5033               	movf	___flmul@temp^0,w,c
 11332  002718  2629               	addwf	___flmul@grs^0,f,c
 11333  00271A  5034               	movf	(___flmul@temp+1)^0,w,c
 11334  00271C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11335  00271E  0E00               	movlw	0
 11336  002720  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11337  002722  0E00               	movlw	0
 11338  002724  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11339  002726  5021               	movf	(___flmul@a+1)^0,w,c
 11340  002728  021C               	mulwf	___flmul@b^0,c
 11341  00272A  CFF3 F033          	movff	prodl,___flmul@temp
 11342  00272E  CFF4 F034          	movff	prodh,___flmul@temp+1
 11343  002732  5033               	movf	___flmul@temp^0,w,c
 11344  002734  2629               	addwf	___flmul@grs^0,f,c
 11345  002736  5034               	movf	(___flmul@temp+1)^0,w,c
 11346  002738  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11347  00273A  0E00               	movlw	0
 11348  00273C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11349  00273E  0E00               	movlw	0
 11350  002740  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11351  002742  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11352  002746  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11353  00274A  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11354  00274E  6A29               	clrf	___flmul@grs^0,c
 11355  002750  5020               	movf	___flmul@a^0,w,c
 11356  002752  021C               	mulwf	___flmul@b^0,c
 11357  002754  CFF3 F033          	movff	prodl,___flmul@temp
 11358  002758  CFF4 F034          	movff	prodh,___flmul@temp+1
 11359  00275C  5033               	movf	___flmul@temp^0,w,c
 11360  00275E  2629               	addwf	___flmul@grs^0,f,c
 11361  002760  5034               	movf	(___flmul@temp+1)^0,w,c
 11362  002762  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11363  002764  0E00               	movlw	0
 11364  002766  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11365  002768  0E00               	movlw	0
 11366  00276A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11367  00276C  5022               	movf	(___flmul@a+2)^0,w,c
 11368  00276E  021D               	mulwf	(___flmul@b+1)^0,c
 11369  002770  CFF3 F033          	movff	prodl,___flmul@temp
 11370  002774  CFF4 F034          	movff	prodh,___flmul@temp+1
 11371  002778  5033               	movf	___flmul@temp^0,w,c
 11372  00277A  262F               	addwf	___flmul@prod^0,f,c
 11373  00277C  5034               	movf	(___flmul@temp+1)^0,w,c
 11374  00277E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11375  002780  0E00               	movlw	0
 11376  002782  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11377  002784  0E00               	movlw	0
 11378  002786  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11379  002788  5021               	movf	(___flmul@a+1)^0,w,c
 11380  00278A  021E               	mulwf	(___flmul@b+2)^0,c
 11381  00278C  CFF3 F033          	movff	prodl,___flmul@temp
 11382  002790  CFF4 F034          	movff	prodh,___flmul@temp+1
 11383  002794  5033               	movf	___flmul@temp^0,w,c
 11384  002796  262F               	addwf	___flmul@prod^0,f,c
 11385  002798  5034               	movf	(___flmul@temp+1)^0,w,c
 11386  00279A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11387  00279C  0E00               	movlw	0
 11388  00279E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11389  0027A0  0E00               	movlw	0
 11390  0027A2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11391  0027A4  5022               	movf	(___flmul@a+2)^0,w,c
 11392  0027A6  021E               	mulwf	(___flmul@b+2)^0,c
 11393  0027A8  CFF3 F033          	movff	prodl,___flmul@temp
 11394  0027AC  CFF4 F034          	movff	prodh,___flmul@temp+1
 11395  0027B0  5033               	movf	___flmul@temp^0,w,c
 11396  0027B2  6E24               	movwf	??___flmul^0,c
 11397  0027B4  5034               	movf	(___flmul@temp+1)^0,w,c
 11398  0027B6  6E25               	movwf	(??___flmul+1)^0,c
 11399  0027B8  6A26               	clrf	(??___flmul+2)^0,c
 11400  0027BA  6A27               	clrf	(??___flmul+3)^0,c
 11401  0027BC  C026  F027         	movff	??___flmul+2,??___flmul+3
 11402  0027C0  C025  F026         	movff	??___flmul+1,??___flmul+2
 11403  0027C4  C024  F025         	movff	??___flmul,??___flmul+1
 11404  0027C8  6A24               	clrf	??___flmul^0,c
 11405  0027CA  5024               	movf	??___flmul^0,w,c
 11406  0027CC  262F               	addwf	___flmul@prod^0,f,c
 11407  0027CE  5025               	movf	(??___flmul+1)^0,w,c
 11408  0027D0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11409  0027D2  5026               	movf	(??___flmul+2)^0,w,c
 11410  0027D4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11411  0027D6  5027               	movf	(??___flmul+3)^0,w,c
 11412  0027D8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11413  0027DA  C029  F024         	movff	___flmul@grs,??___flmul
 11414  0027DE  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 11415  0027E2  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 11416  0027E6  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 11417  0027EA  0E19               	movlw	25
 11418  0027EC  EFFD  F013         	goto	u4900
 11419  0027F0                     u4905:
 11420  0027F0  90D8               	bcf	status,0,c
 11421  0027F2  3227               	rrcf	(??___flmul+3)^0,f,c
 11422  0027F4  3226               	rrcf	(??___flmul+2)^0,f,c
 11423  0027F6  3225               	rrcf	(??___flmul+1)^0,f,c
 11424  0027F8  3224               	rrcf	??___flmul^0,f,c
 11425  0027FA                     u4900:
 11426  0027FA  2EE8               	decfsz	wreg,f,c
 11427  0027FC  EFF8  F013         	goto	u4905
 11428  002800  5024               	movf	??___flmul^0,w,c
 11429  002802  262F               	addwf	___flmul@prod^0,f,c
 11430  002804  5025               	movf	(??___flmul+1)^0,w,c
 11431  002806  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11432  002808  5026               	movf	(??___flmul+2)^0,w,c
 11433  00280A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11434  00280C  5027               	movf	(??___flmul+3)^0,w,c
 11435  00280E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11436  002810  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11437  002814  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11438  002818  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11439  00281C  6A29               	clrf	___flmul@grs^0,c
 11440  00281E  502D               	movf	___flmul@aexp^0,w,c
 11441  002820  C02E  F024         	movff	___flmul@bexp,??___flmul
 11442  002824  6A25               	clrf	(??___flmul+1)^0,c
 11443  002826  2624               	addwf	??___flmul^0,f,c
 11444  002828  0E00               	movlw	0
 11445  00282A  2225               	addwfc	(??___flmul+1)^0,f,c
 11446  00282C  0E82               	movlw	130
 11447  00282E  2424               	addwf	??___flmul^0,w,c
 11448  002830  6E33               	movwf	___flmul@temp^0,c
 11449  002832  0EFF               	movlw	255
 11450  002834  2025               	addwfc	(??___flmul+1)^0,w,c
 11451  002836  6E34               	movwf	(___flmul@temp+1)^0,c
 11452  002838  EF33  F014         	goto	l4552
 11453  00283C                     l4546:
 11454  00283C  90D8               	bcf	status,0,c
 11455  00283E  362F               	rlcf	___flmul@prod^0,f,c
 11456  002840  3630               	rlcf	(___flmul@prod+1)^0,f,c
 11457  002842  3631               	rlcf	(___flmul@prod+2)^0,f,c
 11458  002844  3632               	rlcf	(___flmul@prod+3)^0,f,c
 11459  002846  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11460  002848  EF28  F014         	goto	u4911
 11461  00284C  EF2A  F014         	goto	u4910
 11462  002850                     u4911:
 11463  002850  EF2B  F014         	goto	l1164
 11464  002854                     u4910:
 11465  002854  802F               	bsf	___flmul@prod^0,0,c
 11466  002856                     l1164:
 11467  002856  90D8               	bcf	status,0,c
 11468  002858  3629               	rlcf	___flmul@grs^0,f,c
 11469  00285A  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11470  00285C  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11471  00285E  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11472  002860  0633               	decf	___flmul@temp^0,f,c
 11473  002862  A0D8               	btfss	status,0,c
 11474  002864  0634               	decf	(___flmul@temp+1)^0,f,c
 11475  002866                     l4552:
 11476  002866  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11477  002868  EF38  F014         	goto	u4921
 11478  00286C  EF3A  F014         	goto	u4920
 11479  002870                     u4921:
 11480  002870  EF1E  F014         	goto	l4546
 11481  002874                     u4920:
 11482  002874  0E00               	movlw	0
 11483  002876  6E2D               	movwf	___flmul@aexp^0,c
 11484  002878  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11485  00287A  EF41  F014         	goto	u4931
 11486  00287E  EF43  F014         	goto	u4930
 11487  002882                     u4931:
 11488  002882  EF67  F014         	goto	l1166
 11489  002886                     u4930:
 11490  002886  0EFF               	movlw	255
 11491  002888  1429               	andwf	___flmul@grs^0,w,c
 11492  00288A  6E24               	movwf	??___flmul^0,c
 11493  00288C  0EFF               	movlw	255
 11494  00288E  142A               	andwf	(___flmul@grs+1)^0,w,c
 11495  002890  6E25               	movwf	(??___flmul+1)^0,c
 11496  002892  0EFF               	movlw	255
 11497  002894  142B               	andwf	(___flmul@grs+2)^0,w,c
 11498  002896  6E26               	movwf	(??___flmul+2)^0,c
 11499  002898  0E7F               	movlw	127
 11500  00289A  142C               	andwf	(___flmul@grs+3)^0,w,c
 11501  00289C  6E27               	movwf	(??___flmul+3)^0,c
 11502  00289E  5024               	movf	??___flmul^0,w,c
 11503  0028A0  1025               	iorwf	(??___flmul+1)^0,w,c
 11504  0028A2  1026               	iorwf	(??___flmul+2)^0,w,c
 11505  0028A4  1027               	iorwf	(??___flmul+3)^0,w,c
 11506  0028A6  B4D8               	btfsc	status,2,c
 11507  0028A8  EF58  F014         	goto	u4941
 11508  0028AC  EF5A  F014         	goto	u4940
 11509  0028B0                     u4941:
 11510  0028B0  EF5E  F014         	goto	l1167
 11511  0028B4                     u4940:
 11512  0028B4                     l4560:
 11513  0028B4  0E01               	movlw	1
 11514  0028B6  6E2D               	movwf	___flmul@aexp^0,c
 11515  0028B8  EF67  F014         	goto	l1166
 11516  0028BC                     l1167:
 11517  0028BC  A02F               	btfss	___flmul@prod^0,0,c
 11518  0028BE  EF63  F014         	goto	u4951
 11519  0028C2  EF65  F014         	goto	u4950
 11520  0028C6                     u4951:
 11521  0028C6  EF67  F014         	goto	l1166
 11522  0028CA                     u4950:
 11523  0028CA  EF5A  F014         	goto	l4560
 11524  0028CE                     l1166:
 11525  0028CE  502D               	movf	___flmul@aexp^0,w,c
 11526  0028D0  B4D8               	btfsc	status,2,c
 11527  0028D2  EF6D  F014         	goto	u4961
 11528  0028D6  EF6F  F014         	goto	u4960
 11529  0028DA                     u4961:
 11530  0028DA  EF93  F014         	goto	l4572
 11531  0028DE                     u4960:
 11532  0028DE  0E01               	movlw	1
 11533  0028E0  262F               	addwf	___flmul@prod^0,f,c
 11534  0028E2  0E00               	movlw	0
 11535  0028E4  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11536  0028E6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11537  0028E8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11538  0028EA  A032               	btfss	(___flmul@prod+3)^0,0,c
 11539  0028EC  EF7A  F014         	goto	u4971
 11540  0028F0  EF7C  F014         	goto	u4970
 11541  0028F4                     u4971:
 11542  0028F4  EF93  F014         	goto	l4572
 11543  0028F8                     u4970:
 11544  0028F8  C02F  F024         	movff	___flmul@prod,??___flmul
 11545  0028FC  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11546  002900  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11547  002904  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11548  002908  3427               	rlcf	(??___flmul+3)^0,w,c
 11549  00290A  3227               	rrcf	(??___flmul+3)^0,f,c
 11550  00290C  3226               	rrcf	(??___flmul+2)^0,f,c
 11551  00290E  3225               	rrcf	(??___flmul+1)^0,f,c
 11552  002910  3224               	rrcf	??___flmul^0,f,c
 11553  002912  C024  F02F         	movff	??___flmul,___flmul@prod
 11554  002916  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11555  00291A  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11556  00291E  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11557  002922  4A33               	infsnz	___flmul@temp^0,f,c
 11558  002924  2A34               	incf	(___flmul@temp+1)^0,f,c
 11559  002926                     l4572:
 11560  002926  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11561  002928  EF9E  F014         	goto	u4981
 11562  00292C  5034               	movf	(___flmul@temp+1)^0,w,c
 11563  00292E  E108               	bnz	u4980
 11564  002930  2833               	incf	___flmul@temp^0,w,c
 11565  002932  A0D8               	btfss	status,0,c
 11566  002934  EF9E  F014         	goto	u4981
 11567  002938  EFA0  F014         	goto	u4980
 11568  00293C                     u4981:
 11569  00293C  EFAA  F014         	goto	l4576
 11570  002940                     u4980:
 11571  002940  0E00               	movlw	0
 11572  002942  6E2F               	movwf	___flmul@prod^0,c
 11573  002944  0E00               	movlw	0
 11574  002946  6E30               	movwf	(___flmul@prod+1)^0,c
 11575  002948  0E80               	movlw	128
 11576  00294A  6E31               	movwf	(___flmul@prod+2)^0,c
 11577  00294C  0E7F               	movlw	127
 11578  00294E  6E32               	movwf	(___flmul@prod+3)^0,c
 11579  002950  EFD8  F014         	goto	l4588
 11580  002954                     l4576:
 11581  002954  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11582  002956  EFB7  F014         	goto	u4990
 11583  00295A  5034               	movf	(___flmul@temp+1)^0,w,c
 11584  00295C  E106               	bnz	u4991
 11585  00295E  0433               	decf	___flmul@temp^0,w,c
 11586  002960  B0D8               	btfsc	status,0,c
 11587  002962  EFB5  F014         	goto	u4991
 11588  002966  EFB7  F014         	goto	u4990
 11589  00296A                     u4991:
 11590  00296A  EFC3  F014         	goto	l1174
 11591  00296E                     u4990:
 11592  00296E  0E00               	movlw	0
 11593  002970  6E2F               	movwf	___flmul@prod^0,c
 11594  002972  0E00               	movlw	0
 11595  002974  6E30               	movwf	(___flmul@prod+1)^0,c
 11596  002976  0E00               	movlw	0
 11597  002978  6E31               	movwf	(___flmul@prod+2)^0,c
 11598  00297A  0E00               	movlw	0
 11599  00297C  6E32               	movwf	(___flmul@prod+3)^0,c
 11600  00297E  0E00               	movlw	0
 11601  002980  6E28               	movwf	___flmul@sign^0,c
 11602  002982  EFD8  F014         	goto	l4588
 11603  002986                     l1174:
 11604  002986  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11605  00298A  0EFF               	movlw	255
 11606  00298C  162F               	andwf	___flmul@prod^0,f,c
 11607  00298E  0EFF               	movlw	255
 11608  002990  1630               	andwf	(___flmul@prod+1)^0,f,c
 11609  002992  0E7F               	movlw	127
 11610  002994  1631               	andwf	(___flmul@prod+2)^0,f,c
 11611  002996  0E00               	movlw	0
 11612  002998  1632               	andwf	(___flmul@prod+3)^0,f,c
 11613  00299A  A02E               	btfss	___flmul@bexp^0,0,c
 11614  00299C  EFD2  F014         	goto	u5001
 11615  0029A0  EFD4  F014         	goto	u5000
 11616  0029A4                     u5001:
 11617  0029A4  EFD5  F014         	goto	l4586
 11618  0029A8                     u5000:
 11619  0029A8  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11620  0029AA                     l4586:
 11621  0029AA  90D8               	bcf	status,0,c
 11622  0029AC  302E               	rrcf	___flmul@bexp^0,w,c
 11623  0029AE  6E32               	movwf	(___flmul@prod+3)^0,c
 11624  0029B0                     l4588:
 11625  0029B0  5028               	movf	___flmul@sign^0,w,c
 11626  0029B2  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11627  0029B4  C02F  F01C         	movff	___flmul@prod,?___flmul
 11628  0029B8  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11629  0029BC  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11630  0029C0  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11631  0029C4                     l1161:
 11632  0029C4  0012               	return		;funcret
 11633  0029C6                     __end_of___flmul:
 11634                           	callstack 0
 11635                           
 11636 ;; *************** function ___flge *****************
 11637 ;; Defined at:
 11638 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11639 ;; Parameters:    Size  Location     Type
 11640 ;;  ff1             4   52[COMRAM] unsigned char 
 11641 ;;  ff2             4   56[COMRAM] unsigned char 
 11642 ;; Auto vars:     Size  Location     Type
 11643 ;;		None
 11644 ;; Return value:  Size  Location     Type
 11645 ;;		None               void
 11646 ;; Registers used:
 11647 ;;		wreg, status,2, status,0
 11648 ;; Tracked objects:
 11649 ;;		On entry : 0/0
 11650 ;;		On exit  : 0/0
 11651 ;;		Unchanged: 0/0
 11652 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11653 ;;      Params:         8       0       0       0       0       0       0
 11654 ;;      Locals:         0       0       0       0       0       0       0
 11655 ;;      Temps:          4       0       0       0       0       0       0
 11656 ;;      Totals:        12       0       0       0       0       0       0
 11657 ;;Total ram usage:       12 bytes
 11658 ;; Hardware stack levels used:    1
 11659 ;; Hardware stack levels required when called:    1
 11660 ;; This function calls:
 11661 ;;		Nothing
 11662 ;; This function is called by:
 11663 ;;		_secretMenu
 11664 ;;		_efgtoa
 11665 ;; This function uses a non-reentrant model
 11666 ;;
 11667                           
 11668                           	psect	text42
 11669  0049F6                     __ptext42:
 11670                           	callstack 0
 11671  0049F6                     ___flge:
 11672                           	callstack 22
 11673  0049F6  0E00               	movlw	0
 11674  0049F8  1435               	andwf	___flge@ff1^0,w,c
 11675  0049FA  6E3D               	movwf	??___flge^0,c
 11676  0049FC  0E00               	movlw	0
 11677  0049FE  1436               	andwf	(___flge@ff1+1)^0,w,c
 11678  004A00  6E3E               	movwf	(??___flge+1)^0,c
 11679  004A02  0E80               	movlw	128
 11680  004A04  1437               	andwf	(___flge@ff1+2)^0,w,c
 11681  004A06  6E3F               	movwf	(??___flge+2)^0,c
 11682  004A08  0E7F               	movlw	127
 11683  004A0A  1438               	andwf	(___flge@ff1+3)^0,w,c
 11684  004A0C  6E40               	movwf	(??___flge+3)^0,c
 11685  004A0E  503D               	movf	??___flge^0,w,c
 11686  004A10  103E               	iorwf	(??___flge+1)^0,w,c
 11687  004A12  103F               	iorwf	(??___flge+2)^0,w,c
 11688  004A14  1040               	iorwf	(??___flge+3)^0,w,c
 11689  004A16  A4D8               	btfss	status,2,c
 11690  004A18  EF10  F025         	goto	u5161
 11691  004A1C  EF12  F025         	goto	u5160
 11692  004A20                     u5161:
 11693  004A20  EF1A  F025         	goto	l4700
 11694  004A24                     u5160:
 11695  004A24  0E00               	movlw	0
 11696  004A26  6E35               	movwf	___flge@ff1^0,c
 11697  004A28  0E00               	movlw	0
 11698  004A2A  6E36               	movwf	(___flge@ff1+1)^0,c
 11699  004A2C  0E00               	movlw	0
 11700  004A2E  6E37               	movwf	(___flge@ff1+2)^0,c
 11701  004A30  0E00               	movlw	0
 11702  004A32  6E38               	movwf	(___flge@ff1+3)^0,c
 11703  004A34                     l4700:
 11704  004A34  0E00               	movlw	0
 11705  004A36  1439               	andwf	___flge@ff2^0,w,c
 11706  004A38  6E3D               	movwf	??___flge^0,c
 11707  004A3A  0E00               	movlw	0
 11708  004A3C  143A               	andwf	(___flge@ff2+1)^0,w,c
 11709  004A3E  6E3E               	movwf	(??___flge+1)^0,c
 11710  004A40  0E80               	movlw	128
 11711  004A42  143B               	andwf	(___flge@ff2+2)^0,w,c
 11712  004A44  6E3F               	movwf	(??___flge+2)^0,c
 11713  004A46  0E7F               	movlw	127
 11714  004A48  143C               	andwf	(___flge@ff2+3)^0,w,c
 11715  004A4A  6E40               	movwf	(??___flge+3)^0,c
 11716  004A4C  503D               	movf	??___flge^0,w,c
 11717  004A4E  103E               	iorwf	(??___flge+1)^0,w,c
 11718  004A50  103F               	iorwf	(??___flge+2)^0,w,c
 11719  004A52  1040               	iorwf	(??___flge+3)^0,w,c
 11720  004A54  A4D8               	btfss	status,2,c
 11721  004A56  EF2F  F025         	goto	u5171
 11722  004A5A  EF31  F025         	goto	u5170
 11723  004A5E                     u5171:
 11724  004A5E  EF39  F025         	goto	l4704
 11725  004A62                     u5170:
 11726  004A62  0E00               	movlw	0
 11727  004A64  6E39               	movwf	___flge@ff2^0,c
 11728  004A66  0E00               	movlw	0
 11729  004A68  6E3A               	movwf	(___flge@ff2+1)^0,c
 11730  004A6A  0E00               	movlw	0
 11731  004A6C  6E3B               	movwf	(___flge@ff2+2)^0,c
 11732  004A6E  0E00               	movlw	0
 11733  004A70  6E3C               	movwf	(___flge@ff2+3)^0,c
 11734  004A72                     l4704:
 11735  004A72  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11736  004A74  EF3E  F025         	goto	u5181
 11737  004A78  EF40  F025         	goto	u5180
 11738  004A7C                     u5181:
 11739  004A7C  EF49  F025         	goto	l4708
 11740  004A80                     u5180:
 11741  004A80  6C35               	negf	___flge@ff1^0,c
 11742  004A82  1E36               	comf	(___flge@ff1+1)^0,f,c
 11743  004A84  B0D8               	btfsc	status,0,c
 11744  004A86  2A36               	incf	(___flge@ff1+1)^0,f,c
 11745  004A88  1E37               	comf	(___flge@ff1+2)^0,f,c
 11746  004A8A  B0D8               	btfsc	status,0,c
 11747  004A8C  2A37               	incf	(___flge@ff1+2)^0,f,c
 11748  004A8E  0E80               	movlw	128
 11749  004A90  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11750  004A92                     l4708:
 11751  004A92  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11752  004A94  EF4E  F025         	goto	u5191
 11753  004A98  EF50  F025         	goto	u5190
 11754  004A9C                     u5191:
 11755  004A9C  EF59  F025         	goto	l808
 11756  004AA0                     u5190:
 11757  004AA0  6C39               	negf	___flge@ff2^0,c
 11758  004AA2  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11759  004AA4  B0D8               	btfsc	status,0,c
 11760  004AA6  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11761  004AA8  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11762  004AAA  B0D8               	btfsc	status,0,c
 11763  004AAC  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11764  004AAE  0E80               	movlw	128
 11765  004AB0  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11766  004AB2                     l808:
 11767  004AB2  0E00               	movlw	0
 11768  004AB4  1A35               	xorwf	___flge@ff1^0,f,c
 11769  004AB6  0E00               	movlw	0
 11770  004AB8  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11771  004ABA  0E00               	movlw	0
 11772  004ABC  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11773  004ABE  0E80               	movlw	128
 11774  004AC0  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11775  004AC2  0E00               	movlw	0
 11776  004AC4  1A39               	xorwf	___flge@ff2^0,f,c
 11777  004AC6  0E00               	movlw	0
 11778  004AC8  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11779  004ACA  0E00               	movlw	0
 11780  004ACC  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11781  004ACE  0E80               	movlw	128
 11782  004AD0  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11783  004AD2  5039               	movf	___flge@ff2^0,w,c
 11784  004AD4  5C35               	subwf	___flge@ff1^0,w,c
 11785  004AD6  503A               	movf	(___flge@ff2+1)^0,w,c
 11786  004AD8  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11787  004ADA  503B               	movf	(___flge@ff2+2)^0,w,c
 11788  004ADC  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11789  004ADE  503C               	movf	(___flge@ff2+3)^0,w,c
 11790  004AE0  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11791  004AE2  B0D8               	btfsc	status,0,c
 11792  004AE4  EF76  F025         	goto	u5201
 11793  004AE8  EF78  F025         	goto	u5200
 11794  004AEC                     u5201:
 11795  004AEC  EF7B  F025         	goto	l4714
 11796  004AF0                     u5200:
 11797  004AF0  90D8               	bcf	status,0,c
 11798  004AF2  EF7C  F025         	goto	l813
 11799  004AF6                     l4714:
 11800  004AF6  80D8               	bsf	status,0,c
 11801  004AF8                     l813:
 11802  004AF8  0012               	return		;funcret
 11803  004AFA                     __end_of___flge:
 11804                           	callstack 0
 11805                           
 11806 ;; *************** function ___fleq *****************
 11807 ;; Defined at:
 11808 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11809 ;; Parameters:    Size  Location     Type
 11810 ;;  ff1             4    0[COMRAM] unsigned char 
 11811 ;;  ff2             4    4[COMRAM] unsigned char 
 11812 ;; Auto vars:     Size  Location     Type
 11813 ;;		None
 11814 ;; Return value:  Size  Location     Type
 11815 ;;		None               void
 11816 ;; Registers used:
 11817 ;;		wreg, status,2, status,0
 11818 ;; Tracked objects:
 11819 ;;		On entry : 0/0
 11820 ;;		On exit  : 0/0
 11821 ;;		Unchanged: 0/0
 11822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11823 ;;      Params:         8       0       0       0       0       0       0
 11824 ;;      Locals:         0       0       0       0       0       0       0
 11825 ;;      Temps:          4       0       0       0       0       0       0
 11826 ;;      Totals:        12       0       0       0       0       0       0
 11827 ;;Total ram usage:       12 bytes
 11828 ;; Hardware stack levels used:    1
 11829 ;; Hardware stack levels required when called:    1
 11830 ;; This function calls:
 11831 ;;		Nothing
 11832 ;; This function is called by:
 11833 ;;		_efgtoa
 11834 ;; This function uses a non-reentrant model
 11835 ;;
 11836                           
 11837                           	psect	text43
 11838  00521C                     __ptext43:
 11839                           	callstack 0
 11840  00521C                     ___fleq:
 11841                           	callstack 22
 11842  00521C  0E00               	movlw	0
 11843  00521E  1401               	andwf	___fleq@ff1^0,w,c
 11844  005220  6E09               	movwf	??___fleq^0,c
 11845  005222  0E00               	movlw	0
 11846  005224  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11847  005226  6E0A               	movwf	(??___fleq+1)^0,c
 11848  005228  0E80               	movlw	128
 11849  00522A  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11850  00522C  6E0B               	movwf	(??___fleq+2)^0,c
 11851  00522E  0E7F               	movlw	127
 11852  005230  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11853  005232  6E0C               	movwf	(??___fleq+3)^0,c
 11854  005234  5009               	movf	??___fleq^0,w,c
 11855  005236  100A               	iorwf	(??___fleq+1)^0,w,c
 11856  005238  100B               	iorwf	(??___fleq+2)^0,w,c
 11857  00523A  100C               	iorwf	(??___fleq+3)^0,w,c
 11858  00523C  A4D8               	btfss	status,2,c
 11859  00523E  EF23  F029         	goto	u5131
 11860  005242  EF25  F029         	goto	u5130
 11861  005246                     u5131:
 11862  005246  EF2D  F029         	goto	l4684
 11863  00524A                     u5130:
 11864  00524A  0E00               	movlw	0
 11865  00524C  6E01               	movwf	___fleq@ff1^0,c
 11866  00524E  0E00               	movlw	0
 11867  005250  6E02               	movwf	(___fleq@ff1+1)^0,c
 11868  005252  0E00               	movlw	0
 11869  005254  6E03               	movwf	(___fleq@ff1+2)^0,c
 11870  005256  0E00               	movlw	0
 11871  005258  6E04               	movwf	(___fleq@ff1+3)^0,c
 11872  00525A                     l4684:
 11873  00525A  0E00               	movlw	0
 11874  00525C  1405               	andwf	___fleq@ff2^0,w,c
 11875  00525E  6E09               	movwf	??___fleq^0,c
 11876  005260  0E00               	movlw	0
 11877  005262  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11878  005264  6E0A               	movwf	(??___fleq+1)^0,c
 11879  005266  0E80               	movlw	128
 11880  005268  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11881  00526A  6E0B               	movwf	(??___fleq+2)^0,c
 11882  00526C  0E7F               	movlw	127
 11883  00526E  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11884  005270  6E0C               	movwf	(??___fleq+3)^0,c
 11885  005272  5009               	movf	??___fleq^0,w,c
 11886  005274  100A               	iorwf	(??___fleq+1)^0,w,c
 11887  005276  100B               	iorwf	(??___fleq+2)^0,w,c
 11888  005278  100C               	iorwf	(??___fleq+3)^0,w,c
 11889  00527A  A4D8               	btfss	status,2,c
 11890  00527C  EF42  F029         	goto	u5141
 11891  005280  EF44  F029         	goto	u5140
 11892  005284                     u5141:
 11893  005284  EF4C  F029         	goto	l4688
 11894  005288                     u5140:
 11895  005288  0E00               	movlw	0
 11896  00528A  6E05               	movwf	___fleq@ff2^0,c
 11897  00528C  0E00               	movlw	0
 11898  00528E  6E06               	movwf	(___fleq@ff2+1)^0,c
 11899  005290  0E00               	movlw	0
 11900  005292  6E07               	movwf	(___fleq@ff2+2)^0,c
 11901  005294  0E00               	movlw	0
 11902  005296  6E08               	movwf	(___fleq@ff2+3)^0,c
 11903  005298                     l4688:
 11904  005298  5005               	movf	___fleq@ff2^0,w,c
 11905  00529A  1801               	xorwf	___fleq@ff1^0,w,c
 11906  00529C  E10F               	bnz	u5150
 11907  00529E  5006               	movf	(___fleq@ff2+1)^0,w,c
 11908  0052A0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11909  0052A2  E10C               	bnz	u5150
 11910  0052A4  5007               	movf	(___fleq@ff2+2)^0,w,c
 11911  0052A6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11912  0052A8  E109               	bnz	u5150
 11913  0052AA  5008               	movf	(___fleq@ff2+3)^0,w,c
 11914  0052AC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11915  0052AE  B4D8               	btfsc	status,2,c
 11916  0052B0  EF5C  F029         	goto	u5151
 11917  0052B4  EF5E  F029         	goto	u5150
 11918  0052B8                     u5151:
 11919  0052B8  EF61  F029         	goto	l4692
 11920  0052BC                     u5150:
 11921  0052BC  90D8               	bcf	status,0,c
 11922  0052BE  EF62  F029         	goto	l802
 11923  0052C2                     l4692:
 11924  0052C2  80D8               	bsf	status,0,c
 11925  0052C4                     l802:
 11926  0052C4  0012               	return		;funcret
 11927  0052C6                     __end_of___fleq:
 11928                           	callstack 0
 11929                           
 11930 ;; *************** function ___fldiv *****************
 11931 ;; Defined at:
 11932 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11933 ;; Parameters:    Size  Location     Type
 11934 ;;  b               4   52[COMRAM] unsigned char 
 11935 ;;  a               4   56[COMRAM] unsigned char 
 11936 ;; Auto vars:     Size  Location     Type
 11937 ;;  grs             4   71[COMRAM] unsigned long 
 11938 ;;  rem             4   64[COMRAM] unsigned long 
 11939 ;;  new_exp         2   69[COMRAM] short 
 11940 ;;  aexp            1   76[COMRAM] unsigned char 
 11941 ;;  bexp            1   75[COMRAM] unsigned char 
 11942 ;;  sign            1   68[COMRAM] unsigned char 
 11943 ;; Return value:  Size  Location     Type
 11944 ;;                  4   52[COMRAM] unsigned char 
 11945 ;; Registers used:
 11946 ;;		wreg, status,2, status,0
 11947 ;; Tracked objects:
 11948 ;;		On entry : 0/0
 11949 ;;		On exit  : 0/0
 11950 ;;		Unchanged: 0/0
 11951 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11952 ;;      Params:         8       0       0       0       0       0       0
 11953 ;;      Locals:        13       0       0       0       0       0       0
 11954 ;;      Temps:          4       0       0       0       0       0       0
 11955 ;;      Totals:        25       0       0       0       0       0       0
 11956 ;;Total ram usage:       25 bytes
 11957 ;; Hardware stack levels used:    1
 11958 ;; Hardware stack levels required when called:    1
 11959 ;; This function calls:
 11960 ;;		Nothing
 11961 ;; This function is called by:
 11962 ;;		_scanAdcConversion
 11963 ;;		_efgtoa
 11964 ;; This function uses a non-reentrant model
 11965 ;;
 11966                           
 11967                           	psect	text44
 11968  0029C6                     __ptext44:
 11969                           	callstack 0
 11970  0029C6                     ___fldiv:
 11971                           	callstack 22
 11972  0029C6  5038               	movf	(___fldiv@b+3)^0,w,c
 11973  0029C8  0B80               	andlw	128
 11974  0029CA  6E45               	movwf	___fldiv@sign^0,c
 11975  0029CC  5038               	movf	(___fldiv@b+3)^0,w,c
 11976  0029CE  2438               	addwf	(___fldiv@b+3)^0,w,c
 11977  0029D0  6E4C               	movwf	___fldiv@bexp^0,c
 11978  0029D2  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11979  0029D4  EFEE  F014         	goto	u4591
 11980  0029D8  EFF0  F014         	goto	u4590
 11981  0029DC                     u4591:
 11982  0029DC  EFF1  F014         	goto	l4332
 11983  0029E0                     u4590:
 11984  0029E0  804C               	bsf	___fldiv@bexp^0,0,c
 11985  0029E2                     l4332:
 11986  0029E2  504C               	movf	___fldiv@bexp^0,w,c
 11987  0029E4  B4D8               	btfsc	status,2,c
 11988  0029E6  EFF7  F014         	goto	u4601
 11989  0029EA  EFF9  F014         	goto	u4600
 11990  0029EE                     u4601:
 11991  0029EE  EF0E  F015         	goto	l4342
 11992  0029F2                     u4600:
 11993  0029F2  284C               	incf	___fldiv@bexp^0,w,c
 11994  0029F4  A4D8               	btfss	status,2,c
 11995  0029F6  EFFF  F014         	goto	u4611
 11996  0029FA  EF01  F015         	goto	u4610
 11997  0029FE                     u4611:
 11998  0029FE  EF09  F015         	goto	l4338
 11999  002A02                     u4610:
 12000  002A02  0E00               	movlw	0
 12001  002A04  6E35               	movwf	___fldiv@b^0,c
 12002  002A06  0E00               	movlw	0
 12003  002A08  6E36               	movwf	(___fldiv@b+1)^0,c
 12004  002A0A  0E00               	movlw	0
 12005  002A0C  6E37               	movwf	(___fldiv@b+2)^0,c
 12006  002A0E  0E00               	movlw	0
 12007  002A10  6E38               	movwf	(___fldiv@b+3)^0,c
 12008  002A12                     l4338:
 12009  002A12  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12010  002A14  0E00               	movlw	0
 12011  002A16  6E38               	movwf	(___fldiv@b+3)^0,c
 12012  002A18  EF16  F015         	goto	l4344
 12013  002A1C                     l4342:
 12014  002A1C  0E00               	movlw	0
 12015  002A1E  6E35               	movwf	___fldiv@b^0,c
 12016  002A20  0E00               	movlw	0
 12017  002A22  6E36               	movwf	(___fldiv@b+1)^0,c
 12018  002A24  0E00               	movlw	0
 12019  002A26  6E37               	movwf	(___fldiv@b+2)^0,c
 12020  002A28  0E00               	movlw	0
 12021  002A2A  6E38               	movwf	(___fldiv@b+3)^0,c
 12022  002A2C                     l4344:
 12023  002A2C  503C               	movf	(___fldiv@a+3)^0,w,c
 12024  002A2E  0B80               	andlw	128
 12025  002A30  1A45               	xorwf	___fldiv@sign^0,f,c
 12026  002A32  503C               	movf	(___fldiv@a+3)^0,w,c
 12027  002A34  243C               	addwf	(___fldiv@a+3)^0,w,c
 12028  002A36  6E4D               	movwf	___fldiv@aexp^0,c
 12029  002A38  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 12030  002A3A  EF21  F015         	goto	u4621
 12031  002A3E  EF23  F015         	goto	u4620
 12032  002A42                     u4621:
 12033  002A42  EF24  F015         	goto	l4352
 12034  002A46                     u4620:
 12035  002A46  804D               	bsf	___fldiv@aexp^0,0,c
 12036  002A48                     l4352:
 12037  002A48  504D               	movf	___fldiv@aexp^0,w,c
 12038  002A4A  B4D8               	btfsc	status,2,c
 12039  002A4C  EF2A  F015         	goto	u4631
 12040  002A50  EF2C  F015         	goto	u4630
 12041  002A54                     u4631:
 12042  002A54  EF41  F015         	goto	l4362
 12043  002A58                     u4630:
 12044  002A58  284D               	incf	___fldiv@aexp^0,w,c
 12045  002A5A  A4D8               	btfss	status,2,c
 12046  002A5C  EF32  F015         	goto	u4641
 12047  002A60  EF34  F015         	goto	u4640
 12048  002A64                     u4641:
 12049  002A64  EF3C  F015         	goto	l4358
 12050  002A68                     u4640:
 12051  002A68  0E00               	movlw	0
 12052  002A6A  6E39               	movwf	___fldiv@a^0,c
 12053  002A6C  0E00               	movlw	0
 12054  002A6E  6E3A               	movwf	(___fldiv@a+1)^0,c
 12055  002A70  0E00               	movlw	0
 12056  002A72  6E3B               	movwf	(___fldiv@a+2)^0,c
 12057  002A74  0E00               	movlw	0
 12058  002A76  6E3C               	movwf	(___fldiv@a+3)^0,c
 12059  002A78                     l4358:
 12060  002A78  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 12061  002A7A  0E00               	movlw	0
 12062  002A7C  6E3C               	movwf	(___fldiv@a+3)^0,c
 12063  002A7E  EF49  F015         	goto	l4364
 12064  002A82                     l4362:
 12065  002A82  0E00               	movlw	0
 12066  002A84  6E39               	movwf	___fldiv@a^0,c
 12067  002A86  0E00               	movlw	0
 12068  002A88  6E3A               	movwf	(___fldiv@a+1)^0,c
 12069  002A8A  0E00               	movlw	0
 12070  002A8C  6E3B               	movwf	(___fldiv@a+2)^0,c
 12071  002A8E  0E00               	movlw	0
 12072  002A90  6E3C               	movwf	(___fldiv@a+3)^0,c
 12073  002A92                     l4364:
 12074  002A92  5039               	movf	___fldiv@a^0,w,c
 12075  002A94  103A               	iorwf	(___fldiv@a+1)^0,w,c
 12076  002A96  103B               	iorwf	(___fldiv@a+2)^0,w,c
 12077  002A98  103C               	iorwf	(___fldiv@a+3)^0,w,c
 12078  002A9A  A4D8               	btfss	status,2,c
 12079  002A9C  EF52  F015         	goto	u4651
 12080  002AA0  EF54  F015         	goto	u4650
 12081  002AA4                     u4651:
 12082  002AA4  EF6C  F015         	goto	l4376
 12083  002AA8                     u4650:
 12084  002AA8  0E00               	movlw	0
 12085  002AAA  6E35               	movwf	___fldiv@b^0,c
 12086  002AAC  0E00               	movlw	0
 12087  002AAE  6E36               	movwf	(___fldiv@b+1)^0,c
 12088  002AB0  0E00               	movlw	0
 12089  002AB2  6E37               	movwf	(___fldiv@b+2)^0,c
 12090  002AB4  0E00               	movlw	0
 12091  002AB6  6E38               	movwf	(___fldiv@b+3)^0,c
 12092  002AB8  0E80               	movlw	128
 12093  002ABA  1237               	iorwf	(___fldiv@b+2)^0,f,c
 12094  002ABC  0E7F               	movlw	127
 12095  002ABE  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12096  002AC0                     l4370:
 12097  002AC0  5045               	movf	___fldiv@sign^0,w,c
 12098  002AC2  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12099  002AC4  C035  F035         	movff	___fldiv@b,?___fldiv
 12100  002AC8  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 12101  002ACC  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 12102  002AD0  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 12103  002AD4  EFAF  F016         	goto	l1125
 12104  002AD8                     l4376:
 12105  002AD8  504C               	movf	___fldiv@bexp^0,w,c
 12106  002ADA  A4D8               	btfss	status,2,c
 12107  002ADC  EF72  F015         	goto	u4661
 12108  002AE0  EF74  F015         	goto	u4660
 12109  002AE4                     u4661:
 12110  002AE4  EF7E  F015         	goto	l4384
 12111  002AE8                     u4660:
 12112  002AE8  0E00               	movlw	0
 12113  002AEA  6E35               	movwf	?___fldiv^0,c
 12114  002AEC  0E00               	movlw	0
 12115  002AEE  6E36               	movwf	(?___fldiv+1)^0,c
 12116  002AF0  0E00               	movlw	0
 12117  002AF2  6E37               	movwf	(?___fldiv+2)^0,c
 12118  002AF4  0E00               	movlw	0
 12119  002AF6  6E38               	movwf	(?___fldiv+3)^0,c
 12120  002AF8  EFAF  F016         	goto	l1125
 12121  002AFC                     l4384:
 12122  002AFC  504D               	movf	___fldiv@aexp^0,w,c
 12123  002AFE  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 12124  002B02  6A3E               	clrf	(??___fldiv+1)^0,c
 12125  002B04  5E3D               	subwf	??___fldiv^0,f,c
 12126  002B06  0E00               	movlw	0
 12127  002B08  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 12128  002B0A  0E7F               	movlw	127
 12129  002B0C  243D               	addwf	??___fldiv^0,w,c
 12130  002B0E  6E46               	movwf	___fldiv@new_exp^0,c
 12131  002B10  0E00               	movlw	0
 12132  002B12  203E               	addwfc	(??___fldiv+1)^0,w,c
 12133  002B14  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12134  002B16  C035  F041         	movff	___fldiv@b,___fldiv@rem
 12135  002B1A  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 12136  002B1E  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 12137  002B22  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 12138  002B26  0E00               	movlw	0
 12139  002B28  6E35               	movwf	___fldiv@b^0,c
 12140  002B2A  0E00               	movlw	0
 12141  002B2C  6E36               	movwf	(___fldiv@b+1)^0,c
 12142  002B2E  0E00               	movlw	0
 12143  002B30  6E37               	movwf	(___fldiv@b+2)^0,c
 12144  002B32  0E00               	movlw	0
 12145  002B34  6E38               	movwf	(___fldiv@b+3)^0,c
 12146  002B36  0E00               	movlw	0
 12147  002B38  6E48               	movwf	___fldiv@grs^0,c
 12148  002B3A  0E00               	movlw	0
 12149  002B3C  6E49               	movwf	(___fldiv@grs+1)^0,c
 12150  002B3E  0E00               	movlw	0
 12151  002B40  6E4A               	movwf	(___fldiv@grs+2)^0,c
 12152  002B42  0E00               	movlw	0
 12153  002B44  6E4B               	movwf	(___fldiv@grs+3)^0,c
 12154  002B46  0E00               	movlw	0
 12155  002B48  6E4D               	movwf	___fldiv@aexp^0,c
 12156  002B4A  EFDF  F015         	goto	l1127
 12157  002B4E                     l4394:
 12158  002B4E  504D               	movf	___fldiv@aexp^0,w,c
 12159  002B50  B4D8               	btfsc	status,2,c
 12160  002B52  EFAD  F015         	goto	u4671
 12161  002B56  EFAF  F015         	goto	u4670
 12162  002B5A                     u4671:
 12163  002B5A  EFC6  F015         	goto	l4402
 12164  002B5E                     u4670:
 12165  002B5E  90D8               	bcf	status,0,c
 12166  002B60  3641               	rlcf	___fldiv@rem^0,f,c
 12167  002B62  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 12168  002B64  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 12169  002B66  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 12170  002B68  90D8               	bcf	status,0,c
 12171  002B6A  3635               	rlcf	___fldiv@b^0,f,c
 12172  002B6C  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12173  002B6E  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12174  002B70  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12175  002B72  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12176  002B74  EFBE  F015         	goto	u4681
 12177  002B78  EFC0  F015         	goto	u4680
 12178  002B7C                     u4681:
 12179  002B7C  EFC1  F015         	goto	l1130
 12180  002B80                     u4680:
 12181  002B80  8035               	bsf	___fldiv@b^0,0,c
 12182  002B82                     l1130:
 12183  002B82  90D8               	bcf	status,0,c
 12184  002B84  3648               	rlcf	___fldiv@grs^0,f,c
 12185  002B86  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12186  002B88  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12187  002B8A  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12188  002B8C                     l4402:
 12189  002B8C  5039               	movf	___fldiv@a^0,w,c
 12190  002B8E  5C41               	subwf	___fldiv@rem^0,w,c
 12191  002B90  503A               	movf	(___fldiv@a+1)^0,w,c
 12192  002B92  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 12193  002B94  503B               	movf	(___fldiv@a+2)^0,w,c
 12194  002B96  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 12195  002B98  503C               	movf	(___fldiv@a+3)^0,w,c
 12196  002B9A  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 12197  002B9C  A0D8               	btfss	status,0,c
 12198  002B9E  EFD3  F015         	goto	u4691
 12199  002BA2  EFD5  F015         	goto	u4690
 12200  002BA6                     u4691:
 12201  002BA6  EFDE  F015         	goto	l4408
 12202  002BAA                     u4690:
 12203  002BAA  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 12204  002BAC  5039               	movf	___fldiv@a^0,w,c
 12205  002BAE  5E41               	subwf	___fldiv@rem^0,f,c
 12206  002BB0  503A               	movf	(___fldiv@a+1)^0,w,c
 12207  002BB2  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 12208  002BB4  503B               	movf	(___fldiv@a+2)^0,w,c
 12209  002BB6  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 12210  002BB8  503C               	movf	(___fldiv@a+3)^0,w,c
 12211  002BBA  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 12212  002BBC                     l4408:
 12213  002BBC  2A4D               	incf	___fldiv@aexp^0,f,c
 12214  002BBE                     l1127:
 12215  002BBE  0E19               	movlw	25
 12216  002BC0  644D               	cpfsgt	___fldiv@aexp^0,c
 12217  002BC2  EFE5  F015         	goto	u4701
 12218  002BC6  EFE7  F015         	goto	u4700
 12219  002BCA                     u4701:
 12220  002BCA  EFA7  F015         	goto	l4394
 12221  002BCE                     u4700:
 12222  002BCE  5041               	movf	___fldiv@rem^0,w,c
 12223  002BD0  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 12224  002BD2  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 12225  002BD4  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 12226  002BD6  B4D8               	btfsc	status,2,c
 12227  002BD8  EFF0  F015         	goto	u4711
 12228  002BDC  EFF2  F015         	goto	u4710
 12229  002BE0                     u4711:
 12230  002BE0  EF0A  F016         	goto	l4420
 12231  002BE4                     u4710:
 12232  002BE4  8048               	bsf	___fldiv@grs^0,0,c
 12233  002BE6  EF0A  F016         	goto	l4420
 12234  002BEA                     l4414:
 12235  002BEA  90D8               	bcf	status,0,c
 12236  002BEC  3635               	rlcf	___fldiv@b^0,f,c
 12237  002BEE  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12238  002BF0  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12239  002BF2  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12240  002BF4  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12241  002BF6  EFFF  F015         	goto	u4721
 12242  002BFA  EF01  F016         	goto	u4720
 12243  002BFE                     u4721:
 12244  002BFE  EF02  F016         	goto	l1136
 12245  002C02                     u4720:
 12246  002C02  8035               	bsf	___fldiv@b^0,0,c
 12247  002C04                     l1136:
 12248  002C04  90D8               	bcf	status,0,c
 12249  002C06  3648               	rlcf	___fldiv@grs^0,f,c
 12250  002C08  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12251  002C0A  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12252  002C0C  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12253  002C0E  0646               	decf	___fldiv@new_exp^0,f,c
 12254  002C10  A0D8               	btfss	status,0,c
 12255  002C12  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 12256  002C14                     l4420:
 12257  002C14  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12258  002C16  EF0F  F016         	goto	u4731
 12259  002C1A  EF11  F016         	goto	u4730
 12260  002C1E                     u4731:
 12261  002C1E  EFF5  F015         	goto	l4414
 12262  002C22                     u4730:
 12263  002C22  0E00               	movlw	0
 12264  002C24  6E4D               	movwf	___fldiv@aexp^0,c
 12265  002C26  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12266  002C28  EF18  F016         	goto	u4741
 12267  002C2C  EF1A  F016         	goto	u4740
 12268  002C30                     u4741:
 12269  002C30  EF3E  F016         	goto	l1138
 12270  002C34                     u4740:
 12271  002C34  0EFF               	movlw	255
 12272  002C36  1448               	andwf	___fldiv@grs^0,w,c
 12273  002C38  6E3D               	movwf	??___fldiv^0,c
 12274  002C3A  0EFF               	movlw	255
 12275  002C3C  1449               	andwf	(___fldiv@grs+1)^0,w,c
 12276  002C3E  6E3E               	movwf	(??___fldiv+1)^0,c
 12277  002C40  0EFF               	movlw	255
 12278  002C42  144A               	andwf	(___fldiv@grs+2)^0,w,c
 12279  002C44  6E3F               	movwf	(??___fldiv+2)^0,c
 12280  002C46  0E7F               	movlw	127
 12281  002C48  144B               	andwf	(___fldiv@grs+3)^0,w,c
 12282  002C4A  6E40               	movwf	(??___fldiv+3)^0,c
 12283  002C4C  503D               	movf	??___fldiv^0,w,c
 12284  002C4E  103E               	iorwf	(??___fldiv+1)^0,w,c
 12285  002C50  103F               	iorwf	(??___fldiv+2)^0,w,c
 12286  002C52  1040               	iorwf	(??___fldiv+3)^0,w,c
 12287  002C54  B4D8               	btfsc	status,2,c
 12288  002C56  EF2F  F016         	goto	u4751
 12289  002C5A  EF31  F016         	goto	u4750
 12290  002C5E                     u4751:
 12291  002C5E  EF35  F016         	goto	l1139
 12292  002C62                     u4750:
 12293  002C62                     l4428:
 12294  002C62  0E01               	movlw	1
 12295  002C64  6E4D               	movwf	___fldiv@aexp^0,c
 12296  002C66  EF3E  F016         	goto	l1138
 12297  002C6A                     l1139:
 12298  002C6A  A035               	btfss	___fldiv@b^0,0,c
 12299  002C6C  EF3A  F016         	goto	u4761
 12300  002C70  EF3C  F016         	goto	u4760
 12301  002C74                     u4761:
 12302  002C74  EF3E  F016         	goto	l1138
 12303  002C78                     u4760:
 12304  002C78  EF31  F016         	goto	l4428
 12305  002C7C                     l1138:
 12306  002C7C  504D               	movf	___fldiv@aexp^0,w,c
 12307  002C7E  B4D8               	btfsc	status,2,c
 12308  002C80  EF44  F016         	goto	u4771
 12309  002C84  EF46  F016         	goto	u4770
 12310  002C88                     u4771:
 12311  002C88  EF6A  F016         	goto	l4440
 12312  002C8C                     u4770:
 12313  002C8C  0E01               	movlw	1
 12314  002C8E  2635               	addwf	___fldiv@b^0,f,c
 12315  002C90  0E00               	movlw	0
 12316  002C92  2236               	addwfc	(___fldiv@b+1)^0,f,c
 12317  002C94  2237               	addwfc	(___fldiv@b+2)^0,f,c
 12318  002C96  2238               	addwfc	(___fldiv@b+3)^0,f,c
 12319  002C98  A038               	btfss	(___fldiv@b+3)^0,0,c
 12320  002C9A  EF51  F016         	goto	u4781
 12321  002C9E  EF53  F016         	goto	u4780
 12322  002CA2                     u4781:
 12323  002CA2  EF6A  F016         	goto	l4440
 12324  002CA6                     u4780:
 12325  002CA6  C035  F03D         	movff	___fldiv@b,??___fldiv
 12326  002CAA  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 12327  002CAE  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 12328  002CB2  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 12329  002CB6  3440               	rlcf	(??___fldiv+3)^0,w,c
 12330  002CB8  3240               	rrcf	(??___fldiv+3)^0,f,c
 12331  002CBA  323F               	rrcf	(??___fldiv+2)^0,f,c
 12332  002CBC  323E               	rrcf	(??___fldiv+1)^0,f,c
 12333  002CBE  323D               	rrcf	??___fldiv^0,f,c
 12334  002CC0  C03D  F035         	movff	??___fldiv,___fldiv@b
 12335  002CC4  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 12336  002CC8  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 12337  002CCC  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 12338  002CD0  4A46               	infsnz	___fldiv@new_exp^0,f,c
 12339  002CD2  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 12340  002CD4                     l4440:
 12341  002CD4  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12342  002CD6  EF75  F016         	goto	u4791
 12343  002CDA  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12344  002CDC  E108               	bnz	u4790
 12345  002CDE  2846               	incf	___fldiv@new_exp^0,w,c
 12346  002CE0  A0D8               	btfss	status,0,c
 12347  002CE2  EF75  F016         	goto	u4791
 12348  002CE6  EF77  F016         	goto	u4790
 12349  002CEA                     u4791:
 12350  002CEA  EF82  F016         	goto	l4444
 12351  002CEE                     u4790:
 12352  002CEE  0E00               	movlw	0
 12353  002CF0  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12354  002CF2  6846               	setf	___fldiv@new_exp^0,c
 12355  002CF4  0E00               	movlw	0
 12356  002CF6  6E35               	movwf	___fldiv@b^0,c
 12357  002CF8  0E00               	movlw	0
 12358  002CFA  6E36               	movwf	(___fldiv@b+1)^0,c
 12359  002CFC  0E00               	movlw	0
 12360  002CFE  6E37               	movwf	(___fldiv@b+2)^0,c
 12361  002D00  0E00               	movlw	0
 12362  002D02  6E38               	movwf	(___fldiv@b+3)^0,c
 12363  002D04                     l4444:
 12364  002D04  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12365  002D06  EF8F  F016         	goto	u4800
 12366  002D0A  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12367  002D0C  E106               	bnz	u4801
 12368  002D0E  0446               	decf	___fldiv@new_exp^0,w,c
 12369  002D10  B0D8               	btfsc	status,0,c
 12370  002D12  EF8D  F016         	goto	u4801
 12371  002D16  EF8F  F016         	goto	u4800
 12372  002D1A                     u4801:
 12373  002D1A  EF9D  F016         	goto	l4448
 12374  002D1E                     u4800:
 12375  002D1E  0E00               	movlw	0
 12376  002D20  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12377  002D22  0E00               	movlw	0
 12378  002D24  6E46               	movwf	___fldiv@new_exp^0,c
 12379  002D26  0E00               	movlw	0
 12380  002D28  6E35               	movwf	___fldiv@b^0,c
 12381  002D2A  0E00               	movlw	0
 12382  002D2C  6E36               	movwf	(___fldiv@b+1)^0,c
 12383  002D2E  0E00               	movlw	0
 12384  002D30  6E37               	movwf	(___fldiv@b+2)^0,c
 12385  002D32  0E00               	movlw	0
 12386  002D34  6E38               	movwf	(___fldiv@b+3)^0,c
 12387  002D36  0E00               	movlw	0
 12388  002D38  6E45               	movwf	___fldiv@sign^0,c
 12389  002D3A                     l4448:
 12390  002D3A  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 12391  002D3E  A04C               	btfss	___fldiv@bexp^0,0,c
 12392  002D40  EFA4  F016         	goto	u4811
 12393  002D44  EFA6  F016         	goto	u4810
 12394  002D48                     u4811:
 12395  002D48  EFA9  F016         	goto	l4454
 12396  002D4C                     u4810:
 12397  002D4C  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12398  002D4E  EFAA  F016         	goto	l4456
 12399  002D52                     l4454:
 12400  002D52  9E37               	bcf	(___fldiv@b+2)^0,7,c
 12401  002D54                     l4456:
 12402  002D54  90D8               	bcf	status,0,c
 12403  002D56  304C               	rrcf	___fldiv@bexp^0,w,c
 12404  002D58  6E38               	movwf	(___fldiv@b+3)^0,c
 12405  002D5A  EF60  F015         	goto	l4370
 12406  002D5E                     l1125:
 12407  002D5E  0012               	return		;funcret
 12408  002D60                     __end_of___fldiv:
 12409                           	callstack 0
 12410                           
 12411 ;; *************** function ___awmod *****************
 12412 ;; Defined at:
 12413 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 12414 ;; Parameters:    Size  Location     Type
 12415 ;;  dividend        2    0[COMRAM] int 
 12416 ;;  divisor         2    2[COMRAM] int 
 12417 ;; Auto vars:     Size  Location     Type
 12418 ;;  sign            1    5[COMRAM] unsigned char 
 12419 ;;  counter         1    4[COMRAM] unsigned char 
 12420 ;; Return value:  Size  Location     Type
 12421 ;;                  2    0[COMRAM] int 
 12422 ;; Registers used:
 12423 ;;		wreg, status,2, status,0
 12424 ;; Tracked objects:
 12425 ;;		On entry : 0/0
 12426 ;;		On exit  : 0/0
 12427 ;;		Unchanged: 0/0
 12428 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12429 ;;      Params:         4       0       0       0       0       0       0
 12430 ;;      Locals:         2       0       0       0       0       0       0
 12431 ;;      Temps:          0       0       0       0       0       0       0
 12432 ;;      Totals:         6       0       0       0       0       0       0
 12433 ;;Total ram usage:        6 bytes
 12434 ;; Hardware stack levels used:    1
 12435 ;; Hardware stack levels required when called:    1
 12436 ;; This function calls:
 12437 ;;		Nothing
 12438 ;; This function is called by:
 12439 ;;		_efgtoa
 12440 ;; This function uses a non-reentrant model
 12441 ;;
 12442                           
 12443                           	psect	text45
 12444  0050C2                     __ptext45:
 12445                           	callstack 0
 12446  0050C2                     ___awmod:
 12447                           	callstack 22
 12448  0050C2  0E00               	movlw	0
 12449  0050C4  6E06               	movwf	___awmod@sign^0,c
 12450  0050C6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12451  0050C8  EF6A  F028         	goto	u5070
 12452  0050CC  EF68  F028         	goto	u5071
 12453  0050D0                     u5071:
 12454  0050D0  EF70  F028         	goto	l4652
 12455  0050D4                     u5070:
 12456  0050D4  6C01               	negf	___awmod@dividend^0,c
 12457  0050D6  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12458  0050D8  B0D8               	btfsc	status,0,c
 12459  0050DA  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12460  0050DC  0E01               	movlw	1
 12461  0050DE  6E06               	movwf	___awmod@sign^0,c
 12462  0050E0                     l4652:
 12463  0050E0  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12464  0050E2  EF77  F028         	goto	u5080
 12465  0050E6  EF75  F028         	goto	u5081
 12466  0050EA                     u5081:
 12467  0050EA  EF7B  F028         	goto	l4656
 12468  0050EE                     u5080:
 12469  0050EE  6C03               	negf	___awmod@divisor^0,c
 12470  0050F0  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12471  0050F2  B0D8               	btfsc	status,0,c
 12472  0050F4  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12473  0050F6                     l4656:
 12474  0050F6  5003               	movf	___awmod@divisor^0,w,c
 12475  0050F8  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12476  0050FA  B4D8               	btfsc	status,2,c
 12477  0050FC  EF82  F028         	goto	u5091
 12478  005100  EF84  F028         	goto	u5090
 12479  005104                     u5091:
 12480  005104  EFA8  F028         	goto	l4672
 12481  005108                     u5090:
 12482  005108  0E01               	movlw	1
 12483  00510A  6E05               	movwf	___awmod@counter^0,c
 12484  00510C  EF8C  F028         	goto	l4662
 12485  005110                     l4660:
 12486  005110  90D8               	bcf	status,0,c
 12487  005112  3603               	rlcf	___awmod@divisor^0,f,c
 12488  005114  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12489  005116  2A05               	incf	___awmod@counter^0,f,c
 12490  005118                     l4662:
 12491  005118  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12492  00511A  EF91  F028         	goto	u5101
 12493  00511E  EF93  F028         	goto	u5100
 12494  005122                     u5101:
 12495  005122  EF88  F028         	goto	l4660
 12496  005126                     u5100:
 12497  005126                     l4664:
 12498  005126  5003               	movf	___awmod@divisor^0,w,c
 12499  005128  5C01               	subwf	___awmod@dividend^0,w,c
 12500  00512A  5004               	movf	(___awmod@divisor+1)^0,w,c
 12501  00512C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12502  00512E  A0D8               	btfss	status,0,c
 12503  005130  EF9C  F028         	goto	u5111
 12504  005134  EF9E  F028         	goto	u5110
 12505  005138                     u5111:
 12506  005138  EFA2  F028         	goto	l4668
 12507  00513C                     u5110:
 12508  00513C  5003               	movf	___awmod@divisor^0,w,c
 12509  00513E  5E01               	subwf	___awmod@dividend^0,f,c
 12510  005140  5004               	movf	(___awmod@divisor+1)^0,w,c
 12511  005142  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12512  005144                     l4668:
 12513  005144  90D8               	bcf	status,0,c
 12514  005146  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12515  005148  3203               	rrcf	___awmod@divisor^0,f,c
 12516  00514A  2E05               	decfsz	___awmod@counter^0,f,c
 12517  00514C  EF93  F028         	goto	l4664
 12518  005150                     l4672:
 12519  005150  5006               	movf	___awmod@sign^0,w,c
 12520  005152  B4D8               	btfsc	status,2,c
 12521  005154  EFAE  F028         	goto	u5121
 12522  005158  EFB0  F028         	goto	u5120
 12523  00515C                     u5121:
 12524  00515C  EFB4  F028         	goto	l4676
 12525  005160                     u5120:
 12526  005160  6C01               	negf	___awmod@dividend^0,c
 12527  005162  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12528  005164  B0D8               	btfsc	status,0,c
 12529  005166  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12530  005168                     l4676:
 12531  005168  C001  F001         	movff	___awmod@dividend,?___awmod
 12532  00516C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12533  005170  0012               	return		;funcret
 12534  005172                     __end_of___awmod:
 12535                           	callstack 0
 12536                           
 12537 ;; *************** function ___awdiv *****************
 12538 ;; Defined at:
 12539 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12540 ;; Parameters:    Size  Location     Type
 12541 ;;  dividend        2    0[COMRAM] int 
 12542 ;;  divisor         2    2[COMRAM] int 
 12543 ;; Auto vars:     Size  Location     Type
 12544 ;;  quotient        2    6[COMRAM] int 
 12545 ;;  sign            1    5[COMRAM] unsigned char 
 12546 ;;  counter         1    4[COMRAM] unsigned char 
 12547 ;; Return value:  Size  Location     Type
 12548 ;;                  2    0[COMRAM] int 
 12549 ;; Registers used:
 12550 ;;		wreg, status,2, status,0
 12551 ;; Tracked objects:
 12552 ;;		On entry : 0/0
 12553 ;;		On exit  : 0/0
 12554 ;;		Unchanged: 0/0
 12555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12556 ;;      Params:         4       0       0       0       0       0       0
 12557 ;;      Locals:         4       0       0       0       0       0       0
 12558 ;;      Temps:          0       0       0       0       0       0       0
 12559 ;;      Totals:         8       0       0       0       0       0       0
 12560 ;;Total ram usage:        8 bytes
 12561 ;; Hardware stack levels used:    1
 12562 ;; Hardware stack levels required when called:    1
 12563 ;; This function calls:
 12564 ;;		Nothing
 12565 ;; This function is called by:
 12566 ;;		_efgtoa
 12567 ;; This function uses a non-reentrant model
 12568 ;;
 12569                           
 12570                           	psect	text46
 12571  004FFE                     __ptext46:
 12572                           	callstack 0
 12573  004FFE                     ___awdiv:
 12574                           	callstack 22
 12575  004FFE  0E00               	movlw	0
 12576  005000  6E06               	movwf	___awdiv@sign^0,c
 12577  005002  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12578  005004  EF08  F028         	goto	u5010
 12579  005008  EF06  F028         	goto	u5011
 12580  00500C                     u5011:
 12581  00500C  EF0E  F028         	goto	l4608
 12582  005010                     u5010:
 12583  005010  6C03               	negf	___awdiv@divisor^0,c
 12584  005012  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12585  005014  B0D8               	btfsc	status,0,c
 12586  005016  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12587  005018  0E01               	movlw	1
 12588  00501A  6E06               	movwf	___awdiv@sign^0,c
 12589  00501C                     l4608:
 12590  00501C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12591  00501E  EF15  F028         	goto	u5020
 12592  005022  EF13  F028         	goto	u5021
 12593  005026                     u5021:
 12594  005026  EF1B  F028         	goto	l4614
 12595  00502A                     u5020:
 12596  00502A  6C01               	negf	___awdiv@dividend^0,c
 12597  00502C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12598  00502E  B0D8               	btfsc	status,0,c
 12599  005030  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12600  005032  0E01               	movlw	1
 12601  005034  1A06               	xorwf	___awdiv@sign^0,f,c
 12602  005036                     l4614:
 12603  005036  0E00               	movlw	0
 12604  005038  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12605  00503A  0E00               	movlw	0
 12606  00503C  6E07               	movwf	___awdiv@quotient^0,c
 12607  00503E  5003               	movf	___awdiv@divisor^0,w,c
 12608  005040  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12609  005042  B4D8               	btfsc	status,2,c
 12610  005044  EF26  F028         	goto	u5031
 12611  005048  EF28  F028         	goto	u5030
 12612  00504C                     u5031:
 12613  00504C  EF50  F028         	goto	l4636
 12614  005050                     u5030:
 12615  005050  0E01               	movlw	1
 12616  005052  6E05               	movwf	___awdiv@counter^0,c
 12617  005054  EF30  F028         	goto	l4622
 12618  005058                     l4620:
 12619  005058  90D8               	bcf	status,0,c
 12620  00505A  3603               	rlcf	___awdiv@divisor^0,f,c
 12621  00505C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12622  00505E  2A05               	incf	___awdiv@counter^0,f,c
 12623  005060                     l4622:
 12624  005060  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12625  005062  EF35  F028         	goto	u5041
 12626  005066  EF37  F028         	goto	u5040
 12627  00506A                     u5041:
 12628  00506A  EF2C  F028         	goto	l4620
 12629  00506E                     u5040:
 12630  00506E                     l4624:
 12631  00506E  90D8               	bcf	status,0,c
 12632  005070  3607               	rlcf	___awdiv@quotient^0,f,c
 12633  005072  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12634  005074  5003               	movf	___awdiv@divisor^0,w,c
 12635  005076  5C01               	subwf	___awdiv@dividend^0,w,c
 12636  005078  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12637  00507A  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12638  00507C  A0D8               	btfss	status,0,c
 12639  00507E  EF43  F028         	goto	u5051
 12640  005082  EF45  F028         	goto	u5050
 12641  005086                     u5051:
 12642  005086  EF4A  F028         	goto	l4632
 12643  00508A                     u5050:
 12644  00508A  5003               	movf	___awdiv@divisor^0,w,c
 12645  00508C  5E01               	subwf	___awdiv@dividend^0,f,c
 12646  00508E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12647  005090  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12648  005092  8007               	bsf	___awdiv@quotient^0,0,c
 12649  005094                     l4632:
 12650  005094  90D8               	bcf	status,0,c
 12651  005096  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12652  005098  3203               	rrcf	___awdiv@divisor^0,f,c
 12653  00509A  2E05               	decfsz	___awdiv@counter^0,f,c
 12654  00509C  EF37  F028         	goto	l4624
 12655  0050A0                     l4636:
 12656  0050A0  5006               	movf	___awdiv@sign^0,w,c
 12657  0050A2  B4D8               	btfsc	status,2,c
 12658  0050A4  EF56  F028         	goto	u5061
 12659  0050A8  EF58  F028         	goto	u5060
 12660  0050AC                     u5061:
 12661  0050AC  EF5C  F028         	goto	l4640
 12662  0050B0                     u5060:
 12663  0050B0  6C07               	negf	___awdiv@quotient^0,c
 12664  0050B2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12665  0050B4  B0D8               	btfsc	status,0,c
 12666  0050B6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12667  0050B8                     l4640:
 12668  0050B8  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12669  0050BC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12670  0050C0  0012               	return		;funcret
 12671  0050C2                     __end_of___awdiv:
 12672                           	callstack 0
 12673                           
 12674 ;; *************** function _dtoa *****************
 12675 ;; Defined at:
 12676 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12677 ;; Parameters:    Size  Location     Type
 12678 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12679 ;;		 -> sprintf@f(6), 
 12680 ;;  d               8   29[COMRAM] long long 
 12681 ;; Auto vars:     Size  Location     Type
 12682 ;;  n               8   53[COMRAM] long long 
 12683 ;;  i               2   61[COMRAM] int 
 12684 ;;  s               2   51[COMRAM] int 
 12685 ;;  w               2   49[COMRAM] int 
 12686 ;;  p               2   47[COMRAM] int 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  2   27[COMRAM] int 
 12689 ;; Registers used:
 12690 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12696 ;;      Params:        10       0       0       0       0       0       0
 12697 ;;      Locals:        18       0       0       0       0       0       0
 12698 ;;      Temps:          8       0       0       0       0       0       0
 12699 ;;      Totals:        36       0       0       0       0       0       0
 12700 ;;Total ram usage:       36 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:    5
 12703 ;; This function calls:
 12704 ;;		___aodiv
 12705 ;;		___aomod
 12706 ;;		_abs
 12707 ;;		_pad
 12708 ;; This function is called by:
 12709 ;;		_vfpfcnvrt
 12710 ;; This function uses a non-reentrant model
 12711 ;;
 12712                           
 12713                           	psect	text47
 12714  003046                     __ptext47:
 12715                           	callstack 0
 12716  003046                     _dtoa:
 12717                           	callstack 19
 12718  003046                     
 12719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12720  003046  C01E  F036         	movff	dtoa@d,dtoa@n
 12721  00304A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12722  00304E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12723  003052  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12724  003056  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12725  00305A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12726  00305E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12727  003062  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12728  003066                     
 12729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12730  003066  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12731  003068  EF38  F018         	goto	u5601
 12732  00306C  EF3B  F018         	goto	u5600
 12733  003070                     u5601:
 12734  003070  0E01               	movlw	1
 12735  003072  EF3C  F018         	goto	u5610
 12736  003076                     u5600:
 12737  003076  0E00               	movlw	0
 12738  003078                     u5610:
 12739  003078  6E34               	movwf	dtoa@s^0,c
 12740  00307A  6A35               	clrf	(dtoa@s+1)^0,c
 12741                           
 12742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12743  00307C  5034               	movf	dtoa@s^0,w,c
 12744  00307E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12745  003080  B4D8               	btfsc	status,2,c
 12746  003082  EF45  F018         	goto	u5621
 12747  003086  EF47  F018         	goto	u5620
 12748  00308A                     u5621:
 12749  00308A  EF57  F018         	goto	l4882
 12750  00308E                     u5620:
 12751  00308E                     
 12752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12753  00308E  1E3D               	comf	(dtoa@n+7)^0,f,c
 12754  003090  1E3C               	comf	(dtoa@n+6)^0,f,c
 12755  003092  1E3B               	comf	(dtoa@n+5)^0,f,c
 12756  003094  1E3A               	comf	(dtoa@n+4)^0,f,c
 12757  003096  1E39               	comf	(dtoa@n+3)^0,f,c
 12758  003098  1E38               	comf	(dtoa@n+2)^0,f,c
 12759  00309A  1E37               	comf	(dtoa@n+1)^0,f,c
 12760  00309C  6C36               	negf	dtoa@n^0,c
 12761  00309E  0E00               	movlw	0
 12762  0030A0  2237               	addwfc	(dtoa@n+1)^0,f,c
 12763  0030A2  2238               	addwfc	(dtoa@n+2)^0,f,c
 12764  0030A4  2239               	addwfc	(dtoa@n+3)^0,f,c
 12765  0030A6  223A               	addwfc	(dtoa@n+4)^0,f,c
 12766  0030A8  223B               	addwfc	(dtoa@n+5)^0,f,c
 12767  0030AA  223C               	addwfc	(dtoa@n+6)^0,f,c
 12768  0030AC  223D               	addwfc	(dtoa@n+7)^0,f,c
 12769  0030AE                     l4882:
 12770                           
 12771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12772  0030AE  0100               	movlb	0	; () banked
 12773  0030B0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 12774  0030B2  EF5D  F018         	goto	u5631
 12775  0030B6  EF5F  F018         	goto	u5630
 12776  0030BA                     u5631:
 12777  0030BA  EF60  F018         	goto	l4886
 12778  0030BE                     u5630:
 12779  0030BE                     
 12780                           ; BSR set to: 0
 12781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12782  0030BE  93F8               	bcf	_flags& (0+255),1,b
 12783  0030C0                     l4886:
 12784                           
 12785                           ; BSR set to: 0
 12786                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12787  0030C0  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 12788  0030C2  EF6D  F018         	goto	u5640
 12789  0030C6  51F7               	movf	(_prec+1)& (0+255),w,b
 12790  0030C8  E106               	bnz	u5641
 12791  0030CA  05F6               	decf	_prec& (0+255),w,b
 12792  0030CC  B0D8               	btfsc	status,0,c
 12793  0030CE  EF6B  F018         	goto	u5641
 12794  0030D2  EF6D  F018         	goto	u5640
 12795  0030D6                     u5641:
 12796  0030D6  EF73  F018         	goto	l1280
 12797  0030DA                     u5640:
 12798  0030DA                     
 12799                           ; BSR set to: 0
 12800  0030DA  0E00               	movlw	0
 12801  0030DC  6E31               	movwf	(dtoa@p+1)^0,c
 12802  0030DE  0E01               	movlw	1
 12803  0030E0  6E30               	movwf	dtoa@p^0,c
 12804  0030E2  EF77  F018         	goto	l1282
 12805  0030E6                     l1280:
 12806                           
 12807                           ; BSR set to: 0
 12808  0030E6  C0F6  F030         	movff	_prec,dtoa@p
 12809  0030EA  C0F7  F031         	movff	_prec+1,dtoa@p+1
 12810  0030EE                     l1282:
 12811                           
 12812                           ; BSR set to: 0
 12813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12814  0030EE  C1D1  F032         	movff	_width,dtoa@w
 12815  0030F2  C1D2  F033         	movff	_width+1,dtoa@w+1
 12816  0030F6                     
 12817                           ; BSR set to: 0
 12818                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12819  0030F6  5034               	movf	dtoa@s^0,w,c
 12820  0030F8  1035               	iorwf	(dtoa@s+1)^0,w,c
 12821  0030FA  A4D8               	btfss	status,2,c
 12822  0030FC  EF82  F018         	goto	u5651
 12823  003100  EF84  F018         	goto	u5650
 12824  003104                     u5651:
 12825  003104  EF8B  F018         	goto	l4894
 12826  003108                     u5650:
 12827  003108                     
 12828                           ; BSR set to: 0
 12829  003108  A5F8               	btfss	_flags& (0+255),2,b
 12830  00310A  EF89  F018         	goto	u5661
 12831  00310E  EF8B  F018         	goto	u5660
 12832  003112                     u5661:
 12833  003112  EF8E  F018         	goto	l4896
 12834  003116                     u5660:
 12835  003116                     l4894:
 12836                           
 12837                           ; BSR set to: 0
 12838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12839  003116  0632               	decf	dtoa@w^0,f,c
 12840  003118  A0D8               	btfss	status,0,c
 12841  00311A  0633               	decf	(dtoa@w+1)^0,f,c
 12842  00311C                     l4896:
 12843                           
 12844                           ; BSR set to: 0
 12845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12846  00311C  0E00               	movlw	0
 12847  00311E  6E3F               	movwf	(dtoa@i+1)^0,c
 12848  003120  0E4F               	movlw	79
 12849  003122  6E3E               	movwf	dtoa@i^0,c
 12850  003124                     
 12851                           ; BSR set to: 0
 12852                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12853  003124  0E00               	movlw	0
 12854  003126  0102               	movlb	2	; () banked
 12855  003128  6F8F               	movwf	(_dbuf+79)& (0+255),b
 12856                           
 12857                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12858  00312A  EF13  F019         	goto	l4910
 12859  00312E                     l4900:
 12860                           
 12861                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12862  00312E  063E               	decf	dtoa@i^0,f,c
 12863  003130  A0D8               	btfss	status,0,c
 12864  003132  063F               	decf	(dtoa@i+1)^0,f,c
 12865  003134                     
 12866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12867  003134  0E40               	movlw	low _dbuf
 12868  003136  243E               	addwf	dtoa@i^0,w,c
 12869  003138  6ED9               	movwf	fsr2l,c
 12870  00313A  0E02               	movlw	high _dbuf
 12871  00313C  203F               	addwfc	(dtoa@i+1)^0,w,c
 12872  00313E  6EDA               	movwf	fsr2h,c
 12873  003140  C036  F001         	movff	dtoa@n,___aomod@dividend
 12874  003144  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12875  003148  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12876  00314C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12877  003150  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12878  003154  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12879  003158  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12880  00315C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12881  003160  0E0A               	movlw	10
 12882  003162  6E09               	movwf	___aomod@divisor^0,c
 12883  003164  0E00               	movlw	0
 12884  003166  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12885  003168  0E00               	movlw	0
 12886  00316A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12887  00316C  0E00               	movlw	0
 12888  00316E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12889  003170  0E00               	movlw	0
 12890  003172  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12891  003174  0E00               	movlw	0
 12892  003176  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12893  003178  0E00               	movlw	0
 12894  00317A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12895  00317C  0E00               	movlw	0
 12896  00317E  6E10               	movwf	(___aomod@divisor+7)^0,c
 12897  003180  EC01  F021         	call	___aomod	;wreg free
 12898  003184  C001  F026         	movff	?___aomod,??_dtoa
 12899  003188  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12900  00318C  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12901  003190  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12902  003194  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12903  003198  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12904  00319C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12905  0031A0  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12906  0031A4  C026  F013         	movff	??_dtoa,abs@a
 12907  0031A8  C028  F014         	movff	??_dtoa+2,abs@a+1
 12908  0031AC  ECFE  F02C         	call	_abs	;wreg free
 12909  0031B0  5013               	movf	?_abs^0,w,c
 12910  0031B2  0F30               	addlw	48
 12911  0031B4  6EDF               	movwf	indf2,c
 12912  0031B6                     
 12913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12914  0031B6  0630               	decf	dtoa@p^0,f,c
 12915  0031B8  A0D8               	btfss	status,0,c
 12916  0031BA  0631               	decf	(dtoa@p+1)^0,f,c
 12917  0031BC                     
 12918                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12919  0031BC  0632               	decf	dtoa@w^0,f,c
 12920  0031BE  A0D8               	btfss	status,0,c
 12921  0031C0  0633               	decf	(dtoa@w+1)^0,f,c
 12922  0031C2                     
 12923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12924  0031C2  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12925  0031C6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12926  0031CA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12927  0031CE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12928  0031D2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12929  0031D6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12930  0031DA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12931  0031DE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12932  0031E2  0E0A               	movlw	10
 12933  0031E4  6E09               	movwf	___aodiv@divisor^0,c
 12934  0031E6  0E00               	movlw	0
 12935  0031E8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12936  0031EA  0E00               	movlw	0
 12937  0031EC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12938  0031EE  0E00               	movlw	0
 12939  0031F0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12940  0031F2  0E00               	movlw	0
 12941  0031F4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12942  0031F6  0E00               	movlw	0
 12943  0031F8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12944  0031FA  0E00               	movlw	0
 12945  0031FC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12946  0031FE  0E00               	movlw	0
 12947  003200  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12948  003202  EC3D  F020         	call	___aodiv	;wreg free
 12949  003206  C001  F036         	movff	?___aodiv,dtoa@n
 12950  00320A  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12951  00320E  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12952  003212  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12953  003216  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12954  00321A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12955  00321E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12956  003222  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12957  003226                     l4910:
 12958                           
 12959                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12960  003226  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12961  003228  EF1E  F019         	goto	u5671
 12962  00322C  503F               	movf	(dtoa@i+1)^0,w,c
 12963  00322E  E108               	bnz	u5670
 12964  003230  043E               	decf	dtoa@i^0,w,c
 12965  003232  A0D8               	btfss	status,0,c
 12966  003234  EF1E  F019         	goto	u5671
 12967  003238  EF20  F019         	goto	u5670
 12968  00323C                     u5671:
 12969  00323C  EF51  F019         	goto	l4920
 12970  003240                     u5670:
 12971  003240  5036               	movf	dtoa@n^0,w,c
 12972  003242  1037               	iorwf	(dtoa@n+1)^0,w,c
 12973  003244  1038               	iorwf	(dtoa@n+2)^0,w,c
 12974  003246  1039               	iorwf	(dtoa@n+3)^0,w,c
 12975  003248  103A               	iorwf	(dtoa@n+4)^0,w,c
 12976  00324A  103B               	iorwf	(dtoa@n+5)^0,w,c
 12977  00324C  103C               	iorwf	(dtoa@n+6)^0,w,c
 12978  00324E  103D               	iorwf	(dtoa@n+7)^0,w,c
 12979  003250  A4D8               	btfss	status,2,c
 12980  003252  EF2D  F019         	goto	u5681
 12981  003256  EF2F  F019         	goto	u5680
 12982  00325A                     u5681:
 12983  00325A  EF97  F018         	goto	l4900
 12984  00325E                     u5680:
 12985  00325E  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12986  003260  EF3C  F019         	goto	u5690
 12987  003264  5031               	movf	(dtoa@p+1)^0,w,c
 12988  003266  E106               	bnz	u5691
 12989  003268  0430               	decf	dtoa@p^0,w,c
 12990  00326A  B0D8               	btfsc	status,0,c
 12991  00326C  EF3A  F019         	goto	u5691
 12992  003270  EF3C  F019         	goto	u5690
 12993  003274                     u5691:
 12994  003274  EF97  F018         	goto	l4900
 12995  003278                     u5690:
 12996  003278  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12997  00327A  EF47  F019         	goto	u5701
 12998  00327E  5033               	movf	(dtoa@w+1)^0,w,c
 12999  003280  E108               	bnz	u5700
 13000  003282  0432               	decf	dtoa@w^0,w,c
 13001  003284  A0D8               	btfss	status,0,c
 13002  003286  EF47  F019         	goto	u5701
 13003  00328A  EF49  F019         	goto	u5700
 13004  00328E                     u5701:
 13005  00328E  EF51  F019         	goto	l4920
 13006  003292                     u5700:
 13007  003292  0100               	movlb	0	; () banked
 13008  003294  B3F8               	btfsc	_flags& (0+255),1,b
 13009  003296  EF4F  F019         	goto	u5711
 13010  00329A  EF51  F019         	goto	u5710
 13011  00329E                     u5711:
 13012  00329E  EF97  F018         	goto	l4900
 13013  0032A2                     u5710:
 13014  0032A2                     l4920:
 13015                           
 13016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 13017  0032A2  5034               	movf	dtoa@s^0,w,c
 13018  0032A4  1035               	iorwf	(dtoa@s+1)^0,w,c
 13019  0032A6  A4D8               	btfss	status,2,c
 13020  0032A8  EF58  F019         	goto	u5721
 13021  0032AC  EF5A  F019         	goto	u5720
 13022  0032B0                     u5721:
 13023  0032B0  EF62  F019         	goto	l4924
 13024  0032B4                     u5720:
 13025  0032B4  0100               	movlb	0	; () banked
 13026  0032B6  A5F8               	btfss	_flags& (0+255),2,b
 13027  0032B8  EF60  F019         	goto	u5731
 13028  0032BC  EF62  F019         	goto	u5730
 13029  0032C0                     u5731:
 13030  0032C0  EF80  F019         	goto	l4934
 13031  0032C4                     u5730:
 13032  0032C4                     l4924:
 13033                           
 13034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 13035  0032C4  063E               	decf	dtoa@i^0,f,c
 13036  0032C6  A0D8               	btfss	status,0,c
 13037  0032C8  063F               	decf	(dtoa@i+1)^0,f,c
 13038  0032CA                     
 13039                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 13040  0032CA  5034               	movf	dtoa@s^0,w,c
 13041  0032CC  1035               	iorwf	(dtoa@s+1)^0,w,c
 13042  0032CE  A4D8               	btfss	status,2,c
 13043  0032D0  EF6C  F019         	goto	u5741
 13044  0032D4  EF6E  F019         	goto	u5740
 13045  0032D8                     u5741:
 13046  0032D8  EF74  F019         	goto	l4930
 13047  0032DC                     u5740:
 13048  0032DC  0E00               	movlw	0
 13049  0032DE  6E2F               	movwf	(_dtoa$2540+1)^0,c
 13050  0032E0  0E2B               	movlw	43
 13051  0032E2  6E2E               	movwf	_dtoa$2540^0,c
 13052  0032E4  EF78  F019         	goto	l4932
 13053  0032E8                     l4930:
 13054  0032E8  0E00               	movlw	0
 13055  0032EA  6E2F               	movwf	(_dtoa$2540+1)^0,c
 13056  0032EC  0E2D               	movlw	45
 13057  0032EE  6E2E               	movwf	_dtoa$2540^0,c
 13058  0032F0                     l4932:
 13059  0032F0  0E40               	movlw	low _dbuf
 13060  0032F2  243E               	addwf	dtoa@i^0,w,c
 13061  0032F4  6ED9               	movwf	fsr2l,c
 13062  0032F6  0E02               	movlw	high _dbuf
 13063  0032F8  203F               	addwfc	(dtoa@i+1)^0,w,c
 13064  0032FA  6EDA               	movwf	fsr2h,c
 13065  0032FC  C02E  FFDF         	movff	_dtoa$2540,indf2
 13066  003300                     l4934:
 13067                           
 13068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 13069  003300  C01C  F011         	movff	dtoa@fp,pad@fp
 13070  003304  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13071  003308  0E40               	movlw	low _dbuf
 13072  00330A  243E               	addwf	dtoa@i^0,w,c
 13073  00330C  6E13               	movwf	pad@buf^0,c
 13074  00330E  0E02               	movlw	high _dbuf
 13075  003310  203F               	addwfc	(dtoa@i+1)^0,w,c
 13076  003312  6E14               	movwf	(pad@buf+1)^0,c
 13077  003314  C032  F015         	movff	dtoa@w,pad@p
 13078  003318  C033  F016         	movff	dtoa@w+1,pad@p+1
 13079  00331C  EC9C  F027         	call	_pad	;wreg free
 13080  003320  C011  F01C         	movff	?_pad,?_dtoa
 13081  003324  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13082  003328  0012               	return		;funcret
 13083  00332A                     __end_of_dtoa:
 13084                           	callstack 0
 13085                           
 13086 ;; *************** function _pad *****************
 13087 ;; Defined at:
 13088 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 13089 ;; Parameters:    Size  Location     Type
 13090 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13091 ;;		 -> sprintf@f(6), 
 13092 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13093 ;;		 -> dbuf(80), 
 13094 ;;  p               2   20[COMRAM] int 
 13095 ;; Auto vars:     Size  Location     Type
 13096 ;;  w               2   25[COMRAM] int 
 13097 ;;  i               2   23[COMRAM] int 
 13098 ;; Return value:  Size  Location     Type
 13099 ;;                  2   16[COMRAM] int 
 13100 ;; Registers used:
 13101 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13102 ;; Tracked objects:
 13103 ;;		On entry : 0/0
 13104 ;;		On exit  : 0/0
 13105 ;;		Unchanged: 0/0
 13106 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13107 ;;      Params:         6       0       0       0       0       0       0
 13108 ;;      Locals:         4       0       0       0       0       0       0
 13109 ;;      Temps:          1       0       0       0       0       0       0
 13110 ;;      Totals:        11       0       0       0       0       0       0
 13111 ;;Total ram usage:       11 bytes
 13112 ;; Hardware stack levels used:    1
 13113 ;; Hardware stack levels required when called:    4
 13114 ;; This function calls:
 13115 ;;		_fputc
 13116 ;;		_fputs
 13117 ;;		_strlen
 13118 ;; This function is called by:
 13119 ;;		_dtoa
 13120 ;;		_efgtoa
 13121 ;; This function uses a non-reentrant model
 13122 ;;
 13123                           
 13124                           	psect	text48
 13125  004F38                     __ptext48:
 13126                           	callstack 0
 13127  004F38                     _pad:
 13128                           	callstack 19
 13129  004F38                     
 13130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13131  004F38  0100               	movlb	0	; () banked
 13132  004F3A  A1F8               	btfss	_flags& (0+255),0,b
 13133  004F3C  EFA2  F027         	goto	u5291
 13134  004F40  EFA4  F027         	goto	u5290
 13135  004F44                     u5291:
 13136  004F44  EFAE  F027         	goto	l4774
 13137  004F48                     u5290:
 13138  004F48                     
 13139                           ; BSR set to: 0
 13140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13141  004F48  C013  F00A         	movff	pad@buf,fputs@s
 13142  004F4C  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13143  004F50  C011  F00C         	movff	pad@fp,fputs@fp
 13144  004F54  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13145  004F58  ECBB  F02C         	call	_fputs	;wreg free
 13146  004F5C                     l4774:
 13147                           
 13148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13149  004F5C  BE16               	btfsc	(pad@p+1)^0,7,c
 13150  004F5E  EFB3  F027         	goto	u5301
 13151  004F62  EFB5  F027         	goto	u5300
 13152  004F66                     u5301:
 13153  004F66  EFBB  F027         	goto	l4778
 13154  004F6A                     u5300:
 13155  004F6A  C015  F01A         	movff	pad@p,pad@w
 13156  004F6E  C016  F01B         	movff	pad@p+1,pad@w+1
 13157  004F72  EFBF  F027         	goto	l1269
 13158  004F76                     l4778:
 13159  004F76  0E00               	movlw	0
 13160  004F78  6E1B               	movwf	(pad@w+1)^0,c
 13161  004F7A  0E00               	movlw	0
 13162  004F7C  6E1A               	movwf	pad@w^0,c
 13163  004F7E                     l1269:
 13164                           
 13165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13166  004F7E  0E00               	movlw	0
 13167  004F80  6E19               	movwf	(pad@i+1)^0,c
 13168  004F82  0E00               	movlw	0
 13169  004F84  6E18               	movwf	pad@i^0,c
 13170                           
 13171                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13172  004F86  EFD1  F027         	goto	l4784
 13173  004F8A                     l4780:
 13174                           
 13175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13176  004F8A  0E00               	movlw	0
 13177  004F8C  6E02               	movwf	(fputc@c+1)^0,c
 13178  004F8E  0E20               	movlw	32
 13179  004F90  6E01               	movwf	fputc@c^0,c
 13180  004F92  C011  F003         	movff	pad@fp,fputc@fp
 13181  004F96  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13182  004F9A  EC37  F027         	call	_fputc	;wreg free
 13183  004F9E                     
 13184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13185  004F9E  4A18               	infsnz	pad@i^0,f,c
 13186  004FA0  2A19               	incf	(pad@i+1)^0,f,c
 13187  004FA2                     l4784:
 13188                           
 13189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13190  004FA2  501A               	movf	pad@w^0,w,c
 13191  004FA4  5C18               	subwf	pad@i^0,w,c
 13192  004FA6  5019               	movf	(pad@i+1)^0,w,c
 13193  004FA8  0A80               	xorlw	128
 13194  004FAA  6E17               	movwf	??_pad^0,c
 13195  004FAC  501B               	movf	(pad@w+1)^0,w,c
 13196  004FAE  0A80               	xorlw	128
 13197  004FB0  5817               	subwfb	??_pad^0,w,c
 13198  004FB2  A0D8               	btfss	status,0,c
 13199  004FB4  EFDE  F027         	goto	u5311
 13200  004FB8  EFE0  F027         	goto	u5310
 13201  004FBC                     u5311:
 13202  004FBC  EFC5  F027         	goto	l4780
 13203  004FC0                     u5310:
 13204  004FC0                     
 13205                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13206  004FC0  0100               	movlb	0	; () banked
 13207  004FC2  B1F8               	btfsc	_flags& (0+255),0,b
 13208  004FC4  EFE6  F027         	goto	u5321
 13209  004FC8  EFE8  F027         	goto	u5320
 13210  004FCC                     u5321:
 13211  004FCC  EFF2  F027         	goto	l4788
 13212  004FD0                     u5320:
 13213  004FD0                     
 13214                           ; BSR set to: 0
 13215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13216  004FD0  C013  F00A         	movff	pad@buf,fputs@s
 13217  004FD4  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13218  004FD8  C011  F00C         	movff	pad@fp,fputs@fp
 13219  004FDC  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13220  004FE0  ECBB  F02C         	call	_fputs	;wreg free
 13221  004FE4                     l4788:
 13222                           
 13223                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 13224  004FE4  C013  F001         	movff	pad@buf,strlen@s
 13225  004FE8  C014  F002         	movff	pad@buf+1,strlen@s+1
 13226  004FEC  ECE6  F02D         	call	_strlen	;wreg free
 13227  004FF0  501A               	movf	pad@w^0,w,c
 13228  004FF2  2401               	addwf	?_strlen^0,w,c
 13229  004FF4  6E11               	movwf	?_pad^0,c
 13230  004FF6  501B               	movf	(pad@w+1)^0,w,c
 13231  004FF8  2002               	addwfc	(?_strlen+1)^0,w,c
 13232  004FFA  6E12               	movwf	(?_pad+1)^0,c
 13233  004FFC  0012               	return		;funcret
 13234  004FFE                     __end_of_pad:
 13235                           	callstack 0
 13236                           
 13237 ;; *************** function _strlen *****************
 13238 ;; Defined at:
 13239 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 13240 ;; Parameters:    Size  Location     Type
 13241 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13242 ;;		 -> dbuf(80), 
 13243 ;; Auto vars:     Size  Location     Type
 13244 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13245 ;;		 -> dbuf(80), 
 13246 ;; Return value:  Size  Location     Type
 13247 ;;                  2    0[COMRAM] unsigned int 
 13248 ;; Registers used:
 13249 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13250 ;; Tracked objects:
 13251 ;;		On entry : 0/0
 13252 ;;		On exit  : 0/0
 13253 ;;		Unchanged: 0/0
 13254 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13255 ;;      Params:         2       0       0       0       0       0       0
 13256 ;;      Locals:         2       0       0       0       0       0       0
 13257 ;;      Temps:          0       0       0       0       0       0       0
 13258 ;;      Totals:         4       0       0       0       0       0       0
 13259 ;;Total ram usage:        4 bytes
 13260 ;; Hardware stack levels used:    1
 13261 ;; Hardware stack levels required when called:    1
 13262 ;; This function calls:
 13263 ;;		Nothing
 13264 ;; This function is called by:
 13265 ;;		_pad
 13266 ;; This function uses a non-reentrant model
 13267 ;;
 13268                           
 13269                           	psect	text49
 13270  005BCC                     __ptext49:
 13271                           	callstack 0
 13272  005BCC                     _strlen:
 13273                           	callstack 21
 13274  005BCC  C001  F003         	movff	strlen@s,strlen@a
 13275  005BD0  C002  F004         	movff	strlen@s+1,strlen@a+1
 13276  005BD4  EFEE  F02D         	goto	l4230
 13277  005BD8                     l4228:
 13278  005BD8  4A01               	infsnz	strlen@s^0,f,c
 13279  005BDA  2A02               	incf	(strlen@s+1)^0,f,c
 13280  005BDC                     l4230:
 13281  005BDC  C001  FFD9         	movff	strlen@s,fsr2l
 13282  005BE0  C002  FFDA         	movff	strlen@s+1,fsr2h
 13283  005BE4  50DF               	movf	indf2,w,c
 13284  005BE6  A4D8               	btfss	status,2,c
 13285  005BE8  EFF8  F02D         	goto	u4431
 13286  005BEC  EFFA  F02D         	goto	u4430
 13287  005BF0                     u4431:
 13288  005BF0  EFEC  F02D         	goto	l4228
 13289  005BF4                     u4430:
 13290  005BF4  5003               	movf	strlen@a^0,w,c
 13291  005BF6  5C01               	subwf	strlen@s^0,w,c
 13292  005BF8  6E01               	movwf	?_strlen^0,c
 13293  005BFA  5004               	movf	(strlen@a+1)^0,w,c
 13294  005BFC  5802               	subwfb	(strlen@s+1)^0,w,c
 13295  005BFE  6E02               	movwf	(?_strlen+1)^0,c
 13296  005C00  0012               	return		;funcret
 13297  005C02                     __end_of_strlen:
 13298                           	callstack 0
 13299                           
 13300 ;; *************** function _fputs *****************
 13301 ;; Defined at:
 13302 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 13303 ;; Parameters:    Size  Location     Type
 13304 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13305 ;;		 -> dbuf(80), 
 13306 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13307 ;;		 -> sprintf@f(6), 
 13308 ;; Auto vars:     Size  Location     Type
 13309 ;;  i               2   14[COMRAM] int 
 13310 ;;  c               1   13[COMRAM] unsigned char 
 13311 ;; Return value:  Size  Location     Type
 13312 ;;                  2    9[COMRAM] int 
 13313 ;; Registers used:
 13314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13315 ;; Tracked objects:
 13316 ;;		On entry : 0/0
 13317 ;;		On exit  : 0/0
 13318 ;;		Unchanged: 0/0
 13319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13320 ;;      Params:         4       0       0       0       0       0       0
 13321 ;;      Locals:         3       0       0       0       0       0       0
 13322 ;;      Temps:          0       0       0       0       0       0       0
 13323 ;;      Totals:         7       0       0       0       0       0       0
 13324 ;;Total ram usage:        7 bytes
 13325 ;; Hardware stack levels used:    1
 13326 ;; Hardware stack levels required when called:    3
 13327 ;; This function calls:
 13328 ;;		_fputc
 13329 ;; This function is called by:
 13330 ;;		_pad
 13331 ;; This function uses a non-reentrant model
 13332 ;;
 13333                           
 13334                           	psect	text50
 13335  005976                     __ptext50:
 13336                           	callstack 0
 13337  005976                     _fputs:
 13338                           	callstack 19
 13339  005976  0E00               	movlw	0
 13340  005978  6E10               	movwf	(fputs@i+1)^0,c
 13341  00597A  0E00               	movlw	0
 13342  00597C  6E0F               	movwf	fputs@i^0,c
 13343  00597E  EFCC  F02C         	goto	l4224
 13344  005982                     l4220:
 13345  005982  C00E  F001         	movff	fputs@c,fputc@c
 13346  005986  6A02               	clrf	(fputc@c+1)^0,c
 13347  005988  C00C  F003         	movff	fputs@fp,fputc@fp
 13348  00598C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13349  005990  EC37  F027         	call	_fputc	;wreg free
 13350  005994  4A0F               	infsnz	fputs@i^0,f,c
 13351  005996  2A10               	incf	(fputs@i+1)^0,f,c
 13352  005998                     l4224:
 13353  005998  500F               	movf	fputs@i^0,w,c
 13354  00599A  240A               	addwf	fputs@s^0,w,c
 13355  00599C  6ED9               	movwf	fsr2l,c
 13356  00599E  5010               	movf	(fputs@i+1)^0,w,c
 13357  0059A0  200B               	addwfc	(fputs@s+1)^0,w,c
 13358  0059A2  6EDA               	movwf	fsr2h,c
 13359  0059A4  50DF               	movf	indf2,w,c
 13360  0059A6  6E0E               	movwf	fputs@c^0,c
 13361  0059A8  500E               	movf	fputs@c^0,w,c
 13362  0059AA  A4D8               	btfss	status,2,c
 13363  0059AC  EFDA  F02C         	goto	u4421
 13364  0059B0  EFDC  F02C         	goto	u4420
 13365  0059B4                     u4421:
 13366  0059B4  EFC1  F02C         	goto	l4220
 13367  0059B8                     u4420:
 13368  0059B8  0012               	return		;funcret
 13369  0059BA                     __end_of_fputs:
 13370                           	callstack 0
 13371                           
 13372 ;; *************** function _fputc *****************
 13373 ;; Defined at:
 13374 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 13375 ;; Parameters:    Size  Location     Type
 13376 ;;  c               2    0[COMRAM] int 
 13377 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13378 ;;		 -> sprintf@f(6), 
 13379 ;; Auto vars:     Size  Location     Type
 13380 ;;		None
 13381 ;; Return value:  Size  Location     Type
 13382 ;;                  2    0[COMRAM] int 
 13383 ;; Registers used:
 13384 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13385 ;; Tracked objects:
 13386 ;;		On entry : 0/0
 13387 ;;		On exit  : 0/0
 13388 ;;		Unchanged: 0/0
 13389 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13390 ;;      Params:         4       0       0       0       0       0       0
 13391 ;;      Locals:         0       0       0       0       0       0       0
 13392 ;;      Temps:          5       0       0       0       0       0       0
 13393 ;;      Totals:         9       0       0       0       0       0       0
 13394 ;;Total ram usage:        9 bytes
 13395 ;; Hardware stack levels used:    1
 13396 ;; Hardware stack levels required when called:    2
 13397 ;; This function calls:
 13398 ;;		_putch
 13399 ;; This function is called by:
 13400 ;;		_pad
 13401 ;;		_vfpfcnvrt
 13402 ;;		_fputs
 13403 ;; This function uses a non-reentrant model
 13404 ;;
 13405                           
 13406                           	psect	text51
 13407  004E6E                     __ptext51:
 13408                           	callstack 0
 13409  004E6E                     _fputc:
 13410                           	callstack 22
 13411  004E6E  5003               	movf	fputc@fp^0,w,c
 13412  004E70  1004               	iorwf	(fputc@fp+1)^0,w,c
 13413  004E72  B4D8               	btfsc	status,2,c
 13414  004E74  EF3E  F027         	goto	u3991
 13415  004E78  EF40  F027         	goto	u3990
 13416  004E7C                     u3991:
 13417  004E7C  EF49  F027         	goto	l4006
 13418  004E80                     u3990:
 13419  004E80  5003               	movf	fputc@fp^0,w,c
 13420  004E82  1004               	iorwf	(fputc@fp+1)^0,w,c
 13421  004E84  A4D8               	btfss	status,2,c
 13422  004E86  EF47  F027         	goto	u4001
 13423  004E8A  EF49  F027         	goto	u4000
 13424  004E8E                     u4001:
 13425  004E8E  EF4E  F027         	goto	l4008
 13426  004E92                     u4000:
 13427  004E92                     l4006:
 13428  004E92  5001               	movf	fputc@c^0,w,c
 13429  004E94  ECC3  F02E         	call	_putch
 13430  004E98  EF9B  F027         	goto	l1529
 13431  004E9C                     l4008:
 13432  004E9C  EE20 F004          	lfsr	2,4
 13433  004EA0  5003               	movf	fputc@fp^0,w,c
 13434  004EA2  26D9               	addwf	fsr2l,f,c
 13435  004EA4  5004               	movf	(fputc@fp+1)^0,w,c
 13436  004EA6  22DA               	addwfc	fsr2h,f,c
 13437  004EA8  50DE               	movf	postinc2,w,c
 13438  004EAA  10DE               	iorwf	postinc2,w,c
 13439  004EAC  B4D8               	btfsc	status,2,c
 13440  004EAE  EF5B  F027         	goto	u4011
 13441  004EB2  EF5D  F027         	goto	u4010
 13442  004EB6                     u4011:
 13443  004EB6  EF78  F027         	goto	l4012
 13444  004EBA                     u4010:
 13445  004EBA  EE20 F004          	lfsr	2,4
 13446  004EBE  5003               	movf	fputc@fp^0,w,c
 13447  004EC0  26D9               	addwf	fsr2l,f,c
 13448  004EC2  5004               	movf	(fputc@fp+1)^0,w,c
 13449  004EC4  22DA               	addwfc	fsr2h,f,c
 13450  004EC6  EE10 F002          	lfsr	1,2
 13451  004ECA  5003               	movf	fputc@fp^0,w,c
 13452  004ECC  26E1               	addwf	fsr1l,f,c
 13453  004ECE  5004               	movf	(fputc@fp+1)^0,w,c
 13454  004ED0  22E2               	addwfc	fsr1h,f,c
 13455  004ED2  50DE               	movf	postinc2,w,c
 13456  004ED4  5CE6               	subwf	postinc1,w,c
 13457  004ED6  50E6               	movf	postinc1,w,c
 13458  004ED8  0A80               	xorlw	128
 13459  004EDA  6E09               	movwf	(??_fputc+4)^0,c
 13460  004EDC  50DE               	movf	postinc2,w,c
 13461  004EDE  0A80               	xorlw	128
 13462  004EE0  5809               	subwfb	(??_fputc+4)^0,w,c
 13463  004EE2  B0D8               	btfsc	status,0,c
 13464  004EE4  EF76  F027         	goto	u4021
 13465  004EE8  EF78  F027         	goto	u4020
 13466  004EEC                     u4021:
 13467  004EEC  EF9B  F027         	goto	l1529
 13468  004EF0                     u4020:
 13469  004EF0                     l4012:
 13470  004EF0  EE20 F002          	lfsr	2,2
 13471  004EF4  5003               	movf	fputc@fp^0,w,c
 13472  004EF6  26D9               	addwf	fsr2l,f,c
 13473  004EF8  5004               	movf	(fputc@fp+1)^0,w,c
 13474  004EFA  22DA               	addwfc	fsr2h,f,c
 13475  004EFC  CFDE F005          	movff	postinc2,??_fputc
 13476  004F00  CFDD F006          	movff	postdec2,??_fputc+1
 13477  004F04  C003  FFD9         	movff	fputc@fp,fsr2l
 13478  004F08  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13479  004F0C  CFDE F007          	movff	postinc2,??_fputc+2
 13480  004F10  CFDD F008          	movff	postdec2,??_fputc+3
 13481  004F14  5005               	movf	??_fputc^0,w,c
 13482  004F16  2407               	addwf	(??_fputc+2)^0,w,c
 13483  004F18  6ED9               	movwf	fsr2l,c
 13484  004F1A  5006               	movf	(??_fputc+1)^0,w,c
 13485  004F1C  2008               	addwfc	(??_fputc+3)^0,w,c
 13486  004F1E  6EDA               	movwf	fsr2h,c
 13487  004F20  C001  FFDF         	movff	fputc@c,indf2
 13488  004F24  EE20 F002          	lfsr	2,2
 13489  004F28  5003               	movf	fputc@fp^0,w,c
 13490  004F2A  26D9               	addwf	fsr2l,f,c
 13491  004F2C  5004               	movf	(fputc@fp+1)^0,w,c
 13492  004F2E  22DA               	addwfc	fsr2h,f,c
 13493  004F30  2ADE               	incf	postinc2,f,c
 13494  004F32  0E00               	movlw	0
 13495  004F34  22DD               	addwfc	postdec2,f,c
 13496  004F36                     l1529:
 13497  004F36  0012               	return		;funcret
 13498  004F38                     __end_of_fputc:
 13499                           	callstack 0
 13500                           
 13501 ;; *************** function _putch *****************
 13502 ;; Defined at:
 13503 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13504 ;; Parameters:    Size  Location     Type
 13505 ;;  c               1    wreg     unsigned char 
 13506 ;; Auto vars:     Size  Location     Type
 13507 ;;  c               1    0[COMRAM] unsigned char 
 13508 ;; Return value:  Size  Location     Type
 13509 ;;                  1    wreg      void 
 13510 ;; Registers used:
 13511 ;;		wreg
 13512 ;; Tracked objects:
 13513 ;;		On entry : 0/0
 13514 ;;		On exit  : 0/0
 13515 ;;		Unchanged: 0/0
 13516 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13517 ;;      Params:         0       0       0       0       0       0       0
 13518 ;;      Locals:         0       0       0       0       0       0       0
 13519 ;;      Temps:          0       0       0       0       0       0       0
 13520 ;;      Totals:         0       0       0       0       0       0       0
 13521 ;;Total ram usage:        0 bytes
 13522 ;; Hardware stack levels used:    1
 13523 ;; Hardware stack levels required when called:    1
 13524 ;; This function calls:
 13525 ;;		Nothing
 13526 ;; This function is called by:
 13527 ;;		_fputc
 13528 ;; This function uses a non-reentrant model
 13529 ;;
 13530                           
 13531                           	psect	text52
 13532  005D86                     __ptext52:
 13533                           	callstack 0
 13534  005D86                     _putch:
 13535                           	callstack 22
 13536  005D86  0012               	return		;funcret
 13537  005D88                     __end_of_putch:
 13538                           	callstack 0
 13539                           
 13540 ;; *************** function _abs *****************
 13541 ;; Defined at:
 13542 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13543 ;; Parameters:    Size  Location     Type
 13544 ;;  a               2   18[COMRAM] int 
 13545 ;; Auto vars:     Size  Location     Type
 13546 ;;		None
 13547 ;; Return value:  Size  Location     Type
 13548 ;;                  2   18[COMRAM] int 
 13549 ;; Registers used:
 13550 ;;		wreg, status,2, status,0
 13551 ;; Tracked objects:
 13552 ;;		On entry : 0/0
 13553 ;;		On exit  : 0/0
 13554 ;;		Unchanged: 0/0
 13555 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13556 ;;      Params:         2       0       0       0       0       0       0
 13557 ;;      Locals:         0       0       0       0       0       0       0
 13558 ;;      Temps:          2       0       0       0       0       0       0
 13559 ;;      Totals:         4       0       0       0       0       0       0
 13560 ;;Total ram usage:        4 bytes
 13561 ;; Hardware stack levels used:    1
 13562 ;; Hardware stack levels required when called:    1
 13563 ;; This function calls:
 13564 ;;		Nothing
 13565 ;; This function is called by:
 13566 ;;		_dtoa
 13567 ;; This function uses a non-reentrant model
 13568 ;;
 13569                           
 13570                           	psect	text53
 13571  0059FC                     __ptext53:
 13572                           	callstack 0
 13573  0059FC                     _abs:
 13574                           	callstack 22
 13575  0059FC  BE14               	btfsc	(abs@a+1)^0,7,c
 13576  0059FE  EF0B  F02D         	goto	u5330
 13577  005A02  5014               	movf	(abs@a+1)^0,w,c
 13578  005A04  E106               	bnz	u5331
 13579  005A06  0413               	decf	abs@a^0,w,c
 13580  005A08  B0D8               	btfsc	status,0,c
 13581  005A0A  EF09  F02D         	goto	u5331
 13582  005A0E  EF0B  F02D         	goto	u5330
 13583  005A12                     u5331:
 13584  005A12  EF19  F02D         	goto	l1450
 13585  005A16                     u5330:
 13586  005A16  C013  F015         	movff	abs@a,??_abs
 13587  005A1A  C014  F016         	movff	abs@a+1,??_abs+1
 13588  005A1E  1E15               	comf	??_abs^0,f,c
 13589  005A20  1E16               	comf	(??_abs+1)^0,f,c
 13590  005A22  4A15               	infsnz	??_abs^0,f,c
 13591  005A24  2A16               	incf	(??_abs+1)^0,f,c
 13592  005A26  C015  F013         	movff	??_abs,?_abs
 13593  005A2A  C016  F014         	movff	??_abs+1,?_abs+1
 13594  005A2E  EF1D  F02D         	goto	l1453
 13595  005A32                     l1450:
 13596  005A32  C013  F013         	movff	abs@a,?_abs
 13597  005A36  C014  F014         	movff	abs@a+1,?_abs+1
 13598  005A3A                     l1453:
 13599  005A3A  0012               	return		;funcret
 13600  005A3C                     __end_of_abs:
 13601                           	callstack 0
 13602                           
 13603 ;; *************** function ___aomod *****************
 13604 ;; Defined at:
 13605 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13606 ;; Parameters:    Size  Location     Type
 13607 ;;  dividend        8    0[COMRAM] long long 
 13608 ;;  divisor         8    8[COMRAM] long long 
 13609 ;; Auto vars:     Size  Location     Type
 13610 ;;  sign            1   17[COMRAM] unsigned char 
 13611 ;;  counter         1   16[COMRAM] unsigned char 
 13612 ;; Return value:  Size  Location     Type
 13613 ;;                  8    0[COMRAM] long long 
 13614 ;; Registers used:
 13615 ;;		wreg, status,2, status,0
 13616 ;; Tracked objects:
 13617 ;;		On entry : 0/0
 13618 ;;		On exit  : 0/0
 13619 ;;		Unchanged: 0/0
 13620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13621 ;;      Params:        16       0       0       0       0       0       0
 13622 ;;      Locals:         2       0       0       0       0       0       0
 13623 ;;      Temps:          0       0       0       0       0       0       0
 13624 ;;      Totals:        18       0       0       0       0       0       0
 13625 ;;Total ram usage:       18 bytes
 13626 ;; Hardware stack levels used:    1
 13627 ;; Hardware stack levels required when called:    1
 13628 ;; This function calls:
 13629 ;;		Nothing
 13630 ;; This function is called by:
 13631 ;;		_dtoa
 13632 ;; This function uses a non-reentrant model
 13633 ;;
 13634                           
 13635                           	psect	text54
 13636  004202                     __ptext54:
 13637                           	callstack 0
 13638  004202                     ___aomod:
 13639                           	callstack 22
 13640  004202  0E00               	movlw	0
 13641  004204  6E12               	movwf	___aomod@sign^0,c
 13642  004206  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13643  004208  EF0A  F021         	goto	u4530
 13644  00420C  EF08  F021         	goto	u4531
 13645  004210                     u4531:
 13646  004210  EF1C  F021         	goto	l4298
 13647  004214                     u4530:
 13648  004214  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13649  004216  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13650  004218  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13651  00421A  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13652  00421C  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13653  00421E  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13654  004220  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13655  004222  6C01               	negf	___aomod@dividend^0,c
 13656  004224  0E00               	movlw	0
 13657  004226  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13658  004228  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13659  00422A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13660  00422C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13661  00422E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13662  004230  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13663  004232  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13664  004234  0E01               	movlw	1
 13665  004236  6E12               	movwf	___aomod@sign^0,c
 13666  004238                     l4298:
 13667  004238  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13668  00423A  EF23  F021         	goto	u4540
 13669  00423E  EF21  F021         	goto	u4541
 13670  004242                     u4541:
 13671  004242  EF33  F021         	goto	l4302
 13672  004246                     u4540:
 13673  004246  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13674  004248  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13675  00424A  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13676  00424C  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13677  00424E  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13678  004250  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13679  004252  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13680  004254  6C09               	negf	___aomod@divisor^0,c
 13681  004256  0E00               	movlw	0
 13682  004258  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13683  00425A  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13684  00425C  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13685  00425E  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13686  004260  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13687  004262  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13688  004264  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13689  004266                     l4302:
 13690  004266  5009               	movf	___aomod@divisor^0,w,c
 13691  004268  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13692  00426A  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13693  00426C  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13694  00426E  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13695  004270  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13696  004272  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13697  004274  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13698  004276  B4D8               	btfsc	status,2,c
 13699  004278  EF40  F021         	goto	u4551
 13700  00427C  EF42  F021         	goto	u4550
 13701  004280                     u4551:
 13702  004280  EF8A  F021         	goto	l4318
 13703  004284                     u4550:
 13704  004284  0E01               	movlw	1
 13705  004286  6E11               	movwf	___aomod@counter^0,c
 13706  004288  EF50  F021         	goto	l4308
 13707  00428C                     l4306:
 13708  00428C  90D8               	bcf	status,0,c
 13709  00428E  3609               	rlcf	___aomod@divisor^0,f,c
 13710  004290  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13711  004292  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13712  004294  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13713  004296  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13714  004298  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13715  00429A  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13716  00429C  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13717  00429E  2A11               	incf	___aomod@counter^0,f,c
 13718  0042A0                     l4308:
 13719  0042A0  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13720  0042A2  EF55  F021         	goto	u4561
 13721  0042A6  EF57  F021         	goto	u4560
 13722  0042AA                     u4561:
 13723  0042AA  EF46  F021         	goto	l4306
 13724  0042AE                     u4560:
 13725  0042AE                     l4310:
 13726  0042AE  5009               	movf	___aomod@divisor^0,w,c
 13727  0042B0  5C01               	subwf	___aomod@dividend^0,w,c
 13728  0042B2  500A               	movf	(___aomod@divisor+1)^0,w,c
 13729  0042B4  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13730  0042B6  500B               	movf	(___aomod@divisor+2)^0,w,c
 13731  0042B8  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13732  0042BA  500C               	movf	(___aomod@divisor+3)^0,w,c
 13733  0042BC  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13734  0042BE  500D               	movf	(___aomod@divisor+4)^0,w,c
 13735  0042C0  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13736  0042C2  500E               	movf	(___aomod@divisor+5)^0,w,c
 13737  0042C4  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13738  0042C6  500F               	movf	(___aomod@divisor+6)^0,w,c
 13739  0042C8  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13740  0042CA  5010               	movf	(___aomod@divisor+7)^0,w,c
 13741  0042CC  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13742  0042CE  A0D8               	btfss	status,0,c
 13743  0042D0  EF6C  F021         	goto	u4571
 13744  0042D4  EF6E  F021         	goto	u4570
 13745  0042D8                     u4571:
 13746  0042D8  EF7E  F021         	goto	l4314
 13747  0042DC                     u4570:
 13748  0042DC  5009               	movf	___aomod@divisor^0,w,c
 13749  0042DE  5E01               	subwf	___aomod@dividend^0,f,c
 13750  0042E0  500A               	movf	(___aomod@divisor+1)^0,w,c
 13751  0042E2  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13752  0042E4  500B               	movf	(___aomod@divisor+2)^0,w,c
 13753  0042E6  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13754  0042E8  500C               	movf	(___aomod@divisor+3)^0,w,c
 13755  0042EA  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13756  0042EC  500D               	movf	(___aomod@divisor+4)^0,w,c
 13757  0042EE  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13758  0042F0  500E               	movf	(___aomod@divisor+5)^0,w,c
 13759  0042F2  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13760  0042F4  500F               	movf	(___aomod@divisor+6)^0,w,c
 13761  0042F6  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13762  0042F8  5010               	movf	(___aomod@divisor+7)^0,w,c
 13763  0042FA  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13764  0042FC                     l4314:
 13765  0042FC  90D8               	bcf	status,0,c
 13766  0042FE  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13767  004300  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13768  004302  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13769  004304  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13770  004306  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13771  004308  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13772  00430A  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13773  00430C  3209               	rrcf	___aomod@divisor^0,f,c
 13774  00430E  2E11               	decfsz	___aomod@counter^0,f,c
 13775  004310  EF57  F021         	goto	l4310
 13776  004314                     l4318:
 13777  004314  5012               	movf	___aomod@sign^0,w,c
 13778  004316  B4D8               	btfsc	status,2,c
 13779  004318  EF90  F021         	goto	u4581
 13780  00431C  EF92  F021         	goto	u4580
 13781  004320                     u4581:
 13782  004320  EFA2  F021         	goto	l4322
 13783  004324                     u4580:
 13784  004324  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13785  004326  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13786  004328  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13787  00432A  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13788  00432C  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13789  00432E  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13790  004330  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13791  004332  6C01               	negf	___aomod@dividend^0,c
 13792  004334  0E00               	movlw	0
 13793  004336  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13794  004338  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13795  00433A  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13796  00433C  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13797  00433E  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13798  004340  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13799  004342  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13800  004344                     l4322:
 13801  004344  C001  F001         	movff	___aomod@dividend,?___aomod
 13802  004348  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13803  00434C  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13804  004350  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13805  004354  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13806  004358  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13807  00435C  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13808  004360  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13809  004364  0012               	return		;funcret
 13810  004366                     __end_of___aomod:
 13811                           	callstack 0
 13812                           
 13813 ;; *************** function ___aodiv *****************
 13814 ;; Defined at:
 13815 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13816 ;; Parameters:    Size  Location     Type
 13817 ;;  dividend        8    0[COMRAM] long long 
 13818 ;;  divisor         8    8[COMRAM] long long 
 13819 ;; Auto vars:     Size  Location     Type
 13820 ;;  quotient        8   18[COMRAM] long long 
 13821 ;;  sign            1   17[COMRAM] unsigned char 
 13822 ;;  counter         1   16[COMRAM] unsigned char 
 13823 ;; Return value:  Size  Location     Type
 13824 ;;                  8    0[COMRAM] long long 
 13825 ;; Registers used:
 13826 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13827 ;; Tracked objects:
 13828 ;;		On entry : 0/0
 13829 ;;		On exit  : 0/0
 13830 ;;		Unchanged: 0/0
 13831 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13832 ;;      Params:        16       0       0       0       0       0       0
 13833 ;;      Locals:        10       0       0       0       0       0       0
 13834 ;;      Temps:          0       0       0       0       0       0       0
 13835 ;;      Totals:        26       0       0       0       0       0       0
 13836 ;;Total ram usage:       26 bytes
 13837 ;; Hardware stack levels used:    1
 13838 ;; Hardware stack levels required when called:    1
 13839 ;; This function calls:
 13840 ;;		Nothing
 13841 ;; This function is called by:
 13842 ;;		_dtoa
 13843 ;; This function uses a non-reentrant model
 13844 ;;
 13845                           
 13846                           	psect	text55
 13847  00407A                     __ptext55:
 13848                           	callstack 0
 13849  00407A                     ___aodiv:
 13850                           	callstack 22
 13851  00407A  0E00               	movlw	0
 13852  00407C  6E12               	movwf	___aodiv@sign^0,c
 13853  00407E  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13854  004080  EF46  F020         	goto	u4460
 13855  004084  EF44  F020         	goto	u4461
 13856  004088                     u4461:
 13857  004088  EF58  F020         	goto	l4254
 13858  00408C                     u4460:
 13859  00408C  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13860  00408E  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13861  004090  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13862  004092  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13863  004094  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13864  004096  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13865  004098  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13866  00409A  6C09               	negf	___aodiv@divisor^0,c
 13867  00409C  0E00               	movlw	0
 13868  00409E  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13869  0040A0  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13870  0040A2  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13871  0040A4  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13872  0040A6  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13873  0040A8  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13874  0040AA  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13875  0040AC  0E01               	movlw	1
 13876  0040AE  6E12               	movwf	___aodiv@sign^0,c
 13877  0040B0                     l4254:
 13878  0040B0  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13879  0040B2  EF5F  F020         	goto	u4470
 13880  0040B6  EF5D  F020         	goto	u4471
 13881  0040BA                     u4471:
 13882  0040BA  EF71  F020         	goto	l4260
 13883  0040BE                     u4470:
 13884  0040BE  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13885  0040C0  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13886  0040C2  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13887  0040C4  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13888  0040C6  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13889  0040C8  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13890  0040CA  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13891  0040CC  6C01               	negf	___aodiv@dividend^0,c
 13892  0040CE  0E00               	movlw	0
 13893  0040D0  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13894  0040D2  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13895  0040D4  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13896  0040D6  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13897  0040D8  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13898  0040DA  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13899  0040DC  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13900  0040DE  0E01               	movlw	1
 13901  0040E0  1A12               	xorwf	___aodiv@sign^0,f,c
 13902  0040E2                     l4260:
 13903  0040E2  EE20  F013         	lfsr	2,___aodiv@quotient
 13904  0040E6  0E07               	movlw	7
 13905  0040E8                     u4481:
 13906  0040E8  6ADE               	clrf	postinc2,c
 13907  0040EA  06E8               	decf	wreg,f,c
 13908  0040EC  E2FD               	bc	u4481
 13909  0040EE  5009               	movf	___aodiv@divisor^0,w,c
 13910  0040F0  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13911  0040F2  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13912  0040F4  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13913  0040F6  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13914  0040F8  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13915  0040FA  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13916  0040FC  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13917  0040FE  B4D8               	btfsc	status,2,c
 13918  004100  EF84  F020         	goto	u4491
 13919  004104  EF86  F020         	goto	u4490
 13920  004108                     u4491:
 13921  004108  EFD8  F020         	goto	l4282
 13922  00410C                     u4490:
 13923  00410C  0E01               	movlw	1
 13924  00410E  6E11               	movwf	___aodiv@counter^0,c
 13925  004110  EF94  F020         	goto	l4268
 13926  004114                     l4266:
 13927  004114  90D8               	bcf	status,0,c
 13928  004116  3609               	rlcf	___aodiv@divisor^0,f,c
 13929  004118  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13930  00411A  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13931  00411C  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13932  00411E  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13933  004120  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13934  004122  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13935  004124  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13936  004126  2A11               	incf	___aodiv@counter^0,f,c
 13937  004128                     l4268:
 13938  004128  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13939  00412A  EF99  F020         	goto	u4501
 13940  00412E  EF9B  F020         	goto	u4500
 13941  004132                     u4501:
 13942  004132  EF8A  F020         	goto	l4266
 13943  004136                     u4500:
 13944  004136                     l4270:
 13945  004136  90D8               	bcf	status,0,c
 13946  004138  3613               	rlcf	___aodiv@quotient^0,f,c
 13947  00413A  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13948  00413C  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13949  00413E  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13950  004140  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13951  004142  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13952  004144  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13953  004146  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13954  004148  5009               	movf	___aodiv@divisor^0,w,c
 13955  00414A  5C01               	subwf	___aodiv@dividend^0,w,c
 13956  00414C  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13957  00414E  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13958  004150  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13959  004152  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13960  004154  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13961  004156  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13962  004158  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13963  00415A  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13964  00415C  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13965  00415E  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13966  004160  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13967  004162  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13968  004164  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13969  004166  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13970  004168  A0D8               	btfss	status,0,c
 13971  00416A  EFB9  F020         	goto	u4511
 13972  00416E  EFBB  F020         	goto	u4510
 13973  004172                     u4511:
 13974  004172  EFCC  F020         	goto	l4278
 13975  004176                     u4510:
 13976  004176  5009               	movf	___aodiv@divisor^0,w,c
 13977  004178  5E01               	subwf	___aodiv@dividend^0,f,c
 13978  00417A  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13979  00417C  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13980  00417E  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13981  004180  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13982  004182  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13983  004184  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13984  004186  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13985  004188  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13986  00418A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13987  00418C  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13988  00418E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13989  004190  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13990  004192  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13991  004194  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13992  004196  8013               	bsf	___aodiv@quotient^0,0,c
 13993  004198                     l4278:
 13994  004198  90D8               	bcf	status,0,c
 13995  00419A  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13996  00419C  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13997  00419E  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13998  0041A0  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13999  0041A2  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 14000  0041A4  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 14001  0041A6  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 14002  0041A8  3209               	rrcf	___aodiv@divisor^0,f,c
 14003  0041AA  2E11               	decfsz	___aodiv@counter^0,f,c
 14004  0041AC  EF9B  F020         	goto	l4270
 14005  0041B0                     l4282:
 14006  0041B0  5012               	movf	___aodiv@sign^0,w,c
 14007  0041B2  B4D8               	btfsc	status,2,c
 14008  0041B4  EFDE  F020         	goto	u4521
 14009  0041B8  EFE0  F020         	goto	u4520
 14010  0041BC                     u4521:
 14011  0041BC  EFF0  F020         	goto	l4286
 14012  0041C0                     u4520:
 14013  0041C0  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 14014  0041C2  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 14015  0041C4  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 14016  0041C6  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14017  0041C8  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14018  0041CA  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14019  0041CC  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14020  0041CE  6C13               	negf	___aodiv@quotient^0,c
 14021  0041D0  0E00               	movlw	0
 14022  0041D2  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14023  0041D4  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14024  0041D6  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14025  0041D8  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14026  0041DA  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14027  0041DC  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14028  0041DE  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14029  0041E0                     l4286:
 14030  0041E0  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14031  0041E4  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14032  0041E8  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14033  0041EC  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14034  0041F0  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14035  0041F4  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14036  0041F8  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14037  0041FC  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14038  004200  0012               	return		;funcret
 14039  004202                     __end_of___aodiv:
 14040                           	callstack 0
 14041                           
 14042 ;; *************** function _atoi *****************
 14043 ;; Defined at:
 14044 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 14045 ;; Parameters:    Size  Location     Type
 14046 ;;  s               2    7[COMRAM] PTR const unsigned char 
 14047 ;;		 -> STR_16(18), STR_14(16), STR_12(18), STR_10(13), 
 14048 ;;		 -> STR_8(14), STR_6(16), STR_4(16), STR_2(15), 
 14049 ;; Auto vars:     Size  Location     Type
 14050 ;;  n               2   20[COMRAM] int 
 14051 ;;  neg             2   13[COMRAM] int 
 14052 ;; Return value:  Size  Location     Type
 14053 ;;                  2    7[COMRAM] int 
 14054 ;; Registers used:
 14055 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14056 ;; Tracked objects:
 14057 ;;		On entry : 0/0
 14058 ;;		On exit  : 0/0
 14059 ;;		Unchanged: 0/0
 14060 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14061 ;;      Params:         2       0       0       0       0       0       0
 14062 ;;      Locals:         9       0       0       0       0       0       0
 14063 ;;      Temps:          4       0       0       0       0       0       0
 14064 ;;      Totals:        15       0       0       0       0       0       0
 14065 ;;Total ram usage:       15 bytes
 14066 ;; Hardware stack levels used:    1
 14067 ;; Hardware stack levels required when called:    2
 14068 ;; This function calls:
 14069 ;;		___wmul
 14070 ;;		_isdigit
 14071 ;;		_isspace
 14072 ;; This function is called by:
 14073 ;;		_vfpfcnvrt
 14074 ;; This function uses a non-reentrant model
 14075 ;;
 14076                           
 14077                           	psect	text56
 14078  003EEA                     __ptext56:
 14079                           	callstack 0
 14080  003EEA                     _atoi:
 14081                           	callstack 22
 14082  003EEA  0E00               	movlw	0
 14083  003EEC  6E16               	movwf	(atoi@n+1)^0,c
 14084  003EEE  0E00               	movlw	0
 14085  003EF0  6E15               	movwf	atoi@n^0,c
 14086  003EF2  0E00               	movlw	0
 14087  003EF4  6E0F               	movwf	(atoi@neg+1)^0,c
 14088  003EF6  0E00               	movlw	0
 14089  003EF8  6E0E               	movwf	atoi@neg^0,c
 14090  003EFA  EF81  F01F         	goto	l5240
 14091  003EFE                     l5238:
 14092  003EFE  4A08               	infsnz	atoi@s^0,f,c
 14093  003F00  2A09               	incf	(atoi@s+1)^0,f,c
 14094  003F02                     l5240:
 14095  003F02  0E01               	movlw	1
 14096  003F04  6E14               	movwf	_atoi$2632^0,c
 14097  003F06  C008  FFF6         	movff	atoi@s,tblptrl
 14098  003F0A  C009  FFF7         	movff	atoi@s+1,tblptrh
 14099  003F0E                     	if	0	;tblptru may be non-zero
 14100  003F0E                     	endif
 14101  003F0E                     	if	0	;tblptru may be non-zero
 14102  003F0E                     	endif
 14103  003F0E  0008               	tblrd		*
 14104  003F10  50F5               	movf	tablat,w,c
 14105  003F12  0A20               	xorlw	32
 14106  003F14  B4D8               	btfsc	status,2,c
 14107  003F16  EF8F  F01F         	goto	u6271
 14108  003F1A  EF91  F01F         	goto	u6270
 14109  003F1E                     u6271:
 14110  003F1E  EFAE  F01F         	goto	l5248
 14111  003F22                     u6270:
 14112  003F22  0EF7               	movlw	247
 14113  003F24  6E0A               	movwf	??_atoi^0,c
 14114  003F26  0EFF               	movlw	255
 14115  003F28  6E0B               	movwf	(??_atoi+1)^0,c
 14116  003F2A  C008  FFF6         	movff	atoi@s,tblptrl
 14117  003F2E  C009  FFF7         	movff	atoi@s+1,tblptrh
 14118  003F32                     	if	0	;tblptru may be non-zero
 14119  003F32                     	endif
 14120  003F32                     	if	0	;tblptru may be non-zero
 14121  003F32                     	endif
 14122  003F32  0008               	tblrd		*
 14123  003F34  50F5               	movf	tablat,w,c
 14124  003F36  6E0C               	movwf	(??_atoi+2)^0,c
 14125  003F38  6A0D               	clrf	(??_atoi+3)^0,c
 14126  003F3A  500A               	movf	??_atoi^0,w,c
 14127  003F3C  260C               	addwf	(??_atoi+2)^0,f,c
 14128  003F3E  500B               	movf	(??_atoi+1)^0,w,c
 14129  003F40  220D               	addwfc	(??_atoi+3)^0,f,c
 14130  003F42  500D               	movf	(??_atoi+3)^0,w,c
 14131  003F44  E109               	bnz	u6280
 14132  003F46  0E05               	movlw	5
 14133  003F48  5C0C               	subwf	(??_atoi+2)^0,w,c
 14134  003F4A  A0D8               	btfss	status,0,c
 14135  003F4C  EFAA  F01F         	goto	u6281
 14136  003F50  EFAC  F01F         	goto	u6280
 14137  003F54                     u6281:
 14138  003F54  EFAE  F01F         	goto	l5248
 14139  003F58                     u6280:
 14140  003F58  0E00               	movlw	0
 14141  003F5A  6E14               	movwf	_atoi$2632^0,c
 14142  003F5C                     l5248:
 14143  003F5C  C014  F010         	movff	_atoi$2632,_atoi$2631
 14144  003F60  6A11               	clrf	(_atoi$2631+1)^0,c
 14145  003F62  5010               	movf	_atoi$2631^0,w,c
 14146  003F64  1011               	iorwf	(_atoi$2631+1)^0,w,c
 14147  003F66  A4D8               	btfss	status,2,c
 14148  003F68  EFB8  F01F         	goto	u6291
 14149  003F6C  EFBA  F01F         	goto	u6290
 14150  003F70                     u6291:
 14151  003F70  EF7F  F01F         	goto	l5238
 14152  003F74                     u6290:
 14153  003F74  EFC4  F01F         	goto	l5258
 14154  003F78                     l5254:
 14155  003F78  0E00               	movlw	0
 14156  003F7A  6E0F               	movwf	(atoi@neg+1)^0,c
 14157  003F7C  0E01               	movlw	1
 14158  003F7E  6E0E               	movwf	atoi@neg^0,c
 14159  003F80                     l5256:
 14160  003F80  4A08               	infsnz	atoi@s^0,f,c
 14161  003F82  2A09               	incf	(atoi@s+1)^0,f,c
 14162  003F84  EFF9  F01F         	goto	l5264
 14163  003F88                     l5258:
 14164  003F88  C008  FFF6         	movff	atoi@s,tblptrl
 14165  003F8C  C009  FFF7         	movff	atoi@s+1,tblptrh
 14166  003F90                     	if	0	;tblptru may be non-zero
 14167  003F90                     	endif
 14168  003F90                     	if	0	;tblptru may be non-zero
 14169  003F90                     	endif
 14170  003F90  0008               	tblrd		*
 14171  003F92  50F5               	movf	tablat,w,c
 14172  003F94  6E0A               	movwf	??_atoi^0,c
 14173  003F96  6A0B               	clrf	(??_atoi+1)^0,c
 14174                           
 14175                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14176                           ; Switch size 1, requested type "simple"
 14177                           ; Number of cases is 1, Range of values is 0 to 0
 14178                           ; switch strategies available:
 14179                           ; Name         Instructions Cycles
 14180                           ; simple_byte            4     3 (average)
 14181                           ;	Chosen strategy is simple_byte
 14182  003F98  500B               	movf	(??_atoi+1)^0,w,c
 14183  003F9A  0A00               	xorlw	0	; case 0
 14184  003F9C  B4D8               	btfsc	status,2,c
 14185  003F9E  EFD3  F01F         	goto	l6444
 14186  003FA2  EFF9  F01F         	goto	l5264
 14187  003FA6                     l6444:
 14188                           
 14189                           ; Switch size 1, requested type "simple"
 14190                           ; Number of cases is 2, Range of values is 43 to 45
 14191                           ; switch strategies available:
 14192                           ; Name         Instructions Cycles
 14193                           ; simple_byte            7     4 (average)
 14194                           ;	Chosen strategy is simple_byte
 14195  003FA6  500A               	movf	??_atoi^0,w,c
 14196  003FA8  0A2B               	xorlw	43	; case 43
 14197  003FAA  B4D8               	btfsc	status,2,c
 14198  003FAC  EFC0  F01F         	goto	l5256
 14199  003FB0  0A06               	xorlw	6	; case 45
 14200  003FB2  B4D8               	btfsc	status,2,c
 14201  003FB4  EFBC  F01F         	goto	l5254
 14202  003FB8  EFF9  F01F         	goto	l5264
 14203  003FBC                     l5260:
 14204  003FBC  C015  F001         	movff	atoi@n,___wmul@multiplier
 14205  003FC0  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 14206  003FC4  0E00               	movlw	0
 14207  003FC6  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 14208  003FC8  0E0A               	movlw	10
 14209  003FCA  6E03               	movwf	___wmul@multiplicand^0,c
 14210  003FCC  EC5A  F02E         	call	___wmul	;wreg free
 14211  003FD0  C008  FFF6         	movff	atoi@s,tblptrl
 14212  003FD4  C009  FFF7         	movff	atoi@s+1,tblptrh
 14213  003FD8                     	if	0	;tblptru may be non-zero
 14214  003FD8                     	endif
 14215  003FD8                     	if	0	;tblptru may be non-zero
 14216  003FD8                     	endif
 14217  003FD8  0008               	tblrd		*
 14218  003FDA  50F5               	movf	tablat,w,c
 14219  003FDC  5E01               	subwf	?___wmul^0,f,c
 14220  003FDE  0E00               	movlw	0
 14221  003FE0  5A02               	subwfb	(?___wmul+1)^0,f,c
 14222  003FE2  0E30               	movlw	48
 14223  003FE4  2401               	addwf	?___wmul^0,w,c
 14224  003FE6  6E15               	movwf	atoi@n^0,c
 14225  003FE8  0E00               	movlw	0
 14226  003FEA  2002               	addwfc	(?___wmul+1)^0,w,c
 14227  003FEC  6E16               	movwf	(atoi@n+1)^0,c
 14228  003FEE  EFC0  F01F         	goto	l5256
 14229  003FF2                     l5264:
 14230  003FF2  0ED0               	movlw	208
 14231  003FF4  6E0A               	movwf	??_atoi^0,c
 14232  003FF6  0EFF               	movlw	255
 14233  003FF8  6E0B               	movwf	(??_atoi+1)^0,c
 14234  003FFA  C008  FFF6         	movff	atoi@s,tblptrl
 14235  003FFE  C009  FFF7         	movff	atoi@s+1,tblptrh
 14236  004002                     	if	0	;tblptru may be non-zero
 14237  004002                     	endif
 14238  004002                     	if	0	;tblptru may be non-zero
 14239  004002                     	endif
 14240  004002  0008               	tblrd		*
 14241  004004  50F5               	movf	tablat,w,c
 14242  004006  6E0C               	movwf	(??_atoi+2)^0,c
 14243  004008  6A0D               	clrf	(??_atoi+3)^0,c
 14244  00400A  500A               	movf	??_atoi^0,w,c
 14245  00400C  260C               	addwf	(??_atoi+2)^0,f,c
 14246  00400E  500B               	movf	(??_atoi+1)^0,w,c
 14247  004010  220D               	addwfc	(??_atoi+3)^0,f,c
 14248  004012  500D               	movf	(??_atoi+3)^0,w,c
 14249  004014  E10A               	bnz	u6300
 14250  004016  0E0A               	movlw	10
 14251  004018  5C0C               	subwf	(??_atoi+2)^0,w,c
 14252  00401A  A0D8               	btfss	status,0,c
 14253  00401C  EF12  F020         	goto	u6301
 14254  004020  EF15  F020         	goto	u6300
 14255  004024                     u6301:
 14256  004024  0E01               	movlw	1
 14257  004026  EF16  F020         	goto	u6310
 14258  00402A                     u6300:
 14259  00402A  0E00               	movlw	0
 14260  00402C                     u6310:
 14261  00402C  6E12               	movwf	_atoi$2633^0,c
 14262  00402E  6A13               	clrf	(_atoi$2633+1)^0,c
 14263  004030  5012               	movf	_atoi$2633^0,w,c
 14264  004032  1013               	iorwf	(_atoi$2633+1)^0,w,c
 14265  004034  A4D8               	btfss	status,2,c
 14266  004036  EF1F  F020         	goto	u6321
 14267  00403A  EF21  F020         	goto	u6320
 14268  00403E                     u6321:
 14269  00403E  EFDE  F01F         	goto	l5260
 14270  004042                     u6320:
 14271  004042  500E               	movf	atoi@neg^0,w,c
 14272  004044  100F               	iorwf	(atoi@neg+1)^0,w,c
 14273  004046  A4D8               	btfss	status,2,c
 14274  004048  EF28  F020         	goto	u6331
 14275  00404C  EF2A  F020         	goto	u6330
 14276  004050                     u6331:
 14277  004050  EF38  F020         	goto	l1481
 14278  004054                     u6330:
 14279  004054  C015  F00A         	movff	atoi@n,??_atoi
 14280  004058  C016  F00B         	movff	atoi@n+1,??_atoi+1
 14281  00405C  1E0A               	comf	??_atoi^0,f,c
 14282  00405E  1E0B               	comf	(??_atoi+1)^0,f,c
 14283  004060  4A0A               	infsnz	??_atoi^0,f,c
 14284  004062  2A0B               	incf	(??_atoi+1)^0,f,c
 14285  004064  C00A  F008         	movff	??_atoi,?_atoi
 14286  004068  C00B  F009         	movff	??_atoi+1,?_atoi+1
 14287  00406C  EF3C  F020         	goto	l1484
 14288  004070                     l1481:
 14289  004070  C015  F008         	movff	atoi@n,?_atoi
 14290  004074  C016  F009         	movff	atoi@n+1,?_atoi+1
 14291  004078                     l1484:
 14292  004078  0012               	return		;funcret
 14293  00407A                     __end_of_atoi:
 14294                           	callstack 0
 14295                           
 14296 ;; *************** function _isspace *****************
 14297 ;; Defined at:
 14298 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 14299 ;; Parameters:    Size  Location     Type
 14300 ;;  c               2    0[COMRAM] int 
 14301 ;; Auto vars:     Size  Location     Type
 14302 ;;		None
 14303 ;; Return value:  Size  Location     Type
 14304 ;;                  2    0[COMRAM] int 
 14305 ;; Registers used:
 14306 ;;		wreg, status,2, status,0
 14307 ;; Tracked objects:
 14308 ;;		On entry : 0/0
 14309 ;;		On exit  : 0/0
 14310 ;;		Unchanged: 0/0
 14311 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14312 ;;      Params:         2       0       0       0       0       0       0
 14313 ;;      Locals:         1       0       0       0       0       0       0
 14314 ;;      Temps:          4       0       0       0       0       0       0
 14315 ;;      Totals:         7       0       0       0       0       0       0
 14316 ;;Total ram usage:        7 bytes
 14317 ;; Hardware stack levels used:    1
 14318 ;; Hardware stack levels required when called:    1
 14319 ;; This function calls:
 14320 ;;		Nothing
 14321 ;; This function is called by:
 14322 ;;		_atoi
 14323 ;; This function uses a non-reentrant model
 14324 ;;
 14325                           
 14326                           	psect	text57
 14327  0058DE                     __ptext57:
 14328                           	callstack 0
 14329  0058DE                     _isspace:
 14330                           	callstack 22
 14331  0058DE  0E01               	movlw	1
 14332  0058E0  6E07               	movwf	_isspace$2662^0,c
 14333  0058E2  0E20               	movlw	32
 14334  0058E4  1801               	xorwf	isspace@c^0,w,c
 14335  0058E6  1002               	iorwf	(isspace@c+1)^0,w,c
 14336  0058E8  B4D8               	btfsc	status,2,c
 14337  0058EA  EF79  F02C         	goto	u5581
 14338  0058EE  EF7B  F02C         	goto	u5580
 14339  0058F2                     u5581:
 14340  0058F2  EF94  F02C         	goto	l4872
 14341  0058F6                     u5580:
 14342  0058F6  0EF7               	movlw	247
 14343  0058F8  6E03               	movwf	??_isspace^0,c
 14344  0058FA  0EFF               	movlw	255
 14345  0058FC  6E04               	movwf	(??_isspace+1)^0,c
 14346  0058FE  C001  F005         	movff	isspace@c,??_isspace+2
 14347  005902  C002  F006         	movff	isspace@c+1,??_isspace+3
 14348  005906  5003               	movf	??_isspace^0,w,c
 14349  005908  2605               	addwf	(??_isspace+2)^0,f,c
 14350  00590A  5004               	movf	(??_isspace+1)^0,w,c
 14351  00590C  2206               	addwfc	(??_isspace+3)^0,f,c
 14352  00590E  5006               	movf	(??_isspace+3)^0,w,c
 14353  005910  E109               	bnz	u5590
 14354  005912  0E05               	movlw	5
 14355  005914  5C05               	subwf	(??_isspace+2)^0,w,c
 14356  005916  A0D8               	btfss	status,0,c
 14357  005918  EF90  F02C         	goto	u5591
 14358  00591C  EF92  F02C         	goto	u5590
 14359  005920                     u5591:
 14360  005920  EF94  F02C         	goto	l4872
 14361  005924                     u5590:
 14362  005924  0E00               	movlw	0
 14363  005926  6E07               	movwf	_isspace$2662^0,c
 14364  005928                     l4872:
 14365  005928  C007  F001         	movff	_isspace$2662,?_isspace
 14366  00592C  6A02               	clrf	(?_isspace+1)^0,c
 14367  00592E  0012               	return		;funcret
 14368  005930                     __end_of_isspace:
 14369                           	callstack 0
 14370                           
 14371 ;; *************** function _isdigit *****************
 14372 ;; Defined at:
 14373 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 14374 ;; Parameters:    Size  Location     Type
 14375 ;;  c               2    0[COMRAM] int 
 14376 ;; Auto vars:     Size  Location     Type
 14377 ;;		None
 14378 ;; Return value:  Size  Location     Type
 14379 ;;                  2    0[COMRAM] int 
 14380 ;; Registers used:
 14381 ;;		wreg, status,2, status,0
 14382 ;; Tracked objects:
 14383 ;;		On entry : 0/0
 14384 ;;		On exit  : 0/0
 14385 ;;		Unchanged: 0/0
 14386 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14387 ;;      Params:         2       0       0       0       0       0       0
 14388 ;;      Locals:         0       0       0       0       0       0       0
 14389 ;;      Temps:          4       0       0       0       0       0       0
 14390 ;;      Totals:         6       0       0       0       0       0       0
 14391 ;;Total ram usage:        6 bytes
 14392 ;; Hardware stack levels used:    1
 14393 ;; Hardware stack levels required when called:    1
 14394 ;; This function calls:
 14395 ;;		Nothing
 14396 ;; This function is called by:
 14397 ;;		_vfpfcnvrt
 14398 ;;		_atoi
 14399 ;; This function uses a non-reentrant model
 14400 ;;
 14401                           
 14402                           	psect	text58
 14403  005B26                     __ptext58:
 14404                           	callstack 0
 14405  005B26                     _isdigit:
 14406                           	callstack 23
 14407  005B26  0ED0               	movlw	208
 14408  005B28  6E03               	movwf	??_isdigit^0,c
 14409  005B2A  0EFF               	movlw	255
 14410  005B2C  6E04               	movwf	(??_isdigit+1)^0,c
 14411  005B2E  C001  F005         	movff	isdigit@c,??_isdigit+2
 14412  005B32  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 14413  005B36  5003               	movf	??_isdigit^0,w,c
 14414  005B38  2605               	addwf	(??_isdigit+2)^0,f,c
 14415  005B3A  5004               	movf	(??_isdigit+1)^0,w,c
 14416  005B3C  2206               	addwfc	(??_isdigit+3)^0,f,c
 14417  005B3E  5006               	movf	(??_isdigit+3)^0,w,c
 14418  005B40  E10A               	bnz	u5560
 14419  005B42  0E0A               	movlw	10
 14420  005B44  5C05               	subwf	(??_isdigit+2)^0,w,c
 14421  005B46  A0D8               	btfss	status,0,c
 14422  005B48  EFA8  F02D         	goto	u5561
 14423  005B4C  EFAB  F02D         	goto	u5560
 14424  005B50                     u5561:
 14425  005B50  0E01               	movlw	1
 14426  005B52  EFAC  F02D         	goto	u5570
 14427  005B56                     u5560:
 14428  005B56  0E00               	movlw	0
 14429  005B58                     u5570:
 14430  005B58  6E01               	movwf	?_isdigit^0,c
 14431  005B5A  6A02               	clrf	(?_isdigit+1)^0,c
 14432  005B5C  0012               	return		;funcret
 14433  005B5E                     __end_of_isdigit:
 14434                           	callstack 0
 14435                           
 14436 ;; *************** function ___wmul *****************
 14437 ;; Defined at:
 14438 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 14439 ;; Parameters:    Size  Location     Type
 14440 ;;  multiplier      2    0[COMRAM] unsigned int 
 14441 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14442 ;; Auto vars:     Size  Location     Type
 14443 ;;  product         2    4[COMRAM] unsigned int 
 14444 ;; Return value:  Size  Location     Type
 14445 ;;                  2    0[COMRAM] unsigned int 
 14446 ;; Registers used:
 14447 ;;		wreg, status,2, status,0, prodl, prodh
 14448 ;; Tracked objects:
 14449 ;;		On entry : 0/0
 14450 ;;		On exit  : 0/0
 14451 ;;		Unchanged: 0/0
 14452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14453 ;;      Params:         4       0       0       0       0       0       0
 14454 ;;      Locals:         2       0       0       0       0       0       0
 14455 ;;      Temps:          0       0       0       0       0       0       0
 14456 ;;      Totals:         6       0       0       0       0       0       0
 14457 ;;Total ram usage:        6 bytes
 14458 ;; Hardware stack levels used:    1
 14459 ;; Hardware stack levels required when called:    1
 14460 ;; This function calls:
 14461 ;;		Nothing
 14462 ;; This function is called by:
 14463 ;;		_atoi
 14464 ;; This function uses a non-reentrant model
 14465 ;;
 14466                           
 14467                           	psect	text59
 14468  005CB4                     __ptext59:
 14469                           	callstack 0
 14470  005CB4                     ___wmul:
 14471                           	callstack 22
 14472  005CB4  5001               	movf	___wmul@multiplier^0,w,c
 14473  005CB6  0203               	mulwf	___wmul@multiplicand^0,c
 14474  005CB8  CFF3 F005          	movff	prodl,___wmul@product
 14475  005CBC  CFF4 F006          	movff	prodh,___wmul@product+1
 14476  005CC0  5001               	movf	___wmul@multiplier^0,w,c
 14477  005CC2  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14478  005CC4  50F3               	movf	243,w,c
 14479  005CC6  2606               	addwf	(___wmul@product+1)^0,f,c
 14480  005CC8  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14481  005CCA  0203               	mulwf	___wmul@multiplicand^0,c
 14482  005CCC  50F3               	movf	243,w,c
 14483  005CCE  2606               	addwf	(___wmul@product+1)^0,f,c
 14484  005CD0  C005  F001         	movff	___wmul@product,?___wmul
 14485  005CD4  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14486  005CD8  0012               	return		;funcret
 14487  005CDA                     __end_of___wmul:
 14488                           	callstack 0
 14489                           
 14490 ;; *************** function _eepromWrite *****************
 14491 ;; Defined at:
 14492 ;;		line 62 in file "fs_eeprom.c"
 14493 ;; Parameters:    Size  Location     Type
 14494 ;;  address         1    wreg     unsigned char 
 14495 ;;  data            1    0[COMRAM] unsigned char 
 14496 ;; Auto vars:     Size  Location     Type
 14497 ;;  address         1    1[COMRAM] unsigned char 
 14498 ;; Return value:  Size  Location     Type
 14499 ;;                  1    wreg      void 
 14500 ;; Registers used:
 14501 ;;		wreg, status,2
 14502 ;; Tracked objects:
 14503 ;;		On entry : 0/0
 14504 ;;		On exit  : 0/0
 14505 ;;		Unchanged: 0/0
 14506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14507 ;;      Params:         1       0       0       0       0       0       0
 14508 ;;      Locals:         1       0       0       0       0       0       0
 14509 ;;      Temps:          0       0       0       0       0       0       0
 14510 ;;      Totals:         2       0       0       0       0       0       0
 14511 ;;Total ram usage:        2 bytes
 14512 ;; Hardware stack levels used:    1
 14513 ;; Hardware stack levels required when called:    1
 14514 ;; This function calls:
 14515 ;;		Nothing
 14516 ;; This function is called by:
 14517 ;;		_speedLimitSettingMenu
 14518 ;;		_stopTimeSettingMenu
 14519 ;;		_driverTimeSettingMenu
 14520 ;; This function uses a non-reentrant model
 14521 ;;
 14522                           
 14523                           	psect	text60
 14524  005C36                     __ptext60:
 14525                           	callstack 0
 14526  005C36                     _eepromWrite:
 14527                           	callstack 26
 14528                           
 14529                           ;incstack = 0
 14530                           ;eepromWrite@address stored from wreg
 14531  005C36  6E02               	movwf	eepromWrite@address^0,c
 14532  005C38                     
 14533                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 14534  005C38  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14535  005C3C                     
 14536                           ;fs_eeprom.c: 68:     EEDATA = data;
 14537  005C3C  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14538  005C40                     
 14539                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14540  005C40  9EA6               	bcf	166,7,c	;volsfr
 14541  005C42                     
 14542                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14543  005C42  9CA6               	bcf	166,6,c	;volsfr
 14544  005C44                     
 14545                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14546  005C44  84A6               	bsf	166,2,c	;volsfr
 14547  005C46                     
 14548                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14549  005C46  0E55               	movlw	85
 14550  005C48  6EA7               	movwf	167,c	;volsfr
 14551  005C4A                     
 14552                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14553  005C4A  0EAA               	movlw	170
 14554  005C4C  6EA7               	movwf	167,c	;volsfr
 14555  005C4E                     
 14556                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14557  005C4E  82A6               	bsf	166,1,c	;volsfr
 14558  005C50                     l76:
 14559                           
 14560                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14561  005C50  A8A1               	btfss	161,4,c	;volatile
 14562  005C52  EF2D  F02E         	goto	u6871
 14563  005C56  EF2F  F02E         	goto	u6870
 14564  005C5A                     u6871:
 14565  005C5A  EF28  F02E         	goto	l76
 14566  005C5E                     u6870:
 14567  005C5E                     
 14568                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14569  005C5E  98A1               	bcf	161,4,c	;volatile
 14570                           
 14571                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14572  005C60  94A6               	bcf	166,2,c	;volsfr
 14573  005C62  0012               	return		;funcret
 14574  005C64                     __end_of_eepromWrite:
 14575                           	callstack 0
 14576                           
 14577 ;; *************** function _Lcd_Write_String *****************
 14578 ;; Defined at:
 14579 ;;		line 155 in file "fs_lcd.c"
 14580 ;; Parameters:    Size  Location     Type
 14581 ;;  a               2    4[COMRAM] PTR unsigned char 
 14582 ;;		 -> STR_15(17), driverTimeSettingMenu@textCursor2(16), STR_13(17), stopTimeSettingMenu@textCursor2(16), 
 14583 ;;		 -> STR_11(17), speedLimitSettingMenu@textCursor2(16), STR_9(17), STR_7(17), 
 14584 ;;		 -> secretMenu@textCursor2(16), STR_5(17), pauseMenu@textCursor2(16), STR_3(17), 
 14585 ;;		 -> stopMenu@textCursor2(16), STR_1(17), mainMenu@textCursor2(16), 
 14586 ;; Auto vars:     Size  Location     Type
 14587 ;;  i               2    8[COMRAM] int 
 14588 ;; Return value:  Size  Location     Type
 14589 ;;                  1    wreg      void 
 14590 ;; Registers used:
 14591 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14592 ;; Tracked objects:
 14593 ;;		On entry : 0/0
 14594 ;;		On exit  : 0/0
 14595 ;;		Unchanged: 0/0
 14596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14597 ;;      Params:         2       0       0       0       0       0       0
 14598 ;;      Locals:         2       0       0       0       0       0       0
 14599 ;;      Temps:          2       0       0       0       0       0       0
 14600 ;;      Totals:         6       0       0       0       0       0       0
 14601 ;;Total ram usage:        6 bytes
 14602 ;; Hardware stack levels used:    1
 14603 ;; Hardware stack levels required when called:    3
 14604 ;; This function calls:
 14605 ;;		_Lcd_Write_Char
 14606 ;; This function is called by:
 14607 ;;		_mainMenu
 14608 ;;		_stopMenu
 14609 ;;		_pauseMenu
 14610 ;;		_secretMenu
 14611 ;;		_speedLimitSettingMenu
 14612 ;;		_stopTimeSettingMenu
 14613 ;;		_driverTimeSettingMenu
 14614 ;; This function uses a non-reentrant model
 14615 ;;
 14616                           
 14617                           	psect	text61
 14618  005400                     __ptext61:
 14619                           	callstack 0
 14620  005400                     _Lcd_Write_String:
 14621                           	callstack 24
 14622  005400                     
 14623                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14624  005400  0E00               	movlw	0
 14625  005402  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14626  005404  0E00               	movlw	0
 14627  005406  6E09               	movwf	Lcd_Write_String@i^0,c
 14628  005408  EF20  F02A         	goto	l5726
 14629  00540C                     l5722:
 14630                           
 14631                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14632  00540C  5009               	movf	Lcd_Write_String@i^0,w,c
 14633  00540E  2405               	addwf	Lcd_Write_String@a^0,w,c
 14634  005410  6E07               	movwf	??_Lcd_Write_String^0,c
 14635  005412  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14636  005414  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14637  005416  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14638  005418  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14639  00541C  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14640  005420  6AF8               	clrf	tblptru,c
 14641  005422  0E05               	movlw	(high __ramtop+-1)
 14642  005424  64F7               	cpfsgt	tblptrh,c
 14643  005426  D003               	bra	u6907
 14644  005428  0008               	tblrd		*
 14645  00542A  50F5               	movf	tablat,w,c
 14646  00542C  D005               	bra	u6900
 14647  00542E                     u6907:
 14648  00542E  CFF6 FFE1          	movff	tblptrl,fsr1l
 14649  005432  CFF7 FFE2          	movff	tblptrh,fsr1h
 14650  005436  50E7               	movf	indf1,w,c
 14651  005438                     u6900:
 14652  005438  ECAF  F02D         	call	_Lcd_Write_Char
 14653  00543C  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14654  00543E  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14655  005440                     l5726:
 14656  005440  5009               	movf	Lcd_Write_String@i^0,w,c
 14657  005442  2405               	addwf	Lcd_Write_String@a^0,w,c
 14658  005444  6E07               	movwf	??_Lcd_Write_String^0,c
 14659  005446  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14660  005448  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14661  00544A  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14662  00544C  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14663  005450  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14664  005454  6AF8               	clrf	tblptru,c
 14665  005456  0E05               	movlw	(high __ramtop+-1)
 14666  005458  64F7               	cpfsgt	tblptrh,c
 14667  00545A  D003               	bra	u6917
 14668  00545C  0008               	tblrd		*
 14669  00545E  50F5               	movf	tablat,w,c
 14670  005460  D005               	bra	u6910
 14671  005462                     u6917:
 14672  005462  CFF6 FFE1          	movff	tblptrl,fsr1l
 14673  005466  CFF7 FFE2          	movff	tblptrh,fsr1h
 14674  00546A  50E7               	movf	indf1,w,c
 14675  00546C                     u6910:
 14676  00546C  0900               	iorlw	0
 14677  00546E  A4D8               	btfss	status,2,c
 14678  005470  EF3C  F02A         	goto	u6921
 14679  005474  EF3E  F02A         	goto	u6920
 14680  005478                     u6921:
 14681  005478  EF06  F02A         	goto	l5722
 14682  00547C                     u6920:
 14683  00547C  0012               	return		;funcret
 14684  00547E                     __end_of_Lcd_Write_String:
 14685                           	callstack 0
 14686                           
 14687 ;; *************** function _Lcd_Write_Char *****************
 14688 ;; Defined at:
 14689 ;;		line 132 in file "fs_lcd.c"
 14690 ;; Parameters:    Size  Location     Type
 14691 ;;  a               1    wreg     unsigned char 
 14692 ;; Auto vars:     Size  Location     Type
 14693 ;;  a               1    3[COMRAM] unsigned char 
 14694 ;;  y               1    2[COMRAM] unsigned char 
 14695 ;;  temp            1    1[COMRAM] unsigned char 
 14696 ;; Return value:  Size  Location     Type
 14697 ;;                  1    wreg      void 
 14698 ;; Registers used:
 14699 ;;		wreg, status,2, status,0, cstack
 14700 ;; Tracked objects:
 14701 ;;		On entry : 0/0
 14702 ;;		On exit  : 0/0
 14703 ;;		Unchanged: 0/0
 14704 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14705 ;;      Params:         0       0       0       0       0       0       0
 14706 ;;      Locals:         3       0       0       0       0       0       0
 14707 ;;      Temps:          0       0       0       0       0       0       0
 14708 ;;      Totals:         3       0       0       0       0       0       0
 14709 ;;Total ram usage:        3 bytes
 14710 ;; Hardware stack levels used:    1
 14711 ;; Hardware stack levels required when called:    2
 14712 ;; This function calls:
 14713 ;;		_Lcd_Port
 14714 ;; This function is called by:
 14715 ;;		_Lcd_Write_String
 14716 ;; This function uses a non-reentrant model
 14717 ;;
 14718                           
 14719                           	psect	text62
 14720  005B5E                     __ptext62:
 14721                           	callstack 0
 14722  005B5E                     _Lcd_Write_Char:
 14723                           	callstack 24
 14724                           
 14725                           ;incstack = 0
 14726                           ;Lcd_Write_Char@a stored from wreg
 14727  005B5E  6E04               	movwf	Lcd_Write_Char@a^0,c
 14728  005B60                     
 14729                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14730  005B60  5004               	movf	Lcd_Write_Char@a^0,w,c
 14731  005B62  0B0F               	andlw	15
 14732  005B64  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14733                           
 14734                           ;fs_lcd.c: 136:    y = a&0xF0;
 14735  005B66  5004               	movf	Lcd_Write_Char@a^0,w,c
 14736  005B68  0BF0               	andlw	240
 14737  005B6A  6E03               	movwf	Lcd_Write_Char@y^0,c
 14738  005B6C                     
 14739                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14740  005B6C  8C83               	bsf	131,6,c	;volatile
 14741  005B6E                     
 14742                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14743  005B6E  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14744  005B70  0B0F               	andlw	15
 14745  005B72  ECEF  F02B         	call	_Lcd_Port
 14746  005B76                     
 14747                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14748  005B76  8E83               	bsf	131,7,c	;volatile
 14749  005B78                     
 14750                           ;fs_lcd.c: 140:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14751  005B78  0ED5               	movlw	213
 14752  005B7A                     u7987:
 14753  005B7A  2EE8               	decfsz	wreg,f,c
 14754  005B7C  D7FE               	bra	u7987
 14755  005B7E  F000               	nop	
 14756  005B80                     
 14757                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14758  005B80  9E83               	bcf	131,7,c	;volatile
 14759  005B82                     
 14760                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14761  005B82  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14762  005B84  ECEF  F02B         	call	_Lcd_Port
 14763  005B88                     
 14764                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14765  005B88  8E83               	bsf	131,7,c	;volatile
 14766  005B8A                     
 14767                           ;fs_lcd.c: 144:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14768  005B8A  0ED5               	movlw	213
 14769  005B8C                     u7997:
 14770  005B8C  2EE8               	decfsz	wreg,f,c
 14771  005B8E  D7FE               	bra	u7997
 14772  005B90  F000               	nop	
 14773  005B92                     
 14774                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14775  005B92  9E83               	bcf	131,7,c	;volatile
 14776  005B94  0012               	return		;funcret
 14777  005B96                     __end_of_Lcd_Write_Char:
 14778                           	callstack 0
 14779                           
 14780 ;; *************** function _Lcd_Set_Cursor *****************
 14781 ;; Defined at:
 14782 ;;		line 62 in file "fs_lcd.c"
 14783 ;; Parameters:    Size  Location     Type
 14784 ;;  a               1    wreg     unsigned char 
 14785 ;;  b               1    3[COMRAM] unsigned char 
 14786 ;; Auto vars:     Size  Location     Type
 14787 ;;  a               1    4[COMRAM] unsigned char 
 14788 ;;  temp            1    7[COMRAM] unsigned char 
 14789 ;;  y               1    6[COMRAM] unsigned char 
 14790 ;;  z               1    5[COMRAM] unsigned char 
 14791 ;; Return value:  Size  Location     Type
 14792 ;;                  1    wreg      void 
 14793 ;; Registers used:
 14794 ;;		wreg, status,2, status,0, cstack
 14795 ;; Tracked objects:
 14796 ;;		On entry : 0/0
 14797 ;;		On exit  : 0/0
 14798 ;;		Unchanged: 0/0
 14799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14800 ;;      Params:         1       0       0       0       0       0       0
 14801 ;;      Locals:         4       0       0       0       0       0       0
 14802 ;;      Temps:          0       0       0       0       0       0       0
 14803 ;;      Totals:         5       0       0       0       0       0       0
 14804 ;;Total ram usage:        5 bytes
 14805 ;; Hardware stack levels used:    1
 14806 ;; Hardware stack levels required when called:    3
 14807 ;; This function calls:
 14808 ;;		_Lcd_Cmd
 14809 ;; This function is called by:
 14810 ;;		_mainMenu
 14811 ;;		_stopMenu
 14812 ;;		_pauseMenu
 14813 ;;		_secretMenu
 14814 ;;		_speedLimitSettingMenu
 14815 ;;		_stopTimeSettingMenu
 14816 ;;		_driverTimeSettingMenu
 14817 ;; This function uses a non-reentrant model
 14818 ;;
 14819                           
 14820                           	psect	text63
 14821  0056BC                     __ptext63:
 14822                           	callstack 0
 14823  0056BC                     _Lcd_Set_Cursor:
 14824                           	callstack 24
 14825                           
 14826                           ;incstack = 0
 14827                           ;Lcd_Set_Cursor@a stored from wreg
 14828  0056BC  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14829  0056BE                     
 14830                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14831  0056BE  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14832  0056C0  A4D8               	btfss	status,2,c
 14833  0056C2  EF65  F02B         	goto	u6881
 14834  0056C6  EF67  F02B         	goto	u6880
 14835  0056CA                     u6881:
 14836  0056CA  EF78  F02B         	goto	l5712
 14837  0056CE                     u6880:
 14838  0056CE                     
 14839                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14840  0056CE  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14841  0056D0  0F7F               	addlw	127
 14842  0056D2  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14843                           
 14844                           ;fs_lcd.c: 68:       z = temp>>4;
 14845  0056D4  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14846  0056D6  0B0F               	andlw	15
 14847  0056D8  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14848                           
 14849                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14850  0056DA  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14851  0056DC  0B0F               	andlw	15
 14852  0056DE  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14853  0056E0                     
 14854                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14855  0056E0  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14856  0056E2  EC8C  F02E         	call	_Lcd_Cmd
 14857  0056E6                     
 14858                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14859  0056E6  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14860  0056E8  EC8C  F02E         	call	_Lcd_Cmd
 14861                           
 14862                           ;fs_lcd.c: 72:    }
 14863  0056EC  EF90  F02B         	goto	l116
 14864  0056F0                     l5712:
 14865  0056F0  0E02               	movlw	2
 14866  0056F2  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14867  0056F4  A4D8               	btfss	status,2,c
 14868  0056F6  EF7F  F02B         	goto	u6891
 14869  0056FA  EF81  F02B         	goto	u6890
 14870  0056FE                     u6891:
 14871  0056FE  EF90  F02B         	goto	l116
 14872  005702                     u6890:
 14873  005702                     
 14874                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14875  005702  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14876  005704  0FBF               	addlw	191
 14877  005706  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14878                           
 14879                           ;fs_lcd.c: 76:       z = temp>>4;
 14880  005708  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14881  00570A  0B0F               	andlw	15
 14882  00570C  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14883                           
 14884                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14885  00570E  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14886  005710  0B0F               	andlw	15
 14887  005712  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14888  005714                     
 14889                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14890  005714  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14891  005716  EC8C  F02E         	call	_Lcd_Cmd
 14892  00571A                     
 14893                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14894  00571A  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14895  00571C  EC8C  F02E         	call	_Lcd_Cmd
 14896  005720                     l116:
 14897  005720  0012               	return		;funcret
 14898  005722                     __end_of_Lcd_Set_Cursor:
 14899                           	callstack 0
 14900                           
 14901 ;; *************** function _buttonControlFlags *****************
 14902 ;; Defined at:
 14903 ;;		line 79 in file "fs_menu_controller.c"
 14904 ;; Parameters:    Size  Location     Type
 14905 ;;		None
 14906 ;; Auto vars:     Size  Location     Type
 14907 ;;		None
 14908 ;; Return value:  Size  Location     Type
 14909 ;;                  1    wreg      void 
 14910 ;; Registers used:
 14911 ;;		wreg, status,2, status,0
 14912 ;; Tracked objects:
 14913 ;;		On entry : 0/0
 14914 ;;		On exit  : 0/0
 14915 ;;		Unchanged: 0/0
 14916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14917 ;;      Params:         0       0       0       0       0       0       0
 14918 ;;      Locals:         0       0       0       0       0       0       0
 14919 ;;      Temps:          0       0       0       0       0       0       0
 14920 ;;      Totals:         0       0       0       0       0       0       0
 14921 ;;Total ram usage:        0 bytes
 14922 ;; Hardware stack levels used:    1
 14923 ;; Hardware stack levels required when called:    1
 14924 ;; This function calls:
 14925 ;;		Nothing
 14926 ;; This function is called by:
 14927 ;;		_menuControl
 14928 ;; This function uses a non-reentrant model
 14929 ;;
 14930                           
 14931                           	psect	text64
 14932  003814                     __ptext64:
 14933                           	callstack 0
 14934  003814                     _buttonControlFlags:
 14935                           	callstack 28
 14936  003814                     
 14937                           ;fs_menu_controller.c: 82:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14938  003814  0101               	movlb	1	; () banked
 14939  003816  51BD               	movf	_button_bounce_controller& (0+255),w,b
 14940  003818  A4D8               	btfss	status,2,c
 14941  00381A  EF11  F01C         	goto	u7561
 14942  00381E  EF13  F01C         	goto	u7560
 14943  003822                     u7561:
 14944  003822  EF1E  F01C         	goto	l6122
 14945  003826                     u7560:
 14946  003826                     
 14947                           ; BSR set to: 1
 14948  003826  BE81               	btfsc	129,7,c	;volatile
 14949  003828  EF18  F01C         	goto	u7571
 14950  00382C  EF1A  F01C         	goto	u7570
 14951  003830                     u7571:
 14952  003830  EF1E  F01C         	goto	l6122
 14953  003834                     u7570:
 14954  003834                     
 14955                           ; BSR set to: 1
 14956                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 1;
 14957  003834  0E01               	movlw	1
 14958  003836  6FBD               	movwf	_button_bounce_controller& (0+255),b
 14959                           
 14960                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 1;
 14961  003838  0E01               	movlw	1
 14962  00383A  6FB7               	movwf	_menu_flags& (0+255),b
 14963  00383C                     l6122:
 14964                           
 14965                           ; BSR set to: 1
 14966                           ;fs_menu_controller.c: 88:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 14967  00383C  AE81               	btfss	129,7,c	;volatile
 14968  00383E  EF23  F01C         	goto	u7581
 14969  003842  EF25  F01C         	goto	u7580
 14970  003846                     u7581:
 14971  003846  EF31  F01C         	goto	l334
 14972  00384A                     u7580:
 14973  00384A                     
 14974                           ; BSR set to: 1
 14975  00384A  05BD               	decf	_button_bounce_controller& (0+255),w,b
 14976  00384C  A4D8               	btfss	status,2,c
 14977  00384E  EF2B  F01C         	goto	u7591
 14978  003852  EF2D  F01C         	goto	u7590
 14979  003856                     u7591:
 14980  003856  EF31  F01C         	goto	l334
 14981  00385A                     u7590:
 14982  00385A                     
 14983                           ; BSR set to: 1
 14984                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.menu = 0;
 14985  00385A  0E00               	movlw	0
 14986  00385C  6FBD               	movwf	_button_bounce_controller& (0+255),b
 14987                           
 14988                           ;fs_menu_controller.c: 91:         menu_flags.menu_input_flag = 0;
 14989  00385E  0E00               	movlw	0
 14990  003860  6FB7               	movwf	_menu_flags& (0+255),b
 14991  003862                     l334:
 14992                           
 14993                           ; BSR set to: 1
 14994                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 14995  003862  51C0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 14996  003864  A4D8               	btfss	status,2,c
 14997  003866  EF37  F01C         	goto	u7601
 14998  00386A  EF39  F01C         	goto	u7600
 14999  00386E                     u7601:
 15000  00386E  EF44  F01C         	goto	l6132
 15001  003872                     u7600:
 15002  003872                     
 15003                           ; BSR set to: 1
 15004  003872  B483               	btfsc	131,2,c	;volatile
 15005  003874  EF3E  F01C         	goto	u7611
 15006  003878  EF40  F01C         	goto	u7610
 15007  00387C                     u7611:
 15008  00387C  EF44  F01C         	goto	l6132
 15009  003880                     u7610:
 15010  003880                     
 15011                           ; BSR set to: 1
 15012                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 15013  003880  0E01               	movlw	1
 15014  003882  6FC0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15015                           
 15016                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 15017  003884  0E01               	movlw	1
 15018  003886  6FBA               	movwf	(_menu_flags+3)& (0+255),b
 15019  003888                     l6132:
 15020                           
 15021                           ; BSR set to: 1
 15022                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 15023  003888  A483               	btfss	131,2,c	;volatile
 15024  00388A  EF49  F01C         	goto	u7621
 15025  00388E  EF4B  F01C         	goto	u7620
 15026  003892                     u7621:
 15027  003892  EF57  F01C         	goto	l336
 15028  003896                     u7620:
 15029  003896                     
 15030                           ; BSR set to: 1
 15031  003896  05C0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 15032  003898  A4D8               	btfss	status,2,c
 15033  00389A  EF51  F01C         	goto	u7631
 15034  00389E  EF53  F01C         	goto	u7630
 15035  0038A2                     u7631:
 15036  0038A2  EF57  F01C         	goto	l336
 15037  0038A6                     u7630:
 15038  0038A6                     
 15039                           ; BSR set to: 1
 15040                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 15041  0038A6  0E00               	movlw	0
 15042  0038A8  6FC0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15043                           
 15044                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 15045  0038AA  0E00               	movlw	0
 15046  0038AC  6FBA               	movwf	(_menu_flags+3)& (0+255),b
 15047  0038AE                     l336:
 15048                           
 15049                           ; BSR set to: 1
 15050                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 15051  0038AE  51BE               	movf	(_button_bounce_controller+1)& (0+255),w,b
 15052  0038B0  A4D8               	btfss	status,2,c
 15053  0038B2  EF5D  F01C         	goto	u7641
 15054  0038B6  EF5F  F01C         	goto	u7640
 15055  0038BA                     u7641:
 15056  0038BA  EF6A  F01C         	goto	l6142
 15057  0038BE                     u7640:
 15058  0038BE                     
 15059                           ; BSR set to: 1
 15060  0038BE  B083               	btfsc	131,0,c	;volatile
 15061  0038C0  EF64  F01C         	goto	u7651
 15062  0038C4  EF66  F01C         	goto	u7650
 15063  0038C8                     u7651:
 15064  0038C8  EF6A  F01C         	goto	l6142
 15065  0038CC                     u7650:
 15066  0038CC                     
 15067                           ; BSR set to: 1
 15068                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 15069  0038CC  0E01               	movlw	1
 15070  0038CE  6FBE               	movwf	(_button_bounce_controller+1)& (0+255),b
 15071                           
 15072                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 15073  0038D0  0E01               	movlw	1
 15074  0038D2  6FB8               	movwf	(_menu_flags+1)& (0+255),b
 15075  0038D4                     l6142:
 15076                           
 15077                           ; BSR set to: 1
 15078                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 15079  0038D4  A083               	btfss	131,0,c	;volatile
 15080  0038D6  EF6F  F01C         	goto	u7661
 15081  0038DA  EF71  F01C         	goto	u7660
 15082  0038DE                     u7661:
 15083  0038DE  EF7D  F01C         	goto	l338
 15084  0038E2                     u7660:
 15085  0038E2                     
 15086                           ; BSR set to: 1
 15087  0038E2  05BE               	decf	(_button_bounce_controller+1)& (0+255),w,b
 15088  0038E4  A4D8               	btfss	status,2,c
 15089  0038E6  EF77  F01C         	goto	u7671
 15090  0038EA  EF79  F01C         	goto	u7670
 15091  0038EE                     u7671:
 15092  0038EE  EF7D  F01C         	goto	l338
 15093  0038F2                     u7670:
 15094  0038F2                     
 15095                           ; BSR set to: 1
 15096                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 15097  0038F2  0E00               	movlw	0
 15098  0038F4  6FBE               	movwf	(_button_bounce_controller+1)& (0+255),b
 15099                           
 15100                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 15101  0038F6  0E00               	movlw	0
 15102  0038F8  6FB8               	movwf	(_menu_flags+1)& (0+255),b
 15103  0038FA                     l338:
 15104                           
 15105                           ; BSR set to: 1
 15106                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 15107  0038FA  51BF               	movf	(_button_bounce_controller+2)& (0+255),w,b
 15108  0038FC  A4D8               	btfss	status,2,c
 15109  0038FE  EF83  F01C         	goto	u7681
 15110  003902  EF85  F01C         	goto	u7680
 15111  003906                     u7681:
 15112  003906  EF90  F01C         	goto	l6152
 15113  00390A                     u7680:
 15114  00390A                     
 15115                           ; BSR set to: 1
 15116  00390A  B283               	btfsc	131,1,c	;volatile
 15117  00390C  EF8A  F01C         	goto	u7691
 15118  003910  EF8C  F01C         	goto	u7690
 15119  003914                     u7691:
 15120  003914  EF90  F01C         	goto	l6152
 15121  003918                     u7690:
 15122  003918                     
 15123                           ; BSR set to: 1
 15124                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 15125  003918  0E01               	movlw	1
 15126  00391A  6FBF               	movwf	(_button_bounce_controller+2)& (0+255),b
 15127                           
 15128                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 15129  00391C  0E01               	movlw	1
 15130  00391E  6FB9               	movwf	(_menu_flags+2)& (0+255),b
 15131  003920                     l6152:
 15132                           
 15133                           ; BSR set to: 1
 15134                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 15135  003920  A283               	btfss	131,1,c	;volatile
 15136  003922  EF95  F01C         	goto	u7701
 15137  003926  EF97  F01C         	goto	u7700
 15138  00392A                     u7701:
 15139  00392A  EFA3  F01C         	goto	l340
 15140  00392E                     u7700:
 15141  00392E                     
 15142                           ; BSR set to: 1
 15143  00392E  05BF               	decf	(_button_bounce_controller+2)& (0+255),w,b
 15144  003930  A4D8               	btfss	status,2,c
 15145  003932  EF9D  F01C         	goto	u7711
 15146  003936  EF9F  F01C         	goto	u7710
 15147  00393A                     u7711:
 15148  00393A  EFA3  F01C         	goto	l340
 15149  00393E                     u7710:
 15150  00393E                     
 15151                           ; BSR set to: 1
 15152                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 15153  00393E  0E00               	movlw	0
 15154  003940  6FBF               	movwf	(_button_bounce_controller+2)& (0+255),b
 15155                           
 15156                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 15157  003942  0E00               	movlw	0
 15158  003944  6FB9               	movwf	(_menu_flags+2)& (0+255),b
 15159  003946                     l340:
 15160                           
 15161                           ; BSR set to: 1
 15162                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 15163  003946  51C2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 15164  003948  A4D8               	btfss	status,2,c
 15165  00394A  EFA9  F01C         	goto	u7721
 15166  00394E  EFAB  F01C         	goto	u7720
 15167  003952                     u7721:
 15168  003952  EFB6  F01C         	goto	l6162
 15169  003956                     u7720:
 15170  003956                     
 15171                           ; BSR set to: 1
 15172  003956  BC81               	btfsc	129,6,c	;volatile
 15173  003958  EFB0  F01C         	goto	u7731
 15174  00395C  EFB2  F01C         	goto	u7730
 15175  003960                     u7731:
 15176  003960  EFB6  F01C         	goto	l6162
 15177  003964                     u7730:
 15178  003964                     
 15179                           ; BSR set to: 1
 15180                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 15181  003964  0E01               	movlw	1
 15182  003966  6FC2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15183                           
 15184                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 15185  003968  0E01               	movlw	1
 15186  00396A  6FBB               	movwf	(_menu_flags+4)& (0+255),b
 15187  00396C                     l6162:
 15188                           
 15189                           ; BSR set to: 1
 15190                           ;fs_menu_controller.c: 136:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 15191  00396C  AC81               	btfss	129,6,c	;volatile
 15192  00396E  EFBB  F01C         	goto	u7741
 15193  003972  EFBD  F01C         	goto	u7740
 15194  003976                     u7741:
 15195  003976  EFC9  F01C         	goto	l342
 15196  00397A                     u7740:
 15197  00397A                     
 15198                           ; BSR set to: 1
 15199  00397A  05C2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 15200  00397C  A4D8               	btfss	status,2,c
 15201  00397E  EFC3  F01C         	goto	u7751
 15202  003982  EFC5  F01C         	goto	u7750
 15203  003986                     u7751:
 15204  003986  EFC9  F01C         	goto	l342
 15205  00398A                     u7750:
 15206  00398A                     
 15207                           ; BSR set to: 1
 15208                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 15209  00398A  0E00               	movlw	0
 15210  00398C  6FC2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15211                           
 15212                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 15213  00398E  0E00               	movlw	0
 15214  003990  6FBB               	movwf	(_menu_flags+4)& (0+255),b
 15215  003992                     l342:
 15216                           
 15217                           ; BSR set to: 1
 15218                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 15219  003992  51C1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 15220  003994  A4D8               	btfss	status,2,c
 15221  003996  EFCF  F01C         	goto	u7761
 15222  00399A  EFD1  F01C         	goto	u7760
 15223  00399E                     u7761:
 15224  00399E  EFDC  F01C         	goto	l6172
 15225  0039A2                     u7760:
 15226  0039A2                     
 15227                           ; BSR set to: 1
 15228  0039A2  B883               	btfsc	131,4,c	;volatile
 15229  0039A4  EFD6  F01C         	goto	u7771
 15230  0039A8  EFD8  F01C         	goto	u7770
 15231  0039AC                     u7771:
 15232  0039AC  EFDC  F01C         	goto	l6172
 15233  0039B0                     u7770:
 15234  0039B0                     
 15235                           ; BSR set to: 1
 15236                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 15237  0039B0  0E01               	movlw	1
 15238  0039B2  6FC1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15239                           
 15240                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 15241  0039B4  0E01               	movlw	1
 15242  0039B6  6FBC               	movwf	(_menu_flags+5)& (0+255),b
 15243  0039B8                     l6172:
 15244                           
 15245                           ; BSR set to: 1
 15246                           ;fs_menu_controller.c: 148:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 15247  0039B8  A883               	btfss	131,4,c	;volatile
 15248  0039BA  EFE1  F01C         	goto	u7781
 15249  0039BE  EFE3  F01C         	goto	u7780
 15250  0039C2                     u7781:
 15251  0039C2  EFEF  F01C         	goto	l345
 15252  0039C6                     u7780:
 15253  0039C6                     
 15254                           ; BSR set to: 1
 15255  0039C6  05C1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 15256  0039C8  A4D8               	btfss	status,2,c
 15257  0039CA  EFE9  F01C         	goto	u7791
 15258  0039CE  EFEB  F01C         	goto	u7790
 15259  0039D2                     u7791:
 15260  0039D2  EFEF  F01C         	goto	l345
 15261  0039D6                     u7790:
 15262  0039D6                     
 15263                           ; BSR set to: 1
 15264                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 15265  0039D6  0E00               	movlw	0
 15266  0039D8  6FC1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15267                           
 15268                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 15269  0039DA  0E00               	movlw	0
 15270  0039DC  6FBC               	movwf	(_menu_flags+5)& (0+255),b
 15271  0039DE                     l345:
 15272                           
 15273                           ; BSR set to: 1
 15274  0039DE  0012               	return		;funcret
 15275  0039E0                     __end_of_buttonControlFlags:
 15276                           	callstack 0
 15277                           
 15278 ;; *************** function _mcu_init *****************
 15279 ;; Defined at:
 15280 ;;		line 42 in file "fs_mcu.c"
 15281 ;; Parameters:    Size  Location     Type
 15282 ;;		None
 15283 ;; Auto vars:     Size  Location     Type
 15284 ;;		None
 15285 ;; Return value:  Size  Location     Type
 15286 ;;                  1    wreg      void 
 15287 ;; Registers used:
 15288 ;;		wreg, status,2
 15289 ;; Tracked objects:
 15290 ;;		On entry : 0/0
 15291 ;;		On exit  : 0/0
 15292 ;;		Unchanged: 0/0
 15293 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15294 ;;      Params:         0       0       0       0       0       0       0
 15295 ;;      Locals:         0       0       0       0       0       0       0
 15296 ;;      Temps:          0       0       0       0       0       0       0
 15297 ;;      Totals:         0       0       0       0       0       0       0
 15298 ;;Total ram usage:        0 bytes
 15299 ;; Hardware stack levels used:    1
 15300 ;; Hardware stack levels required when called:    1
 15301 ;; This function calls:
 15302 ;;		Nothing
 15303 ;; This function is called by:
 15304 ;;		_main
 15305 ;; This function uses a non-reentrant model
 15306 ;;
 15307                           
 15308                           	psect	text65
 15309  005D50                     __ptext65:
 15310                           	callstack 0
 15311  005D50                     _mcu_init:
 15312                           	callstack 29
 15313  005D50                     
 15314                           ;fs_mcu.c: 44:    OSCCONbits.IRCF = 0b111;
 15315  005D50  0E70               	movlw	112
 15316  005D52  12D3               	iorwf	211,f,c	;volatile
 15317  005D54                     
 15318                           ;fs_mcu.c: 45:    OSCTUNEbits.PLLEN = 0b1;
 15319  005D54  8C9B               	bsf	155,6,c	;volatile
 15320  005D56                     l247:
 15321  005D56  A4D3               	btfss	211,2,c	;volatile
 15322  005D58  EFB0  F02E         	goto	u7801
 15323  005D5C  EFB2  F02E         	goto	u7800
 15324  005D60                     u7801:
 15325  005D60  EFAB  F02E         	goto	l247
 15326  005D64                     u7800:
 15327  005D64  0012               	return		;funcret
 15328  005D66                     __end_of_mcu_init:
 15329                           	callstack 0
 15330                           
 15331 ;; *************** function _lcd_init *****************
 15332 ;; Defined at:
 15333 ;;		line 88 in file "fs_lcd.c"
 15334 ;; Parameters:    Size  Location     Type
 15335 ;;		None
 15336 ;; Auto vars:     Size  Location     Type
 15337 ;;		None
 15338 ;; Return value:  Size  Location     Type
 15339 ;;                  1    wreg      void 
 15340 ;; Registers used:
 15341 ;;		wreg, status,2, cstack
 15342 ;; Tracked objects:
 15343 ;;		On entry : 0/0
 15344 ;;		On exit  : 0/0
 15345 ;;		Unchanged: 0/0
 15346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15347 ;;      Params:         0       0       0       0       0       0       0
 15348 ;;      Locals:         0       0       0       0       0       0       0
 15349 ;;      Temps:          2       0       0       0       0       0       0
 15350 ;;      Totals:         2       0       0       0       0       0       0
 15351 ;;Total ram usage:        2 bytes
 15352 ;; Hardware stack levels used:    1
 15353 ;; Hardware stack levels required when called:    3
 15354 ;; This function calls:
 15355 ;;		_Lcd_Cmd
 15356 ;;		_Lcd_Port
 15357 ;; This function is called by:
 15358 ;;		_main
 15359 ;; This function uses a non-reentrant model
 15360 ;;
 15361                           
 15362                           	psect	text66
 15363  00536A                     __ptext66:
 15364                           	callstack 0
 15365  00536A                     _lcd_init:
 15366                           	callstack 27
 15367  00536A                     
 15368                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 15369  00536A  9C95               	bcf	149,6,c	;volatile
 15370                           
 15371                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 15372  00536C  010F               	movlb	15	; () banked
 15373  00536E  9D3B               	bcf	59,6,b	;volatile
 15374                           
 15375                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 15376  005370  9E95               	bcf	149,7,c	;volatile
 15377                           
 15378                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 15379  005372  9F3B               	bcf	59,7,b	;volatile
 15380                           
 15381                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 15382  005374  9093               	bcf	147,0,c	;volatile
 15383                           
 15384                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 15385  005376  9139               	bcf	57,0,b	;volatile
 15386                           
 15387                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 15388  005378  9293               	bcf	147,1,c	;volatile
 15389                           
 15390                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 15391  00537A  9339               	bcf	57,1,b	;volatile
 15392                           
 15393                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 15394  00537C  9493               	bcf	147,2,c	;volatile
 15395                           
 15396                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 15397  00537E  9539               	bcf	57,2,b	;volatile
 15398                           
 15399                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 15400  005380  9693               	bcf	147,3,c	;volatile
 15401                           
 15402                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 15403  005382  9739               	bcf	57,3,b	;volatile
 15404  005384                     
 15405                           ; BSR set to: 15
 15406                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 15407  005384  0E00               	movlw	0
 15408  005386  ECEF  F02B         	call	_Lcd_Port
 15409  00538A                     
 15410                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15411  00538A  0E02               	movlw	2
 15412  00538C  6E05               	movwf	(??_lcd_init+1)^0,c
 15413  00538E  0EA0               	movlw	160
 15414  005390  6E04               	movwf	??_lcd_init^0,c
 15415  005392  0E92               	movlw	146
 15416  005394                     u8007:
 15417  005394  2EE8               	decfsz	wreg,f,c
 15418  005396  D7FE               	bra	u8007
 15419  005398  2E04               	decfsz	??_lcd_init^0,f,c
 15420  00539A  D7FC               	bra	u8007
 15421  00539C  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 15422  00539E  D7FA               	bra	u8007
 15423  0053A0  D000               	nop2	
 15424  0053A2                     
 15425                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 15426  0053A2  0E03               	movlw	3
 15427  0053A4  EC8C  F02E         	call	_Lcd_Cmd
 15428  0053A8                     
 15429                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15430  0053A8  0E68               	movlw	104
 15431  0053AA  6E04               	movwf	??_lcd_init^0,c
 15432  0053AC  0EE4               	movlw	228
 15433  0053AE                     u8017:
 15434  0053AE  2EE8               	decfsz	wreg,f,c
 15435  0053B0  D7FE               	bra	u8017
 15436  0053B2  2E04               	decfsz	??_lcd_init^0,f,c
 15437  0053B4  D7FC               	bra	u8017
 15438  0053B6  D000               	nop2	
 15439  0053B8                     
 15440                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 15441  0053B8  0E03               	movlw	3
 15442  0053BA  EC8C  F02E         	call	_Lcd_Cmd
 15443  0053BE                     
 15444                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15445  0053BE  0EE5               	movlw	229
 15446  0053C0  6E04               	movwf	??_lcd_init^0,c
 15447  0053C2  0E91               	movlw	145
 15448  0053C4                     u8027:
 15449  0053C4  2EE8               	decfsz	wreg,f,c
 15450  0053C6  D7FE               	bra	u8027
 15451  0053C8  2E04               	decfsz	??_lcd_init^0,f,c
 15452  0053CA  D7FC               	bra	u8027
 15453  0053CC  F000               	nop	
 15454  0053CE                     
 15455                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 15456  0053CE  0E03               	movlw	3
 15457  0053D0  EC8C  F02E         	call	_Lcd_Cmd
 15458  0053D4                     
 15459                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 15460  0053D4  0E02               	movlw	2
 15461  0053D6  EC8C  F02E         	call	_Lcd_Cmd
 15462  0053DA                     
 15463                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 15464  0053DA  0E02               	movlw	2
 15465  0053DC  EC8C  F02E         	call	_Lcd_Cmd
 15466  0053E0                     
 15467                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 15468  0053E0  0E08               	movlw	8
 15469  0053E2  EC8C  F02E         	call	_Lcd_Cmd
 15470  0053E6                     
 15471                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 15472  0053E6  0E00               	movlw	0
 15473  0053E8  EC8C  F02E         	call	_Lcd_Cmd
 15474  0053EC                     
 15475                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 15476  0053EC  0E0C               	movlw	12
 15477  0053EE  EC8C  F02E         	call	_Lcd_Cmd
 15478  0053F2                     
 15479                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 15480  0053F2  0E00               	movlw	0
 15481  0053F4  EC8C  F02E         	call	_Lcd_Cmd
 15482  0053F8                     
 15483                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 15484  0053F8  0E06               	movlw	6
 15485  0053FA  EC8C  F02E         	call	_Lcd_Cmd
 15486  0053FE  0012               	return		;funcret
 15487  005400                     __end_of_lcd_init:
 15488                           	callstack 0
 15489                           
 15490 ;; *************** function _adcInit *****************
 15491 ;; Defined at:
 15492 ;;		line 53 in file "fs_adc.c"
 15493 ;; Parameters:    Size  Location     Type
 15494 ;;		None
 15495 ;; Auto vars:     Size  Location     Type
 15496 ;;		None
 15497 ;; Return value:  Size  Location     Type
 15498 ;;                  1    wreg      void 
 15499 ;; Registers used:
 15500 ;;		wreg, status,2
 15501 ;; Tracked objects:
 15502 ;;		On entry : 0/0
 15503 ;;		On exit  : 0/0
 15504 ;;		Unchanged: 0/0
 15505 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15506 ;;      Params:         0       0       0       0       0       0       0
 15507 ;;      Locals:         0       0       0       0       0       0       0
 15508 ;;      Temps:          0       0       0       0       0       0       0
 15509 ;;      Totals:         0       0       0       0       0       0       0
 15510 ;;Total ram usage:        0 bytes
 15511 ;; Hardware stack levels used:    1
 15512 ;; Hardware stack levels required when called:    1
 15513 ;; This function calls:
 15514 ;;		Nothing
 15515 ;; This function is called by:
 15516 ;;		_main
 15517 ;; This function uses a non-reentrant model
 15518 ;;
 15519                           
 15520                           	psect	text67
 15521  005A3C                     __ptext67:
 15522                           	callstack 0
 15523  005A3C                     _adcInit:
 15524                           	callstack 29
 15525  005A3C                     
 15526                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15527  005A3C  8092               	bsf	146,0,c	;volatile
 15528                           
 15529                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15530  005A3E  010F               	movlb	15	; () banked
 15531  005A40  8138               	bsf	56,0,b	;volatile
 15532                           
 15533                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15534  005A42  8292               	bsf	146,1,c	;volatile
 15535                           
 15536                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15537  005A44  8338               	bsf	56,1,b	;volatile
 15538                           
 15539                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15540  005A46  8492               	bsf	146,2,c	;volatile
 15541                           
 15542                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15543  005A48  8538               	bsf	56,2,b	;volatile
 15544                           
 15545                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15546  005A4A  8692               	bsf	146,3,c	;volatile
 15547                           
 15548                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15549  005A4C  8738               	bsf	56,3,b	;volatile
 15550                           
 15551                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15552  005A4E  8A92               	bsf	146,5,c	;volatile
 15553                           
 15554                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15555  005A50  8B38               	bsf	56,5,b	;volatile
 15556                           
 15557                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15558  005A52  8096               	bsf	150,0,c	;volatile
 15559                           
 15560                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15561  005A54  813C               	bsf	60,0,b	;volatile
 15562                           
 15563                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15564  005A56  8296               	bsf	150,1,c	;volatile
 15565                           
 15566                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15567  005A58  833C               	bsf	60,1,b	;volatile
 15568                           
 15569                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15570  005A5A  8496               	bsf	150,2,c	;volatile
 15571                           
 15572                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15573  005A5C  853C               	bsf	60,2,b	;volatile
 15574  005A5E                     
 15575                           ; BSR set to: 15
 15576                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15577  005A5E  0E01               	movlw	1
 15578  005A60  6EC2               	movwf	194,c	;volatile
 15579                           
 15580                           ;fs_adc.c: 80:     ADCON1=0x00;
 15581  005A62  0E00               	movlw	0
 15582  005A64  6EC1               	movwf	193,c	;volatile
 15583  005A66                     
 15584                           ; BSR set to: 15
 15585                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15586  005A66  8EC0               	bsf	192,7,c	;volatile
 15587                           
 15588                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15589  005A68  50C0               	movf	192,w,c	;volatile
 15590  005A6A  0BC7               	andlw	-57
 15591  005A6C  0910               	iorlw	16
 15592  005A6E  6EC0               	movwf	192,c	;volatile
 15593                           
 15594                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15595  005A70  50C0               	movf	192,w,c	;volatile
 15596  005A72  0BF8               	andlw	-8
 15597  005A74  0906               	iorlw	6
 15598  005A76  6EC0               	movwf	192,c	;volatile
 15599  005A78                     
 15600                           ; BSR set to: 15
 15601  005A78  0012               	return		;funcret
 15602  005A7A                     __end_of_adcInit:
 15603                           	callstack 0
 15604                           
 15605 ;; *************** function _PWM_Init *****************
 15606 ;; Defined at:
 15607 ;;		line 17 in file "fs_pwm.c"
 15608 ;; Parameters:    Size  Location     Type
 15609 ;;		None
 15610 ;; Auto vars:     Size  Location     Type
 15611 ;;		None
 15612 ;; Return value:  Size  Location     Type
 15613 ;;                  1    wreg      void 
 15614 ;; Registers used:
 15615 ;;		wreg, status,2
 15616 ;; Tracked objects:
 15617 ;;		On entry : 0/0
 15618 ;;		On exit  : 0/0
 15619 ;;		Unchanged: 0/0
 15620 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15621 ;;      Params:         0       0       0       0       0       0       0
 15622 ;;      Locals:         0       0       0       0       0       0       0
 15623 ;;      Temps:          0       0       0       0       0       0       0
 15624 ;;      Totals:         0       0       0       0       0       0       0
 15625 ;;Total ram usage:        0 bytes
 15626 ;; Hardware stack levels used:    1
 15627 ;; Hardware stack levels required when called:    1
 15628 ;; This function calls:
 15629 ;;		Nothing
 15630 ;; This function is called by:
 15631 ;;		_main
 15632 ;; This function uses a non-reentrant model
 15633 ;;
 15634                           
 15635                           	psect	text68
 15636  005C8C                     __ptext68:
 15637                           	callstack 0
 15638  005C8C                     _PWM_Init:
 15639                           	callstack 29
 15640  005C8C                     
 15641                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15642  005C8C  9494               	bcf	148,2,c	;volatile
 15643                           
 15644                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15645  005C8E  9294               	bcf	148,1,c	;volatile
 15646  005C90                     
 15647                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15648  005C90  0E0C               	movlw	12
 15649  005C92  6EBD               	movwf	189,c	;volatile
 15650                           
 15651                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15652  005C94  0E0C               	movlw	12
 15653  005C96  6E66               	movwf	102,c	;volatile
 15654                           
 15655                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15656  005C98  50BA               	movf	186,w,c	;volatile
 15657  005C9A  0BFC               	andlw	-4
 15658  005C9C  0901               	iorlw	1
 15659  005C9E  6EBA               	movwf	186,c	;volatile
 15660  005CA0                     
 15661                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15662  005CA0  84BA               	bsf	186,2,c	;volatile
 15663                           
 15664                           ;fs_pwm.c: 32:     TMR2 = 0;
 15665  005CA2  0E00               	movlw	0
 15666  005CA4  6EBC               	movwf	188,c	;volatile
 15667                           
 15668                           ;fs_pwm.c: 33:     PR2 = 199;
 15669  005CA6  0EC7               	movlw	199
 15670  005CA8  6EBB               	movwf	187,c	;volatile
 15671                           
 15672                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15673  005CAA  0E00               	movlw	0
 15674  005CAC  6EBE               	movwf	190,c	;volatile
 15675                           
 15676                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15677  005CAE  0E00               	movlw	0
 15678  005CB0  6E67               	movwf	103,c	;volatile
 15679  005CB2  0012               	return		;funcret
 15680  005CB4                     __end_of_PWM_Init:
 15681                           	callstack 0
 15682                           
 15683 ;; *************** function _Lcd_Clear *****************
 15684 ;; Defined at:
 15685 ;;		line 51 in file "fs_lcd.c"
 15686 ;; Parameters:    Size  Location     Type
 15687 ;;		None
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;		None
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  1    wreg      void 
 15692 ;; Registers used:
 15693 ;;		wreg, status,2, cstack
 15694 ;; Tracked objects:
 15695 ;;		On entry : 0/0
 15696 ;;		On exit  : 0/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15699 ;;      Params:         0       0       0       0       0       0       0
 15700 ;;      Locals:         0       0       0       0       0       0       0
 15701 ;;      Temps:          0       0       0       0       0       0       0
 15702 ;;      Totals:         0       0       0       0       0       0       0
 15703 ;;Total ram usage:        0 bytes
 15704 ;; Hardware stack levels used:    1
 15705 ;; Hardware stack levels required when called:    3
 15706 ;; This function calls:
 15707 ;;		_Lcd_Cmd
 15708 ;; This function is called by:
 15709 ;;		_main
 15710 ;; This function uses a non-reentrant model
 15711 ;;
 15712                           
 15713                           	psect	text69
 15714  005D78                     __ptext69:
 15715                           	callstack 0
 15716  005D78                     _Lcd_Clear:
 15717                           	callstack 27
 15718  005D78                     
 15719                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15720  005D78  0E00               	movlw	0
 15721  005D7A  EC8C  F02E         	call	_Lcd_Cmd
 15722                           
 15723                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15724  005D7E  0E01               	movlw	1
 15725  005D80  EC8C  F02E         	call	_Lcd_Cmd
 15726  005D84  0012               	return		;funcret
 15727  005D86                     __end_of_Lcd_Clear:
 15728                           	callstack 0
 15729                           
 15730 ;; *************** function _Lcd_Cmd *****************
 15731 ;; Defined at:
 15732 ;;		line 35 in file "fs_lcd.c"
 15733 ;; Parameters:    Size  Location     Type
 15734 ;;  a               1    wreg     unsigned char 
 15735 ;; Auto vars:     Size  Location     Type
 15736 ;;  a               1    2[COMRAM] unsigned char 
 15737 ;; Return value:  Size  Location     Type
 15738 ;;                  1    wreg      void 
 15739 ;; Registers used:
 15740 ;;		wreg, status,2, cstack
 15741 ;; Tracked objects:
 15742 ;;		On entry : 0/0
 15743 ;;		On exit  : 0/0
 15744 ;;		Unchanged: 0/0
 15745 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15746 ;;      Params:         0       0       0       0       0       0       0
 15747 ;;      Locals:         1       0       0       0       0       0       0
 15748 ;;      Temps:          1       0       0       0       0       0       0
 15749 ;;      Totals:         2       0       0       0       0       0       0
 15750 ;;Total ram usage:        2 bytes
 15751 ;; Hardware stack levels used:    1
 15752 ;; Hardware stack levels required when called:    2
 15753 ;; This function calls:
 15754 ;;		_Lcd_Port
 15755 ;; This function is called by:
 15756 ;;		_Lcd_Clear
 15757 ;;		_Lcd_Set_Cursor
 15758 ;;		_lcd_init
 15759 ;;		_Lcd_Shift_Right
 15760 ;;		_Lcd_Shift_Left
 15761 ;; This function uses a non-reentrant model
 15762 ;;
 15763                           
 15764                           	psect	text70
 15765  005D18                     __ptext70:
 15766                           	callstack 0
 15767  005D18                     _Lcd_Cmd:
 15768                           	callstack 24
 15769                           
 15770                           ;incstack = 0
 15771                           ;Lcd_Cmd@a stored from wreg
 15772  005D18  6E03               	movwf	Lcd_Cmd@a^0,c
 15773  005D1A                     
 15774                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15775  005D1A  9C83               	bcf	131,6,c	;volatile
 15776  005D1C                     
 15777                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15778  005D1C  5003               	movf	Lcd_Cmd@a^0,w,c
 15779  005D1E  ECEF  F02B         	call	_Lcd_Port
 15780  005D22                     
 15781                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15782  005D22  8E83               	bsf	131,7,c	;volatile
 15783  005D24                     
 15784                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15785  005D24  0E2A               	movlw	42
 15786  005D26  6E02               	movwf	??_Lcd_Cmd^0,c
 15787  005D28  0E8E               	movlw	142
 15788  005D2A                     u8037:
 15789  005D2A  2EE8               	decfsz	wreg,f,c
 15790  005D2C  D7FE               	bra	u8037
 15791  005D2E  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15792  005D30  D7FC               	bra	u8037
 15793  005D32                     
 15794                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15795  005D32  9E83               	bcf	131,7,c	;volatile
 15796  005D34  0012               	return		;funcret
 15797  005D36                     __end_of_Lcd_Cmd:
 15798                           	callstack 0
 15799                           
 15800 ;; *************** function _Lcd_Port *****************
 15801 ;; Defined at:
 15802 ;;		line 12 in file "fs_lcd.c"
 15803 ;; Parameters:    Size  Location     Type
 15804 ;;  a               1    wreg     unsigned char 
 15805 ;; Auto vars:     Size  Location     Type
 15806 ;;  a               1    0[COMRAM] unsigned char 
 15807 ;; Return value:  Size  Location     Type
 15808 ;;                  1    wreg      void 
 15809 ;; Registers used:
 15810 ;;		wreg
 15811 ;; Tracked objects:
 15812 ;;		On entry : 0/0
 15813 ;;		On exit  : 0/0
 15814 ;;		Unchanged: 0/0
 15815 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15816 ;;      Params:         0       0       0       0       0       0       0
 15817 ;;      Locals:         1       0       0       0       0       0       0
 15818 ;;      Temps:          0       0       0       0       0       0       0
 15819 ;;      Totals:         1       0       0       0       0       0       0
 15820 ;;Total ram usage:        1 bytes
 15821 ;; Hardware stack levels used:    1
 15822 ;; Hardware stack levels required when called:    1
 15823 ;; This function calls:
 15824 ;;		Nothing
 15825 ;; This function is called by:
 15826 ;;		_Lcd_Cmd
 15827 ;;		_lcd_init
 15828 ;;		_Lcd_Write_Char
 15829 ;; This function uses a non-reentrant model
 15830 ;;
 15831                           
 15832                           	psect	text71
 15833  0057DE                     __ptext71:
 15834                           	callstack 0
 15835  0057DE                     _Lcd_Port:
 15836                           	callstack 24
 15837                           
 15838                           ;incstack = 0
 15839                           ;Lcd_Port@a stored from wreg
 15840  0057DE  6E01               	movwf	Lcd_Port@a^0,c
 15841  0057E0                     
 15842                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15843  0057E0  A001               	btfss	Lcd_Port@a^0,0,c
 15844  0057E2  EFF5  F02B         	goto	u6401
 15845  0057E6  EFF7  F02B         	goto	u6400
 15846  0057EA                     u6401:
 15847  0057EA  EFFA  F02B         	goto	l96
 15848  0057EE                     u6400:
 15849  0057EE  8081               	bsf	129,0,c	;volatile
 15850  0057F0  EFFB  F02B         	goto	l5316
 15851  0057F4                     l96:
 15852  0057F4  9081               	bcf	129,0,c	;volatile
 15853  0057F6                     l5316:
 15854                           
 15855                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15856  0057F6  A201               	btfss	Lcd_Port@a^0,1,c
 15857  0057F8  EF00  F02C         	goto	u6411
 15858  0057FC  EF02  F02C         	goto	u6410
 15859  005800                     u6411:
 15860  005800  EF05  F02C         	goto	l98
 15861  005804                     u6410:
 15862  005804  8281               	bsf	129,1,c	;volatile
 15863  005806  EF06  F02C         	goto	l5320
 15864  00580A                     l98:
 15865  00580A  9281               	bcf	129,1,c	;volatile
 15866  00580C                     l5320:
 15867                           
 15868                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15869  00580C  A401               	btfss	Lcd_Port@a^0,2,c
 15870  00580E  EF0B  F02C         	goto	u6421
 15871  005812  EF0D  F02C         	goto	u6420
 15872  005816                     u6421:
 15873  005816  EF10  F02C         	goto	l100
 15874  00581A                     u6420:
 15875  00581A  8481               	bsf	129,2,c	;volatile
 15876  00581C  EF11  F02C         	goto	l5324
 15877  005820                     l100:
 15878  005820  9481               	bcf	129,2,c	;volatile
 15879  005822                     l5324:
 15880                           
 15881                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15882  005822  A601               	btfss	Lcd_Port@a^0,3,c
 15883  005824  EF16  F02C         	goto	u6431
 15884  005828  EF18  F02C         	goto	u6430
 15885  00582C                     u6431:
 15886  00582C  EF1B  F02C         	goto	l102
 15887  005830                     u6430:
 15888  005830  8681               	bsf	129,3,c	;volatile
 15889  005832  EF1C  F02C         	goto	l104
 15890  005836                     l102:
 15891  005836  9681               	bcf	129,3,c	;volatile
 15892  005838                     l104:
 15893  005838  0012               	return		;funcret
 15894  00583A                     __end_of_Lcd_Port:
 15895                           	callstack 0
 15896                           
 15897 ;; *************** function _TIMER0 *****************
 15898 ;; Defined at:
 15899 ;;		line 33 in file "fs_timer.c"
 15900 ;; Parameters:    Size  Location     Type
 15901 ;;		None
 15902 ;; Auto vars:     Size  Location     Type
 15903 ;;		None
 15904 ;; Return value:  Size  Location     Type
 15905 ;;                  1    wreg      void 
 15906 ;; Registers used:
 15907 ;;		wreg, status,2, status,0
 15908 ;; Tracked objects:
 15909 ;;		On entry : 0/0
 15910 ;;		On exit  : 0/0
 15911 ;;		Unchanged: 0/0
 15912 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15913 ;;      Params:         0       0       0       0       0       0       0
 15914 ;;      Locals:         0       0       0       0       0       0       0
 15915 ;;      Temps:          0       0       0       0       0       0       0
 15916 ;;      Totals:         0       0       0       0       0       0       0
 15917 ;;Total ram usage:        0 bytes
 15918 ;; Hardware stack levels used:    1
 15919 ;; This function calls:
 15920 ;;		Nothing
 15921 ;; This function is called by:
 15922 ;;		Interrupt level 2
 15923 ;; This function uses a non-reentrant model
 15924 ;;
 15925                           
 15926                           	psect	intcode
 15927  000008                     __pintcode:
 15928                           	callstack 0
 15929  000008                     _TIMER0:
 15930                           	callstack 19
 15931                           
 15932                           ;incstack = 0
 15933  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15934  00000A                     
 15935                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15936  00000A  A4F2               	btfss	242,2,c	;volatile
 15937  00000C  EF0A  F000         	goto	i2u791_41
 15938  000010  EF0C  F000         	goto	i2u791_40
 15939  000014                     i2u791_41:
 15940  000014  EF4B  F000         	goto	i2l537
 15941  000018                     i2u791_40:
 15942  000018  AAF2               	btfss	242,5,c	;volatile
 15943  00001A  EF11  F000         	goto	i2u792_41
 15944  00001E  EF13  F000         	goto	i2u792_40
 15945  000022                     i2u792_41:
 15946  000022  EF4B  F000         	goto	i2l537
 15947  000026                     i2u792_40:
 15948  000026                     
 15949                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15950  000026  94F2               	bcf	242,2,c	;volatile
 15951  000028                     
 15952                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15953  000028  0E63               	movlw	99
 15954  00002A  6ED7               	movwf	215,c	;volatile
 15955                           
 15956                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15957  00002C  0EC0               	movlw	192
 15958  00002E  6ED6               	movwf	214,c	;volatile
 15959  000030                     
 15960                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15961  000030  0101               	movlb	1	; () banked
 15962  000032  2BB4               	incf	(_timer_value+5)& (0+255),f,b
 15963  000034                     
 15964                           ; BSR set to: 1
 15965                           ;fs_timer.c: 43:         if (startIsClick == 1)
 15966  000034  0100               	movlb	0	; () banked
 15967  000036  05FD               	decf	_startIsClick& (0+255),w,b
 15968  000038  A4D8               	btfss	status,2,c
 15969  00003A  EF21  F000         	goto	i2u793_41
 15970  00003E  EF23  F000         	goto	i2u793_40
 15971  000042                     i2u793_41:
 15972  000042  EF26  F000         	goto	i2l6356
 15973  000046                     i2u793_40:
 15974  000046                     
 15975                           ; BSR set to: 0
 15976                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.second_counter++;
 15977  000046  0101               	movlb	1	; () banked
 15978  000048  4BB5               	infsnz	(_timer_value+6)& (0+255),f,b
 15979  00004A  2BB6               	incf	(_timer_value+7)& (0+255),f,b
 15980  00004C                     i2l6356:
 15981                           
 15982                           ;fs_timer.c: 48:         if(button_bounce_controller.menu == 1)
 15983  00004C  0101               	movlb	1	; () banked
 15984  00004E  05BD               	decf	_button_bounce_controller& (0+255),w,b
 15985  000050  A4D8               	btfss	status,2,c
 15986  000052  EF2D  F000         	goto	i2u794_41
 15987  000056  EF2F  F000         	goto	i2u794_40
 15988  00005A                     i2u794_41:
 15989  00005A  EF30  F000         	goto	i2l6360
 15990  00005E                     i2u794_40:
 15991  00005E                     
 15992                           ; BSR set to: 1
 15993                           ;fs_timer.c: 49:         {;fs_timer.c: 50:              timer_value.menu_login_delay++;
 15994  00005E  2BB3               	incf	(_timer_value+4)& (0+255),f,b
 15995  000060                     i2l6360:
 15996                           
 15997                           ; BSR set to: 1
 15998                           ;fs_timer.c: 52:         if(button_bounce_controller.menu == 0)
 15999  000060  51BD               	movf	_button_bounce_controller& (0+255),w,b
 16000  000062  A4D8               	btfss	status,2,c
 16001  000064  EF36  F000         	goto	i2u795_41
 16002  000068  EF38  F000         	goto	i2u795_40
 16003  00006C                     i2u795_41:
 16004  00006C  EF3A  F000         	goto	i2l6364
 16005  000070                     i2u795_40:
 16006  000070                     
 16007                           ; BSR set to: 1
 16008                           ;fs_timer.c: 53:         {;fs_timer.c: 54:              timer_value.menu_login_delay = 0
      +                          ;
 16009  000070  0E00               	movlw	0
 16010  000072  6FB3               	movwf	(_timer_value+4)& (0+255),b
 16011  000074                     i2l6364:
 16012                           
 16013                           ; BSR set to: 1
 16014                           ;fs_timer.c: 57:         if (timer_value.second_counter >= 100)
 16015  000074  51B6               	movf	(_timer_value+7)& (0+255),w,b
 16016  000076  E109               	bnz	i2u796_40
 16017  000078  0E64               	movlw	100
 16018  00007A  5DB5               	subwf	(_timer_value+6)& (0+255),w,b
 16019  00007C  A0D8               	btfss	status,0,c
 16020  00007E  EF43  F000         	goto	i2u796_41
 16021  000082  EF45  F000         	goto	i2u796_40
 16022  000086                     i2u796_41:
 16023  000086  EF4B  F000         	goto	i2l537
 16024  00008A                     i2u796_40:
 16025  00008A                     
 16026                           ; BSR set to: 1
 16027                           ;fs_timer.c: 58:         {;fs_timer.c: 59:             timer_value.second_counter = 0;
 16028  00008A  0E00               	movlw	0
 16029  00008C  6FB6               	movwf	(_timer_value+7)& (0+255),b
 16030  00008E  0E00               	movlw	0
 16031  000090  6FB5               	movwf	(_timer_value+6)& (0+255),b
 16032  000092                     
 16033                           ; BSR set to: 1
 16034                           ;fs_timer.c: 60:             timer_counter_flag.one_second_flag = 1;
 16035  000092  0100               	movlb	0	; () banked
 16036  000094  81FF               	bsf	_timer_counter_flag& (0+255),0,b
 16037  000096                     i2l537:
 16038  000096  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16039  000098  0011               	retfie		f
 16040  00009A                     __end_of_TIMER0:
 16041                           	callstack 0
 16042                           
 16043                           	psect	rparam
 16044  0000                     
 16045                           	psect	temp
 16046  00005F                     btemp:
 16047                           	callstack 0
 16048  00005F                     	ds	1
 16049  0000                     int$flags	set	btemp
 16050  0000                     wtemp8	set	btemp+1
 16051  0000                     ttemp5	set	btemp+1
 16052  0000                     ttemp6	set	btemp+4
 16053  0000                     ttemp7	set	btemp+8
 16054                           
 16055                           	psect	idloc
 16056                           
 16057                           ;Config register IDLOC0 @ 0x200000
 16058                           ;	unspecified, using default values
 16059  200000                     	org	2097152
 16060  200000  FF                 	db	255
 16061                           
 16062                           ;Config register IDLOC1 @ 0x200001
 16063                           ;	unspecified, using default values
 16064  200001                     	org	2097153
 16065  200001  FF                 	db	255
 16066                           
 16067                           ;Config register IDLOC2 @ 0x200002
 16068                           ;	unspecified, using default values
 16069  200002                     	org	2097154
 16070  200002  FF                 	db	255
 16071                           
 16072                           ;Config register IDLOC3 @ 0x200003
 16073                           ;	unspecified, using default values
 16074  200003                     	org	2097155
 16075  200003  FF                 	db	255
 16076                           
 16077                           ;Config register IDLOC4 @ 0x200004
 16078                           ;	unspecified, using default values
 16079  200004                     	org	2097156
 16080  200004  FF                 	db	255
 16081                           
 16082                           ;Config register IDLOC5 @ 0x200005
 16083                           ;	unspecified, using default values
 16084  200005                     	org	2097157
 16085  200005  FF                 	db	255
 16086                           
 16087                           ;Config register IDLOC6 @ 0x200006
 16088                           ;	unspecified, using default values
 16089  200006                     	org	2097158
 16090  200006  FF                 	db	255
 16091                           
 16092                           ;Config register IDLOC7 @ 0x200007
 16093                           ;	unspecified, using default values
 16094  200007                     	org	2097159
 16095  200007  FF                 	db	255
 16096                           
 16097                           	psect	config
 16098                           
 16099                           ; Padding undefined space
 16100  300000                     	org	3145728
 16101  300000  FF                 	db	255
 16102                           
 16103                           ;Config register CONFIG1H @ 0x300001
 16104                           ;	Oscillator Selection bits
 16105                           ;	FOSC = INTIO67, Internal oscillator block
 16106                           ;	4X PLL Enable
 16107                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16108                           ;	Primary clock enable bit
 16109                           ;	PRICLKEN = ON, Primary clock is always enabled
 16110                           ;	Fail-Safe Clock Monitor Enable bit
 16111                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16112                           ;	Internal/External Oscillator Switchover bit
 16113                           ;	IESO = ON, Oscillator Switchover mode enabled
 16114  300001                     	org	3145729
 16115  300001  B8                 	db	184
 16116                           
 16117                           ;Config register CONFIG2L @ 0x300002
 16118                           ;	Power-up Timer Enable bit
 16119                           ;	PWRTEN = OFF, Power up timer disabled
 16120                           ;	Brown-out Reset Enable bits
 16121                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16122                           ;	Brown Out Reset Voltage bits
 16123                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16124  300002                     	org	3145730
 16125  300002  1F                 	db	31
 16126                           
 16127                           ;Config register CONFIG2H @ 0x300003
 16128                           ;	Watchdog Timer Enable bits
 16129                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16130                           ;	Watchdog Timer Postscale Select bits
 16131                           ;	WDTPS = 32768, 1:32768
 16132  300003                     	org	3145731
 16133  300003  3C                 	db	60
 16134                           
 16135                           ; Padding undefined space
 16136  300004                     	org	3145732
 16137  300004  FF                 	db	255
 16138                           
 16139                           ;Config register CONFIG3H @ 0x300005
 16140                           ;	CCP2 MUX bit
 16141                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16142                           ;	PORTB A/D Enable bit
 16143                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16144                           ;	P3A/CCP3 Mux bit
 16145                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16146                           ;	HFINTOSC Fast Start-up
 16147                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16148                           ;	Timer3 Clock input mux bit
 16149                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16150                           ;	ECCP2 B output mux bit
 16151                           ;	P2BMX = PORTD2, P2B is on RD2
 16152                           ;	MCLR Pin Enable bit
 16153                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16154  300005                     	org	3145733
 16155  300005  BD                 	db	189
 16156                           
 16157                           ;Config register CONFIG4L @ 0x300006
 16158                           ;	Stack Full/Underflow Reset Enable bit
 16159                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16160                           ;	Single-Supply ICSP Enable bit
 16161                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16162                           ;	Extended Instruction Set Enable bit
 16163                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16164                           ;	Background Debug
 16165                           ;	DEBUG = 0x1, unprogrammed default
 16166  300006                     	org	3145734
 16167  300006  84                 	db	132
 16168                           
 16169                           ; Padding undefined space
 16170  300007                     	org	3145735
 16171  300007  FF                 	db	255
 16172                           
 16173                           ;Config register CONFIG5L @ 0x300008
 16174                           ;	Code Protection Block 0
 16175                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16176                           ;	Code Protection Block 1
 16177                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16178                           ;	Code Protection Block 2
 16179                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16180                           ;	Code Protection Block 3
 16181                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16182  300008                     	org	3145736
 16183  300008  0F                 	db	15
 16184                           
 16185                           ;Config register CONFIG5H @ 0x300009
 16186                           ;	Boot Block Code Protection bit
 16187                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16188                           ;	Data EEPROM Code Protection bit
 16189                           ;	CPD = OFF, Data EEPROM not code-protected
 16190  300009                     	org	3145737
 16191  300009  C0                 	db	192
 16192                           
 16193                           ;Config register CONFIG6L @ 0x30000A
 16194                           ;	Write Protection Block 0
 16195                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16196                           ;	Write Protection Block 1
 16197                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16198                           ;	Write Protection Block 2
 16199                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16200                           ;	Write Protection Block 3
 16201                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16202  30000A                     	org	3145738
 16203  30000A  0F                 	db	15
 16204                           
 16205                           ;Config register CONFIG6H @ 0x30000B
 16206                           ;	Configuration Register Write Protection bit
 16207                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16208                           ;	Boot Block Write Protection bit
 16209                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16210                           ;	Data EEPROM Write Protection bit
 16211                           ;	WRTD = OFF, Data EEPROM not write-protected
 16212  30000B                     	org	3145739
 16213  30000B  E0                 	db	224
 16214                           
 16215                           ;Config register CONFIG7L @ 0x30000C
 16216                           ;	Table Read Protection Block 0
 16217                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16218                           ;	Table Read Protection Block 1
 16219                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16220                           ;	Table Read Protection Block 2
 16221                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16222                           ;	Table Read Protection Block 3
 16223                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16224  30000C                     	org	3145740
 16225  30000C  0F                 	db	15
 16226                           
 16227                           ;Config register CONFIG7H @ 0x30000D
 16228                           ;	Boot Block Table Read Protection bit
 16229                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16230  30000D                     	org	3145741
 16231  30000D  40                 	db	64
 16232                           tosu	equ	0xFFF
 16233                           tosh	equ	0xFFE
 16234                           tosl	equ	0xFFD
 16235                           stkptr	equ	0xFFC
 16236                           pclatu	equ	0xFFB
 16237                           pclath	equ	0xFFA
 16238                           pcl	equ	0xFF9
 16239                           tblptru	equ	0xFF8
 16240                           tblptrh	equ	0xFF7
 16241                           tblptrl	equ	0xFF6
 16242                           tablat	equ	0xFF5
 16243                           prodh	equ	0xFF4
 16244                           prodl	equ	0xFF3
 16245                           indf0	equ	0xFEF
 16246                           postinc0	equ	0xFEE
 16247                           postdec0	equ	0xFED
 16248                           preinc0	equ	0xFEC
 16249                           plusw0	equ	0xFEB
 16250                           fsr0h	equ	0xFEA
 16251                           fsr0l	equ	0xFE9
 16252                           wreg	equ	0xFE8
 16253                           indf1	equ	0xFE7
 16254                           postinc1	equ	0xFE6
 16255                           postdec1	equ	0xFE5
 16256                           preinc1	equ	0xFE4
 16257                           plusw1	equ	0xFE3
 16258                           fsr1h	equ	0xFE2
 16259                           fsr1l	equ	0xFE1
 16260                           bsr	equ	0xFE0
 16261                           indf2	equ	0xFDF
 16262                           postinc2	equ	0xFDE
 16263                           postdec2	equ	0xFDD
 16264                           preinc2	equ	0xFDC
 16265                           plusw2	equ	0xFDB
 16266                           fsr2h	equ	0xFDA
 16267                           fsr2l	equ	0xFD9
 16268                           status	equ	0xFD8

Data Sizes:
    Strings     230
    Constant    0
    Data        32
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     144
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[18]), STR_14(CODE[16]), STR_12(CODE[18]), STR_10(CODE[13]), 
		 -> STR_8(CODE[14]), STR_6(CODE[16]), STR_4(CODE[16]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2424_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_13(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_11(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_9(CODE[17]), STR_7(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_1(CODE[17]), mainMenu@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  408703
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0  402025
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  402025
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   52813
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52313
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   52813
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60122
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52313
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   78838
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                         _startMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   52813
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (5) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (5) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (6) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _mainMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
       _pauseMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      90       8       56.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     281       9        0.0%
DATA                 0      0     281      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 16 00:52:15 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
                    ___fldiv@sign 0045                                l41 5A78  
                              l35 59D2                                l38 59FA  
                              l54 1A9C                                l70 5D06  
                              l72 5D14                                l57 3044  
                              l73 5D16                                l76 5C50  
                              l78 5C5E                                _KD 01EB  
                              l79 5C62                                l96 57F4  
                              l98 580A                                _KP 01EF  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
             __end_of_system_init 46E4                               l100 5820  
                             l102 5836                               l110 5D84  
                             l104 5838          ??_calculatedAverageValue 001C  
                             l122 5B94                               l107 5D34  
                             l116 5720                               l119 53FE  
                             l128 547C                               l250 5D64  
                             l330 5C8A                               l340 3946  
                             l253 46E2                               l342 3992  
                             l334 3862                               l247 5D56  
                             l351 55E6                               l336 38AE  
                             l408 35FC                               l424 4784  
                             l345 39DE                               l417 49F4  
                             l338 38FA                               l426 47EA  
                             l435 45C2                               l371 3E04  
                             l460 5570                               l372 3E54  
                             l540 5D76                               l365 521A  
                             l382 4E6C                               l543 5CD8  
                             l375 3EE8                               l391 449A  
                    _startIsClick 00FD                               l456 5CB2  
                             l464 54F6                               l802 52C4  
                             l570 5358                               l554 5640  
                             l394 5D4E                               l555 5650  
                             l387 43F6                               l813 4AF8  
                             l493 3B9C                               l670 4364  
                             l808 4AB2                               l840 48F0  
                             l496 5AB4                               l657 4200  
                             l817 5B24                               l577 5368  
                             l499 5BCA                               l774 50C0  
                             l787 5170                               _PR2 000FBB  
                             _abs 59FC                               _pad 4F38  
                    ___awmod@sign 0006                               wreg 000FE8  
                    ___flmul@aexp 002D                      ___flmul@bexp 002E  
             stopMenu@textCursor2 00E1                      ___flmul@sign 0028  
                    ___flmul@temp 0033                      ___flmul@prod 002F  
                     _stopIsClick 00FC                      ___fltol@exp1 0057  
                            l1113 5974                              l1201 3D50  
                            l1130 2B82                              ?_abs 0013  
                            l1300 3328                              l1212 3CE8  
                            l1125 2D5E                              l1205 3C8C  
                            l1127 2BBE                              l1071 22CA  
                            l1136 2C04                              l1080 259A  
                            l1072 22B8                              l1161 29C4  
                            l1073 227E                              l1138 2C7C  
                            l1226 58DC                              l1139 2C6A  
                            l1219 5C34                              l1500 5B5C  
                            l1164 2856                              l1420 20DA  
                            l1157 2660                              l1174 2986  
                            l1166 28CE                              l1318 1296  
                            l1167 28BC                              l1272 4FC0  
                            l1280 30E6                              l1088 23E4  
                            l1336 0AD4                              l1097 24B4  
                            l1450 5A32                              l4010 4EBA  
                            l4002 4E6E                              l1274 4FFC  
                            l1282 30EE                              l1098 24A2  
                            l1514 5AEC                              l1362 0E6C  
                            l1434 56B2                              l1435 56BA  
                            l1508 592E                              l1540 5D86  
                            l4012 4EF0                              l4004 4E80  
                            l4100 2266                              l4020 20F6  
                            l1428 2020                              l1453 5A3A  
                            l1269 4F7E                              l1445 4BF6  
                            l4006 4E92                              l4110 22AA  
                            l4102 2276                              l4030 212A  
                            l4022 20F8                              l1198 3BF4  
                            l4008 4E9C                              l1552 5C00  
                            l4200 255A                              l4112 22AC  
                            l4104 228C                              l4040 215C  
                            l4024 2108                              l4032 2132  
                            l4016 20DC                              l1481 4070  
                            l1529 4F36                              l1537 59B8  
                            l4210 257A                              l4202 255E  
                            l4130 2334                              l4122 22FC  
                            l4114 22B6                              l4106 2298  
                            l4050 2192                              l4042 2162  
                            l4034 2142                              l4026 2118  
                            l4018 20E8                              l1490 3812  
                            l1546 57DC                              l5010 096C  
                            l1571 5780                              l1484 4078  
                            l4300 4246                              l4220 5982  
                            l4212 2588                              l4204 256C  
                            l4132 2338                              l4124 230C  
                            l4116 22D8                              l4140 2358  
                            l4108 229C                              l4060 21CE  
                            l4052 21A2                              l4044 2170  
                            l4036 2148                              l4028 2128  
                            l5100 0E00                              l5020 0A3C  
                            l5012 09A0                              l5004 091C  
                            l1556 4CCC                              l1493 3756  
                            l4310 42AE                              l4302 4266  
                            l4222 5994                              l4230 5BDC  
                            l4214 258A                              l4206 2572  
                            l4142 237E                              l4150 23D4  
                            l4134 2346                              l4126 231A  
                            l4118 22E8                              l4070 21EC  
                            l4062 21DC                              l4054 21A4  
                            l4046 2172                              l4038 215A  
                            l1566 5778                              l5110 0E88  
                            l5102 0E34                              l5030 0AA6  
                            l5014 09A6                              l5022 0A6E  
                            l5006 0936                              l4240 5CB4  
                            l4320 4324                              l4312 42DC  
                            l4304 4284                              l4224 5998  
                            l4232 5BF4                              l4400 2B80  
                            l4208 2574                              l4160 2428  
                            l4152 23FA                              l4144 23B2  
                            l4136 2348                              l4128 2328  
                            l4080 2200                              l4072 21F0  
                            l4064 21E0                              l4048 2182  
                            l4056 21AC                              l5200 11A4  
                            l5120 0F2E                              l5112 0EEC  
                            l5104 0E44                              l5032 0AAE  
                            l5024 0A7E                              l5016 0A00  
                            l6000 4382                              l4242 5CD0  
                            l4250 408C                              l4322 4344  
                            l4314 42FC                              l4306 428C  
                            l4218 5976                              l4226 5BCC  
                            l4410 2BCE                              l4402 2B8C  
                            l4330 29E0                              l4170 2452  
                            l4162 2436                              l4154 240A  
                            l4146 23B4                              l4138 2352  
                            l4090 2214                              l4082 2204  
                            l4074 21F4                              l4066 21E4  
                            l4058 21BC                              l5210 11EA  
                            l5202 11BE                              l5130 0F6A  
                            l5114 0EFC                              l5122 0F36  
                            l5106 0E58                              l5050 0B5E  
                            l5042 0AF2                              l5034 0AC8  
                            l5026 0A82                              l5018 0A34  
                            l6010 43E0                              l6002 438E  
                            l4260 40E2                              l4252 40AC  
                            l4316 430E                              l4308 42A0  
                            l4228 5BD8                              l4412 2BE4  
                            l4420 2C14                              l4404 2BAA  
                            l4340 2A14                              l4332 29E2  
                            l4500 2680                              l4180 2484  
                            l4172 2462                              l4164 2438  
                            l4148 23C4                              l4092 2218  
                            l4084 2208                              l4076 21F8  
                            l4068 21E8                              l4236 5AB6  
                            l5220 123A                              l5212 11FA  
                            l5204 11C4                              l5140 0F96  
                            l5132 0F70                              l5124 0F48  
                            l5116 0F0E                              l5108 0E64  
                            l5060 0B9C                              l5044 0B04  
                            l5052 0B62                              l5028 0A94  
                            l5036 0AE0                              l5300 59BC  
                            l6020 443E                              l6012 4408  
                            l6004 4398                              l6100 35A6  
                            l4270 4136                              l4262 40EE  
                            l4254 40B0                              l4246 407A  
                            l4318 4314                              l4422 2C22  
                            l4414 2BEA                              l4406 2BAC  
                            l4350 2A46                              l4334 29F2  
                            l4342 2A1C                              l4326 29C6  
                            l4510 26C0                              l4190 24DE  
                            l4182 249A                              l4166 2446  
                            l4158 241E                              l4174 2464  
                            l4086 220C                              l4078 21FC  
                            l4094 221C                              l5230 1276  
                            l5222 124C                              l5214 1200  
                            l5206 11D6                              l5134 0F7C  
                            l5126 0F56                              l5142 0F9C  
                            l5150 0FCA                              l5118 0F20  
                            l5070 0BEA                              l5062 0BA0  
                            l5054 0B6A                              l5046 0B20  
                            l5302 59CE                              l6030 448C  
                            l6014 4418                              l6022 444C  
                            l6006 43C2                              l6102 35AA  
                            l6110 5D00                              l5320 580C  
                            l5312 57E0                              l6120 3834  
                            l5240 3F02                              l4280 41AA  
                            l4272 4148                              l4264 410C  
                            l4256 40BE                              l4248 407E  
                            l4600 4FFE                              l4432 2C8C  
                            l4440 2CD4                              l4424 2C26  
                            l4416 2BF4                              l4408 2BBC  
                            l4360 2A7A                              l4352 2A48  
                            l4344 2A2C                              l4336 2A02  
                            l4328 29D2                              l4520 270A  
                            l4512 26CC                              l4504 2694  
                            l4192 2518                              l4168 244E  
                            l4176 2472                              l4096 2220  
                            l4088 2210                              l5224 1258  
                            l5216 1206                              l5208 11E2  
                            l5160 1080                              l5152 1022  
                            l5144 0FAE                              l5136 0F8C  
                            l5128 0F66                              l5080 0C82  
                            l5064 0BB2                              l5072 0BF2  
                            l5056 0B7C                              l5048 0B56  
                            l5400 3CF8                              l5304 59D0  
                            l6032 4496                              l6024 4460  
                            l6016 4428                              l6008 43CE  
                            l6104 35DE                              l6040 334C  
                            l6112 5D02                              l5322 581A  
                            l5314 57EE                              l6210 5D78  
                            l6130 3880                              l6122 383C  
                            l5242 3F06                              l4274 4176  
                            l4266 4114                              l4282 41B0  
                            l4258 40DE                              l4290 4202  
                            l4610 502A                              l4602 5002  
                            l4450 2D3E                              l4442 2CEE  
                            l4434 2C98                              l4426 2C34  
                            l4418 2C02                              l4370 2AC0  
                            l4354 2A58                              l4362 2A82  
                            l4346 2A32                              l4338 2A12  
                            l4530 275C                              l4522 2716  
                            l4514 26E4                              l4506 26A0  
                            l4186 24C4                              l4194 251A  
                            l4178 2476                              l4098 224A  
                            l5226 1260                              l5170 10D0  
                            l5162 109C                              l5154 1056  
                            l5146 0FC0                              l5138 0F90  
                            l5090 0D66                              l5082 0CDA  
                            l5074 0BFA                              l5066 0BC0  
                            l5058 0B8E                              l5410 3D40  
                            l5402 3CFC                              l5330 5C22  
                            l5306 59E0                              l6026 446A  
                            l6018 443A                              l6106 35F2  
                            l6050 337A                              l6042 3350  
                            l6034 332A                              l6114 5D04  
                            l5324 5822                              l5316 57F6  
                            l6204 5A3C                              l6220 53A8  
                            l6212 536A                              l6140 38CC  
                            l6132 3888                              l6124 384A  
                            l6116 3814                              l5260 3FBC  
                            l5252 3F62                              l5244 3F22  
                            l5236 3EEA                              l4284 41C0  
                            l4276 4196                              l4268 4128  
                            l4292 4206                              l4620 5058  
                            l4612 5032                              l4604 5010  
                            l4452 2D4C                              l4444 2D04  
                            l4436 2CA6                              l4428 2C62  
                            l4380 2AE8                              l4372 2AC4  
                            l4364 2A92                              l4356 2A68  
                            l4348 2A38                              l4700 4A34  
                            l4540 27DA                              l4532 276C  
                            l4524 2726                              l4516 26F0  
                            l4508 26AA                              l4196 252A  
                            l4188 24D0                              l5228 1270  
                            l5180 1112                              l5172 10E0  
                            l5164 10AE                              l5156 105E  
                            l5148 0FC4                              l5092 0D98  
                            l5084 0D0E                              l5076 0C0A  
                            l5068 0BD8                              l5500 1FBC  
                            l5420 1AE2                              l5404 3D20  
                            l5332 5C24                              l5340 5606  
                            l5308 59F2                              l6028 447C  
                            l6060 33CC                              l6052 3384  
                            l6044 3354                              l6036 3336  
                            l6108 5CFC                              l6300 4CDA  
                            l5326 5830                              l5318 5804  
                            l6206 5A5E                              l6230 53DA  
                            l6222 53B8                              l6214 5384  
                            l6150 3918                              l6142 38D4  
                            l6134 3896                              l6126 385A  
                            l6118 3826                              l5270 4042  
                            l5254 3F78                              l5246 3F58  
                            l5238 3EFE                              l4286 41E0  
                            l4278 4198                              l4294 4214  
                            l4630 5092                              l4622 5060  
                            l4614 5036                              l4606 5018  
                            l4454 2D52                              l4446 2D1E  
                            l4438 2CD0                              l4390 2B36  
                            l4366 2AA8                              l4358 2A78  
                            l4710 4AA0                              l4702 4A62  
                            l4550 2854                              l4542 2810  
                            l4534 2788                              l4526 2732  
                            l4518 26FC                              l4470 25B8  
                            l4198 253A                              l5190 1142  
                            l5182 1120                              l5174 10F2  
                            l5166 10BC                              l5158 1062  
                            l5094 0DAE                              l5078 0C1E  
                            l5086 0D14                              l5510 2058  
                            l5502 1FF0                              l5430 1B64  
                            l5422 1AE8                              l5414 1A9E  
                            l5406 3D30                              l5350 52EC  
                            l5342 5616                              l6070 345C  
                            l6062 33DE                              l6054 3390  
                            l6046 3364                              l6038 333A  
                            l6310 4CEE                              l6302 4CDE  
                            ?_pad 0011                              l6208 5A66  
                            l6240 53F8                              l6232 53E0  
                            l6224 53BE                              l6216 538A  
                            l6160 3964                              l6152 3920  
                            l6144 38E2                              l6136 38A6  
                            l6128 3872                              l5272 4054  
                            l5264 3FF2                              l5256 3F80  
                            l5248 3F5C                              l4296 4234  
                            l4640 50B8                              l4632 5094  
                            l4624 506E                              l4616 503E  
                            l4608 501C                              l4456 2D54  
                            l4448 2D3A                              l4392 2B46  
                            l4384 2AFC                              l4368 2AB8  
                            l4376 2AD8                              l4712 4AF0  
                            l4704 4A72                              l4560 28B4  
                            l4552 2866                              l4544 281E  
                            l4536 2794                              l4528 2742  
                            l4480 25FE                              l4472 25C8  
                            l4464 259C                              l4720 5B04  
                            l4800 4B58                              l5192 1168  
                            l5184 1128                              l5176 10FA  
                            l5168 10CC                              l5096 0DE0  
                            l5088 0D32                              l5280 4C22  
                            l5520 2096                              l5512 2066  
                            l5432 1B84                              l5440 1BEC  
                            l5424 1B0C                              l5416 1AC2  
                            l5408 3D3E                              l5328 5C02  
                            l5360 5336                              l5352 52F4  
                            l5344 5620                              l5336 55E8  
                            l5600 2F52                              l6080 34C0  
                            l6072 346A                              l6064 3410  
                            l6056 339A                              l6048 3368  
                            l6320 4D28                              l6312 4CFA  
                            l6304 4CE2                              l5610 5D24  
                            l6234 53E6                              l6226 53CE  
                            l6218 53A2                              l6242 5D50  
                            l6170 39B0                              l6162 396C  
                            l6154 392E                              l6146 38F2  
                            l6138 38BE                              l5258 3F88  
                            l4298 4238                              l4634 509A  
                            l4626 5074                              l4618 5050  
                            l4650 50DC                              l4394 2B4E  
                            l4386 2B16                              l4378 2AE8  
                            l4714 4AF6                              l4706 4A80  
                            l4570 2922                              l4554 2874  
                            l4546 283C                              l4538 27B0  
                            l4490 262A                              l4482 2604  
                            l4474 25D8                              l4466 25A8  
                            l4722 5B14                              l4810 4BAA  
                            l4802 4B80                              l5194 1184  
                            l5186 1130                              l5178 110A  
                            l5098 0DF0                              l5290 4C70  
                            l5514 207A                              l5450 1C86  
                            l5442 1C10                              l5434 1B92  
                            l5426 1B42                              l5418 1AD0  
                            l5370 3BB0                              l5362 5346  
                            l5354 5300                              l5346 52C6  
                            l5338 55F8                              l5602 2FFA  
                            l6090 351A                              l6082 34CC  
                            l6074 346E                              l6066 3416  
                            l6058 33C0                              l6250 5D72  
                            l6330 4D62                              l6322 4D38  
                            l6314 4D06                              l6306 4CE6  
                            l5612 5D32                              l5604 5D1A  
                            l6236 53EC                              l6228 53D4  
                            l6244 5D54                              l6172 39B8  
                            l6164 397A                              l6156 393E  
                            l6148 390A                              l5620 5B76  
                            l5700 5C4A                              l5268 4030  
                            l4900 312E                              l4628 508A  
                            l4636 50A0                              l4660 5110  
                            l4652 50E0                              l4644 50C2  
                            l4396 2B5E                              l4388 2B26  
                            l4708 4A92                              l4580 298A  
                            l4564 28DE                              l4572 2926  
                            l4556 2878                              l4548 2846  
                            l4492 263A                              l4484 260A  
                            l4476 25E8                              l4468 25B6  
                            l4740 4856                              l4732 4816  
                            l4804 4B8C                              l4820 5792  
                            l5196 118C                              l5188 113C  
                            l5292 4C82                              l5284 4C2E  
                            l5508 2034                              l5452 1CA6  
                            l5444 1C1A                              l5460 1D0E  
                            l5428 1B52                              l5524 20A4  
                            l5380 3C2E                              l5372 3BBE  
                            l5364 5348                              l5356 530E  
                            l5348 52D6                              l5540 1384  
                            l5532 1298                              l6092 354C  
                            l6084 34D6                              l6068 344A  
                            l6076 34A2                              l6180 5176  
                            l6260 46B6                              l6252 5D74  
                            l6332 4D74                              l6324 4D48  
                            l6316 4D16                              l6340 4D94  
                            l6308 4CEA                              l5606 5D1C  
                            l6270 5C90                              l6238 53F2  
                            l6174 39C6                              l6166 398A  
                            l6158 3956                              l5710 56E6  
                            l5630 5B8A                              l5622 5B78  
                            l5614 5B60                              l5702 5C4E  
                            l4902 3134                              l4910 3226  
                            l4638 50B0                              l4670 514A  
                            l4662 5118                              l4654 50EE  
                            l4646 50C6                              l4398 2B72  
                            l4590 29B4                              l4582 299A  
                            l4574 2940                              l4566 28EA  
                            l4558 2886                              l4494 264A  
                            l4486 2618                              l4478 25EE  
                            l4718 5AEE                              l4750 4886  
                            l4742 4864                              l4734 4840  
                            l4726 47EC                              l4814 4BEE  
                            l4822 5722                              l5198 1192  
                            l5294 4CAA                              l5286 4C3C  
                            l5278 4BF8                              l5526 20C8  
                            l5518 2088                              l5470 1DB4  
                            l5462 1D30                              l5454 1CB4  
                            l5446 1C28                              l5438 1BDA  
                            l5390 3C82                              l5382 3C36  
                            l5374 3C04                              l5366 5352  
                            l5358 5318                              l5550 14E4  
                            l5542 1392                              l5534 129C  
                            l6094 3552                              l6086 34FC  
                            l6078 34B6                              l6190 519E  
                            l6182 517E                              l6246 5C64  
                            l6262 46C0                              l6254 45C4  
                            l6334 4D76                              l6326 4D58  
                            l6318 4D18                              l5608 5D22  
                            l6272 5CA0                              l6176 39D6  
                            l6168 39A2                              l5712 56F0  
                            l5704 56BE                              l5632 5B92  
                            l5624 5B80                              l5616 5B6C  
                            l5720 5400                              l4912 3240  
                            l4920 32A2                              l4904 31B6  
                            l4664 5126                              l4672 5150  
                            l4656 50F6                              l4648 50D4  
                            l4680 521C                              l4584 29A8  
                            l4576 2954                              l4568 28F8  
                            l4496 2650                              l4488 261A  
                            l4760 48B0                              l4752 4890  
                            l4736 4842                              l4728 4802  
                            l4808 4B98                              l4840 3698  
                            l4832 35FE                              l5288 4C54  
                            l5480 1E7C                              l5472 1DD8  
                            l5464 1D40                              l5448 1C4C  
                            l5392 3CBE                              l5384 3C42  
                            l5376 3C1A                              l5368 3BA0  
                            l5640 5558                              l5560 16A0  
                            l5552 1550                              l5544 13FC  
                            l5536 12AA                              l5800 3EA8  
                            l6096 3586                              l6088 3508  
                            l6440 51CC                              l6192 51A6  
                            l6184 5186                              l6280 558C  
                            l6264 46D8                              l6256 46A2  
                            l6248 5D66                              l6336 4D80  
                            l6328 4D5C                              l5714 5702  
                            l5706 56CE                              l5626 5B82  
                            l5618 5B6E                              l5722 540C  
                            l4770 4F38                              l4930 32E8  
                            l4922 32B4                              l4914 325E  
                            l4906 31BC                              l4674 5160  
                            l4666 513C                              l4658 5108  
                            l4690 52BC                              l4682 524A  
                            l4586 29AA                              l4578 296E  
                            l4498 2670                              l4594 5930  
                            l4762 48C0                              l4738 4852  
                            l4850 37B6                              l4834 361E  
                            l4818 5782                              l4826 5758  
                            l5482 1E8E                              l5474 1DFC  
                            l5466 1D72                              l5458 1CFC  
                            l5730 589E                              l5394 3CCA  
                            l5386 3C74                              l5634 54F8  
                            l5642 547E                              l5298 59BC  
                            l6442 1A56                              l5570 1800  
                            l5562 16AE                              l5554 15B8  
                            l5546 146C                              l5538 1314  
                            l5650 39E0                              l5810 3EDE  
                            l5802 3EAA                              l6098 3598  
                            l6194 51AE                              l6186 518E  
                            l6178 5172                              l6282 559E  
                            l6274 5572                              l6266 46DC  
                            l6258 46AC                              l6338 4D90  
                            l6268 5C8C                              l5716 5714  
                            l5708 56E0                              l5628 5B88  
                            l5724 543C                              l4860 5B26  
                            l6444 3FA6                              l4780 4F8A  
                            l4772 4F48                              l4932 32F0  
                            l4924 32C4                              l4916 3278  
                            l4908 31C2                              l4676 5168  
                            l4668 5144                              l4692 52C2  
                            l4684 525A                              l4588 29B0  
                            l4596 5940                              l4764 48D0  
                            l4748 487C                              l4852 37CA  
                            l4844 370A                              l4836 3676  
                            l4828 576A                              l4940 06F2  
                            l5484 1EA4                              l5492 1F0E  
                            l5476 1E44                              l5468 1D82  
                            l5732 58A6                              l5396 3CD8  
                            l5388 3C76                              l5636 54F8  
                            l5644 547E                              l5820 44A8  
                            l5580 1966                              l5572 1870  
                            l5564 1718                              l5556 15C6  
                            l5548 147A                              l5660 3AEE  
                            l5652 39E0                              l5740 5B96  
                            l5812 3EE2                              l5804 3EAC  
                            l5900 4774                              l6188 5196  
                            l6284 55B0                              l6276 5576  
                            l5718 571A                              l5726 5440  
                            l4870 5924                              l4782 4F9E  
                            l4774 4F5C                              l4926 32CA  
                            l4934 3300                              l4918 3292  
                            l4686 5288                              l4766 48E0  
                            l4758 48A4                              l4854 37F2  
                            l4846 3746                              l4838 368A  
                            l4950 0746                              l4942 0702  
                            l5494 1F3C                              l5486 1EB2  
                            l5734 58AE                              l5398 3CF6  
                            l5638 5510                              l5646 5496  
                            l5750 5AA8                              l5830 44EC  
                            l5822 44AC                              l5582 19D0  
                            l5574 187E                              l5566 1788  
                            l5558 1630                              l5670 3B4C  
                            l5662 3AFC                              l5654 39E0  
                            l5742 5B9A                              l5814 3EE4  
                            l5806 3EBE                              l5910 47C0  
                            l5902 477A                              l6198 51B6  
                            l6286 55C2                              l6278 557A  
                            l6294 4CCE                              l4872 5928  
                            l4864 58DE                              l4792 59FC  
                            l4784 4FA2                              l4776 4F6A  
                            l4928 32DC                              l4880 308E  
                            l4688 5298                              l4696 49F6  
                            l4856 3802                              l4848 377A  
                            l4960 078C                              l4952 074E  
                            l4944 0710                              l5488 1EE2  
                            l5680 5652                              l5736 58CA  
                            l5728 588C                              l5648 54DE  
                            l5840 450A                              l5832 44F2  
                            l5824 44BE                              l5576 18E8  
                            l5568 1796                              l5672 3B54  
                            l5664 3B0C                              l5656 3A20  
                            l5744 5B9E                              l5816 3EE6  
                            l5808 3ECE                              l5760 3D7E  
                            l5752 3D52                              l5920 4902  
                            l5912 47CC                              l5904 478E  
                            l6288 55D4                              l6296 4CD2  
                            l5690 5C3C                              l4866 58E2  
                            l4794 5A16                              l4786 4FD0  
                            l4778 4F76                              l4890 30F6  
                            l4882 30AE                              l4698 4A24  
                            l4970 07C8                              l4962 0794  
                            l4954 0760                              l4946 0718  
                            l4938 06E8                              l5498 1FAA  
                            l5682 565A                              l5746 5A7A  
                            l5850 453C                              l5842 450E  
                            l5834 44F6                              l5826 44C8  
                            l5818 449C                              l5594 2D60  
                            l5578 1958                              l5586 1A40  
                            l5674 3B70                              l5666 3B28  
                            l5658 3AE6                              l5770 3DE8  
                            l5762 3DA8                              l5754 3D5E  
                            l5930 4948                              l5922 4914  
                            l5914 47E0                              l5906 479A  
                            l6298 4CD6                              l5692 5C40  
                            l4868 58F6                              l4788 4FE4  
                            l4892 3108                              l4884 30BE  
                            l4876 3046                              l4796 4AFA  
                            l4980 0844                              l4964 0798  
                            l4956 076E                              l4948 073C  
                            l5684 5668                              l5748 5A9C  
                            l5860 4558                              l5852 4540  
                            l5836 4500                              l5828 44DA  
                            l5844 4512                              l5596 2D92  
                            l5676 3B78                              l5668 3B30  
                            l5780 3E46                              l5772 3DF8  
                            l5764 3DB4                              l5756 3D68  
                            l5940 4980                              l5932 494C  
                            l5924 491E                              l5916 48F2  
                            l5908 47A4                              l5694 5C42  
                            l4894 3116                              l4886 30C0  
                            l4878 3066                              l4798 4B1A  
                            l4982 084E                              l4974 07FE  
                            l4966 079C                              l4958 0780  
                            l5686 5696                              l5870 4598  
                            l5854 454A                              l5846 4524  
                            l5862 455C                              l5838 4506  
                            l5598 2E58                              l5678 3B94  
                            l5790 3E74                              l5782 3E4A  
                            l5774 3E16                              l5766 3DC8  
                            l5758 3D74                              l5950 49AE  
                            l5942 4984                              l5926 4930  
                            l5934 4956                              l5918 48FE  
                            l5696 5C44                              l5688 5C38  
                            l4896 311C                              l4888 30DA  
                            l4992 08D2                              l4976 0810  
                            l4968 07A2                              l5872 45A4  
                            l5864 4566                              l5856 4550  
                            l5848 4536                              l5792 3E84  
                            l5784 3E4C                              l5776 3E26  
                            l5768 3DD2                              l5952 49CA  
                            l5936 4968                              l5944 498E  
                            l5928 4942                              l5960 4DAC  
                            l5880 46F4                              l5698 5C46  
                            l4898 3124                              l4994 08E4  
                            l4978 082C                              l4986 0876  
                            l5874 45B8                              l5866 4572  
                            l5858 4554                              l5794 3E94  
                            l5786 3E4E                              l5778 3E36  
                            l5954 49D6                              l5946 4998  
                            l5938 497A                              l5970 4DD0  
                            l5962 4DB2                              l5890 473A  
                            l5882 4706                              l4996 0900  
                            l4988 089C                              l5868 457C  
                            l5796 3E98                              l5788 3E64  
                            l5956 49EA                              l5948 49A4  
                            l5980 4E1A                              l5972 4DD6  
                            l5964 4DB6                              l5892 4740  
                            l5884 4710                              l5876 46E4  
                            l5798 3EA6                              l5990 5D36  
                            l5982 4E2C                              l5974 4DDA  
                            l5966 4DBA                              l5958 4DA0  
                            l5886 4722                              l5894 474A  
                            l5878 46F0                              l5992 5D3A  
                            l5984 4E4C                              l5976 4DE4  
                            l5968 4DC4                              l5896 475C  
                            l5888 4734                              l5994 4366  
                            l5986 4E5E                              l5978 4E0E  
                            l5898 476E                              l5996 4372  
                            l5988 4E68                              l5998 4378  
                            STR_1 0635                              STR_2 06AA  
                            STR_3 0646                              STR_4 069A  
                            STR_5 0657                              STR_6 069A  
                            STR_7 0613                              STR_8 06B9  
                            STR_9 0613                              u4000 4E92  
                            u4001 4E8E                              u4010 4EBA  
                            u4011 4EB6                              u4020 4EF0  
                            u4100 21CE                              u4021 4EEC  
                            u4101 21CA                              u4110 21DC  
                            u4030 20F6                              u4111 21D8  
                            u4031 20F2                              u5000 29A8  
                            u4200 231A                              u4120 224A  
                            u4040 2108                              u5001 29A4  
                            u4201 2316                              u4121 2246  
                            u4041 2104                              u5010 5010  
                            u4210 2328                              u4130 2262  
                            u4050 2118                              u5011 500C  
                            u4211 2324                              u4131 225C  
                            u4051 2114                              u5020 502A  
                            u5100 5126                              u4300 2472  
                            u4220 2346                              u4140 2264  
                            u4060 215A                              u5021 5026  
                            u5101 5122                              u4301 246E  
                            u4221 2342                              u4061 2156  
                            u5030 5050                              u5110 513C  
                            u4310 2484                              u4230 237E  
                            u4150 228C                              u4070 2170  
                            u5031 504C                              u5111 5138  
                            u4311 2480                              u4231 237A  
                            u4151 2288                              u4071 216C  
                            u5040 506E                              u5120 5160  
                            u5200 4AF0                              u4400 256C  
                            u4320 249A                              u4240 23C4  
                            u4160 22AA                              u4080 2182  
                            u6000 0BB2                              u5041 506A  
                            u5121 515C                              u5201 4AEC  
                            u4401 2568                              u4321 2496  
                            u4241 23C0                              u4161 22A6  
                            u4081 217E                              u6001 0BAE  
                            u5050 508A                              u5130 524A  
                            u5210 5B04                              u4410 2588  
                            u4330 24B0                              u4250 23FA  
                            u4170 22CA                              u4090 2192  
                            u6010 0BC0                              u5051 5086  
                            u5131 5246                              u5211 5B00  
                            u4411 2584                              u4331 24AC  
                            u4251 23F6                              u4171 22C6  
                            u4091 218E                              u6011 0BBC  
                            u4500 4136                              u4420 59B8  
                            u5300 4F6A                              u5060 50B0  
                            u5140 5288                              u4340 24C4  
                            u4260 240A                              u4180 22D8  
                            u5220 4802                              u6100 0F20  
                            u6020 0BEA                              u4501 4132  
                            u4421 59B4                              u5301 4F66  
                            u5061 50AC                              u5141 5284  
                            u4341 24C0                              u4261 2406  
                            u4181 22D4                              u5221 47FE  
                            u6101 0F1C                              u6021 0BE6  
                            u4510 4176                              u4430 5BF4  
                            u5310 4FC0                              u5070 50D4  
                            u5150 52BC                              u4350 24DE  
                            u4270 2436                              u4190 22E8  
                            u5230 4836                              u6110 0F2E  
                            u6030 0D32                              u4511 4172  
                            u4431 5BF0                              u5311 4FBC  
                            u5071 50D0                              u5151 52B8  
                            u4351 24DA                              u4271 2432  
                            u4191 22E4                              u6111 0F2A  
                            u6031 0D2E                              u4520 41C0  
                            u5320 4FD0                              u5080 50EE  
                            u4600 29F2                              u5160 4A24  
                            u4360 2518                              u4280 2446  
                            u5240 4864                              u5400 4BE6  
                            u4440 5AE6                              u6200 1120  
                            u6120 0F48                              u6040 0D98  
                            u7000 3E46                              u4521 41BC  
                            u5321 4FCC                              u5081 50EA  
                            u4601 29EE                              u5161 4A20  
                            u4361 2514                              u4281 2442  
                            u5241 4860                              u4441 5AE0  
                            u6201 111C                              u6121 0F44  
                            u6041 0D94                              u7001 3E42  
                            u4530 4214                              u5330 5A16  
                            u5090 5108                              u4610 2A02  
                            u5170 4A62                              u4370 252A  
                            u4290 2462                              u5250 4878  
                            u5410 57CA                              u4450 5AE8  
                            u6210 11A4                              u6130 0F56  
                            u6050 0DE0                              u7010 3E64  
                            u4531 4210                              u5331 5A12  
                            u5091 5104                              u4611 29FE  
                            u5171 4A5E                              u4371 2526  
                            u4291 245E                              u5251 4874  
                            u5235 482C                              u6211 11A0  
                            u6131 0F52                              u6051 0DDC  
                            u7011 3E60                              u6300 402A  
                            u4460 408C                              u4540 4246  
                            u4700 2BCE                              u4620 2A46  
                            u5180 4A80                              u4380 253A  
                            u5260 48A0                              u5340 4B3A  
                            u5500 3706                              u5420 57DC  
                            u6220 11BE                              u6140 0FAE  
                            u6060 0DF0                              u7100 44DA  
                            u7020 3E74                              u6301 4024  
                            u4461 4088                              u4541 4242  
                            u4701 2BCA                              u4621 2A42  
                            u5181 4A7C                              u4381 2536  
                            u5261 489C                              u5501 3702  
                            u5421 57D8                              u6221 11BA  
                            u6141 0FAA                              u6061 0DEC  
                            u7101 44D6                              u7021 3E70  
                            u6310 402C                              u4470 40BE  
                            u4550 4284                              u4710 2BE4  
                            u4630 2A58                              u5190 4AA0  
                            u4390 255A                              u5270 48C0  
                            u5350 4B58                              u5510 372A  
                            u5430 5752                              u6230 11D6  
                            u6150 1080                              u6070 0E58  
                            u7110 44EC                              u7030 3E84  
                            u4471 40BA                              u4551 4280  
                            u4711 2BE0                              u4631 2A54  
                            u5191 4A9C                              u4391 2556  
                            u5271 48BC                              u5351 4B54  
                            u5431 574C                              u6231 11D2  
                            u6151 107C                              u6071 0E54  
                            u7111 44E8                              u7031 3E80  
                            u6400 57EE                              u6320 4042  
                            u4560 42AE                              u5600 3076  
                            u4800 2D1E                              u4720 2C02  
                            u4640 2A68                              u5280 48D0  
                            u5360 4B80                              u5520 3746  
                            u5440 5754                              u6240 1234  
                            u6160 109C                              u6080 0EFC  
                            u7120 4524                              u7040 3E94  
                            u7200 476E                              u6401 57EA  
                            u6321 403E                              u4481 40E8  
                            u4561 42AA                              u5601 3070  
                            u4801 2D1A                              u4721 2BFE  
                            u4641 2A64                              u5281 48CC  
                            u5361 4B7C                              u5345 4B30  
                            u5521 3742                              u5417 57C0  
                            u6241 122E                              u6161 1098  
                            u6081 0EF8                              u7121 4520  
                            u7041 3E90                              u7201 476A  
                            u6410 5804                              u6330 4054  
                            u4490 410C                              u4570 42DC  
                            u5290 4F48                              u5610 3078  
                            u4810 2D4C                              u4730 2C22  
                            u4650 2AA8                              u5370 4BAA  
                            u5530 379A                              u5450 576A  
                            u6250 1236                              u6170 10AE  
                            u6090 0F0E                              u7130 4536  
                            u7050 3EBE                              u7210 47E0  
                            u6411 5800                              u6331 4050  
                            u4491 4108                              u4571 42D8  
                            u5291 4F44                              u4811 2D48  
                            u4731 2C1E                              u4651 2AA4  
                            u5371 4BA6                              u5515 3720  
                            u5451 5766                              u6171 10AA  
                            u6091 0F0A                              u7131 4532  
                            u7051 3EBA                              u7211 47DC  
                            u6420 581A                              u4580 4324  
                            u5700 3292                              u5620 308E  
                            u4740 2C34                              u4660 2AE8  
                            u4900 27FA                              u4820 25B6  
                            u5540 37B6                              u5460 3646  
                            u6260 124C                              u6180 10BC  
                            u6340 4C22                              u6500 3BBE  
                            u7140 45B8                              u7060 3ECE  
                            u7300 4E2C                              u6421 5816  
                            u4581 4320                              u5701 328E  
                            u5621 308A                              u4741 2C30  
                            u4661 2AE4                              u4821 25B2  
                            u5541 37B2                              u6261 1248  
                            u6181 10B8                              u6341 4C1E  
                            u6501 3BBA                              u7141 45B4  
                            u7061 3ECA                              u7221 48F8  
                            u7301 4E28                              u6430 5830  
                            u6270 3F22                              u5710 32A2  
                            u5630 30BE                              u4750 2C62  
                            u4670 2B5E                              u4590 29E0  
                            u4910 2854                              u4830 25C8  
                            u5390 4BE4                              u5550 37F2  
                            u5470 3676                              u6190 10F2  
                            u6350 4C54                              u6510 3C1A  
                            u7070 3EDE                              u7230 4914  
                            u7310 4E5E                              u6431 582C  
                            u8007 5394                              u6271 3F1E  
                            u5711 329E                              u5631 30BA  
                            u4751 2C5E                              u4671 2B5A  
                            u4591 29DC                              u4911 2850  
                            u4831 25C4                              u5391 4BDE  
                            u5551 37EE                              u5535 3790  
                            u5471 3672                              u6191 10EE  
                            u6351 4C50                              u6511 3C16  
                            u7071 3EDA                              u7231 4910  
                            u7311 4E5A                              u7151 46EA  
                            u5560 5B56                              u6280 3F58  
                            u5720 32B4                              u5640 30DA  
                            u4760 2C78                              u4680 2B80  
                            u4920 2874                              u4840 25D8  
                            u5480 3698                              u5800 07F8  
                            u6360 4C70                              u6600 1B0C  
                            u6520 3C70                              u6440 5606  
                            u7400 448C                              u7240 4930  
                            u7160 4706                              u8017 53AE  
                            u5561 5B50                              u6281 3F54  
                            u5721 32B0                              u5641 30D6  
                            u4761 2C74                              u4681 2B7C  
                            u4921 2870                              u4905 27F0  
                            u4841 25D4                              u5385 4BBC  
                            u5481 3694                              u5465 363C  
                            u5801 07F2                              u6361 4C6C  
                            u6601 1B08                              u6521 3C6C  
                            u7081 44A2                              u6441 5602  
                            u7401 4488                              u7321 436C  
                            u7241 492C                              u7161 4702  
                            u5570 5B58                              u6290 3F74  
                            u5730 32C4                              u5650 3108  
                            u4770 2C8C                              u4690 2BAA  
                            u4930 2886                              u4850 2618  
                            u5810 07FA                              u6370 4C82  
                            u6610 1B52                              u6530 3CBA  
                            u7090 44BE                              u6450 5640  
                            u7330 43E0                              u7250 4942  
                            u7170 4722                              u8027 53C4  
                            u6291 3F70                              u5731 32C0  
                            u5651 3104                              u4771 2C88  
                            u4691 2BA6                              u4931 2882  
                            u4851 2614                              u6371 4C7E  
                            u6611 1B4E                              u6531 3CB6  
                            u7091 44BA                              u6451 563C  
                            u7331 43DC                              u7411 3330  
                            u7251 493E                              u7171 471E  
                            u5580 58F6                              u5740 32DC  
                            u5660 3116                              u4780 2CA6  
                            u4940 28B4                              u4860 262A  
                            u5900 0A94                              u5820 0810  
                            u6380 4CAA                              u6700 1D40  
                            u6620 1BD4                              u6540 3CD8  
                            u6460 52EC                              u7340 4408  
                            u7500 351A                              u7420 334C  
                            u7260 4968                              u7180 4734  
                            u8037 5D2A                              u5581 58F2  
                            u5741 32D8                              u5661 3112  
                            u4781 2CA2                              u4941 28B0  
                            u4861 2626                              u5901 0A90  
                            u5821 080C                              u6381 4CA6  
                            u6701 1D3C                              u6621 1BCE  
                            u6541 3CD4                              u6461 52E8  
                            u7341 4404                              u7501 3516  
                            u7421 3348                              u7261 4964  
                            u7181 4730                              u5590 5924  
                            u3990 4E80                              u5670 3240  
                            u4790 2CEE                              u4950 28CA  
                            u4870 263A                              u5910 0AA6  
                            u5830 089C                              u5750 0710  
                            u6710 1D82                              u6630 1BD6  
                            u6550 3CE8                              u6470 530E  
                            u6390 59E0                              u7350 4418  
                            u7510 354C                              u7430 3364  
                            u7270 497A                              u7190 475C  
                            u5591 5920                              u3991 4E7C  
                            u5671 323C                              u4791 2CEA  
                            u4951 28C6                              u4871 2636  
                            u5495 36AC                              u5911 0AA2  
                            u5831 0898                              u5751 070C  
                            u6711 1D7E                              u6551 3CE4  
                            u6471 530A                              u6391 59DC  
                            u7351 4414                              u7511 3548  
                            u7431 3360                              u7271 4976  
                            u7191 4758                              u7600 3872  
                            u5680 325E                              u4960 28DE  
                            u4880 2670                              u5496 36B6  
                            u5920 0AC8                              u5840 08CC  
                            u5760 0760                              u6720 1DD8  
                            u6640 1BEC                              u6560 3CF6  
                            u6800 5510                              u6480 5336  
                            u7360 4428                              u7520 3598  
                            u7440 337A                              u7280 49EA  
                            u7601 386E                              u5681 325A  
                            u4961 28DA                              u4881 266C  
                            u5497 36C6                              u5921 0AC4  
                            u5841 08C6                              u5761 075C  
                            u6721 1DD4                              u6641 1BE8  
                            u6561 3CF2                              u6801 550C  
                            u6481 5332                              u7361 4424  
                            u7521 3594                              u7441 3376  
                            u7281 49E6                              u7610 3880  
                            u5690 3278                              u4970 28F8  
                            u4890 2680                              u5930 0AEE  
                            u5850 08CE                              u5770 076E  
                            u6730 1DFC                              u6650 1C10  
                            u6570 3D30                              u6490 3BB0  
                            u6810 5496                              u7370 443A  
                            u7530 35A6                              u7450 33DE  
                            u7611 387C                              u5691 3274  
                            u4971 28F4                              u4891 267C  
                            u5931 0AEA                              u5771 076A  
                            u6731 1DF8                              u6651 1C0C  
                            u6571 3D2C                              u6491 3BAC  
                            u6811 5492                              u7371 4436  
                            u7531 35A2                              u7451 33DA  
                            u7291 4DA6                              u7700 392E  
                            u7620 3896                              u6900 5438  
                            u4980 2940                              u5940 0B04  
                            u5860 08E4                              u5780 0780  
                            u6740 1E8E                              u6660 1C4C  
                            u6580 3D3E                              u6820 3B28  
                            u7380 4460                              u7540 35F2  
                            u7460 3410                              u7701 392A  
                            u7621 3892                              u4981 293C  
                            u5941 0B00                              u5861 08E0  
                            u5781 077C                              u6741 1E8A  
                            u6661 1C48                              u6581 3D3A  
                            u6821 3B24                              u7381 445C  
                            u7541 35EE                              u7461 340C  
                            u7710 393E                              u7630 38A6  
                            u6910 546C                              u4990 296E  
                            u5950 0B20                              u5870 0968  
                            u5790 07C8                              u6750 1F3C  
                            u6670 1CF6                              u6590 1AC2  
                            u6830 3B4C                              u7390 447C  
                            u7470 345C                              u7550 5D14  
                            u7711 393A                              u7631 38A2  
                            u4991 296A                              u5951 0B1C  
                            u5871 0964                              u5791 07C4  
                            u6751 1F38                              u6671 1CF0  
                            u6591 1ABE                              u6831 3B48  
                            u7391 4478                              u7471 3458  
                            u7551 5D10                              u7800 5D64  
                            u7720 3956                              u7640 38BE  
                            u7560 3826                              u6920 547C  
                            u5960 0B56                              u5880 09FC  
                            u6760 1FA4                              u6680 1CF8  
                            u6840 3B70                              u7480 346A  
                            u7801 5D60                              u7721 3952  
                            u7641 38BA                              u7561 3822  
                            u6921 5478                              u5961 0B52  
                            u5881 09F8                              u6761 1F9E  
                            u6841 3B6C                              u7481 3466  
                            u7730 3964                              u7650 38CC  
                            u7570 3834                              u5970 0B7C  
                            u5890 0A6E                              u6770 1FA6  
                            u6690 1D0E                              u6850 3B94  
                            u7490 34B6                              u7810 558C  
                            u7731 3960                              u7651 38C8  
                            u7571 3830                              u6907 542E  
                            u5971 0B78                              u5891 0A6A  
                            u6691 1D0A                              u6851 3B90  
                            u6931 3D58                              u7491 34B2  
                            u7811 5588                              u7740 397A  
                            u7660 38E2                              u7580 384A  
                            u5980 0B8E                              u6780 1FBC  
                            u6860 56B2                              u6940 3DC8  
                            u7820 55B0                              u7900 4D90  
                            u7741 3976                              u7661 38DE  
                            u7581 3846                              u6917 5462  
                            u5981 0B8A                              u6781 1FB8  
                            u6861 56AE                              u6941 3DC4  
                            u7821 55AC                              u7901 4D8C  
                            u7750 398A                              u7670 38F2  
                            u7590 385A                              u6870 5C5E  
                            u5990 0B9C                              u6790 2058  
                            u6950 3DE8                              u7830 55D4  
                            u7751 3986                              u7671 38EE  
                            u7591 3856                              u6871 5C5A  
                            u5991 0B98                              u6791 2054  
                            u6951 3DE4                              u7831 55D0  
                            u7760 39A2                              u7680 390A  
                            u6880 56CE                              u6960 3DF8  
                            u7840 4D16                              u7761 399E  
                            u7681 3906                              u6881 56CA  
                            u6961 3DF4                              u7841 4D12  
                            u7770 39B0                              u7690 3918  
                            u6890 5702                              u6970 3E16  
                            u7850 4D28                              u7771 39AC  
                            u7691 3914                              u6891 56FE  
                            u6971 3E12                              u7851 4D24  
                            u7780 39C6                              u6980 3E26  
                            u7860 4D38                              u7781 39C2  
                            u6981 3E22                              u7861 4D34  
                            u7790 39D6                              u6990 3E36  
                            u7870 4D48                              u7791 39D2  
                            u6991 3E32                              u7871 4D44  
                            u7880 4D58                              u7881 4D54  
                            u7890 4D74                              u7891 4D70  
                            u7977 46CA                              u7987 5B7A  
                            u7997 5B8C                              _TMR2 000FBC  
           ??_stopTimeSettingMenu 005F                              abs@a 0013  
               ?_Lcd_Write_String 0005                              _dbuf 0240  
                            _atoi 3EEA                              _main 4CCE  
                            _dtoa 3046                              _prec 00F6  
                            _nout 01CF                              pad@i 0018  
                            pad@p 0015                              fsr1h 000FE2  
                            fsr2h 000FDA                              indf1 000FE7  
                            indf2 000FDF                              fsr1l 000FE1  
                            pad@w 001A                              fsr2l 000FD9  
                            btemp 005F                     ___fpclassifyf 4AFA  
                            prodh 000FF4                              prodl 000FF3  
                            start 009A                ??_Lcd_Write_String 0007  
                 ___fldiv@new_exp 0046                   __end_of_Lcd_Cmd 5D36  
                    _tolower$2726 000D                      ___param_bank 000000  
         ??_driverTimeSettingMenu 005F                             ??_abs 0015  
                           ??_pad 0017                      ?_menuControl 0001  
speedLimitSettingMenu@textCursor2 00E1                     ___fltol@sign1 0056  
                 __end_of___aodiv 4202                             ?_atoi 0008  
                 __end_of___fladd 259C                             ?_main 0001  
                           ?_dtoa 001C                   __end_of___aomod 4366  
                 __end_of_adcInit 5A7A                   __end_of___fldiv 2D60  
                 __end_of___awdiv 50C2                   __end_of___flneg 5B26  
                           _EEADR 000FA9                             STR_10 06C7  
                           STR_11 0624                             STR_12 0601  
                           STR_21 06D8                             STR_13 0679  
                           STR_22 06E0                             STR_14 068A  
                           STR_15 0668                             STR_16 0601  
                           STR_25 06E4                             STR_17 06D4  
                           STR_18 06DC                             STR_27 06E4  
                 __end_of___awmod 5172                   __end_of___flmul 29C6  
                 __end_of___flsub 5976                   __end_of___fltol 48F2  
                 __end_of___lldiv 536A                             _T0CON 000FD5  
                 ___awdiv@divisor 0003                             i2l537 0096  
                 ___awdiv@counter 0005                      vfpfcnvrt@fmt 00A9  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
         __size_of_Lcd_Set_Cursor 0066               ___lmul@multiplicand 0005  
                           _fabsf 5C02                             _flags 00F8  
                           _fputc 4E6E                             _fputs 5976  
                 __end_of_isdigit 5B5E                       ?_PWM1_setDC 0058  
                    _adc_raw_data 0193                       ?_PWM2_setDC 0058  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 01D1  
                           _putch 5D86                             dtoa@d 001E  
                           dtoa@i 003E                             dtoa@n 0036  
                           dtoa@p 0030                             dtoa@s 0034  
                           dtoa@w 0032                   __end_of_isspace 5930  
                 __end_of_isupper 5AEE                  __end_of_PWM_Init 5CB4  
                           tablat 000FF5                             ttemp5 0060  
                           ttemp6 0063                             ttemp7 0067  
                           status 000FD8            ?_speedLimitSettingMenu 0001  
                           wtemp8 0060                   __end_of_sprintf 58DE  
                  ?___fpclassifyf 0001                   __end_of_tolower 5782  
                 __end_of_strncmp 4CCE                     ?_readAdcValue 0001  
                __end_of_Lcd_Port 583A                   __initialization 583A  
                     _system_init 45C4                      __end_of_atoi 407A  
                    __end_of_main 4DA0                      __end_of_dtoa 332A  
                          ??_atoi 000A                            ??_main 005F  
                          ??_dtoa 0026                __size_of_Lcd_Clear 000E  
                   __activetblptr 000002   __size_of_calculatedAverageValue 02E6  
        stopTimeSettingMenu@F6425 0210                            ?_fabsf 001C  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _CCPR1L 000FBE  
                          _CCPR2L 000F67                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            ?_putch 0001  
                          i2l6350 0030                            i2l6342 000A  
                          i2l6360 0060                            i2l6352 0034  
                          i2l6344 0018                            i2l6362 0070  
                          i2l6354 0046                            i2l6346 0026  
                          i2l6364 0074                            i2l6356 004C  
                          i2l6348 0028                            i2l6366 008A  
                          i2l6358 005E                            i2l6368 0092  
                       ??_Lcd_Cmd 0002                            _TIMER0 0008  
                  ??_readAdcValue 0003           __size_of_Lcd_Write_Char 0038  
                __end_of___xxtofl 3D52                 _scanAdcConversion 1298  
              _timer_counter_flag 00FF                ?_scanAdcConversion 0001  
            __size_of_eepromWrite 002E                      vfprintf@cfmt 00CD  
                __end_of_lcd_init 5400                            ___flge 49F6  
                          ___fleq 521C                  __end_of_mainMenu 3EEA  
                          ___lmul 55E8                         ??___aodiv 0011  
                       ??___fladd 003D                         ??___aomod 0011  
                          ___wmul 5CB4                         ??_adcInit 0001  
                       ??___fldiv 003D                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___awmod 0005  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _efgtoa 06E8                            _floorf 35FE  
             __size_of_PWM1_setDC 007A                            fabsf@u 0020  
                          fabsf@x 001C                  __end_of_mcu_init 5D66  
             __size_of_PWM2_setDC 007A                 _secretMenuCounter 00FB  
             ??_scanAdcConversion 0058                            clear_0 5860  
                          clear_1 586C                            clear_2 5878  
                 eepromWrite@data 0001                  ___awdiv@quotient 0007  
                 ___awmod@divisor 0003                   ___awmod@counter 0005  
                          pad@buf 0013                            dtoa@fp 001C  
                          _strcpy 5782                            _strlen 5BCC  
                          fputc@c 0001              readAdcValue@adcValue 0006  
                          fputs@c 000E                            fputs@i 000F  
                          fputs@s 000A                         ??_isdigit 0003  
                 ___fpclassifyf@e 0009                   ___fpclassifyf@u 000B  
                 ___fpclassifyf@x 0001                      __mediumconst 0000  
                       ??_isspace 0003                            tblptrh 000FF7  
                       ??_isupper 0003                            tblptrl 000FF6  
                          tblptru 000FF8                            putch@c 0001  
                __end_of_vfprintf 56BC                         ??_sprintf 005F  
                       ??_tolower 0009                  __end_of_stopMenu 4E6E  
                       ??_strncmp 0007        __end_of_buttonControlFlags 39E0  
                 Lcd_Set_Cursor@a 0005                   Lcd_Set_Cursor@b 0004  
                 Lcd_Set_Cursor@y 0007                   Lcd_Set_Cursor@z 0006  
                      ___flge@ff1 0035                        ___flge@ff2 0039  
                 ??___fpclassifyf 0005                      ___xxtofl@arg 0018  
                    ___xxtofl@exp 0017                     mainMenu@F6409 0183  
                    ___xxtofl@val 000E                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005         __end_of_scanAdcConversion 1A9E  
                      __accesstop 0060           __end_of__initialization 587E  
                      ___flneg@f1 0001            _calculatedAverageValue 2D60  
               __end_of_Lcd_Clear 5D86                     ___rparam_used 000001  
                      ___fltol@f1 004E                    __pcstackCOMRAM 0001  
                    __pidataBANK1 5CDA        driverTimeSettingMenu@F6428 0200  
                   __end_of_fabsf 5C36                     __end_of_fputc 4F38  
                   __end_of_fputs 59BA                     __end_of_putch 5D88  
                       ?_PWM_Init 0001                    _Lcd_Set_Cursor 56BC  
    _KP@fs_speed_controller$F1184 01E7      _KP@fs_speed_controller$F1636 01DF  
    _KP@fs_speed_controller$F1839 01D7                 eepromRead@address 0001  
            __size_of_menuControl 0076                           ??_fabsf 0020  
                       ?_Lcd_Port 0001                           ??_fputc 0005  
                         ??_fputs 000E                           ??_putch 0001  
                      __pbssBANK0 00F3                        __pbssBANK1 0100  
                      __pbssBANK2 0200               PWM1_setDC@dutycycle 0058  
                         ?_TIMER0 0001                           ?___flge 0035  
                         ?___fleq 0001                __size_of_pauseMenu 0136  
                         ?___lmul 0001                           ?___wmul 0001  
                         ?_efgtoa 0058    __size_of_driverTimeSettingMenu 0128  
                         _CCP1CON 000FBD                           _CCP2CON 000F66  
                         ?_floorf 004E     __end_of_driverTimeSettingMenu 45C4  
                  ___lmul@product 0009         __size_of_Lcd_Write_String 007E  
          __end_of_Lcd_Set_Cursor 5722                        ??_PWM_Init 0001  
                         ?_strcpy 0001                           ?_strlen 0001  
            __end_of_readAdcValue 59FC                        _eepromRead 5CFA  
                       ?___xxtofl 000E    stopTimeSettingMenu@textCursor2 00E1  
              __size_of_vfpfcnvrt 063E       __end_of_stopTimeSettingMenu 47EC  
                      ??_Lcd_Port 0001                __size_of_startMenu 001A  
                    ??_PWM1_setDC 005A                      ??_PWM2_setDC 005A  
                       ?_lcd_init 0001           __size_of_menuInitialize 0028  
         ??_speedLimitSettingMenu 005F                         ?_mainMenu 0001  
                   _menu_selected 00FA                __size_of_stopMotor 003C  
      __size_of_scanAdcConversion 0806                    _Lcd_Write_Char 5B5E  
                         _Lcd_Cmd 5D18                         ?_mcu_init 0001  
                 __size_of_TIMER0 0092                        _controller 0150  
                         __Hparam 0000                           __Lparam 0000  
             PWM2_setDC@dutycycle 0058                      ?_system_init 0001  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 407A                           ___fladd 20DC  
                         ___aomod 4202                           _adcInit 5A3C  
                         ___fldiv 29C6                           ___awdiv 4FFE  
                         ___flneg 5AEE                   __size_of___lmul 006A  
                         ___awmod 50C2                           ___flmul 259C  
                         ___flsub 5930                           ___fltol 47EC  
                         ___lldiv 52C6                   __size_of___wmul 0026  
                       ?_vfprintf 00C7                      __psmallconst 0600  
                 __size_of_efgtoa 0BB0                         ?_stopMenu 0001  
                 __size_of_floorf 0216                           __pcinit 583A  
              __end_of_PWM1_setDC 5572                           __ramtop 0600  
                 ?_Lcd_Set_Cursor 0004                __end_of_PWM2_setDC 54F8  
                         __ptext0 4CCE                           __ptext1 5D66  
                         __ptext2 45C4                           __ptext3 5CFA  
                         __ptext4 5C64                           __ptext5 5572  
                         __ptext6 5172                           __ptext7 46E4  
                         __ptext8 4DA0                           __ptext9 5D36  
                      _menu_flags 01B7                        _menu_value 00F3  
                 __size_of_strcpy 005C                   __size_of_strlen 0036  
                       _T2CONbits 000FBA                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _isdigit 5B26  
                      ??___xxtofl 0012                  ___awmod@dividend 0001  
                         _isspace 58DE                           _isupper 5AB6  
                         efgtoa@c 005E                           efgtoa@d 0087  
                         efgtoa@e 009F                           efgtoa@f 005A  
                         efgtoa@g 009B                           efgtoa@h 0091  
                         efgtoa@i 0099                           efgtoa@l 0095  
                         efgtoa@m 0083                           efgtoa@n 00A1  
                         efgtoa@p 008B                           efgtoa@t 007F  
                         efgtoa@u 00A3                           efgtoa@w 008E  
                   ?_speedControl 0058                           atoi@neg 000E  
                   ?_timer_0_init 0001                 __end_of_pauseMenu 449C  
                         _sprintf 588C                           _tolower 5722  
                      ??_lcd_init 0004            __end_of_Lcd_Write_Char 5B96  
                         _strncmp 4BF8              end_of_initialization 587E  
                      ??_mainMenu 005F              speedControl@position 0058  
                         floorf@e 0064                           floorf@m 0060  
                         floorf@u 0066                           floorf@x 004E  
                      _secretMenu 332A                           fputc@fp 0003  
                      ??_mcu_init 0001                     __Lmediumconst 0000  
                         fputs@fp 000C                   ___lldiv@divisor 0005  
                 ___lldiv@counter 000D                 __end_of_vfpfcnvrt 20DC  
                      efgtoa@mode 0090                        efgtoa@sign 0089  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         Lcd_Port@a 0001  
               __end_of_startMenu 5D50                        ??_vfprintf 005F  
                      ??_stopMenu 005F                           strcpy@d 0009  
                         strlen@a 0003                           strcpy@s 0007  
                         strlen@s 0001                 __end_of_stopMotor 5AB6  
                       _PORTBbits 000F81                         _PORTDbits 000F83  
                     ?_eepromRead 0001                       ___fladd@grs 0044  
                   ___xxtofl@sign 0016                    pauseMenu@F6415 0163  
                       _TRISAbits 000F92                    ??_speedControl 005C  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _TRISEbits 000F96  
                  ??_timer_0_init 0001              pauseMenu@textCursor2 00E1  
                     ___fldiv@grs 0048                       ___fldiv@rem 0041  
                      _startMotor 5B96                   ?_Lcd_Write_Char 0001  
         ?_calculatedAverageValue 0001                 Lcd_Write_String@a 0005  
               Lcd_Write_String@i 0009                       ___flmul@grs 0029  
                   ??_eepromWrite 0002          _button_bounce_controller 01BD  
                  __end_of_TIMER0 009A               mainMenu@textCursor2 00E1  
                   ?_stateMachine 0001                _buttonControlFlags 3814  
                       _Lcd_Clear 5D78                      _convert_data 0100  
           __size_of_readAdcValue 0042                    __end_of___flge 4AFA  
                  __end_of___fleq 52C6                    __end_of___lmul 5652  
                     vfpfcnvrt@ap 00AB                       vfpfcnvrt@ct 00C3  
                     vfpfcnvrt@fp 00A7                       vfpfcnvrt@ll 00B1  
                  __end_of___wmul 5CDA                  _Lcd_Write_String 5400  
                  __end_of_efgtoa 1298               ?_buttonControlFlags 0001  
                  __end_of_floorf 3814                        floorf@F524 01C3  
                  __end_of_strcpy 57DE                    __end_of_strlen 5C02  
               __size_of_PWM_Init 0028               start_initialization 583A  
                     __end_of_abs 5A3C                       __end_of_pad 4FFE  
  __end_of_calculatedAverageValue 3046                    _menuInitialize 5C64  
                    _driver_limit 01A3                       ?_secretMenu 0001  
               __size_of_Lcd_Port 005C              ??_buttonControlFlags 0001  
                        ??_TIMER0 0001                     stopMenu@F6412 0173  
           __end_of___fpclassifyf 4BF8                      _readAdcValue 59BA  
                  ??_stateMachine 00F1               __size_of_eepromRead 001E  
                     vfprintf@fmt 00C9                        ?_Lcd_Clear 0001  
                        ??___flge 003D                          ??___fleq 0009  
                        ??___lmul 0009               __end_of_eepromWrite 5C64  
                        ??___wmul 0005                          ??_efgtoa 006A  
                     __pdataBANK1 01D3                          ??_floorf 0052  
            __size_of_system_init 0120                   Lcd_Write_Char@a 0004  
                 Lcd_Write_Char@y 0003                     ??_menuControl 005F  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0039                         ___fladd@b 0035  
                       ___fldiv@a 0039                         ___fldiv@b 0035  
                       ___flmul@a 0020                         ___flmul@b 001C  
                       ___flsub@a 0049                         ___flsub@b 0045  
          __end_of_menuInitialize 5C8C                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                 __size_of___xxtofl 01B4  
                     ?_startMotor 0001    __size_of_speedLimitSettingMenu 0104  
   __end_of_speedLimitSettingMenu 49F6                          ?_Lcd_Cmd 0001  
               __size_of_lcd_init 0096                 __size_of_mainMenu 0198  
                       _atoi$2631 0010                         _atoi$2632 0014  
                       _atoi$2633 0012                   secretMenu@F6419 0230  
               __size_of_mcu_init 0016                       _efgtoa$2564 0073  
                     _efgtoa$2573 0079                       _efgtoa$2565 0075  
                     _efgtoa$2574 007B                       _efgtoa$2575 007D  
                     _efgtoa$2569 0077                         _dtoa$2540 002E  
            __end_of_speedControl 3B9E                  ??_Lcd_Set_Cursor 0005  
                       __pintcode 0008              __end_of_timer_0_init 5D78  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001               __size_of_secretMenu 02D4  
               __size_of_vfprintf 006A             _driverTimeSettingMenu 449C  
               __size_of_stopMenu 00CE                         fabsf@F463 01CB  
                     __smallconst 0600                          ?_isdigit 0001  
                        ?_isspace 0001                   ?_menuInitialize 0001  
                        ?_isupper 0001               __end_of_menuControl 55E8  
                  __size_of_fabsf 0034                          ?_sprintf 00CF  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002                eepromWrite@address 0002  
                       _pauseMenu 4366                    ___wmul@product 0005  
    __size_of_stopTimeSettingMenu 0108                          _LATCbits 000F8B  
                        _LATDbits 000F8C                       _eepromWrite 5C36  
                  PWM1_setDC@duty 005C                          Lcd_Cmd@a 0003  
                        _PIR2bits 000FA1                          i2u791_40 0018  
                        i2u791_41 0014                          i2u792_40 0026  
                        i2u792_41 0022                          i2u793_40 0046  
                        i2u793_41 0042                          i2u794_40 005E  
                        i2u794_41 005A                          i2u795_40 0070  
                        i2u795_41 006C                          i2u796_40 008A  
                        i2u796_41 0086                       ??_Lcd_Clear 0004  
                    _pauseIsClick 00FE               __size_of_startMotor 0036  
                       _vfpfcnvrt 1A9E                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0                          _PWM_Init 5C8C  
               ___wmul@multiplier 0001                         _startMenu 5D36  
driverTimeSettingMenu@textCursor2 00E1                      ??_eepromRead 0001  
                ??_Lcd_Write_Char 0002                    PWM2_setDC@duty 005C  
                       _stopMotor 5A7A        speedLimitSettingMenu@F6422 0220  
            __end_of_stateMachine 521C                      _isspace$2662 0007  
                        _Lcd_Port 57DE                        vfpfcnvrt@c 00C6  
                      vfpfcnvrt@f 00BF                 ___lmul@multiplier 0001  
                       copy_data0 584E          __end_of_Lcd_Write_String 547E  
                      ?_pauseMenu 0001                  __size_of_Lcd_Cmd 001E  
                      _EECON1bits 000FA6                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 5D18  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of_adcInit 003E  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                  __size_of___lldiv 00A4  
                      ?_vfpfcnvrt 00A7            ?_driverTimeSettingMenu 0001  
                     _menuControl 5572                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        ?_startMenu 0001  
                      _ANSELAbits 000F38                        _ANSELBbits 000F39  
                      _ANSELCbits 000F3A                        _ANSELDbits 000F3B  
                      _ANSELEbits 000F3C                ___fpclassifyf@F463 01C7  
                      sprintf@fmt 00D1                          ___xxtofl 3B9E  
                      ?_stopMotor 0001                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 48F2  
                        __ptext11 332A                          __ptext20 52C6  
                        __ptext12 4366                          __ptext21 449C  
                        __ptext13 3D52                          __ptext30 4BF8  
                        __ptext22 5A7A                          __ptext14 5B96  
                        __ptext31 06E8                          __ptext23 547E  
                        __ptext15 39E0                          __ptext40 5AEE  
                        __ptext32 5722                          __ptext24 54F8  
                        __ptext16 1298                          __ptext41 259C  
                        __ptext33 5AB6                          __ptext25 5C02  
                        __ptext17 59BA                          __ptext50 5976  
                        __ptext42 49F6                          __ptext34 5782  
                        __ptext26 3B9E                          __ptext18 2D60  
                        __ptext51 4E6E                          __ptext43 521C  
                        __ptext35 35FE                          __ptext27 588C  
                        __ptext19 55E8                          __ptext60 5C36  
                        __ptext52 5D86                          __ptext44 29C6  
                        __ptext36 4AFA                          __ptext28 5652  
                        __ptext61 5400                          __ptext53 59FC  
                        __ptext45 50C2                          __ptext37 47EC  
                        __ptext29 1A9E                          __ptext70 5D18  
                        __ptext62 5B5E                          __ptext54 4202  
                        __ptext46 4FFE                          __ptext38 5930  
                        __ptext71 57DE                          __ptext63 56BC  
                        __ptext55 407A                          __ptext47 3046  
                        __ptext39 20DC                          __ptext64 3814  
                        __ptext56 3EEA                          __ptext48 4F38  
                        __ptext65 5D50                          __ptext57 58DE  
                        __ptext49 5BCC                          __ptext66 536A  
                        __ptext58 5B26                          __ptext67 5A3C  
                        __ptext59 5CB4                          __ptext68 5C8C  
                        __ptext69 5D78                  __size_of_isupper 0038  
                        _lcd_init 536A                          _mainMenu 3D52  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                    ??_secretMenu 005F                        strcpy@dest 0001  
                __size_of_strncmp 00D6                          _mcu_init 5D50  
                   __size_of_atoi 0190                     __size_of_main 00D2  
                   __size_of_dtoa 02E4             __size_of_speedControl 01BE  
           __size_of_timer_0_init 0012             secretMenu@textCursor2 00E1  
                        efgtoa@fp 0058                          efgtoa@ne 0085  
                        efgtoa@pp 0081                          efgtoa@ou 006F  
                        int$flags 005F                          _vfprintf 5652  
                        _stopMenu 4DA0            readAdcValue@adcChannel 0005  
                ___aomod@dividend 0001                __end_of_secretMenu 35FE  
                  _vfpfcnvrt$2590 00BB                    _vfpfcnvrt$2595 00BD  
                  _vfpfcnvrt$2589 00B9                       _OSCTUNEbits 000F9B  
                      _INTCONbits 000FF2      _KD@fs_speed_controller$F1185 01E3  
    _KD@fs_speed_controller$F1637 01DB      _KD@fs_speed_controller$F1840 01D3  
                        isdigit@c 0001                      _speedControl 39E0  
                    _timer_0_init 5D66                      ??_startMotor 005E  
              Lcd_Write_Char@temp 0002                          intlevel2 0000  
                       sprintf@ap 00D9                       ??_pauseMenu 005F  
     __size_of_buttonControlFlags 01CC                          isspace@c 0001  
                ___lldiv@dividend 0001                         strcpy@src 0003  
                        isupper@c 0001                         strncmp@_l 0001  
                       strncmp@_r 0003                        _OSCCONbits 000FD3  
                   ??_system_init 0002                       efgtoa@nmode 008D  
                    _procces_data 0130                   ___aomod@divisor 0009  
                     ??_vfpfcnvrt 00AD                   ___aomod@counter 0011  
              Lcd_Set_Cursor@temp 0008                  ??_menuInitialize 0001  
              __end_of_startMotor 5BCC             __size_of_stateMachine 00AA  
                     ??_startMenu 0001               _stopTimeSettingMenu 46E4  
                        sprintf@f 00DB                          tolower@c 0007  
                        sprintf@s 00CF            __size_of___fpclassifyf 00FE  
                ___lldiv@quotient 0009                       ??_stopMotor 005E  
                        strncmp@l 0008                          strncmp@n 0005  
                        strncmp@r 000A                       _timer_value 01AF  
                   ___fladd@signs 0041                        _PWM1_setDC 54F8  
                      _PWM2_setDC 547E                      ___aodiv@sign 0012  
                    ___fladd@aexp 0042                      ___fladd@bexp 0043  
            ?_stopTimeSettingMenu 0001                      ?_eepromWrite 0001  
           _speedLimitSettingMenu 48F2                      ___aomod@sign 0012  
                    _stateMachine 5172  
