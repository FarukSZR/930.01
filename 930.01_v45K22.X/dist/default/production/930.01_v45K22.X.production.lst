

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Tue Aug 25 00:01:58 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=2
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=3
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=1
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=1
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=3
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=3
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=2
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1,group=3
    89                           	psect	text74,global,reloc=2,class=CODE,delta=1,group=2
    90                           	psect	text75,global,reloc=2,class=CODE,delta=1,group=2
    91                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    92                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    93                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    94                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    95                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    96                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    97  0000                     
    98                           ; Version 2.20
    99                           ; Generated 05/05/2020 GMT
   100                           ; 
   101                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   102                           ; All rights reserved.
   103                           ; 
   104                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   105                           ; 
   106                           ; Redistribution and use in source and binary forms, with or without modification, are
   107                           ; permitted provided that the following conditions are met:
   108                           ; 
   109                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   110                           ;        conditions and the following disclaimer.
   111                           ; 
   112                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   113                           ;        of conditions and the following disclaimer in the documentation and/or other
   114                           ;        materials provided with the distribution.
   115                           ; 
   116                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   117                           ;        software without specific prior written permission.
   118                           ; 
   119                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   120                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   121                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   122                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   123                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   124                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   125                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   126                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   127                           ; 
   128                           ; 
   129                           ; Code-generator required, PIC18F45K22 Definitions
   130                           ; 
   131                           ; SFR Addresses
   132  0000                     
   133                           	psect	eeprom_data
   134  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   135  0000                     
   136                           	psect	idataBANK1
   137  0053F6                     __pidataBANK1:
   138                           	callstack 0
   139                           
   140                           ;initializer for _KD@fs_speed_controller$F2361
   141  0053F6  0000               	dw	0
   142  0053F8  3F80               	dw	16256
   143                           
   144                           ;initializer for _KP@fs_speed_controller$F2360
   145  0053FA  CCCD               	dw	52429
   146  0053FC  3E4C               	dw	15948
   147                           
   148                           ;initializer for _KD@fs_speed_controller$F2208
   149  0053FE  0000               	dw	0
   150  005400  3F80               	dw	16256
   151                           
   152                           ;initializer for _KP@fs_speed_controller$F2207
   153  005402  CCCD               	dw	52429
   154  005404  3E4C               	dw	15948
   155                           
   156                           ;initializer for _KD@fs_speed_controller$F2077
   157  005406  0000               	dw	0
   158  005408  3F80               	dw	16256
   159                           
   160                           ;initializer for _KP@fs_speed_controller$F2076
   161  00540A  CCCD               	dw	52429
   162  00540C  3E4C               	dw	15948
   163                           
   164                           ;initializer for _KD@fs_speed_controller$F1843
   165  00540E  0000               	dw	0
   166  005410  3F80               	dw	16256
   167                           
   168                           ;initializer for _KP@fs_speed_controller$F1842
   169  005412  CCCD               	dw	52429
   170  005414  3E4C               	dw	15948
   171                           
   172                           ;initializer for _KD@fs_speed_controller$F1343
   173  005416  0000               	dw	0
   174  005418  3F80               	dw	16256
   175                           
   176                           ;initializer for _KP@fs_speed_controller$F1342
   177  00541A  CCCD               	dw	52429
   178  00541C  3E4C               	dw	15948
   179                           
   180                           ;initializer for _KD@fs_speed_controller$F1164
   181  00541E  0000               	dw	0
   182  005420  3F80               	dw	16256
   183                           
   184                           ;initializer for _KP@fs_speed_controller$F1163
   185  005422  CCCD               	dw	52429
   186  005424  3E4C               	dw	15948
   187                           
   188                           ;initializer for _KD@fs_speed_controller$F950
   189  005426  0000               	dw	0
   190  005428  3F80               	dw	16256
   191                           
   192                           ;initializer for _KP@fs_speed_controller$F949
   193  00542A  CCCD               	dw	52429
   194  00542C  3E4C               	dw	15948
   195                           
   196                           ;initializer for _KD
   197  00542E  0000               	dw	0
   198  005430  3F80               	dw	16256
   199                           
   200                           ;initializer for _KP
   201  005432  CCCD               	dw	52429
   202  005434  3E4C               	dw	15948
   203  0000                     _ANSELCbits	set	3898
   204  0000                     _ANSELBbits	set	3897
   205  0000                     _ANSELDbits	set	3899
   206  0000                     _ANSELEbits	set	3900
   207  0000                     _ANSELAbits	set	3896
   208  0000                     _T0CON	set	4053
   209  0000                     _TMR0L	set	4054
   210  0000                     _TMR0H	set	4055
   211  0000                     _INTCONbits	set	4082
   212  0000                     _CCPR2L	set	3943
   213  0000                     _CCPR1L	set	4030
   214  0000                     _PR2	set	4027
   215  0000                     _TMR2	set	4028
   216  0000                     _T2CONbits	set	4026
   217  0000                     _CCP2CON	set	3942
   218  0000                     _CCP1CON	set	4029
   219  0000                     _LATCbits	set	3979
   220  0000                     _LATDbits	set	3980
   221  0000                     _TRISCbits	set	3988
   222  0000                     _OSCTUNEbits	set	3995
   223  0000                     _OSCCONbits	set	4051
   224  0000                     _TRISBbits	set	3987
   225  0000                     _TRISDbits	set	3989
   226  0000                     _PORTDbits	set	3971
   227  0000                     _PORTBbits	set	3969
   228  0000                     _PIR2bits	set	4001
   229  0000                     _EECON2	set	4007
   230  0000                     _EEDATA	set	4008
   231  0000                     _EECON1bits	set	4006
   232  0000                     _EEADR	set	4009
   233  0000                     _ADCON2bits	set	4032
   234  0000                     _ADCON1	set	4033
   235  0000                     _ADCON0	set	4034
   236  0000                     _TRISEbits	set	3990
   237  0000                     _TRISAbits	set	3986
   238  0000                     _ADRESL	set	4035
   239  0000                     _ADRESH	set	4036
   240  0000                     _ADCON0bits	set	4034
   241                           
   242                           	psect	mediumconst
   243  007EF6                     __pmediumconst:
   244                           	callstack 0
   245  007EF6  00                 	db	0
   246  007EF7                     STR_14:
   247  007EF7  25                 	db	37
   248  007EF8  64                 	db	100	;'d'
   249  007EF9  20                 	db	32
   250  007EFA  20                 	db	32
   251  007EFB  20                 	db	32
   252  007EFC  20                 	db	32
   253  007EFD  20                 	db	32
   254  007EFE  20                 	db	32
   255  007EFF  20                 	db	32
   256  007F00  20                 	db	32
   257  007F01  20                 	db	32
   258  007F02  20                 	db	32
   259  007F03  20                 	db	32
   260  007F04  20                 	db	32
   261  007F05  20                 	db	32
   262  007F06  20                 	db	32
   263  007F07  20                 	db	32
   264  007F08  00                 	db	0
   265  007F09                     STR_9:
   266  007F09  50                 	db	80	;'P'
   267  007F0A  49                 	db	73	;'I'
   268  007F0B  44                 	db	68	;'D'
   269  007F0C  20                 	db	32
   270  007F0D  50                 	db	80	;'P'
   271  007F0E  41                 	db	65	;'A'
   272  007F0F  52                 	db	82	;'R'
   273  007F10  41                 	db	65	;'A'
   274  007F11  4D                 	db	77	;'M'
   275  007F12  20                 	db	32
   276  007F13  20                 	db	32
   277  007F14  20                 	db	32
   278  007F15  20                 	db	32
   279  007F16  20                 	db	32
   280  007F17  20                 	db	32
   281  007F18  20                 	db	32
   282  007F19  00                 	db	0
   283  007F1A                     STR_13:
   284  007F1A  48                 	db	72	;'H'
   285  007F1B  49                 	db	73	;'I'
   286  007F1C  5A                 	db	90	;'Z'
   287  007F1D  20                 	db	32
   288  007F1E  4C                 	db	76	;'L'
   289  007F1F  69                 	db	105	;'i'
   290  007F20  4D                 	db	77	;'M'
   291  007F21  69                 	db	105	;'i'
   292  007F22  54                 	db	84	;'T'
   293  007F23  69                 	db	105	;'i'
   294  007F24  20                 	db	32
   295  007F25  20                 	db	32
   296  007F26  20                 	db	32
   297  007F27  20                 	db	32
   298  007F28  20                 	db	32
   299  007F29  20                 	db	32
   300  007F2A  00                 	db	0
   301  007F2B                     STR_3:
   302  007F2B  4B                 	db	75	;'K'
   303  007F2C  41                 	db	65	;'A'
   304  007F2D  4C                 	db	76	;'L'
   305  007F2E  41                 	db	65	;'A'
   306  007F2F  4E                 	db	78	;'N'
   307  007F30  20                 	db	32
   308  007F31  5A                 	db	90	;'Z'
   309  007F32  41                 	db	65	;'A'
   310  007F33  4D                 	db	77	;'M'
   311  007F34  41                 	db	65	;'A'
   312  007F35  4E                 	db	78	;'N'
   313  007F36  20                 	db	32
   314  007F37  20                 	db	32
   315  007F38  20                 	db	32
   316  007F39  20                 	db	32
   317  007F3A  20                 	db	32
   318  007F3B  00                 	db	0
   319  007F3C                     STR_5:
   320  007F3C  5A                 	db	90	;'Z'
   321  007F3D  41                 	db	65	;'A'
   322  007F3E  4D                 	db	77	;'M'
   323  007F3F  41                 	db	65	;'A'
   324  007F40  4E                 	db	78	;'N'
   325  007F41  20                 	db	32
   326  007F42  44                 	db	68	;'D'
   327  007F43  4F                 	db	79	;'O'
   328  007F44  4C                 	db	76	;'L'
   329  007F45  44                 	db	68	;'D'
   330  007F46  55                 	db	85	;'U'
   331  007F47  20                 	db	32
   332  007F48  20                 	db	32
   333  007F49  20                 	db	32
   334  007F4A  20                 	db	32
   335  007F4B  20                 	db	32
   336  007F4C  00                 	db	0
   337  007F4D                     STR_7:
   338  007F4D  48                 	db	72	;'H'
   339  007F4E  41                 	db	65	;'A'
   340  007F4F  52                 	db	82	;'R'
   341  007F50  45                 	db	69	;'E'
   342  007F51  4B                 	db	75	;'K'
   343  007F52  45                 	db	69	;'E'
   344  007F53  54                 	db	84	;'T'
   345  007F54  20                 	db	32
   346  007F55  44                 	db	68	;'D'
   347  007F56  55                 	db	85	;'U'
   348  007F57  52                 	db	82	;'R'
   349  007F58  44                 	db	68	;'D'
   350  007F59  55                 	db	85	;'U'
   351  007F5A  20                 	db	32
   352  007F5B  20                 	db	32
   353  007F5C  20                 	db	32
   354  007F5D  00                 	db	0
   355  007F5E                     STR_17:
   356  007F5E  48                 	db	72	;'H'
   357  007F5F  41                 	db	65	;'A'
   358  007F60  52                 	db	82	;'R'
   359  007F61  45                 	db	69	;'E'
   360  007F62  4B                 	db	75	;'K'
   361  007F63  54                 	db	84	;'T'
   362  007F64  20                 	db	32
   363  007F65  5A                 	db	90	;'Z'
   364  007F66  41                 	db	65	;'A'
   365  007F67  4D                 	db	77	;'M'
   366  007F68  41                 	db	65	;'A'
   367  007F69  4E                 	db	78	;'N'
   368  007F6A  49                 	db	73	;'I'
   369  007F6B  20                 	db	32
   370  007F6C  64                 	db	100	;'d'
   371  007F6D  6B                 	db	107	;'k'
   372  007F6E  00                 	db	0
   373  007F6F                     STR_15:
   374  007F6F  44                 	db	68	;'D'
   375  007F70  55                 	db	85	;'U'
   376  007F71  52                 	db	82	;'R'
   377  007F72  4D                 	db	77	;'M'
   378  007F73  41                 	db	65	;'A'
   379  007F74  20                 	db	32
   380  007F75  5A                 	db	90	;'Z'
   381  007F76  41                 	db	65	;'A'
   382  007F77  4D                 	db	77	;'M'
   383  007F78  41                 	db	65	;'A'
   384  007F79  4E                 	db	78	;'N'
   385  007F7A  49                 	db	73	;'I'
   386  007F7B  20                 	db	32
   387  007F7C  20                 	db	32
   388  007F7D  6D                 	db	109	;'m'
   389  007F7E  73                 	db	115	;'s'
   390  007F7F  00                 	db	0
   391  007F80                     STR_2:
   392  007F80  20                 	db	32
   393  007F81  69                 	db	105	;'i'
   394  007F82  59                 	db	89	;'Y'
   395  007F83  69                 	db	105	;'i'
   396  007F84  20                 	db	32
   397  007F85  45                 	db	69	;'E'
   398  007F86  67                 	db	103	;'g'
   399  007F87  6C                 	db	108	;'l'
   400  007F88  65                 	db	101	;'e'
   401  007F89  6E                 	db	110	;'n'
   402  007F8A  63                 	db	99	;'c'
   403  007F8B  65                 	db	101	;'e'
   404  007F8C  6C                 	db	108	;'l'
   405  007F8D  65                 	db	101	;'e'
   406  007F8E  72                 	db	114	;'r'
   407  007F8F  20                 	db	32
   408  007F90  00                 	db	0
   409  007F91                     STR_16:
   410  007F91  25                 	db	37
   411  007F92  64                 	db	100	;'d'
   412  007F93  20                 	db	32
   413  007F94  20                 	db	32
   414  007F95  20                 	db	32
   415  007F96  20                 	db	32
   416  007F97  20                 	db	32
   417  007F98  20                 	db	32
   418  007F99  20                 	db	32
   419  007F9A  20                 	db	32
   420  007F9B  20                 	db	32
   421  007F9C  20                 	db	32
   422  007F9D  20                 	db	32
   423  007F9E  20                 	db	32
   424  007F9F  20                 	db	32
   425  007FA0  00                 	db	0
   426  007FA1                     STR_6:
   427  007FA1  20                 	db	32
   428  007FA2  20                 	db	32
   429  007FA3  20                 	db	32
   430  007FA4  20                 	db	32
   431  007FA5  20                 	db	32
   432  007FA6  20                 	db	32
   433  007FA7  25                 	db	37
   434  007FA8  64                 	db	100	;'d'
   435  007FA9  3A                 	db	58	;':'
   436  007FAA  25                 	db	37
   437  007FAB  64                 	db	100	;'d'
   438  007FAC  20                 	db	32
   439  007FAD  20                 	db	32
   440  007FAE  20                 	db	32
   441  007FAF  20                 	db	32
   442  007FB0  00                 	db	0
   443  007FB1                     STR_1:
   444  007FB1  20                 	db	32
   445  007FB2  20                 	db	32
   446  007FB3  20                 	db	32
   447  007FB4  45                 	db	69	;'E'
   448  007FB5  72                 	db	114	;'r'
   449  007FB6  67                 	db	103	;'g'
   450  007FB7  69                 	db	105	;'i'
   451  007FB8  6E                 	db	110	;'n'
   452  007FB9  20                 	db	32
   453  007FBA  4F                 	db	79	;'O'
   454  007FBB  79                 	db	121	;'y'
   455  007FBC  75                 	db	117	;'u'
   456  007FBD  6E                 	db	110	;'n'
   457  007FBE  20                 	db	32
   458  007FBF  20                 	db	32
   459  007FC0  00                 	db	0
   460  007FC1                     STR_4:
   461  007FC1  20                 	db	32
   462  007FC2  20                 	db	32
   463  007FC3  20                 	db	32
   464  007FC4  20                 	db	32
   465  007FC5  20                 	db	32
   466  007FC6  20                 	db	32
   467  007FC7  25                 	db	37
   468  007FC8  64                 	db	100	;'d'
   469  007FC9  3A                 	db	58	;':'
   470  007FCA  25                 	db	37
   471  007FCB  64                 	db	100	;'d'
   472  007FCC  20                 	db	32
   473  007FCD  20                 	db	32
   474  007FCE  20                 	db	32
   475  007FCF  00                 	db	0
   476  007FD0                     STR_10:
   477  007FD0  4B                 	db	75	;'K'
   478  007FD1  70                 	db	112	;'p'
   479  007FD2  3A                 	db	58	;':'
   480  007FD3  25                 	db	37
   481  007FD4  35                 	db	53	;'5'
   482  007FD5  2E                 	db	46
   483  007FD6  31                 	db	49	;'1'
   484  007FD7  66                 	db	102	;'f'
   485  007FD8  20                 	db	32
   486  007FD9  20                 	db	32
   487  007FDA  20                 	db	32
   488  007FDB  20                 	db	32
   489  007FDC  20                 	db	32
   490  007FDD  00                 	db	0
   491  007FDE                     STR_12:
   492  007FDE  4B                 	db	75	;'K'
   493  007FDF  64                 	db	100	;'d'
   494  007FE0  3A                 	db	58	;':'
   495  007FE1  25                 	db	37
   496  007FE2  35                 	db	53	;'5'
   497  007FE3  2E                 	db	46
   498  007FE4  31                 	db	49	;'1'
   499  007FE5  66                 	db	102	;'f'
   500  007FE6  20                 	db	32
   501  007FE7  20                 	db	32
   502  007FE8  20                 	db	32
   503  007FE9  20                 	db	32
   504  007FEA  00                 	db	0
   505  007FEB                     STR_19:
   506  007FEB  49                 	db	73	;'I'
   507  007FEC  4E                 	db	78	;'N'
   508  007FED  46                 	db	70	;'F'
   509  007FEE  00                 	db	0
   510  007FEF                     STR_23:
   511  007FEF  4E                 	db	78	;'N'
   512  007FF0  41                 	db	65	;'A'
   513  007FF1  4E                 	db	78	;'N'
   514  007FF2  00                 	db	0
   515  007FF3                     STR_20:
   516  007FF3  69                 	db	105	;'i'
   517  007FF4  6E                 	db	110	;'n'
   518  007FF5  66                 	db	102	;'f'
   519  007FF6  00                 	db	0
   520  007FF7                     STR_24:
   521  007FF7  6E                 	db	110	;'n'
   522  007FF8  61                 	db	97	;'a'
   523  007FF9  6E                 	db	110	;'n'
   524  007FFA  00                 	db	0
   525  007FFB                     STR_27:
   526  007FFB  6C                 	db	108	;'l'
   527  007FFC  66                 	db	102	;'f'
   528  007FFD  00                 	db	0
   529  007FFE  00                 	db	0	; dummy byte at the end
   530  0000                     
   531                           ; #config settings
   532                           
   533                           	psect	cinit
   534  0051EA                     __pcinit:
   535                           	callstack 0
   536  0051EA                     start_initialization:
   537                           	callstack 0
   538  0051EA                     __initialization:
   539                           	callstack 0
   540                           
   541                           ; Initialize objects allocated to BANK1 (64 bytes)
   542                           ; load TBLPTR registers with __pidataBANK1
   543  0051EA  0EF6               	movlw	low __pidataBANK1
   544  0051EC  6EF6               	movwf	tblptrl,c
   545  0051EE  0E53               	movlw	high __pidataBANK1
   546  0051F0  6EF7               	movwf	tblptrh,c
   547  0051F2  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   548  0051F4  6EF8               	movwf	tblptru,c
   549  0051F6  EE01  F0B3         	lfsr	0,__pdataBANK1
   550  0051FA  EE10 F040          	lfsr	1,64
   551  0051FE                     copy_data0:
   552  0051FE  0009               	tblrd		*+
   553  005200  CFF5 FFEE          	movff	tablat,postinc0
   554  005204  50E5               	movf	postdec1,w,c
   555  005206  50E1               	movf	fsr1l,w,c
   556  005208  E1FA               	bnz	copy_data0
   557                           
   558                           ; Clear objects allocated to BANK2 (176 bytes)
   559  00520A  EE02  F000         	lfsr	0,__pbssBANK2
   560  00520E  0EB0               	movlw	176
   561  005210                     clear_0:
   562  005210  6AEE               	clrf	postinc0,c
   563  005212  06E8               	decf	wreg,f,c
   564  005214  E1FD               	bnz	clear_0
   565                           
   566                           ; Clear objects allocated to BANK1 (179 bytes)
   567  005216  EE01  F000         	lfsr	0,__pbssBANK1
   568  00521A  0EB3               	movlw	179
   569  00521C                     clear_1:
   570  00521C  6AEE               	clrf	postinc0,c
   571  00521E  06E8               	decf	wreg,f,c
   572  005220  E1FD               	bnz	clear_1
   573                           
   574                           ; Clear objects allocated to BANK0 (13 bytes)
   575  005222  EE00  F0F3         	lfsr	0,__pbssBANK0
   576  005226  0E0D               	movlw	13
   577  005228                     clear_2:
   578  005228  6AEE               	clrf	postinc0,c
   579  00522A  06E8               	decf	wreg,f,c
   580  00522C  E1FD               	bnz	clear_2
   581  00522E                     end_of_initialization:
   582                           	callstack 0
   583  00522E                     __end_of__initialization:
   584                           	callstack 0
   585  00522E  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   586  005230  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   587  005232  0E00               	movlw	low (__Lmediumconst shr (0+16))
   588  005234  6EF8               	movwf	tblptru,c
   589  005236  0100               	movlb	0
   590  005238  EFDF  F02B         	goto	_main	;jump to C main() function
   591                           
   592                           	psect	bssBANK0
   593  0000F3                     __pbssBANK0:
   594                           	callstack 0
   595  0000F3                     _menu_value:
   596                           	callstack 0
   597  0000F3                     	ds	3
   598  0000F6                     _prec:
   599                           	callstack 0
   600  0000F6                     	ds	2
   601  0000F8                     _flags:
   602                           	callstack 0
   603  0000F8                     	ds	2
   604  0000FA                     _timer_counter_flag:
   605                           	callstack 0
   606  0000FA                     	ds	1
   607  0000FB                     _menu_selected:
   608                           	callstack 0
   609  0000FB                     	ds	1
   610  0000FC                     _secretMenuCounter:
   611                           	callstack 0
   612  0000FC                     	ds	1
   613  0000FD                     _stopIsClick:
   614                           	callstack 0
   615  0000FD                     	ds	1
   616  0000FE                     _startIsClick:
   617                           	callstack 0
   618  0000FE                     	ds	1
   619  0000FF                     _pauseIsClick:
   620                           	callstack 0
   621  0000FF                     	ds	1
   622                           
   623                           	psect	bssBANK1
   624  000100                     __pbssBANK1:
   625                           	callstack 0
   626  000100                     _convert_data:
   627                           	callstack 0
   628  000100                     	ds	48
   629  000130                     _procces_data:
   630                           	callstack 0
   631  000130                     	ds	32
   632  000150                     _controller:
   633                           	callstack 0
   634  000150                     	ds	19
   635  000163                     	ds	16
   636  000173                     _adc_raw_data:
   637                           	callstack 0
   638  000173                     	ds	16
   639  000183                     _driver_limit:
   640                           	callstack 0
   641  000183                     	ds	12
   642  00018F                     _timer_value:
   643                           	callstack 0
   644  00018F                     	ds	8
   645  000197                     _menu_flags:
   646                           	callstack 0
   647  000197                     	ds	6
   648  00019D                     _button_bounce_controller:
   649                           	callstack 0
   650  00019D                     	ds	6
   651  0001A3                     floorf@F524:
   652                           	callstack 0
   653  0001A3                     	ds	4
   654  0001A7                     ___fpclassifyf@F463:
   655                           	callstack 0
   656  0001A7                     	ds	4
   657  0001AB                     fabsf@F463:
   658                           	callstack 0
   659  0001AB                     	ds	4
   660  0001AF                     _nout:
   661                           	callstack 0
   662  0001AF                     	ds	2
   663  0001B1                     _width:
   664                           	callstack 0
   665  0001B1                     	ds	2
   666                           
   667                           	psect	dataBANK1
   668  0001B3                     __pdataBANK1:
   669                           	callstack 0
   670  0001B3                     	ds	4
   671  0001B7                     	ds	4
   672  0001BB                     	ds	4
   673  0001BF                     	ds	4
   674  0001C3                     	ds	4
   675  0001C7                     	ds	4
   676  0001CB                     _KD@fs_speed_controller$F1843:
   677                           	callstack 0
   678  0001CB                     	ds	4
   679  0001CF                     _KP@fs_speed_controller$F1842:
   680                           	callstack 0
   681  0001CF                     	ds	4
   682  0001D3                     	ds	4
   683  0001D7                     	ds	4
   684  0001DB                     	ds	4
   685  0001DF                     	ds	4
   686  0001E3                     	ds	4
   687  0001E7                     	ds	4
   688  0001EB                     	ds	4
   689  0001EF                     	ds	4
   690                           
   691                           	psect	bssBANK2
   692  000200                     __pbssBANK2:
   693                           	callstack 0
   694  000200                     	ds	16
   695  000210                     	ds	16
   696  000220                     	ds	16
   697  000230                     	ds	16
   698  000240                     	ds	16
   699  000250                     	ds	16
   700  000260                     _dbuf:
   701                           	callstack 0
   702  000260                     	ds	80
   703                           
   704                           	psect	cstackBANK0
   705  000060                     __pcstackBANK0:
   706                           	callstack 0
   707  000060                     floorf@m:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x0
   711  000060                     	ds	4
   712  000064                     floorf@e:
   713                           	callstack 0
   714                           
   715                           ; 2 bytes @ 0x4
   716  000064                     	ds	2
   717  000066                     floorf@u:
   718                           	callstack 0
   719                           
   720                           ; 4 bytes @ 0x6
   721  000066                     	ds	4
   722  00006A                     ??_efgtoa:
   723                           
   724                           ; 1 bytes @ 0xA
   725  00006A                     	ds	5
   726  00006F                     efgtoa@ou:
   727                           	callstack 0
   728                           
   729                           ; 4 bytes @ 0xF
   730  00006F                     	ds	4
   731  000073                     _efgtoa$2983:
   732                           	callstack 0
   733                           
   734                           ; 2 bytes @ 0x13
   735  000073                     	ds	2
   736  000075                     _efgtoa$2984:
   737                           	callstack 0
   738                           
   739                           ; 2 bytes @ 0x15
   740  000075                     	ds	2
   741  000077                     _efgtoa$2988:
   742                           	callstack 0
   743                           
   744                           ; 2 bytes @ 0x17
   745  000077                     	ds	2
   746  000079                     _efgtoa$2992:
   747                           	callstack 0
   748                           
   749                           ; 2 bytes @ 0x19
   750  000079                     	ds	2
   751  00007B                     _efgtoa$2993:
   752                           	callstack 0
   753                           
   754                           ; 2 bytes @ 0x1B
   755  00007B                     	ds	2
   756  00007D                     _efgtoa$2994:
   757                           	callstack 0
   758                           
   759                           ; 2 bytes @ 0x1D
   760  00007D                     	ds	2
   761  00007F                     efgtoa@t:
   762                           	callstack 0
   763                           
   764                           ; 2 bytes @ 0x1F
   765  00007F                     	ds	2
   766  000081                     efgtoa@pp:
   767                           	callstack 0
   768                           
   769                           ; 2 bytes @ 0x21
   770  000081                     	ds	2
   771  000083                     efgtoa@m:
   772                           	callstack 0
   773                           
   774                           ; 2 bytes @ 0x23
   775  000083                     	ds	2
   776  000085                     efgtoa@ne:
   777                           	callstack 0
   778                           
   779                           ; 2 bytes @ 0x25
   780  000085                     	ds	2
   781  000087                     efgtoa@d:
   782                           	callstack 0
   783                           
   784                           ; 2 bytes @ 0x27
   785  000087                     	ds	2
   786  000089                     efgtoa@sign:
   787                           	callstack 0
   788                           
   789                           ; 2 bytes @ 0x29
   790  000089                     	ds	2
   791  00008B                     efgtoa@p:
   792                           	callstack 0
   793                           
   794                           ; 2 bytes @ 0x2B
   795  00008B                     	ds	2
   796  00008D                     efgtoa@nmode:
   797                           	callstack 0
   798                           
   799                           ; 1 bytes @ 0x2D
   800  00008D                     	ds	1
   801  00008E                     efgtoa@w:
   802                           	callstack 0
   803                           
   804                           ; 2 bytes @ 0x2E
   805  00008E                     	ds	2
   806  000090                     efgtoa@mode:
   807                           	callstack 0
   808                           
   809                           ; 1 bytes @ 0x30
   810  000090                     	ds	1
   811  000091                     efgtoa@h:
   812                           	callstack 0
   813                           
   814                           ; 4 bytes @ 0x31
   815  000091                     	ds	4
   816  000095                     efgtoa@l:
   817                           	callstack 0
   818                           
   819                           ; 4 bytes @ 0x35
   820  000095                     	ds	4
   821  000099                     efgtoa@i:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x39
   825  000099                     	ds	2
   826  00009B                     efgtoa@g:
   827                           	callstack 0
   828                           
   829                           ; 4 bytes @ 0x3B
   830  00009B                     	ds	4
   831  00009F                     efgtoa@e:
   832                           	callstack 0
   833                           
   834                           ; 2 bytes @ 0x3F
   835  00009F                     	ds	2
   836  0000A1                     efgtoa@n:
   837                           	callstack 0
   838                           
   839                           ; 2 bytes @ 0x41
   840  0000A1                     	ds	2
   841  0000A3                     efgtoa@u:
   842                           	callstack 0
   843                           
   844                           ; 4 bytes @ 0x43
   845  0000A3                     	ds	4
   846  0000A7                     ?_vfpfcnvrt:
   847                           	callstack 0
   848  0000A7                     vfpfcnvrt@fp:
   849                           	callstack 0
   850                           
   851                           ; 2 bytes @ 0x47
   852  0000A7                     	ds	2
   853  0000A9                     vfpfcnvrt@fmt:
   854                           	callstack 0
   855                           
   856                           ; 2 bytes @ 0x49
   857  0000A9                     	ds	2
   858  0000AB                     vfpfcnvrt@ap:
   859                           	callstack 0
   860                           
   861                           ; 2 bytes @ 0x4B
   862  0000AB                     	ds	2
   863  0000AD                     ??_vfpfcnvrt:
   864                           
   865                           ; 1 bytes @ 0x4D
   866  0000AD                     	ds	4
   867  0000B1                     vfpfcnvrt@ll:
   868                           	callstack 0
   869                           
   870                           ; 8 bytes @ 0x51
   871  0000B1                     	ds	8
   872  0000B9                     _vfpfcnvrt$3008:
   873                           	callstack 0
   874                           
   875                           ; 2 bytes @ 0x59
   876  0000B9                     	ds	2
   877  0000BB                     _vfpfcnvrt$3009:
   878                           	callstack 0
   879                           
   880                           ; 2 bytes @ 0x5B
   881  0000BB                     	ds	2
   882  0000BD                     _vfpfcnvrt$3014:
   883                           	callstack 0
   884                           
   885                           ; 2 bytes @ 0x5D
   886  0000BD                     	ds	2
   887  0000BF                     vfpfcnvrt@f:
   888                           	callstack 0
   889                           
   890                           ; 4 bytes @ 0x5F
   891  0000BF                     	ds	4
   892  0000C3                     vfpfcnvrt@ct:
   893                           	callstack 0
   894                           
   895                           ; 3 bytes @ 0x63
   896  0000C3                     	ds	3
   897  0000C6                     vfpfcnvrt@c:
   898                           	callstack 0
   899                           
   900                           ; 1 bytes @ 0x66
   901  0000C6                     	ds	1
   902  0000C7                     ?_vfprintf:
   903                           	callstack 0
   904  0000C7                     vfprintf@fp:
   905                           	callstack 0
   906                           
   907                           ; 2 bytes @ 0x67
   908  0000C7                     	ds	2
   909  0000C9                     vfprintf@fmt:
   910                           	callstack 0
   911                           
   912                           ; 2 bytes @ 0x69
   913  0000C9                     	ds	2
   914  0000CB                     vfprintf@ap:
   915                           	callstack 0
   916                           
   917                           ; 2 bytes @ 0x6B
   918  0000CB                     	ds	2
   919  0000CD                     vfprintf@cfmt:
   920                           	callstack 0
   921                           
   922                           ; 2 bytes @ 0x6D
   923  0000CD                     	ds	2
   924  0000CF                     ?_sprintf:
   925                           	callstack 0
   926  0000CF                     sprintf@s:
   927                           	callstack 0
   928                           
   929                           ; 2 bytes @ 0x6F
   930  0000CF                     	ds	2
   931  0000D1                     sprintf@fmt:
   932                           	callstack 0
   933                           
   934                           ; 2 bytes @ 0x71
   935  0000D1                     	ds	8
   936  0000D9                     sprintf@ap:
   937                           	callstack 0
   938                           
   939                           ; 2 bytes @ 0x79
   940  0000D9                     	ds	2
   941  0000DB                     sprintf@f:
   942                           	callstack 0
   943                           
   944                           ; 6 bytes @ 0x7B
   945  0000DB                     	ds	6
   946  0000E1                     mainMenu@textCursor2:
   947                           	callstack 0
   948  0000E1                     stopMenu@textCursor2:
   949                           	callstack 0
   950  0000E1                     pauseMenu@textCursor2:
   951                           	callstack 0
   952  0000E1                     secretMenu@textCursor2:
   953                           	callstack 0
   954  0000E1                     speedLimitSettingMenu@textCursor2:
   955                           	callstack 0
   956  0000E1                     stopTimeSettingMenu@textCursor2:
   957                           	callstack 0
   958  0000E1                     driverTimeSettingMenu@textCursor2:
   959                           	callstack 0
   960                           
   961                           ; 16 bytes @ 0x81
   962  0000E1                     	ds	16
   963  0000F1                     ??_stateMachine:
   964                           
   965                           ; 1 bytes @ 0x91
   966  0000F1                     	ds	2
   967                           
   968                           	psect	cstackCOMRAM
   969  000001                     __pcstackCOMRAM:
   970                           	callstack 0
   971  000001                     ?_strlen:
   972                           	callstack 0
   973  000001                     ?___fpclassifyf:
   974                           	callstack 0
   975  000001                     ?_isupper:
   976                           	callstack 0
   977  000001                     ?_isdigit:
   978                           	callstack 0
   979  000001                     ?_strncmp:
   980                           	callstack 0
   981  000001                     ?_isspace:
   982                           	callstack 0
   983  000001                     ?_readAdcValue:
   984                           	callstack 0
   985  000001                     ?___wmul:
   986                           	callstack 0
   987  000001                     ?___awdiv:
   988                           	callstack 0
   989  000001                     ?___awmod:
   990                           	callstack 0
   991  000001                     ?___lmul:
   992                           	callstack 0
   993  000001                     ?___lldiv:
   994                           	callstack 0
   995  000001                     ?___flneg:
   996                           	callstack 0
   997  000001                     ?___aodiv:
   998                           	callstack 0
   999  000001                     ?___aomod:
  1000                           	callstack 0
  1001  000001                     eepromRead@address:
  1002                           	callstack 0
  1003  000001                     eepromWrite@data:
  1004                           	callstack 0
  1005  000001                     lcdPort@a:
  1006                           	callstack 0
  1007  000001                     ___wmul@multiplier:
  1008                           	callstack 0
  1009  000001                     ___awdiv@dividend:
  1010                           	callstack 0
  1011  000001                     ___awmod@dividend:
  1012                           	callstack 0
  1013  000001                     isdigit@c:
  1014                           	callstack 0
  1015  000001                     isspace@c:
  1016                           	callstack 0
  1017  000001                     isupper@c:
  1018                           	callstack 0
  1019  000001                     fputc@c:
  1020                           	callstack 0
  1021  000001                     strcpy@dest:
  1022                           	callstack 0
  1023  000001                     strlen@s:
  1024                           	callstack 0
  1025  000001                     strncmp@_l:
  1026                           	callstack 0
  1027  000001                     ___lmul@multiplier:
  1028                           	callstack 0
  1029  000001                     ___lldiv@dividend:
  1030                           	callstack 0
  1031  000001                     ___fleq@ff1:
  1032                           	callstack 0
  1033  000001                     ___flneg@f1:
  1034                           	callstack 0
  1035  000001                     ___fpclassifyf@x:
  1036                           	callstack 0
  1037  000001                     ___aodiv@dividend:
  1038                           	callstack 0
  1039  000001                     ___aomod@dividend:
  1040                           	callstack 0
  1041                           
  1042                           ; 8 bytes @ 0x0
  1043  000001                     	ds	1
  1044  000002                     ??_systemInit:
  1045  000002                     ??_lcdCmd:
  1046  000002                     eepromWrite@address:
  1047                           	callstack 0
  1048  000002                     lcdWriteChar@temp:
  1049                           	callstack 0
  1050                           
  1051                           ; 1 bytes @ 0x1
  1052  000002                     	ds	1
  1053  000003                     ??_isupper:
  1054  000003                     ??_isdigit:
  1055  000003                     ??_isspace:
  1056  000003                     ??_readAdcValue:
  1057  000003                     lcdCmd@a:
  1058                           	callstack 0
  1059  000003                     lcdWriteChar@y:
  1060                           	callstack 0
  1061  000003                     ___wmul@multiplicand:
  1062                           	callstack 0
  1063  000003                     ___awdiv@divisor:
  1064                           	callstack 0
  1065  000003                     ___awmod@divisor:
  1066                           	callstack 0
  1067  000003                     fputc@fp:
  1068                           	callstack 0
  1069  000003                     strcpy@src:
  1070                           	callstack 0
  1071  000003                     strlen@a:
  1072                           	callstack 0
  1073  000003                     strncmp@_r:
  1074                           	callstack 0
  1075                           
  1076                           ; 2 bytes @ 0x2
  1077  000003                     	ds	1
  1078  000004                     ??_lcdInit:
  1079  000004                     lcdSetCursor@b:
  1080                           	callstack 0
  1081  000004                     lcdWriteChar@a:
  1082                           	callstack 0
  1083                           
  1084                           ; 1 bytes @ 0x3
  1085  000004                     	ds	1
  1086  000005                     ??_fputc:
  1087  000005                     ??___fpclassifyf:
  1088  000005                     ??_strcpy:
  1089  000005                     readAdcValue@adcChannel:
  1090                           	callstack 0
  1091  000005                     lcdSetCursor@a:
  1092                           	callstack 0
  1093  000005                     ___awdiv@counter:
  1094                           	callstack 0
  1095  000005                     ___awmod@counter:
  1096                           	callstack 0
  1097  000005                     lcdWriteString@a:
  1098                           	callstack 0
  1099  000005                     ___wmul@product:
  1100                           	callstack 0
  1101  000005                     strncmp@n:
  1102                           	callstack 0
  1103  000005                     ___lmul@multiplicand:
  1104                           	callstack 0
  1105  000005                     ___lldiv@divisor:
  1106                           	callstack 0
  1107  000005                     ___fleq@ff2:
  1108                           	callstack 0
  1109                           
  1110                           ; 4 bytes @ 0x4
  1111  000005                     	ds	1
  1112  000006                     lcdSetCursor@z:
  1113                           	callstack 0
  1114  000006                     ___awdiv@sign:
  1115                           	callstack 0
  1116  000006                     ___awmod@sign:
  1117                           	callstack 0
  1118  000006                     readAdcValue@adcValue:
  1119                           	callstack 0
  1120                           
  1121                           ; 2 bytes @ 0x5
  1122  000006                     	ds	1
  1123  000007                     ??_strncmp:
  1124  000007                     ??_lcdWriteString:
  1125  000007                     ?_tolower:
  1126                           	callstack 0
  1127  000007                     lcdSetCursor@y:
  1128                           	callstack 0
  1129  000007                     _isspace$3081:
  1130                           	callstack 0
  1131  000007                     ___awdiv@quotient:
  1132                           	callstack 0
  1133  000007                     strcpy@s:
  1134                           	callstack 0
  1135  000007                     tolower@c:
  1136                           	callstack 0
  1137                           
  1138                           ; 2 bytes @ 0x6
  1139  000007                     	ds	1
  1140  000008                     ?_atoi:
  1141                           	callstack 0
  1142  000008                     lcdSetCursor@temp:
  1143                           	callstack 0
  1144  000008                     atoi@s:
  1145                           	callstack 0
  1146  000008                     strncmp@l:
  1147                           	callstack 0
  1148                           
  1149                           ; 2 bytes @ 0x7
  1150  000008                     	ds	1
  1151  000009                     ??_tolower:
  1152  000009                     ??___fleq:
  1153  000009                     lcdWriteString@i:
  1154                           	callstack 0
  1155  000009                     ___fpclassifyf@e:
  1156                           	callstack 0
  1157  000009                     strcpy@d:
  1158                           	callstack 0
  1159  000009                     ___lmul@product:
  1160                           	callstack 0
  1161  000009                     ___lldiv@quotient:
  1162                           	callstack 0
  1163  000009                     ___aodiv@divisor:
  1164                           	callstack 0
  1165  000009                     ___aomod@divisor:
  1166                           	callstack 0
  1167                           
  1168                           ; 8 bytes @ 0x8
  1169  000009                     	ds	1
  1170  00000A                     ??_atoi:
  1171  00000A                     fputs@s:
  1172                           	callstack 0
  1173  00000A                     strncmp@r:
  1174                           	callstack 0
  1175                           
  1176                           ; 2 bytes @ 0x9
  1177  00000A                     	ds	1
  1178  00000B                     ??_openLCD_Script:
  1179  00000B                     ___fpclassifyf@u:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0xA
  1183  00000B                     	ds	1
  1184  00000C                     fputs@fp:
  1185                           	callstack 0
  1186                           
  1187                           ; 2 bytes @ 0xB
  1188  00000C                     	ds	1
  1189  00000D                     ___lldiv@counter:
  1190                           	callstack 0
  1191  00000D                     _tolower$3145:
  1192                           	callstack 0
  1193                           
  1194                           ; 2 bytes @ 0xC
  1195  00000D                     	ds	1
  1196  00000E                     ?___xxtofl:
  1197                           	callstack 0
  1198  00000E                     fputs@c:
  1199                           	callstack 0
  1200  00000E                     atoi@neg:
  1201                           	callstack 0
  1202  00000E                     ___xxtofl@val:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0xD
  1206  00000E                     	ds	1
  1207  00000F                     fputs@i:
  1208                           	callstack 0
  1209                           
  1210                           ; 2 bytes @ 0xE
  1211  00000F                     	ds	1
  1212  000010                     _atoi$3050:
  1213                           	callstack 0
  1214                           
  1215                           ; 2 bytes @ 0xF
  1216  000010                     	ds	1
  1217  000011                     ?_pad:
  1218                           	callstack 0
  1219  000011                     ___aodiv@counter:
  1220                           	callstack 0
  1221  000011                     ___aomod@counter:
  1222                           	callstack 0
  1223  000011                     pad@fp:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x10
  1227  000011                     	ds	1
  1228  000012                     ??___xxtofl:
  1229  000012                     ___aodiv@sign:
  1230                           	callstack 0
  1231  000012                     ___aomod@sign:
  1232                           	callstack 0
  1233  000012                     _atoi$3052:
  1234                           	callstack 0
  1235                           
  1236                           ; 2 bytes @ 0x11
  1237  000012                     	ds	1
  1238  000013                     ?_abs:
  1239                           	callstack 0
  1240  000013                     pad@buf:
  1241                           	callstack 0
  1242  000013                     abs@a:
  1243                           	callstack 0
  1244  000013                     ___aodiv@quotient:
  1245                           	callstack 0
  1246                           
  1247                           ; 8 bytes @ 0x12
  1248  000013                     	ds	1
  1249  000014                     _atoi$3051:
  1250                           	callstack 0
  1251                           
  1252                           ; 1 bytes @ 0x13
  1253  000014                     	ds	1
  1254  000015                     ??_abs:
  1255  000015                     pad@p:
  1256                           	callstack 0
  1257  000015                     atoi@n:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x14
  1261  000015                     	ds	1
  1262  000016                     ___xxtofl@sign:
  1263                           	callstack 0
  1264                           
  1265                           ; 1 bytes @ 0x15
  1266  000016                     	ds	1
  1267  000017                     ??_pad:
  1268  000017                     ___xxtofl@exp:
  1269                           	callstack 0
  1270                           
  1271                           ; 1 bytes @ 0x16
  1272  000017                     	ds	1
  1273  000018                     pad@i:
  1274                           	callstack 0
  1275  000018                     ___xxtofl@arg:
  1276                           	callstack 0
  1277                           
  1278                           ; 4 bytes @ 0x17
  1279  000018                     	ds	2
  1280  00001A                     pad@w:
  1281                           	callstack 0
  1282                           
  1283                           ; 2 bytes @ 0x19
  1284  00001A                     	ds	2
  1285  00001C                     ??_calculatedAverageValue:
  1286  00001C                     ?_dtoa:
  1287                           	callstack 0
  1288  00001C                     ?_fabsf:
  1289                           	callstack 0
  1290  00001C                     ?___flmul:
  1291                           	callstack 0
  1292  00001C                     dtoa@fp:
  1293                           	callstack 0
  1294  00001C                     ___flmul@b:
  1295                           	callstack 0
  1296  00001C                     fabsf@x:
  1297                           	callstack 0
  1298                           
  1299                           ; 4 bytes @ 0x1B
  1300  00001C                     	ds	2
  1301  00001E                     dtoa@d:
  1302                           	callstack 0
  1303                           
  1304                           ; 8 bytes @ 0x1D
  1305  00001E                     	ds	2
  1306  000020                     ___flmul@a:
  1307                           	callstack 0
  1308  000020                     fabsf@u:
  1309                           	callstack 0
  1310                           
  1311                           ; 4 bytes @ 0x1F
  1312  000020                     	ds	4
  1313  000024                     ??___flmul:
  1314                           
  1315                           ; 1 bytes @ 0x23
  1316  000024                     	ds	2
  1317  000026                     ??_dtoa:
  1318                           
  1319                           ; 1 bytes @ 0x25
  1320  000026                     	ds	2
  1321  000028                     ___flmul@sign:
  1322                           	callstack 0
  1323                           
  1324                           ; 1 bytes @ 0x27
  1325  000028                     	ds	1
  1326  000029                     ___flmul@grs:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x28
  1330  000029                     	ds	4
  1331  00002D                     ___flmul@aexp:
  1332                           	callstack 0
  1333                           
  1334                           ; 1 bytes @ 0x2C
  1335  00002D                     	ds	1
  1336  00002E                     ___flmul@bexp:
  1337                           	callstack 0
  1338  00002E                     _dtoa$2959:
  1339                           	callstack 0
  1340                           
  1341                           ; 2 bytes @ 0x2D
  1342  00002E                     	ds	1
  1343  00002F                     ___flmul@prod:
  1344                           	callstack 0
  1345                           
  1346                           ; 4 bytes @ 0x2E
  1347  00002F                     	ds	1
  1348  000030                     dtoa@p:
  1349                           	callstack 0
  1350                           
  1351                           ; 2 bytes @ 0x2F
  1352  000030                     	ds	2
  1353  000032                     dtoa@w:
  1354                           	callstack 0
  1355                           
  1356                           ; 2 bytes @ 0x31
  1357  000032                     	ds	1
  1358  000033                     ___flmul@temp:
  1359                           	callstack 0
  1360                           
  1361                           ; 2 bytes @ 0x32
  1362  000033                     	ds	1
  1363  000034                     dtoa@s:
  1364                           	callstack 0
  1365                           
  1366                           ; 2 bytes @ 0x33
  1367  000034                     	ds	1
  1368  000035                     ?___fladd:
  1369                           	callstack 0
  1370  000035                     ?___fldiv:
  1371                           	callstack 0
  1372  000035                     ___flge@ff1:
  1373                           	callstack 0
  1374  000035                     ___fladd@b:
  1375                           	callstack 0
  1376  000035                     ___fldiv@b:
  1377                           	callstack 0
  1378                           
  1379                           ; 4 bytes @ 0x34
  1380  000035                     	ds	1
  1381  000036                     dtoa@n:
  1382                           	callstack 0
  1383                           
  1384                           ; 8 bytes @ 0x35
  1385  000036                     	ds	3
  1386  000039                     ___flge@ff2:
  1387                           	callstack 0
  1388  000039                     ___fladd@a:
  1389                           	callstack 0
  1390  000039                     ___fldiv@a:
  1391                           	callstack 0
  1392                           
  1393                           ; 4 bytes @ 0x38
  1394  000039                     	ds	4
  1395  00003D                     ??___fladd:
  1396  00003D                     ??___fldiv:
  1397  00003D                     ??___flge:
  1398                           
  1399                           ; 1 bytes @ 0x3C
  1400  00003D                     	ds	1
  1401  00003E                     dtoa@i:
  1402                           	callstack 0
  1403                           
  1404                           ; 2 bytes @ 0x3D
  1405  00003E                     	ds	3
  1406  000041                     ___fladd@signs:
  1407                           	callstack 0
  1408  000041                     ___fldiv@rem:
  1409                           	callstack 0
  1410                           
  1411                           ; 4 bytes @ 0x40
  1412  000041                     	ds	1
  1413  000042                     ___fladd@aexp:
  1414                           	callstack 0
  1415                           
  1416                           ; 1 bytes @ 0x41
  1417  000042                     	ds	1
  1418  000043                     ___fladd@bexp:
  1419                           	callstack 0
  1420                           
  1421                           ; 1 bytes @ 0x42
  1422  000043                     	ds	1
  1423  000044                     ___fladd@grs:
  1424                           	callstack 0
  1425                           
  1426                           ; 1 bytes @ 0x43
  1427  000044                     	ds	1
  1428  000045                     ?___flsub:
  1429                           	callstack 0
  1430  000045                     ___fldiv@sign:
  1431                           	callstack 0
  1432  000045                     ___flsub@b:
  1433                           	callstack 0
  1434                           
  1435                           ; 4 bytes @ 0x44
  1436  000045                     	ds	1
  1437  000046                     ___fldiv@new_exp:
  1438                           	callstack 0
  1439                           
  1440                           ; 2 bytes @ 0x45
  1441  000046                     	ds	2
  1442  000048                     ___fldiv@grs:
  1443                           	callstack 0
  1444                           
  1445                           ; 4 bytes @ 0x47
  1446  000048                     	ds	1
  1447  000049                     ___flsub@a:
  1448                           	callstack 0
  1449                           
  1450                           ; 4 bytes @ 0x48
  1451  000049                     	ds	3
  1452  00004C                     ___fldiv@bexp:
  1453                           	callstack 0
  1454                           
  1455                           ; 1 bytes @ 0x4B
  1456  00004C                     	ds	1
  1457  00004D                     ___fldiv@aexp:
  1458                           	callstack 0
  1459                           
  1460                           ; 1 bytes @ 0x4C
  1461  00004D                     	ds	1
  1462  00004E                     ?_floorf:
  1463                           	callstack 0
  1464  00004E                     ?___fltol:
  1465                           	callstack 0
  1466  00004E                     ___fltol@f1:
  1467                           	callstack 0
  1468  00004E                     floorf@x:
  1469                           	callstack 0
  1470                           
  1471                           ; 4 bytes @ 0x4D
  1472  00004E                     	ds	4
  1473  000052                     ??_floorf:
  1474  000052                     ??___fltol:
  1475                           
  1476                           ; 1 bytes @ 0x51
  1477  000052                     	ds	4
  1478  000056                     ___fltol@sign1:
  1479                           	callstack 0
  1480                           
  1481                           ; 1 bytes @ 0x55
  1482  000056                     	ds	1
  1483  000057                     ___fltol@exp1:
  1484                           	callstack 0
  1485                           
  1486                           ; 1 bytes @ 0x56
  1487  000057                     	ds	1
  1488  000058                     ??_scanAdcConversion:
  1489  000058                     ?_efgtoa:
  1490                           	callstack 0
  1491  000058                     PWM1_setDC@dutycycle:
  1492                           	callstack 0
  1493  000058                     PWM2_setDC@dutycycle:
  1494                           	callstack 0
  1495  000058                     efgtoa@fp:
  1496                           	callstack 0
  1497  000058                     speedControl@position:
  1498                           	callstack 0
  1499                           
  1500                           ; 4 bytes @ 0x57
  1501  000058                     	ds	2
  1502  00005A                     ??_PWM1_setDC:
  1503  00005A                     ??_PWM2_setDC:
  1504  00005A                     efgtoa@f:
  1505                           	callstack 0
  1506                           
  1507                           ; 4 bytes @ 0x59
  1508  00005A                     	ds	2
  1509  00005C                     ??_speedControl:
  1510  00005C                     PWM1_setDC@duty:
  1511                           	callstack 0
  1512  00005C                     PWM2_setDC@duty:
  1513                           	callstack 0
  1514                           
  1515                           ; 2 bytes @ 0x5B
  1516  00005C                     	ds	2
  1517  00005E                     efgtoa@c:
  1518                           	callstack 0
  1519                           
  1520                           ; 1 bytes @ 0x5D
  1521  00005E                     	ds	1
  1522  00005F                     
  1523                           ; 1 bytes @ 0x5E
  1524 ;;
  1525 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1526 ;;
  1527 ;; *************** function _main *****************
  1528 ;; Defined at:
  1529 ;;		line 109 in file "fs_main.c"
  1530 ;; Parameters:    Size  Location     Type
  1531 ;;		None
  1532 ;; Auto vars:     Size  Location     Type
  1533 ;;		None
  1534 ;; Return value:  Size  Location     Type
  1535 ;;                  1    wreg      void 
  1536 ;; Registers used:
  1537 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1538 ;; Tracked objects:
  1539 ;;		On entry : 0/0
  1540 ;;		On exit  : 0/0
  1541 ;;		Unchanged: 0/0
  1542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1543 ;;      Params:         0       0       0       0       0       0       0
  1544 ;;      Locals:         0       0       0       0       0       0       0
  1545 ;;      Temps:          0       0       0       0       0       0       0
  1546 ;;      Totals:         0       0       0       0       0       0       0
  1547 ;;Total ram usage:        0 bytes
  1548 ;; Hardware stack levels required when called:   12
  1549 ;; This function calls:
  1550 ;;		_loopTaskInit
  1551 ;;		_loopTaskMenuControl
  1552 ;;		_loopTaskTimeMachine
  1553 ;; This function is called by:
  1554 ;;		Startup code after reset
  1555 ;; This function uses a non-reentrant model
  1556 ;;
  1557                           
  1558                           	psect	text0
  1559  0057BE                     __ptext0:
  1560                           	callstack 0
  1561  0057BE                     _main:
  1562                           	callstack 19
  1563  0057BE                     
  1564                           ;fs_main.c: 111:     loopTaskInit();
  1565  0057BE  EC3B  F02A         	call	_loopTaskInit	;wreg free
  1566  0057C2                     l6513:
  1567                           
  1568                           ;fs_main.c: 114:     {;fs_main.c: 115:         loopTaskTimeMachine();
  1569  0057C2  EC90  F026         	call	_loopTaskTimeMachine	;wreg free
  1570  0057C6                     
  1571                           ;fs_main.c: 116:         loopTaskMenuControl();
  1572  0057C6  EC91  F027         	call	_loopTaskMenuControl	;wreg free
  1573  0057CA  EFE1  F02B         	goto	l6513
  1574  0057CE  EF57  F000         	goto	start
  1575  0057D2                     __end_of_main:
  1576                           	callstack 0
  1577                           
  1578 ;; *************** function _loopTaskTimeMachine *****************
  1579 ;; Defined at:
  1580 ;;		line 54 in file "fs_main.c"
  1581 ;; Parameters:    Size  Location     Type
  1582 ;;		None
  1583 ;; Auto vars:     Size  Location     Type
  1584 ;;		None
  1585 ;; Return value:  Size  Location     Type
  1586 ;;                  1    wreg      void 
  1587 ;; Registers used:
  1588 ;;		wreg, status,2, status,0
  1589 ;; Tracked objects:
  1590 ;;		On entry : 0/0
  1591 ;;		On exit  : 0/0
  1592 ;;		Unchanged: 0/0
  1593 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1594 ;;      Params:         0       0       0       0       0       0       0
  1595 ;;      Locals:         0       0       0       0       0       0       0
  1596 ;;      Temps:          0       0       0       0       0       0       0
  1597 ;;      Totals:         0       0       0       0       0       0       0
  1598 ;;Total ram usage:        0 bytes
  1599 ;; Hardware stack levels used:    1
  1600 ;; Hardware stack levels required when called:    1
  1601 ;; This function calls:
  1602 ;;		Nothing
  1603 ;; This function is called by:
  1604 ;;		_main
  1605 ;; This function uses a non-reentrant model
  1606 ;;
  1607                           
  1608                           	psect	text1
  1609  004D20                     __ptext1:
  1610                           	callstack 0
  1611  004D20                     _loopTaskTimeMachine:
  1612                           	callstack 29
  1613  004D20                     
  1614                           ;fs_main.c: 56:     if (timer_counter_flag.one_second_flag == 1)
  1615  004D20  0100               	movlb	0	; () banked
  1616  004D22  A1FA               	btfss	_timer_counter_flag& (0+255),0,b
  1617  004D24  EF96  F026         	goto	u7811
  1618  004D28  EF98  F026         	goto	u7810
  1619  004D2C                     u7811:
  1620  004D2C  EFD7  F026         	goto	l255
  1621  004D30                     u7810:
  1622  004D30                     
  1623                           ; BSR set to: 0
  1624                           ;fs_main.c: 57:     {;fs_main.c: 58:         timer_counter_flag.one_second_flag = 0;
  1625  004D30  91FA               	bcf	_timer_counter_flag& (0+255),0,b
  1626  004D32                     
  1627                           ; BSR set to: 0
  1628                           ;fs_main.c: 60:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1629  004D32  05FE               	decf	_startIsClick& (0+255),w,b
  1630  004D34  A4D8               	btfss	status,2,c
  1631  004D36  EF9F  F026         	goto	u7821
  1632  004D3A  EFA1  F026         	goto	u7820
  1633  004D3E                     u7821:
  1634  004D3E  EFD7  F026         	goto	l255
  1635  004D42                     u7820:
  1636  004D42                     
  1637                           ; BSR set to: 0
  1638  004D42  51FF               	movf	_pauseIsClick& (0+255),w,b
  1639  004D44  A4D8               	btfss	status,2,c
  1640  004D46  EFA7  F026         	goto	u7831
  1641  004D4A  EFA9  F026         	goto	u7830
  1642  004D4E                     u7831:
  1643  004D4E  EFD7  F026         	goto	l255
  1644  004D52                     u7830:
  1645  004D52                     
  1646                           ; BSR set to: 0
  1647  004D52  51FD               	movf	_stopIsClick& (0+255),w,b
  1648  004D54  A4D8               	btfss	status,2,c
  1649  004D56  EFAF  F026         	goto	u7841
  1650  004D5A  EFB1  F026         	goto	u7840
  1651  004D5E                     u7841:
  1652  004D5E  EFD7  F026         	goto	l255
  1653  004D62                     u7840:
  1654  004D62                     
  1655                           ; BSR set to: 0
  1656  004D62  51FB               	movf	_menu_selected& (0+255),w,b
  1657  004D64  A4D8               	btfss	status,2,c
  1658  004D66  EFB7  F026         	goto	u7851
  1659  004D6A  EFB9  F026         	goto	u7850
  1660  004D6E                     u7851:
  1661  004D6E  EFD7  F026         	goto	l255
  1662  004D72                     u7850:
  1663  004D72                     
  1664                           ; BSR set to: 0
  1665                           ;fs_main.c: 61:         {;fs_main.c: 62:             timer_value.second++;
  1666  004D72  0101               	movlb	1	; () banked
  1667  004D74  2B8F               	incf	_timer_value& (0+255),f,b
  1668  004D76                     
  1669                           ; BSR set to: 1
  1670                           ;fs_main.c: 63:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1671  004D76  518F               	movf	_timer_value& (0+255),w,b
  1672  004D78  083C               	sublw	60
  1673  004D7A  6F91               	movwf	(_timer_value+2)& (0+255),b
  1674  004D7C                     
  1675                           ; BSR set to: 1
  1676                           ;fs_main.c: 65:             if (timer_value.remainingSecond == 59 )
  1677  004D7C  0E3B               	movlw	59
  1678  004D7E  1991               	xorwf	(_timer_value+2)& (0+255),w,b
  1679  004D80  A4D8               	btfss	status,2,c
  1680  004D82  EFC5  F026         	goto	u7861
  1681  004D86  EFC7  F026         	goto	u7860
  1682  004D8A                     u7861:
  1683  004D8A  EFCD  F026         	goto	l6465
  1684  004D8E                     u7860:
  1685  004D8E                     
  1686                           ; BSR set to: 1
  1687                           ;fs_main.c: 66:             {;fs_main.c: 67:                 timer_value.minute++;
  1688  004D8E  2B90               	incf	(_timer_value+1)& (0+255),f,b
  1689  004D90                     
  1690                           ; BSR set to: 1
  1691                           ;fs_main.c: 68:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1692  004D90  5190               	movf	(_timer_value+1)& (0+255),w,b
  1693  004D92  0100               	movlb	0	; () banked
  1694  004D94  5DF3               	subwf	_menu_value& (0+255),w,b
  1695  004D96  0101               	movlb	1	; () banked
  1696  004D98  6F92               	movwf	(_timer_value+3)& (0+255),b
  1697  004D9A                     l6465:
  1698                           
  1699                           ; BSR set to: 1
  1700                           ;fs_main.c: 71:             if (timer_value.second > 59)
  1701  004D9A  0E3B               	movlw	59
  1702  004D9C  658F               	cpfsgt	_timer_value& (0+255),b
  1703  004D9E  EFD3  F026         	goto	u7871
  1704  004DA2  EFD5  F026         	goto	u7870
  1705  004DA6                     u7871:
  1706  004DA6  EFD7  F026         	goto	l255
  1707  004DAA                     u7870:
  1708  004DAA                     
  1709                           ; BSR set to: 1
  1710                           ;fs_main.c: 72:             {;fs_main.c: 73:                 timer_value.second = 0;
  1711  004DAA  0E00               	movlw	0
  1712  004DAC  6F8F               	movwf	_timer_value& (0+255),b
  1713  004DAE                     l255:
  1714  004DAE  0012               	return		;funcret
  1715  004DB0                     __end_of_loopTaskTimeMachine:
  1716                           	callstack 0
  1717                           
  1718 ;; *************** function _loopTaskMenuControl *****************
  1719 ;; Defined at:
  1720 ;;		line 159 in file "fs_menu_controller.c"
  1721 ;; Parameters:    Size  Location     Type
  1722 ;;		None
  1723 ;; Auto vars:     Size  Location     Type
  1724 ;;		None
  1725 ;; Return value:  Size  Location     Type
  1726 ;;                  1    wreg      void 
  1727 ;; Registers used:
  1728 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1729 ;; Tracked objects:
  1730 ;;		On entry : 0/0
  1731 ;;		On exit  : 0/0
  1732 ;;		Unchanged: 0/0
  1733 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1734 ;;      Params:         0       0       0       0       0       0       0
  1735 ;;      Locals:         0       0       0       0       0       0       0
  1736 ;;      Temps:          0       0       0       0       0       0       0
  1737 ;;      Totals:         0       0       0       0       0       0       0
  1738 ;;Total ram usage:        0 bytes
  1739 ;; Hardware stack levels used:    1
  1740 ;; Hardware stack levels required when called:   11
  1741 ;; This function calls:
  1742 ;;		_buttonControlFlags
  1743 ;;		_stateMachine
  1744 ;; This function is called by:
  1745 ;;		_main
  1746 ;; This function uses a non-reentrant model
  1747 ;;
  1748                           
  1749                           	psect	text2
  1750  004F22                     __ptext2:
  1751                           	callstack 0
  1752  004F22                     _loopTaskMenuControl:
  1753                           	callstack 19
  1754  004F22                     
  1755                           ;fs_menu_controller.c: 161:     buttonControlFlags();
  1756  004F22  ECF1  F018         	call	_buttonControlFlags	;wreg free
  1757  004F26                     
  1758                           ;fs_menu_controller.c: 162:     stateMachine();
  1759  004F26  ECED  F024         	call	_stateMachine	;wreg free
  1760  004F2A                     
  1761                           ;fs_menu_controller.c: 164:     if (menu_flags.menu_start_flag == 1)
  1762  004F2A  0101               	movlb	1	; () banked
  1763  004F2C  0598               	decf	(_menu_flags+1)& (0+255),w,b
  1764  004F2E  A4D8               	btfss	status,2,c
  1765  004F30  EF9C  F027         	goto	u7881
  1766  004F34  EF9E  F027         	goto	u7880
  1767  004F38                     u7881:
  1768  004F38  EFA7  F027         	goto	l6499
  1769  004F3C                     u7880:
  1770  004F3C                     
  1771                           ; BSR set to: 1
  1772                           ;fs_menu_controller.c: 165:     {;fs_menu_controller.c: 166:         menu_flags.menu_sta
      +                          rt_flag = 0;
  1773  004F3C  0E00               	movlw	0
  1774  004F3E  6F98               	movwf	(_menu_flags+1)& (0+255),b
  1775                           
  1776                           ;fs_menu_controller.c: 167:         startIsClick = 1;
  1777  004F40  0E01               	movlw	1
  1778  004F42  0100               	movlb	0	; () banked
  1779  004F44  6FFE               	movwf	_startIsClick& (0+255),b
  1780                           
  1781                           ;fs_menu_controller.c: 168:         pauseIsClick = 0;
  1782  004F46  0E00               	movlw	0
  1783  004F48  6FFF               	movwf	_pauseIsClick& (0+255),b
  1784                           
  1785                           ;fs_menu_controller.c: 169:         stopIsClick = 0;
  1786  004F4A  0E00               	movlw	0
  1787  004F4C  6FFD               	movwf	_stopIsClick& (0+255),b
  1788  004F4E                     l6499:
  1789                           
  1790                           ;fs_menu_controller.c: 172:     if (menu_flags.menu_pause_flag == 1)
  1791  004F4E  0101               	movlb	1	; () banked
  1792  004F50  059A               	decf	(_menu_flags+3)& (0+255),w,b
  1793  004F52  A4D8               	btfss	status,2,c
  1794  004F54  EFAE  F027         	goto	u7891
  1795  004F58  EFB0  F027         	goto	u7890
  1796  004F5C                     u7891:
  1797  004F5C  EFB9  F027         	goto	l6503
  1798  004F60                     u7890:
  1799  004F60                     
  1800                           ; BSR set to: 1
  1801                           ;fs_menu_controller.c: 173:     {;fs_menu_controller.c: 174:         menu_flags.menu_pau
      +                          se_flag = 0;
  1802  004F60  0E00               	movlw	0
  1803  004F62  6F9A               	movwf	(_menu_flags+3)& (0+255),b
  1804                           
  1805                           ;fs_menu_controller.c: 175:         pauseIsClick = 1;
  1806  004F64  0E01               	movlw	1
  1807  004F66  0100               	movlb	0	; () banked
  1808  004F68  6FFF               	movwf	_pauseIsClick& (0+255),b
  1809                           
  1810                           ;fs_menu_controller.c: 176:         startIsClick = 0;
  1811  004F6A  0E00               	movlw	0
  1812  004F6C  6FFE               	movwf	_startIsClick& (0+255),b
  1813                           
  1814                           ;fs_menu_controller.c: 177:         stopIsClick = 0;
  1815  004F6E  0E00               	movlw	0
  1816  004F70  6FFD               	movwf	_stopIsClick& (0+255),b
  1817  004F72                     l6503:
  1818                           
  1819                           ;fs_menu_controller.c: 180:     if (menu_flags.menu_stop_flag == 1)
  1820  004F72  0101               	movlb	1	; () banked
  1821  004F74  0599               	decf	(_menu_flags+2)& (0+255),w,b
  1822  004F76  A4D8               	btfss	status,2,c
  1823  004F78  EFC0  F027         	goto	u7901
  1824  004F7C  EFC2  F027         	goto	u7900
  1825  004F80                     u7901:
  1826  004F80  EFCB  F027         	goto	l434
  1827  004F84                     u7900:
  1828  004F84                     
  1829                           ; BSR set to: 1
  1830                           ;fs_menu_controller.c: 181:     {;fs_menu_controller.c: 182:         menu_flags.menu_sto
      +                          p_flag = 0;
  1831  004F84  0E00               	movlw	0
  1832  004F86  6F99               	movwf	(_menu_flags+2)& (0+255),b
  1833                           
  1834                           ;fs_menu_controller.c: 183:         pauseIsClick = 0;
  1835  004F88  0E00               	movlw	0
  1836  004F8A  0100               	movlb	0	; () banked
  1837  004F8C  6FFF               	movwf	_pauseIsClick& (0+255),b
  1838                           
  1839                           ;fs_menu_controller.c: 184:         startIsClick = 0;
  1840  004F8E  0E00               	movlw	0
  1841  004F90  6FFE               	movwf	_startIsClick& (0+255),b
  1842                           
  1843                           ;fs_menu_controller.c: 185:         stopIsClick = 1;
  1844  004F92  0E01               	movlw	1
  1845  004F94  6FFD               	movwf	_stopIsClick& (0+255),b
  1846  004F96                     l434:
  1847  004F96  0012               	return		;funcret
  1848  004F98                     __end_of_loopTaskMenuControl:
  1849                           	callstack 0
  1850                           
  1851 ;; *************** function _stateMachine *****************
  1852 ;; Defined at:
  1853 ;;		line 196 in file "fs_menu_controller.c"
  1854 ;; Parameters:    Size  Location     Type
  1855 ;;		None
  1856 ;; Auto vars:     Size  Location     Type
  1857 ;;		None
  1858 ;; Return value:  Size  Location     Type
  1859 ;;                  1    wreg      void 
  1860 ;; Registers used:
  1861 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1862 ;; Tracked objects:
  1863 ;;		On entry : 0/0
  1864 ;;		On exit  : 0/0
  1865 ;;		Unchanged: 0/0
  1866 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1867 ;;      Params:         0       0       0       0       0       0       0
  1868 ;;      Locals:         0       0       0       0       0       0       0
  1869 ;;      Temps:          0       2       0       0       0       0       0
  1870 ;;      Totals:         0       2       0       0       0       0       0
  1871 ;;Total ram usage:        2 bytes
  1872 ;; Hardware stack levels used:    1
  1873 ;; Hardware stack levels required when called:   10
  1874 ;; This function calls:
  1875 ;;		_driverTimeSettingMenu
  1876 ;;		_exitLine
  1877 ;;		_mainMenu
  1878 ;;		_pauseMenu
  1879 ;;		_secretMenu
  1880 ;;		_speedLimitSettingMenu
  1881 ;;		_startMenu
  1882 ;;		_stopMenu
  1883 ;;		_stopTimeSettingMenu
  1884 ;; This function is called by:
  1885 ;;		_loopTaskMenuControl
  1886 ;; This function uses a non-reentrant model
  1887 ;;
  1888                           
  1889                           	psect	text3
  1890  0049DA                     __ptext3:
  1891                           	callstack 0
  1892  0049DA                     _stateMachine:
  1893                           	callstack 19
  1894  0049DA                     
  1895                           ;fs_menu_controller.c: 198:     switch (menu_selected)
  1896  0049DA  EF13  F025         	goto	l6437
  1897  0049DE                     l6417:
  1898                           
  1899                           ; BSR set to: 0
  1900                           ;fs_menu_controller.c: 201:             mainMenu();
  1901  0049DE  EC90  F01B         	call	_mainMenu	;wreg free
  1902                           
  1903                           ;fs_menu_controller.c: 202:         break;
  1904  0049E2  EF45  F025         	goto	l448
  1905  0049E6                     l6419:
  1906                           
  1907                           ; BSR set to: 0
  1908                           ;fs_menu_controller.c: 205:             driverTimeSettingMenu();
  1909  0049E6  EC3B  F01F         	call	_driverTimeSettingMenu	;wreg free
  1910                           
  1911                           ;fs_menu_controller.c: 206:         break;
  1912  0049EA  EF45  F025         	goto	l448
  1913  0049EE                     l6421:
  1914                           
  1915                           ; BSR set to: 0
  1916                           ;fs_menu_controller.c: 209:             stopTimeSettingMenu();
  1917  0049EE  EC61  F020         	call	_stopTimeSettingMenu	;wreg free
  1918                           
  1919                           ;fs_menu_controller.c: 210:         break;
  1920  0049F2  EF45  F025         	goto	l448
  1921  0049F6                     l6423:
  1922                           
  1923                           ; BSR set to: 0
  1924                           ;fs_menu_controller.c: 213:             speedLimitSettingMenu();
  1925  0049F6  ECE7  F020         	call	_speedLimitSettingMenu	;wreg free
  1926                           
  1927                           ;fs_menu_controller.c: 214:         break;
  1928  0049FA  EF45  F025         	goto	l448
  1929  0049FE                     l6425:
  1930                           
  1931                           ; BSR set to: 0
  1932                           ;fs_menu_controller.c: 217:             stopMenu();
  1933  0049FE  EC5A  F023         	call	_stopMenu	;wreg free
  1934                           
  1935                           ;fs_menu_controller.c: 218:         break;
  1936  004A02  EF45  F025         	goto	l448
  1937  004A06                     l6427:
  1938                           
  1939                           ; BSR set to: 0
  1940                           ;fs_menu_controller.c: 221:             startMenu();
  1941  004A06  ECC7  F02B         	call	_startMenu	;wreg free
  1942                           
  1943                           ;fs_menu_controller.c: 222:         break;
  1944  004A0A  EF45  F025         	goto	l448
  1945  004A0E                     l6429:
  1946                           
  1947                           ; BSR set to: 0
  1948                           ;fs_menu_controller.c: 225:             pauseMenu();
  1949  004A0E  EC9E  F01E         	call	_pauseMenu	;wreg free
  1950                           
  1951                           ;fs_menu_controller.c: 226:         break;
  1952  004A12  EF45  F025         	goto	l448
  1953  004A16                     l6431:
  1954                           
  1955                           ; BSR set to: 0
  1956                           ;fs_menu_controller.c: 229:             exitLine();
  1957  004A16  ECF9  F02B         	call	_exitLine	;wreg free
  1958                           
  1959                           ;fs_menu_controller.c: 230:         break;
  1960  004A1A  EF45  F025         	goto	l448
  1961  004A1E                     l6433:
  1962                           
  1963                           ; BSR set to: 0
  1964                           ;fs_menu_controller.c: 233:             secretMenu();
  1965  004A1E  EC7A  F016         	call	_secretMenu	;wreg free
  1966                           
  1967                           ;fs_menu_controller.c: 234:         break;
  1968  004A22  EF45  F025         	goto	l448
  1969  004A26                     l6437:
  1970  004A26  0100               	movlb	0	; () banked
  1971  004A28  51FB               	movf	_menu_selected& (0+255),w,b
  1972  004A2A  6FF1               	movwf	??_stateMachine& (0+255),b
  1973  004A2C  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  1974                           
  1975                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  1976                           ; Switch size 1, requested type "simple"
  1977                           ; Number of cases is 1, Range of values is 0 to 0
  1978                           ; switch strategies available:
  1979                           ; Name         Instructions Cycles
  1980                           ; simple_byte            4     3 (average)
  1981                           ;	Chosen strategy is simple_byte
  1982  004A2E  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  1983  004A30  0A00               	xorlw	0	; case 0
  1984  004A32  B4D8               	btfsc	status,2,c
  1985  004A34  EF1E  F025         	goto	l6619
  1986  004A38  EF45  F025         	goto	l448
  1987  004A3C                     l6619:
  1988                           
  1989                           ; BSR set to: 0
  1990                           ; Switch size 1, requested type "simple"
  1991                           ; Number of cases is 9, Range of values is 0 to 8
  1992                           ; switch strategies available:
  1993                           ; Name         Instructions Cycles
  1994                           ; simple_byte           28    15 (average)
  1995                           ;	Chosen strategy is simple_byte
  1996  004A3C  51F1               	movf	??_stateMachine& (0+255),w,b
  1997  004A3E  0A00               	xorlw	0	; case 0
  1998  004A40  B4D8               	btfsc	status,2,c
  1999  004A42  EFEF  F024         	goto	l6417
  2000  004A46  0A01               	xorlw	1	; case 1
  2001  004A48  B4D8               	btfsc	status,2,c
  2002  004A4A  EFF3  F024         	goto	l6419
  2003  004A4E  0A03               	xorlw	3	; case 2
  2004  004A50  B4D8               	btfsc	status,2,c
  2005  004A52  EFF7  F024         	goto	l6421
  2006  004A56  0A01               	xorlw	1	; case 3
  2007  004A58  B4D8               	btfsc	status,2,c
  2008  004A5A  EFFB  F024         	goto	l6423
  2009  004A5E  0A07               	xorlw	7	; case 4
  2010  004A60  B4D8               	btfsc	status,2,c
  2011  004A62  EFFF  F024         	goto	l6425
  2012  004A66  0A01               	xorlw	1	; case 5
  2013  004A68  B4D8               	btfsc	status,2,c
  2014  004A6A  EF03  F025         	goto	l6427
  2015  004A6E  0A03               	xorlw	3	; case 6
  2016  004A70  B4D8               	btfsc	status,2,c
  2017  004A72  EF07  F025         	goto	l6429
  2018  004A76  0A01               	xorlw	1	; case 7
  2019  004A78  B4D8               	btfsc	status,2,c
  2020  004A7A  EF0B  F025         	goto	l6431
  2021  004A7E  0A0F               	xorlw	15	; case 8
  2022  004A80  B4D8               	btfsc	status,2,c
  2023  004A82  EF0F  F025         	goto	l6433
  2024  004A86  EF45  F025         	goto	l448
  2025  004A8A                     l448:
  2026  004A8A  0012               	return		;funcret
  2027  004A8C                     __end_of_stateMachine:
  2028                           	callstack 0
  2029                           
  2030 ;; *************** function _stopTimeSettingMenu *****************
  2031 ;; Defined at:
  2032 ;;		line 540 in file "fs_menu_controller.c"
  2033 ;; Parameters:    Size  Location     Type
  2034 ;;		None
  2035 ;; Auto vars:     Size  Location     Type
  2036 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2037 ;; Return value:  Size  Location     Type
  2038 ;;                  1    wreg      void 
  2039 ;; Registers used:
  2040 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2041 ;; Tracked objects:
  2042 ;;		On entry : 0/0
  2043 ;;		On exit  : 0/0
  2044 ;;		Unchanged: 0/0
  2045 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2046 ;;      Params:         0       0       0       0       0       0       0
  2047 ;;      Locals:         0      16       0       0       0       0       0
  2048 ;;      Temps:          0       0       0       0       0       0       0
  2049 ;;      Totals:         0      16       0       0       0       0       0
  2050 ;;Total ram usage:       16 bytes
  2051 ;; Hardware stack levels used:    1
  2052 ;; Hardware stack levels required when called:    9
  2053 ;; This function calls:
  2054 ;;		_eepromWrite
  2055 ;;		_lcdSetCursor
  2056 ;;		_lcdWriteString
  2057 ;;		_sprintf
  2058 ;;		_stopMotor
  2059 ;; This function is called by:
  2060 ;;		_stateMachine
  2061 ;; This function uses a non-reentrant model
  2062 ;;
  2063                           
  2064                           	psect	text4
  2065  0040C2                     __ptext4:
  2066                           	callstack 0
  2067  0040C2                     _stopTimeSettingMenu:
  2068                           	callstack 19
  2069  0040C2                     
  2070                           ;fs_menu_controller.c: 542:     char textCursor2[16] = {0};
  2071  0040C2  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2072  0040C6  0E0F               	movlw	15
  2073  0040C8                     u7171:
  2074  0040C8  6ADE               	clrf	postinc2,c
  2075  0040CA  06E8               	decf	wreg,f,c
  2076  0040CC  E2FD               	bc	u7171
  2077  0040CE                     
  2078                           ;fs_menu_controller.c: 544:     stopMotor();
  2079  0040CE  EC79  F02A         	call	_stopMotor	;wreg free
  2080  0040D2                     
  2081                           ;fs_menu_controller.c: 546:     if (menu_flags.menu_input_flag == 1)
  2082  0040D2  0101               	movlb	1	; () banked
  2083  0040D4  0597               	decf	_menu_flags& (0+255),w,b
  2084  0040D6  A4D8               	btfss	status,2,c
  2085  0040D8  EF70  F020         	goto	u7181
  2086  0040DC  EF72  F020         	goto	u7180
  2087  0040E0                     u7181:
  2088  0040E0  EF77  F020         	goto	l6075
  2089  0040E4                     u7180:
  2090  0040E4                     
  2091                           ; BSR set to: 1
  2092                           ;fs_menu_controller.c: 547:     {;fs_menu_controller.c: 548:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2093  0040E4  0E00               	movlw	0
  2094  0040E6  6F97               	movwf	_menu_flags& (0+255),b
  2095                           
  2096                           ;fs_menu_controller.c: 549:         menu_selected = SPEED_LIMIT_SETTING;
  2097  0040E8  0E03               	movlw	3
  2098  0040EA  0100               	movlb	0	; () banked
  2099  0040EC  6FFB               	movwf	_menu_selected& (0+255),b
  2100  0040EE                     l6075:
  2101                           
  2102                           ;fs_menu_controller.c: 552:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2103  0040EE  0101               	movlb	1	; () banked
  2104  0040F0  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2105  0040F2  A4D8               	btfss	status,2,c
  2106  0040F4  EF7E  F020         	goto	u7191
  2107  0040F8  EF80  F020         	goto	u7190
  2108  0040FC                     u7191:
  2109  0040FC  EF94  F020         	goto	l6085
  2110  004100                     u7190:
  2111  004100                     
  2112                           ; BSR set to: 1
  2113  004100  0EFA               	movlw	250
  2114  004102  0100               	movlb	0	; () banked
  2115  004104  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2116  004106  EF87  F020         	goto	u7201
  2117  00410A  EF89  F020         	goto	u7200
  2118  00410E                     u7201:
  2119  00410E  EF94  F020         	goto	l6085
  2120  004112                     u7200:
  2121  004112                     
  2122                           ; BSR set to: 0
  2123                           ;fs_menu_controller.c: 553:     {;fs_menu_controller.c: 554:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2124  004112  0E00               	movlw	0
  2125  004114  0101               	movlb	1	; () banked
  2126  004116  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2127  004118                     
  2128                           ; BSR set to: 1
  2129                           ;fs_menu_controller.c: 555:         menu_value.stop_time += 10;
  2130  004118  0E0A               	movlw	10
  2131  00411A  0100               	movlb	0	; () banked
  2132  00411C  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2133  00411E                     
  2134                           ; BSR set to: 0
  2135                           ;fs_menu_controller.c: 556:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2136  00411E  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2137  004122  0E01               	movlw	1
  2138  004124  EC57  F02B         	call	_eepromWrite
  2139  004128                     l6085:
  2140                           
  2141                           ;fs_menu_controller.c: 559:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2142  004128  0101               	movlb	1	; () banked
  2143  00412A  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2144  00412C  A4D8               	btfss	status,2,c
  2145  00412E  EF9B  F020         	goto	u7211
  2146  004132  EF9D  F020         	goto	u7210
  2147  004136                     u7211:
  2148  004136  EFB1  F020         	goto	l507
  2149  00413A                     u7210:
  2150  00413A                     
  2151                           ; BSR set to: 1
  2152  00413A  0E0A               	movlw	10
  2153  00413C  0100               	movlb	0	; () banked
  2154  00413E  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2155  004140  EFA4  F020         	goto	u7221
  2156  004144  EFA6  F020         	goto	u7220
  2157  004148                     u7221:
  2158  004148  EFB1  F020         	goto	l507
  2159  00414C                     u7220:
  2160  00414C                     
  2161                           ; BSR set to: 0
  2162                           ;fs_menu_controller.c: 560:     {;fs_menu_controller.c: 561:          menu_flags.menu_de
      +                          crease_flag = 0;
  2163  00414C  0E00               	movlw	0
  2164  00414E  0101               	movlb	1	; () banked
  2165  004150  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2166  004152                     
  2167                           ; BSR set to: 1
  2168                           ;fs_menu_controller.c: 562:          menu_value.stop_time -= 10;
  2169  004152  0E0A               	movlw	10
  2170  004154  0100               	movlb	0	; () banked
  2171  004156  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2172  004158                     
  2173                           ; BSR set to: 0
  2174                           ;fs_menu_controller.c: 563:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2175  004158  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2176  00415C  0E01               	movlw	1
  2177  00415E  EC57  F02B         	call	_eepromWrite
  2178  004162                     l507:
  2179                           
  2180                           ;fs_menu_controller.c: 565:     lcdSetCursor(1,1);
  2181  004162  0E01               	movlw	1
  2182  004164  6E04               	movwf	lcdSetCursor@b^0,c
  2183  004166  0E01               	movlw	1
  2184  004168  EC36  F028         	call	_lcdSetCursor
  2185  00416C                     
  2186                           ;fs_menu_controller.c: 566:     lcdWriteString("DURMA ZAMANI  ms");
  2187  00416C  0E6F               	movlw	low STR_15
  2188  00416E  6E05               	movwf	lcdWriteString@a^0,c
  2189  004170  0E7F               	movlw	high STR_15
  2190  004172  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2191  004174  ECD8  F026         	call	_lcdWriteString	;wreg free
  2192  004178                     
  2193                           ;fs_menu_controller.c: 567:     lcdSetCursor(2,1);
  2194  004178  0E01               	movlw	1
  2195  00417A  6E04               	movwf	lcdSetCursor@b^0,c
  2196  00417C  0E02               	movlw	2
  2197  00417E  EC36  F028         	call	_lcdSetCursor
  2198  004182                     
  2199                           ;fs_menu_controller.c: 568:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2200  004182  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2201  004184  0100               	movlb	0	; () banked
  2202  004186  6FCF               	movwf	sprintf@s& (0+255),b
  2203  004188  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2204  00418A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2205  00418C  0E91               	movlw	low STR_16
  2206  00418E  6FD1               	movwf	sprintf@fmt& (0+255),b
  2207  004190  0E7F               	movlw	high STR_16
  2208  004192  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2209  004194  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2210  004198  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2211  00419A  EC1E  F029         	call	_sprintf	;wreg free
  2212  00419E                     
  2213                           ;fs_menu_controller.c: 569:     lcdWriteString(textCursor2);
  2214  00419E  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2215  0041A0  6E05               	movwf	lcdWriteString@a^0,c
  2216  0041A2  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2217  0041A4  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2218  0041A6  ECD8  F026         	call	_lcdWriteString	;wreg free
  2219  0041AA                     
  2220                           ;fs_menu_controller.c: 571:     if(timer_value.menu_login_delay == 100)
  2221  0041AA  0E64               	movlw	100
  2222  0041AC  0101               	movlb	1	; () banked
  2223  0041AE  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2224  0041B0  A4D8               	btfss	status,2,c
  2225  0041B2  EFDD  F020         	goto	u7231
  2226  0041B6  EFDF  F020         	goto	u7230
  2227  0041BA                     u7231:
  2228  0041BA  EFE6  F020         	goto	l509
  2229  0041BE                     u7230:
  2230  0041BE                     
  2231                           ; BSR set to: 1
  2232                           ;fs_menu_controller.c: 572:     {;fs_menu_controller.c: 573:         button_bounce_contr
      +                          oller.menu = 0;
  2233  0041BE  0E00               	movlw	0
  2234  0041C0  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2235                           
  2236                           ;fs_menu_controller.c: 574:         timer_value.menu_login_delay = 0;
  2237  0041C2  0E00               	movlw	0
  2238  0041C4  6F93               	movwf	(_timer_value+4)& (0+255),b
  2239                           
  2240                           ;fs_menu_controller.c: 575:         menu_selected = PAUSE_MENU;
  2241  0041C6  0E06               	movlw	6
  2242  0041C8  0100               	movlb	0	; () banked
  2243  0041CA  6FFB               	movwf	_menu_selected& (0+255),b
  2244  0041CC                     l509:
  2245  0041CC  0012               	return		;funcret
  2246  0041CE                     __end_of_stopTimeSettingMenu:
  2247                           	callstack 0
  2248                           
  2249 ;; *************** function _stopMenu *****************
  2250 ;; Defined at:
  2251 ;;		line 305 in file "fs_menu_controller.c"
  2252 ;; Parameters:    Size  Location     Type
  2253 ;;		None
  2254 ;; Auto vars:     Size  Location     Type
  2255 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2256 ;; Return value:  Size  Location     Type
  2257 ;;                  1    wreg      void 
  2258 ;; Registers used:
  2259 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2260 ;; Tracked objects:
  2261 ;;		On entry : 0/0
  2262 ;;		On exit  : 0/0
  2263 ;;		Unchanged: 0/0
  2264 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2265 ;;      Params:         0       0       0       0       0       0       0
  2266 ;;      Locals:         0      16       0       0       0       0       0
  2267 ;;      Temps:          0       0       0       0       0       0       0
  2268 ;;      Totals:         0      16       0       0       0       0       0
  2269 ;;Total ram usage:       16 bytes
  2270 ;; Hardware stack levels used:    1
  2271 ;; Hardware stack levels required when called:    9
  2272 ;; This function calls:
  2273 ;;		_lcdSetCursor
  2274 ;;		_lcdWriteString
  2275 ;;		_sprintf
  2276 ;;		_stopMotor
  2277 ;; This function is called by:
  2278 ;;		_stateMachine
  2279 ;; This function uses a non-reentrant model
  2280 ;;
  2281                           
  2282                           	psect	text5
  2283  0046B4                     __ptext5:
  2284                           	callstack 0
  2285  0046B4                     _stopMenu:
  2286                           	callstack 19
  2287  0046B4                     
  2288                           ;fs_menu_controller.c: 307:     char textCursor2[16] = {0};
  2289  0046B4  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2290  0046B8  0E0F               	movlw	15
  2291  0046BA                     u7311:
  2292  0046BA  6ADE               	clrf	postinc2,c
  2293  0046BC  06E8               	decf	wreg,f,c
  2294  0046BE  E2FD               	bc	u7311
  2295  0046C0                     
  2296                           ;fs_menu_controller.c: 309:     stopMotor();
  2297  0046C0  EC79  F02A         	call	_stopMotor	;wreg free
  2298  0046C4                     
  2299                           ;fs_menu_controller.c: 311:     startIsClick = 0;
  2300  0046C4  0E00               	movlw	0
  2301  0046C6  0100               	movlb	0	; () banked
  2302  0046C8  6FFE               	movwf	_startIsClick& (0+255),b
  2303  0046CA                     
  2304                           ; BSR set to: 0
  2305                           ;fs_menu_controller.c: 312:     pauseIsClick = 0;
  2306  0046CA  0E00               	movlw	0
  2307  0046CC  6FFF               	movwf	_pauseIsClick& (0+255),b
  2308  0046CE                     
  2309                           ; BSR set to: 0
  2310                           ;fs_menu_controller.c: 313:     stopIsClick = 1;
  2311  0046CE  0E01               	movlw	1
  2312  0046D0  6FFD               	movwf	_stopIsClick& (0+255),b
  2313  0046D2                     
  2314                           ; BSR set to: 0
  2315                           ;fs_menu_controller.c: 315:     lcdSetCursor(1,1);
  2316  0046D2  0E01               	movlw	1
  2317  0046D4  6E04               	movwf	lcdSetCursor@b^0,c
  2318  0046D6  0E01               	movlw	1
  2319  0046D8  EC36  F028         	call	_lcdSetCursor
  2320  0046DC                     
  2321                           ;fs_menu_controller.c: 316:     lcdWriteString("ZAMAN DOLDU     ");
  2322  0046DC  0E3C               	movlw	low STR_5
  2323  0046DE  6E05               	movwf	lcdWriteString@a^0,c
  2324  0046E0  0E7F               	movlw	high STR_5
  2325  0046E2  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2326  0046E4  ECD8  F026         	call	_lcdWriteString	;wreg free
  2327  0046E8                     
  2328                           ;fs_menu_controller.c: 318:     timer_value.remainingSecond = 0;
  2329  0046E8  0E00               	movlw	0
  2330  0046EA  0101               	movlb	1	; () banked
  2331  0046EC  6F91               	movwf	(_timer_value+2)& (0+255),b
  2332  0046EE                     
  2333                           ; BSR set to: 1
  2334                           ;fs_menu_controller.c: 319:     timer_value.remainingMinute = 0;
  2335  0046EE  0E00               	movlw	0
  2336  0046F0  6F92               	movwf	(_timer_value+3)& (0+255),b
  2337  0046F2                     
  2338                           ; BSR set to: 1
  2339                           ;fs_menu_controller.c: 321:     lcdSetCursor(2,1);
  2340  0046F2  0E01               	movlw	1
  2341  0046F4  6E04               	movwf	lcdSetCursor@b^0,c
  2342  0046F6  0E02               	movlw	2
  2343  0046F8  EC36  F028         	call	_lcdSetCursor
  2344  0046FC                     
  2345                           ;fs_menu_controller.c: 322:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2346  0046FC  0EE1               	movlw	low stopMenu@textCursor2
  2347  0046FE  0100               	movlb	0	; () banked
  2348  004700  6FCF               	movwf	sprintf@s& (0+255),b
  2349  004702  0E00               	movlw	high stopMenu@textCursor2
  2350  004704  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2351  004706  0EA1               	movlw	low STR_6
  2352  004708  6FD1               	movwf	sprintf@fmt& (0+255),b
  2353  00470A  0E7F               	movlw	high STR_6
  2354  00470C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2355  00470E  0101               	movlb	1	; () banked
  2356  004710  5192               	movf	(_timer_value+3)& (0+255),w,b
  2357  004712  0100               	movlb	0	; () banked
  2358  004714  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2359  004716  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2360  004718  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2361  00471A  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2362  00471C  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  2363  004720  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2364  004722  EC1E  F029         	call	_sprintf	;wreg free
  2365  004726                     
  2366                           ;fs_menu_controller.c: 323:     lcdWriteString(textCursor2);
  2367  004726  0EE1               	movlw	low stopMenu@textCursor2
  2368  004728  6E05               	movwf	lcdWriteString@a^0,c
  2369  00472A  0E00               	movlw	high stopMenu@textCursor2
  2370  00472C  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2371  00472E  ECD8  F026         	call	_lcdWriteString	;wreg free
  2372  004732                     
  2373                           ;fs_menu_controller.c: 325:     if (menu_flags.menu_start_flag == 1)
  2374  004732  0101               	movlb	1	; () banked
  2375  004734  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2376  004736  A4D8               	btfss	status,2,c
  2377  004738  EFA0  F023         	goto	u7321
  2378  00473C  EFA2  F023         	goto	u7320
  2379  004740                     u7321:
  2380  004740  EFB2  F023         	goto	l6177
  2381  004744                     u7320:
  2382  004744                     
  2383                           ; BSR set to: 1
  2384                           ;fs_menu_controller.c: 326:     {;fs_menu_controller.c: 327:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2385  004744  0E00               	movlw	0
  2386  004746  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2387                           
  2388                           ;fs_menu_controller.c: 328:         menu_selected = START_MENU;
  2389  004748  0E05               	movlw	5
  2390  00474A  0100               	movlb	0	; () banked
  2391  00474C  6FFB               	movwf	_menu_selected& (0+255),b
  2392                           
  2393                           ;fs_menu_controller.c: 330:         startIsClick = 1;
  2394  00474E  0E01               	movlw	1
  2395  004750  6FFE               	movwf	_startIsClick& (0+255),b
  2396                           
  2397                           ;fs_menu_controller.c: 331:         pauseIsClick = 0;
  2398  004752  0E00               	movlw	0
  2399  004754  6FFF               	movwf	_pauseIsClick& (0+255),b
  2400                           
  2401                           ;fs_menu_controller.c: 332:         stopIsClick = 0;
  2402  004756  0E00               	movlw	0
  2403  004758  6FFD               	movwf	_stopIsClick& (0+255),b
  2404                           
  2405                           ;fs_menu_controller.c: 333:         timer_value.second = 0;
  2406  00475A  0E00               	movlw	0
  2407  00475C  0101               	movlb	1	; () banked
  2408  00475E  6F8F               	movwf	_timer_value& (0+255),b
  2409                           
  2410                           ;fs_menu_controller.c: 334:         timer_value.minute = 0;
  2411  004760  0E00               	movlw	0
  2412  004762  6F90               	movwf	(_timer_value+1)& (0+255),b
  2413  004764                     l6177:
  2414                           
  2415                           ; BSR set to: 1
  2416                           ;fs_menu_controller.c: 337:     if ( timer_value.menu_login_delay == 100)
  2417  004764  0E64               	movlw	100
  2418  004766  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2419  004768  A4D8               	btfss	status,2,c
  2420  00476A  EFB9  F023         	goto	u7331
  2421  00476E  EFBB  F023         	goto	u7330
  2422  004772                     u7331:
  2423  004772  EFC2  F023         	goto	l465
  2424  004776                     u7330:
  2425  004776                     
  2426                           ; BSR set to: 1
  2427                           ;fs_menu_controller.c: 338:     {;fs_menu_controller.c: 339:         button_bounce_contr
      +                          oller.menu = 0;
  2428  004776  0E00               	movlw	0
  2429  004778  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2430                           
  2431                           ;fs_menu_controller.c: 340:         timer_value.menu_login_delay = 0;
  2432  00477A  0E00               	movlw	0
  2433  00477C  6F93               	movwf	(_timer_value+4)& (0+255),b
  2434                           
  2435                           ;fs_menu_controller.c: 341:         menu_selected = DRIVER_TIME_SETTING;
  2436  00477E  0E01               	movlw	1
  2437  004780  0100               	movlb	0	; () banked
  2438  004782  6FFB               	movwf	_menu_selected& (0+255),b
  2439  004784                     l465:
  2440  004784  0012               	return		;funcret
  2441  004786                     __end_of_stopMenu:
  2442                           	callstack 0
  2443                           
  2444 ;; *************** function _startMenu *****************
  2445 ;; Defined at:
  2446 ;;		line 408 in file "fs_menu_controller.c"
  2447 ;; Parameters:    Size  Location     Type
  2448 ;;		None
  2449 ;; Auto vars:     Size  Location     Type
  2450 ;;		None
  2451 ;; Return value:  Size  Location     Type
  2452 ;;                  1    wreg      void 
  2453 ;; Registers used:
  2454 ;;		wreg, status,2
  2455 ;; Tracked objects:
  2456 ;;		On entry : 0/0
  2457 ;;		On exit  : 0/0
  2458 ;;		Unchanged: 0/0
  2459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2460 ;;      Params:         0       0       0       0       0       0       0
  2461 ;;      Locals:         0       0       0       0       0       0       0
  2462 ;;      Temps:          0       0       0       0       0       0       0
  2463 ;;      Totals:         0       0       0       0       0       0       0
  2464 ;;Total ram usage:        0 bytes
  2465 ;; Hardware stack levels used:    1
  2466 ;; Hardware stack levels required when called:    1
  2467 ;; This function calls:
  2468 ;;		Nothing
  2469 ;; This function is called by:
  2470 ;;		_stateMachine
  2471 ;; This function uses a non-reentrant model
  2472 ;;
  2473                           
  2474                           	psect	text6
  2475  00578E                     __ptext6:
  2476                           	callstack 0
  2477  00578E                     _startMenu:
  2478                           	callstack 27
  2479  00578E                     
  2480                           ;fs_menu_controller.c: 410:     timer_value.remainingMinute = menu_value.driver_time;
  2481  00578E  C0F3  F192         	movff	_menu_value,_timer_value+3
  2482  005792                     
  2483                           ;fs_menu_controller.c: 411:     timer_value.remainingSecond = 0;
  2484  005792  0E00               	movlw	0
  2485  005794  0101               	movlb	1	; () banked
  2486  005796  6F91               	movwf	(_timer_value+2)& (0+255),b
  2487                           
  2488                           ;fs_menu_controller.c: 412:     startIsClick = 1;
  2489  005798  0E01               	movlw	1
  2490  00579A  0100               	movlb	0	; () banked
  2491  00579C  6FFE               	movwf	_startIsClick& (0+255),b
  2492                           
  2493                           ;fs_menu_controller.c: 413:     stopIsClick = 0;
  2494  00579E  0E00               	movlw	0
  2495  0057A0  6FFD               	movwf	_stopIsClick& (0+255),b
  2496                           
  2497                           ;fs_menu_controller.c: 414:     menu_selected = MAIN_MENU;
  2498  0057A2  0E00               	movlw	0
  2499  0057A4  6FFB               	movwf	_menu_selected& (0+255),b
  2500  0057A6                     
  2501                           ; BSR set to: 0
  2502  0057A6  0012               	return		;funcret
  2503  0057A8                     __end_of_startMenu:
  2504                           	callstack 0
  2505                           
  2506 ;; *************** function _speedLimitSettingMenu *****************
  2507 ;; Defined at:
  2508 ;;		line 496 in file "fs_menu_controller.c"
  2509 ;; Parameters:    Size  Location     Type
  2510 ;;		None
  2511 ;; Auto vars:     Size  Location     Type
  2512 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2513 ;; Return value:  Size  Location     Type
  2514 ;;                  1    wreg      void 
  2515 ;; Registers used:
  2516 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2517 ;; Tracked objects:
  2518 ;;		On entry : 0/0
  2519 ;;		On exit  : 0/0
  2520 ;;		Unchanged: 0/0
  2521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2522 ;;      Params:         0       0       0       0       0       0       0
  2523 ;;      Locals:         0      16       0       0       0       0       0
  2524 ;;      Temps:          0       0       0       0       0       0       0
  2525 ;;      Totals:         0      16       0       0       0       0       0
  2526 ;;Total ram usage:       16 bytes
  2527 ;; Hardware stack levels used:    1
  2528 ;; Hardware stack levels required when called:    9
  2529 ;; This function calls:
  2530 ;;		_eepromWrite
  2531 ;;		_lcdSetCursor
  2532 ;;		_lcdWriteString
  2533 ;;		_sprintf
  2534 ;;		_stopMotor
  2535 ;; This function is called by:
  2536 ;;		_stateMachine
  2537 ;; This function uses a non-reentrant model
  2538 ;;
  2539                           
  2540                           	psect	text7
  2541  0041CE                     __ptext7:
  2542                           	callstack 0
  2543  0041CE                     _speedLimitSettingMenu:
  2544                           	callstack 19
  2545  0041CE                     
  2546                           ;fs_menu_controller.c: 498:     char textCursor2[16] = {0};
  2547  0041CE  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  2548  0041D2  0E0F               	movlw	15
  2549  0041D4                     u7241:
  2550  0041D4  6ADE               	clrf	postinc2,c
  2551  0041D6  06E8               	decf	wreg,f,c
  2552  0041D8  E2FD               	bc	u7241
  2553  0041DA                     
  2554                           ;fs_menu_controller.c: 499:     stopMotor();
  2555  0041DA  EC79  F02A         	call	_stopMotor	;wreg free
  2556  0041DE                     
  2557                           ;fs_menu_controller.c: 501:     if (menu_flags.menu_input_flag == 1)
  2558  0041DE  0101               	movlb	1	; () banked
  2559  0041E0  0597               	decf	_menu_flags& (0+255),w,b
  2560  0041E2  A4D8               	btfss	status,2,c
  2561  0041E4  EFF6  F020         	goto	u7251
  2562  0041E8  EFF8  F020         	goto	u7250
  2563  0041EC                     u7251:
  2564  0041EC  EFFD  F020         	goto	l6115
  2565  0041F0                     u7250:
  2566  0041F0                     
  2567                           ; BSR set to: 1
  2568                           ;fs_menu_controller.c: 502:     {;fs_menu_controller.c: 503:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2569  0041F0  0E00               	movlw	0
  2570  0041F2  6F97               	movwf	_menu_flags& (0+255),b
  2571                           
  2572                           ;fs_menu_controller.c: 504:         menu_selected = DRIVER_TIME_SETTING;
  2573  0041F4  0E01               	movlw	1
  2574  0041F6  0100               	movlb	0	; () banked
  2575  0041F8  6FFB               	movwf	_menu_selected& (0+255),b
  2576  0041FA                     l6115:
  2577                           
  2578                           ;fs_menu_controller.c: 507:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  2579  0041FA  0101               	movlb	1	; () banked
  2580  0041FC  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2581  0041FE  A4D8               	btfss	status,2,c
  2582  004200  EF04  F021         	goto	u7261
  2583  004204  EF06  F021         	goto	u7260
  2584  004208                     u7261:
  2585  004208  EF19  F021         	goto	l6125
  2586  00420C                     u7260:
  2587  00420C                     
  2588                           ; BSR set to: 1
  2589  00420C  0E05               	movlw	5
  2590  00420E  0100               	movlb	0	; () banked
  2591  004210  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  2592  004212  EF0D  F021         	goto	u7271
  2593  004216  EF0F  F021         	goto	u7270
  2594  00421A                     u7271:
  2595  00421A  EF19  F021         	goto	l6125
  2596  00421E                     u7270:
  2597  00421E                     
  2598                           ; BSR set to: 0
  2599                           ;fs_menu_controller.c: 508:     {;fs_menu_controller.c: 509:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2600  00421E  0E00               	movlw	0
  2601  004220  0101               	movlb	1	; () banked
  2602  004222  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2603  004224                     
  2604                           ; BSR set to: 1
  2605                           ;fs_menu_controller.c: 510:         menu_value.speed_limit += 1;
  2606  004224  0100               	movlb	0	; () banked
  2607  004226  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  2608  004228                     
  2609                           ; BSR set to: 0
  2610                           ;fs_menu_controller.c: 511:         eepromWrite(0x02,menu_value.speed_limit);
  2611  004228  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2612  00422C  0E02               	movlw	2
  2613  00422E  EC57  F02B         	call	_eepromWrite
  2614  004232                     l6125:
  2615                           
  2616                           ;fs_menu_controller.c: 514:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  2617  004232  0101               	movlb	1	; () banked
  2618  004234  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2619  004236  A4D8               	btfss	status,2,c
  2620  004238  EF20  F021         	goto	u7281
  2621  00423C  EF22  F021         	goto	u7280
  2622  004240                     u7281:
  2623  004240  EF35  F021         	goto	l6135
  2624  004244                     u7280:
  2625  004244                     
  2626                           ; BSR set to: 1
  2627  004244  0E01               	movlw	1
  2628  004246  0100               	movlb	0	; () banked
  2629  004248  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  2630  00424A  EF29  F021         	goto	u7291
  2631  00424E  EF2B  F021         	goto	u7290
  2632  004252                     u7291:
  2633  004252  EF35  F021         	goto	l6135
  2634  004256                     u7290:
  2635  004256                     
  2636                           ; BSR set to: 0
  2637                           ;fs_menu_controller.c: 515:     {;fs_menu_controller.c: 516:          menu_flags.menu_de
      +                          crease_flag = 0;
  2638  004256  0E00               	movlw	0
  2639  004258  0101               	movlb	1	; () banked
  2640  00425A  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2641  00425C                     
  2642                           ; BSR set to: 1
  2643                           ;fs_menu_controller.c: 517:          menu_value.speed_limit -= 1;
  2644  00425C  0100               	movlb	0	; () banked
  2645  00425E  07F5               	decf	(_menu_value+2)& (0+255),f,b
  2646  004260                     
  2647                           ; BSR set to: 0
  2648                           ;fs_menu_controller.c: 518:          eepromWrite(0x02,menu_value.speed_limit);
  2649  004260  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  2650  004264  0E02               	movlw	2
  2651  004266  EC57  F02B         	call	_eepromWrite
  2652  00426A                     l6135:
  2653                           
  2654                           ;fs_menu_controller.c: 520:     lcdSetCursor(1,1);
  2655  00426A  0E01               	movlw	1
  2656  00426C  6E04               	movwf	lcdSetCursor@b^0,c
  2657  00426E  0E01               	movlw	1
  2658  004270  EC36  F028         	call	_lcdSetCursor
  2659  004274                     
  2660                           ;fs_menu_controller.c: 521:     lcdWriteString("HIZ LiMiTi      ");
  2661  004274  0E1A               	movlw	low STR_13
  2662  004276  6E05               	movwf	lcdWriteString@a^0,c
  2663  004278  0E7F               	movlw	high STR_13
  2664  00427A  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2665  00427C  ECD8  F026         	call	_lcdWriteString	;wreg free
  2666  004280                     
  2667                           ;fs_menu_controller.c: 522:     lcdSetCursor(2,1);
  2668  004280  0E01               	movlw	1
  2669  004282  6E04               	movwf	lcdSetCursor@b^0,c
  2670  004284  0E02               	movlw	2
  2671  004286  EC36  F028         	call	_lcdSetCursor
  2672  00428A                     
  2673                           ;fs_menu_controller.c: 523:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  2674  00428A  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2675  00428C  0100               	movlb	0	; () banked
  2676  00428E  6FCF               	movwf	sprintf@s& (0+255),b
  2677  004290  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2678  004292  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2679  004294  0EF7               	movlw	low STR_14
  2680  004296  6FD1               	movwf	sprintf@fmt& (0+255),b
  2681  004298  0E7E               	movlw	high STR_14
  2682  00429A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2683  00429C  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  2684  0042A0  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2685  0042A2  EC1E  F029         	call	_sprintf	;wreg free
  2686  0042A6                     
  2687                           ;fs_menu_controller.c: 524:     lcdWriteString(textCursor2);
  2688  0042A6  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  2689  0042A8  6E05               	movwf	lcdWriteString@a^0,c
  2690  0042AA  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  2691  0042AC  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2692  0042AE  ECD8  F026         	call	_lcdWriteString	;wreg free
  2693  0042B2                     
  2694                           ;fs_menu_controller.c: 526:     if(timer_value.menu_login_delay == 100)
  2695  0042B2  0E64               	movlw	100
  2696  0042B4  0101               	movlb	1	; () banked
  2697  0042B6  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2698  0042B8  A4D8               	btfss	status,2,c
  2699  0042BA  EF61  F021         	goto	u7301
  2700  0042BE  EF63  F021         	goto	u7300
  2701  0042C2                     u7301:
  2702  0042C2  EF6A  F021         	goto	l500
  2703  0042C6                     u7300:
  2704  0042C6                     
  2705                           ; BSR set to: 1
  2706                           ;fs_menu_controller.c: 527:     {;fs_menu_controller.c: 528:         button_bounce_contr
      +                          oller.menu = 0;
  2707  0042C6  0E00               	movlw	0
  2708  0042C8  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2709                           
  2710                           ;fs_menu_controller.c: 529:         timer_value.menu_login_delay = 0;
  2711  0042CA  0E00               	movlw	0
  2712  0042CC  6F93               	movwf	(_timer_value+4)& (0+255),b
  2713                           
  2714                           ;fs_menu_controller.c: 530:         menu_selected = PAUSE_MENU;
  2715  0042CE  0E06               	movlw	6
  2716  0042D0  0100               	movlb	0	; () banked
  2717  0042D2  6FFB               	movwf	_menu_selected& (0+255),b
  2718  0042D4                     l500:
  2719  0042D4  0012               	return		;funcret
  2720  0042D6                     __end_of_speedLimitSettingMenu:
  2721                           	callstack 0
  2722                           
  2723 ;; *************** function _secretMenu *****************
  2724 ;; Defined at:
  2725 ;;		line 423 in file "fs_menu_controller.c"
  2726 ;; Parameters:    Size  Location     Type
  2727 ;;		None
  2728 ;; Auto vars:     Size  Location     Type
  2729 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2730 ;; Return value:  Size  Location     Type
  2731 ;;                  1    wreg      void 
  2732 ;; Registers used:
  2733 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2734 ;; Tracked objects:
  2735 ;;		On entry : 0/0
  2736 ;;		On exit  : 0/0
  2737 ;;		Unchanged: 0/0
  2738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2739 ;;      Params:         0       0       0       0       0       0       0
  2740 ;;      Locals:         0      16       0       0       0       0       0
  2741 ;;      Temps:          0       0       0       0       0       0       0
  2742 ;;      Totals:         0      16       0       0       0       0       0
  2743 ;;Total ram usage:       16 bytes
  2744 ;; Hardware stack levels used:    1
  2745 ;; Hardware stack levels required when called:    9
  2746 ;; This function calls:
  2747 ;;		___fladd
  2748 ;;		___flge
  2749 ;;		___flsub
  2750 ;;		_lcdSetCursor
  2751 ;;		_lcdWriteString
  2752 ;;		_sprintf
  2753 ;;		_stopMotor
  2754 ;; This function is called by:
  2755 ;;		_stateMachine
  2756 ;; This function uses a non-reentrant model
  2757 ;;
  2758                           
  2759                           	psect	text8
  2760  002CF4                     __ptext8:
  2761                           	callstack 0
  2762  002CF4                     _secretMenu:
  2763                           	callstack 19
  2764  002CF4                     
  2765                           ;fs_menu_controller.c: 425:     char textCursor2[16] = {0};
  2766  002CF4  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  2767  002CF8  0E0F               	movlw	15
  2768  002CFA                     u7431:
  2769  002CFA  6ADE               	clrf	postinc2,c
  2770  002CFC  06E8               	decf	wreg,f,c
  2771  002CFE  E2FD               	bc	u7431
  2772  002D00                     
  2773                           ;fs_menu_controller.c: 427:     stopMotor();
  2774  002D00  EC79  F02A         	call	_stopMotor	;wreg free
  2775  002D04                     
  2776                           ;fs_menu_controller.c: 429:     if (menu_flags.menu_input_flag == 1)
  2777  002D04  0101               	movlb	1	; () banked
  2778  002D06  0597               	decf	_menu_flags& (0+255),w,b
  2779  002D08  A4D8               	btfss	status,2,c
  2780  002D0A  EF89  F016         	goto	u7441
  2781  002D0E  EF8B  F016         	goto	u7440
  2782  002D12                     u7441:
  2783  002D12  EF99  F016         	goto	l6239
  2784  002D16                     u7440:
  2785  002D16                     
  2786                           ; BSR set to: 1
  2787                           ;fs_menu_controller.c: 430:     {;fs_menu_controller.c: 431:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2788  002D16  0E00               	movlw	0
  2789  002D18  6F97               	movwf	_menu_flags& (0+255),b
  2790  002D1A                     
  2791                           ; BSR set to: 1
  2792                           ;fs_menu_controller.c: 432:         secretMenuCounter++;
  2793  002D1A  0100               	movlb	0	; () banked
  2794  002D1C  2BFC               	incf	_secretMenuCounter& (0+255),f,b
  2795  002D1E                     
  2796                           ; BSR set to: 0
  2797                           ;fs_menu_controller.c: 434:         if (secretMenuCounter >2)
  2798  002D1E  0E02               	movlw	2
  2799  002D20  65FC               	cpfsgt	_secretMenuCounter& (0+255),b
  2800  002D22  EF95  F016         	goto	u7451
  2801  002D26  EF97  F016         	goto	u7450
  2802  002D2A                     u7451:
  2803  002D2A  EF99  F016         	goto	l6239
  2804  002D2E                     u7450:
  2805  002D2E                     
  2806                           ; BSR set to: 0
  2807                           ;fs_menu_controller.c: 435:         {;fs_menu_controller.c: 436:             secretMenuC
      +                          ounter = 1;
  2808  002D2E  0E01               	movlw	1
  2809  002D30  6FFC               	movwf	_secretMenuCounter& (0+255),b
  2810  002D32                     l6239:
  2811                           
  2812                           ;fs_menu_controller.c: 440:     if (secretMenuCounter == 1)
  2813  002D32  0100               	movlb	0	; () banked
  2814  002D34  05FC               	decf	_secretMenuCounter& (0+255),w,b
  2815  002D36  A4D8               	btfss	status,2,c
  2816  002D38  EFA0  F016         	goto	u7461
  2817  002D3C  EFA2  F016         	goto	u7460
  2818  002D40                     u7461:
  2819  002D40  EF36  F017         	goto	l6267
  2820  002D44                     u7460:
  2821  002D44                     
  2822                           ; BSR set to: 0
  2823                           ;fs_menu_controller.c: 441:     {;fs_menu_controller.c: 442:         lcdSetCursor(1,1);
  2824  002D44  0E01               	movlw	1
  2825  002D46  6E04               	movwf	lcdSetCursor@b^0,c
  2826  002D48  0E01               	movlw	1
  2827  002D4A  EC36  F028         	call	_lcdSetCursor
  2828  002D4E                     
  2829                           ;fs_menu_controller.c: 443:         lcdWriteString("PID PARAM       ");
  2830  002D4E  0E09               	movlw	low STR_9
  2831  002D50  6E05               	movwf	lcdWriteString@a^0,c
  2832  002D52  0E7F               	movlw	high STR_9
  2833  002D54  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2834  002D56  ECD8  F026         	call	_lcdWriteString	;wreg free
  2835  002D5A                     
  2836                           ;fs_menu_controller.c: 444:         lcdSetCursor(2,1);
  2837  002D5A  0E01               	movlw	1
  2838  002D5C  6E04               	movwf	lcdSetCursor@b^0,c
  2839  002D5E  0E02               	movlw	2
  2840  002D60  EC36  F028         	call	_lcdSetCursor
  2841  002D64                     
  2842                           ;fs_menu_controller.c: 445:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  2843  002D64  0EE1               	movlw	low secretMenu@textCursor2
  2844  002D66  0100               	movlb	0	; () banked
  2845  002D68  6FCF               	movwf	sprintf@s& (0+255),b
  2846  002D6A  0E00               	movlw	high secretMenu@textCursor2
  2847  002D6C  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2848  002D6E  0ED0               	movlw	low STR_10
  2849  002D70  6FD1               	movwf	sprintf@fmt& (0+255),b
  2850  002D72  0E7F               	movlw	high STR_10
  2851  002D74  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2852  002D76  C1CF  F0D3         	movff	_KP@fs_speed_controller$F1842,?_sprintf+4
  2853  002D7A  C1D0  F0D4         	movff	_KP@fs_speed_controller$F1842+1,?_sprintf+5
  2854  002D7E  C1D1  F0D5         	movff	_KP@fs_speed_controller$F1842+2,?_sprintf+6
  2855  002D82  C1D2  F0D6         	movff	_KP@fs_speed_controller$F1842+3,?_sprintf+7
  2856  002D86  EC1E  F029         	call	_sprintf	;wreg free
  2857  002D8A                     
  2858                           ;fs_menu_controller.c: 446:         lcdWriteString(textCursor2);
  2859  002D8A  0EE1               	movlw	low secretMenu@textCursor2
  2860  002D8C  6E05               	movwf	lcdWriteString@a^0,c
  2861  002D8E  0E00               	movlw	high secretMenu@textCursor2
  2862  002D90  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2863  002D92  ECD8  F026         	call	_lcdWriteString	;wreg free
  2864  002D96                     
  2865                           ;fs_menu_controller.c: 448:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  2866  002D96  0101               	movlb	1	; () banked
  2867  002D98  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2868  002D9A  A4D8               	btfss	status,2,c
  2869  002D9C  EFD2  F016         	goto	u7471
  2870  002DA0  EFD4  F016         	goto	u7470
  2871  002DA4                     u7471:
  2872  002DA4  EF0A  F017         	goto	l6259
  2873  002DA8                     u7470:
  2874  002DA8                     
  2875                           ; BSR set to: 1
  2876  002DA8  C1CF  F035         	movff	_KP@fs_speed_controller$F1842,___flge@ff1
  2877  002DAC  C1D0  F036         	movff	_KP@fs_speed_controller$F1842+1,___flge@ff1+1
  2878  002DB0  C1D1  F037         	movff	_KP@fs_speed_controller$F1842+2,___flge@ff1+2
  2879  002DB4  C1D2  F038         	movff	_KP@fs_speed_controller$F1842+3,___flge@ff1+3
  2880  002DB8  0E00               	movlw	0
  2881  002DBA  6E39               	movwf	___flge@ff2^0,c
  2882  002DBC  0E00               	movlw	0
  2883  002DBE  6E3A               	movwf	(___flge@ff2+1)^0,c
  2884  002DC0  0E20               	movlw	32
  2885  002DC2  6E3B               	movwf	(___flge@ff2+2)^0,c
  2886  002DC4  0E40               	movlw	64
  2887  002DC6  6E3C               	movwf	(___flge@ff2+3)^0,c
  2888  002DC8  ECEE  F021         	call	___flge	;wreg free
  2889  002DCC  B0D8               	btfsc	status,0,c
  2890  002DCE  EFEB  F016         	goto	u7481
  2891  002DD2  EFED  F016         	goto	u7480
  2892  002DD6                     u7481:
  2893  002DD6  EF0A  F017         	goto	l6259
  2894  002DDA                     u7480:
  2895  002DDA                     
  2896                           ;fs_menu_controller.c: 449:         {;fs_menu_controller.c: 450:             menu_flags.
      +                          menu_increase_flag = 0;
  2897  002DDA  0E00               	movlw	0
  2898  002DDC  0101               	movlb	1	; () banked
  2899  002DDE  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2900  002DE0                     
  2901                           ; BSR set to: 1
  2902                           ;fs_menu_controller.c: 451:             KP += 0.01;
  2903  002DE0  C1CF  F035         	movff	_KP@fs_speed_controller$F1842,___fladd@b
  2904  002DE4  C1D0  F036         	movff	_KP@fs_speed_controller$F1842+1,___fladd@b+1
  2905  002DE8  C1D1  F037         	movff	_KP@fs_speed_controller$F1842+2,___fladd@b+2
  2906  002DEC  C1D2  F038         	movff	_KP@fs_speed_controller$F1842+3,___fladd@b+3
  2907  002DF0  0E0A               	movlw	10
  2908  002DF2  6E39               	movwf	___fladd@a^0,c
  2909  002DF4  0ED7               	movlw	215
  2910  002DF6  6E3A               	movwf	(___fladd@a+1)^0,c
  2911  002DF8  0E23               	movlw	35
  2912  002DFA  6E3B               	movwf	(___fladd@a+2)^0,c
  2913  002DFC  0E3C               	movlw	60
  2914  002DFE  6E3C               	movwf	(___fladd@a+3)^0,c
  2915  002E00  EC53  F00D         	call	___fladd	;wreg free
  2916  002E04  C035  F1CF         	movff	?___fladd,_KP@fs_speed_controller$F1842
  2917  002E08  C036  F1D0         	movff	?___fladd+1,_KP@fs_speed_controller$F1842+1
  2918  002E0C  C037  F1D1         	movff	?___fladd+2,_KP@fs_speed_controller$F1842+2
  2919  002E10  C038  F1D2         	movff	?___fladd+3,_KP@fs_speed_controller$F1842+3
  2920  002E14                     l6259:
  2921                           
  2922                           ;fs_menu_controller.c: 454:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  2923  002E14  0101               	movlb	1	; () banked
  2924  002E16  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2925  002E18  A4D8               	btfss	status,2,c
  2926  002E1A  EF11  F017         	goto	u7491
  2927  002E1E  EF13  F017         	goto	u7490
  2928  002E22                     u7491:
  2929  002E22  EF36  F017         	goto	l6267
  2930  002E26                     u7490:
  2931  002E26                     
  2932                           ; BSR set to: 1
  2933  002E26  BFD2               	btfsc	(_KP@fs_speed_controller$F1842+3)& (0+255),7,b
  2934  002E28  EF18  F017         	goto	u7501
  2935  002E2C  EF1A  F017         	goto	u7500
  2936  002E30                     u7501:
  2937  002E30  EF36  F017         	goto	l6267
  2938  002E34                     u7500:
  2939  002E34                     
  2940                           ; BSR set to: 1
  2941                           ;fs_menu_controller.c: 455:         {;fs_menu_controller.c: 456:             menu_flags.
      +                          menu_decrease_flag = 0;
  2942  002E34  0E00               	movlw	0
  2943  002E36  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2944  002E38                     
  2945                           ; BSR set to: 1
  2946                           ;fs_menu_controller.c: 457:              KP -= 0.01;
  2947  002E38  C1CF  F045         	movff	_KP@fs_speed_controller$F1842,___flsub@b
  2948  002E3C  C1D0  F046         	movff	_KP@fs_speed_controller$F1842+1,___flsub@b+1
  2949  002E40  C1D1  F047         	movff	_KP@fs_speed_controller$F1842+2,___flsub@b+2
  2950  002E44  C1D2  F048         	movff	_KP@fs_speed_controller$F1842+3,___flsub@b+3
  2951  002E48  0E0A               	movlw	10
  2952  002E4A  6E49               	movwf	___flsub@a^0,c
  2953  002E4C  0ED7               	movlw	215
  2954  002E4E  6E4A               	movwf	(___flsub@a+1)^0,c
  2955  002E50  0E23               	movlw	35
  2956  002E52  6E4B               	movwf	(___flsub@a+2)^0,c
  2957  002E54  0E3C               	movlw	60
  2958  002E56  6E4C               	movwf	(___flsub@a+3)^0,c
  2959  002E58  EC95  F029         	call	___flsub	;wreg free
  2960  002E5C  C045  F1CF         	movff	?___flsub,_KP@fs_speed_controller$F1842
  2961  002E60  C046  F1D0         	movff	?___flsub+1,_KP@fs_speed_controller$F1842+1
  2962  002E64  C047  F1D1         	movff	?___flsub+2,_KP@fs_speed_controller$F1842+2
  2963  002E68  C048  F1D2         	movff	?___flsub+3,_KP@fs_speed_controller$F1842+3
  2964  002E6C                     l6267:
  2965                           
  2966                           ;fs_menu_controller.c: 461:     if (secretMenuCounter == 2)
  2967  002E6C  0E02               	movlw	2
  2968  002E6E  0100               	movlb	0	; () banked
  2969  002E70  19FC               	xorwf	_secretMenuCounter& (0+255),w,b
  2970  002E72  A4D8               	btfss	status,2,c
  2971  002E74  EF3E  F017         	goto	u7511
  2972  002E78  EF40  F017         	goto	u7510
  2973  002E7C                     u7511:
  2974  002E7C  EFD4  F017         	goto	l6295
  2975  002E80                     u7510:
  2976  002E80                     
  2977                           ; BSR set to: 0
  2978                           ;fs_menu_controller.c: 462:     {;fs_menu_controller.c: 463:         lcdSetCursor(1,1);
  2979  002E80  0E01               	movlw	1
  2980  002E82  6E04               	movwf	lcdSetCursor@b^0,c
  2981  002E84  0E01               	movlw	1
  2982  002E86  EC36  F028         	call	_lcdSetCursor
  2983  002E8A                     
  2984                           ;fs_menu_controller.c: 464:         lcdWriteString("PID PARAM       ");
  2985  002E8A  0E09               	movlw	low STR_9
  2986  002E8C  6E05               	movwf	lcdWriteString@a^0,c
  2987  002E8E  0E7F               	movlw	high STR_9
  2988  002E90  6E06               	movwf	(lcdWriteString@a+1)^0,c
  2989  002E92  ECD8  F026         	call	_lcdWriteString	;wreg free
  2990  002E96                     
  2991                           ;fs_menu_controller.c: 465:         lcdSetCursor(2,1);
  2992  002E96  0E01               	movlw	1
  2993  002E98  6E04               	movwf	lcdSetCursor@b^0,c
  2994  002E9A  0E02               	movlw	2
  2995  002E9C  EC36  F028         	call	_lcdSetCursor
  2996  002EA0                     
  2997                           ;fs_menu_controller.c: 466:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  2998  002EA0  0EE1               	movlw	low secretMenu@textCursor2
  2999  002EA2  0100               	movlb	0	; () banked
  3000  002EA4  6FCF               	movwf	sprintf@s& (0+255),b
  3001  002EA6  0E00               	movlw	high secretMenu@textCursor2
  3002  002EA8  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3003  002EAA  0EDE               	movlw	low STR_12
  3004  002EAC  6FD1               	movwf	sprintf@fmt& (0+255),b
  3005  002EAE  0E7F               	movlw	high STR_12
  3006  002EB0  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3007  002EB2  C1CB  F0D3         	movff	_KD@fs_speed_controller$F1843,?_sprintf+4
  3008  002EB6  C1CC  F0D4         	movff	_KD@fs_speed_controller$F1843+1,?_sprintf+5
  3009  002EBA  C1CD  F0D5         	movff	_KD@fs_speed_controller$F1843+2,?_sprintf+6
  3010  002EBE  C1CE  F0D6         	movff	_KD@fs_speed_controller$F1843+3,?_sprintf+7
  3011  002EC2  EC1E  F029         	call	_sprintf	;wreg free
  3012  002EC6                     
  3013                           ;fs_menu_controller.c: 467:         lcdWriteString(textCursor2);
  3014  002EC6  0EE1               	movlw	low secretMenu@textCursor2
  3015  002EC8  6E05               	movwf	lcdWriteString@a^0,c
  3016  002ECA  0E00               	movlw	high secretMenu@textCursor2
  3017  002ECC  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3018  002ECE  ECD8  F026         	call	_lcdWriteString	;wreg free
  3019  002ED2                     
  3020                           ;fs_menu_controller.c: 469:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3021  002ED2  0101               	movlb	1	; () banked
  3022  002ED4  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3023  002ED6  A4D8               	btfss	status,2,c
  3024  002ED8  EF70  F017         	goto	u7521
  3025  002EDC  EF72  F017         	goto	u7520
  3026  002EE0                     u7521:
  3027  002EE0  EFA8  F017         	goto	l6287
  3028  002EE4                     u7520:
  3029  002EE4                     
  3030                           ; BSR set to: 1
  3031  002EE4  C1CB  F035         	movff	_KD@fs_speed_controller$F1843,___flge@ff1
  3032  002EE8  C1CC  F036         	movff	_KD@fs_speed_controller$F1843+1,___flge@ff1+1
  3033  002EEC  C1CD  F037         	movff	_KD@fs_speed_controller$F1843+2,___flge@ff1+2
  3034  002EF0  C1CE  F038         	movff	_KD@fs_speed_controller$F1843+3,___flge@ff1+3
  3035  002EF4  0E00               	movlw	0
  3036  002EF6  6E39               	movwf	___flge@ff2^0,c
  3037  002EF8  0E00               	movlw	0
  3038  002EFA  6E3A               	movwf	(___flge@ff2+1)^0,c
  3039  002EFC  0E20               	movlw	32
  3040  002EFE  6E3B               	movwf	(___flge@ff2+2)^0,c
  3041  002F00  0E40               	movlw	64
  3042  002F02  6E3C               	movwf	(___flge@ff2+3)^0,c
  3043  002F04  ECEE  F021         	call	___flge	;wreg free
  3044  002F08  B0D8               	btfsc	status,0,c
  3045  002F0A  EF89  F017         	goto	u7531
  3046  002F0E  EF8B  F017         	goto	u7530
  3047  002F12                     u7531:
  3048  002F12  EFA8  F017         	goto	l6287
  3049  002F16                     u7530:
  3050  002F16                     
  3051                           ;fs_menu_controller.c: 470:         {;fs_menu_controller.c: 471:             menu_flags.
      +                          menu_increase_flag = 0;
  3052  002F16  0E00               	movlw	0
  3053  002F18  0101               	movlb	1	; () banked
  3054  002F1A  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3055  002F1C                     
  3056                           ; BSR set to: 1
  3057                           ;fs_menu_controller.c: 472:             KD += 0.01;
  3058  002F1C  C1CB  F035         	movff	_KD@fs_speed_controller$F1843,___fladd@b
  3059  002F20  C1CC  F036         	movff	_KD@fs_speed_controller$F1843+1,___fladd@b+1
  3060  002F24  C1CD  F037         	movff	_KD@fs_speed_controller$F1843+2,___fladd@b+2
  3061  002F28  C1CE  F038         	movff	_KD@fs_speed_controller$F1843+3,___fladd@b+3
  3062  002F2C  0E0A               	movlw	10
  3063  002F2E  6E39               	movwf	___fladd@a^0,c
  3064  002F30  0ED7               	movlw	215
  3065  002F32  6E3A               	movwf	(___fladd@a+1)^0,c
  3066  002F34  0E23               	movlw	35
  3067  002F36  6E3B               	movwf	(___fladd@a+2)^0,c
  3068  002F38  0E3C               	movlw	60
  3069  002F3A  6E3C               	movwf	(___fladd@a+3)^0,c
  3070  002F3C  EC53  F00D         	call	___fladd	;wreg free
  3071  002F40  C035  F1CB         	movff	?___fladd,_KD@fs_speed_controller$F1843
  3072  002F44  C036  F1CC         	movff	?___fladd+1,_KD@fs_speed_controller$F1843+1
  3073  002F48  C037  F1CD         	movff	?___fladd+2,_KD@fs_speed_controller$F1843+2
  3074  002F4C  C038  F1CE         	movff	?___fladd+3,_KD@fs_speed_controller$F1843+3
  3075  002F50                     l6287:
  3076                           
  3077                           ;fs_menu_controller.c: 475:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3078  002F50  0101               	movlb	1	; () banked
  3079  002F52  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3080  002F54  A4D8               	btfss	status,2,c
  3081  002F56  EFAF  F017         	goto	u7541
  3082  002F5A  EFB1  F017         	goto	u7540
  3083  002F5E                     u7541:
  3084  002F5E  EFD4  F017         	goto	l6295
  3085  002F62                     u7540:
  3086  002F62                     
  3087                           ; BSR set to: 1
  3088  002F62  BFCE               	btfsc	(_KD@fs_speed_controller$F1843+3)& (0+255),7,b
  3089  002F64  EFB6  F017         	goto	u7551
  3090  002F68  EFB8  F017         	goto	u7550
  3091  002F6C                     u7551:
  3092  002F6C  EFD4  F017         	goto	l6295
  3093  002F70                     u7550:
  3094  002F70                     
  3095                           ; BSR set to: 1
  3096                           ;fs_menu_controller.c: 476:         {;fs_menu_controller.c: 477:             menu_flags.
      +                          menu_decrease_flag = 0;
  3097  002F70  0E00               	movlw	0
  3098  002F72  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3099  002F74                     
  3100                           ; BSR set to: 1
  3101                           ;fs_menu_controller.c: 478:              KD -= 0.01;
  3102  002F74  C1CB  F045         	movff	_KD@fs_speed_controller$F1843,___flsub@b
  3103  002F78  C1CC  F046         	movff	_KD@fs_speed_controller$F1843+1,___flsub@b+1
  3104  002F7C  C1CD  F047         	movff	_KD@fs_speed_controller$F1843+2,___flsub@b+2
  3105  002F80  C1CE  F048         	movff	_KD@fs_speed_controller$F1843+3,___flsub@b+3
  3106  002F84  0E0A               	movlw	10
  3107  002F86  6E49               	movwf	___flsub@a^0,c
  3108  002F88  0ED7               	movlw	215
  3109  002F8A  6E4A               	movwf	(___flsub@a+1)^0,c
  3110  002F8C  0E23               	movlw	35
  3111  002F8E  6E4B               	movwf	(___flsub@a+2)^0,c
  3112  002F90  0E3C               	movlw	60
  3113  002F92  6E4C               	movwf	(___flsub@a+3)^0,c
  3114  002F94  EC95  F029         	call	___flsub	;wreg free
  3115  002F98  C045  F1CB         	movff	?___flsub,_KD@fs_speed_controller$F1843
  3116  002F9C  C046  F1CC         	movff	?___flsub+1,_KD@fs_speed_controller$F1843+1
  3117  002FA0  C047  F1CD         	movff	?___flsub+2,_KD@fs_speed_controller$F1843+2
  3118  002FA4  C048  F1CE         	movff	?___flsub+3,_KD@fs_speed_controller$F1843+3
  3119  002FA8                     l6295:
  3120                           
  3121                           ;fs_menu_controller.c: 482:     if ( timer_value.menu_login_delay == 100)
  3122  002FA8  0E64               	movlw	100
  3123  002FAA  0101               	movlb	1	; () banked
  3124  002FAC  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3125  002FAE  A4D8               	btfss	status,2,c
  3126  002FB0  EFDC  F017         	goto	u7561
  3127  002FB4  EFDE  F017         	goto	u7560
  3128  002FB8                     u7561:
  3129  002FB8  EFE5  F017         	goto	l491
  3130  002FBC                     u7560:
  3131  002FBC                     
  3132                           ; BSR set to: 1
  3133                           ;fs_menu_controller.c: 483:     {;fs_menu_controller.c: 484:         button_bounce_contr
      +                          oller.menu = 0;
  3134  002FBC  0E00               	movlw	0
  3135  002FBE  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3136                           
  3137                           ;fs_menu_controller.c: 485:         timer_value.menu_login_delay = 0;
  3138  002FC0  0E00               	movlw	0
  3139  002FC2  6F93               	movwf	(_timer_value+4)& (0+255),b
  3140                           
  3141                           ;fs_menu_controller.c: 486:         menu_selected = PAUSE_MENU;
  3142  002FC4  0E06               	movlw	6
  3143  002FC6  0100               	movlb	0	; () banked
  3144  002FC8  6FFB               	movwf	_menu_selected& (0+255),b
  3145  002FCA                     l491:
  3146  002FCA  0012               	return		;funcret
  3147  002FCC                     __end_of_secretMenu:
  3148                           	callstack 0
  3149                           
  3150 ;; *************** function _pauseMenu *****************
  3151 ;; Defined at:
  3152 ;;		line 353 in file "fs_menu_controller.c"
  3153 ;; Parameters:    Size  Location     Type
  3154 ;;		None
  3155 ;; Auto vars:     Size  Location     Type
  3156 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3157 ;; Return value:  Size  Location     Type
  3158 ;;                  1    wreg      void 
  3159 ;; Registers used:
  3160 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3161 ;; Tracked objects:
  3162 ;;		On entry : 0/0
  3163 ;;		On exit  : 0/0
  3164 ;;		Unchanged: 0/0
  3165 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3166 ;;      Params:         0       0       0       0       0       0       0
  3167 ;;      Locals:         0      16       0       0       0       0       0
  3168 ;;      Temps:          0       0       0       0       0       0       0
  3169 ;;      Totals:         0      16       0       0       0       0       0
  3170 ;;Total ram usage:       16 bytes
  3171 ;; Hardware stack levels used:    1
  3172 ;; Hardware stack levels required when called:    9
  3173 ;; This function calls:
  3174 ;;		_lcdSetCursor
  3175 ;;		_lcdWriteString
  3176 ;;		_sprintf
  3177 ;;		_stopMotor
  3178 ;; This function is called by:
  3179 ;;		_stateMachine
  3180 ;; This function uses a non-reentrant model
  3181 ;;
  3182                           
  3183                           	psect	text9
  3184  003D3C                     __ptext9:
  3185                           	callstack 0
  3186  003D3C                     _pauseMenu:
  3187                           	callstack 19
  3188  003D3C                     
  3189                           ;fs_menu_controller.c: 355:     char textCursor2[16] = {0};
  3190  003D3C  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3191  003D40  0E0F               	movlw	15
  3192  003D42                     u7341:
  3193  003D42  6ADE               	clrf	postinc2,c
  3194  003D44  06E8               	decf	wreg,f,c
  3195  003D46  E2FD               	bc	u7341
  3196  003D48                     
  3197                           ;fs_menu_controller.c: 357:     startIsClick = 0;
  3198  003D48  0E00               	movlw	0
  3199  003D4A  0100               	movlb	0	; () banked
  3200  003D4C  6FFE               	movwf	_startIsClick& (0+255),b
  3201  003D4E                     
  3202                           ; BSR set to: 0
  3203                           ;fs_menu_controller.c: 361:     stopMotor();
  3204  003D4E  EC79  F02A         	call	_stopMotor	;wreg free
  3205  003D52                     
  3206                           ;fs_menu_controller.c: 363:     lcdSetCursor(1,1);
  3207  003D52  0E01               	movlw	1
  3208  003D54  6E04               	movwf	lcdSetCursor@b^0,c
  3209  003D56  0E01               	movlw	1
  3210  003D58  EC36  F028         	call	_lcdSetCursor
  3211  003D5C                     
  3212                           ;fs_menu_controller.c: 364:     lcdWriteString("HAREKET DURDU   ");
  3213  003D5C  0E4D               	movlw	low STR_7
  3214  003D5E  6E05               	movwf	lcdWriteString@a^0,c
  3215  003D60  0E7F               	movlw	high STR_7
  3216  003D62  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3217  003D64  ECD8  F026         	call	_lcdWriteString	;wreg free
  3218  003D68                     
  3219                           ;fs_menu_controller.c: 365:     lcdSetCursor(2,1);
  3220  003D68  0E01               	movlw	1
  3221  003D6A  6E04               	movwf	lcdSetCursor@b^0,c
  3222  003D6C  0E02               	movlw	2
  3223  003D6E  EC36  F028         	call	_lcdSetCursor
  3224  003D72                     
  3225                           ;fs_menu_controller.c: 366:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3226  003D72  0EE1               	movlw	low pauseMenu@textCursor2
  3227  003D74  0100               	movlb	0	; () banked
  3228  003D76  6FCF               	movwf	sprintf@s& (0+255),b
  3229  003D78  0E00               	movlw	high pauseMenu@textCursor2
  3230  003D7A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3231  003D7C  0EA1               	movlw	low STR_6
  3232  003D7E  6FD1               	movwf	sprintf@fmt& (0+255),b
  3233  003D80  0E7F               	movlw	high STR_6
  3234  003D82  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3235  003D84  0101               	movlb	1	; () banked
  3236  003D86  5192               	movf	(_timer_value+3)& (0+255),w,b
  3237  003D88  0100               	movlb	0	; () banked
  3238  003D8A  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3239  003D8C  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3240  003D8E  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3241  003D90  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3242  003D92  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3243  003D96  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3244  003D98  EC1E  F029         	call	_sprintf	;wreg free
  3245  003D9C                     
  3246                           ;fs_menu_controller.c: 367:     lcdWriteString(textCursor2);
  3247  003D9C  0EE1               	movlw	low pauseMenu@textCursor2
  3248  003D9E  6E05               	movwf	lcdWriteString@a^0,c
  3249  003DA0  0E00               	movlw	high pauseMenu@textCursor2
  3250  003DA2  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3251  003DA4  ECD8  F026         	call	_lcdWriteString	;wreg free
  3252  003DA8                     
  3253                           ;fs_menu_controller.c: 369:     if (menu_flags.menu_start_flag == 1)
  3254  003DA8  0101               	movlb	1	; () banked
  3255  003DAA  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3256  003DAC  A4D8               	btfss	status,2,c
  3257  003DAE  EFDB  F01E         	goto	u7351
  3258  003DB2  EFDD  F01E         	goto	u7350
  3259  003DB6                     u7351:
  3260  003DB6  EFE8  F01E         	goto	l470
  3261  003DBA                     u7350:
  3262  003DBA                     
  3263                           ; BSR set to: 1
  3264                           ;fs_menu_controller.c: 370:     {;fs_menu_controller.c: 371:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3265  003DBA  0E00               	movlw	0
  3266  003DBC  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3267                           
  3268                           ;fs_menu_controller.c: 372:         menu_selected = MAIN_MENU;
  3269  003DBE  0E00               	movlw	0
  3270  003DC0  0100               	movlb	0	; () banked
  3271  003DC2  6FFB               	movwf	_menu_selected& (0+255),b
  3272                           
  3273                           ;fs_menu_controller.c: 374:         startIsClick = 1;
  3274  003DC4  0E01               	movlw	1
  3275  003DC6  6FFE               	movwf	_startIsClick& (0+255),b
  3276                           
  3277                           ;fs_menu_controller.c: 375:         pauseIsClick = 0;
  3278  003DC8  0E00               	movlw	0
  3279  003DCA  6FFF               	movwf	_pauseIsClick& (0+255),b
  3280                           
  3281                           ;fs_menu_controller.c: 376:         stopIsClick = 0;
  3282  003DCC  0E00               	movlw	0
  3283  003DCE  6FFD               	movwf	_stopIsClick& (0+255),b
  3284  003DD0                     l470:
  3285                           
  3286                           ;fs_menu_controller.c: 379:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3287  003DD0  0100               	movlb	0	; () banked
  3288  003DD2  51FE               	movf	_startIsClick& (0+255),w,b
  3289  003DD4  A4D8               	btfss	status,2,c
  3290  003DD6  EFEF  F01E         	goto	u7361
  3291  003DDA  EFF1  F01E         	goto	u7360
  3292  003DDE                     u7361:
  3293  003DDE  EF13  F01F         	goto	l6215
  3294  003DE2                     u7360:
  3295  003DE2                     
  3296                           ; BSR set to: 0
  3297  003DE2  51FF               	movf	_pauseIsClick& (0+255),w,b
  3298  003DE4  A4D8               	btfss	status,2,c
  3299  003DE6  EFF7  F01E         	goto	u7371
  3300  003DEA  EFF9  F01E         	goto	u7370
  3301  003DEE                     u7371:
  3302  003DEE  EF13  F01F         	goto	l6215
  3303  003DF2                     u7370:
  3304  003DF2                     
  3305                           ; BSR set to: 0
  3306  003DF2  05FD               	decf	_stopIsClick& (0+255),w,b
  3307  003DF4  A4D8               	btfss	status,2,c
  3308  003DF6  EFFF  F01E         	goto	u7381
  3309  003DFA  EF01  F01F         	goto	u7380
  3310  003DFE                     u7381:
  3311  003DFE  EF13  F01F         	goto	l6215
  3312  003E02                     u7380:
  3313  003E02                     
  3314                           ; BSR set to: 0
  3315  003E02  0E06               	movlw	6
  3316  003E04  19FB               	xorwf	_menu_selected& (0+255),w,b
  3317  003E06  A4D8               	btfss	status,2,c
  3318  003E08  EF08  F01F         	goto	u7391
  3319  003E0C  EF0A  F01F         	goto	u7390
  3320  003E10                     u7391:
  3321  003E10  EF13  F01F         	goto	l6215
  3322  003E14                     u7390:
  3323  003E14                     
  3324                           ; BSR set to: 0
  3325                           ;fs_menu_controller.c: 380:     {;fs_menu_controller.c: 381:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3326  003E14  C0F3  F192         	movff	_menu_value,_timer_value+3
  3327  003E18                     
  3328                           ; BSR set to: 0
  3329                           ;fs_menu_controller.c: 382:          timer_value.remainingSecond = 0;
  3330  003E18  0E00               	movlw	0
  3331  003E1A  0101               	movlb	1	; () banked
  3332  003E1C  6F91               	movwf	(_timer_value+2)& (0+255),b
  3333                           
  3334                           ;fs_menu_controller.c: 383:          timer_value.second = 0;
  3335  003E1E  0E00               	movlw	0
  3336  003E20  6F8F               	movwf	_timer_value& (0+255),b
  3337                           
  3338                           ;fs_menu_controller.c: 384:          timer_value.minute = 0;
  3339  003E22  0E00               	movlw	0
  3340  003E24  6F90               	movwf	(_timer_value+1)& (0+255),b
  3341  003E26                     l6215:
  3342                           
  3343                           ;fs_menu_controller.c: 387:     if ( timer_value.menu_login_delay == 100)
  3344  003E26  0E64               	movlw	100
  3345  003E28  0101               	movlb	1	; () banked
  3346  003E2A  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3347  003E2C  A4D8               	btfss	status,2,c
  3348  003E2E  EF1B  F01F         	goto	u7401
  3349  003E32  EF1D  F01F         	goto	u7400
  3350  003E36                     u7401:
  3351  003E36  EF24  F01F         	goto	l6219
  3352  003E3A                     u7400:
  3353  003E3A                     
  3354                           ; BSR set to: 1
  3355                           ;fs_menu_controller.c: 388:     {;fs_menu_controller.c: 389:         button_bounce_contr
      +                          oller.menu = 0;
  3356  003E3A  0E00               	movlw	0
  3357  003E3C  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3358                           
  3359                           ;fs_menu_controller.c: 390:         timer_value.menu_login_delay = 0;
  3360  003E3E  0E00               	movlw	0
  3361  003E40  6F93               	movwf	(_timer_value+4)& (0+255),b
  3362                           
  3363                           ;fs_menu_controller.c: 391:         menu_selected = DRIVER_TIME_SETTING;
  3364  003E42  0E01               	movlw	1
  3365  003E44  0100               	movlb	0	; () banked
  3366  003E46  6FFB               	movwf	_menu_selected& (0+255),b
  3367  003E48                     l6219:
  3368                           
  3369                           ;fs_menu_controller.c: 394:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3370  003E48  0101               	movlb	1	; () banked
  3371  003E4A  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3372  003E4C  A4D8               	btfss	status,2,c
  3373  003E4E  EF2B  F01F         	goto	u7411
  3374  003E52  EF2D  F01F         	goto	u7410
  3375  003E56                     u7411:
  3376  003E56  EF3A  F01F         	goto	l474
  3377  003E5A                     u7410:
  3378  003E5A                     
  3379                           ; BSR set to: 1
  3380  003E5A  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3381  003E5C  A4D8               	btfss	status,2,c
  3382  003E5E  EF33  F01F         	goto	u7421
  3383  003E62  EF35  F01F         	goto	u7420
  3384  003E66                     u7421:
  3385  003E66  EF3A  F01F         	goto	l474
  3386  003E6A                     u7420:
  3387  003E6A                     
  3388                           ; BSR set to: 1
  3389                           ;fs_menu_controller.c: 395:     {;fs_menu_controller.c: 396:         menu_selected = SEC
      +                          RET_MENU;
  3390  003E6A  0E08               	movlw	8
  3391  003E6C  0100               	movlb	0	; () banked
  3392  003E6E  6FFB               	movwf	_menu_selected& (0+255),b
  3393                           
  3394                           ;fs_menu_controller.c: 397:         secretMenuCounter = 1;
  3395  003E70  0E01               	movlw	1
  3396  003E72  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3397  003E74                     l474:
  3398  003E74  0012               	return		;funcret
  3399  003E76                     __end_of_pauseMenu:
  3400                           	callstack 0
  3401                           
  3402 ;; *************** function _mainMenu *****************
  3403 ;; Defined at:
  3404 ;;		line 245 in file "fs_menu_controller.c"
  3405 ;; Parameters:    Size  Location     Type
  3406 ;;		None
  3407 ;; Auto vars:     Size  Location     Type
  3408 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3409 ;; Return value:  Size  Location     Type
  3410 ;;                  1    wreg      void 
  3411 ;; Registers used:
  3412 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3413 ;; Tracked objects:
  3414 ;;		On entry : 0/0
  3415 ;;		On exit  : 0/0
  3416 ;;		Unchanged: 0/0
  3417 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3418 ;;      Params:         0       0       0       0       0       0       0
  3419 ;;      Locals:         0      16       0       0       0       0       0
  3420 ;;      Temps:          0       0       0       0       0       0       0
  3421 ;;      Totals:         0      16       0       0       0       0       0
  3422 ;;Total ram usage:       16 bytes
  3423 ;; Hardware stack levels used:    1
  3424 ;; Hardware stack levels required when called:    9
  3425 ;; This function calls:
  3426 ;;		_lcdSetCursor
  3427 ;;		_lcdWriteString
  3428 ;;		_sprintf
  3429 ;;		_startMotor
  3430 ;;		_stopMotor
  3431 ;; This function is called by:
  3432 ;;		_stateMachine
  3433 ;; This function uses a non-reentrant model
  3434 ;;
  3435                           
  3436                           	psect	text10
  3437  003720                     __ptext10:
  3438                           	callstack 0
  3439  003720                     _mainMenu:
  3440                           	callstack 19
  3441  003720                     
  3442                           ;fs_menu_controller.c: 247:     char textCursor2[16] = {0};
  3443  003720  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  3444  003724  0E0F               	movlw	15
  3445  003726                     u6951:
  3446  003726  6ADE               	clrf	postinc2,c
  3447  003728  06E8               	decf	wreg,f,c
  3448  00372A  E2FD               	bc	u6951
  3449  00372C                     
  3450                           ;fs_menu_controller.c: 249:     lcdSetCursor(1,1);
  3451  00372C  0E01               	movlw	1
  3452  00372E  6E04               	movwf	lcdSetCursor@b^0,c
  3453  003730  0E01               	movlw	1
  3454  003732  EC36  F028         	call	_lcdSetCursor
  3455  003736                     
  3456                           ;fs_menu_controller.c: 250:     lcdWriteString("KALAN ZAMAN     ");
  3457  003736  0E2B               	movlw	low STR_3
  3458  003738  6E05               	movwf	lcdWriteString@a^0,c
  3459  00373A  0E7F               	movlw	high STR_3
  3460  00373C  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3461  00373E  ECD8  F026         	call	_lcdWriteString	;wreg free
  3462  003742                     
  3463                           ;fs_menu_controller.c: 251:     lcdSetCursor(2,1);
  3464  003742  0E01               	movlw	1
  3465  003744  6E04               	movwf	lcdSetCursor@b^0,c
  3466  003746  0E02               	movlw	2
  3467  003748  EC36  F028         	call	_lcdSetCursor
  3468  00374C                     
  3469                           ;fs_menu_controller.c: 252:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  3470  00374C  0EE1               	movlw	low mainMenu@textCursor2
  3471  00374E  0100               	movlb	0	; () banked
  3472  003750  6FCF               	movwf	sprintf@s& (0+255),b
  3473  003752  0E00               	movlw	high mainMenu@textCursor2
  3474  003754  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3475  003756  0EC1               	movlw	low STR_4
  3476  003758  6FD1               	movwf	sprintf@fmt& (0+255),b
  3477  00375A  0E7F               	movlw	high STR_4
  3478  00375C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3479  00375E  0101               	movlb	1	; () banked
  3480  003760  5192               	movf	(_timer_value+3)& (0+255),w,b
  3481  003762  0100               	movlb	0	; () banked
  3482  003764  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3483  003766  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3484  003768  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3485  00376A  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3486  00376C  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3487  003770  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3488  003772  EC1E  F029         	call	_sprintf	;wreg free
  3489  003776                     
  3490                           ;fs_menu_controller.c: 253:     lcdWriteString(textCursor2);
  3491  003776  0EE1               	movlw	low mainMenu@textCursor2
  3492  003778  6E05               	movwf	lcdWriteString@a^0,c
  3493  00377A  0E00               	movlw	high mainMenu@textCursor2
  3494  00377C  6E06               	movwf	(lcdWriteString@a+1)^0,c
  3495  00377E  ECD8  F026         	call	_lcdWriteString	;wreg free
  3496  003782                     
  3497                           ;fs_menu_controller.c: 255:     if ( timer_value.menu_login_delay == 100)
  3498  003782  0E64               	movlw	100
  3499  003784  0101               	movlb	1	; () banked
  3500  003786  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3501  003788  A4D8               	btfss	status,2,c
  3502  00378A  EFC9  F01B         	goto	u6961
  3503  00378E  EFCB  F01B         	goto	u6960
  3504  003792                     u6961:
  3505  003792  EFD2  F01B         	goto	l5957
  3506  003796                     u6960:
  3507  003796                     
  3508                           ; BSR set to: 1
  3509                           ;fs_menu_controller.c: 256:     {;fs_menu_controller.c: 257:         button_bounce_contr
      +                          oller.menu = 0;
  3510  003796  0E00               	movlw	0
  3511  003798  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3512                           
  3513                           ;fs_menu_controller.c: 258:         timer_value.menu_login_delay = 0;
  3514  00379A  0E00               	movlw	0
  3515  00379C  6F93               	movwf	(_timer_value+4)& (0+255),b
  3516                           
  3517                           ;fs_menu_controller.c: 259:         menu_selected = DRIVER_TIME_SETTING;
  3518  00379E  0E01               	movlw	1
  3519  0037A0  0100               	movlb	0	; () banked
  3520  0037A2  6FFB               	movwf	_menu_selected& (0+255),b
  3521  0037A4                     l5957:
  3522                           
  3523                           ;fs_menu_controller.c: 262:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  3524  0037A4  0101               	movlb	1	; () banked
  3525  0037A6  5192               	movf	(_timer_value+3)& (0+255),w,b
  3526  0037A8  0A80               	xorlw	128
  3527  0037AA  0F7F               	addlw	-129
  3528  0037AC  B0D8               	btfsc	status,0,c
  3529  0037AE  EFDB  F01B         	goto	u6971
  3530  0037B2  EFDD  F01B         	goto	u6970
  3531  0037B6                     u6971:
  3532  0037B6  EFEB  F01B         	goto	l454
  3533  0037BA                     u6970:
  3534  0037BA                     
  3535                           ; BSR set to: 1
  3536  0037BA  5191               	movf	(_timer_value+2)& (0+255),w,b
  3537  0037BC  A4D8               	btfss	status,2,c
  3538  0037BE  EFE3  F01B         	goto	u6981
  3539  0037C2  EFE5  F01B         	goto	u6980
  3540  0037C6                     u6981:
  3541  0037C6  EFEB  F01B         	goto	l454
  3542  0037CA                     u6980:
  3543  0037CA                     
  3544                           ; BSR set to: 1
  3545                           ;fs_menu_controller.c: 263:     {;fs_menu_controller.c: 264:             menu_selected =
      +                           STOP_MENU;
  3546  0037CA  0E04               	movlw	4
  3547  0037CC  0100               	movlb	0	; () banked
  3548  0037CE  6FFB               	movwf	_menu_selected& (0+255),b
  3549                           
  3550                           ;fs_menu_controller.c: 265:             timer_value.minute = 0;
  3551  0037D0  0E00               	movlw	0
  3552  0037D2  0101               	movlb	1	; () banked
  3553  0037D4  6F90               	movwf	(_timer_value+1)& (0+255),b
  3554  0037D6                     l454:
  3555                           
  3556                           ; BSR set to: 1
  3557                           ;fs_menu_controller.c: 268:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  3558  0037D6  0100               	movlb	0	; () banked
  3559  0037D8  51FE               	movf	_startIsClick& (0+255),w,b
  3560  0037DA  A4D8               	btfss	status,2,c
  3561  0037DC  EFF2  F01B         	goto	u6991
  3562  0037E0  EFF4  F01B         	goto	u6990
  3563  0037E4                     u6991:
  3564  0037E4  EF13  F01C         	goto	l455
  3565  0037E8                     u6990:
  3566  0037E8                     
  3567                           ; BSR set to: 0
  3568  0037E8  05FF               	decf	_pauseIsClick& (0+255),w,b
  3569  0037EA  A4D8               	btfss	status,2,c
  3570  0037EC  EFFA  F01B         	goto	u7001
  3571  0037F0  EFFC  F01B         	goto	u7000
  3572  0037F4                     u7001:
  3573  0037F4  EF13  F01C         	goto	l455
  3574  0037F8                     u7000:
  3575  0037F8                     
  3576                           ; BSR set to: 0
  3577  0037F8  51FD               	movf	_stopIsClick& (0+255),w,b
  3578  0037FA  A4D8               	btfss	status,2,c
  3579  0037FC  EF02  F01C         	goto	u7011
  3580  003800  EF04  F01C         	goto	u7010
  3581  003804                     u7011:
  3582  003804  EF13  F01C         	goto	l455
  3583  003808                     u7010:
  3584  003808                     
  3585                           ; BSR set to: 0
  3586  003808  51FB               	movf	_menu_selected& (0+255),w,b
  3587  00380A  A4D8               	btfss	status,2,c
  3588  00380C  EF0A  F01C         	goto	u7021
  3589  003810  EF0C  F01C         	goto	u7020
  3590  003814                     u7021:
  3591  003814  EF13  F01C         	goto	l455
  3592  003818                     u7020:
  3593  003818                     
  3594                           ; BSR set to: 0
  3595                           ;fs_menu_controller.c: 269:     {;fs_menu_controller.c: 270:         menu_selected = PAU
      +                          SE_MENU;
  3596  003818  0E06               	movlw	6
  3597  00381A  6FFB               	movwf	_menu_selected& (0+255),b
  3598  00381C                     
  3599                           ; BSR set to: 0
  3600                           ;fs_menu_controller.c: 271:         LATDbits.LATD5 = 0;
  3601  00381C  9A8C               	bcf	140,5,c	;volatile
  3602  00381E                     
  3603                           ; BSR set to: 0
  3604                           ;fs_menu_controller.c: 272:         LATCbits.LATC5 = 0;
  3605  00381E  9A8B               	bcf	139,5,c	;volatile
  3606  003820                     
  3607                           ; BSR set to: 0
  3608                           ;fs_menu_controller.c: 273:         LATCbits.LATC4 = 0;
  3609  003820  988B               	bcf	139,4,c	;volatile
  3610                           
  3611                           ;fs_menu_controller.c: 274:         startIsClick = 0;
  3612  003822  0E00               	movlw	0
  3613  003824  6FFE               	movwf	_startIsClick& (0+255),b
  3614  003826                     l455:
  3615                           
  3616                           ; BSR set to: 0
  3617                           ;fs_menu_controller.c: 277:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  3618  003826  51FE               	movf	_startIsClick& (0+255),w,b
  3619  003828  A4D8               	btfss	status,2,c
  3620  00382A  EF19  F01C         	goto	u7031
  3621  00382E  EF1B  F01C         	goto	u7030
  3622  003832                     u7031:
  3623  003832  EF41  F01C         	goto	l5995
  3624  003836                     u7030:
  3625  003836                     
  3626                           ; BSR set to: 0
  3627  003836  51FF               	movf	_pauseIsClick& (0+255),w,b
  3628  003838  A4D8               	btfss	status,2,c
  3629  00383A  EF21  F01C         	goto	u7041
  3630  00383E  EF23  F01C         	goto	u7040
  3631  003842                     u7041:
  3632  003842  EF41  F01C         	goto	l5995
  3633  003846                     u7040:
  3634  003846                     
  3635                           ; BSR set to: 0
  3636  003846  05FD               	decf	_stopIsClick& (0+255),w,b
  3637  003848  A4D8               	btfss	status,2,c
  3638  00384A  EF29  F01C         	goto	u7051
  3639  00384E  EF2B  F01C         	goto	u7050
  3640  003852                     u7051:
  3641  003852  EF41  F01C         	goto	l5995
  3642  003856                     u7050:
  3643  003856                     
  3644                           ; BSR set to: 0
  3645  003856  51FB               	movf	_menu_selected& (0+255),w,b
  3646  003858  A4D8               	btfss	status,2,c
  3647  00385A  EF31  F01C         	goto	u7061
  3648  00385E  EF33  F01C         	goto	u7060
  3649  003862                     u7061:
  3650  003862  EF41  F01C         	goto	l5995
  3651  003866                     u7060:
  3652  003866                     
  3653                           ; BSR set to: 0
  3654                           ;fs_menu_controller.c: 278:     {;fs_menu_controller.c: 279:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3655  003866  C0F3  F192         	movff	_menu_value,_timer_value+3
  3656  00386A                     
  3657                           ; BSR set to: 0
  3658                           ;fs_menu_controller.c: 280:          timer_value.remainingSecond = 0;
  3659  00386A  0E00               	movlw	0
  3660  00386C  0101               	movlb	1	; () banked
  3661  00386E  6F91               	movwf	(_timer_value+2)& (0+255),b
  3662                           
  3663                           ;fs_menu_controller.c: 281:          timer_value.second = 0;
  3664  003870  0E00               	movlw	0
  3665  003872  6F8F               	movwf	_timer_value& (0+255),b
  3666                           
  3667                           ;fs_menu_controller.c: 282:          timer_value.minute = 0;
  3668  003874  0E00               	movlw	0
  3669  003876  6F90               	movwf	(_timer_value+1)& (0+255),b
  3670  003878                     
  3671                           ; BSR set to: 1
  3672                           ;fs_menu_controller.c: 283:          LATDbits.LATD5 = 0;
  3673  003878  9A8C               	bcf	140,5,c	;volatile
  3674  00387A                     
  3675                           ; BSR set to: 1
  3676                           ;fs_menu_controller.c: 284:          LATCbits.LATC5 = 0;
  3677  00387A  9A8B               	bcf	139,5,c	;volatile
  3678  00387C                     
  3679                           ; BSR set to: 1
  3680                           ;fs_menu_controller.c: 285:          LATCbits.LATC4 = 0;
  3681  00387C  988B               	bcf	139,4,c	;volatile
  3682  00387E                     
  3683                           ; BSR set to: 1
  3684                           ;fs_menu_controller.c: 286:          stopMotor();
  3685  00387E  EC79  F02A         	call	_stopMotor	;wreg free
  3686  003882                     l5995:
  3687                           
  3688                           ;fs_menu_controller.c: 289:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  3689  003882  0100               	movlb	0	; () banked
  3690  003884  05FE               	decf	_startIsClick& (0+255),w,b
  3691  003886  A4D8               	btfss	status,2,c
  3692  003888  EF48  F01C         	goto	u7071
  3693  00388C  EF4A  F01C         	goto	u7070
  3694  003890                     u7071:
  3695  003890  EF5F  F01C         	goto	l458
  3696  003894                     u7070:
  3697  003894                     
  3698                           ; BSR set to: 0
  3699  003894  51FF               	movf	_pauseIsClick& (0+255),w,b
  3700  003896  A4D8               	btfss	status,2,c
  3701  003898  EF50  F01C         	goto	u7081
  3702  00389C  EF52  F01C         	goto	u7080
  3703  0038A0                     u7081:
  3704  0038A0  EF5F  F01C         	goto	l458
  3705  0038A4                     u7080:
  3706  0038A4                     
  3707                           ; BSR set to: 0
  3708  0038A4  51FD               	movf	_stopIsClick& (0+255),w,b
  3709  0038A6  A4D8               	btfss	status,2,c
  3710  0038A8  EF58  F01C         	goto	u7091
  3711  0038AC  EF5A  F01C         	goto	u7090
  3712  0038B0                     u7091:
  3713  0038B0  EF5F  F01C         	goto	l458
  3714  0038B4                     u7090:
  3715  0038B4                     
  3716                           ; BSR set to: 0
  3717                           ;fs_menu_controller.c: 290:     {;fs_menu_controller.c: 291:         startMotor();
  3718  0038B4  EC07  F02B         	call	_startMotor	;wreg free
  3719  0038B8                     
  3720                           ;fs_menu_controller.c: 292:         LATDbits.LATD5 = 1;
  3721  0038B8  8A8C               	bsf	140,5,c	;volatile
  3722  0038BA                     
  3723                           ;fs_menu_controller.c: 293:         LATCbits.LATC5 = 1;
  3724  0038BA  8A8B               	bsf	139,5,c	;volatile
  3725  0038BC                     
  3726                           ;fs_menu_controller.c: 294:         LATCbits.LATC4 = 1;
  3727  0038BC  888B               	bsf	139,4,c	;volatile
  3728  0038BE                     l458:
  3729  0038BE  0012               	return		;funcret
  3730  0038C0                     __end_of_mainMenu:
  3731                           	callstack 0
  3732                           
  3733 ;; *************** function _startMotor *****************
  3734 ;; Defined at:
  3735 ;;		line 93 in file "fs_speed_controller.c"
  3736 ;; Parameters:    Size  Location     Type
  3737 ;;		None
  3738 ;; Auto vars:     Size  Location     Type
  3739 ;;		None
  3740 ;; Return value:  Size  Location     Type
  3741 ;;                  1    wreg      void 
  3742 ;; Registers used:
  3743 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3744 ;; Tracked objects:
  3745 ;;		On entry : 0/0
  3746 ;;		On exit  : 0/0
  3747 ;;		Unchanged: 0/0
  3748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3749 ;;      Params:         0       0       0       0       0       0       0
  3750 ;;      Locals:         0       0       0       0       0       0       0
  3751 ;;      Temps:          0       0       0       0       0       0       0
  3752 ;;      Totals:         0       0       0       0       0       0       0
  3753 ;;Total ram usage:        0 bytes
  3754 ;; Hardware stack levels used:    1
  3755 ;; Hardware stack levels required when called:    3
  3756 ;; This function calls:
  3757 ;;		_PWM1_setDC
  3758 ;;		_PWM2_setDC
  3759 ;;		_calculatedAverageValue
  3760 ;;		_scanAdcConversion
  3761 ;;		_speedControl
  3762 ;; This function is called by:
  3763 ;;		_mainMenu
  3764 ;; This function uses a non-reentrant model
  3765 ;;
  3766                           
  3767                           	psect	text11
  3768  00560E                     __ptext11:
  3769                           	callstack 0
  3770  00560E                     _startMotor:
  3771                           	callstack 24
  3772  00560E                     
  3773                           ;fs_speed_controller.c: 95:         scanAdcConversion();
  3774  00560E  EC31  F006         	call	_scanAdcConversion	;wreg free
  3775  005612                     
  3776                           ;fs_speed_controller.c: 96:         calculatedAverageValue();
  3777  005612  EC95  F013         	call	_calculatedAverageValue	;wreg free
  3778  005616                     
  3779                           ;fs_speed_controller.c: 97:         speedControl(driver_limit.ortalama);
  3780  005616  C18B  F058         	movff	_driver_limit+8,speedControl@position
  3781  00561A  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  3782  00561E  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3783  005622  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3784  005626  ECD7  F019         	call	_speedControl	;wreg free
  3785                           
  3786                           ;fs_speed_controller.c: 98:         PWM1_setDC(controller.leftMotorSpeed);
  3787  00562A  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3788  00562E  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3789  005632  EC54  F027         	call	_PWM1_setDC	;wreg free
  3790                           
  3791                           ;fs_speed_controller.c: 99:         PWM2_setDC(controller.rightMotorSpeed);
  3792  005636  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3793  00563A  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3794  00563E  EC17  F027         	call	_PWM2_setDC	;wreg free
  3795  005642  0012               	return		;funcret
  3796  005644                     __end_of_startMotor:
  3797                           	callstack 0
  3798                           
  3799 ;; *************** function _speedControl *****************
  3800 ;; Defined at:
  3801 ;;		line 36 in file "fs_speed_controller.c"
  3802 ;; Parameters:    Size  Location     Type
  3803 ;;  position        4   87[COMRAM] float 
  3804 ;; Auto vars:     Size  Location     Type
  3805 ;;  pos             4    0        float 
  3806 ;; Return value:  Size  Location     Type
  3807 ;;                  1    wreg      void 
  3808 ;; Registers used:
  3809 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3810 ;; Tracked objects:
  3811 ;;		On entry : 0/0
  3812 ;;		On exit  : 0/0
  3813 ;;		Unchanged: 0/0
  3814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3815 ;;      Params:         4       0       0       0       0       0       0
  3816 ;;      Locals:         0       4       0       0       0       0       0
  3817 ;;      Temps:          2       0       0       0       0       0       0
  3818 ;;      Totals:         6       4       0       0       0       0       0
  3819 ;;Total ram usage:       10 bytes
  3820 ;; Hardware stack levels used:    1
  3821 ;; Hardware stack levels required when called:    2
  3822 ;; This function calls:
  3823 ;;		___fladd
  3824 ;;		___flmul
  3825 ;;		___fltol
  3826 ;;		___xxtofl
  3827 ;; This function is called by:
  3828 ;;		_startMotor
  3829 ;; This function uses a non-reentrant model
  3830 ;;
  3831                           
  3832                           	psect	text12
  3833  0033AE                     __ptext12:
  3834                           	callstack 0
  3835  0033AE                     _speedControl:
  3836                           	callstack 24
  3837  0033AE                     
  3838                           ;fs_speed_controller.c: 42:     controller.error = (int16_t)(position - 3400.0);
  3839  0033AE  0E00               	movlw	0
  3840  0033B0  6E39               	movwf	___fladd@a^0,c
  3841  0033B2  0E80               	movlw	128
  3842  0033B4  6E3A               	movwf	(___fladd@a+1)^0,c
  3843  0033B6  0E54               	movlw	84
  3844  0033B8  6E3B               	movwf	(___fladd@a+2)^0,c
  3845  0033BA  0EC5               	movlw	197
  3846  0033BC  6E3C               	movwf	(___fladd@a+3)^0,c
  3847  0033BE  C058  F035         	movff	speedControl@position,___fladd@b
  3848  0033C2  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  3849  0033C6  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  3850  0033CA  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  3851  0033CE  EC53  F00D         	call	___fladd	;wreg free
  3852  0033D2  C035  F04E         	movff	?___fladd,___fltol@f1
  3853  0033D6  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3854  0033DA  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3855  0033DE  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3856  0033E2  EC6B  F021         	call	___fltol	;wreg free
  3857  0033E6  C04E  F150         	movff	?___fltol,_controller
  3858  0033EA  C04F  F151         	movff	?___fltol+1,_controller+1
  3859  0033EE  0E00               	movlw	0
  3860  0033F0  6E20               	movwf	___flmul@a^0,c
  3861  0033F2  0E00               	movlw	0
  3862  0033F4  6E21               	movwf	(___flmul@a+1)^0,c
  3863  0033F6  0E80               	movlw	128
  3864  0033F8  6E22               	movwf	(___flmul@a+2)^0,c
  3865  0033FA  0E3F               	movlw	63
  3866  0033FC  6E23               	movwf	(___flmul@a+3)^0,c
  3867  0033FE  0101               	movlb	1	; () banked
  3868  003400  5152               	movf	(_controller+2)& (0+255),w,b
  3869  003402  5D50               	subwf	_controller& (0+255),w,b
  3870  003404  6E5C               	movwf	??_speedControl^0,c
  3871  003406  5153               	movf	(_controller+3)& (0+255),w,b
  3872  003408  5951               	subwfb	(_controller+1)& (0+255),w,b
  3873  00340A  6E5D               	movwf	(??_speedControl+1)^0,c
  3874  00340C  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  3875  003410  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  3876  003414  0E00               	movlw	0
  3877  003416  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3878  003418  0EFF               	movlw	-1
  3879  00341A  6E10               	movwf	(___xxtofl@val+2)^0,c
  3880  00341C  6E11               	movwf	(___xxtofl@val+3)^0,c
  3881  00341E  0E01               	movlw	1
  3882  003420  ECB6  F01A         	call	___xxtofl
  3883  003424  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3884  003428  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3885  00342C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3886  003430  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3887  003434  ECB3  F00F         	call	___flmul	;wreg free
  3888  003438  C01C  F039         	movff	?___flmul,___fladd@a
  3889  00343C  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  3890  003440  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  3891  003444  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  3892  003448  0ECD               	movlw	205
  3893  00344A  6E20               	movwf	___flmul@a^0,c
  3894  00344C  0ECC               	movlw	204
  3895  00344E  6E21               	movwf	(___flmul@a+1)^0,c
  3896  003450  0E4C               	movlw	76
  3897  003452  6E22               	movwf	(___flmul@a+2)^0,c
  3898  003454  0E3E               	movlw	62
  3899  003456  6E23               	movwf	(___flmul@a+3)^0,c
  3900  003458  C150  F00E         	movff	_controller,___xxtofl@val
  3901  00345C  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  3902  003460  0E00               	movlw	0
  3903  003462  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  3904  003464  0EFF               	movlw	-1
  3905  003466  6E10               	movwf	(___xxtofl@val+2)^0,c
  3906  003468  6E11               	movwf	(___xxtofl@val+3)^0,c
  3907  00346A  0E01               	movlw	1
  3908  00346C  ECB6  F01A         	call	___xxtofl
  3909  003470  C00E  F01C         	movff	?___xxtofl,___flmul@b
  3910  003474  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  3911  003478  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  3912  00347C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  3913  003480  ECB3  F00F         	call	___flmul	;wreg free
  3914  003484  C01C  F035         	movff	?___flmul,___fladd@b
  3915  003488  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  3916  00348C  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  3917  003490  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  3918  003494  EC53  F00D         	call	___fladd	;wreg free
  3919  003498  C035  F04E         	movff	?___fladd,___fltol@f1
  3920  00349C  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  3921  0034A0  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  3922  0034A4  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  3923  0034A8  EC6B  F021         	call	___fltol	;wreg free
  3924  0034AC  C04E  F154         	movff	?___fltol,_controller+4
  3925  0034B0  C04F  F155         	movff	?___fltol+1,_controller+5
  3926  0034B4                     
  3927                           ;fs_speed_controller.c: 44:     controller.lastError = controller.error;
  3928  0034B4  C150  F152         	movff	_controller,_controller+2
  3929  0034B8  C151  F153         	movff	_controller+1,_controller+3
  3930  0034BC                     
  3931                           ;fs_speed_controller.c: 46:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  3932  0034BC  0E0E               	movlw	14
  3933  0034BE  0101               	movlb	1	; () banked
  3934  0034C0  2554               	addwf	(_controller+4)& (0+255),w,b
  3935  0034C2  6F56               	movwf	(_controller+6)& (0+255),b
  3936  0034C4  0E01               	movlw	1
  3937  0034C6  2155               	addwfc	(_controller+5)& (0+255),w,b
  3938  0034C8  6F57               	movwf	(_controller+7)& (0+255),b
  3939  0034CA                     
  3940                           ; BSR set to: 1
  3941                           ;fs_speed_controller.c: 47:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  3942  0034CA  5154               	movf	(_controller+4)& (0+255),w,b
  3943  0034CC  08C8               	sublw	200
  3944  0034CE  6F58               	movwf	(_controller+8)& (0+255),b
  3945  0034D0  5155               	movf	(_controller+5)& (0+255),w,b
  3946  0034D2  A0D8               	btfss	status,0,c
  3947  0034D4  2AE8               	incf	wreg,f,c
  3948  0034D6  0800               	sublw	0
  3949  0034D8  6F59               	movwf	(_controller+9)& (0+255),b
  3950  0034DA                     
  3951                           ; BSR set to: 1
  3952                           ;fs_speed_controller.c: 49:     if (controller.leftMotorSpeed < 50)
  3953  0034DA  BF57               	btfsc	(_controller+7)& (0+255),7,b
  3954  0034DC  EF7B  F01A         	goto	u6830
  3955  0034E0  5157               	movf	(_controller+7)& (0+255),w,b
  3956  0034E2  E107               	bnz	u6831
  3957  0034E4  0E32               	movlw	50
  3958  0034E6  5D56               	subwf	(_controller+6)& (0+255),w,b
  3959  0034E8  B0D8               	btfsc	status,0,c
  3960  0034EA  EF79  F01A         	goto	u6831
  3961  0034EE  EF7B  F01A         	goto	u6830
  3962  0034F2                     u6831:
  3963  0034F2  EF7F  F01A         	goto	l5847
  3964  0034F6                     u6830:
  3965  0034F6                     
  3966                           ; BSR set to: 1
  3967                           ;fs_speed_controller.c: 50:     {;fs_speed_controller.c: 51:         controller.leftMoto
      +                          rSpeed = 50;
  3968  0034F6  0E00               	movlw	0
  3969  0034F8  6F57               	movwf	(_controller+7)& (0+255),b
  3970  0034FA  0E32               	movlw	50
  3971  0034FC  6F56               	movwf	(_controller+6)& (0+255),b
  3972  0034FE                     l5847:
  3973                           
  3974                           ; BSR set to: 1
  3975                           ;fs_speed_controller.c: 54:     if (controller.rightMotorSpeed < 50)
  3976  0034FE  BF59               	btfsc	(_controller+9)& (0+255),7,b
  3977  003500  EF8D  F01A         	goto	u6840
  3978  003504  5159               	movf	(_controller+9)& (0+255),w,b
  3979  003506  E107               	bnz	u6841
  3980  003508  0E32               	movlw	50
  3981  00350A  5D58               	subwf	(_controller+8)& (0+255),w,b
  3982  00350C  B0D8               	btfsc	status,0,c
  3983  00350E  EF8B  F01A         	goto	u6841
  3984  003512  EF8D  F01A         	goto	u6840
  3985  003516                     u6841:
  3986  003516  EF91  F01A         	goto	l5851
  3987  00351A                     u6840:
  3988  00351A                     
  3989                           ; BSR set to: 1
  3990                           ;fs_speed_controller.c: 55:     {;fs_speed_controller.c: 56:       controller.rightMotor
      +                          Speed = 50;
  3991  00351A  0E00               	movlw	0
  3992  00351C  6F59               	movwf	(_controller+9)& (0+255),b
  3993  00351E  0E32               	movlw	50
  3994  003520  6F58               	movwf	(_controller+8)& (0+255),b
  3995  003522                     l5851:
  3996                           
  3997                           ; BSR set to: 1
  3998                           ;fs_speed_controller.c: 59:     if (controller.leftMotorSpeed > 350)
  3999  003522  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4000  003524  EF9D  F01A         	goto	u6851
  4001  003528  0E5F               	movlw	95
  4002  00352A  5D56               	subwf	(_controller+6)& (0+255),w,b
  4003  00352C  0E01               	movlw	1
  4004  00352E  5957               	subwfb	(_controller+7)& (0+255),w,b
  4005  003530  A0D8               	btfss	status,0,c
  4006  003532  EF9D  F01A         	goto	u6851
  4007  003536  EF9F  F01A         	goto	u6850
  4008  00353A                     u6851:
  4009  00353A  EFA3  F01A         	goto	l5855
  4010  00353E                     u6850:
  4011  00353E                     
  4012                           ; BSR set to: 1
  4013                           ;fs_speed_controller.c: 60:    {;fs_speed_controller.c: 61:         controller.leftMotor
      +                          Speed = 350;
  4014  00353E  0E01               	movlw	1
  4015  003540  6F57               	movwf	(_controller+7)& (0+255),b
  4016  003542  0E5E               	movlw	94
  4017  003544  6F56               	movwf	(_controller+6)& (0+255),b
  4018  003546                     l5855:
  4019                           
  4020                           ; BSR set to: 1
  4021                           ;fs_speed_controller.c: 64:     if (controller.rightMotorSpeed > 350)
  4022  003546  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4023  003548  EFAF  F01A         	goto	u6861
  4024  00354C  0E5F               	movlw	95
  4025  00354E  5D58               	subwf	(_controller+8)& (0+255),w,b
  4026  003550  0E01               	movlw	1
  4027  003552  5959               	subwfb	(_controller+9)& (0+255),w,b
  4028  003554  A0D8               	btfss	status,0,c
  4029  003556  EFAF  F01A         	goto	u6861
  4030  00355A  EFB1  F01A         	goto	u6860
  4031  00355E                     u6861:
  4032  00355E  EFB5  F01A         	goto	l633
  4033  003562                     u6860:
  4034  003562                     
  4035                           ; BSR set to: 1
  4036                           ;fs_speed_controller.c: 65:     {;fs_speed_controller.c: 66:         controller.rightMot
      +                          orSpeed = 350;
  4037  003562  0E01               	movlw	1
  4038  003564  6F59               	movwf	(_controller+9)& (0+255),b
  4039  003566  0E5E               	movlw	94
  4040  003568  6F58               	movwf	(_controller+8)& (0+255),b
  4041  00356A                     l633:
  4042                           
  4043                           ; BSR set to: 1
  4044  00356A  0012               	return		;funcret
  4045  00356C                     __end_of_speedControl:
  4046                           	callstack 0
  4047                           
  4048 ;; *************** function _scanAdcConversion *****************
  4049 ;; Defined at:
  4050 ;;		line 93 in file "fs_adc.c"
  4051 ;; Parameters:    Size  Location     Type
  4052 ;;		None
  4053 ;; Auto vars:     Size  Location     Type
  4054 ;;		None
  4055 ;; Return value:  Size  Location     Type
  4056 ;;                  1    wreg      void 
  4057 ;; Registers used:
  4058 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4059 ;; Tracked objects:
  4060 ;;		On entry : 0/0
  4061 ;;		On exit  : 0/0
  4062 ;;		Unchanged: 0/0
  4063 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4064 ;;      Params:         0       0       0       0       0       0       0
  4065 ;;      Locals:         0       0       0       0       0       0       0
  4066 ;;      Temps:          2       0       0       0       0       0       0
  4067 ;;      Totals:         2       0       0       0       0       0       0
  4068 ;;Total ram usage:        2 bytes
  4069 ;; Hardware stack levels used:    1
  4070 ;; Hardware stack levels required when called:    2
  4071 ;; This function calls:
  4072 ;;		___fldiv
  4073 ;;		___flmul
  4074 ;;		___fltol
  4075 ;;		___xxtofl
  4076 ;;		_readAdcValue
  4077 ;; This function is called by:
  4078 ;;		_startMotor
  4079 ;; This function uses a non-reentrant model
  4080 ;;
  4081                           
  4082                           	psect	text13
  4083  000C62                     __ptext13:
  4084                           	callstack 0
  4085  000C62                     _scanAdcConversion:
  4086                           	callstack 24
  4087  000C62                     
  4088                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  4089  000C62  EF05  F00A         	goto	l5765
  4090  000C66                     l5713:
  4091                           
  4092                           ; BSR set to: 1
  4093                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4094  000C66  0E00               	movlw	0
  4095  000C68  ECDA  F029         	call	_readAdcValue
  4096  000C6C  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4097  000C70  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4098  000C74                     
  4099                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4100  000C74  0E00               	movlw	0
  4101  000C76  6E20               	movwf	___flmul@a^0,c
  4102  000C78  0E00               	movlw	0
  4103  000C7A  6E21               	movwf	(___flmul@a+1)^0,c
  4104  000C7C  0EA0               	movlw	160
  4105  000C7E  6E22               	movwf	(___flmul@a+2)^0,c
  4106  000C80  0E40               	movlw	64
  4107  000C82  6E23               	movwf	(___flmul@a+3)^0,c
  4108  000C84  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4109  000C88  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4110  000C8C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4111  000C8E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4112  000C90  0E00               	movlw	0
  4113  000C92  ECB6  F01A         	call	___xxtofl
  4114  000C96  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4115  000C9A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4116  000C9E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4117  000CA2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4118  000CA6  ECB3  F00F         	call	___flmul	;wreg free
  4119  000CAA  C01C  F035         	movff	?___flmul,___fldiv@b
  4120  000CAE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4121  000CB2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4122  000CB6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4123  000CBA  0E00               	movlw	0
  4124  000CBC  6E39               	movwf	___fldiv@a^0,c
  4125  000CBE  0E00               	movlw	0
  4126  000CC0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4127  000CC2  0E80               	movlw	128
  4128  000CC4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4129  000CC6  0E44               	movlw	68
  4130  000CC8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4131  000CCA  ECC8  F011         	call	___fldiv	;wreg free
  4132  000CCE  C035  F130         	movff	?___fldiv,_procces_data
  4133  000CD2  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4134  000CD6  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4135  000CDA  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4136  000CDE                     
  4137                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4138  000CDE  0E00               	movlw	0
  4139  000CE0  6E39               	movwf	___fldiv@a^0,c
  4140  000CE2  0E00               	movlw	0
  4141  000CE4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4142  000CE6  0EA0               	movlw	160
  4143  000CE8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4144  000CEA  0E40               	movlw	64
  4145  000CEC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4146  000CEE  0E00               	movlw	0
  4147  000CF0  6E20               	movwf	___flmul@a^0,c
  4148  000CF2  0EC0               	movlw	192
  4149  000CF4  6E21               	movwf	(___flmul@a+1)^0,c
  4150  000CF6  0E79               	movlw	121
  4151  000CF8  6E22               	movwf	(___flmul@a+2)^0,c
  4152  000CFA  0E44               	movlw	68
  4153  000CFC  6E23               	movwf	(___flmul@a+3)^0,c
  4154  000CFE  C130  F01C         	movff	_procces_data,___flmul@b
  4155  000D02  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4156  000D06  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4157  000D0A  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4158  000D0E  ECB3  F00F         	call	___flmul	;wreg free
  4159  000D12  C01C  F035         	movff	?___flmul,___fldiv@b
  4160  000D16  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4161  000D1A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4162  000D1E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4163  000D22  ECC8  F011         	call	___fldiv	;wreg free
  4164  000D26  C035  F04E         	movff	?___fldiv,___fltol@f1
  4165  000D2A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4166  000D2E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4167  000D32  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4168  000D36  EC6B  F021         	call	___fltol	;wreg free
  4169  000D3A  C04E  F100         	movff	?___fltol,_convert_data
  4170  000D3E  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4171  000D42  C050  F102         	movff	?___fltol+2,_convert_data+2
  4172  000D46  C051  F103         	movff	?___fltol+3,_convert_data+3
  4173                           
  4174                           ;fs_adc.c: 101:         break;
  4175  000D4A  EF33  F00A         	goto	l76
  4176  000D4E                     l5719:
  4177                           
  4178                           ; BSR set to: 1
  4179                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4180  000D4E  0E01               	movlw	1
  4181  000D50  ECDA  F029         	call	_readAdcValue
  4182  000D54  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4183  000D58  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4184  000D5C                     
  4185                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4186  000D5C  0E00               	movlw	0
  4187  000D5E  6E20               	movwf	___flmul@a^0,c
  4188  000D60  0E00               	movlw	0
  4189  000D62  6E21               	movwf	(___flmul@a+1)^0,c
  4190  000D64  0EA0               	movlw	160
  4191  000D66  6E22               	movwf	(___flmul@a+2)^0,c
  4192  000D68  0E40               	movlw	64
  4193  000D6A  6E23               	movwf	(___flmul@a+3)^0,c
  4194  000D6C  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4195  000D70  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4196  000D74  6A10               	clrf	(___xxtofl@val+2)^0,c
  4197  000D76  6A11               	clrf	(___xxtofl@val+3)^0,c
  4198  000D78  0E00               	movlw	0
  4199  000D7A  ECB6  F01A         	call	___xxtofl
  4200  000D7E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4201  000D82  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4202  000D86  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4203  000D8A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4204  000D8E  ECB3  F00F         	call	___flmul	;wreg free
  4205  000D92  C01C  F035         	movff	?___flmul,___fldiv@b
  4206  000D96  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4207  000D9A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4208  000D9E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4209  000DA2  0E00               	movlw	0
  4210  000DA4  6E39               	movwf	___fldiv@a^0,c
  4211  000DA6  0E00               	movlw	0
  4212  000DA8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4213  000DAA  0E80               	movlw	128
  4214  000DAC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4215  000DAE  0E44               	movlw	68
  4216  000DB0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4217  000DB2  ECC8  F011         	call	___fldiv	;wreg free
  4218  000DB6  C035  F134         	movff	?___fldiv,_procces_data+4
  4219  000DBA  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4220  000DBE  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4221  000DC2  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4222  000DC6                     
  4223                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4224  000DC6  0E00               	movlw	0
  4225  000DC8  6E39               	movwf	___fldiv@a^0,c
  4226  000DCA  0E00               	movlw	0
  4227  000DCC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4228  000DCE  0EA0               	movlw	160
  4229  000DD0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4230  000DD2  0E40               	movlw	64
  4231  000DD4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4232  000DD6  0E00               	movlw	0
  4233  000DD8  6E20               	movwf	___flmul@a^0,c
  4234  000DDA  0EC0               	movlw	192
  4235  000DDC  6E21               	movwf	(___flmul@a+1)^0,c
  4236  000DDE  0E79               	movlw	121
  4237  000DE0  6E22               	movwf	(___flmul@a+2)^0,c
  4238  000DE2  0E44               	movlw	68
  4239  000DE4  6E23               	movwf	(___flmul@a+3)^0,c
  4240  000DE6  C134  F01C         	movff	_procces_data+4,___flmul@b
  4241  000DEA  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4242  000DEE  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4243  000DF2  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4244  000DF6  ECB3  F00F         	call	___flmul	;wreg free
  4245  000DFA  C01C  F035         	movff	?___flmul,___fldiv@b
  4246  000DFE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4247  000E02  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4248  000E06  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4249  000E0A  ECC8  F011         	call	___fldiv	;wreg free
  4250  000E0E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4251  000E12  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4252  000E16  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4253  000E1A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4254  000E1E  EC6B  F021         	call	___fltol	;wreg free
  4255  000E22  C04E  F104         	movff	?___fltol,_convert_data+4
  4256  000E26  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4257  000E2A  C050  F106         	movff	?___fltol+2,_convert_data+6
  4258  000E2E  C051  F107         	movff	?___fltol+3,_convert_data+7
  4259                           
  4260                           ;fs_adc.c: 107:         break;
  4261  000E32  EF33  F00A         	goto	l76
  4262  000E36                     l5725:
  4263                           
  4264                           ; BSR set to: 1
  4265                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4266  000E36  0E02               	movlw	2
  4267  000E38  ECDA  F029         	call	_readAdcValue
  4268  000E3C  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4269  000E40  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4270  000E44                     
  4271                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4272  000E44  0E00               	movlw	0
  4273  000E46  6E20               	movwf	___flmul@a^0,c
  4274  000E48  0E00               	movlw	0
  4275  000E4A  6E21               	movwf	(___flmul@a+1)^0,c
  4276  000E4C  0EA0               	movlw	160
  4277  000E4E  6E22               	movwf	(___flmul@a+2)^0,c
  4278  000E50  0E40               	movlw	64
  4279  000E52  6E23               	movwf	(___flmul@a+3)^0,c
  4280  000E54  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4281  000E58  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4282  000E5C  6A10               	clrf	(___xxtofl@val+2)^0,c
  4283  000E5E  6A11               	clrf	(___xxtofl@val+3)^0,c
  4284  000E60  0E00               	movlw	0
  4285  000E62  ECB6  F01A         	call	___xxtofl
  4286  000E66  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4287  000E6A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4288  000E6E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4289  000E72  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4290  000E76  ECB3  F00F         	call	___flmul	;wreg free
  4291  000E7A  C01C  F035         	movff	?___flmul,___fldiv@b
  4292  000E7E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4293  000E82  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4294  000E86  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4295  000E8A  0E00               	movlw	0
  4296  000E8C  6E39               	movwf	___fldiv@a^0,c
  4297  000E8E  0E00               	movlw	0
  4298  000E90  6E3A               	movwf	(___fldiv@a+1)^0,c
  4299  000E92  0E80               	movlw	128
  4300  000E94  6E3B               	movwf	(___fldiv@a+2)^0,c
  4301  000E96  0E44               	movlw	68
  4302  000E98  6E3C               	movwf	(___fldiv@a+3)^0,c
  4303  000E9A  ECC8  F011         	call	___fldiv	;wreg free
  4304  000E9E  C035  F138         	movff	?___fldiv,_procces_data+8
  4305  000EA2  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4306  000EA6  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4307  000EAA  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4308  000EAE                     
  4309                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4310  000EAE  0E00               	movlw	0
  4311  000EB0  6E39               	movwf	___fldiv@a^0,c
  4312  000EB2  0E00               	movlw	0
  4313  000EB4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4314  000EB6  0EA0               	movlw	160
  4315  000EB8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4316  000EBA  0E40               	movlw	64
  4317  000EBC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4318  000EBE  0E00               	movlw	0
  4319  000EC0  6E20               	movwf	___flmul@a^0,c
  4320  000EC2  0EC0               	movlw	192
  4321  000EC4  6E21               	movwf	(___flmul@a+1)^0,c
  4322  000EC6  0E79               	movlw	121
  4323  000EC8  6E22               	movwf	(___flmul@a+2)^0,c
  4324  000ECA  0E44               	movlw	68
  4325  000ECC  6E23               	movwf	(___flmul@a+3)^0,c
  4326  000ECE  C138  F01C         	movff	_procces_data+8,___flmul@b
  4327  000ED2  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4328  000ED6  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4329  000EDA  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4330  000EDE  ECB3  F00F         	call	___flmul	;wreg free
  4331  000EE2  C01C  F035         	movff	?___flmul,___fldiv@b
  4332  000EE6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4333  000EEA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4334  000EEE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4335  000EF2  ECC8  F011         	call	___fldiv	;wreg free
  4336  000EF6  C035  F04E         	movff	?___fldiv,___fltol@f1
  4337  000EFA  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4338  000EFE  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4339  000F02  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4340  000F06  EC6B  F021         	call	___fltol	;wreg free
  4341  000F0A  C04E  F108         	movff	?___fltol,_convert_data+8
  4342  000F0E  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4343  000F12  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4344  000F16  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4345  000F1A                     
  4346                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4347  000F1A  0E00               	movlw	0
  4348  000F1C  6E39               	movwf	___fldiv@a^0,c
  4349  000F1E  0E00               	movlw	0
  4350  000F20  6E3A               	movwf	(___fldiv@a+1)^0,c
  4351  000F22  0EA0               	movlw	160
  4352  000F24  6E3B               	movwf	(___fldiv@a+2)^0,c
  4353  000F26  0E40               	movlw	64
  4354  000F28  6E3C               	movwf	(___fldiv@a+3)^0,c
  4355  000F2A  0E00               	movlw	0
  4356  000F2C  6E20               	movwf	___flmul@a^0,c
  4357  000F2E  0EC0               	movlw	192
  4358  000F30  6E21               	movwf	(___flmul@a+1)^0,c
  4359  000F32  0E79               	movlw	121
  4360  000F34  6E22               	movwf	(___flmul@a+2)^0,c
  4361  000F36  0E44               	movlw	68
  4362  000F38  6E23               	movwf	(___flmul@a+3)^0,c
  4363  000F3A  C138  F01C         	movff	_procces_data+8,___flmul@b
  4364  000F3E  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4365  000F42  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4366  000F46  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4367  000F4A  ECB3  F00F         	call	___flmul	;wreg free
  4368  000F4E  C01C  F035         	movff	?___flmul,___fldiv@b
  4369  000F52  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4370  000F56  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4371  000F5A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4372  000F5E  ECC8  F011         	call	___fldiv	;wreg free
  4373  000F62  C035  F04E         	movff	?___fldiv,___fltol@f1
  4374  000F66  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4375  000F6A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4376  000F6E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4377  000F72  EC6B  F021         	call	___fltol	;wreg free
  4378  000F76  C04E  F124         	movff	?___fltol,_convert_data+36
  4379  000F7A  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4380                           
  4381                           ;fs_adc.c: 114:         break;
  4382  000F7E  EF33  F00A         	goto	l76
  4383  000F82                     l5733:
  4384                           
  4385                           ; BSR set to: 1
  4386                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4387  000F82  0E03               	movlw	3
  4388  000F84  ECDA  F029         	call	_readAdcValue
  4389  000F88  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4390  000F8C  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4391  000F90                     
  4392                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4393  000F90  0E00               	movlw	0
  4394  000F92  6E20               	movwf	___flmul@a^0,c
  4395  000F94  0E00               	movlw	0
  4396  000F96  6E21               	movwf	(___flmul@a+1)^0,c
  4397  000F98  0EA0               	movlw	160
  4398  000F9A  6E22               	movwf	(___flmul@a+2)^0,c
  4399  000F9C  0E40               	movlw	64
  4400  000F9E  6E23               	movwf	(___flmul@a+3)^0,c
  4401  000FA0  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4402  000FA4  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4403  000FA8  6A10               	clrf	(___xxtofl@val+2)^0,c
  4404  000FAA  6A11               	clrf	(___xxtofl@val+3)^0,c
  4405  000FAC  0E00               	movlw	0
  4406  000FAE  ECB6  F01A         	call	___xxtofl
  4407  000FB2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4408  000FB6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4409  000FBA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4410  000FBE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4411  000FC2  ECB3  F00F         	call	___flmul	;wreg free
  4412  000FC6  C01C  F035         	movff	?___flmul,___fldiv@b
  4413  000FCA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4414  000FCE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4415  000FD2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4416  000FD6  0E00               	movlw	0
  4417  000FD8  6E39               	movwf	___fldiv@a^0,c
  4418  000FDA  0E00               	movlw	0
  4419  000FDC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4420  000FDE  0E80               	movlw	128
  4421  000FE0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4422  000FE2  0E44               	movlw	68
  4423  000FE4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4424  000FE6  ECC8  F011         	call	___fldiv	;wreg free
  4425  000FEA  C035  F13C         	movff	?___fldiv,_procces_data+12
  4426  000FEE  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4427  000FF2  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4428  000FF6  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4429  000FFA                     
  4430                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4431  000FFA  0E00               	movlw	0
  4432  000FFC  6E39               	movwf	___fldiv@a^0,c
  4433  000FFE  0E00               	movlw	0
  4434  001000  6E3A               	movwf	(___fldiv@a+1)^0,c
  4435  001002  0EA0               	movlw	160
  4436  001004  6E3B               	movwf	(___fldiv@a+2)^0,c
  4437  001006  0E40               	movlw	64
  4438  001008  6E3C               	movwf	(___fldiv@a+3)^0,c
  4439  00100A  0E00               	movlw	0
  4440  00100C  6E20               	movwf	___flmul@a^0,c
  4441  00100E  0EC0               	movlw	192
  4442  001010  6E21               	movwf	(___flmul@a+1)^0,c
  4443  001012  0E79               	movlw	121
  4444  001014  6E22               	movwf	(___flmul@a+2)^0,c
  4445  001016  0E44               	movlw	68
  4446  001018  6E23               	movwf	(___flmul@a+3)^0,c
  4447  00101A  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4448  00101E  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4449  001022  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4450  001026  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4451  00102A  ECB3  F00F         	call	___flmul	;wreg free
  4452  00102E  C01C  F035         	movff	?___flmul,___fldiv@b
  4453  001032  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4454  001036  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4455  00103A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4456  00103E  ECC8  F011         	call	___fldiv	;wreg free
  4457  001042  C035  F04E         	movff	?___fldiv,___fltol@f1
  4458  001046  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4459  00104A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4460  00104E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4461  001052  EC6B  F021         	call	___fltol	;wreg free
  4462  001056  C04E  F10C         	movff	?___fltol,_convert_data+12
  4463  00105A  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4464  00105E  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4465  001062  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4466                           
  4467                           ;fs_adc.c: 120:         break;
  4468  001066  EF33  F00A         	goto	l76
  4469  00106A                     l5739:
  4470                           
  4471                           ; BSR set to: 1
  4472                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4473  00106A  0E04               	movlw	4
  4474  00106C  ECDA  F029         	call	_readAdcValue
  4475  001070  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  4476  001074  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4477  001078                     
  4478                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4479  001078  0E00               	movlw	0
  4480  00107A  6E20               	movwf	___flmul@a^0,c
  4481  00107C  0E00               	movlw	0
  4482  00107E  6E21               	movwf	(___flmul@a+1)^0,c
  4483  001080  0EA0               	movlw	160
  4484  001082  6E22               	movwf	(___flmul@a+2)^0,c
  4485  001084  0E40               	movlw	64
  4486  001086  6E23               	movwf	(___flmul@a+3)^0,c
  4487  001088  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4488  00108C  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4489  001090  6A10               	clrf	(___xxtofl@val+2)^0,c
  4490  001092  6A11               	clrf	(___xxtofl@val+3)^0,c
  4491  001094  0E00               	movlw	0
  4492  001096  ECB6  F01A         	call	___xxtofl
  4493  00109A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4494  00109E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4495  0010A2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4496  0010A6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4497  0010AA  ECB3  F00F         	call	___flmul	;wreg free
  4498  0010AE  C01C  F035         	movff	?___flmul,___fldiv@b
  4499  0010B2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4500  0010B6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4501  0010BA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4502  0010BE  0E00               	movlw	0
  4503  0010C0  6E39               	movwf	___fldiv@a^0,c
  4504  0010C2  0E00               	movlw	0
  4505  0010C4  6E3A               	movwf	(___fldiv@a+1)^0,c
  4506  0010C6  0E80               	movlw	128
  4507  0010C8  6E3B               	movwf	(___fldiv@a+2)^0,c
  4508  0010CA  0E44               	movlw	68
  4509  0010CC  6E3C               	movwf	(___fldiv@a+3)^0,c
  4510  0010CE  ECC8  F011         	call	___fldiv	;wreg free
  4511  0010D2  C035  F140         	movff	?___fldiv,_procces_data+16
  4512  0010D6  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4513  0010DA  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4514  0010DE  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4515  0010E2                     
  4516                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4517  0010E2  0E00               	movlw	0
  4518  0010E4  6E39               	movwf	___fldiv@a^0,c
  4519  0010E6  0E00               	movlw	0
  4520  0010E8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4521  0010EA  0EA0               	movlw	160
  4522  0010EC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4523  0010EE  0E40               	movlw	64
  4524  0010F0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4525  0010F2  0E00               	movlw	0
  4526  0010F4  6E20               	movwf	___flmul@a^0,c
  4527  0010F6  0EC0               	movlw	192
  4528  0010F8  6E21               	movwf	(___flmul@a+1)^0,c
  4529  0010FA  0E79               	movlw	121
  4530  0010FC  6E22               	movwf	(___flmul@a+2)^0,c
  4531  0010FE  0E44               	movlw	68
  4532  001100  6E23               	movwf	(___flmul@a+3)^0,c
  4533  001102  C140  F01C         	movff	_procces_data+16,___flmul@b
  4534  001106  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4535  00110A  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4536  00110E  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4537  001112  ECB3  F00F         	call	___flmul	;wreg free
  4538  001116  C01C  F035         	movff	?___flmul,___fldiv@b
  4539  00111A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4540  00111E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4541  001122  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4542  001126  ECC8  F011         	call	___fldiv	;wreg free
  4543  00112A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4544  00112E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4545  001132  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4546  001136  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4547  00113A  EC6B  F021         	call	___fltol	;wreg free
  4548  00113E  C04E  F110         	movff	?___fltol,_convert_data+16
  4549  001142  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4550  001146  C050  F112         	movff	?___fltol+2,_convert_data+18
  4551  00114A  C051  F113         	movff	?___fltol+3,_convert_data+19
  4552                           
  4553                           ;fs_adc.c: 126:         break;
  4554  00114E  EF33  F00A         	goto	l76
  4555  001152                     l5745:
  4556                           
  4557                           ; BSR set to: 1
  4558                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4559  001152  0E05               	movlw	5
  4560  001154  ECDA  F029         	call	_readAdcValue
  4561  001158  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  4562  00115C  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4563  001160                     
  4564                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4565  001160  0E00               	movlw	0
  4566  001162  6E20               	movwf	___flmul@a^0,c
  4567  001164  0E00               	movlw	0
  4568  001166  6E21               	movwf	(___flmul@a+1)^0,c
  4569  001168  0EA0               	movlw	160
  4570  00116A  6E22               	movwf	(___flmul@a+2)^0,c
  4571  00116C  0E40               	movlw	64
  4572  00116E  6E23               	movwf	(___flmul@a+3)^0,c
  4573  001170  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4574  001174  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4575  001178  6A10               	clrf	(___xxtofl@val+2)^0,c
  4576  00117A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4577  00117C  0E00               	movlw	0
  4578  00117E  ECB6  F01A         	call	___xxtofl
  4579  001182  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4580  001186  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4581  00118A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4582  00118E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4583  001192  ECB3  F00F         	call	___flmul	;wreg free
  4584  001196  C01C  F035         	movff	?___flmul,___fldiv@b
  4585  00119A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4586  00119E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4587  0011A2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4588  0011A6  0E00               	movlw	0
  4589  0011A8  6E39               	movwf	___fldiv@a^0,c
  4590  0011AA  0E00               	movlw	0
  4591  0011AC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4592  0011AE  0E80               	movlw	128
  4593  0011B0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4594  0011B2  0E44               	movlw	68
  4595  0011B4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4596  0011B6  ECC8  F011         	call	___fldiv	;wreg free
  4597  0011BA  C035  F144         	movff	?___fldiv,_procces_data+20
  4598  0011BE  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4599  0011C2  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4600  0011C6  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4601  0011CA                     
  4602                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4603  0011CA  0E00               	movlw	0
  4604  0011CC  6E39               	movwf	___fldiv@a^0,c
  4605  0011CE  0E00               	movlw	0
  4606  0011D0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4607  0011D2  0EA0               	movlw	160
  4608  0011D4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4609  0011D6  0E40               	movlw	64
  4610  0011D8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4611  0011DA  0E00               	movlw	0
  4612  0011DC  6E20               	movwf	___flmul@a^0,c
  4613  0011DE  0EC0               	movlw	192
  4614  0011E0  6E21               	movwf	(___flmul@a+1)^0,c
  4615  0011E2  0E79               	movlw	121
  4616  0011E4  6E22               	movwf	(___flmul@a+2)^0,c
  4617  0011E6  0E44               	movlw	68
  4618  0011E8  6E23               	movwf	(___flmul@a+3)^0,c
  4619  0011EA  C144  F01C         	movff	_procces_data+20,___flmul@b
  4620  0011EE  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4621  0011F2  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4622  0011F6  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4623  0011FA  ECB3  F00F         	call	___flmul	;wreg free
  4624  0011FE  C01C  F035         	movff	?___flmul,___fldiv@b
  4625  001202  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4626  001206  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4627  00120A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4628  00120E  ECC8  F011         	call	___fldiv	;wreg free
  4629  001212  C035  F04E         	movff	?___fldiv,___fltol@f1
  4630  001216  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4631  00121A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4632  00121E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4633  001222  EC6B  F021         	call	___fltol	;wreg free
  4634  001226  C04E  F114         	movff	?___fltol,_convert_data+20
  4635  00122A  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4636  00122E  C050  F116         	movff	?___fltol+2,_convert_data+22
  4637  001232  C051  F117         	movff	?___fltol+3,_convert_data+23
  4638                           
  4639                           ;fs_adc.c: 132:         break;
  4640  001236  EF33  F00A         	goto	l76
  4641  00123A                     l5751:
  4642                           
  4643                           ; BSR set to: 1
  4644                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4645  00123A  0E06               	movlw	6
  4646  00123C  ECDA  F029         	call	_readAdcValue
  4647  001240  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  4648  001244  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  4649  001248                     
  4650                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4651  001248  0E00               	movlw	0
  4652  00124A  6E20               	movwf	___flmul@a^0,c
  4653  00124C  0E00               	movlw	0
  4654  00124E  6E21               	movwf	(___flmul@a+1)^0,c
  4655  001250  0EA0               	movlw	160
  4656  001252  6E22               	movwf	(___flmul@a+2)^0,c
  4657  001254  0E40               	movlw	64
  4658  001256  6E23               	movwf	(___flmul@a+3)^0,c
  4659  001258  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4660  00125C  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4661  001260  6A10               	clrf	(___xxtofl@val+2)^0,c
  4662  001262  6A11               	clrf	(___xxtofl@val+3)^0,c
  4663  001264  0E00               	movlw	0
  4664  001266  ECB6  F01A         	call	___xxtofl
  4665  00126A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4666  00126E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4667  001272  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4668  001276  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4669  00127A  ECB3  F00F         	call	___flmul	;wreg free
  4670  00127E  C01C  F035         	movff	?___flmul,___fldiv@b
  4671  001282  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4672  001286  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4673  00128A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4674  00128E  0E00               	movlw	0
  4675  001290  6E39               	movwf	___fldiv@a^0,c
  4676  001292  0E00               	movlw	0
  4677  001294  6E3A               	movwf	(___fldiv@a+1)^0,c
  4678  001296  0E80               	movlw	128
  4679  001298  6E3B               	movwf	(___fldiv@a+2)^0,c
  4680  00129A  0E44               	movlw	68
  4681  00129C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4682  00129E  ECC8  F011         	call	___fldiv	;wreg free
  4683  0012A2  C035  F148         	movff	?___fldiv,_procces_data+24
  4684  0012A6  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4685  0012AA  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4686  0012AE  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4687  0012B2                     
  4688                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4689  0012B2  0E00               	movlw	0
  4690  0012B4  6E39               	movwf	___fldiv@a^0,c
  4691  0012B6  0E00               	movlw	0
  4692  0012B8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4693  0012BA  0EA0               	movlw	160
  4694  0012BC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4695  0012BE  0E40               	movlw	64
  4696  0012C0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4697  0012C2  0E00               	movlw	0
  4698  0012C4  6E20               	movwf	___flmul@a^0,c
  4699  0012C6  0EC0               	movlw	192
  4700  0012C8  6E21               	movwf	(___flmul@a+1)^0,c
  4701  0012CA  0E79               	movlw	121
  4702  0012CC  6E22               	movwf	(___flmul@a+2)^0,c
  4703  0012CE  0E44               	movlw	68
  4704  0012D0  6E23               	movwf	(___flmul@a+3)^0,c
  4705  0012D2  C148  F01C         	movff	_procces_data+24,___flmul@b
  4706  0012D6  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4707  0012DA  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4708  0012DE  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4709  0012E2  ECB3  F00F         	call	___flmul	;wreg free
  4710  0012E6  C01C  F035         	movff	?___flmul,___fldiv@b
  4711  0012EA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4712  0012EE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4713  0012F2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4714  0012F6  ECC8  F011         	call	___fldiv	;wreg free
  4715  0012FA  C035  F04E         	movff	?___fldiv,___fltol@f1
  4716  0012FE  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4717  001302  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4718  001306  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4719  00130A  EC6B  F021         	call	___fltol	;wreg free
  4720  00130E  C04E  F118         	movff	?___fltol,_convert_data+24
  4721  001312  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4722  001316  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4723  00131A  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4724                           
  4725                           ;fs_adc.c: 138:         break;
  4726  00131E  EF33  F00A         	goto	l76
  4727  001322                     l5757:
  4728                           
  4729                           ; BSR set to: 1
  4730                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4731  001322  0E07               	movlw	7
  4732  001324  ECDA  F029         	call	_readAdcValue
  4733  001328  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  4734  00132C  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  4735  001330                     
  4736                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4737  001330  0E00               	movlw	0
  4738  001332  6E20               	movwf	___flmul@a^0,c
  4739  001334  0E00               	movlw	0
  4740  001336  6E21               	movwf	(___flmul@a+1)^0,c
  4741  001338  0EA0               	movlw	160
  4742  00133A  6E22               	movwf	(___flmul@a+2)^0,c
  4743  00133C  0E40               	movlw	64
  4744  00133E  6E23               	movwf	(___flmul@a+3)^0,c
  4745  001340  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4746  001344  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4747  001348  6A10               	clrf	(___xxtofl@val+2)^0,c
  4748  00134A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4749  00134C  0E00               	movlw	0
  4750  00134E  ECB6  F01A         	call	___xxtofl
  4751  001352  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4752  001356  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4753  00135A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4754  00135E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4755  001362  ECB3  F00F         	call	___flmul	;wreg free
  4756  001366  C01C  F035         	movff	?___flmul,___fldiv@b
  4757  00136A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4758  00136E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4759  001372  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4760  001376  0E00               	movlw	0
  4761  001378  6E39               	movwf	___fldiv@a^0,c
  4762  00137A  0E00               	movlw	0
  4763  00137C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4764  00137E  0E80               	movlw	128
  4765  001380  6E3B               	movwf	(___fldiv@a+2)^0,c
  4766  001382  0E44               	movlw	68
  4767  001384  6E3C               	movwf	(___fldiv@a+3)^0,c
  4768  001386  ECC8  F011         	call	___fldiv	;wreg free
  4769  00138A  C035  F14C         	movff	?___fldiv,_procces_data+28
  4770  00138E  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4771  001392  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4772  001396  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4773  00139A                     
  4774                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4775  00139A  0E00               	movlw	0
  4776  00139C  6E39               	movwf	___fldiv@a^0,c
  4777  00139E  0E00               	movlw	0
  4778  0013A0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4779  0013A2  0EA0               	movlw	160
  4780  0013A4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4781  0013A6  0E40               	movlw	64
  4782  0013A8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4783  0013AA  0E00               	movlw	0
  4784  0013AC  6E20               	movwf	___flmul@a^0,c
  4785  0013AE  0EC0               	movlw	192
  4786  0013B0  6E21               	movwf	(___flmul@a+1)^0,c
  4787  0013B2  0E79               	movlw	121
  4788  0013B4  6E22               	movwf	(___flmul@a+2)^0,c
  4789  0013B6  0E44               	movlw	68
  4790  0013B8  6E23               	movwf	(___flmul@a+3)^0,c
  4791  0013BA  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4792  0013BE  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4793  0013C2  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4794  0013C6  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4795  0013CA  ECB3  F00F         	call	___flmul	;wreg free
  4796  0013CE  C01C  F035         	movff	?___flmul,___fldiv@b
  4797  0013D2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4798  0013D6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4799  0013DA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4800  0013DE  ECC8  F011         	call	___fldiv	;wreg free
  4801  0013E2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4802  0013E6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4803  0013EA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4804  0013EE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4805  0013F2  EC6B  F021         	call	___fltol	;wreg free
  4806  0013F6  C04E  F11C         	movff	?___fltol,_convert_data+28
  4807  0013FA  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  4808  0013FE  C050  F11E         	movff	?___fltol+2,_convert_data+30
  4809  001402  C051  F11F         	movff	?___fltol+3,_convert_data+31
  4810                           
  4811                           ;fs_adc.c: 144:         break;
  4812  001406  EF33  F00A         	goto	l76
  4813  00140A                     l5765:
  4814  00140A  0101               	movlb	1	; () banked
  4815  00140C  5194               	movf	(_timer_value+5)& (0+255),w,b
  4816  00140E  6E58               	movwf	??_scanAdcConversion^0,c
  4817  001410  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  4818                           
  4819                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  4820                           ; Switch size 1, requested type "simple"
  4821                           ; Number of cases is 1, Range of values is 0 to 0
  4822                           ; switch strategies available:
  4823                           ; Name         Instructions Cycles
  4824                           ; simple_byte            4     3 (average)
  4825                           ;	Chosen strategy is simple_byte
  4826  001412  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  4827  001414  0A00               	xorlw	0	; case 0
  4828  001416  B4D8               	btfsc	status,2,c
  4829  001418  EF10  F00A         	goto	l6621
  4830  00141C  EF33  F00A         	goto	l76
  4831  001420                     l6621:
  4832                           
  4833                           ; BSR set to: 1
  4834                           ; Switch size 1, requested type "simple"
  4835                           ; Number of cases is 8, Range of values is 1 to 8
  4836                           ; switch strategies available:
  4837                           ; Name         Instructions Cycles
  4838                           ; simple_byte           25    13 (average)
  4839                           ;	Chosen strategy is simple_byte
  4840  001420  5058               	movf	??_scanAdcConversion^0,w,c
  4841  001422  0A01               	xorlw	1	; case 1
  4842  001424  B4D8               	btfsc	status,2,c
  4843  001426  EF33  F006         	goto	l5713
  4844  00142A  0A03               	xorlw	3	; case 2
  4845  00142C  B4D8               	btfsc	status,2,c
  4846  00142E  EFA7  F006         	goto	l5719
  4847  001432  0A01               	xorlw	1	; case 3
  4848  001434  B4D8               	btfsc	status,2,c
  4849  001436  EF1B  F007         	goto	l5725
  4850  00143A  0A07               	xorlw	7	; case 4
  4851  00143C  B4D8               	btfsc	status,2,c
  4852  00143E  EFC1  F007         	goto	l5733
  4853  001442  0A01               	xorlw	1	; case 5
  4854  001444  B4D8               	btfsc	status,2,c
  4855  001446  EF35  F008         	goto	l5739
  4856  00144A  0A03               	xorlw	3	; case 6
  4857  00144C  B4D8               	btfsc	status,2,c
  4858  00144E  EFA9  F008         	goto	l5745
  4859  001452  0A01               	xorlw	1	; case 7
  4860  001454  B4D8               	btfsc	status,2,c
  4861  001456  EF1D  F009         	goto	l5751
  4862  00145A  0A0F               	xorlw	15	; case 8
  4863  00145C  B4D8               	btfsc	status,2,c
  4864  00145E  EF91  F009         	goto	l5757
  4865  001462  EF33  F00A         	goto	l76
  4866  001466                     l76:
  4867  001466  0012               	return		;funcret
  4868  001468                     __end_of_scanAdcConversion:
  4869                           	callstack 0
  4870                           
  4871 ;; *************** function _readAdcValue *****************
  4872 ;; Defined at:
  4873 ;;		line 34 in file "fs_adc.c"
  4874 ;; Parameters:    Size  Location     Type
  4875 ;;  adcChannel      1    wreg     unsigned char 
  4876 ;; Auto vars:     Size  Location     Type
  4877 ;;  adcChannel      1    4[COMRAM] unsigned char 
  4878 ;;  adcValue        2    5[COMRAM] unsigned short 
  4879 ;; Return value:  Size  Location     Type
  4880 ;;                  2    0[COMRAM] unsigned short 
  4881 ;; Registers used:
  4882 ;;		wreg, status,2, status,0
  4883 ;; Tracked objects:
  4884 ;;		On entry : 0/0
  4885 ;;		On exit  : 0/0
  4886 ;;		Unchanged: 0/0
  4887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4888 ;;      Params:         2       0       0       0       0       0       0
  4889 ;;      Locals:         3       0       0       0       0       0       0
  4890 ;;      Temps:          2       0       0       0       0       0       0
  4891 ;;      Totals:         7       0       0       0       0       0       0
  4892 ;;Total ram usage:        7 bytes
  4893 ;; Hardware stack levels used:    1
  4894 ;; Hardware stack levels required when called:    1
  4895 ;; This function calls:
  4896 ;;		Nothing
  4897 ;; This function is called by:
  4898 ;;		_scanAdcConversion
  4899 ;; This function uses a non-reentrant model
  4900 ;;
  4901                           
  4902                           	psect	text14
  4903  0053B4                     __ptext14:
  4904                           	callstack 0
  4905  0053B4                     _readAdcValue:
  4906                           	callstack 24
  4907                           
  4908                           ;incstack = 0
  4909                           ;readAdcValue@adcChannel stored from wreg
  4910  0053B4  6E05               	movwf	readAdcValue@adcChannel^0,c
  4911  0053B6                     
  4912                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  4913  0053B6  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  4914  0053BA  4603               	rlncf	??_readAdcValue^0,f,c
  4915  0053BC  4603               	rlncf	??_readAdcValue^0,f,c
  4916  0053BE  50C2               	movf	194,w,c	;volatile
  4917  0053C0  1803               	xorwf	??_readAdcValue^0,w,c
  4918  0053C2  0B83               	andlw	-125
  4919  0053C4  1803               	xorwf	??_readAdcValue^0,w,c
  4920  0053C6  6EC2               	movwf	194,c	;volatile
  4921  0053C8                     
  4922                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  4923  0053C8  80C2               	bsf	194,0,c	;volatile
  4924  0053CA                     
  4925                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  4926  0053CA  82C2               	bsf	194,1,c	;volatile
  4927  0053CC                     l57:
  4928  0053CC  B2C2               	btfsc	194,1,c	;volatile
  4929  0053CE  EFEB  F029         	goto	u6401
  4930  0053D2  EFED  F029         	goto	u6400
  4931  0053D6                     u6401:
  4932  0053D6  EFE6  F029         	goto	l57
  4933  0053DA                     u6400:
  4934  0053DA                     
  4935                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  4936  0053DA  50C4               	movf	196,w,c	;volatile
  4937  0053DC  6E04               	movwf	(??_readAdcValue+1)^0,c
  4938  0053DE  6A03               	clrf	??_readAdcValue^0,c
  4939  0053E0  50C3               	movf	195,w,c	;volatile
  4940  0053E2  2403               	addwf	??_readAdcValue^0,w,c
  4941  0053E4  6E06               	movwf	readAdcValue@adcValue^0,c
  4942  0053E6  0E00               	movlw	0
  4943  0053E8  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  4944  0053EA  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  4945  0053EC                     
  4946                           ;fs_adc.c: 43:     return adcValue;
  4947  0053EC  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  4948  0053F0  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  4949  0053F4  0012               	return		;funcret
  4950  0053F6                     __end_of_readAdcValue:
  4951                           	callstack 0
  4952                           
  4953 ;; *************** function _calculatedAverageValue *****************
  4954 ;; Defined at:
  4955 ;;		line 154 in file "fs_adc.c"
  4956 ;; Parameters:    Size  Location     Type
  4957 ;;		None
  4958 ;; Auto vars:     Size  Location     Type
  4959 ;;		None
  4960 ;; Return value:  Size  Location     Type
  4961 ;;                  1    wreg      void 
  4962 ;; Registers used:
  4963 ;;		wreg, status,2, status,0, cstack
  4964 ;; Tracked objects:
  4965 ;;		On entry : 0/0
  4966 ;;		On exit  : 0/0
  4967 ;;		Unchanged: 0/0
  4968 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4969 ;;      Params:         0       0       0       0       0       0       0
  4970 ;;      Locals:         0       0       0       0       0       0       0
  4971 ;;      Temps:         24       0       0       0       0       0       0
  4972 ;;      Totals:        24       0       0       0       0       0       0
  4973 ;;Total ram usage:       24 bytes
  4974 ;; Hardware stack levels used:    1
  4975 ;; Hardware stack levels required when called:    2
  4976 ;; This function calls:
  4977 ;;		___lldiv
  4978 ;;		___lmul
  4979 ;;		___xxtofl
  4980 ;; This function is called by:
  4981 ;;		_startMotor
  4982 ;; This function uses a non-reentrant model
  4983 ;;
  4984                           
  4985                           	psect	text15
  4986  00272A                     __ptext15:
  4987                           	callstack 0
  4988  00272A                     _calculatedAverageValue:
  4989                           	callstack 24
  4990  00272A                     
  4991                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  4992  00272A  0E00               	movlw	0
  4993  00272C  0101               	movlb	1	; () banked
  4994  00272E  6F83               	movwf	_driver_limit& (0+255),b
  4995  002730  0E00               	movlw	0
  4996  002732  6F84               	movwf	(_driver_limit+1)& (0+255),b
  4997  002734  0E00               	movlw	0
  4998  002736  6F85               	movwf	(_driver_limit+2)& (0+255),b
  4999  002738  0E00               	movlw	0
  5000  00273A  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5001                           
  5002                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5003  00273C  0E00               	movlw	0
  5004  00273E  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5005  002740  0E00               	movlw	0
  5006  002742  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5007  002744  0E00               	movlw	0
  5008  002746  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5009  002748  0E00               	movlw	0
  5010  00274A  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5011                           
  5012                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5013  00274C  0E00               	movlw	0
  5014  00274E  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5015  002750  0E00               	movlw	0
  5016  002752  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5017  002754  0E00               	movlw	0
  5018  002756  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5019  002758  0E00               	movlw	0
  5020  00275A  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5021  00275C                     
  5022                           ; BSR set to: 1
  5023                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5024  00275C  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5025  002760  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5026  002764  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5027  002768  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5028  00276C  0EB8               	movlw	184
  5029  00276E  6E05               	movwf	___lmul@multiplicand^0,c
  5030  002770  0E0B               	movlw	11
  5031  002772  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5032  002774  0E00               	movlw	0
  5033  002776  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5034  002778  0E00               	movlw	0
  5035  00277A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5036  00277C  ECCC  F027         	call	___lmul	;wreg free
  5037  002780  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5038  002784  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5039  002788  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5040  00278C  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5041  002790  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5042  002794  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5043  002798  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5044  00279C  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5045  0027A0  0ED0               	movlw	208
  5046  0027A2  6E05               	movwf	___lmul@multiplicand^0,c
  5047  0027A4  0E07               	movlw	7
  5048  0027A6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5049  0027A8  0E00               	movlw	0
  5050  0027AA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5051  0027AC  0E00               	movlw	0
  5052  0027AE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5053  0027B0  ECCC  F027         	call	___lmul	;wreg free
  5054  0027B4  5001               	movf	?___lmul^0,w,c
  5055  0027B6  241C               	addwf	??_calculatedAverageValue^0,w,c
  5056  0027B8  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5057  0027BA  5002               	movf	(?___lmul+1)^0,w,c
  5058  0027BC  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5059  0027BE  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5060  0027C0  5003               	movf	(?___lmul+2)^0,w,c
  5061  0027C2  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5062  0027C4  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5063  0027C6  5004               	movf	(?___lmul+3)^0,w,c
  5064  0027C8  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5065  0027CA  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5066  0027CC  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5067  0027D0  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5068  0027D4  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5069  0027D8  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5070  0027DC  0EE8               	movlw	232
  5071  0027DE  6E05               	movwf	___lmul@multiplicand^0,c
  5072  0027E0  0E03               	movlw	3
  5073  0027E2  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5074  0027E4  0E00               	movlw	0
  5075  0027E6  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5076  0027E8  0E00               	movlw	0
  5077  0027EA  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5078  0027EC  ECCC  F027         	call	___lmul	;wreg free
  5079  0027F0  5001               	movf	?___lmul^0,w,c
  5080  0027F2  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5081  0027F4  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5082  0027F6  5002               	movf	(?___lmul+1)^0,w,c
  5083  0027F8  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5084  0027FA  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5085  0027FC  5003               	movf	(?___lmul+2)^0,w,c
  5086  0027FE  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5087  002800  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5088  002802  5004               	movf	(?___lmul+3)^0,w,c
  5089  002804  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5090  002806  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5091  002808  0101               	movlb	1	; () banked
  5092  00280A  5100               	movf	_convert_data& (0+255),w,b
  5093  00280C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5094  00280E  6F83               	movwf	_driver_limit& (0+255),b
  5095  002810  5101               	movf	(_convert_data+1)& (0+255),w,b
  5096  002812  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5097  002814  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5098  002816  5102               	movf	(_convert_data+2)& (0+255),w,b
  5099  002818  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5100  00281A  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5101  00281C  5103               	movf	(_convert_data+3)& (0+255),w,b
  5102  00281E  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5103  002820  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5104  002822                     
  5105                           ; BSR set to: 1
  5106                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5107  002822  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5108  002826  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5109  00282A  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5110  00282E  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5111  002832  0E58               	movlw	88
  5112  002834  6E05               	movwf	___lmul@multiplicand^0,c
  5113  002836  0E1B               	movlw	27
  5114  002838  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5115  00283A  0E00               	movlw	0
  5116  00283C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5117  00283E  0E00               	movlw	0
  5118  002840  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5119  002842  ECCC  F027         	call	___lmul	;wreg free
  5120  002846  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5121  00284A  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5122  00284E  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5123  002852  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5124  002856  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5125  00285A  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5126  00285E  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5127  002862  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5128  002866  0E70               	movlw	112
  5129  002868  6E05               	movwf	___lmul@multiplicand^0,c
  5130  00286A  0E17               	movlw	23
  5131  00286C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5132  00286E  0E00               	movlw	0
  5133  002870  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5134  002872  0E00               	movlw	0
  5135  002874  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5136  002876  ECCC  F027         	call	___lmul	;wreg free
  5137  00287A  5001               	movf	?___lmul^0,w,c
  5138  00287C  241C               	addwf	??_calculatedAverageValue^0,w,c
  5139  00287E  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5140  002880  5002               	movf	(?___lmul+1)^0,w,c
  5141  002882  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5142  002884  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5143  002886  5003               	movf	(?___lmul+2)^0,w,c
  5144  002888  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5145  00288A  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5146  00288C  5004               	movf	(?___lmul+3)^0,w,c
  5147  00288E  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5148  002890  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5149  002892  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5150  002896  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5151  00289A  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5152  00289E  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5153  0028A2  0E88               	movlw	136
  5154  0028A4  6E05               	movwf	___lmul@multiplicand^0,c
  5155  0028A6  0E13               	movlw	19
  5156  0028A8  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5157  0028AA  0E00               	movlw	0
  5158  0028AC  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5159  0028AE  0E00               	movlw	0
  5160  0028B0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5161  0028B2  ECCC  F027         	call	___lmul	;wreg free
  5162  0028B6  5001               	movf	?___lmul^0,w,c
  5163  0028B8  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5164  0028BA  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5165  0028BC  5002               	movf	(?___lmul+1)^0,w,c
  5166  0028BE  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5167  0028C0  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5168  0028C2  5003               	movf	(?___lmul+2)^0,w,c
  5169  0028C4  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5170  0028C6  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5171  0028C8  5004               	movf	(?___lmul+3)^0,w,c
  5172  0028CA  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5173  0028CC  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5174  0028CE  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5175  0028D2  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5176  0028D6  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5177  0028DA  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5178  0028DE  0EA0               	movlw	160
  5179  0028E0  6E05               	movwf	___lmul@multiplicand^0,c
  5180  0028E2  0E0F               	movlw	15
  5181  0028E4  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5182  0028E6  0E00               	movlw	0
  5183  0028E8  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5184  0028EA  0E00               	movlw	0
  5185  0028EC  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5186  0028EE  ECCC  F027         	call	___lmul	;wreg free
  5187  0028F2  5001               	movf	?___lmul^0,w,c
  5188  0028F4  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5189  0028F6  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5190  0028F8  5002               	movf	(?___lmul+1)^0,w,c
  5191  0028FA  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5192  0028FC  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5193  0028FE  5003               	movf	(?___lmul+2)^0,w,c
  5194  002900  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5195  002902  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5196  002904  5004               	movf	(?___lmul+3)^0,w,c
  5197  002906  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5198  002908  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5199  00290A  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5200  00290C  0101               	movlb	1	; () banked
  5201  00290E  2783               	addwf	_driver_limit& (0+255),f,b
  5202  002910  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5203  002912  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5204  002914  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5205  002916  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5206  002918  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5207  00291A  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5208  00291C                     
  5209                           ; BSR set to: 1
  5210                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5211  00291C  5108               	movf	(_convert_data+8)& (0+255),w,b
  5212  00291E  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5213  002920  6E1C               	movwf	??_calculatedAverageValue^0,c
  5214  002922  5109               	movf	(_convert_data+9)& (0+255),w,b
  5215  002924  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5216  002926  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5217  002928  510A               	movf	(_convert_data+10)& (0+255),w,b
  5218  00292A  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5219  00292C  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5220  00292E  510B               	movf	(_convert_data+11)& (0+255),w,b
  5221  002930  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5222  002932  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5223  002934  510C               	movf	(_convert_data+12)& (0+255),w,b
  5224  002936  241C               	addwf	??_calculatedAverageValue^0,w,c
  5225  002938  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5226  00293A  510D               	movf	(_convert_data+13)& (0+255),w,b
  5227  00293C  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5228  00293E  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5229  002940  510E               	movf	(_convert_data+14)& (0+255),w,b
  5230  002942  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5231  002944  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5232  002946  510F               	movf	(_convert_data+15)& (0+255),w,b
  5233  002948  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5234  00294A  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5235  00294C  5110               	movf	(_convert_data+16)& (0+255),w,b
  5236  00294E  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5237  002950  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5238  002952  5111               	movf	(_convert_data+17)& (0+255),w,b
  5239  002954  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5240  002956  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5241  002958  5112               	movf	(_convert_data+18)& (0+255),w,b
  5242  00295A  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5243  00295C  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5244  00295E  5113               	movf	(_convert_data+19)& (0+255),w,b
  5245  002960  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5246  002962  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5247  002964  5114               	movf	(_convert_data+20)& (0+255),w,b
  5248  002966  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5249  002968  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5250  00296A  5115               	movf	(_convert_data+21)& (0+255),w,b
  5251  00296C  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5252  00296E  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5253  002970  5116               	movf	(_convert_data+22)& (0+255),w,b
  5254  002972  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5255  002974  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5256  002976  5117               	movf	(_convert_data+23)& (0+255),w,b
  5257  002978  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5258  00297A  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5259  00297C  5118               	movf	(_convert_data+24)& (0+255),w,b
  5260  00297E  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5261  002980  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5262  002982  5119               	movf	(_convert_data+25)& (0+255),w,b
  5263  002984  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5264  002986  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5265  002988  511A               	movf	(_convert_data+26)& (0+255),w,b
  5266  00298A  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5267  00298C  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5268  00298E  511B               	movf	(_convert_data+27)& (0+255),w,b
  5269  002990  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5270  002992  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5271  002994  511C               	movf	(_convert_data+28)& (0+255),w,b
  5272  002996  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5273  002998  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5274  00299A  511D               	movf	(_convert_data+29)& (0+255),w,b
  5275  00299C  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5276  00299E  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5277  0029A0  511E               	movf	(_convert_data+30)& (0+255),w,b
  5278  0029A2  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5279  0029A4  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5280  0029A6  511F               	movf	(_convert_data+31)& (0+255),w,b
  5281  0029A8  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5282  0029AA  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5283  0029AC  5100               	movf	_convert_data& (0+255),w,b
  5284  0029AE  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5285  0029B0  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5286  0029B2  5101               	movf	(_convert_data+1)& (0+255),w,b
  5287  0029B4  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5288  0029B6  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5289  0029B8  5102               	movf	(_convert_data+2)& (0+255),w,b
  5290  0029BA  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5291  0029BC  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5292  0029BE  5103               	movf	(_convert_data+3)& (0+255),w,b
  5293  0029C0  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5294  0029C2  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5295  0029C4                     
  5296                           ; BSR set to: 1
  5297                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5298  0029C4  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5299  0029C8  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5300  0029CC  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5301  0029D0  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5302  0029D4  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5303  0029D8  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5304  0029DC  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5305  0029E0  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5306  0029E4  ECF3  F025         	call	___lldiv	;wreg free
  5307  0029E8  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5308  0029EC  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5309  0029F0  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5310  0029F4  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5311  0029F8  0E00               	movlw	0
  5312  0029FA  ECB6  F01A         	call	___xxtofl
  5313  0029FE  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5314  002A02  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5315  002A06  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5316  002A0A  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5317  002A0E  0012               	return		;funcret
  5318  002A10                     __end_of_calculatedAverageValue:
  5319                           	callstack 0
  5320                           
  5321 ;; *************** function ___lmul *****************
  5322 ;; Defined at:
  5323 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5324 ;; Parameters:    Size  Location     Type
  5325 ;;  multiplier      4    0[COMRAM] unsigned long 
  5326 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5327 ;; Auto vars:     Size  Location     Type
  5328 ;;  product         4    8[COMRAM] unsigned long 
  5329 ;; Return value:  Size  Location     Type
  5330 ;;                  4    0[COMRAM] unsigned long 
  5331 ;; Registers used:
  5332 ;;		wreg, status,2, status,0
  5333 ;; Tracked objects:
  5334 ;;		On entry : 0/0
  5335 ;;		On exit  : 0/0
  5336 ;;		Unchanged: 0/0
  5337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5338 ;;      Params:         8       0       0       0       0       0       0
  5339 ;;      Locals:         4       0       0       0       0       0       0
  5340 ;;      Temps:          0       0       0       0       0       0       0
  5341 ;;      Totals:        12       0       0       0       0       0       0
  5342 ;;Total ram usage:       12 bytes
  5343 ;; Hardware stack levels used:    1
  5344 ;; Hardware stack levels required when called:    1
  5345 ;; This function calls:
  5346 ;;		Nothing
  5347 ;; This function is called by:
  5348 ;;		_calculatedAverageValue
  5349 ;; This function uses a non-reentrant model
  5350 ;;
  5351                           
  5352                           	psect	text16
  5353  004F98                     __ptext16:
  5354                           	callstack 0
  5355  004F98                     ___lmul:
  5356                           	callstack 24
  5357  004F98  0E00               	movlw	0
  5358  004F9A  6E09               	movwf	___lmul@product^0,c
  5359  004F9C  0E00               	movlw	0
  5360  004F9E  6E0A               	movwf	(___lmul@product+1)^0,c
  5361  004FA0  0E00               	movlw	0
  5362  004FA2  6E0B               	movwf	(___lmul@product+2)^0,c
  5363  004FA4  0E00               	movlw	0
  5364  004FA6  6E0C               	movwf	(___lmul@product+3)^0,c
  5365  004FA8                     l5517:
  5366  004FA8  A001               	btfss	___lmul@multiplier^0,0,c
  5367  004FAA  EFD9  F027         	goto	u6451
  5368  004FAE  EFDB  F027         	goto	u6450
  5369  004FB2                     u6451:
  5370  004FB2  EFE3  F027         	goto	l5521
  5371  004FB6                     u6450:
  5372  004FB6  5005               	movf	___lmul@multiplicand^0,w,c
  5373  004FB8  2609               	addwf	___lmul@product^0,f,c
  5374  004FBA  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5375  004FBC  220A               	addwfc	(___lmul@product+1)^0,f,c
  5376  004FBE  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5377  004FC0  220B               	addwfc	(___lmul@product+2)^0,f,c
  5378  004FC2  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5379  004FC4  220C               	addwfc	(___lmul@product+3)^0,f,c
  5380  004FC6                     l5521:
  5381  004FC6  90D8               	bcf	status,0,c
  5382  004FC8  3605               	rlcf	___lmul@multiplicand^0,f,c
  5383  004FCA  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5384  004FCC  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5385  004FCE  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5386  004FD0  90D8               	bcf	status,0,c
  5387  004FD2  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5388  004FD4  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5389  004FD6  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5390  004FD8  3201               	rrcf	___lmul@multiplier^0,f,c
  5391  004FDA  5001               	movf	___lmul@multiplier^0,w,c
  5392  004FDC  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5393  004FDE  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5394  004FE0  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5395  004FE2  A4D8               	btfss	status,2,c
  5396  004FE4  EFF6  F027         	goto	u6461
  5397  004FE8  EFF8  F027         	goto	u6460
  5398  004FEC                     u6461:
  5399  004FEC  EFD4  F027         	goto	l5517
  5400  004FF0                     u6460:
  5401  004FF0  C009  F001         	movff	___lmul@product,?___lmul
  5402  004FF4  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5403  004FF8  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5404  004FFC  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5405  005000  0012               	return		;funcret
  5406  005002                     __end_of___lmul:
  5407                           	callstack 0
  5408                           
  5409 ;; *************** function ___lldiv *****************
  5410 ;; Defined at:
  5411 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5412 ;; Parameters:    Size  Location     Type
  5413 ;;  dividend        4    0[COMRAM] unsigned long 
  5414 ;;  divisor         4    4[COMRAM] unsigned long 
  5415 ;; Auto vars:     Size  Location     Type
  5416 ;;  quotient        4    8[COMRAM] unsigned long 
  5417 ;;  counter         1   12[COMRAM] unsigned char 
  5418 ;; Return value:  Size  Location     Type
  5419 ;;                  4    0[COMRAM] unsigned long 
  5420 ;; Registers used:
  5421 ;;		wreg, status,2, status,0
  5422 ;; Tracked objects:
  5423 ;;		On entry : 0/0
  5424 ;;		On exit  : 0/0
  5425 ;;		Unchanged: 0/0
  5426 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5427 ;;      Params:         8       0       0       0       0       0       0
  5428 ;;      Locals:         5       0       0       0       0       0       0
  5429 ;;      Temps:          0       0       0       0       0       0       0
  5430 ;;      Totals:        13       0       0       0       0       0       0
  5431 ;;Total ram usage:       13 bytes
  5432 ;; Hardware stack levels used:    1
  5433 ;; Hardware stack levels required when called:    1
  5434 ;; This function calls:
  5435 ;;		Nothing
  5436 ;; This function is called by:
  5437 ;;		_calculatedAverageValue
  5438 ;; This function uses a non-reentrant model
  5439 ;;
  5440                           
  5441                           	psect	text17
  5442  004BE6                     __ptext17:
  5443                           	callstack 0
  5444  004BE6                     ___lldiv:
  5445                           	callstack 24
  5446  004BE6  0E00               	movlw	0
  5447  004BE8  6E09               	movwf	___lldiv@quotient^0,c
  5448  004BEA  0E00               	movlw	0
  5449  004BEC  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5450  004BEE  0E00               	movlw	0
  5451  004BF0  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5452  004BF2  0E00               	movlw	0
  5453  004BF4  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5454  004BF6  5005               	movf	___lldiv@divisor^0,w,c
  5455  004BF8  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5456  004BFA  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5457  004BFC  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5458  004BFE  B4D8               	btfsc	status,2,c
  5459  004C00  EF04  F026         	goto	u6471
  5460  004C04  EF06  F026         	goto	u6470
  5461  004C08                     u6471:
  5462  004C08  EF3C  F026         	goto	l725
  5463  004C0C                     u6470:
  5464  004C0C  0E01               	movlw	1
  5465  004C0E  6E0D               	movwf	___lldiv@counter^0,c
  5466  004C10  EF10  F026         	goto	l5533
  5467  004C14                     l5531:
  5468  004C14  90D8               	bcf	status,0,c
  5469  004C16  3605               	rlcf	___lldiv@divisor^0,f,c
  5470  004C18  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5471  004C1A  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5472  004C1C  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5473  004C1E  2A0D               	incf	___lldiv@counter^0,f,c
  5474  004C20                     l5533:
  5475  004C20  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5476  004C22  EF15  F026         	goto	u6481
  5477  004C26  EF17  F026         	goto	u6480
  5478  004C2A                     u6481:
  5479  004C2A  EF0A  F026         	goto	l5531
  5480  004C2E                     u6480:
  5481  004C2E                     l5535:
  5482  004C2E  90D8               	bcf	status,0,c
  5483  004C30  3609               	rlcf	___lldiv@quotient^0,f,c
  5484  004C32  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5485  004C34  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5486  004C36  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5487  004C38  5005               	movf	___lldiv@divisor^0,w,c
  5488  004C3A  5C01               	subwf	___lldiv@dividend^0,w,c
  5489  004C3C  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5490  004C3E  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5491  004C40  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5492  004C42  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5493  004C44  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5494  004C46  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5495  004C48  A0D8               	btfss	status,0,c
  5496  004C4A  EF29  F026         	goto	u6491
  5497  004C4E  EF2B  F026         	goto	u6490
  5498  004C52                     u6491:
  5499  004C52  EF34  F026         	goto	l5543
  5500  004C56                     u6490:
  5501  004C56  5005               	movf	___lldiv@divisor^0,w,c
  5502  004C58  5E01               	subwf	___lldiv@dividend^0,f,c
  5503  004C5A  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5504  004C5C  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5505  004C5E  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5506  004C60  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5507  004C62  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5508  004C64  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5509  004C66  8009               	bsf	___lldiv@quotient^0,0,c
  5510  004C68                     l5543:
  5511  004C68  90D8               	bcf	status,0,c
  5512  004C6A  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5513  004C6C  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5514  004C6E  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5515  004C70  3205               	rrcf	___lldiv@divisor^0,f,c
  5516  004C72  2E0D               	decfsz	___lldiv@counter^0,f,c
  5517  004C74  EF17  F026         	goto	l5535
  5518  004C78                     l725:
  5519  004C78  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5520  004C7C  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5521  004C80  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5522  004C84  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5523  004C88  0012               	return		;funcret
  5524  004C8A                     __end_of___lldiv:
  5525                           	callstack 0
  5526                           
  5527 ;; *************** function _exitLine *****************
  5528 ;; Defined at:
  5529 ;;		line 640 in file "fs_menu_controller.c"
  5530 ;; Parameters:    Size  Location     Type
  5531 ;;		None
  5532 ;; Auto vars:     Size  Location     Type
  5533 ;;		None
  5534 ;; Return value:  Size  Location     Type
  5535 ;;                  1    wreg      void 
  5536 ;; Registers used:
  5537 ;;		None
  5538 ;; Tracked objects:
  5539 ;;		On entry : 0/0
  5540 ;;		On exit  : 0/0
  5541 ;;		Unchanged: 0/0
  5542 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5543 ;;      Params:         0       0       0       0       0       0       0
  5544 ;;      Locals:         0       0       0       0       0       0       0
  5545 ;;      Temps:          0       0       0       0       0       0       0
  5546 ;;      Totals:         0       0       0       0       0       0       0
  5547 ;;Total ram usage:        0 bytes
  5548 ;; Hardware stack levels used:    1
  5549 ;; Hardware stack levels required when called:    1
  5550 ;; This function calls:
  5551 ;;		Nothing
  5552 ;; This function is called by:
  5553 ;;		_stateMachine
  5554 ;; This function uses a non-reentrant model
  5555 ;;
  5556                           
  5557                           	psect	text18
  5558  0057F2                     __ptext18:
  5559                           	callstack 0
  5560  0057F2                     _exitLine:
  5561                           	callstack 27
  5562  0057F2  0012               	return		;funcret
  5563  0057F4                     __end_of_exitLine:
  5564                           	callstack 0
  5565                           
  5566 ;; *************** function _driverTimeSettingMenu *****************
  5567 ;; Defined at:
  5568 ;;		line 586 in file "fs_menu_controller.c"
  5569 ;; Parameters:    Size  Location     Type
  5570 ;;		None
  5571 ;; Auto vars:     Size  Location     Type
  5572 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  5573 ;; Return value:  Size  Location     Type
  5574 ;;                  1    wreg      void 
  5575 ;; Registers used:
  5576 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5577 ;; Tracked objects:
  5578 ;;		On entry : 0/0
  5579 ;;		On exit  : 0/0
  5580 ;;		Unchanged: 0/0
  5581 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5582 ;;      Params:         0       0       0       0       0       0       0
  5583 ;;      Locals:         0      16       0       0       0       0       0
  5584 ;;      Temps:          0       0       0       0       0       0       0
  5585 ;;      Totals:         0      16       0       0       0       0       0
  5586 ;;Total ram usage:       16 bytes
  5587 ;; Hardware stack levels used:    1
  5588 ;; Hardware stack levels required when called:    9
  5589 ;; This function calls:
  5590 ;;		_eepromWrite
  5591 ;;		_lcdSetCursor
  5592 ;;		_lcdWriteString
  5593 ;;		_sprintf
  5594 ;;		_stopMotor
  5595 ;; This function is called by:
  5596 ;;		_stateMachine
  5597 ;; This function uses a non-reentrant model
  5598 ;;
  5599                           
  5600                           	psect	text19
  5601  003E76                     __ptext19:
  5602                           	callstack 0
  5603  003E76                     _driverTimeSettingMenu:
  5604                           	callstack 19
  5605  003E76                     
  5606                           ;fs_menu_controller.c: 588:     char textCursor2[16] = {0};
  5607  003E76  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  5608  003E7A  0E0F               	movlw	15
  5609  003E7C                     u7101:
  5610  003E7C  6ADE               	clrf	postinc2,c
  5611  003E7E  06E8               	decf	wreg,f,c
  5612  003E80  E2FD               	bc	u7101
  5613  003E82                     
  5614                           ;fs_menu_controller.c: 590:     stopMotor();
  5615  003E82  EC79  F02A         	call	_stopMotor	;wreg free
  5616  003E86                     
  5617                           ;fs_menu_controller.c: 592:     if (menu_flags.menu_input_flag == 1)
  5618  003E86  0101               	movlb	1	; () banked
  5619  003E88  0597               	decf	_menu_flags& (0+255),w,b
  5620  003E8A  A4D8               	btfss	status,2,c
  5621  003E8C  EF4A  F01F         	goto	u7111
  5622  003E90  EF4C  F01F         	goto	u7110
  5623  003E94                     u7111:
  5624  003E94  EF51  F01F         	goto	l6017
  5625  003E98                     u7110:
  5626  003E98                     
  5627                           ; BSR set to: 1
  5628                           ;fs_menu_controller.c: 593:     {;fs_menu_controller.c: 594:         menu_flags.menu_inp
      +                          ut_flag = 0;
  5629  003E98  0E00               	movlw	0
  5630  003E9A  6F97               	movwf	_menu_flags& (0+255),b
  5631                           
  5632                           ;fs_menu_controller.c: 595:         menu_selected = STOP_TIME_SETTING;
  5633  003E9C  0E02               	movlw	2
  5634  003E9E  0100               	movlb	0	; () banked
  5635  003EA0  6FFB               	movwf	_menu_selected& (0+255),b
  5636  003EA2                     l6017:
  5637                           
  5638                           ;fs_menu_controller.c: 598:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  5639  003EA2  0101               	movlb	1	; () banked
  5640  003EA4  059B               	decf	(_menu_flags+4)& (0+255),w,b
  5641  003EA6  A4D8               	btfss	status,2,c
  5642  003EA8  EF58  F01F         	goto	u7121
  5643  003EAC  EF5A  F01F         	goto	u7120
  5644  003EB0                     u7121:
  5645  003EB0  EF76  F01F         	goto	l6035
  5646  003EB4                     u7120:
  5647  003EB4                     
  5648                           ; BSR set to: 1
  5649  003EB4  0E1E               	movlw	30
  5650  003EB6  0100               	movlb	0	; () banked
  5651  003EB8  61F3               	cpfslt	_menu_value& (0+255),b
  5652  003EBA  EF61  F01F         	goto	u7131
  5653  003EBE  EF63  F01F         	goto	u7130
  5654  003EC2                     u7131:
  5655  003EC2  EF76  F01F         	goto	l6035
  5656  003EC6                     u7130:
  5657  003EC6                     
  5658                           ; BSR set to: 0
  5659                           ;fs_menu_controller.c: 599:     {;fs_menu_controller.c: 600:         menu_flags.menu_inc
      +                          rease_flag = 0;
  5660  003EC6  0E00               	movlw	0
  5661  003EC8  0101               	movlb	1	; () banked
  5662  003ECA  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  5663  003ECC                     
  5664                           ; BSR set to: 1
  5665                           ;fs_menu_controller.c: 601:         menu_value.driver_time++;
  5666  003ECC  0100               	movlb	0	; () banked
  5667  003ECE  2BF3               	incf	_menu_value& (0+255),f,b
  5668  003ED0                     
  5669                           ; BSR set to: 0
  5670                           ;fs_menu_controller.c: 602:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5671  003ED0  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5672  003ED4  0E00               	movlw	0
  5673  003ED6  EC57  F02B         	call	_eepromWrite
  5674  003EDA                     
  5675                           ;fs_menu_controller.c: 603:         timer_value.minute =0 ;
  5676  003EDA  0E00               	movlw	0
  5677  003EDC  0101               	movlb	1	; () banked
  5678  003EDE  6F90               	movwf	(_timer_value+1)& (0+255),b
  5679  003EE0                     
  5680                           ; BSR set to: 1
  5681                           ;fs_menu_controller.c: 604:         timer_value.second = 0;
  5682  003EE0  0E00               	movlw	0
  5683  003EE2  6F8F               	movwf	_timer_value& (0+255),b
  5684  003EE4                     
  5685                           ; BSR set to: 1
  5686                           ;fs_menu_controller.c: 605:         timer_value.remainingSecond = 0;
  5687  003EE4  0E00               	movlw	0
  5688  003EE6  6F91               	movwf	(_timer_value+2)& (0+255),b
  5689  003EE8                     
  5690                           ; BSR set to: 1
  5691                           ;fs_menu_controller.c: 606:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  5692  003EE8  C0F3  F192         	movff	_menu_value,_timer_value+3
  5693  003EEC                     l6035:
  5694                           
  5695                           ;fs_menu_controller.c: 609:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  5696  003EEC  0101               	movlb	1	; () banked
  5697  003EEE  059C               	decf	(_menu_flags+5)& (0+255),w,b
  5698  003EF0  A4D8               	btfss	status,2,c
  5699  003EF2  EF7D  F01F         	goto	u7141
  5700  003EF6  EF7F  F01F         	goto	u7140
  5701  003EFA                     u7141:
  5702  003EFA  EF9B  F01F         	goto	l6053
  5703  003EFE                     u7140:
  5704  003EFE                     
  5705                           ; BSR set to: 1
  5706  003EFE  0100               	movlb	0	; () banked
  5707  003F00  51F3               	movf	_menu_value& (0+255),w,b
  5708  003F02  B4D8               	btfsc	status,2,c
  5709  003F04  EF86  F01F         	goto	u7151
  5710  003F08  EF88  F01F         	goto	u7150
  5711  003F0C                     u7151:
  5712  003F0C  EF9B  F01F         	goto	l6053
  5713  003F10                     u7150:
  5714  003F10                     
  5715                           ; BSR set to: 0
  5716                           ;fs_menu_controller.c: 610:     {;fs_menu_controller.c: 611:          menu_flags.menu_de
      +                          crease_flag = 0;
  5717  003F10  0E00               	movlw	0
  5718  003F12  0101               	movlb	1	; () banked
  5719  003F14  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  5720  003F16                     
  5721                           ; BSR set to: 1
  5722                           ;fs_menu_controller.c: 612:          menu_value.driver_time--;
  5723  003F16  0100               	movlb	0	; () banked
  5724  003F18  07F3               	decf	_menu_value& (0+255),f,b
  5725  003F1A                     
  5726                           ; BSR set to: 0
  5727                           ;fs_menu_controller.c: 613:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  5728  003F1A  C0F3  F001         	movff	_menu_value,eepromWrite@data
  5729  003F1E  0E00               	movlw	0
  5730  003F20  EC57  F02B         	call	_eepromWrite
  5731  003F24                     
  5732                           ;fs_menu_controller.c: 614:          timer_value.minute =0 ;
  5733  003F24  0E00               	movlw	0
  5734  003F26  0101               	movlb	1	; () banked
  5735  003F28  6F90               	movwf	(_timer_value+1)& (0+255),b
  5736  003F2A                     
  5737                           ; BSR set to: 1
  5738                           ;fs_menu_controller.c: 615:          timer_value.second = 0;
  5739  003F2A  0E00               	movlw	0
  5740  003F2C  6F8F               	movwf	_timer_value& (0+255),b
  5741  003F2E                     
  5742                           ; BSR set to: 1
  5743                           ;fs_menu_controller.c: 616:          timer_value.remainingSecond = 0;
  5744  003F2E  0E00               	movlw	0
  5745  003F30  6F91               	movwf	(_timer_value+2)& (0+255),b
  5746  003F32                     
  5747                           ; BSR set to: 1
  5748                           ;fs_menu_controller.c: 617:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  5749  003F32  C0F3  F192         	movff	_menu_value,_timer_value+3
  5750  003F36                     l6053:
  5751                           
  5752                           ;fs_menu_controller.c: 619:     lcdSetCursor(1,1);
  5753  003F36  0E01               	movlw	1
  5754  003F38  6E04               	movwf	lcdSetCursor@b^0,c
  5755  003F3A  0E01               	movlw	1
  5756  003F3C  EC36  F028         	call	_lcdSetCursor
  5757  003F40                     
  5758                           ;fs_menu_controller.c: 620:     lcdWriteString("HAREKT ZAMANI dk");
  5759  003F40  0E5E               	movlw	low STR_17
  5760  003F42  6E05               	movwf	lcdWriteString@a^0,c
  5761  003F44  0E7F               	movlw	high STR_17
  5762  003F46  6E06               	movwf	(lcdWriteString@a+1)^0,c
  5763  003F48  ECD8  F026         	call	_lcdWriteString	;wreg free
  5764  003F4C                     
  5765                           ;fs_menu_controller.c: 621:     lcdSetCursor(2,1);
  5766  003F4C  0E01               	movlw	1
  5767  003F4E  6E04               	movwf	lcdSetCursor@b^0,c
  5768  003F50  0E02               	movlw	2
  5769  003F52  EC36  F028         	call	_lcdSetCursor
  5770  003F56                     
  5771                           ;fs_menu_controller.c: 622:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  5772  003F56  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5773  003F58  0100               	movlb	0	; () banked
  5774  003F5A  6FCF               	movwf	sprintf@s& (0+255),b
  5775  003F5C  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5776  003F5E  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  5777  003F60  0EF7               	movlw	low STR_14
  5778  003F62  6FD1               	movwf	sprintf@fmt& (0+255),b
  5779  003F64  0E7E               	movlw	high STR_14
  5780  003F66  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  5781  003F68  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  5782  003F6C  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  5783  003F6E  EC1E  F029         	call	_sprintf	;wreg free
  5784  003F72                     
  5785                           ;fs_menu_controller.c: 623:     lcdWriteString(textCursor2);
  5786  003F72  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  5787  003F74  6E05               	movwf	lcdWriteString@a^0,c
  5788  003F76  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  5789  003F78  6E06               	movwf	(lcdWriteString@a+1)^0,c
  5790  003F7A  ECD8  F026         	call	_lcdWriteString	;wreg free
  5791  003F7E                     
  5792                           ;fs_menu_controller.c: 625:     if(timer_value.menu_login_delay == 100)
  5793  003F7E  0E64               	movlw	100
  5794  003F80  0101               	movlb	1	; () banked
  5795  003F82  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  5796  003F84  A4D8               	btfss	status,2,c
  5797  003F86  EFC7  F01F         	goto	u7161
  5798  003F8A  EFC9  F01F         	goto	u7160
  5799  003F8E                     u7161:
  5800  003F8E  EFD0  F01F         	goto	l518
  5801  003F92                     u7160:
  5802  003F92                     
  5803                           ; BSR set to: 1
  5804                           ;fs_menu_controller.c: 626:     {;fs_menu_controller.c: 627:         button_bounce_contr
      +                          oller.menu = 0;
  5805  003F92  0E00               	movlw	0
  5806  003F94  6F9D               	movwf	_button_bounce_controller& (0+255),b
  5807                           
  5808                           ;fs_menu_controller.c: 628:         timer_value.menu_login_delay = 0;
  5809  003F96  0E00               	movlw	0
  5810  003F98  6F93               	movwf	(_timer_value+4)& (0+255),b
  5811                           
  5812                           ;fs_menu_controller.c: 629:         menu_selected = PAUSE_MENU;
  5813  003F9A  0E06               	movlw	6
  5814  003F9C  0100               	movlb	0	; () banked
  5815  003F9E  6FFB               	movwf	_menu_selected& (0+255),b
  5816  003FA0                     l518:
  5817  003FA0  0012               	return		;funcret
  5818  003FA2                     __end_of_driverTimeSettingMenu:
  5819                           	callstack 0
  5820                           
  5821 ;; *************** function _stopMotor *****************
  5822 ;; Defined at:
  5823 ;;		line 77 in file "fs_speed_controller.c"
  5824 ;; Parameters:    Size  Location     Type
  5825 ;;		None
  5826 ;; Auto vars:     Size  Location     Type
  5827 ;;		None
  5828 ;; Return value:  Size  Location     Type
  5829 ;;                  1    wreg      void 
  5830 ;; Registers used:
  5831 ;;		wreg, status,2, status,0, cstack
  5832 ;; Tracked objects:
  5833 ;;		On entry : 0/0
  5834 ;;		On exit  : 0/0
  5835 ;;		Unchanged: 0/0
  5836 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5837 ;;      Params:         0       0       0       0       0       0       0
  5838 ;;      Locals:         0       0       0       0       0       0       0
  5839 ;;      Temps:          0       0       0       0       0       0       0
  5840 ;;      Totals:         0       0       0       0       0       0       0
  5841 ;;Total ram usage:        0 bytes
  5842 ;; Hardware stack levels used:    1
  5843 ;; Hardware stack levels required when called:    3
  5844 ;; This function calls:
  5845 ;;		_PWM1_setDC
  5846 ;;		_PWM2_setDC
  5847 ;; This function is called by:
  5848 ;;		_mainMenu
  5849 ;;		_stopMenu
  5850 ;;		_pauseMenu
  5851 ;;		_secretMenu
  5852 ;;		_speedLimitSettingMenu
  5853 ;;		_stopTimeSettingMenu
  5854 ;;		_driverTimeSettingMenu
  5855 ;; This function uses a non-reentrant model
  5856 ;;
  5857                           
  5858                           	psect	text20
  5859  0054F2                     __ptext20:
  5860                           	callstack 0
  5861  0054F2                     _stopMotor:
  5862                           	callstack 24
  5863  0054F2                     
  5864                           ;fs_speed_controller.c: 79:     controller.rightMotorSpeed = 0;
  5865  0054F2  0E00               	movlw	0
  5866  0054F4  0101               	movlb	1	; () banked
  5867  0054F6  6F59               	movwf	(_controller+9)& (0+255),b
  5868  0054F8  0E00               	movlw	0
  5869  0054FA  6F58               	movwf	(_controller+8)& (0+255),b
  5870                           
  5871                           ;fs_speed_controller.c: 80:     controller.leftMotorSpeed = 0;
  5872  0054FC  0E00               	movlw	0
  5873  0054FE  6F57               	movwf	(_controller+7)& (0+255),b
  5874  005500  0E00               	movlw	0
  5875  005502  6F56               	movwf	(_controller+6)& (0+255),b
  5876                           
  5877                           ;fs_speed_controller.c: 81:     driver_limit.ortalama = 0;
  5878  005504  0E00               	movlw	0
  5879  005506  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5880  005508  0E00               	movlw	0
  5881  00550A  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5882  00550C  0E00               	movlw	0
  5883  00550E  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5884  005510  0E00               	movlw	0
  5885  005512  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5886  005514                     
  5887                           ; BSR set to: 1
  5888                           ;fs_speed_controller.c: 82:     PWM1_setDC(controller.leftMotorSpeed);
  5889  005514  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  5890  005518  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  5891  00551C  EC54  F027         	call	_PWM1_setDC	;wreg free
  5892  005520                     
  5893                           ;fs_speed_controller.c: 83:     PWM2_setDC(controller.rightMotorSpeed);
  5894  005520  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  5895  005524  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  5896  005528  EC17  F027         	call	_PWM2_setDC	;wreg free
  5897  00552C  0012               	return		;funcret
  5898  00552E                     __end_of_stopMotor:
  5899                           	callstack 0
  5900                           
  5901 ;; *************** function _sprintf *****************
  5902 ;; Defined at:
  5903 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  5904 ;; Parameters:    Size  Location     Type
  5905 ;;  s               2  111[BANK0 ] PTR unsigned char 
  5906 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  5907 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  5908 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  5909 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  5910 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  5911 ;; Auto vars:     Size  Location     Type
  5912 ;;  f               6  123[BANK0 ] struct _IO_FILE
  5913 ;;  ap              2  121[BANK0 ] PTR void [1]
  5914 ;;		 -> ?_sprintf(2), 
  5915 ;;  ret             2    0        int 
  5916 ;; Return value:  Size  Location     Type
  5917 ;;                  2  111[BANK0 ] int 
  5918 ;; Registers used:
  5919 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  5920 ;; Tracked objects:
  5921 ;;		On entry : 0/0
  5922 ;;		On exit  : 0/0
  5923 ;;		Unchanged: 0/0
  5924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5925 ;;      Params:         0       8       0       0       0       0       0
  5926 ;;      Locals:         0      10       0       0       0       0       0
  5927 ;;      Temps:          0       0       0       0       0       0       0
  5928 ;;      Totals:         0      18       0       0       0       0       0
  5929 ;;Total ram usage:       18 bytes
  5930 ;; Hardware stack levels used:    1
  5931 ;; Hardware stack levels required when called:    8
  5932 ;; This function calls:
  5933 ;;		_vfprintf
  5934 ;; This function is called by:
  5935 ;;		_mainMenu
  5936 ;;		_stopMenu
  5937 ;;		_pauseMenu
  5938 ;;		_secretMenu
  5939 ;;		_speedLimitSettingMenu
  5940 ;;		_stopTimeSettingMenu
  5941 ;;		_driverTimeSettingMenu
  5942 ;; This function uses a non-reentrant model
  5943 ;;
  5944                           
  5945                           	psect	text21
  5946  00523C                     __ptext21:
  5947                           	callstack 0
  5948  00523C                     _sprintf:
  5949                           	callstack 19
  5950  00523C  0ED3               	movlw	low (?_sprintf+4)
  5951  00523E  0100               	movlb	0	; () banked
  5952  005240  6FD9               	movwf	sprintf@ap& (0+255),b
  5953  005242  0E00               	movlw	high (?_sprintf+4)
  5954  005244  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  5955  005246  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  5956  00524A  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  5957  00524E                     
  5958                           ; BSR set to: 0
  5959  00524E  0E00               	movlw	0
  5960  005250  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  5961  005252  0E00               	movlw	0
  5962  005254  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  5963  005256                     
  5964                           ; BSR set to: 0
  5965  005256  0E00               	movlw	0
  5966  005258  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  5967  00525A  0E00               	movlw	0
  5968  00525C  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  5969  00525E                     
  5970                           ; BSR set to: 0
  5971  00525E  0EDB               	movlw	low sprintf@f
  5972  005260  6FC7               	movwf	vfprintf@fp& (0+255),b
  5973  005262  0E00               	movlw	high sprintf@f
  5974  005264  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  5975  005266  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  5976  00526A  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  5977  00526E  0ED9               	movlw	low sprintf@ap
  5978  005270  6FCB               	movwf	vfprintf@ap& (0+255),b
  5979  005272  0E00               	movlw	high sprintf@ap
  5980  005274  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  5981  005276  EC01  F028         	call	_vfprintf	;wreg free
  5982  00527A  0100               	movlb	0	; () banked
  5983  00527C  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  5984  00527E  25CF               	addwf	sprintf@s& (0+255),w,b
  5985  005280  6ED9               	movwf	fsr2l,c
  5986  005282  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  5987  005284  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  5988  005286  6EDA               	movwf	fsr2h,c
  5989  005288  0E00               	movlw	0
  5990  00528A  6EDF               	movwf	indf2,c
  5991  00528C                     
  5992                           ; BSR set to: 0
  5993  00528C  0012               	return		;funcret
  5994  00528E                     __end_of_sprintf:
  5995                           	callstack 0
  5996                           
  5997 ;; *************** function _vfprintf *****************
  5998 ;; Defined at:
  5999 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6000 ;; Parameters:    Size  Location     Type
  6001 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6002 ;;		 -> sprintf@f(6), 
  6003 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6004 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  6005 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6006 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6007 ;;		 -> sprintf@ap(2), 
  6008 ;; Auto vars:     Size  Location     Type
  6009 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6010 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  6011 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6012 ;; Return value:  Size  Location     Type
  6013 ;;                  2  103[BANK0 ] int 
  6014 ;; Registers used:
  6015 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6016 ;; Tracked objects:
  6017 ;;		On entry : 0/0
  6018 ;;		On exit  : 0/0
  6019 ;;		Unchanged: 0/0
  6020 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6021 ;;      Params:         0       6       0       0       0       0       0
  6022 ;;      Locals:         0       2       0       0       0       0       0
  6023 ;;      Temps:          0       0       0       0       0       0       0
  6024 ;;      Totals:         0       8       0       0       0       0       0
  6025 ;;Total ram usage:        8 bytes
  6026 ;; Hardware stack levels used:    1
  6027 ;; Hardware stack levels required when called:    7
  6028 ;; This function calls:
  6029 ;;		_vfpfcnvrt
  6030 ;; This function is called by:
  6031 ;;		_sprintf
  6032 ;; This function uses a non-reentrant model
  6033 ;;
  6034                           
  6035                           	psect	text22
  6036  005002                     __ptext22:
  6037                           	callstack 0
  6038  005002                     _vfprintf:
  6039                           	callstack 19
  6040  005002                     
  6041                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6042  005002  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6043  005006  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6044  00500A                     
  6045                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6046  00500A  0E00               	movlw	0
  6047  00500C  0101               	movlb	1	; () banked
  6048  00500E  6FB0               	movwf	(_nout+1)& (0+255),b
  6049  005010  0E00               	movlw	0
  6050  005012  6FAF               	movwf	_nout& (0+255),b
  6051                           
  6052                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6053  005014  EF23  F028         	goto	l5865
  6054  005018                     l5863:
  6055                           
  6056                           ; BSR set to: 1
  6057                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6058  005018  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6059  00501C  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6060  005020  0ECD               	movlw	low vfprintf@cfmt
  6061  005022  0100               	movlb	0	; () banked
  6062  005024  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6063  005026  0E00               	movlw	high vfprintf@cfmt
  6064  005028  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6065  00502A  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6066  00502E  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6067  005032  EC34  F00A         	call	_vfpfcnvrt	;wreg free
  6068  005036  0100               	movlb	0	; () banked
  6069  005038  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6070  00503A  0101               	movlb	1	; () banked
  6071  00503C  27AF               	addwf	_nout& (0+255),f,b
  6072  00503E  0100               	movlb	0	; () banked
  6073  005040  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6074  005042  0101               	movlb	1	; () banked
  6075  005044  23B0               	addwfc	(_nout+1)& (0+255),f,b
  6076  005046                     l5865:
  6077                           
  6078                           ; BSR set to: 1
  6079                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6080  005046  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6081  00504A  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6082  00504E                     	if	0	;tblptru may be non-zero
  6083  00504E                     	endif
  6084  00504E                     	if	0	;tblptru may be non-zero
  6085  00504E                     	endif
  6086  00504E  0008               	tblrd		*
  6087  005050  50F5               	movf	tablat,w,c
  6088  005052  0900               	iorlw	0
  6089  005054  A4D8               	btfss	status,2,c
  6090  005056  EF2F  F028         	goto	u6871
  6091  00505A  EF31  F028         	goto	u6870
  6092  00505E                     u6871:
  6093  00505E  EF0C  F028         	goto	l5863
  6094  005062                     u6870:
  6095  005062                     
  6096                           ; BSR set to: 1
  6097                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6098  005062  C1AF  F0C7         	movff	_nout,?_vfprintf
  6099  005066  C1B0  F0C8         	movff	_nout+1,?_vfprintf+1
  6100  00506A                     
  6101                           ; BSR set to: 1
  6102  00506A  0012               	return		;funcret
  6103  00506C                     __end_of_vfprintf:
  6104                           	callstack 0
  6105                           
  6106 ;; *************** function _vfpfcnvrt *****************
  6107 ;; Defined at:
  6108 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6109 ;; Parameters:    Size  Location     Type
  6110 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6111 ;;		 -> sprintf@f(6), 
  6112 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6113 ;;		 -> vfprintf@cfmt(2), 
  6114 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6115 ;;		 -> sprintf@ap(2), 
  6116 ;; Auto vars:     Size  Location     Type
  6117 ;;  ll              8   81[BANK0 ] long long 
  6118 ;;  llu             8    0        unsigned long long 
  6119 ;;  f               4   95[BANK0 ] unsigned long long 
  6120 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6121 ;;  vp              3    0        PTR void 
  6122 ;;  cp              3    0        PTR unsigned char 
  6123 ;;  i               2    0        int 
  6124 ;;  done            2    0        int 
  6125 ;;  c               1  102[BANK0 ] unsigned char 
  6126 ;; Return value:  Size  Location     Type
  6127 ;;                  2   71[BANK0 ] int 
  6128 ;; Registers used:
  6129 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6130 ;; Tracked objects:
  6131 ;;		On entry : 0/0
  6132 ;;		On exit  : 0/0
  6133 ;;		Unchanged: 0/0
  6134 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6135 ;;      Params:         0       6       0       0       0       0       0
  6136 ;;      Locals:         0      22       0       0       0       0       0
  6137 ;;      Temps:          0       4       0       0       0       0       0
  6138 ;;      Totals:         0      32       0       0       0       0       0
  6139 ;;Total ram usage:       32 bytes
  6140 ;; Hardware stack levels used:    1
  6141 ;; Hardware stack levels required when called:    6
  6142 ;; This function calls:
  6143 ;;		_atoi
  6144 ;;		_dtoa
  6145 ;;		_efgtoa
  6146 ;;		_fputc
  6147 ;;		_isdigit
  6148 ;;		_isupper
  6149 ;;		_strncmp
  6150 ;;		_tolower
  6151 ;; This function is called by:
  6152 ;;		_vfprintf
  6153 ;; This function uses a non-reentrant model
  6154 ;;
  6155                           
  6156                           	psect	text23
  6157  001468                     __ptext23:
  6158                           	callstack 0
  6159  001468                     _vfpfcnvrt:
  6160                           	callstack 19
  6161  001468                     
  6162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6163  001468  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6164  00146C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6165  001470  CFDE FFF6          	movff	postinc2,tblptrl
  6166  001474  CFDD FFF7          	movff	postdec2,tblptrh
  6167  001478                     	if	0	;tblptru may be non-zero
  6168  001478                     	endif
  6169  001478                     	if	0	;tblptru may be non-zero
  6170  001478                     	endif
  6171  001478  0008               	tblrd		*
  6172  00147A  50F5               	movf	tablat,w,c
  6173  00147C  0A25               	xorlw	37
  6174  00147E  A4D8               	btfss	status,2,c
  6175  001480  EF44  F00A         	goto	u6601
  6176  001484  EF46  F00A         	goto	u6600
  6177  001488                     u6601:
  6178  001488  EF37  F00D         	goto	l5703
  6179  00148C                     u6600:
  6180  00148C                     
  6181                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6182  00148C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6183  001490  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6184  001494  2ADE               	incf	postinc2,f,c
  6185  001496  0E00               	movlw	0
  6186  001498  22DD               	addwfc	postdec2,f,c
  6187  00149A                     
  6188                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6189  00149A  0E00               	movlw	0
  6190  00149C  0101               	movlb	1	; () banked
  6191  00149E  6FB2               	movwf	(_width+1)& (0+255),b
  6192  0014A0  0E00               	movlw	0
  6193  0014A2  6FB1               	movwf	_width& (0+255),b
  6194  0014A4  C1B1  F0F8         	movff	_width,_flags
  6195  0014A8  C1B2  F0F9         	movff	_width+1,_flags+1
  6196  0014AC                     
  6197                           ; BSR set to: 1
  6198                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6199  0014AC  0100               	movlb	0	; () banked
  6200  0014AE  69F6               	setf	_prec& (0+255),b
  6201  0014B0  69F7               	setf	(_prec+1)& (0+255),b
  6202  0014B2                     
  6203                           ; BSR set to: 0
  6204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6205  0014B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6206  0014B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6207  0014BA  CFDE FFF6          	movff	postinc2,tblptrl
  6208  0014BE  CFDD FFF7          	movff	postdec2,tblptrh
  6209  0014C2                     	if	0	;tblptru may be non-zero
  6210  0014C2                     	endif
  6211  0014C2                     	if	0	;tblptru may be non-zero
  6212  0014C2                     	endif
  6213  0014C2  0008               	tblrd		*
  6214  0014C4  50F5               	movf	tablat,w,c
  6215  0014C6  0A2A               	xorlw	42
  6216  0014C8  A4D8               	btfss	status,2,c
  6217  0014CA  EF69  F00A         	goto	u6611
  6218  0014CE  EF6B  F00A         	goto	u6610
  6219  0014D2                     u6611:
  6220  0014D2  EF97  F00A         	goto	l5609
  6221  0014D6                     u6610:
  6222  0014D6                     
  6223                           ; BSR set to: 0
  6224                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6225  0014D6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6226  0014DA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6227  0014DE  2ADE               	incf	postinc2,f,c
  6228  0014E0  0E00               	movlw	0
  6229  0014E2  22DD               	addwfc	postdec2,f,c
  6230                           
  6231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6232  0014E4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6233  0014E8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6234  0014EC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6235  0014F0  0E02               	movlw	2
  6236  0014F2  26DE               	addwf	postinc2,f,c
  6237  0014F4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6238  0014F8  0E00               	movlw	0
  6239  0014FA  22DD               	addwfc	postdec2,f,c
  6240  0014FC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6241  001500  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6242  001504  CFDE F1B1          	movff	postinc2,_width
  6243  001508  CFDD F1B2          	movff	postdec2,_width+1
  6244  00150C                     
  6245                           ; BSR set to: 0
  6246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6247  00150C  0101               	movlb	1	; () banked
  6248  00150E  BFB2               	btfsc	(_width+1)& (0+255),7,b
  6249  001510  EF8E  F00A         	goto	u6620
  6250  001514  EF8C  F00A         	goto	u6621
  6251  001518                     u6621:
  6252  001518  EFDB  F00A         	goto	l5619
  6253  00151C                     u6620:
  6254  00151C                     
  6255                           ; BSR set to: 1
  6256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6257  00151C  0100               	movlb	0	; () banked
  6258  00151E  81F8               	bsf	_flags& (0+255),0,b
  6259                           
  6260                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6261  001520  0101               	movlb	1	; () banked
  6262  001522  6DB1               	negf	_width& (0+255),b
  6263  001524  1FB2               	comf	(_width+1)& (0+255),f,b
  6264  001526  B0D8               	btfsc	status,0,c
  6265  001528  2BB2               	incf	(_width+1)& (0+255),f,b
  6266  00152A  EFDB  F00A         	goto	l5619
  6267  00152E                     l5609:
  6268                           
  6269                           ; BSR set to: 0
  6270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6271  00152E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6272  001532  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6273  001536  CFDE F008          	movff	postinc2,atoi@s
  6274  00153A  CFDD F009          	movff	postdec2,atoi@s+1
  6275  00153E  EC60  F01C         	call	_atoi	;wreg free
  6276  001542  C008  F1B1         	movff	?_atoi,_width
  6277  001546  C009  F1B2         	movff	?_atoi+1,_width+1
  6278                           
  6279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6280  00154A  EFAE  F00A         	goto	l5613
  6281  00154E                     l5611:
  6282                           
  6283                           ; BSR set to: 0
  6284                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6285  00154E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6286  001552  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6287  001556  2ADE               	incf	postinc2,f,c
  6288  001558  0E00               	movlw	0
  6289  00155A  22DD               	addwfc	postdec2,f,c
  6290  00155C                     l5613:
  6291  00155C  0ED0               	movlw	208
  6292  00155E  0100               	movlb	0	; () banked
  6293  001560  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6294  001562  0EFF               	movlw	255
  6295  001564  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6296  001566  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6297  00156A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6298  00156E  CFDE FFF6          	movff	postinc2,tblptrl
  6299  001572  CFDD FFF7          	movff	postdec2,tblptrh
  6300  001576                     	if	0	;tblptru may be non-zero
  6301  001576                     	endif
  6302  001576                     	if	0	;tblptru may be non-zero
  6303  001576                     	endif
  6304  001576  0008               	tblrd		*
  6305  001578  50F5               	movf	tablat,w,c
  6306  00157A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6307  00157C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6308  00157E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6309  001580  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6310  001582  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6311  001584  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6312  001586  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6313  001588  E10A               	bnz	u6630
  6314  00158A  0E0A               	movlw	10
  6315  00158C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6316  00158E  A0D8               	btfss	status,0,c
  6317  001590  EFCC  F00A         	goto	u6631
  6318  001594  EFCF  F00A         	goto	u6630
  6319  001598                     u6631:
  6320  001598  0E01               	movlw	1
  6321  00159A  EFD0  F00A         	goto	u6640
  6322  00159E                     u6630:
  6323  00159E  0E00               	movlw	0
  6324  0015A0                     u6640:
  6325  0015A0  6FB9               	movwf	_vfpfcnvrt$3008& (0+255),b
  6326  0015A2  6BBA               	clrf	(_vfpfcnvrt$3008+1)& (0+255),b
  6327  0015A4                     
  6328                           ; BSR set to: 0
  6329  0015A4  51B9               	movf	_vfpfcnvrt$3008& (0+255),w,b
  6330  0015A6  11BA               	iorwf	(_vfpfcnvrt$3008+1)& (0+255),w,b
  6331  0015A8  A4D8               	btfss	status,2,c
  6332  0015AA  EFD9  F00A         	goto	u6651
  6333  0015AE  EFDB  F00A         	goto	u6650
  6334  0015B2                     u6651:
  6335  0015B2  EFA7  F00A         	goto	l5611
  6336  0015B6                     u6650:
  6337  0015B6                     l5619:
  6338                           
  6339                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6340  0015B6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6341  0015BA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6342  0015BE  CFDE FFF6          	movff	postinc2,tblptrl
  6343  0015C2  CFDD FFF7          	movff	postdec2,tblptrh
  6344  0015C6                     	if	0	;tblptru may be non-zero
  6345  0015C6                     	endif
  6346  0015C6                     	if	0	;tblptru may be non-zero
  6347  0015C6                     	endif
  6348  0015C6  0008               	tblrd		*
  6349  0015C8  50F5               	movf	tablat,w,c
  6350  0015CA  0A2E               	xorlw	46
  6351  0015CC  A4D8               	btfss	status,2,c
  6352  0015CE  EFEB  F00A         	goto	u6661
  6353  0015D2  EFED  F00A         	goto	u6660
  6354  0015D6                     u6661:
  6355  0015D6  EF6C  F00B         	goto	l5639
  6356  0015DA                     u6660:
  6357  0015DA                     
  6358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6359  0015DA  0E00               	movlw	0
  6360  0015DC  0100               	movlb	0	; () banked
  6361  0015DE  6FF7               	movwf	(_prec+1)& (0+255),b
  6362  0015E0  0E00               	movlw	0
  6363  0015E2  6FF6               	movwf	_prec& (0+255),b
  6364  0015E4                     
  6365                           ; BSR set to: 0
  6366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6367  0015E4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6368  0015E8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6369  0015EC  2ADE               	incf	postinc2,f,c
  6370  0015EE  0E00               	movlw	0
  6371  0015F0  22DD               	addwfc	postdec2,f,c
  6372  0015F2                     
  6373                           ; BSR set to: 0
  6374                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6375  0015F2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6376  0015F6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6377  0015FA  CFDE FFF6          	movff	postinc2,tblptrl
  6378  0015FE  CFDD FFF7          	movff	postdec2,tblptrh
  6379  001602                     	if	0	;tblptru may be non-zero
  6380  001602                     	endif
  6381  001602                     	if	0	;tblptru may be non-zero
  6382  001602                     	endif
  6383  001602  0008               	tblrd		*
  6384  001604  50F5               	movf	tablat,w,c
  6385  001606  0A2A               	xorlw	42
  6386  001608  A4D8               	btfss	status,2,c
  6387  00160A  EF09  F00B         	goto	u6671
  6388  00160E  EF0B  F00B         	goto	u6670
  6389  001612                     u6671:
  6390  001612  EF28  F00B         	goto	l5629
  6391  001616                     u6670:
  6392  001616                     
  6393                           ; BSR set to: 0
  6394                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6395  001616  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6396  00161A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6397  00161E  2ADE               	incf	postinc2,f,c
  6398  001620  0E00               	movlw	0
  6399  001622  22DD               	addwfc	postdec2,f,c
  6400                           
  6401                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6402  001624  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6403  001628  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6404  00162C  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6405  001630  0E02               	movlw	2
  6406  001632  26DE               	addwf	postinc2,f,c
  6407  001634  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6408  001638  0E00               	movlw	0
  6409  00163A  22DD               	addwfc	postdec2,f,c
  6410  00163C  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6411  001640  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6412  001644  CFDE F0F6          	movff	postinc2,_prec
  6413  001648  CFDD F0F7          	movff	postdec2,_prec+1
  6414                           
  6415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6416  00164C  EF6C  F00B         	goto	l5639
  6417  001650                     l5629:
  6418                           
  6419                           ; BSR set to: 0
  6420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6421  001650  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6422  001654  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6423  001658  CFDE F008          	movff	postinc2,atoi@s
  6424  00165C  CFDD F009          	movff	postdec2,atoi@s+1
  6425  001660  EC60  F01C         	call	_atoi	;wreg free
  6426  001664  C008  F0F6         	movff	?_atoi,_prec
  6427  001668  C009  F0F7         	movff	?_atoi+1,_prec+1
  6428                           
  6429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6430  00166C  EF3F  F00B         	goto	l5633
  6431  001670                     l5631:
  6432                           
  6433                           ; BSR set to: 0
  6434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6435  001670  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6436  001674  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6437  001678  2ADE               	incf	postinc2,f,c
  6438  00167A  0E00               	movlw	0
  6439  00167C  22DD               	addwfc	postdec2,f,c
  6440  00167E                     l5633:
  6441  00167E  0ED0               	movlw	208
  6442  001680  0100               	movlb	0	; () banked
  6443  001682  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6444  001684  0EFF               	movlw	255
  6445  001686  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6446  001688  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6447  00168C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6448  001690  CFDE FFF6          	movff	postinc2,tblptrl
  6449  001694  CFDD FFF7          	movff	postdec2,tblptrh
  6450  001698                     	if	0	;tblptru may be non-zero
  6451  001698                     	endif
  6452  001698                     	if	0	;tblptru may be non-zero
  6453  001698                     	endif
  6454  001698  0008               	tblrd		*
  6455  00169A  50F5               	movf	tablat,w,c
  6456  00169C  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6457  00169E  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6458  0016A0  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6459  0016A2  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6460  0016A4  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6461  0016A6  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6462  0016A8  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6463  0016AA  E10A               	bnz	u6680
  6464  0016AC  0E0A               	movlw	10
  6465  0016AE  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6466  0016B0  A0D8               	btfss	status,0,c
  6467  0016B2  EF5D  F00B         	goto	u6681
  6468  0016B6  EF60  F00B         	goto	u6680
  6469  0016BA                     u6681:
  6470  0016BA  0E01               	movlw	1
  6471  0016BC  EF61  F00B         	goto	u6690
  6472  0016C0                     u6680:
  6473  0016C0  0E00               	movlw	0
  6474  0016C2                     u6690:
  6475  0016C2  6FBB               	movwf	_vfpfcnvrt$3009& (0+255),b
  6476  0016C4  6BBC               	clrf	(_vfpfcnvrt$3009+1)& (0+255),b
  6477  0016C6                     
  6478                           ; BSR set to: 0
  6479  0016C6  51BB               	movf	_vfpfcnvrt$3009& (0+255),w,b
  6480  0016C8  11BC               	iorwf	(_vfpfcnvrt$3009+1)& (0+255),w,b
  6481  0016CA  A4D8               	btfss	status,2,c
  6482  0016CC  EF6A  F00B         	goto	u6701
  6483  0016D0  EF6C  F00B         	goto	u6700
  6484  0016D4                     u6701:
  6485  0016D4  EF38  F00B         	goto	l5631
  6486  0016D8                     u6700:
  6487  0016D8                     l5639:
  6488                           
  6489                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6490  0016D8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6491  0016DC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6492  0016E0  CFDE FFF6          	movff	postinc2,tblptrl
  6493  0016E4  CFDD FFF7          	movff	postdec2,tblptrh
  6494  0016E8                     	if	0	;tblptru may be non-zero
  6495  0016E8                     	endif
  6496  0016E8                     	if	0	;tblptru may be non-zero
  6497  0016E8                     	endif
  6498  0016E8  0008               	tblrd		*
  6499  0016EA  50F5               	movf	tablat,w,c
  6500  0016EC  6E07               	movwf	tolower@c^0,c
  6501  0016EE  6A08               	clrf	(tolower@c+1)^0,c
  6502  0016F0  EC69  F028         	call	_tolower	;wreg free
  6503  0016F4  5007               	movf	?_tolower^0,w,c
  6504  0016F6  0100               	movlb	0	; () banked
  6505  0016F8  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6506  0016FA                     
  6507                           ; BSR set to: 0
  6508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6509  0016FA  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6510  0016FC  B4D8               	btfsc	status,2,c
  6511  0016FE  EF83  F00B         	goto	u6711
  6512  001702  EF85  F00B         	goto	u6710
  6513  001706                     u6711:
  6514  001706  EFBF  F00B         	goto	l5649
  6515  00170A                     u6710:
  6516  00170A                     
  6517                           ; BSR set to: 0
  6518                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6519  00170A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6520  00170E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6521  001712  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6522  001716  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6523  00171A  0E01               	movlw	1
  6524  00171C  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6525  00171E  0E00               	movlw	0
  6526  001720  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6527  001722  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6528  001726  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6529  00172A                     	if	0	;tblptru may be non-zero
  6530  00172A                     	endif
  6531  00172A                     	if	0	;tblptru may be non-zero
  6532  00172A                     	endif
  6533  00172A  0008               	tblrd		*
  6534  00172C  50F5               	movf	tablat,w,c
  6535  00172E  6E07               	movwf	tolower@c^0,c
  6536  001730  6A08               	clrf	(tolower@c+1)^0,c
  6537  001732  EC69  F028         	call	_tolower	;wreg free
  6538  001736  5007               	movf	?_tolower^0,w,c
  6539  001738  0100               	movlb	0	; () banked
  6540  00173A  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6541  00173C                     
  6542                           ; BSR set to: 0
  6543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6544  00173C  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6545  00173E  B4D8               	btfsc	status,2,c
  6546  001740  EFA4  F00B         	goto	u6721
  6547  001744  EFA6  F00B         	goto	u6720
  6548  001748                     u6721:
  6549  001748  EFBF  F00B         	goto	l5649
  6550  00174C                     u6720:
  6551  00174C                     
  6552                           ; BSR set to: 0
  6553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6554  00174C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6555  001750  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6556  001754  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6557  001758  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6558  00175C  0E02               	movlw	2
  6559  00175E  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6560  001760  0E00               	movlw	0
  6561  001762  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6562  001764  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6563  001768  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6564  00176C                     	if	0	;tblptru may be non-zero
  6565  00176C                     	endif
  6566  00176C                     	if	0	;tblptru may be non-zero
  6567  00176C                     	endif
  6568  00176C  0008               	tblrd		*
  6569  00176E  50F5               	movf	tablat,w,c
  6570  001770  6E07               	movwf	tolower@c^0,c
  6571  001772  6A08               	clrf	(tolower@c+1)^0,c
  6572  001774  EC69  F028         	call	_tolower	;wreg free
  6573  001778  5007               	movf	?_tolower^0,w,c
  6574  00177A  0100               	movlb	0	; () banked
  6575  00177C  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6576  00177E                     l5649:
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6580  00177E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6581  001782  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6582  001786  CFDE FFF6          	movff	postinc2,tblptrl
  6583  00178A  CFDD FFF7          	movff	postdec2,tblptrh
  6584  00178E                     	if	0	;tblptru may be non-zero
  6585  00178E                     	endif
  6586  00178E                     	if	0	;tblptru may be non-zero
  6587  00178E                     	endif
  6588  00178E  0008               	tblrd		*
  6589  001790  50F5               	movf	tablat,w,c
  6590  001792  0A64               	xorlw	100
  6591  001794  B4D8               	btfsc	status,2,c
  6592  001796  EFCF  F00B         	goto	u6731
  6593  00179A  EFD1  F00B         	goto	u6730
  6594  00179E                     u6731:
  6595  00179E  EFE3  F00B         	goto	l5653
  6596  0017A2                     u6730:
  6597  0017A2                     
  6598                           ; BSR set to: 0
  6599  0017A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6600  0017A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6601  0017AA  CFDE FFF6          	movff	postinc2,tblptrl
  6602  0017AE  CFDD FFF7          	movff	postdec2,tblptrh
  6603  0017B2                     	if	0	;tblptru may be non-zero
  6604  0017B2                     	endif
  6605  0017B2                     	if	0	;tblptru may be non-zero
  6606  0017B2                     	endif
  6607  0017B2  0008               	tblrd		*
  6608  0017B4  50F5               	movf	tablat,w,c
  6609  0017B6  0A69               	xorlw	105
  6610  0017B8  A4D8               	btfss	status,2,c
  6611  0017BA  EFE1  F00B         	goto	u6741
  6612  0017BE  EFE3  F00B         	goto	u6740
  6613  0017C2                     u6741:
  6614  0017C2  EF23  F00C         	goto	l5659
  6615  0017C6                     u6740:
  6616  0017C6                     l5653:
  6617                           
  6618                           ; BSR set to: 0
  6619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6620  0017C6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6621  0017CA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6622  0017CE  2ADE               	incf	postinc2,f,c
  6623  0017D0  0E00               	movlw	0
  6624  0017D2  22DD               	addwfc	postdec2,f,c
  6625                           
  6626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6627  0017D4  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6628  0017D8  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6629  0017DC  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6630  0017E0  0E02               	movlw	2
  6631  0017E2  26DE               	addwf	postinc2,f,c
  6632  0017E4  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6633  0017E8  0E00               	movlw	0
  6634  0017EA  22DD               	addwfc	postdec2,f,c
  6635  0017EC  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6636  0017F0  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6637  0017F4  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6638  0017F8  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6639  0017FC  0E00               	movlw	0
  6640  0017FE  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6641  001800  0EFF               	movlw	-1
  6642  001802  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6643  001804  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6644  001806  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6645  001808  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6646  00180A  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6647  00180C  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6648  00180E                     
  6649                           ; BSR set to: 0
  6650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6651  00180E  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6652  001812  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6653  001816  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6654  00181A  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6655  00181E  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6656  001822  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6657  001826  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6658  00182A  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6659  00182E  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6660  001832  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6661  001836  EC08  F015         	call	_dtoa	;wreg free
  6662  00183A  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6663  00183E  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6664  001842  EF52  F00D         	goto	l1575
  6665  001846                     l5659:
  6666                           
  6667                           ; BSR set to: 0
  6668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6669  001846  0E66               	movlw	102
  6670  001848  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6671  00184A  A4D8               	btfss	status,2,c
  6672  00184C  EF2A  F00C         	goto	u6751
  6673  001850  EF2C  F00C         	goto	u6750
  6674  001854                     u6751:
  6675  001854  EF6C  F00C         	goto	l5671
  6676  001858                     u6750:
  6677  001858                     
  6678                           ; BSR set to: 0
  6679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6680  001858  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6681  00185C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6682  001860  CFDE FFF6          	movff	postinc2,tblptrl
  6683  001864  CFDD FFF7          	movff	postdec2,tblptrh
  6684  001868                     	if	0	;tblptru may be non-zero
  6685  001868                     	endif
  6686  001868                     	if	0	;tblptru may be non-zero
  6687  001868                     	endif
  6688  001868  0008               	tblrd		*
  6689  00186A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6690  00186E                     
  6691                           ; BSR set to: 0
  6692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6693  00186E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6694  001872  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6695  001876  2ADE               	incf	postinc2,f,c
  6696  001878  0E00               	movlw	0
  6697  00187A  22DD               	addwfc	postdec2,f,c
  6698  00187C                     
  6699                           ; BSR set to: 0
  6700                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6701  00187C  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6702  001880  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6703  001884  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6704  001888  0E04               	movlw	4
  6705  00188A  26DE               	addwf	postinc2,f,c
  6706  00188C  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6707  001890  0E00               	movlw	0
  6708  001892  22DD               	addwfc	postdec2,f,c
  6709  001894  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6710  001898  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6711  00189C  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6712  0018A0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6713  0018A4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6714  0018A8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6715  0018AC                     l5667:
  6716                           
  6717                           ; BSR set to: 0
  6718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  6719  0018AC  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  6720  0018B0  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  6721  0018B4  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  6722  0018B8  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  6723  0018BC  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  6724  0018C0  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  6725  0018C4  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  6726  0018C8  EC59  F000         	call	_efgtoa	;wreg free
  6727  0018CC  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  6728  0018D0  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  6729  0018D4  EF52  F00D         	goto	l1575
  6730  0018D8                     l5671:
  6731                           
  6732                           ; BSR set to: 0
  6733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  6734  0018D8  0EC3               	movlw	low vfpfcnvrt@ct
  6735  0018DA  6E01               	movwf	strncmp@_l^0,c
  6736  0018DC  0E00               	movlw	high vfpfcnvrt@ct
  6737  0018DE  6E02               	movwf	(strncmp@_l+1)^0,c
  6738  0018E0  0EFB               	movlw	low STR_27
  6739  0018E2  6E03               	movwf	strncmp@_r^0,c
  6740  0018E4  0E7F               	movlw	high STR_27
  6741  0018E6  6E04               	movwf	(strncmp@_r+1)^0,c
  6742  0018E8  0E00               	movlw	0
  6743  0018EA  6E06               	movwf	(strncmp@n+1)^0,c
  6744  0018EC  0E02               	movlw	2
  6745  0018EE  6E05               	movwf	strncmp@n^0,c
  6746  0018F0  ECEF  F022         	call	_strncmp	;wreg free
  6747  0018F4  5001               	movf	?_strncmp^0,w,c
  6748  0018F6  1002               	iorwf	(?_strncmp+1)^0,w,c
  6749  0018F8  A4D8               	btfss	status,2,c
  6750  0018FA  EF81  F00C         	goto	u6761
  6751  0018FE  EF83  F00C         	goto	u6760
  6752  001902                     u6761:
  6753  001902  EFFF  F00C         	goto	l5687
  6754  001906                     u6760:
  6755  001906                     
  6756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  6757  001906  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6758  00190A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6759  00190E  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6760  001912  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6761  001916  0E01               	movlw	1
  6762  001918  0100               	movlb	0	; () banked
  6763  00191A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6764  00191C  0E00               	movlw	0
  6765  00191E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6766  001920  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6767  001924  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6768  001928                     	if	0	;tblptru may be non-zero
  6769  001928                     	endif
  6770  001928                     	if	0	;tblptru may be non-zero
  6771  001928                     	endif
  6772  001928  0008               	tblrd		*
  6773  00192A  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6774  00192E  0EBF               	movlw	191
  6775  001930  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6776  001932  0EFF               	movlw	255
  6777  001934  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6778  001936  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6779  00193A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6780  00193E  CFDE FFF6          	movff	postinc2,tblptrl
  6781  001942  CFDD FFF7          	movff	postdec2,tblptrh
  6782  001946                     	if	0	;tblptru may be non-zero
  6783  001946                     	endif
  6784  001946                     	if	0	;tblptru may be non-zero
  6785  001946                     	endif
  6786  001946  0008               	tblrd		*
  6787  001948  50F5               	movf	tablat,w,c
  6788  00194A  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6789  00194C  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6790  00194E  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6791  001950  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6792  001952  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6793  001954  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6794  001956  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6795  001958  E10A               	bnz	u6770
  6796  00195A  0E1A               	movlw	26
  6797  00195C  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6798  00195E  A0D8               	btfss	status,0,c
  6799  001960  EFB4  F00C         	goto	u6771
  6800  001964  EFB7  F00C         	goto	u6770
  6801  001968                     u6771:
  6802  001968  0E01               	movlw	1
  6803  00196A  EFB8  F00C         	goto	u6780
  6804  00196E                     u6770:
  6805  00196E  0E00               	movlw	0
  6806  001970                     u6780:
  6807  001970  6FBD               	movwf	_vfpfcnvrt$3014& (0+255),b
  6808  001972  6BBE               	clrf	(_vfpfcnvrt$3014+1)& (0+255),b
  6809  001974                     
  6810                           ; BSR set to: 0
  6811  001974  51BD               	movf	_vfpfcnvrt$3014& (0+255),w,b
  6812  001976  11BE               	iorwf	(_vfpfcnvrt$3014+1)& (0+255),w,b
  6813  001978  B4D8               	btfsc	status,2,c
  6814  00197A  EFC1  F00C         	goto	u6791
  6815  00197E  EFC3  F00C         	goto	u6790
  6816  001982                     u6791:
  6817  001982  EFDD  F00C         	goto	l5681
  6818  001986                     u6790:
  6819  001986                     
  6820                           ; BSR set to: 0
  6821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  6822  001986  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6823  00198A  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6824  00198E  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6825  001992  0E04               	movlw	4
  6826  001994  26DE               	addwf	postinc2,f,c
  6827  001996  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6828  00199A  0E00               	movlw	0
  6829  00199C  22DD               	addwfc	postdec2,f,c
  6830  00199E  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6831  0019A2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6832  0019A6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6833  0019AA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6834  0019AE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6835  0019B2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6836                           
  6837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  6838  0019B6  EFF5  F00C         	goto	l1583
  6839  0019BA                     l5681:
  6840                           
  6841                           ; BSR set to: 0
  6842                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6843  0019BA  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6844  0019BE  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6845  0019C2  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6846  0019C6  0E04               	movlw	4
  6847  0019C8  26DE               	addwf	postinc2,f,c
  6848  0019CA  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6849  0019CE  0E00               	movlw	0
  6850  0019D0  22DD               	addwfc	postdec2,f,c
  6851  0019D2  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6852  0019D6  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6853  0019DA  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  6854  0019DE  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  6855  0019E2  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  6856  0019E6  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  6857  0019EA                     l1583:
  6858                           
  6859                           ; BSR set to: 0
  6860                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  6861  0019EA  0E02               	movlw	2
  6862  0019EC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6863  0019F0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6864  0019F4  26DE               	addwf	postinc2,f,c
  6865  0019F6  0E00               	movlw	0
  6866  0019F8  22DD               	addwfc	postdec2,f,c
  6867  0019FA  EF56  F00C         	goto	l5667
  6868  0019FE                     l5687:
  6869                           
  6870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  6871  0019FE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6872  001A02  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6873  001A06  CFDE FFF6          	movff	postinc2,tblptrl
  6874  001A0A  CFDD FFF7          	movff	postdec2,tblptrh
  6875  001A0E                     	if	0	;tblptru may be non-zero
  6876  001A0E                     	endif
  6877  001A0E                     	if	0	;tblptru may be non-zero
  6878  001A0E                     	endif
  6879  001A0E  0008               	tblrd		*
  6880  001A10  50F5               	movf	tablat,w,c
  6881  001A12  0A25               	xorlw	37
  6882  001A14  A4D8               	btfss	status,2,c
  6883  001A16  EF0F  F00D         	goto	u6801
  6884  001A1A  EF11  F00D         	goto	u6800
  6885  001A1E                     u6801:
  6886  001A1E  EF29  F00D         	goto	l5697
  6887  001A22                     u6800:
  6888  001A22                     
  6889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  6890  001A22  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6891  001A26  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6892  001A2A  2ADE               	incf	postinc2,f,c
  6893  001A2C  0E00               	movlw	0
  6894  001A2E  22DD               	addwfc	postdec2,f,c
  6895  001A30                     
  6896                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  6897  001A30  0E00               	movlw	0
  6898  001A32  6E02               	movwf	(fputc@c+1)^0,c
  6899  001A34  0E25               	movlw	37
  6900  001A36  6E01               	movwf	fputc@c^0,c
  6901  001A38  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6902  001A3C  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6903  001A40  ECC3  F023         	call	_fputc	;wreg free
  6904  001A44                     l5693:
  6905                           
  6906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  6907  001A44  0E00               	movlw	0
  6908  001A46  0100               	movlb	0	; () banked
  6909  001A48  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6910  001A4A  0E01               	movlw	1
  6911  001A4C  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6912  001A4E  EF52  F00D         	goto	l1575
  6913  001A52                     l5697:
  6914                           
  6915                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  6916  001A52  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6917  001A56  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6918  001A5A  2ADE               	incf	postinc2,f,c
  6919  001A5C  0E00               	movlw	0
  6920  001A5E  22DD               	addwfc	postdec2,f,c
  6921  001A60                     
  6922                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  6923  001A60  0E00               	movlw	0
  6924  001A62  0100               	movlb	0	; () banked
  6925  001A64  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  6926  001A66  0E00               	movlw	0
  6927  001A68  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  6928  001A6A  EF52  F00D         	goto	l1575
  6929  001A6E                     l5703:
  6930                           
  6931                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  6932  001A6E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6933  001A72  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6934  001A76  CFDE FFF6          	movff	postinc2,tblptrl
  6935  001A7A  CFDD FFF7          	movff	postdec2,tblptrh
  6936  001A7E                     	if	0	;tblptru may be non-zero
  6937  001A7E                     	endif
  6938  001A7E                     	if	0	;tblptru may be non-zero
  6939  001A7E                     	endif
  6940  001A7E  0008               	tblrd		*
  6941  001A80  50F5               	movf	tablat,w,c
  6942  001A82  6E01               	movwf	fputc@c^0,c
  6943  001A84  6A02               	clrf	(fputc@c+1)^0,c
  6944  001A86  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  6945  001A8A  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  6946  001A8E  ECC3  F023         	call	_fputc	;wreg free
  6947  001A92                     
  6948                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  6949  001A92  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6950  001A96  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6951  001A9A  2ADE               	incf	postinc2,f,c
  6952  001A9C  0E00               	movlw	0
  6953  001A9E  22DD               	addwfc	postdec2,f,c
  6954  001AA0  EF22  F00D         	goto	l5693
  6955  001AA4                     l1575:
  6956  001AA4  0012               	return		;funcret
  6957  001AA6                     __end_of_vfpfcnvrt:
  6958                           	callstack 0
  6959                           
  6960 ;; *************** function _strncmp *****************
  6961 ;; Defined at:
  6962 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  6963 ;; Parameters:    Size  Location     Type
  6964 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  6965 ;;		 -> vfpfcnvrt@ct(3), 
  6966 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  6967 ;;		 -> STR_29(3), 
  6968 ;;  n               2    4[COMRAM] unsigned int 
  6969 ;; Auto vars:     Size  Location     Type
  6970 ;;  r               2    9[COMRAM] PTR const unsigned char 
  6971 ;;		 -> STR_29(3), 
  6972 ;;  l               2    7[COMRAM] PTR const unsigned char 
  6973 ;;		 -> vfpfcnvrt@ct(3), 
  6974 ;; Return value:  Size  Location     Type
  6975 ;;                  2    0[COMRAM] int 
  6976 ;; Registers used:
  6977 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6978 ;; Tracked objects:
  6979 ;;		On entry : 0/0
  6980 ;;		On exit  : 0/0
  6981 ;;		Unchanged: 0/0
  6982 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6983 ;;      Params:         6       0       0       0       0       0       0
  6984 ;;      Locals:         4       0       0       0       0       0       0
  6985 ;;      Temps:          1       0       0       0       0       0       0
  6986 ;;      Totals:        11       0       0       0       0       0       0
  6987 ;;Total ram usage:       11 bytes
  6988 ;; Hardware stack levels used:    1
  6989 ;; Hardware stack levels required when called:    1
  6990 ;; This function calls:
  6991 ;;		Nothing
  6992 ;; This function is called by:
  6993 ;;		_vfpfcnvrt
  6994 ;; This function uses a non-reentrant model
  6995 ;;
  6996                           
  6997                           	psect	text24
  6998  0045DE                     __ptext24:
  6999                           	callstack 0
  7000  0045DE                     _strncmp:
  7001                           	callstack 23
  7002  0045DE  C001  F008         	movff	strncmp@_l,strncmp@l
  7003  0045E2  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7004  0045E6  C003  F00A         	movff	strncmp@_r,strncmp@r
  7005  0045EA  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7006  0045EE  0605               	decf	strncmp@n^0,f,c
  7007  0045F0  A0D8               	btfss	status,0,c
  7008  0045F2  0606               	decf	(strncmp@n+1)^0,f,c
  7009  0045F4  2805               	incf	strncmp@n^0,w,c
  7010  0045F6  E106               	bnz	u6351
  7011  0045F8  2806               	incf	(strncmp@n+1)^0,w,c
  7012  0045FA  A4D8               	btfss	status,2,c
  7013  0045FC  EF02  F023         	goto	u6351
  7014  004600  EF04  F023         	goto	u6350
  7015  004604                     u6351:
  7016  004604  EF11  F023         	goto	l5465
  7017  004608                     u6350:
  7018  004608  0E00               	movlw	0
  7019  00460A  6E02               	movwf	(?_strncmp+1)^0,c
  7020  00460C  0E00               	movlw	0
  7021  00460E  6E01               	movwf	?_strncmp^0,c
  7022  004610  EF59  F023         	goto	l1711
  7023  004614                     l5463:
  7024  004614  4A08               	infsnz	strncmp@l^0,f,c
  7025  004616  2A09               	incf	(strncmp@l+1)^0,f,c
  7026  004618  4A0A               	infsnz	strncmp@r^0,f,c
  7027  00461A  2A0B               	incf	(strncmp@r+1)^0,f,c
  7028  00461C  0605               	decf	strncmp@n^0,f,c
  7029  00461E  A0D8               	btfss	status,0,c
  7030  004620  0606               	decf	(strncmp@n+1)^0,f,c
  7031  004622                     l5465:
  7032  004622  C008  FFD9         	movff	strncmp@l,fsr2l
  7033  004626  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7034  00462A  50DF               	movf	indf2,w,c
  7035  00462C  B4D8               	btfsc	status,2,c
  7036  00462E  EF1B  F023         	goto	u6361
  7037  004632  EF1D  F023         	goto	u6360
  7038  004636                     u6361:
  7039  004636  EF48  F023         	goto	l5473
  7040  00463A                     u6360:
  7041  00463A  C00A  FFF6         	movff	strncmp@r,tblptrl
  7042  00463E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7043  004642                     	if	0	;tblptru may be non-zero
  7044  004642                     	endif
  7045  004642                     	if	0	;tblptru may be non-zero
  7046  004642                     	endif
  7047  004642  0008               	tblrd		*
  7048  004644  50F5               	movf	tablat,w,c
  7049  004646  0900               	iorlw	0
  7050  004648  B4D8               	btfsc	status,2,c
  7051  00464A  EF29  F023         	goto	u6371
  7052  00464E  EF2B  F023         	goto	u6370
  7053  004652                     u6371:
  7054  004652  EF48  F023         	goto	l5473
  7055  004656                     u6370:
  7056  004656  5005               	movf	strncmp@n^0,w,c
  7057  004658  1006               	iorwf	(strncmp@n+1)^0,w,c
  7058  00465A  B4D8               	btfsc	status,2,c
  7059  00465C  EF32  F023         	goto	u6381
  7060  004660  EF34  F023         	goto	u6380
  7061  004664                     u6381:
  7062  004664  EF48  F023         	goto	l5473
  7063  004668                     u6380:
  7064  004668  C008  FFD9         	movff	strncmp@l,fsr2l
  7065  00466C  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7066  004670  50DF               	movf	indf2,w,c
  7067  004672  6E07               	movwf	??_strncmp^0,c
  7068  004674  C00A  FFF6         	movff	strncmp@r,tblptrl
  7069  004678  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7070  00467C                     	if	0	;tblptru may be non-zero
  7071  00467C                     	endif
  7072  00467C                     	if	0	;tblptru may be non-zero
  7073  00467C                     	endif
  7074  00467C  0008               	tblrd		*
  7075  00467E  50F5               	movf	tablat,w,c
  7076  004680  1807               	xorwf	??_strncmp^0,w,c
  7077  004682  B4D8               	btfsc	status,2,c
  7078  004684  EF46  F023         	goto	u6391
  7079  004688  EF48  F023         	goto	u6390
  7080  00468C                     u6391:
  7081  00468C  EF0A  F023         	goto	l5463
  7082  004690                     u6390:
  7083  004690                     l5473:
  7084  004690  C008  FFD9         	movff	strncmp@l,fsr2l
  7085  004694  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7086  004698  50DF               	movf	indf2,w,c
  7087  00469A  6E07               	movwf	??_strncmp^0,c
  7088  00469C  C00A  FFF6         	movff	strncmp@r,tblptrl
  7089  0046A0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7090  0046A4                     	if	0	;tblptru may be non-zero
  7091  0046A4                     	endif
  7092  0046A4                     	if	0	;tblptru may be non-zero
  7093  0046A4                     	endif
  7094  0046A4  0008               	tblrd		*
  7095  0046A6  50F5               	movf	tablat,w,c
  7096  0046A8  5C07               	subwf	??_strncmp^0,w,c
  7097  0046AA  6E01               	movwf	?_strncmp^0,c
  7098  0046AC  6A02               	clrf	(?_strncmp+1)^0,c
  7099  0046AE  A0D8               	btfss	status,0,c
  7100  0046B0  0602               	decf	(?_strncmp+1)^0,f,c
  7101  0046B2                     l1711:
  7102  0046B2  0012               	return		;funcret
  7103  0046B4                     __end_of_strncmp:
  7104                           	callstack 0
  7105                           
  7106 ;; *************** function _efgtoa *****************
  7107 ;; Defined at:
  7108 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7109 ;; Parameters:    Size  Location     Type
  7110 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7111 ;;		 -> sprintf@f(6), 
  7112 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7113 ;;  c               1   93[COMRAM] unsigned char 
  7114 ;; Auto vars:     Size  Location     Type
  7115 ;;  u               4   67[BANK0 ] unsigned char 
  7116 ;;  g               4   59[BANK0 ] unsigned char 
  7117 ;;  l               4   53[BANK0 ] unsigned char 
  7118 ;;  h               4   49[BANK0 ] unsigned char 
  7119 ;;  ou              4   15[BANK0 ] unsigned char 
  7120 ;;  n               2   65[BANK0 ] int 
  7121 ;;  e               2   63[BANK0 ] int 
  7122 ;;  i               2   57[BANK0 ] int 
  7123 ;;  w               2   46[BANK0 ] int 
  7124 ;;  p               2   43[BANK0 ] int 
  7125 ;;  sign            2   41[BANK0 ] int 
  7126 ;;  d               2   39[BANK0 ] int 
  7127 ;;  ne              2   37[BANK0 ] int 
  7128 ;;  m               2   35[BANK0 ] int 
  7129 ;;  pp              2   33[BANK0 ] int 
  7130 ;;  t               2   31[BANK0 ] int 
  7131 ;;  mode            1   48[BANK0 ] unsigned char 
  7132 ;;  nmode           1   45[BANK0 ] unsigned char 
  7133 ;; Return value:  Size  Location     Type
  7134 ;;                  2   87[COMRAM] int 
  7135 ;; Registers used:
  7136 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7137 ;; Tracked objects:
  7138 ;;		On entry : 0/0
  7139 ;;		On exit  : 0/0
  7140 ;;		Unchanged: 0/0
  7141 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7142 ;;      Params:         7       0       0       0       0       0       0
  7143 ;;      Locals:         0      56       0       0       0       0       0
  7144 ;;      Temps:          0       5       0       0       0       0       0
  7145 ;;      Totals:         7      61       0       0       0       0       0
  7146 ;;Total ram usage:       68 bytes
  7147 ;; Hardware stack levels used:    1
  7148 ;; Hardware stack levels required when called:    5
  7149 ;; This function calls:
  7150 ;;		___awdiv
  7151 ;;		___awmod
  7152 ;;		___fladd
  7153 ;;		___fldiv
  7154 ;;		___fleq
  7155 ;;		___flge
  7156 ;;		___flmul
  7157 ;;		___flneg
  7158 ;;		___flsub
  7159 ;;		___fltol
  7160 ;;		___fpclassifyf
  7161 ;;		_floorf
  7162 ;;		_isupper
  7163 ;;		_pad
  7164 ;;		_strcpy
  7165 ;;		_tolower
  7166 ;; This function is called by:
  7167 ;;		_vfpfcnvrt
  7168 ;; This function uses a non-reentrant model
  7169 ;;
  7170                           
  7171                           	psect	text25
  7172  0000B2                     __ptext25:
  7173                           	callstack 0
  7174  0000B2                     _efgtoa:
  7175                           	callstack 19
  7176  0000B2                     
  7177                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7178  0000B2  0E00               	movlw	0
  7179  0000B4  0100               	movlb	0	; () banked
  7180  0000B6  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7181  0000B8  0E00               	movlw	0
  7182  0000BA  6F89               	movwf	efgtoa@sign& (0+255),b
  7183  0000BC                     
  7184                           ; BSR set to: 0
  7185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7186  0000BC  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7187  0000C0  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7188  0000C4  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7189  0000C8  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7190  0000CC                     
  7191                           ; BSR set to: 0
  7192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7193  0000CC  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7194  0000CE  EF6D  F000         	goto	u5760
  7195  0000D2  EF6B  F000         	goto	u5761
  7196  0000D6                     u5761:
  7197  0000D6  EF83  F000         	goto	l5127
  7198  0000DA                     u5760:
  7199  0000DA                     
  7200                           ; BSR set to: 0
  7201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7202  0000DA  0E00               	movlw	0
  7203  0000DC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7204  0000DE  0E01               	movlw	1
  7205  0000E0  6F89               	movwf	efgtoa@sign& (0+255),b
  7206  0000E2                     
  7207                           ; BSR set to: 0
  7208                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7209  0000E2  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7210  0000E6  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7211  0000EA  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7212  0000EE  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7213  0000F2  ECB3  F02A         	call	___flneg	;wreg free
  7214  0000F6  C001  F09B         	movff	?___flneg,efgtoa@g
  7215  0000FA  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7216  0000FE  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7217  000102  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7218  000106                     l5127:
  7219                           
  7220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7221  000106  0E00               	movlw	0
  7222  000108  0100               	movlb	0	; () banked
  7223  00010A  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7224  00010C  0E00               	movlw	0
  7225  00010E  6FA1               	movwf	efgtoa@n& (0+255),b
  7226  000110                     
  7227                           ; BSR set to: 0
  7228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7229  000110  C1B1  F08E         	movff	_width,efgtoa@w
  7230  000114  C1B2  F08F         	movff	_width+1,efgtoa@w+1
  7231  000118                     
  7232                           ; BSR set to: 0
  7233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7234  000118  5189               	movf	efgtoa@sign& (0+255),w,b
  7235  00011A  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7236  00011C  A4D8               	btfss	status,2,c
  7237  00011E  EF93  F000         	goto	u5771
  7238  000122  EF95  F000         	goto	u5770
  7239  000126                     u5771:
  7240  000126  EF9C  F000         	goto	l5135
  7241  00012A                     u5770:
  7242  00012A                     
  7243                           ; BSR set to: 0
  7244  00012A  A5F8               	btfss	_flags& (0+255),2,b
  7245  00012C  EF9A  F000         	goto	u5781
  7246  000130  EF9C  F000         	goto	u5780
  7247  000134                     u5781:
  7248  000134  EFB6  F000         	goto	l5147
  7249  000138                     u5780:
  7250  000138                     l5135:
  7251                           
  7252                           ; BSR set to: 0
  7253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7254  000138  5189               	movf	efgtoa@sign& (0+255),w,b
  7255  00013A  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7256  00013C  A4D8               	btfss	status,2,c
  7257  00013E  EFA3  F000         	goto	u5791
  7258  000142  EFA5  F000         	goto	u5790
  7259  000146                     u5791:
  7260  000146  EFAB  F000         	goto	l5139
  7261  00014A                     u5790:
  7262  00014A                     
  7263                           ; BSR set to: 0
  7264  00014A  0E00               	movlw	0
  7265  00014C  6F74               	movwf	(_efgtoa$2983+1)& (0+255),b
  7266  00014E  0E2B               	movlw	43
  7267  000150  6F73               	movwf	_efgtoa$2983& (0+255),b
  7268  000152  EFAF  F000         	goto	l5141
  7269  000156                     l5139:
  7270                           
  7271                           ; BSR set to: 0
  7272  000156  0E00               	movlw	0
  7273  000158  6F74               	movwf	(_efgtoa$2983+1)& (0+255),b
  7274  00015A  0E2D               	movlw	45
  7275  00015C  6F73               	movwf	_efgtoa$2983& (0+255),b
  7276  00015E                     l5141:
  7277                           
  7278                           ; BSR set to: 0
  7279  00015E  C073  F260         	movff	_efgtoa$2983,_dbuf
  7280  000162                     
  7281                           ; BSR set to: 0
  7282                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7283  000162  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7284  000164  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7285  000166                     
  7286                           ; BSR set to: 0
  7287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7288  000166  078E               	decf	efgtoa@w& (0+255),f,b
  7289  000168  A0D8               	btfss	status,0,c
  7290  00016A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7291  00016C                     l5147:
  7292                           
  7293                           ; BSR set to: 0
  7294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7295  00016C  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7296  000170  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7297  000174  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7298  000178  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7299  00017C  EC70  F022         	call	___fpclassifyf	;wreg free
  7300  000180  0401               	decf	?___fpclassifyf^0,w,c
  7301  000182  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7302  000184  A4D8               	btfss	status,2,c
  7303  000186  EFC7  F000         	goto	u5801
  7304  00018A  EFC9  F000         	goto	u5800
  7305  00018E                     u5801:
  7306  00018E  EF20  F001         	goto	l5165
  7307  000192                     u5800:
  7308  000192  0EBF               	movlw	191
  7309  000194  0100               	movlb	0	; () banked
  7310  000196  6F6A               	movwf	??_efgtoa& (0+255),b
  7311  000198  0EFF               	movlw	255
  7312  00019A  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7313  00019C  505E               	movf	efgtoa@c^0,w,c
  7314  00019E  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7315  0001A0  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7316  0001A2  516A               	movf	??_efgtoa& (0+255),w,b
  7317  0001A4  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7318  0001A6  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7319  0001A8  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7320  0001AA  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7321  0001AC  E10A               	bnz	u5810
  7322  0001AE  0E1A               	movlw	26
  7323  0001B0  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7324  0001B2  A0D8               	btfss	status,0,c
  7325  0001B4  EFDE  F000         	goto	u5811
  7326  0001B8  EFE1  F000         	goto	u5810
  7327  0001BC                     u5811:
  7328  0001BC  0E01               	movlw	1
  7329  0001BE  EFE2  F000         	goto	u5820
  7330  0001C2                     u5810:
  7331  0001C2  0E00               	movlw	0
  7332  0001C4                     u5820:
  7333  0001C4  6F75               	movwf	_efgtoa$2984& (0+255),b
  7334  0001C6  6B76               	clrf	(_efgtoa$2984+1)& (0+255),b
  7335  0001C8                     
  7336                           ; BSR set to: 0
  7337  0001C8  5175               	movf	_efgtoa$2984& (0+255),w,b
  7338  0001CA  1176               	iorwf	(_efgtoa$2984+1)& (0+255),w,b
  7339  0001CC  B4D8               	btfsc	status,2,c
  7340  0001CE  EFEB  F000         	goto	u5831
  7341  0001D2  EFED  F000         	goto	u5830
  7342  0001D6                     u5831:
  7343  0001D6  EFFB  F000         	goto	l5157
  7344  0001DA                     u5830:
  7345  0001DA                     
  7346                           ; BSR set to: 0
  7347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7348  0001DA  0E60               	movlw	low _dbuf
  7349  0001DC  25A1               	addwf	efgtoa@n& (0+255),w,b
  7350  0001DE  6E01               	movwf	strcpy@dest^0,c
  7351  0001E0  0E02               	movlw	high _dbuf
  7352  0001E2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7353  0001E4  6E02               	movwf	(strcpy@dest+1)^0,c
  7354  0001E6  0EEB               	movlw	low STR_19
  7355  0001E8  6E03               	movwf	strcpy@src^0,c
  7356  0001EA  0E7F               	movlw	high STR_19
  7357  0001EC  6E04               	movwf	(strcpy@src+1)^0,c
  7358  0001EE  EC99  F028         	call	_strcpy	;wreg free
  7359                           
  7360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7361  0001F2  EF07  F001         	goto	l5159
  7362  0001F6                     l5157:
  7363                           
  7364                           ; BSR set to: 0
  7365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7366  0001F6  0E60               	movlw	low _dbuf
  7367  0001F8  25A1               	addwf	efgtoa@n& (0+255),w,b
  7368  0001FA  6E01               	movwf	strcpy@dest^0,c
  7369  0001FC  0E02               	movlw	high _dbuf
  7370  0001FE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7371  000200  6E02               	movwf	(strcpy@dest+1)^0,c
  7372  000202  0EF3               	movlw	low STR_20
  7373  000204  6E03               	movwf	strcpy@src^0,c
  7374  000206  0E7F               	movlw	high STR_20
  7375  000208  6E04               	movwf	(strcpy@src+1)^0,c
  7376  00020A  EC99  F028         	call	_strcpy	;wreg free
  7377  00020E                     l5159:
  7378                           
  7379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7380  00020E  0100               	movlb	0	; () banked
  7381  000210  0EFD               	movlw	253
  7382  000212  278E               	addwf	efgtoa@w& (0+255),f,b
  7383  000214  0EFF               	movlw	255
  7384  000216  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7385  000218                     l5161:
  7386                           
  7387                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7388  000218  C058  F011         	movff	efgtoa@fp,pad@fp
  7389  00021C  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7390  000220  0E60               	movlw	low _dbuf
  7391  000222  6E13               	movwf	pad@buf^0,c
  7392  000224  0E02               	movlw	high _dbuf
  7393  000226  6E14               	movwf	(pad@buf+1)^0,c
  7394  000228  C08E  F015         	movff	efgtoa@w,pad@p
  7395  00022C  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7396  000230  EC28  F024         	call	_pad	;wreg free
  7397  000234  C011  F058         	movff	?_pad,?_efgtoa
  7398  000238  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7399  00023C  EF30  F006         	goto	l1473
  7400  000240                     l5165:
  7401                           
  7402                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7403  000240  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7404  000244  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7405  000248  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7406  00024C  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7407  000250  EC70  F022         	call	___fpclassifyf	;wreg free
  7408  000254  5001               	movf	?___fpclassifyf^0,w,c
  7409  000256  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7410  000258  A4D8               	btfss	status,2,c
  7411  00025A  EF31  F001         	goto	u5841
  7412  00025E  EF33  F001         	goto	u5840
  7413  000262                     u5841:
  7414  000262  EF73  F001         	goto	l5183
  7415  000266                     u5840:
  7416  000266  0EBF               	movlw	191
  7417  000268  0100               	movlb	0	; () banked
  7418  00026A  6F6A               	movwf	??_efgtoa& (0+255),b
  7419  00026C  0EFF               	movlw	255
  7420  00026E  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7421  000270  505E               	movf	efgtoa@c^0,w,c
  7422  000272  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7423  000274  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7424  000276  516A               	movf	??_efgtoa& (0+255),w,b
  7425  000278  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7426  00027A  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7427  00027C  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7428  00027E  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7429  000280  E10A               	bnz	u5850
  7430  000282  0E1A               	movlw	26
  7431  000284  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7432  000286  A0D8               	btfss	status,0,c
  7433  000288  EF48  F001         	goto	u5851
  7434  00028C  EF4B  F001         	goto	u5850
  7435  000290                     u5851:
  7436  000290  0E01               	movlw	1
  7437  000292  EF4C  F001         	goto	u5860
  7438  000296                     u5850:
  7439  000296  0E00               	movlw	0
  7440  000298                     u5860:
  7441  000298  6F77               	movwf	_efgtoa$2988& (0+255),b
  7442  00029A  6B78               	clrf	(_efgtoa$2988+1)& (0+255),b
  7443  00029C                     
  7444                           ; BSR set to: 0
  7445  00029C  5177               	movf	_efgtoa$2988& (0+255),w,b
  7446  00029E  1178               	iorwf	(_efgtoa$2988+1)& (0+255),w,b
  7447  0002A0  B4D8               	btfsc	status,2,c
  7448  0002A2  EF55  F001         	goto	u5871
  7449  0002A6  EF57  F001         	goto	u5870
  7450  0002AA                     u5871:
  7451  0002AA  EF65  F001         	goto	l5175
  7452  0002AE                     u5870:
  7453  0002AE                     
  7454                           ; BSR set to: 0
  7455                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7456  0002AE  0E60               	movlw	low _dbuf
  7457  0002B0  25A1               	addwf	efgtoa@n& (0+255),w,b
  7458  0002B2  6E01               	movwf	strcpy@dest^0,c
  7459  0002B4  0E02               	movlw	high _dbuf
  7460  0002B6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7461  0002B8  6E02               	movwf	(strcpy@dest+1)^0,c
  7462  0002BA  0EEF               	movlw	low STR_23
  7463  0002BC  6E03               	movwf	strcpy@src^0,c
  7464  0002BE  0E7F               	movlw	high STR_23
  7465  0002C0  6E04               	movwf	(strcpy@src+1)^0,c
  7466  0002C2  EC99  F028         	call	_strcpy	;wreg free
  7467                           
  7468                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7469  0002C6  EF07  F001         	goto	l5159
  7470  0002CA                     l5175:
  7471                           
  7472                           ; BSR set to: 0
  7473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7474  0002CA  0E60               	movlw	low _dbuf
  7475  0002CC  25A1               	addwf	efgtoa@n& (0+255),w,b
  7476  0002CE  6E01               	movwf	strcpy@dest^0,c
  7477  0002D0  0E02               	movlw	high _dbuf
  7478  0002D2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7479  0002D4  6E02               	movwf	(strcpy@dest+1)^0,c
  7480  0002D6  0EF7               	movlw	low STR_24
  7481  0002D8  6E03               	movwf	strcpy@src^0,c
  7482  0002DA  0E7F               	movlw	high STR_24
  7483  0002DC  6E04               	movwf	(strcpy@src+1)^0,c
  7484  0002DE  EC99  F028         	call	_strcpy	;wreg free
  7485  0002E2  EF07  F001         	goto	l5159
  7486  0002E6                     l5183:
  7487                           
  7488                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7489  0002E6  0E00               	movlw	0
  7490  0002E8  0100               	movlb	0	; () banked
  7491  0002EA  6FA3               	movwf	efgtoa@u& (0+255),b
  7492  0002EC  0E00               	movlw	0
  7493  0002EE  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7494  0002F0  0E80               	movlw	128
  7495  0002F2  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7496  0002F4  0E3F               	movlw	63
  7497  0002F6  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7498                           
  7499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7500  0002F8  0E00               	movlw	0
  7501  0002FA  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7502  0002FC  0E00               	movlw	0
  7503  0002FE  6F9F               	movwf	efgtoa@e& (0+255),b
  7504  000300                     
  7505                           ; BSR set to: 0
  7506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7507  000300  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7508  000304  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7509  000308  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7510  00030C  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7511  000310  0E00               	movlw	0
  7512  000312  6E05               	movwf	___fleq@ff2^0,c
  7513  000314  0E00               	movlw	0
  7514  000316  6E06               	movwf	(___fleq@ff2+1)^0,c
  7515  000318  0E00               	movlw	0
  7516  00031A  6E07               	movwf	(___fleq@ff2+2)^0,c
  7517  00031C  0E00               	movlw	0
  7518  00031E  6E08               	movwf	(___fleq@ff2+3)^0,c
  7519  000320  EC9E  F025         	call	___fleq	;wreg free
  7520  000324  B0D8               	btfsc	status,0,c
  7521  000326  EF97  F001         	goto	u5881
  7522  00032A  EF99  F001         	goto	u5880
  7523  00032E                     u5881:
  7524  00032E  EF1C  F002         	goto	l5201
  7525  000332                     u5880:
  7526  000332  EFB8  F001         	goto	l5193
  7527  000336                     l5189:
  7528                           
  7529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7530  000336  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7531  00033A  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7532  00033E  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7533  000342  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7534  000346  0E00               	movlw	0
  7535  000348  6E20               	movwf	___flmul@a^0,c
  7536  00034A  0E00               	movlw	0
  7537  00034C  6E21               	movwf	(___flmul@a+1)^0,c
  7538  00034E  0E20               	movlw	32
  7539  000350  6E22               	movwf	(___flmul@a+2)^0,c
  7540  000352  0E41               	movlw	65
  7541  000354  6E23               	movwf	(___flmul@a+3)^0,c
  7542  000356  ECB3  F00F         	call	___flmul	;wreg free
  7543  00035A  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7544  00035E  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7545  000362  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7546  000366  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7547  00036A                     
  7548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7549  00036A  0100               	movlb	0	; () banked
  7550  00036C  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7551  00036E  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7552  000370                     l5193:
  7553                           
  7554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7555  000370  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7556  000374  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7557  000378  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7558  00037C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7559  000380  0E00               	movlw	0
  7560  000382  6E20               	movwf	___flmul@a^0,c
  7561  000384  0E00               	movlw	0
  7562  000386  6E21               	movwf	(___flmul@a+1)^0,c
  7563  000388  0E20               	movlw	32
  7564  00038A  6E22               	movwf	(___flmul@a+2)^0,c
  7565  00038C  0E41               	movlw	65
  7566  00038E  6E23               	movwf	(___flmul@a+3)^0,c
  7567  000390  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7568  000394  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7569  000398  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7570  00039C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7571  0003A0  ECB3  F00F         	call	___flmul	;wreg free
  7572  0003A4  C01C  F039         	movff	?___flmul,___flge@ff2
  7573  0003A8  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7574  0003AC  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7575  0003B0  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7576  0003B4  ECEE  F021         	call	___flge	;wreg free
  7577  0003B8  B0D8               	btfsc	status,0,c
  7578  0003BA  EFE1  F001         	goto	u5891
  7579  0003BE  EFE3  F001         	goto	u5890
  7580  0003C2                     u5891:
  7581  0003C2  EF9B  F001         	goto	l5189
  7582  0003C6                     u5890:
  7583  0003C6  EF03  F002         	goto	l5199
  7584  0003CA                     l5195:
  7585                           
  7586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7587  0003CA  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7588  0003CE  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7589  0003D2  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7590  0003D6  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7591  0003DA  0E00               	movlw	0
  7592  0003DC  6E39               	movwf	___fldiv@a^0,c
  7593  0003DE  0E00               	movlw	0
  7594  0003E0  6E3A               	movwf	(___fldiv@a+1)^0,c
  7595  0003E2  0E20               	movlw	32
  7596  0003E4  6E3B               	movwf	(___fldiv@a+2)^0,c
  7597  0003E6  0E41               	movlw	65
  7598  0003E8  6E3C               	movwf	(___fldiv@a+3)^0,c
  7599  0003EA  ECC8  F011         	call	___fldiv	;wreg free
  7600  0003EE  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7601  0003F2  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7602  0003F6  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7603  0003FA  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7604  0003FE                     
  7605                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7606  0003FE  0100               	movlb	0	; () banked
  7607  000400  079F               	decf	efgtoa@e& (0+255),f,b
  7608  000402  A0D8               	btfss	status,0,c
  7609  000404  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7610  000406                     l5199:
  7611                           
  7612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7613  000406  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7614  00040A  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7615  00040E  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7616  000412  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7617  000416  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7618  00041A  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7619  00041E  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7620  000422  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7621  000426  ECEE  F021         	call	___flge	;wreg free
  7622  00042A  A0D8               	btfss	status,0,c
  7623  00042C  EF1A  F002         	goto	u5901
  7624  000430  EF1C  F002         	goto	u5900
  7625  000434                     u5901:
  7626  000434  EFE5  F001         	goto	l5195
  7627  000438                     u5900:
  7628  000438                     l5201:
  7629                           
  7630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7631  000438  C05E  F007         	movff	efgtoa@c,tolower@c
  7632  00043C  6A08               	clrf	(tolower@c+1)^0,c
  7633  00043E  EC69  F028         	call	_tolower	;wreg free
  7634  000442  5007               	movf	?_tolower^0,w,c
  7635  000444  0100               	movlb	0	; () banked
  7636  000446  6F90               	movwf	efgtoa@mode& (0+255),b
  7637  000448                     
  7638                           ; BSR set to: 0
  7639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7640  000448  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7641  00044C                     
  7642                           ; BSR set to: 0
  7643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7644  00044C  0E67               	movlw	103
  7645  00044E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7646  000450  A4D8               	btfss	status,2,c
  7647  000452  EF2D  F002         	goto	u5911
  7648  000456  EF2F  F002         	goto	u5910
  7649  00045A                     u5911:
  7650  00045A  EF55  F002         	goto	l5215
  7651  00045E                     u5910:
  7652  00045E                     
  7653                           ; BSR set to: 0
  7654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7655  00045E  51F6               	movf	_prec& (0+255),w,b
  7656  000460  11F7               	iorwf	(_prec+1)& (0+255),w,b
  7657  000462  A4D8               	btfss	status,2,c
  7658  000464  EF36  F002         	goto	u5921
  7659  000468  EF38  F002         	goto	u5920
  7660  00046C                     u5921:
  7661  00046C  EF3C  F002         	goto	l5211
  7662  000470                     u5920:
  7663  000470                     
  7664                           ; BSR set to: 0
  7665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7666  000470  0E00               	movlw	0
  7667  000472  6FF7               	movwf	(_prec+1)& (0+255),b
  7668  000474  0E01               	movlw	1
  7669  000476  6FF6               	movwf	_prec& (0+255),b
  7670  000478                     l5211:
  7671                           
  7672                           ; BSR set to: 0
  7673                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7674  000478  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7675  00047A  EF49  F002         	goto	u5930
  7676  00047E  51F7               	movf	(_prec+1)& (0+255),w,b
  7677  000480  E106               	bnz	u5931
  7678  000482  05F6               	decf	_prec& (0+255),w,b
  7679  000484  B0D8               	btfsc	status,0,c
  7680  000486  EF47  F002         	goto	u5931
  7681  00048A  EF49  F002         	goto	u5930
  7682  00048E                     u5931:
  7683  00048E  EF4F  F002         	goto	l1491
  7684  000492                     u5930:
  7685  000492                     l5213:
  7686                           
  7687                           ; BSR set to: 0
  7688  000492  0E00               	movlw	0
  7689  000494  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7690  000496  0E06               	movlw	6
  7691  000498  6F8B               	movwf	efgtoa@p& (0+255),b
  7692  00049A  EF5E  F002         	goto	l5221
  7693  00049E                     l1491:
  7694                           
  7695                           ; BSR set to: 0
  7696  00049E  C0F6  F08B         	movff	_prec,efgtoa@p
  7697  0004A2  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  7698  0004A6  EF5E  F002         	goto	l5221
  7699  0004AA                     l5215:
  7700                           
  7701                           ; BSR set to: 0
  7702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  7703  0004AA  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  7704  0004AC  EF5A  F002         	goto	u5941
  7705  0004B0  EF5C  F002         	goto	u5940
  7706  0004B4                     u5941:
  7707  0004B4  EF49  F002         	goto	l5213
  7708  0004B8                     u5940:
  7709  0004B8  EF4F  F002         	goto	l1491
  7710  0004BC                     l5221:
  7711                           
  7712                           ; BSR set to: 0
  7713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  7714  0004BC  0E67               	movlw	103
  7715  0004BE  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7716  0004C0  A4D8               	btfss	status,2,c
  7717  0004C2  EF65  F002         	goto	u5951
  7718  0004C6  EF67  F002         	goto	u5950
  7719  0004CA                     u5951:
  7720  0004CA  EF96  F002         	goto	l5231
  7721  0004CE                     u5950:
  7722  0004CE                     
  7723                           ; BSR set to: 0
  7724                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  7725  0004CE  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  7726  0004D0  EF75  F002         	goto	u5960
  7727  0004D4  0EFC               	movlw	252
  7728  0004D6  5D9F               	subwf	efgtoa@e& (0+255),w,b
  7729  0004D8  0EFF               	movlw	255
  7730  0004DA  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  7731  0004DC  A0D8               	btfss	status,0,c
  7732  0004DE  EF73  F002         	goto	u5961
  7733  0004E2  EF75  F002         	goto	u5960
  7734  0004E6                     u5961:
  7735  0004E6  EF94  F002         	goto	l5229
  7736  0004EA                     u5960:
  7737  0004EA                     
  7738                           ; BSR set to: 0
  7739  0004EA  0EFF               	movlw	255
  7740  0004EC  6F6A               	movwf	??_efgtoa& (0+255),b
  7741  0004EE  0EFF               	movlw	255
  7742  0004F0  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7743  0004F2  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  7744  0004F6  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  7745  0004FA  516A               	movf	??_efgtoa& (0+255),w,b
  7746  0004FC  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7747  0004FE  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7748  000500  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7749  000502  519F               	movf	efgtoa@e& (0+255),w,b
  7750  000504  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7751  000506  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7752  000508  0A80               	xorlw	128
  7753  00050A  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  7754  00050C  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7755  00050E  0A80               	xorlw	128
  7756  000510  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  7757  000512  A0D8               	btfss	status,0,c
  7758  000514  EF8E  F002         	goto	u5971
  7759  000518  EF90  F002         	goto	u5970
  7760  00051C                     u5971:
  7761  00051C  EF94  F002         	goto	l5229
  7762  000520                     u5970:
  7763  000520                     
  7764                           ; BSR set to: 0
  7765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  7766  000520  0E66               	movlw	102
  7767  000522  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7768                           
  7769                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  7770  000524  EF96  F002         	goto	l5231
  7771  000528                     l5229:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  7775  000528  0E65               	movlw	101
  7776  00052A  6F8D               	movwf	efgtoa@nmode& (0+255),b
  7777  00052C                     l5231:
  7778                           
  7779                           ; BSR set to: 0
  7780                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  7781  00052C  C08B  F083         	movff	efgtoa@p,efgtoa@m
  7782  000530  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  7783  000534                     
  7784                           ; BSR set to: 0
  7785                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  7786  000534  0E67               	movlw	103
  7787  000536  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7788  000538  A4D8               	btfss	status,2,c
  7789  00053A  EFA1  F002         	goto	u5981
  7790  00053E  EFA3  F002         	goto	u5980
  7791  000542                     u5981:
  7792  000542  EFB3  F002         	goto	l5239
  7793  000546                     u5980:
  7794  000546                     
  7795                           ; BSR set to: 0
  7796  000546  0E66               	movlw	102
  7797  000548  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7798  00054A  A4D8               	btfss	status,2,c
  7799  00054C  EFAA  F002         	goto	u5991
  7800  000550  EFAC  F002         	goto	u5990
  7801  000554                     u5991:
  7802  000554  EFB5  F002         	goto	l5241
  7803  000558                     u5990:
  7804  000558                     
  7805                           ; BSR set to: 0
  7806  000558  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7807  00055A  EFB3  F002         	goto	u6000
  7808  00055E  EFB1  F002         	goto	u6001
  7809  000562                     u6001:
  7810  000562  EFB5  F002         	goto	l5241
  7811  000566                     u6000:
  7812  000566                     l5239:
  7813                           
  7814                           ; BSR set to: 0
  7815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  7816  000566  4B83               	infsnz	efgtoa@m& (0+255),f,b
  7817  000568  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  7818  00056A                     l5241:
  7819                           
  7820                           ; BSR set to: 0
  7821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  7822  00056A  0E66               	movlw	102
  7823  00056C  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  7824  00056E  A4D8               	btfss	status,2,c
  7825  000570  EFBC  F002         	goto	u6011
  7826  000574  EFBE  F002         	goto	u6010
  7827  000578                     u6011:
  7828  000578  EFDE  F002         	goto	l5251
  7829  00057C                     u6010:
  7830  00057C                     
  7831                           ; BSR set to: 0
  7832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  7833  00057C  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  7834  00057E  EFC5  F002         	goto	u6020
  7835  000582  EFC3  F002         	goto	u6021
  7836  000586                     u6021:
  7837  000586  EFD1  F002         	goto	l5247
  7838  00058A                     u6020:
  7839  00058A                     
  7840                           ; BSR set to: 0
  7841                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  7842  00058A  0E00               	movlw	0
  7843  00058C  6FA3               	movwf	efgtoa@u& (0+255),b
  7844  00058E  0E00               	movlw	0
  7845  000590  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7846  000592  0E80               	movlw	128
  7847  000594  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7848  000596  0E3F               	movlw	63
  7849  000598  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7850                           
  7851                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  7852  00059A  0E00               	movlw	0
  7853  00059C  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7854  00059E  0E00               	movlw	0
  7855  0005A0  6F9F               	movwf	efgtoa@e& (0+255),b
  7856  0005A2                     l5247:
  7857                           
  7858                           ; BSR set to: 0
  7859                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  7860  0005A2  0E67               	movlw	103
  7861  0005A4  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7862  0005A6  B4D8               	btfsc	status,2,c
  7863  0005A8  EFD8  F002         	goto	u6031
  7864  0005AC  EFDA  F002         	goto	u6030
  7865  0005B0                     u6031:
  7866  0005B0  EFDE  F002         	goto	l5251
  7867  0005B4                     u6030:
  7868  0005B4                     
  7869                           ; BSR set to: 0
  7870                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  7871  0005B4  519F               	movf	efgtoa@e& (0+255),w,b
  7872  0005B6  2783               	addwf	efgtoa@m& (0+255),f,b
  7873  0005B8  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  7874  0005BA  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  7875  0005BC                     l5251:
  7876                           
  7877                           ; BSR set to: 0
  7878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  7879  0005BC  0E00               	movlw	0
  7880  0005BE  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  7881  0005C0  0E00               	movlw	0
  7882  0005C2  6F99               	movwf	efgtoa@i& (0+255),b
  7883  0005C4                     
  7884                           ; BSR set to: 0
  7885                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  7886  0005C4  C09B  F091         	movff	efgtoa@g,efgtoa@h
  7887  0005C8  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  7888  0005CC  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  7889  0005D0  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  7890  0005D4                     
  7891                           ; BSR set to: 0
  7892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  7893  0005D4  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  7894  0005D8  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  7895  0005DC  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  7896  0005E0  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  7897                           
  7898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7899  0005E4  EF6F  F003         	goto	l5265
  7900  0005E8                     l5257:
  7901                           
  7902                           ; BSR set to: 0
  7903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  7904  0005E8  C091  F035         	movff	efgtoa@h,___fldiv@b
  7905  0005EC  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  7906  0005F0  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  7907  0005F4  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  7908  0005F8  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  7909  0005FC  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  7910  000600  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  7911  000604  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  7912  000608  ECC8  F011         	call	___fldiv	;wreg free
  7913  00060C  C035  F04E         	movff	?___fldiv,floorf@x
  7914  000610  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  7915  000614  C037  F050         	movff	?___fldiv+2,floorf@x+2
  7916  000618  C038  F051         	movff	?___fldiv+3,floorf@x+3
  7917  00061C  ECE6  F017         	call	_floorf	;wreg free
  7918  000620  C04E  F095         	movff	?_floorf,efgtoa@l
  7919  000624  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  7920  000628  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  7921  00062C  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  7922                           
  7923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  7924  000630  C095  F04E         	movff	efgtoa@l,___fltol@f1
  7925  000634  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  7926  000638  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  7927  00063C  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  7928  000640  EC6B  F021         	call	___fltol	;wreg free
  7929  000644  C04E  F087         	movff	?___fltol,efgtoa@d
  7930  000648  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  7931  00064C                     
  7932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  7933  00064C  C091  F045         	movff	efgtoa@h,___flsub@b
  7934  000650  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  7935  000654  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  7936  000658  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  7937  00065C  C0A3  F020         	movff	efgtoa@u,___flmul@a
  7938  000660  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  7939  000664  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  7940  000668  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  7941  00066C  C095  F01C         	movff	efgtoa@l,___flmul@b
  7942  000670  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  7943  000674  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  7944  000678  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  7945  00067C  ECB3  F00F         	call	___flmul	;wreg free
  7946  000680  C01C  F049         	movff	?___flmul,___flsub@a
  7947  000684  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  7948  000688  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  7949  00068C  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  7950  000690  EC95  F029         	call	___flsub	;wreg free
  7951  000694  C045  F091         	movff	?___flsub,efgtoa@h
  7952  000698  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  7953  00069C  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  7954  0006A0  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  7955  0006A4                     
  7956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  7957  0006A4  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7958  0006A8  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7959  0006AC  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7960  0006B0  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7961  0006B4  0E00               	movlw	0
  7962  0006B6  6E39               	movwf	___fldiv@a^0,c
  7963  0006B8  0E00               	movlw	0
  7964  0006BA  6E3A               	movwf	(___fldiv@a+1)^0,c
  7965  0006BC  0E20               	movlw	32
  7966  0006BE  6E3B               	movwf	(___fldiv@a+2)^0,c
  7967  0006C0  0E41               	movlw	65
  7968  0006C2  6E3C               	movwf	(___fldiv@a+3)^0,c
  7969  0006C4  ECC8  F011         	call	___fldiv	;wreg free
  7970  0006C8  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7971  0006CC  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7972  0006D0  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7973  0006D4  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7974  0006D8                     
  7975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  7976  0006D8  0100               	movlb	0	; () banked
  7977  0006DA  4B99               	infsnz	efgtoa@i& (0+255),f,b
  7978  0006DC  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  7979  0006DE                     l5265:
  7980                           
  7981                           ; BSR set to: 0
  7982                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  7983  0006DE  5183               	movf	efgtoa@m& (0+255),w,b
  7984  0006E0  5D99               	subwf	efgtoa@i& (0+255),w,b
  7985  0006E2  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  7986  0006E4  0A80               	xorlw	128
  7987  0006E6  6F6A               	movwf	??_efgtoa& (0+255),b
  7988  0006E8  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  7989  0006EA  0A80               	xorlw	128
  7990  0006EC  596A               	subwfb	??_efgtoa& (0+255),w,b
  7991  0006EE  A0D8               	btfss	status,0,c
  7992  0006F0  EF7C  F003         	goto	u6041
  7993  0006F4  EF7E  F003         	goto	u6040
  7994  0006F8                     u6041:
  7995  0006F8  EFF4  F002         	goto	l5257
  7996  0006FC                     u6040:
  7997  0006FC                     
  7998                           ; BSR set to: 0
  7999                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8000  0006FC  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8001  000700  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8002  000704  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8003  000708  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8004  00070C  0E00               	movlw	0
  8005  00070E  6E20               	movwf	___flmul@a^0,c
  8006  000710  0E00               	movlw	0
  8007  000712  6E21               	movwf	(___flmul@a+1)^0,c
  8008  000714  0EA0               	movlw	160
  8009  000716  6E22               	movwf	(___flmul@a+2)^0,c
  8010  000718  0E40               	movlw	64
  8011  00071A  6E23               	movwf	(___flmul@a+3)^0,c
  8012  00071C  ECB3  F00F         	call	___flmul	;wreg free
  8013  000720  C01C  F095         	movff	?___flmul,efgtoa@l
  8014  000724  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8015  000728  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8016  00072C  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8017  000730                     
  8018                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8019  000730  C091  F035         	movff	efgtoa@h,___flge@ff1
  8020  000734  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8021  000738  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8022  00073C  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8023  000740  C095  F039         	movff	efgtoa@l,___flge@ff2
  8024  000744  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8025  000748  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8026  00074C  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8027  000750  ECEE  F021         	call	___flge	;wreg free
  8028  000754  B0D8               	btfsc	status,0,c
  8029  000756  EFAF  F003         	goto	u6051
  8030  00075A  EFB1  F003         	goto	u6050
  8031  00075E                     u6051:
  8032  00075E  EFBC  F003         	goto	l5273
  8033  000762                     u6050:
  8034  000762                     
  8035                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8036  000762  0E00               	movlw	0
  8037  000764  0100               	movlb	0	; () banked
  8038  000766  6F95               	movwf	efgtoa@l& (0+255),b
  8039  000768  0E00               	movlw	0
  8040  00076A  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8041  00076C  0E00               	movlw	0
  8042  00076E  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8043  000770  0E00               	movlw	0
  8044  000772  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8045                           
  8046                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8047  000774  EFE5  F003         	goto	l5279
  8048  000778                     l5273:
  8049                           
  8050                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8051  000778  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8052  00077C  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8053  000780  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8054  000784  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8055  000788  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8056  00078C  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8057  000790  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8058  000794  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8059  000798  EC9E  F025         	call	___fleq	;wreg free
  8060  00079C  A0D8               	btfss	status,0,c
  8061  00079E  EFD3  F003         	goto	u6061
  8062  0007A2  EFD5  F003         	goto	u6060
  8063  0007A6                     u6061:
  8064  0007A6  EFE5  F003         	goto	l5279
  8065  0007AA                     u6060:
  8066  0007AA  0100               	movlb	0	; () banked
  8067  0007AC  B187               	btfsc	efgtoa@d& (0+255),0,b
  8068  0007AE  EFDB  F003         	goto	u6071
  8069  0007B2  EFDD  F003         	goto	u6070
  8070  0007B6                     u6071:
  8071  0007B6  EFE5  F003         	goto	l5279
  8072  0007BA                     u6070:
  8073  0007BA                     
  8074                           ; BSR set to: 0
  8075                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8076  0007BA  0E00               	movlw	0
  8077  0007BC  6F95               	movwf	efgtoa@l& (0+255),b
  8078  0007BE  0E00               	movlw	0
  8079  0007C0  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8080  0007C2  0E00               	movlw	0
  8081  0007C4  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8082  0007C6  0E00               	movlw	0
  8083  0007C8  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8084  0007CA                     l5279:
  8085                           
  8086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8087  0007CA  C09B  F035         	movff	efgtoa@g,___fladd@b
  8088  0007CE  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8089  0007D2  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8090  0007D6  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8091  0007DA  C095  F039         	movff	efgtoa@l,___fladd@a
  8092  0007DE  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8093  0007E2  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8094  0007E6  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8095  0007EA  EC53  F00D         	call	___fladd	;wreg free
  8096  0007EE  C035  F091         	movff	?___fladd,efgtoa@h
  8097  0007F2  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8098  0007F6  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8099  0007FA  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8100  0007FE                     
  8101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8102  0007FE  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8103  000802  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8104  000806  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8105  00080A  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8106  00080E                     
  8107                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8108  00080E  0E65               	movlw	101
  8109  000810  0100               	movlb	0	; () banked
  8110  000812  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8111  000814  B4D8               	btfsc	status,2,c
  8112  000816  EF0F  F004         	goto	u6081
  8113  00081A  EF11  F004         	goto	u6080
  8114  00081E                     u6081:
  8115  00081E  EF17  F004         	goto	l5287
  8116  000822                     u6080:
  8117  000822                     
  8118                           ; BSR set to: 0
  8119  000822  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8120  000826  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8121  00082A  EF1B  F004         	goto	l1517
  8122  00082E                     l5287:
  8123                           
  8124                           ; BSR set to: 0
  8125  00082E  0E00               	movlw	0
  8126  000830  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8127  000832  0E00               	movlw	0
  8128  000834  6F85               	movwf	efgtoa@ne& (0+255),b
  8129  000836                     l1517:
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8133  000836  0E00               	movlw	0
  8134  000838  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8135  00083A  0E00               	movlw	0
  8136  00083C  6F81               	movwf	efgtoa@pp& (0+255),b
  8137                           
  8138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8139  00083E  0E00               	movlw	0
  8140  000840  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8141  000842  0E00               	movlw	0
  8142  000844  6F7F               	movwf	efgtoa@t& (0+255),b
  8143                           
  8144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8145  000846  0E00               	movlw	0
  8146  000848  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8147  00084A  0E00               	movlw	0
  8148  00084C  6F99               	movwf	efgtoa@i& (0+255),b
  8149                           
  8150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8151  00084E  EF16  F005         	goto	l5337
  8152  000852                     l5289:
  8153                           
  8154                           ; BSR set to: 0
  8155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8156  000852  C091  F035         	movff	efgtoa@h,___fldiv@b
  8157  000856  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8158  00085A  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8159  00085E  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8160  000862  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8161  000866  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8162  00086A  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8163  00086E  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8164  000872  ECC8  F011         	call	___fldiv	;wreg free
  8165  000876  C035  F04E         	movff	?___fldiv,floorf@x
  8166  00087A  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8167  00087E  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8168  000882  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8169  000886  ECE6  F017         	call	_floorf	;wreg free
  8170  00088A  C04E  F095         	movff	?_floorf,efgtoa@l
  8171  00088E  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8172  000892  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8173  000896  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8174                           
  8175                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8176  00089A  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8177  00089E  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8178  0008A2  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8179  0008A6  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8180  0008AA  EC6B  F021         	call	___fltol	;wreg free
  8181  0008AE  C04E  F087         	movff	?___fltol,efgtoa@d
  8182  0008B2  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8183  0008B6                     
  8184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8185  0008B6  0100               	movlb	0	; () banked
  8186  0008B8  B9F8               	btfsc	_flags& (0+255),4,b
  8187  0008BA  EF61  F004         	goto	u6091
  8188  0008BE  EF63  F004         	goto	u6090
  8189  0008C2                     u6091:
  8190  0008C2  EF80  F004         	goto	l5301
  8191  0008C6                     u6090:
  8192  0008C6                     
  8193                           ; BSR set to: 0
  8194  0008C6  5187               	movf	efgtoa@d& (0+255),w,b
  8195  0008C8  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8196  0008CA  A4D8               	btfss	status,2,c
  8197  0008CC  EF6A  F004         	goto	u6101
  8198  0008D0  EF6C  F004         	goto	u6100
  8199  0008D4                     u6101:
  8200  0008D4  EF80  F004         	goto	l5301
  8201  0008D8                     u6100:
  8202  0008D8                     
  8203                           ; BSR set to: 0
  8204  0008D8  0E67               	movlw	103
  8205  0008DA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8206  0008DC  A4D8               	btfss	status,2,c
  8207  0008DE  EF73  F004         	goto	u6111
  8208  0008E2  EF75  F004         	goto	u6110
  8209  0008E6                     u6111:
  8210  0008E6  EF80  F004         	goto	l5301
  8211  0008EA                     u6110:
  8212  0008EA                     
  8213                           ; BSR set to: 0
  8214  0008EA  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8215  0008EC  EF7C  F004         	goto	u6120
  8216  0008F0  EF7A  F004         	goto	u6121
  8217  0008F4                     u6121:
  8218  0008F4  EF80  F004         	goto	l5301
  8219  0008F8                     u6120:
  8220  0008F8                     
  8221                           ; BSR set to: 0
  8222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8223  0008F8  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8224  0008FA  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8225                           
  8226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8227  0008FC  EFCA  F004         	goto	l5329
  8228  000900                     l5301:
  8229                           
  8230                           ; BSR set to: 0
  8231                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8232  000900  5181               	movf	efgtoa@pp& (0+255),w,b
  8233  000902  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8234  000904  A4D8               	btfss	status,2,c
  8235  000906  EF87  F004         	goto	u6131
  8236  00090A  EF89  F004         	goto	u6130
  8237  00090E                     u6131:
  8238  00090E  EFB3  F004         	goto	l5321
  8239  000912                     u6130:
  8240  000912                     
  8241                           ; BSR set to: 0
  8242  000912  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8243  000914  EF90  F004         	goto	u6140
  8244  000918  EF8E  F004         	goto	u6141
  8245  00091C                     u6141:
  8246  00091C  EFB3  F004         	goto	l5321
  8247  000920                     u6140:
  8248  000920                     
  8249                           ; BSR set to: 0
  8250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8251  000920  0E60               	movlw	low _dbuf
  8252  000922  25A1               	addwf	efgtoa@n& (0+255),w,b
  8253  000924  6ED9               	movwf	fsr2l,c
  8254  000926  0E02               	movlw	high _dbuf
  8255  000928  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8256  00092A  6EDA               	movwf	fsr2h,c
  8257  00092C  0E2E               	movlw	46
  8258  00092E  6EDF               	movwf	indf2,c
  8259  000930                     
  8260                           ; BSR set to: 0
  8261  000930  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8262  000932  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8263  000934                     
  8264                           ; BSR set to: 0
  8265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8266  000934  078E               	decf	efgtoa@w& (0+255),f,b
  8267  000936  A0D8               	btfss	status,0,c
  8268  000938  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8269  00093A                     
  8270                           ; BSR set to: 0
  8271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8272  00093A  0E00               	movlw	0
  8273  00093C  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8274  00093E  0E01               	movlw	1
  8275  000940  6F81               	movwf	efgtoa@pp& (0+255),b
  8276  000942  EFB3  F004         	goto	l5321
  8277  000946                     l5313:
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8281  000946  0E60               	movlw	low _dbuf
  8282  000948  25A1               	addwf	efgtoa@n& (0+255),w,b
  8283  00094A  6ED9               	movwf	fsr2l,c
  8284  00094C  0E02               	movlw	high _dbuf
  8285  00094E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8286  000950  6EDA               	movwf	fsr2h,c
  8287  000952  0E30               	movlw	48
  8288  000954  6EDF               	movwf	indf2,c
  8289  000956                     
  8290                           ; BSR set to: 0
  8291  000956  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8292  000958  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8293  00095A                     
  8294                           ; BSR set to: 0
  8295                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8296  00095A  078E               	decf	efgtoa@w& (0+255),f,b
  8297  00095C  A0D8               	btfss	status,0,c
  8298  00095E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8299  000960                     
  8300                           ; BSR set to: 0
  8301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8302  000960  077F               	decf	efgtoa@t& (0+255),f,b
  8303  000962  A0D8               	btfss	status,0,c
  8304  000964  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8305  000966                     l5321:
  8306                           
  8307                           ; BSR set to: 0
  8308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8309  000966  517F               	movf	efgtoa@t& (0+255),w,b
  8310  000968  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8311  00096A  A4D8               	btfss	status,2,c
  8312  00096C  EFBA  F004         	goto	u6151
  8313  000970  EFBC  F004         	goto	u6150
  8314  000974                     u6151:
  8315  000974  EFA3  F004         	goto	l5313
  8316  000978                     u6150:
  8317  000978                     
  8318                           ; BSR set to: 0
  8319                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8320  000978  0E60               	movlw	low _dbuf
  8321  00097A  25A1               	addwf	efgtoa@n& (0+255),w,b
  8322  00097C  6ED9               	movwf	fsr2l,c
  8323  00097E  0E02               	movlw	high _dbuf
  8324  000980  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8325  000982  6EDA               	movwf	fsr2h,c
  8326  000984  5187               	movf	efgtoa@d& (0+255),w,b
  8327  000986  0F30               	addlw	48
  8328  000988  6EDF               	movwf	indf2,c
  8329  00098A                     
  8330                           ; BSR set to: 0
  8331  00098A  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8332  00098C  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8333  00098E                     
  8334                           ; BSR set to: 0
  8335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8336  00098E  078E               	decf	efgtoa@w& (0+255),f,b
  8337  000990  A0D8               	btfss	status,0,c
  8338  000992  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8339  000994                     l5329:
  8340                           
  8341                           ; BSR set to: 0
  8342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8343  000994  C091  F045         	movff	efgtoa@h,___flsub@b
  8344  000998  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8345  00099C  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8346  0009A0  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8347  0009A4  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8348  0009A8  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8349  0009AC  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8350  0009B0  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8351  0009B4  C095  F01C         	movff	efgtoa@l,___flmul@b
  8352  0009B8  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8353  0009BC  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8354  0009C0  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8355  0009C4  ECB3  F00F         	call	___flmul	;wreg free
  8356  0009C8  C01C  F049         	movff	?___flmul,___flsub@a
  8357  0009CC  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8358  0009D0  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8359  0009D4  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8360  0009D8  EC95  F029         	call	___flsub	;wreg free
  8361  0009DC  C045  F091         	movff	?___flsub,efgtoa@h
  8362  0009E0  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8363  0009E4  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8364  0009E8  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8365  0009EC                     
  8366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8367  0009EC  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8368  0009F0  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8369  0009F4  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8370  0009F8  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8371  0009FC  0E00               	movlw	0
  8372  0009FE  6E39               	movwf	___fldiv@a^0,c
  8373  000A00  0E00               	movlw	0
  8374  000A02  6E3A               	movwf	(___fldiv@a+1)^0,c
  8375  000A04  0E20               	movlw	32
  8376  000A06  6E3B               	movwf	(___fldiv@a+2)^0,c
  8377  000A08  0E41               	movlw	65
  8378  000A0A  6E3C               	movwf	(___fldiv@a+3)^0,c
  8379  000A0C  ECC8  F011         	call	___fldiv	;wreg free
  8380  000A10  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8381  000A14  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8382  000A18  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8383  000A1C  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8384  000A20                     
  8385                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8386  000A20  0100               	movlb	0	; () banked
  8387  000A22  0785               	decf	efgtoa@ne& (0+255),f,b
  8388  000A24  A0D8               	btfss	status,0,c
  8389  000A26  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8390  000A28                     
  8391                           ; BSR set to: 0
  8392                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8393  000A28  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8394  000A2A  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8395  000A2C                     l5337:
  8396                           
  8397                           ; BSR set to: 0
  8398                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8399  000A2C  5183               	movf	efgtoa@m& (0+255),w,b
  8400  000A2E  5D99               	subwf	efgtoa@i& (0+255),w,b
  8401  000A30  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8402  000A32  0A80               	xorlw	128
  8403  000A34  6F6A               	movwf	??_efgtoa& (0+255),b
  8404  000A36  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8405  000A38  0A80               	xorlw	128
  8406  000A3A  596A               	subwfb	??_efgtoa& (0+255),w,b
  8407  000A3C  B0D8               	btfsc	status,0,c
  8408  000A3E  EF23  F005         	goto	u6161
  8409  000A42  EF25  F005         	goto	u6160
  8410  000A46                     u6161:
  8411  000A46  EF33  F005         	goto	l5341
  8412  000A4A                     u6160:
  8413  000A4A                     
  8414                           ; BSR set to: 0
  8415  000A4A  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8416  000A4C  EF31  F005         	goto	u6171
  8417  000A50  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8418  000A52  E109               	bnz	u6170
  8419  000A54  0E4B               	movlw	75
  8420  000A56  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8421  000A58  A0D8               	btfss	status,0,c
  8422  000A5A  EF31  F005         	goto	u6171
  8423  000A5E  EF33  F005         	goto	u6170
  8424  000A62                     u6171:
  8425  000A62  EF29  F004         	goto	l5289
  8426  000A66                     u6170:
  8427  000A66                     l5341:
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8431  000A66  5181               	movf	efgtoa@pp& (0+255),w,b
  8432  000A68  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8433  000A6A  A4D8               	btfss	status,2,c
  8434  000A6C  EF3A  F005         	goto	u6181
  8435  000A70  EF3C  F005         	goto	u6180
  8436  000A74                     u6181:
  8437  000A74  EF4D  F005         	goto	l5349
  8438  000A78                     u6180:
  8439  000A78                     
  8440                           ; BSR set to: 0
  8441  000A78  A9F8               	btfss	_flags& (0+255),4,b
  8442  000A7A  EF41  F005         	goto	u6191
  8443  000A7E  EF43  F005         	goto	u6190
  8444  000A82                     u6191:
  8445  000A82  EF4D  F005         	goto	l5349
  8446  000A86                     u6190:
  8447  000A86                     
  8448                           ; BSR set to: 0
  8449                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8450  000A86  0E60               	movlw	low _dbuf
  8451  000A88  25A1               	addwf	efgtoa@n& (0+255),w,b
  8452  000A8A  6ED9               	movwf	fsr2l,c
  8453  000A8C  0E02               	movlw	high _dbuf
  8454  000A8E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8455  000A90  6EDA               	movwf	fsr2h,c
  8456  000A92  0E2E               	movlw	46
  8457  000A94  6EDF               	movwf	indf2,c
  8458  000A96                     
  8459                           ; BSR set to: 0
  8460  000A96  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8461  000A98  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8462  000A9A                     l5349:
  8463                           
  8464                           ; BSR set to: 0
  8465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8466  000A9A  0E60               	movlw	low _dbuf
  8467  000A9C  25A1               	addwf	efgtoa@n& (0+255),w,b
  8468  000A9E  6ED9               	movwf	fsr2l,c
  8469  000AA0  0E02               	movlw	high _dbuf
  8470  000AA2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8471  000AA4  6EDA               	movwf	fsr2h,c
  8472  000AA6  0E00               	movlw	0
  8473  000AA8  6EDF               	movwf	indf2,c
  8474  000AAA                     
  8475                           ; BSR set to: 0
  8476                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8477  000AAA  0E65               	movlw	101
  8478  000AAC  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8479  000AAE  A4D8               	btfss	status,2,c
  8480  000AB0  EF5C  F005         	goto	u6201
  8481  000AB4  EF5E  F005         	goto	u6200
  8482  000AB8                     u6201:
  8483  000AB8  EF0C  F001         	goto	l5161
  8484  000ABC                     u6200:
  8485  000ABC                     
  8486                           ; BSR set to: 0
  8487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8488  000ABC  0E00               	movlw	0
  8489  000ABE  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8490  000AC0  0E4F               	movlw	79
  8491  000AC2  6F99               	movwf	efgtoa@i& (0+255),b
  8492  000AC4                     
  8493                           ; BSR set to: 0
  8494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8495  000AC4  0E60               	movlw	low _dbuf
  8496  000AC6  2599               	addwf	efgtoa@i& (0+255),w,b
  8497  000AC8  6ED9               	movwf	fsr2l,c
  8498  000ACA  0E02               	movlw	high _dbuf
  8499  000ACC  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8500  000ACE  6EDA               	movwf	fsr2h,c
  8501  000AD0  0E00               	movlw	0
  8502  000AD2  6EDF               	movwf	indf2,c
  8503  000AD4                     
  8504                           ; BSR set to: 0
  8505                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8506  000AD4  0E00               	movlw	0
  8507  000AD6  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8508  000AD8  0E00               	movlw	0
  8509  000ADA  6F89               	movwf	efgtoa@sign& (0+255),b
  8510  000ADC                     
  8511                           ; BSR set to: 0
  8512                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8513  000ADC  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8514  000ADE  EF75  F005         	goto	u6210
  8515  000AE2  EF73  F005         	goto	u6211
  8516  000AE6                     u6211:
  8517  000AE6  EF7D  F005         	goto	l5365
  8518  000AEA                     u6210:
  8519  000AEA                     
  8520                           ; BSR set to: 0
  8521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8522  000AEA  0E00               	movlw	0
  8523  000AEC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8524  000AEE  0E01               	movlw	1
  8525  000AF0  6F89               	movwf	efgtoa@sign& (0+255),b
  8526  000AF2                     
  8527                           ; BSR set to: 0
  8528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8529  000AF2  6D9F               	negf	efgtoa@e& (0+255),b
  8530  000AF4  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8531  000AF6  B0D8               	btfsc	status,0,c
  8532  000AF8  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8533  000AFA                     l5365:
  8534                           
  8535                           ; BSR set to: 0
  8536                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8537  000AFA  0E00               	movlw	0
  8538  000AFC  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8539  000AFE  0E02               	movlw	2
  8540  000B00  6F8B               	movwf	efgtoa@p& (0+255),b
  8541                           
  8542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8543  000B02  EFAE  F005         	goto	l5377
  8544  000B06                     l5367:
  8545                           
  8546                           ; BSR set to: 0
  8547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8548  000B06  0799               	decf	efgtoa@i& (0+255),f,b
  8549  000B08  A0D8               	btfss	status,0,c
  8550  000B0A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8551  000B0C                     
  8552                           ; BSR set to: 0
  8553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8554  000B0C  0E60               	movlw	low _dbuf
  8555  000B0E  2599               	addwf	efgtoa@i& (0+255),w,b
  8556  000B10  6ED9               	movwf	fsr2l,c
  8557  000B12  0E02               	movlw	high _dbuf
  8558  000B14  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8559  000B16  6EDA               	movwf	fsr2h,c
  8560  000B18  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8561  000B1C  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8562  000B20  0E00               	movlw	0
  8563  000B22  6E04               	movwf	(___awmod@divisor+1)^0,c
  8564  000B24  0E0A               	movlw	10
  8565  000B26  6E03               	movwf	___awmod@divisor^0,c
  8566  000B28  EC46  F025         	call	___awmod	;wreg free
  8567  000B2C  5001               	movf	?___awmod^0,w,c
  8568  000B2E  0F30               	addlw	48
  8569  000B30  6EDF               	movwf	indf2,c
  8570  000B32                     
  8571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8572  000B32  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8573  000B36  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8574  000B3A  0E00               	movlw	0
  8575  000B3C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8576  000B3E  0E0A               	movlw	10
  8577  000B40  6E03               	movwf	___awdiv@divisor^0,c
  8578  000B42  EC8B  F024         	call	___awdiv	;wreg free
  8579  000B46  C001  F09F         	movff	?___awdiv,efgtoa@e
  8580  000B4A  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8581  000B4E                     
  8582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8583  000B4E  0100               	movlb	0	; () banked
  8584  000B50  078B               	decf	efgtoa@p& (0+255),f,b
  8585  000B52  A0D8               	btfss	status,0,c
  8586  000B54  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8587  000B56                     
  8588                           ; BSR set to: 0
  8589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8590  000B56  078E               	decf	efgtoa@w& (0+255),f,b
  8591  000B58  A0D8               	btfss	status,0,c
  8592  000B5A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8593  000B5C                     l5377:
  8594                           
  8595                           ; BSR set to: 0
  8596                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8597  000B5C  519F               	movf	efgtoa@e& (0+255),w,b
  8598  000B5E  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8599  000B60  A4D8               	btfss	status,2,c
  8600  000B62  EFB5  F005         	goto	u6221
  8601  000B66  EFB7  F005         	goto	u6220
  8602  000B6A                     u6221:
  8603  000B6A  EF83  F005         	goto	l5367
  8604  000B6E                     u6220:
  8605  000B6E                     
  8606                           ; BSR set to: 0
  8607  000B6E  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8608  000B70  EFC4  F005         	goto	u6230
  8609  000B74  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8610  000B76  E106               	bnz	u6231
  8611  000B78  058B               	decf	efgtoa@p& (0+255),w,b
  8612  000B7A  B0D8               	btfsc	status,0,c
  8613  000B7C  EFC2  F005         	goto	u6231
  8614  000B80  EFC4  F005         	goto	u6230
  8615  000B84                     u6231:
  8616  000B84  EF83  F005         	goto	l5367
  8617  000B88                     u6230:
  8618  000B88                     
  8619                           ; BSR set to: 0
  8620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8621  000B88  0799               	decf	efgtoa@i& (0+255),f,b
  8622  000B8A  A0D8               	btfss	status,0,c
  8623  000B8C  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8624  000B8E                     
  8625                           ; BSR set to: 0
  8626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8627  000B8E  5189               	movf	efgtoa@sign& (0+255),w,b
  8628  000B90  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8629  000B92  A4D8               	btfss	status,2,c
  8630  000B94  EFCE  F005         	goto	u6241
  8631  000B98  EFD0  F005         	goto	u6240
  8632  000B9C                     u6241:
  8633  000B9C  EFD6  F005         	goto	l5387
  8634  000BA0                     u6240:
  8635  000BA0                     
  8636                           ; BSR set to: 0
  8637  000BA0  0E00               	movlw	0
  8638  000BA2  6F7A               	movwf	(_efgtoa$2992+1)& (0+255),b
  8639  000BA4  0E2B               	movlw	43
  8640  000BA6  6F79               	movwf	_efgtoa$2992& (0+255),b
  8641  000BA8  EFDA  F005         	goto	l5389
  8642  000BAC                     l5387:
  8643                           
  8644                           ; BSR set to: 0
  8645  000BAC  0E00               	movlw	0
  8646  000BAE  6F7A               	movwf	(_efgtoa$2992+1)& (0+255),b
  8647  000BB0  0E2D               	movlw	45
  8648  000BB2  6F79               	movwf	_efgtoa$2992& (0+255),b
  8649  000BB4                     l5389:
  8650                           
  8651                           ; BSR set to: 0
  8652  000BB4  0E60               	movlw	low _dbuf
  8653  000BB6  2599               	addwf	efgtoa@i& (0+255),w,b
  8654  000BB8  6ED9               	movwf	fsr2l,c
  8655  000BBA  0E02               	movlw	high _dbuf
  8656  000BBC  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8657  000BBE  6EDA               	movwf	fsr2h,c
  8658  000BC0  C079  FFDF         	movff	_efgtoa$2992,indf2
  8659  000BC4                     
  8660                           ; BSR set to: 0
  8661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8662  000BC4  078E               	decf	efgtoa@w& (0+255),f,b
  8663  000BC6  A0D8               	btfss	status,0,c
  8664  000BC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8665  000BCA                     
  8666                           ; BSR set to: 0
  8667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8668  000BCA  0799               	decf	efgtoa@i& (0+255),f,b
  8669  000BCC  A0D8               	btfss	status,0,c
  8670  000BCE  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8671  000BD0                     
  8672                           ; BSR set to: 0
  8673  000BD0  0EBF               	movlw	191
  8674  000BD2  6F6A               	movwf	??_efgtoa& (0+255),b
  8675  000BD4  0EFF               	movlw	255
  8676  000BD6  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8677  000BD8  505E               	movf	efgtoa@c^0,w,c
  8678  000BDA  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8679  000BDC  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8680  000BDE  516A               	movf	??_efgtoa& (0+255),w,b
  8681  000BE0  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8682  000BE2  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8683  000BE4  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8684  000BE6  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8685  000BE8  E10A               	bnz	u6250
  8686  000BEA  0E1A               	movlw	26
  8687  000BEC  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8688  000BEE  A0D8               	btfss	status,0,c
  8689  000BF0  EFFC  F005         	goto	u6251
  8690  000BF4  EFFF  F005         	goto	u6250
  8691  000BF8                     u6251:
  8692  000BF8  0E01               	movlw	1
  8693  000BFA  EF00  F006         	goto	u6260
  8694  000BFE                     u6250:
  8695  000BFE  0E00               	movlw	0
  8696  000C00                     u6260:
  8697  000C00  6F7D               	movwf	_efgtoa$2994& (0+255),b
  8698  000C02  6B7E               	clrf	(_efgtoa$2994+1)& (0+255),b
  8699  000C04                     
  8700                           ; BSR set to: 0
  8701  000C04  517D               	movf	_efgtoa$2994& (0+255),w,b
  8702  000C06  117E               	iorwf	(_efgtoa$2994+1)& (0+255),w,b
  8703  000C08  A4D8               	btfss	status,2,c
  8704  000C0A  EF09  F006         	goto	u6271
  8705  000C0E  EF0B  F006         	goto	u6270
  8706  000C12                     u6271:
  8707  000C12  EF11  F006         	goto	l5403
  8708  000C16                     u6270:
  8709  000C16                     
  8710                           ; BSR set to: 0
  8711  000C16  0E00               	movlw	0
  8712  000C18  6F7C               	movwf	(_efgtoa$2993+1)& (0+255),b
  8713  000C1A  0E65               	movlw	101
  8714  000C1C  6F7B               	movwf	_efgtoa$2993& (0+255),b
  8715  000C1E  EF15  F006         	goto	l5405
  8716  000C22                     l5403:
  8717                           
  8718                           ; BSR set to: 0
  8719  000C22  0E00               	movlw	0
  8720  000C24  6F7C               	movwf	(_efgtoa$2993+1)& (0+255),b
  8721  000C26  0E45               	movlw	69
  8722  000C28  6F7B               	movwf	_efgtoa$2993& (0+255),b
  8723  000C2A                     l5405:
  8724                           
  8725                           ; BSR set to: 0
  8726  000C2A  0E60               	movlw	low _dbuf
  8727  000C2C  2599               	addwf	efgtoa@i& (0+255),w,b
  8728  000C2E  6ED9               	movwf	fsr2l,c
  8729  000C30  0E02               	movlw	high _dbuf
  8730  000C32  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8731  000C34  6EDA               	movwf	fsr2h,c
  8732  000C36  C07B  FFDF         	movff	_efgtoa$2993,indf2
  8733  000C3A                     
  8734                           ; BSR set to: 0
  8735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  8736  000C3A  078E               	decf	efgtoa@w& (0+255),f,b
  8737  000C3C  A0D8               	btfss	status,0,c
  8738  000C3E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8739  000C40                     
  8740                           ; BSR set to: 0
  8741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  8742  000C40  0E60               	movlw	low _dbuf
  8743  000C42  25A1               	addwf	efgtoa@n& (0+255),w,b
  8744  000C44  6E01               	movwf	strcpy@dest^0,c
  8745  000C46  0E02               	movlw	high _dbuf
  8746  000C48  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8747  000C4A  6E02               	movwf	(strcpy@dest+1)^0,c
  8748  000C4C  0E60               	movlw	low _dbuf
  8749  000C4E  2599               	addwf	efgtoa@i& (0+255),w,b
  8750  000C50  6E03               	movwf	strcpy@src^0,c
  8751  000C52  0E02               	movlw	high _dbuf
  8752  000C54  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8753  000C56  6E04               	movwf	(strcpy@src+1)^0,c
  8754  000C58  EC99  F028         	call	_strcpy	;wreg free
  8755  000C5C  EF0C  F001         	goto	l5161
  8756  000C60                     l1473:
  8757  000C60  0012               	return		;funcret
  8758  000C62                     __end_of_efgtoa:
  8759                           	callstack 0
  8760                           
  8761 ;; *************** function _tolower *****************
  8762 ;; Defined at:
  8763 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  8764 ;; Parameters:    Size  Location     Type
  8765 ;;  c               2    6[COMRAM] int 
  8766 ;; Auto vars:     Size  Location     Type
  8767 ;;		None
  8768 ;; Return value:  Size  Location     Type
  8769 ;;                  2    6[COMRAM] int 
  8770 ;; Registers used:
  8771 ;;		wreg, status,2, status,0
  8772 ;; Tracked objects:
  8773 ;;		On entry : 0/0
  8774 ;;		On exit  : 0/0
  8775 ;;		Unchanged: 0/0
  8776 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8777 ;;      Params:         2       0       0       0       0       0       0
  8778 ;;      Locals:         2       0       0       0       0       0       0
  8779 ;;      Temps:          4       0       0       0       0       0       0
  8780 ;;      Totals:         8       0       0       0       0       0       0
  8781 ;;Total ram usage:        8 bytes
  8782 ;; Hardware stack levels used:    1
  8783 ;; Hardware stack levels required when called:    2
  8784 ;; This function calls:
  8785 ;;		_isupper
  8786 ;; This function is called by:
  8787 ;;		_efgtoa
  8788 ;;		_vfpfcnvrt
  8789 ;; This function uses a non-reentrant model
  8790 ;;
  8791                           
  8792                           	psect	text26
  8793  0050D2                     __ptext26:
  8794                           	callstack 0
  8795  0050D2                     _tolower:
  8796                           	callstack 22
  8797  0050D2  0EBF               	movlw	191
  8798  0050D4  6E09               	movwf	??_tolower^0,c
  8799  0050D6  0EFF               	movlw	255
  8800  0050D8  6E0A               	movwf	(??_tolower+1)^0,c
  8801  0050DA  C007  F00B         	movff	tolower@c,??_tolower+2
  8802  0050DE  C008  F00C         	movff	tolower@c+1,??_tolower+3
  8803  0050E2  5009               	movf	??_tolower^0,w,c
  8804  0050E4  260B               	addwf	(??_tolower+2)^0,f,c
  8805  0050E6  500A               	movf	(??_tolower+1)^0,w,c
  8806  0050E8  220C               	addwfc	(??_tolower+3)^0,f,c
  8807  0050EA  500C               	movf	(??_tolower+3)^0,w,c
  8808  0050EC  E10A               	bnz	u5440
  8809  0050EE  0E1A               	movlw	26
  8810  0050F0  5C0B               	subwf	(??_tolower+2)^0,w,c
  8811  0050F2  A0D8               	btfss	status,0,c
  8812  0050F4  EF7E  F028         	goto	u5441
  8813  0050F8  EF81  F028         	goto	u5440
  8814  0050FC                     u5441:
  8815  0050FC  0E01               	movlw	1
  8816  0050FE  EF82  F028         	goto	u5450
  8817  005102                     u5440:
  8818  005102  0E00               	movlw	0
  8819  005104                     u5450:
  8820  005104  6E0D               	movwf	_tolower$3145^0,c
  8821  005106  6A0E               	clrf	(_tolower$3145+1)^0,c
  8822  005108  500D               	movf	_tolower$3145^0,w,c
  8823  00510A  100E               	iorwf	(_tolower$3145+1)^0,w,c
  8824  00510C  B4D8               	btfsc	status,2,c
  8825  00510E  EF8B  F028         	goto	u5461
  8826  005112  EF8D  F028         	goto	u5460
  8827  005116                     u5461:
  8828  005116  EF94  F028         	goto	l1721
  8829  00511A                     u5460:
  8830  00511A  0E20               	movlw	32
  8831  00511C  1007               	iorwf	tolower@c^0,w,c
  8832  00511E  6E07               	movwf	?_tolower^0,c
  8833  005120  5008               	movf	(tolower@c+1)^0,w,c
  8834  005122  6E08               	movwf	(?_tolower+1)^0,c
  8835  005124  EF98  F028         	goto	l1726
  8836  005128                     l1721:
  8837  005128  C007  F007         	movff	tolower@c,?_tolower
  8838  00512C  C008  F008         	movff	tolower@c+1,?_tolower+1
  8839  005130                     l1726:
  8840  005130  0012               	return		;funcret
  8841  005132                     __end_of_tolower:
  8842                           	callstack 0
  8843                           
  8844 ;; *************** function _isupper *****************
  8845 ;; Defined at:
  8846 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  8847 ;; Parameters:    Size  Location     Type
  8848 ;;  c               2    0[COMRAM] int 
  8849 ;; Auto vars:     Size  Location     Type
  8850 ;;		None
  8851 ;; Return value:  Size  Location     Type
  8852 ;;                  2    0[COMRAM] int 
  8853 ;; Registers used:
  8854 ;;		wreg, status,2, status,0
  8855 ;; Tracked objects:
  8856 ;;		On entry : 0/0
  8857 ;;		On exit  : 0/0
  8858 ;;		Unchanged: 0/0
  8859 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8860 ;;      Params:         2       0       0       0       0       0       0
  8861 ;;      Locals:         0       0       0       0       0       0       0
  8862 ;;      Temps:          4       0       0       0       0       0       0
  8863 ;;      Totals:         6       0       0       0       0       0       0
  8864 ;;Total ram usage:        6 bytes
  8865 ;; Hardware stack levels used:    1
  8866 ;; Hardware stack levels required when called:    1
  8867 ;; This function calls:
  8868 ;;		Nothing
  8869 ;; This function is called by:
  8870 ;;		_efgtoa
  8871 ;;		_vfpfcnvrt
  8872 ;;		_tolower
  8873 ;; This function uses a non-reentrant model
  8874 ;;
  8875                           
  8876                           	psect	text27
  8877  00552E                     __ptext27:
  8878                           	callstack 0
  8879  00552E                     _isupper:
  8880                           	callstack 22
  8881  00552E  0EBF               	movlw	191
  8882  005530  6E03               	movwf	??_isupper^0,c
  8883  005532  0EFF               	movlw	255
  8884  005534  6E04               	movwf	(??_isupper+1)^0,c
  8885  005536  C001  F005         	movff	isupper@c,??_isupper+2
  8886  00553A  C002  F006         	movff	isupper@c+1,??_isupper+3
  8887  00553E  5003               	movf	??_isupper^0,w,c
  8888  005540  2605               	addwf	(??_isupper+2)^0,f,c
  8889  005542  5004               	movf	(??_isupper+1)^0,w,c
  8890  005544  2206               	addwfc	(??_isupper+3)^0,f,c
  8891  005546  5006               	movf	(??_isupper+3)^0,w,c
  8892  005548  E10A               	bnz	u4450
  8893  00554A  0E1A               	movlw	26
  8894  00554C  5C05               	subwf	(??_isupper+2)^0,w,c
  8895  00554E  A0D8               	btfss	status,0,c
  8896  005550  EFAC  F02A         	goto	u4451
  8897  005554  EFAF  F02A         	goto	u4450
  8898  005558                     u4451:
  8899  005558  0E01               	movlw	1
  8900  00555A  EFB0  F02A         	goto	u4460
  8901  00555E                     u4450:
  8902  00555E  0E00               	movlw	0
  8903  005560                     u4460:
  8904  005560  6E01               	movwf	?_isupper^0,c
  8905  005562  6A02               	clrf	(?_isupper+1)^0,c
  8906  005564  0012               	return		;funcret
  8907  005566                     __end_of_isupper:
  8908                           	callstack 0
  8909                           
  8910 ;; *************** function _strcpy *****************
  8911 ;; Defined at:
  8912 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  8913 ;; Parameters:    Size  Location     Type
  8914 ;;  dest            2    0[COMRAM] PTR unsigned char 
  8915 ;;		 -> dbuf(80), 
  8916 ;;  src             2    2[COMRAM] PTR const unsigned char 
  8917 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  8918 ;;		 -> dbuf(80), 
  8919 ;; Auto vars:     Size  Location     Type
  8920 ;;  d               2    8[COMRAM] PTR unsigned char 
  8921 ;;		 -> dbuf(80), 
  8922 ;;  s               2    6[COMRAM] PTR const unsigned char 
  8923 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  8924 ;;		 -> dbuf(80), 
  8925 ;; Return value:  Size  Location     Type
  8926 ;;                  2    0[COMRAM] PTR unsigned char 
  8927 ;; Registers used:
  8928 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8929 ;; Tracked objects:
  8930 ;;		On entry : 0/0
  8931 ;;		On exit  : 0/0
  8932 ;;		Unchanged: 0/0
  8933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8934 ;;      Params:         4       0       0       0       0       0       0
  8935 ;;      Locals:         4       0       0       0       0       0       0
  8936 ;;      Temps:          2       0       0       0       0       0       0
  8937 ;;      Totals:        10       0       0       0       0       0       0
  8938 ;;Total ram usage:       10 bytes
  8939 ;; Hardware stack levels used:    1
  8940 ;; Hardware stack levels required when called:    1
  8941 ;; This function calls:
  8942 ;;		Nothing
  8943 ;; This function is called by:
  8944 ;;		_efgtoa
  8945 ;; This function uses a non-reentrant model
  8946 ;;
  8947                           
  8948                           	psect	text28
  8949  005132                     __ptext28:
  8950                           	callstack 0
  8951  005132                     _strcpy:
  8952                           	callstack 22
  8953  005132  C003  F007         	movff	strcpy@src,strcpy@s
  8954  005136  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  8955  00513A  C001  F009         	movff	strcpy@dest,strcpy@d
  8956  00513E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  8957  005142                     l4999:
  8958  005142  5007               	movf	strcpy@s^0,w,c
  8959  005144  6E05               	movwf	??_strcpy^0,c
  8960  005146  5008               	movf	(strcpy@s+1)^0,w,c
  8961  005148  6E06               	movwf	(??_strcpy+1)^0,c
  8962  00514A  4A07               	infsnz	strcpy@s^0,f,c
  8963  00514C  2A08               	incf	(strcpy@s+1)^0,f,c
  8964  00514E  C005  FFF6         	movff	??_strcpy,tblptrl
  8965  005152  C006  FFF7         	movff	??_strcpy+1,tblptrh
  8966  005156  6AF8               	clrf	tblptru,c
  8967  005158  C009  FFD9         	movff	strcpy@d,fsr2l
  8968  00515C  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  8969  005160  4A09               	infsnz	strcpy@d^0,f,c
  8970  005162  2A0A               	incf	(strcpy@d+1)^0,f,c
  8971  005164  0E05               	movlw	(high __ramtop+-1)
  8972  005166  64F7               	cpfsgt	tblptrh,c
  8973  005168  D003               	bra	u5427
  8974  00516A  0008               	tblrd		*
  8975  00516C  50F5               	movf	tablat,w,c
  8976  00516E  D005               	bra	u5420
  8977  005170                     u5427:
  8978  005170  CFF6 FFE1          	movff	tblptrl,fsr1l
  8979  005174  CFF7 FFE2          	movff	tblptrh,fsr1h
  8980  005178  50E7               	movf	indf1,w,c
  8981  00517A                     u5420:
  8982  00517A  6EDF               	movwf	indf2,c
  8983  00517C  50DF               	movf	indf2,w,c
  8984  00517E  A4D8               	btfss	status,2,c
  8985  005180  EFC4  F028         	goto	u5431
  8986  005184  EFC6  F028         	goto	u5430
  8987  005188                     u5431:
  8988  005188  EFA1  F028         	goto	l4999
  8989  00518C                     u5430:
  8990  00518C  0012               	return		;funcret
  8991  00518E                     __end_of_strcpy:
  8992                           	callstack 0
  8993                           
  8994 ;; *************** function _floorf *****************
  8995 ;; Defined at:
  8996 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  8997 ;; Parameters:    Size  Location     Type
  8998 ;;  x               4   77[COMRAM] float 
  8999 ;; Auto vars:     Size  Location     Type
  9000 ;;  u               4    6[BANK0 ] struct .
  9001 ;;  m               4    0[BANK0 ] unsigned long 
  9002 ;;  e               2    4[BANK0 ] int 
  9003 ;; Return value:  Size  Location     Type
  9004 ;;                  4   77[COMRAM] float 
  9005 ;; Registers used:
  9006 ;;		wreg, status,2, status,0
  9007 ;; Tracked objects:
  9008 ;;		On entry : 0/0
  9009 ;;		On exit  : 0/0
  9010 ;;		Unchanged: 0/0
  9011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9012 ;;      Params:         4       0       0       0       0       0       0
  9013 ;;      Locals:         0      10       0       0       0       0       0
  9014 ;;      Temps:          6       0       0       0       0       0       0
  9015 ;;      Totals:        10      10       0       0       0       0       0
  9016 ;;Total ram usage:       20 bytes
  9017 ;; Hardware stack levels used:    1
  9018 ;; Hardware stack levels required when called:    1
  9019 ;; This function calls:
  9020 ;;		Nothing
  9021 ;; This function is called by:
  9022 ;;		_efgtoa
  9023 ;; This function uses a non-reentrant model
  9024 ;;
  9025                           
  9026                           	psect	text29
  9027  002FCC                     __ptext29:
  9028                           	callstack 0
  9029  002FCC                     _floorf:
  9030                           	callstack 22
  9031  002FCC  C1A3  F066         	movff	floorf@F524,floorf@u
  9032  002FD0  C1A4  F067         	movff	floorf@F524+1,floorf@u+1
  9033  002FD4  C1A5  F068         	movff	floorf@F524+2,floorf@u+2
  9034  002FD8  C1A6  F069         	movff	floorf@F524+3,floorf@u+3
  9035  002FDC  C04E  F066         	movff	floorf@x,floorf@u
  9036  002FE0  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9037  002FE4  C050  F068         	movff	floorf@x+2,floorf@u+2
  9038  002FE8  C051  F069         	movff	floorf@x+3,floorf@u+3
  9039  002FEC  0E81               	movlw	129
  9040  002FEE  6E52               	movwf	??_floorf^0,c
  9041  002FF0  0EFF               	movlw	255
  9042  002FF2  6E53               	movwf	(??_floorf+1)^0,c
  9043  002FF4  C066  F054         	movff	floorf@u,??_floorf+2
  9044  002FF8  C067  F055         	movff	floorf@u+1,??_floorf+3
  9045  002FFC  C068  F056         	movff	floorf@u+2,??_floorf+4
  9046  003000  C069  F057         	movff	floorf@u+3,??_floorf+5
  9047  003004  0E18               	movlw	24
  9048  003006  EF0A  F018         	goto	u5470
  9049  00300A                     u5475:
  9050  00300A  90D8               	bcf	status,0,c
  9051  00300C  3257               	rrcf	(??_floorf+5)^0,f,c
  9052  00300E  3256               	rrcf	(??_floorf+4)^0,f,c
  9053  003010  3255               	rrcf	(??_floorf+3)^0,f,c
  9054  003012  3254               	rrcf	(??_floorf+2)^0,f,c
  9055  003014                     u5470:
  9056  003014  2EE8               	decfsz	wreg,f,c
  9057  003016  EF05  F018         	goto	u5475
  9058  00301A  5054               	movf	(??_floorf+2)^0,w,c
  9059  00301C  2452               	addwf	??_floorf^0,w,c
  9060  00301E  0100               	movlb	0	; () banked
  9061  003020  6F64               	movwf	floorf@e& (0+255),b
  9062  003022  0E00               	movlw	0
  9063  003024  2053               	addwfc	(??_floorf+1)^0,w,c
  9064  003026  6F65               	movwf	(floorf@e+1)& (0+255),b
  9065  003028  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9066  00302A  EF20  F018         	goto	u5481
  9067  00302E  5165               	movf	(floorf@e+1)& (0+255),w,b
  9068  003030  E109               	bnz	u5480
  9069  003032  0E17               	movlw	23
  9070  003034  5D64               	subwf	floorf@e& (0+255),w,b
  9071  003036  A0D8               	btfss	status,0,c
  9072  003038  EF20  F018         	goto	u5481
  9073  00303C  EF22  F018         	goto	u5480
  9074  003040                     u5481:
  9075  003040  EF2C  F018         	goto	l5017
  9076  003044                     u5480:
  9077  003044                     l5015:
  9078                           
  9079                           ; BSR set to: 0
  9080  003044  C04E  F04E         	movff	floorf@x,?_floorf
  9081  003048  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9082  00304C  C050  F050         	movff	floorf@x+2,?_floorf+2
  9083  003050  C051  F051         	movff	floorf@x+3,?_floorf+3
  9084  003054  EFF0  F018         	goto	l1645
  9085  003058                     l5017:
  9086                           
  9087                           ; BSR set to: 0
  9088  003058  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9089  00305A  EF31  F018         	goto	u5491
  9090  00305E  EF33  F018         	goto	u5490
  9091  003062                     u5491:
  9092  003062  EFA4  F018         	goto	l5027
  9093  003066                     u5490:
  9094  003066                     
  9095                           ; BSR set to: 0
  9096  003066  C064  F052         	movff	floorf@e,??_floorf
  9097  00306A  0EFF               	movlw	255
  9098  00306C  6E53               	movwf	(??_floorf+1)^0,c
  9099  00306E  0EFF               	movlw	255
  9100  003070  6E54               	movwf	(??_floorf+2)^0,c
  9101  003072  0E7F               	movlw	127
  9102  003074  6E55               	movwf	(??_floorf+3)^0,c
  9103  003076  0E00               	movlw	0
  9104  003078  6E56               	movwf	(??_floorf+4)^0,c
  9105  00307A                     u5505:
  9106  00307A  6652               	tstfsz	??_floorf^0,c
  9107  00307C  EF42  F018         	goto	u5506
  9108  003080  EF4A  F018         	goto	u5507
  9109  003084                     u5506:
  9110  003084  3456               	rlcf	(??_floorf+4)^0,w,c
  9111  003086  3256               	rrcf	(??_floorf+4)^0,f,c
  9112  003088  3255               	rrcf	(??_floorf+3)^0,f,c
  9113  00308A  3254               	rrcf	(??_floorf+2)^0,f,c
  9114  00308C  3253               	rrcf	(??_floorf+1)^0,f,c
  9115  00308E  2E52               	decfsz	??_floorf^0,f,c
  9116  003090  EF3D  F018         	goto	u5505
  9117  003094                     u5507:
  9118  003094  C053  F060         	movff	??_floorf+1,floorf@m
  9119  003098  C054  F061         	movff	??_floorf+2,floorf@m+1
  9120  00309C  C055  F062         	movff	??_floorf+3,floorf@m+2
  9121  0030A0  C056  F063         	movff	??_floorf+4,floorf@m+3
  9122  0030A4  0100               	movlb	0	; () banked
  9123  0030A6  5160               	movf	floorf@m& (0+255),w,b
  9124  0030A8  1566               	andwf	floorf@u& (0+255),w,b
  9125  0030AA  6E52               	movwf	??_floorf^0,c
  9126  0030AC  5161               	movf	(floorf@m+1)& (0+255),w,b
  9127  0030AE  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9128  0030B0  6E53               	movwf	(??_floorf+1)^0,c
  9129  0030B2  5162               	movf	(floorf@m+2)& (0+255),w,b
  9130  0030B4  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9131  0030B6  6E54               	movwf	(??_floorf+2)^0,c
  9132  0030B8  5163               	movf	(floorf@m+3)& (0+255),w,b
  9133  0030BA  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9134  0030BC  6E55               	movwf	(??_floorf+3)^0,c
  9135  0030BE  5052               	movf	??_floorf^0,w,c
  9136  0030C0  1053               	iorwf	(??_floorf+1)^0,w,c
  9137  0030C2  1054               	iorwf	(??_floorf+2)^0,w,c
  9138  0030C4  1055               	iorwf	(??_floorf+3)^0,w,c
  9139  0030C6  A4D8               	btfss	status,2,c
  9140  0030C8  EF68  F018         	goto	u5511
  9141  0030CC  EF6A  F018         	goto	u5510
  9142  0030D0                     u5511:
  9143  0030D0  EF6C  F018         	goto	l5023
  9144  0030D4                     u5510:
  9145  0030D4  EF22  F018         	goto	l5015
  9146  0030D8                     l5023:
  9147                           
  9148                           ; BSR set to: 0
  9149  0030D8  C066  F052         	movff	floorf@u,??_floorf
  9150  0030DC  C067  F053         	movff	floorf@u+1,??_floorf+1
  9151  0030E0  C068  F054         	movff	floorf@u+2,??_floorf+2
  9152  0030E4  C069  F055         	movff	floorf@u+3,??_floorf+3
  9153  0030E8  0E20               	movlw	32
  9154  0030EA  EF7C  F018         	goto	u5520
  9155  0030EE                     u5525:
  9156  0030EE  90D8               	bcf	status,0,c
  9157  0030F0  3255               	rrcf	(??_floorf+3)^0,f,c
  9158  0030F2  3254               	rrcf	(??_floorf+2)^0,f,c
  9159  0030F4  3253               	rrcf	(??_floorf+1)^0,f,c
  9160  0030F6  3252               	rrcf	??_floorf^0,f,c
  9161  0030F8                     u5520:
  9162  0030F8  2EE8               	decfsz	wreg,f,c
  9163  0030FA  EF77  F018         	goto	u5525
  9164  0030FE  5052               	movf	??_floorf^0,w,c
  9165  003100  1053               	iorwf	(??_floorf+1)^0,w,c
  9166  003102  1054               	iorwf	(??_floorf+2)^0,w,c
  9167  003104  1055               	iorwf	(??_floorf+3)^0,w,c
  9168  003106  B4D8               	btfsc	status,2,c
  9169  003108  EF88  F018         	goto	u5531
  9170  00310C  EF8A  F018         	goto	u5530
  9171  003110                     u5531:
  9172  003110  EF92  F018         	goto	l1648
  9173  003114                     u5530:
  9174  003114                     
  9175                           ; BSR set to: 0
  9176  003114  5160               	movf	floorf@m& (0+255),w,b
  9177  003116  2766               	addwf	floorf@u& (0+255),f,b
  9178  003118  5161               	movf	(floorf@m+1)& (0+255),w,b
  9179  00311A  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9180  00311C  5162               	movf	(floorf@m+2)& (0+255),w,b
  9181  00311E  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9182  003120  5163               	movf	(floorf@m+3)& (0+255),w,b
  9183  003122  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9184  003124                     l1648:
  9185                           
  9186                           ; BSR set to: 0
  9187  003124  1D60               	comf	floorf@m& (0+255),w,b
  9188  003126  6E52               	movwf	??_floorf^0,c
  9189  003128  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9190  00312A  6E53               	movwf	(??_floorf+1)^0,c
  9191  00312C  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9192  00312E  6E54               	movwf	(??_floorf+2)^0,c
  9193  003130  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9194  003132  6E55               	movwf	(??_floorf+3)^0,c
  9195  003134  5052               	movf	??_floorf^0,w,c
  9196  003136  1766               	andwf	floorf@u& (0+255),f,b
  9197  003138  5053               	movf	(??_floorf+1)^0,w,c
  9198  00313A  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9199  00313C  5054               	movf	(??_floorf+2)^0,w,c
  9200  00313E  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9201  003140  5055               	movf	(??_floorf+3)^0,w,c
  9202  003142  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9203  003144  EFE8  F018         	goto	l5035
  9204  003148                     l5027:
  9205                           
  9206                           ; BSR set to: 0
  9207  003148  C066  F052         	movff	floorf@u,??_floorf
  9208  00314C  C067  F053         	movff	floorf@u+1,??_floorf+1
  9209  003150  C068  F054         	movff	floorf@u+2,??_floorf+2
  9210  003154  C069  F055         	movff	floorf@u+3,??_floorf+3
  9211  003158  0E20               	movlw	32
  9212  00315A  EFB4  F018         	goto	u5540
  9213  00315E                     u5545:
  9214  00315E  90D8               	bcf	status,0,c
  9215  003160  3255               	rrcf	(??_floorf+3)^0,f,c
  9216  003162  3254               	rrcf	(??_floorf+2)^0,f,c
  9217  003164  3253               	rrcf	(??_floorf+1)^0,f,c
  9218  003166  3252               	rrcf	??_floorf^0,f,c
  9219  003168                     u5540:
  9220  003168  2EE8               	decfsz	wreg,f,c
  9221  00316A  EFAF  F018         	goto	u5545
  9222  00316E  5052               	movf	??_floorf^0,w,c
  9223  003170  1053               	iorwf	(??_floorf+1)^0,w,c
  9224  003172  1054               	iorwf	(??_floorf+2)^0,w,c
  9225  003174  1055               	iorwf	(??_floorf+3)^0,w,c
  9226  003176  A4D8               	btfss	status,2,c
  9227  003178  EFC0  F018         	goto	u5551
  9228  00317C  EFC2  F018         	goto	u5550
  9229  003180                     u5551:
  9230  003180  EFCC  F018         	goto	l5031
  9231  003184                     u5550:
  9232  003184                     
  9233                           ; BSR set to: 0
  9234  003184  0E00               	movlw	0
  9235  003186  6F66               	movwf	floorf@u& (0+255),b
  9236  003188  0E00               	movlw	0
  9237  00318A  6F67               	movwf	(floorf@u+1)& (0+255),b
  9238  00318C  0E00               	movlw	0
  9239  00318E  6F68               	movwf	(floorf@u+2)& (0+255),b
  9240  003190  0E00               	movlw	0
  9241  003192  6F69               	movwf	(floorf@u+3)& (0+255),b
  9242  003194  EFE8  F018         	goto	l5035
  9243  003198                     l5031:
  9244                           
  9245                           ; BSR set to: 0
  9246  003198  90D8               	bcf	status,0,c
  9247  00319A  3566               	rlcf	floorf@u& (0+255),w,b
  9248  00319C  6E52               	movwf	??_floorf^0,c
  9249  00319E  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9250  0031A0  6E53               	movwf	(??_floorf+1)^0,c
  9251  0031A2  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9252  0031A4  6E54               	movwf	(??_floorf+2)^0,c
  9253  0031A6  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9254  0031A8  6E55               	movwf	(??_floorf+3)^0,c
  9255  0031AA  5052               	movf	??_floorf^0,w,c
  9256  0031AC  1053               	iorwf	(??_floorf+1)^0,w,c
  9257  0031AE  1054               	iorwf	(??_floorf+2)^0,w,c
  9258  0031B0  1055               	iorwf	(??_floorf+3)^0,w,c
  9259  0031B2  B4D8               	btfsc	status,2,c
  9260  0031B4  EFDE  F018         	goto	u5561
  9261  0031B8  EFE0  F018         	goto	u5560
  9262  0031BC                     u5561:
  9263  0031BC  EFE8  F018         	goto	l5035
  9264  0031C0                     u5560:
  9265  0031C0                     
  9266                           ; BSR set to: 0
  9267  0031C0  0E00               	movlw	0
  9268  0031C2  6F66               	movwf	floorf@u& (0+255),b
  9269  0031C4  0E00               	movlw	0
  9270  0031C6  6F67               	movwf	(floorf@u+1)& (0+255),b
  9271  0031C8  0E80               	movlw	128
  9272  0031CA  6F68               	movwf	(floorf@u+2)& (0+255),b
  9273  0031CC  0EBF               	movlw	191
  9274  0031CE  6F69               	movwf	(floorf@u+3)& (0+255),b
  9275  0031D0                     l5035:
  9276                           
  9277                           ; BSR set to: 0
  9278  0031D0  C066  F04E         	movff	floorf@u,?_floorf
  9279  0031D4  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9280  0031D8  C068  F050         	movff	floorf@u+2,?_floorf+2
  9281  0031DC  C069  F051         	movff	floorf@u+3,?_floorf+3
  9282  0031E0                     l1645:
  9283                           
  9284                           ; BSR set to: 0
  9285  0031E0  0012               	return		;funcret
  9286  0031E2                     __end_of_floorf:
  9287                           	callstack 0
  9288                           
  9289 ;; *************** function ___fpclassifyf *****************
  9290 ;; Defined at:
  9291 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9292 ;; Parameters:    Size  Location     Type
  9293 ;;  x               4    0[COMRAM] float 
  9294 ;; Auto vars:     Size  Location     Type
  9295 ;;  u               4   10[COMRAM] struct .
  9296 ;;  e               2    8[COMRAM] int 
  9297 ;; Return value:  Size  Location     Type
  9298 ;;                  2    0[COMRAM] int 
  9299 ;; Registers used:
  9300 ;;		wreg, status,2, status,0
  9301 ;; Tracked objects:
  9302 ;;		On entry : 0/0
  9303 ;;		On exit  : 0/0
  9304 ;;		Unchanged: 0/0
  9305 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9306 ;;      Params:         4       0       0       0       0       0       0
  9307 ;;      Locals:         6       0       0       0       0       0       0
  9308 ;;      Temps:          4       0       0       0       0       0       0
  9309 ;;      Totals:        14       0       0       0       0       0       0
  9310 ;;Total ram usage:       14 bytes
  9311 ;; Hardware stack levels used:    1
  9312 ;; Hardware stack levels required when called:    1
  9313 ;; This function calls:
  9314 ;;		Nothing
  9315 ;; This function is called by:
  9316 ;;		_efgtoa
  9317 ;; This function uses a non-reentrant model
  9318 ;;
  9319                           
  9320                           	psect	text30
  9321  0044E0                     __ptext30:
  9322                           	callstack 0
  9323  0044E0                     ___fpclassifyf:
  9324                           	callstack 22
  9325  0044E0  C1A7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9326  0044E4  C1A8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9327  0044E8  C1A9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9328  0044EC  C1AA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9329  0044F0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9330  0044F4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9331  0044F8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9332  0044FC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9333  004500  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9334  004504  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9335  004508  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9336  00450C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9337  004510  0E18               	movlw	24
  9338  004512  EF90  F022         	goto	u5350
  9339  004516                     u5355:
  9340  004516  90D8               	bcf	status,0,c
  9341  004518  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9342  00451A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9343  00451C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9344  00451E  3205               	rrcf	??___fpclassifyf^0,f,c
  9345  004520                     u5350:
  9346  004520  2EE8               	decfsz	wreg,f,c
  9347  004522  EF8B  F022         	goto	u5355
  9348  004526  5005               	movf	??___fpclassifyf^0,w,c
  9349  004528  6E09               	movwf	___fpclassifyf@e^0,c
  9350  00452A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9351  00452C  5009               	movf	___fpclassifyf@e^0,w,c
  9352  00452E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9353  004530  A4D8               	btfss	status,2,c
  9354  004532  EF9D  F022         	goto	u5361
  9355  004536  EF9F  F022         	goto	u5360
  9356  00453A                     u5361:
  9357  00453A  EFBF  F022         	goto	l4987
  9358  00453E                     u5360:
  9359  00453E  90D8               	bcf	status,0,c
  9360  004540  340B               	rlcf	___fpclassifyf@u^0,w,c
  9361  004542  6E05               	movwf	??___fpclassifyf^0,c
  9362  004544  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9363  004546  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9364  004548  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9365  00454A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9366  00454C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9367  00454E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9368  004550  5005               	movf	??___fpclassifyf^0,w,c
  9369  004552  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9370  004554  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9371  004556  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9372  004558  A4D8               	btfss	status,2,c
  9373  00455A  EFB1  F022         	goto	u5371
  9374  00455E  EFB3  F022         	goto	u5370
  9375  004562                     u5371:
  9376  004562  EFB9  F022         	goto	l4983
  9377  004566                     u5370:
  9378  004566  0E00               	movlw	0
  9379  004568  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9380  00456A  0E02               	movlw	2
  9381  00456C  6E01               	movwf	?___fpclassifyf^0,c
  9382  00456E  EFEE  F022         	goto	l1600
  9383  004572                     l4983:
  9384  004572  0E00               	movlw	0
  9385  004574  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9386  004576  0E03               	movlw	3
  9387  004578  6E01               	movwf	?___fpclassifyf^0,c
  9388  00457A  EFEE  F022         	goto	l1600
  9389  00457E                     l4987:
  9390  00457E  2809               	incf	___fpclassifyf@e^0,w,c
  9391  004580  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9392  004582  A4D8               	btfss	status,2,c
  9393  004584  EFC6  F022         	goto	u5381
  9394  004588  EFC8  F022         	goto	u5380
  9395  00458C                     u5381:
  9396  00458C  EFEA  F022         	goto	l4993
  9397  004590                     u5380:
  9398  004590  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9399  004594  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9400  004598  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9401  00459C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9402  0045A0  0E09               	movlw	9
  9403  0045A2                     u5395:
  9404  0045A2  90D8               	bcf	status,0,c
  9405  0045A4  3605               	rlcf	??___fpclassifyf^0,f,c
  9406  0045A6  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9407  0045A8  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9408  0045AA  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9409  0045AC  2EE8               	decfsz	wreg,f,c
  9410  0045AE  EFD1  F022         	goto	u5395
  9411  0045B2  5005               	movf	??___fpclassifyf^0,w,c
  9412  0045B4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9413  0045B6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9414  0045B8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9415  0045BA  B4D8               	btfsc	status,2,c
  9416  0045BC  EFE2  F022         	goto	u5401
  9417  0045C0  EFE5  F022         	goto	u5400
  9418  0045C4                     u5401:
  9419  0045C4  0E01               	movlw	1
  9420  0045C6  EFE6  F022         	goto	u5410
  9421  0045CA                     u5400:
  9422  0045CA  0E00               	movlw	0
  9423  0045CC                     u5410:
  9424  0045CC  6E01               	movwf	?___fpclassifyf^0,c
  9425  0045CE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9426  0045D0  EFEE  F022         	goto	l1600
  9427  0045D4                     l4993:
  9428  0045D4  0E00               	movlw	0
  9429  0045D6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9430  0045D8  0E04               	movlw	4
  9431  0045DA  6E01               	movwf	?___fpclassifyf^0,c
  9432  0045DC                     l1600:
  9433  0045DC  0012               	return		;funcret
  9434  0045DE                     __end_of___fpclassifyf:
  9435                           	callstack 0
  9436                           
  9437 ;; *************** function ___flsub *****************
  9438 ;; Defined at:
  9439 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9440 ;; Parameters:    Size  Location     Type
  9441 ;;  b               4   68[COMRAM] int 
  9442 ;;  a               4   72[COMRAM] int 
  9443 ;; Auto vars:     Size  Location     Type
  9444 ;;		None
  9445 ;; Return value:  Size  Location     Type
  9446 ;;                  4   68[COMRAM] int 
  9447 ;; Registers used:
  9448 ;;		wreg, status,2, status,0, cstack
  9449 ;; Tracked objects:
  9450 ;;		On entry : 0/0
  9451 ;;		On exit  : 0/0
  9452 ;;		Unchanged: 0/0
  9453 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9454 ;;      Params:         8       0       0       0       0       0       0
  9455 ;;      Locals:         0       0       0       0       0       0       0
  9456 ;;      Temps:          0       0       0       0       0       0       0
  9457 ;;      Totals:         8       0       0       0       0       0       0
  9458 ;;Total ram usage:        8 bytes
  9459 ;; Hardware stack levels used:    1
  9460 ;; Hardware stack levels required when called:    2
  9461 ;; This function calls:
  9462 ;;		___fladd
  9463 ;; This function is called by:
  9464 ;;		_secretMenu
  9465 ;;		_efgtoa
  9466 ;; This function uses a non-reentrant model
  9467 ;;
  9468                           
  9469                           	psect	text31
  9470  00532A                     __ptext31:
  9471                           	callstack 0
  9472  00532A                     ___flsub:
  9473                           	callstack 21
  9474  00532A  0E00               	movlw	0
  9475  00532C  1A49               	xorwf	___flsub@a^0,f,c
  9476  00532E  0E00               	movlw	0
  9477  005330  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9478  005332  0E00               	movlw	0
  9479  005334  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9480  005336  0E80               	movlw	128
  9481  005338  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9482  00533A  C045  F035         	movff	___flsub@b,___fladd@b
  9483  00533E  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9484  005342  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9485  005346  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9486  00534A  C049  F039         	movff	___flsub@a,___fladd@a
  9487  00534E  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9488  005352  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9489  005356  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9490  00535A  EC53  F00D         	call	___fladd	;wreg free
  9491  00535E  C035  F045         	movff	?___fladd,?___flsub
  9492  005362  C036  F046         	movff	?___fladd+1,?___flsub+1
  9493  005366  C037  F047         	movff	?___fladd+2,?___flsub+2
  9494  00536A  C038  F048         	movff	?___fladd+3,?___flsub+3
  9495  00536E  0012               	return		;funcret
  9496  005370                     __end_of___flsub:
  9497                           	callstack 0
  9498                           
  9499 ;; *************** function ___fladd *****************
  9500 ;; Defined at:
  9501 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9502 ;; Parameters:    Size  Location     Type
  9503 ;;  b               4   52[COMRAM] int 
  9504 ;;  a               4   56[COMRAM] int 
  9505 ;; Auto vars:     Size  Location     Type
  9506 ;;  grs             1   67[COMRAM] unsigned char 
  9507 ;;  bexp            1   66[COMRAM] unsigned char 
  9508 ;;  aexp            1   65[COMRAM] unsigned char 
  9509 ;;  signs           1   64[COMRAM] unsigned char 
  9510 ;; Return value:  Size  Location     Type
  9511 ;;                  4   52[COMRAM] unsigned char 
  9512 ;; Registers used:
  9513 ;;		wreg, status,2, status,0
  9514 ;; Tracked objects:
  9515 ;;		On entry : 0/0
  9516 ;;		On exit  : 0/0
  9517 ;;		Unchanged: 0/0
  9518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9519 ;;      Params:         8       0       0       0       0       0       0
  9520 ;;      Locals:         4       0       0       0       0       0       0
  9521 ;;      Temps:          4       0       0       0       0       0       0
  9522 ;;      Totals:        16       0       0       0       0       0       0
  9523 ;;Total ram usage:       16 bytes
  9524 ;; Hardware stack levels used:    1
  9525 ;; Hardware stack levels required when called:    1
  9526 ;; This function calls:
  9527 ;;		Nothing
  9528 ;; This function is called by:
  9529 ;;		_secretMenu
  9530 ;;		_speedControl
  9531 ;;		___flsub
  9532 ;;		_efgtoa
  9533 ;; This function uses a non-reentrant model
  9534 ;;
  9535                           
  9536                           	psect	text32
  9537  001AA6                     __ptext32:
  9538                           	callstack 0
  9539  001AA6                     ___fladd:
  9540                           	callstack 21
  9541  001AA6  5038               	movf	(___fladd@b+3)^0,w,c
  9542  001AA8  0B80               	andlw	128
  9543  001AAA  6E41               	movwf	___fladd@signs^0,c
  9544  001AAC  5038               	movf	(___fladd@b+3)^0,w,c
  9545  001AAE  2438               	addwf	(___fladd@b+3)^0,w,c
  9546  001AB0  6E43               	movwf	___fladd@bexp^0,c
  9547  001AB2  AE37               	btfss	(___fladd@b+2)^0,7,c
  9548  001AB4  EF5E  F00D         	goto	u4041
  9549  001AB8  EF60  F00D         	goto	u4040
  9550  001ABC                     u4041:
  9551  001ABC  EF61  F00D         	goto	l4201
  9552  001AC0                     u4040:
  9553  001AC0  8043               	bsf	___fladd@bexp^0,0,c
  9554  001AC2                     l4201:
  9555  001AC2  5043               	movf	___fladd@bexp^0,w,c
  9556  001AC4  B4D8               	btfsc	status,2,c
  9557  001AC6  EF67  F00D         	goto	u4051
  9558  001ACA  EF69  F00D         	goto	u4050
  9559  001ACE                     u4051:
  9560  001ACE  EF7E  F00D         	goto	l4211
  9561  001AD2                     u4050:
  9562  001AD2  2843               	incf	___fladd@bexp^0,w,c
  9563  001AD4  A4D8               	btfss	status,2,c
  9564  001AD6  EF6F  F00D         	goto	u4061
  9565  001ADA  EF71  F00D         	goto	u4060
  9566  001ADE                     u4061:
  9567  001ADE  EF79  F00D         	goto	l4207
  9568  001AE2                     u4060:
  9569  001AE2  0E00               	movlw	0
  9570  001AE4  6E35               	movwf	___fladd@b^0,c
  9571  001AE6  0E00               	movlw	0
  9572  001AE8  6E36               	movwf	(___fladd@b+1)^0,c
  9573  001AEA  0E00               	movlw	0
  9574  001AEC  6E37               	movwf	(___fladd@b+2)^0,c
  9575  001AEE  0E00               	movlw	0
  9576  001AF0  6E38               	movwf	(___fladd@b+3)^0,c
  9577  001AF2                     l4207:
  9578  001AF2  8E37               	bsf	(___fladd@b+2)^0,7,c
  9579  001AF4  0E00               	movlw	0
  9580  001AF6  6E38               	movwf	(___fladd@b+3)^0,c
  9581  001AF8  EF86  F00D         	goto	l4213
  9582  001AFC                     l4211:
  9583  001AFC  0E00               	movlw	0
  9584  001AFE  6E35               	movwf	___fladd@b^0,c
  9585  001B00  0E00               	movlw	0
  9586  001B02  6E36               	movwf	(___fladd@b+1)^0,c
  9587  001B04  0E00               	movlw	0
  9588  001B06  6E37               	movwf	(___fladd@b+2)^0,c
  9589  001B08  0E00               	movlw	0
  9590  001B0A  6E38               	movwf	(___fladd@b+3)^0,c
  9591  001B0C                     l4213:
  9592  001B0C  503C               	movf	(___fladd@a+3)^0,w,c
  9593  001B0E  0B80               	andlw	128
  9594  001B10  6E42               	movwf	___fladd@aexp^0,c
  9595  001B12  5041               	movf	___fladd@signs^0,w,c
  9596  001B14  1842               	xorwf	___fladd@aexp^0,w,c
  9597  001B16  B4D8               	btfsc	status,2,c
  9598  001B18  EF90  F00D         	goto	u4071
  9599  001B1C  EF92  F00D         	goto	u4070
  9600  001B20                     u4071:
  9601  001B20  EF93  F00D         	goto	l4219
  9602  001B24                     u4070:
  9603  001B24  8C41               	bsf	___fladd@signs^0,6,c
  9604  001B26                     l4219:
  9605  001B26  503C               	movf	(___fladd@a+3)^0,w,c
  9606  001B28  243C               	addwf	(___fladd@a+3)^0,w,c
  9607  001B2A  6E42               	movwf	___fladd@aexp^0,c
  9608  001B2C  AE3B               	btfss	(___fladd@a+2)^0,7,c
  9609  001B2E  EF9B  F00D         	goto	u4081
  9610  001B32  EF9D  F00D         	goto	u4080
  9611  001B36                     u4081:
  9612  001B36  EF9E  F00D         	goto	l4225
  9613  001B3A                     u4080:
  9614  001B3A  8042               	bsf	___fladd@aexp^0,0,c
  9615  001B3C                     l4225:
  9616  001B3C  5042               	movf	___fladd@aexp^0,w,c
  9617  001B3E  B4D8               	btfsc	status,2,c
  9618  001B40  EFA4  F00D         	goto	u4091
  9619  001B44  EFA6  F00D         	goto	u4090
  9620  001B48                     u4091:
  9621  001B48  EFBB  F00D         	goto	l4235
  9622  001B4C                     u4090:
  9623  001B4C  2842               	incf	___fladd@aexp^0,w,c
  9624  001B4E  A4D8               	btfss	status,2,c
  9625  001B50  EFAC  F00D         	goto	u4101
  9626  001B54  EFAE  F00D         	goto	u4100
  9627  001B58                     u4101:
  9628  001B58  EFB6  F00D         	goto	l4231
  9629  001B5C                     u4100:
  9630  001B5C  0E00               	movlw	0
  9631  001B5E  6E39               	movwf	___fladd@a^0,c
  9632  001B60  0E00               	movlw	0
  9633  001B62  6E3A               	movwf	(___fladd@a+1)^0,c
  9634  001B64  0E00               	movlw	0
  9635  001B66  6E3B               	movwf	(___fladd@a+2)^0,c
  9636  001B68  0E00               	movlw	0
  9637  001B6A  6E3C               	movwf	(___fladd@a+3)^0,c
  9638  001B6C                     l4231:
  9639  001B6C  8E3B               	bsf	(___fladd@a+2)^0,7,c
  9640  001B6E  0E00               	movlw	0
  9641  001B70  6E3C               	movwf	(___fladd@a+3)^0,c
  9642  001B72  EFC3  F00D         	goto	l4237
  9643  001B76                     l4235:
  9644  001B76  0E00               	movlw	0
  9645  001B78  6E39               	movwf	___fladd@a^0,c
  9646  001B7A  0E00               	movlw	0
  9647  001B7C  6E3A               	movwf	(___fladd@a+1)^0,c
  9648  001B7E  0E00               	movlw	0
  9649  001B80  6E3B               	movwf	(___fladd@a+2)^0,c
  9650  001B82  0E00               	movlw	0
  9651  001B84  6E3C               	movwf	(___fladd@a+3)^0,c
  9652  001B86                     l4237:
  9653  001B86  5043               	movf	___fladd@bexp^0,w,c
  9654  001B88  5C42               	subwf	___fladd@aexp^0,w,c
  9655  001B8A  B0D8               	btfsc	status,0,c
  9656  001B8C  EFCA  F00D         	goto	u4111
  9657  001B90  EFCC  F00D         	goto	u4110
  9658  001B94                     u4111:
  9659  001B94  EFF3  F00D         	goto	l4273
  9660  001B98                     u4110:
  9661  001B98  AC41               	btfss	___fladd@signs^0,6,c
  9662  001B9A  EFD1  F00D         	goto	u4121
  9663  001B9E  EFD3  F00D         	goto	u4120
  9664  001BA2                     u4121:
  9665  001BA2  EFD5  F00D         	goto	l4243
  9666  001BA6                     u4120:
  9667  001BA6  0E80               	movlw	128
  9668  001BA8  1A41               	xorwf	___fladd@signs^0,f,c
  9669  001BAA                     l4243:
  9670  001BAA  C043  F044         	movff	___fladd@bexp,___fladd@grs
  9671  001BAE  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9672  001BB2  C044  F042         	movff	___fladd@grs,___fladd@aexp
  9673  001BB6  C035  F044         	movff	___fladd@b,___fladd@grs
  9674  001BBA  C039  F035         	movff	___fladd@a,___fladd@b
  9675  001BBE  C044  F039         	movff	___fladd@grs,___fladd@a
  9676  001BC2  C036  F044         	movff	___fladd@b+1,___fladd@grs
  9677  001BC6  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
  9678  001BCA  C044  F03A         	movff	___fladd@grs,___fladd@a+1
  9679  001BCE  C037  F044         	movff	___fladd@b+2,___fladd@grs
  9680  001BD2  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
  9681  001BD6  C044  F03B         	movff	___fladd@grs,___fladd@a+2
  9682  001BDA  C038  F044         	movff	___fladd@b+3,___fladd@grs
  9683  001BDE  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
  9684  001BE2  C044  F03C         	movff	___fladd@grs,___fladd@a+3
  9685  001BE6                     l4273:
  9686  001BE6  0E00               	movlw	0
  9687  001BE8  6E44               	movwf	___fladd@grs^0,c
  9688  001BEA  5043               	movf	___fladd@bexp^0,w,c
  9689  001BEC  C042  F03D         	movff	___fladd@aexp,??___fladd
  9690  001BF0  6A3E               	clrf	(??___fladd+1)^0,c
  9691  001BF2  5E3D               	subwf	??___fladd^0,f,c
  9692  001BF4  0E00               	movlw	0
  9693  001BF6  5A3E               	subwfb	(??___fladd+1)^0,f,c
  9694  001BF8  BE3E               	btfsc	(??___fladd+1)^0,7,c
  9695  001BFA  EF08  F00E         	goto	u4131
  9696  001BFE  503E               	movf	(??___fladd+1)^0,w,c
  9697  001C00  E109               	bnz	u4130
  9698  001C02  0E1A               	movlw	26
  9699  001C04  5C3D               	subwf	??___fladd^0,w,c
  9700  001C06  A0D8               	btfss	status,0,c
  9701  001C08  EF08  F00E         	goto	u4131
  9702  001C0C  EF0A  F00E         	goto	u4130
  9703  001C10                     u4131:
  9704  001C10  EF41  F00E         	goto	l1227
  9705  001C14                     u4130:
  9706  001C14  5035               	movf	___fladd@b^0,w,c
  9707  001C16  1036               	iorwf	(___fladd@b+1)^0,w,c
  9708  001C18  1037               	iorwf	(___fladd@b+2)^0,w,c
  9709  001C1A  1038               	iorwf	(___fladd@b+3)^0,w,c
  9710  001C1C  A4D8               	btfss	status,2,c
  9711  001C1E  EF13  F00E         	goto	u4141
  9712  001C22  EF16  F00E         	goto	u4140
  9713  001C26                     u4141:
  9714  001C26  0E01               	movlw	1
  9715  001C28  EF17  F00E         	goto	u4150
  9716  001C2C                     u4140:
  9717  001C2C  0E00               	movlw	0
  9718  001C2E                     u4150:
  9719  001C2E  6E44               	movwf	___fladd@grs^0,c
  9720  001C30  0E00               	movlw	0
  9721  001C32  6E35               	movwf	___fladd@b^0,c
  9722  001C34  0E00               	movlw	0
  9723  001C36  6E36               	movwf	(___fladd@b+1)^0,c
  9724  001C38  0E00               	movlw	0
  9725  001C3A  6E37               	movwf	(___fladd@b+2)^0,c
  9726  001C3C  0E00               	movlw	0
  9727  001C3E  6E38               	movwf	(___fladd@b+3)^0,c
  9728  001C40  C042  F043         	movff	___fladd@aexp,___fladd@bexp
  9729  001C44  EF4A  F00E         	goto	l1226
  9730  001C48                     l1228:
  9731  001C48  A044               	btfss	___fladd@grs^0,0,c
  9732  001C4A  EF29  F00E         	goto	u4161
  9733  001C4E  EF2B  F00E         	goto	u4160
  9734  001C52                     u4161:
  9735  001C52  EF31  F00E         	goto	l4285
  9736  001C56                     u4160:
  9737  001C56  90D8               	bcf	status,0,c
  9738  001C58  3044               	rrcf	___fladd@grs^0,w,c
  9739  001C5A  0901               	iorlw	1
  9740  001C5C  6E44               	movwf	___fladd@grs^0,c
  9741  001C5E  EF33  F00E         	goto	l4287
  9742  001C62                     l4285:
  9743  001C62  90D8               	bcf	status,0,c
  9744  001C64  3244               	rrcf	___fladd@grs^0,f,c
  9745  001C66                     l4287:
  9746  001C66  A035               	btfss	___fladd@b^0,0,c
  9747  001C68  EF38  F00E         	goto	u4171
  9748  001C6C  EF3A  F00E         	goto	u4170
  9749  001C70                     u4171:
  9750  001C70  EF3B  F00E         	goto	l4291
  9751  001C74                     u4170:
  9752  001C74  8E44               	bsf	___fladd@grs^0,7,c
  9753  001C76                     l4291:
  9754  001C76  3438               	rlcf	(___fladd@b+3)^0,w,c
  9755  001C78  3238               	rrcf	(___fladd@b+3)^0,f,c
  9756  001C7A  3237               	rrcf	(___fladd@b+2)^0,f,c
  9757  001C7C  3236               	rrcf	(___fladd@b+1)^0,f,c
  9758  001C7E  3235               	rrcf	___fladd@b^0,f,c
  9759  001C80  2A43               	incf	___fladd@bexp^0,f,c
  9760  001C82                     l1227:
  9761  001C82  5042               	movf	___fladd@aexp^0,w,c
  9762  001C84  5C43               	subwf	___fladd@bexp^0,w,c
  9763  001C86  A0D8               	btfss	status,0,c
  9764  001C88  EF48  F00E         	goto	u4181
  9765  001C8C  EF4A  F00E         	goto	u4180
  9766  001C90                     u4181:
  9767  001C90  EF24  F00E         	goto	l1228
  9768  001C94                     u4180:
  9769  001C94                     l1226:
  9770  001C94  BC41               	btfsc	___fladd@signs^0,6,c
  9771  001C96  EF4F  F00E         	goto	u4191
  9772  001C9A  EF51  F00E         	goto	u4190
  9773  001C9E                     u4191:
  9774  001C9E  EF91  F00E         	goto	l4319
  9775  001CA2                     u4190:
  9776  001CA2  5043               	movf	___fladd@bexp^0,w,c
  9777  001CA4  A4D8               	btfss	status,2,c
  9778  001CA6  EF57  F00E         	goto	u4201
  9779  001CAA  EF59  F00E         	goto	u4200
  9780  001CAE                     u4201:
  9781  001CAE  EF63  F00E         	goto	l4301
  9782  001CB2                     u4200:
  9783  001CB2  0E00               	movlw	0
  9784  001CB4  6E35               	movwf	?___fladd^0,c
  9785  001CB6  0E00               	movlw	0
  9786  001CB8  6E36               	movwf	(?___fladd+1)^0,c
  9787  001CBA  0E00               	movlw	0
  9788  001CBC  6E37               	movwf	(?___fladd+2)^0,c
  9789  001CBE  0E00               	movlw	0
  9790  001CC0  6E38               	movwf	(?___fladd+3)^0,c
  9791  001CC2  EFB2  F00F         	goto	l1235
  9792  001CC6                     l4301:
  9793  001CC6  5039               	movf	___fladd@a^0,w,c
  9794  001CC8  2635               	addwf	___fladd@b^0,f,c
  9795  001CCA  503A               	movf	(___fladd@a+1)^0,w,c
  9796  001CCC  2236               	addwfc	(___fladd@b+1)^0,f,c
  9797  001CCE  503B               	movf	(___fladd@a+2)^0,w,c
  9798  001CD0  2237               	addwfc	(___fladd@b+2)^0,f,c
  9799  001CD2  503C               	movf	(___fladd@a+3)^0,w,c
  9800  001CD4  2238               	addwfc	(___fladd@b+3)^0,f,c
  9801  001CD6  A038               	btfss	(___fladd@b+3)^0,0,c
  9802  001CD8  EF70  F00E         	goto	u4211
  9803  001CDC  EF72  F00E         	goto	u4210
  9804  001CE0                     u4211:
  9805  001CE0  EF1E  F00F         	goto	l4355
  9806  001CE4                     u4210:
  9807  001CE4  A044               	btfss	___fladd@grs^0,0,c
  9808  001CE6  EF77  F00E         	goto	u4221
  9809  001CEA  EF79  F00E         	goto	u4220
  9810  001CEE                     u4221:
  9811  001CEE  EF7F  F00E         	goto	l4309
  9812  001CF2                     u4220:
  9813  001CF2  90D8               	bcf	status,0,c
  9814  001CF4  3044               	rrcf	___fladd@grs^0,w,c
  9815  001CF6  0901               	iorlw	1
  9816  001CF8  6E44               	movwf	___fladd@grs^0,c
  9817  001CFA  EF81  F00E         	goto	l4311
  9818  001CFE                     l4309:
  9819  001CFE  90D8               	bcf	status,0,c
  9820  001D00  3244               	rrcf	___fladd@grs^0,f,c
  9821  001D02                     l4311:
  9822  001D02  A035               	btfss	___fladd@b^0,0,c
  9823  001D04  EF86  F00E         	goto	u4231
  9824  001D08  EF88  F00E         	goto	u4230
  9825  001D0C                     u4231:
  9826  001D0C  EF89  F00E         	goto	l4315
  9827  001D10                     u4230:
  9828  001D10  8E44               	bsf	___fladd@grs^0,7,c
  9829  001D12                     l4315:
  9830  001D12  3438               	rlcf	(___fladd@b+3)^0,w,c
  9831  001D14  3238               	rrcf	(___fladd@b+3)^0,f,c
  9832  001D16  3237               	rrcf	(___fladd@b+2)^0,f,c
  9833  001D18  3236               	rrcf	(___fladd@b+1)^0,f,c
  9834  001D1A  3235               	rrcf	___fladd@b^0,f,c
  9835  001D1C  2A43               	incf	___fladd@bexp^0,f,c
  9836  001D1E  EF1E  F00F         	goto	l4355
  9837  001D22                     l4319:
  9838  001D22  5039               	movf	___fladd@a^0,w,c
  9839  001D24  5C35               	subwf	___fladd@b^0,w,c
  9840  001D26  503A               	movf	(___fladd@a+1)^0,w,c
  9841  001D28  5836               	subwfb	(___fladd@b+1)^0,w,c
  9842  001D2A  503B               	movf	(___fladd@a+2)^0,w,c
  9843  001D2C  5837               	subwfb	(___fladd@b+2)^0,w,c
  9844  001D2E  5038               	movf	(___fladd@b+3)^0,w,c
  9845  001D30  0A80               	xorlw	128
  9846  001D32  6E3D               	movwf	??___fladd^0,c
  9847  001D34  503C               	movf	(___fladd@a+3)^0,w,c
  9848  001D36  0A80               	xorlw	128
  9849  001D38  583D               	subwfb	??___fladd^0,w,c
  9850  001D3A  B0D8               	btfsc	status,0,c
  9851  001D3C  EFA2  F00E         	goto	u4241
  9852  001D40  EFA4  F00E         	goto	u4240
  9853  001D44                     u4241:
  9854  001D44  EFCF  F00E         	goto	l4329
  9855  001D48                     u4240:
  9856  001D48  5035               	movf	___fladd@b^0,w,c
  9857  001D4A  5C39               	subwf	___fladd@a^0,w,c
  9858  001D4C  6E3D               	movwf	??___fladd^0,c
  9859  001D4E  5036               	movf	(___fladd@b+1)^0,w,c
  9860  001D50  583A               	subwfb	(___fladd@a+1)^0,w,c
  9861  001D52  6E3E               	movwf	(??___fladd+1)^0,c
  9862  001D54  5037               	movf	(___fladd@b+2)^0,w,c
  9863  001D56  583B               	subwfb	(___fladd@a+2)^0,w,c
  9864  001D58  6E3F               	movwf	(??___fladd+2)^0,c
  9865  001D5A  5038               	movf	(___fladd@b+3)^0,w,c
  9866  001D5C  583C               	subwfb	(___fladd@a+3)^0,w,c
  9867  001D5E  6E40               	movwf	(??___fladd+3)^0,c
  9868  001D60  0EFF               	movlw	255
  9869  001D62  243D               	addwf	??___fladd^0,w,c
  9870  001D64  6E35               	movwf	___fladd@b^0,c
  9871  001D66  0EFF               	movlw	255
  9872  001D68  203E               	addwfc	(??___fladd+1)^0,w,c
  9873  001D6A  6E36               	movwf	(___fladd@b+1)^0,c
  9874  001D6C  0EFF               	movlw	255
  9875  001D6E  203F               	addwfc	(??___fladd+2)^0,w,c
  9876  001D70  6E37               	movwf	(___fladd@b+2)^0,c
  9877  001D72  0EFF               	movlw	255
  9878  001D74  2040               	addwfc	(??___fladd+3)^0,w,c
  9879  001D76  6E38               	movwf	(___fladd@b+3)^0,c
  9880  001D78  0E80               	movlw	128
  9881  001D7A  1A41               	xorwf	___fladd@signs^0,f,c
  9882  001D7C  6C44               	negf	___fladd@grs^0,c
  9883  001D7E  5044               	movf	___fladd@grs^0,w,c
  9884  001D80  A4D8               	btfss	status,2,c
  9885  001D82  EFC5  F00E         	goto	u4251
  9886  001D86  EFC7  F00E         	goto	u4250
  9887  001D8A                     u4251:
  9888  001D8A  EFD7  F00E         	goto	l1243
  9889  001D8E                     u4250:
  9890  001D8E  0E01               	movlw	1
  9891  001D90  2635               	addwf	___fladd@b^0,f,c
  9892  001D92  0E00               	movlw	0
  9893  001D94  2236               	addwfc	(___fladd@b+1)^0,f,c
  9894  001D96  2237               	addwfc	(___fladd@b+2)^0,f,c
  9895  001D98  2238               	addwfc	(___fladd@b+3)^0,f,c
  9896  001D9A  EFD7  F00E         	goto	l1243
  9897  001D9E                     l4329:
  9898  001D9E  5039               	movf	___fladd@a^0,w,c
  9899  001DA0  5E35               	subwf	___fladd@b^0,f,c
  9900  001DA2  503A               	movf	(___fladd@a+1)^0,w,c
  9901  001DA4  5A36               	subwfb	(___fladd@b+1)^0,f,c
  9902  001DA6  503B               	movf	(___fladd@a+2)^0,w,c
  9903  001DA8  5A37               	subwfb	(___fladd@b+2)^0,f,c
  9904  001DAA  503C               	movf	(___fladd@a+3)^0,w,c
  9905  001DAC  5A38               	subwfb	(___fladd@b+3)^0,f,c
  9906  001DAE                     l1243:
  9907  001DAE  5035               	movf	___fladd@b^0,w,c
  9908  001DB0  1036               	iorwf	(___fladd@b+1)^0,w,c
  9909  001DB2  1037               	iorwf	(___fladd@b+2)^0,w,c
  9910  001DB4  1038               	iorwf	(___fladd@b+3)^0,w,c
  9911  001DB6  A4D8               	btfss	status,2,c
  9912  001DB8  EFE0  F00E         	goto	u4261
  9913  001DBC  EFE2  F00E         	goto	u4260
  9914  001DC0                     u4261:
  9915  001DC0  EF17  F00F         	goto	l4353
  9916  001DC4                     u4260:
  9917  001DC4  5044               	movf	___fladd@grs^0,w,c
  9918  001DC6  A4D8               	btfss	status,2,c
  9919  001DC8  EFE8  F00E         	goto	u4271
  9920  001DCC  EFEA  F00E         	goto	u4270
  9921  001DD0                     u4271:
  9922  001DD0  EF17  F00F         	goto	l4353
  9923  001DD4                     u4270:
  9924  001DD4  0E00               	movlw	0
  9925  001DD6  6E35               	movwf	?___fladd^0,c
  9926  001DD8  0E00               	movlw	0
  9927  001DDA  6E36               	movwf	(?___fladd+1)^0,c
  9928  001DDC  0E00               	movlw	0
  9929  001DDE  6E37               	movwf	(?___fladd+2)^0,c
  9930  001DE0  0E00               	movlw	0
  9931  001DE2  6E38               	movwf	(?___fladd+3)^0,c
  9932  001DE4  EFB2  F00F         	goto	l1235
  9933  001DE8                     l4337:
  9934  001DE8  90D8               	bcf	status,0,c
  9935  001DEA  3635               	rlcf	___fladd@b^0,f,c
  9936  001DEC  3636               	rlcf	(___fladd@b+1)^0,f,c
  9937  001DEE  3637               	rlcf	(___fladd@b+2)^0,f,c
  9938  001DF0  3638               	rlcf	(___fladd@b+3)^0,f,c
  9939  001DF2  AE44               	btfss	___fladd@grs^0,7,c
  9940  001DF4  EFFE  F00E         	goto	u4281
  9941  001DF8  EF00  F00F         	goto	u4280
  9942  001DFC                     u4281:
  9943  001DFC  EF01  F00F         	goto	l4343
  9944  001E00                     u4280:
  9945  001E00  8035               	bsf	___fladd@b^0,0,c
  9946  001E02                     l4343:
  9947  001E02  A044               	btfss	___fladd@grs^0,0,c
  9948  001E04  EF06  F00F         	goto	u4291
  9949  001E08  EF08  F00F         	goto	u4290
  9950  001E0C                     u4291:
  9951  001E0C  EF0C  F00F         	goto	l4347
  9952  001E10                     u4290:
  9953  001E10  80D8               	bsf	status,0,c
  9954  001E12  3644               	rlcf	___fladd@grs^0,f,c
  9955  001E14  EF0E  F00F         	goto	l4349
  9956  001E18                     l4347:
  9957  001E18  90D8               	bcf	status,0,c
  9958  001E1A  3644               	rlcf	___fladd@grs^0,f,c
  9959  001E1C                     l4349:
  9960  001E1C  5043               	movf	___fladd@bexp^0,w,c
  9961  001E1E  B4D8               	btfsc	status,2,c
  9962  001E20  EF14  F00F         	goto	u4301
  9963  001E24  EF16  F00F         	goto	u4300
  9964  001E28                     u4301:
  9965  001E28  EF17  F00F         	goto	l4353
  9966  001E2C                     u4300:
  9967  001E2C  0643               	decf	___fladd@bexp^0,f,c
  9968  001E2E                     l4353:
  9969  001E2E  AE37               	btfss	(___fladd@b+2)^0,7,c
  9970  001E30  EF1C  F00F         	goto	u4311
  9971  001E34  EF1E  F00F         	goto	u4310
  9972  001E38                     u4311:
  9973  001E38  EFF4  F00E         	goto	l4337
  9974  001E3C                     u4310:
  9975  001E3C                     l4355:
  9976  001E3C  0E00               	movlw	0
  9977  001E3E  6E42               	movwf	___fladd@aexp^0,c
  9978  001E40  AE44               	btfss	___fladd@grs^0,7,c
  9979  001E42  EF25  F00F         	goto	u4321
  9980  001E46  EF27  F00F         	goto	u4320
  9981  001E4A                     u4321:
  9982  001E4A  EF3F  F00F         	goto	l1252
  9983  001E4E                     u4320:
  9984  001E4E  C044  F03D         	movff	___fladd@grs,??___fladd
  9985  001E52  0E7F               	movlw	127
  9986  001E54  163D               	andwf	??___fladd^0,f,c
  9987  001E56  B4D8               	btfsc	status,2,c
  9988  001E58  EF30  F00F         	goto	u4331
  9989  001E5C  EF32  F00F         	goto	u4330
  9990  001E60                     u4331:
  9991  001E60  EF36  F00F         	goto	l1253
  9992  001E64                     u4330:
  9993  001E64                     l4361:
  9994  001E64  0E01               	movlw	1
  9995  001E66  6E42               	movwf	___fladd@aexp^0,c
  9996  001E68  EF3F  F00F         	goto	l1252
  9997  001E6C                     l1253:
  9998  001E6C  A035               	btfss	___fladd@b^0,0,c
  9999  001E6E  EF3B  F00F         	goto	u4341
 10000  001E72  EF3D  F00F         	goto	u4340
 10001  001E76                     u4341:
 10002  001E76  EF3F  F00F         	goto	l1252
 10003  001E7A                     u4340:
 10004  001E7A  EF32  F00F         	goto	l4361
 10005  001E7E                     l1252:
 10006  001E7E  5042               	movf	___fladd@aexp^0,w,c
 10007  001E80  B4D8               	btfsc	status,2,c
 10008  001E82  EF45  F00F         	goto	u4351
 10009  001E86  EF47  F00F         	goto	u4350
 10010  001E8A                     u4351:
 10011  001E8A  EF72  F00F         	goto	l4373
 10012  001E8E                     u4350:
 10013  001E8E  0E01               	movlw	1
 10014  001E90  2635               	addwf	___fladd@b^0,f,c
 10015  001E92  0E00               	movlw	0
 10016  001E94  2236               	addwfc	(___fladd@b+1)^0,f,c
 10017  001E96  2237               	addwfc	(___fladd@b+2)^0,f,c
 10018  001E98  2238               	addwfc	(___fladd@b+3)^0,f,c
 10019  001E9A  A038               	btfss	(___fladd@b+3)^0,0,c
 10020  001E9C  EF52  F00F         	goto	u4361
 10021  001EA0  EF54  F00F         	goto	u4360
 10022  001EA4                     u4361:
 10023  001EA4  EF72  F00F         	goto	l4373
 10024  001EA8                     u4360:
 10025  001EA8  C035  F03D         	movff	___fladd@b,??___fladd
 10026  001EAC  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10027  001EB0  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10028  001EB4  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10029  001EB8  3440               	rlcf	(??___fladd+3)^0,w,c
 10030  001EBA  3240               	rrcf	(??___fladd+3)^0,f,c
 10031  001EBC  323F               	rrcf	(??___fladd+2)^0,f,c
 10032  001EBE  323E               	rrcf	(??___fladd+1)^0,f,c
 10033  001EC0  323D               	rrcf	??___fladd^0,f,c
 10034  001EC2  C03D  F035         	movff	??___fladd,___fladd@b
 10035  001EC6  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10036  001ECA  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10037  001ECE  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10038  001ED2  2843               	incf	___fladd@bexp^0,w,c
 10039  001ED4  B4D8               	btfsc	status,2,c
 10040  001ED6  EF6F  F00F         	goto	u4371
 10041  001EDA  EF71  F00F         	goto	u4370
 10042  001EDE                     u4371:
 10043  001EDE  EF72  F00F         	goto	l4373
 10044  001EE2                     u4370:
 10045  001EE2  2A43               	incf	___fladd@bexp^0,f,c
 10046  001EE4                     l4373:
 10047  001EE4  2843               	incf	___fladd@bexp^0,w,c
 10048  001EE6  B4D8               	btfsc	status,2,c
 10049  001EE8  EF78  F00F         	goto	u4381
 10050  001EEC  EF7A  F00F         	goto	u4380
 10051  001EF0                     u4381:
 10052  001EF0  EF82  F00F         	goto	l4377
 10053  001EF4                     u4380:
 10054  001EF4  5043               	movf	___fladd@bexp^0,w,c
 10055  001EF6  A4D8               	btfss	status,2,c
 10056  001EF8  EF80  F00F         	goto	u4391
 10057  001EFC  EF82  F00F         	goto	u4390
 10058  001F00                     u4391:
 10059  001F00  EF94  F00F         	goto	l4381
 10060  001F04                     u4390:
 10061  001F04                     l4377:
 10062  001F04  0E00               	movlw	0
 10063  001F06  6E35               	movwf	___fladd@b^0,c
 10064  001F08  0E00               	movlw	0
 10065  001F0A  6E36               	movwf	(___fladd@b+1)^0,c
 10066  001F0C  0E00               	movlw	0
 10067  001F0E  6E37               	movwf	(___fladd@b+2)^0,c
 10068  001F10  0E00               	movlw	0
 10069  001F12  6E38               	movwf	(___fladd@b+3)^0,c
 10070  001F14  5043               	movf	___fladd@bexp^0,w,c
 10071  001F16  A4D8               	btfss	status,2,c
 10072  001F18  EF90  F00F         	goto	u4401
 10073  001F1C  EF92  F00F         	goto	u4400
 10074  001F20                     u4401:
 10075  001F20  EF94  F00F         	goto	l4381
 10076  001F24                     u4400:
 10077  001F24  0E00               	movlw	0
 10078  001F26  6E41               	movwf	___fladd@signs^0,c
 10079  001F28                     l4381:
 10080  001F28  A043               	btfss	___fladd@bexp^0,0,c
 10081  001F2A  EF99  F00F         	goto	u4411
 10082  001F2E  EF9B  F00F         	goto	u4410
 10083  001F32                     u4411:
 10084  001F32  EF9E  F00F         	goto	l4385
 10085  001F36                     u4410:
 10086  001F36  8E37               	bsf	(___fladd@b+2)^0,7,c
 10087  001F38  EF9F  F00F         	goto	l4387
 10088  001F3C                     l4385:
 10089  001F3C  9E37               	bcf	(___fladd@b+2)^0,7,c
 10090  001F3E                     l4387:
 10091  001F3E  90D8               	bcf	status,0,c
 10092  001F40  3043               	rrcf	___fladd@bexp^0,w,c
 10093  001F42  6E38               	movwf	(___fladd@b+3)^0,c
 10094  001F44  AE41               	btfss	___fladd@signs^0,7,c
 10095  001F46  EFA7  F00F         	goto	u4421
 10096  001F4A  EFA9  F00F         	goto	u4420
 10097  001F4E                     u4421:
 10098  001F4E  EFAA  F00F         	goto	l4393
 10099  001F52                     u4420:
 10100  001F52  8E38               	bsf	(___fladd@b+3)^0,7,c
 10101  001F54                     l4393:
 10102  001F54  C035  F035         	movff	___fladd@b,?___fladd
 10103  001F58  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10104  001F5C  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10105  001F60  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10106  001F64                     l1235:
 10107  001F64  0012               	return		;funcret
 10108  001F66                     __end_of___fladd:
 10109                           	callstack 0
 10110                           
 10111 ;; *************** function ___flneg *****************
 10112 ;; Defined at:
 10113 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10114 ;; Parameters:    Size  Location     Type
 10115 ;;  f1              4    0[COMRAM] unsigned char 
 10116 ;; Auto vars:     Size  Location     Type
 10117 ;;		None
 10118 ;; Return value:  Size  Location     Type
 10119 ;;                  4    0[COMRAM] unsigned char 
 10120 ;; Registers used:
 10121 ;;		wreg, status,2, status,0
 10122 ;; Tracked objects:
 10123 ;;		On entry : 0/0
 10124 ;;		On exit  : 0/0
 10125 ;;		Unchanged: 0/0
 10126 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10127 ;;      Params:         4       0       0       0       0       0       0
 10128 ;;      Locals:         0       0       0       0       0       0       0
 10129 ;;      Temps:          0       0       0       0       0       0       0
 10130 ;;      Totals:         4       0       0       0       0       0       0
 10131 ;;Total ram usage:        4 bytes
 10132 ;; Hardware stack levels used:    1
 10133 ;; Hardware stack levels required when called:    1
 10134 ;; This function calls:
 10135 ;;		Nothing
 10136 ;; This function is called by:
 10137 ;;		_efgtoa
 10138 ;; This function uses a non-reentrant model
 10139 ;;
 10140                           
 10141                           	psect	text33
 10142  005566                     __ptext33:
 10143                           	callstack 0
 10144  005566                     ___flneg:
 10145                           	callstack 22
 10146  005566  5001               	movf	___flneg@f1^0,w,c
 10147  005568  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10148  00556A  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10149  00556C  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10150  00556E  B4D8               	btfsc	status,2,c
 10151  005570  EFBC  F02A         	goto	u5221
 10152  005574  EFBE  F02A         	goto	u5220
 10153  005578                     u5221:
 10154  005578  EFC6  F02A         	goto	l4901
 10155  00557C                     u5220:
 10156  00557C  0E00               	movlw	0
 10157  00557E  1A01               	xorwf	___flneg@f1^0,f,c
 10158  005580  0E00               	movlw	0
 10159  005582  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10160  005584  0E00               	movlw	0
 10161  005586  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10162  005588  0E80               	movlw	128
 10163  00558A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10164  00558C                     l4901:
 10165  00558C  C001  F001         	movff	___flneg@f1,?___flneg
 10166  005590  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10167  005594  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10168  005598  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10169  00559C  0012               	return		;funcret
 10170  00559E                     __end_of___flneg:
 10171                           	callstack 0
 10172                           
 10173 ;; *************** function ___flmul *****************
 10174 ;; Defined at:
 10175 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10176 ;; Parameters:    Size  Location     Type
 10177 ;;  b               4   27[COMRAM] unsigned char 
 10178 ;;  a               4   31[COMRAM] unsigned char 
 10179 ;; Auto vars:     Size  Location     Type
 10180 ;;  prod            4   46[COMRAM] struct .
 10181 ;;  grs             4   40[COMRAM] unsigned long 
 10182 ;;  temp            2   50[COMRAM] struct .
 10183 ;;  bexp            1   45[COMRAM] unsigned char 
 10184 ;;  aexp            1   44[COMRAM] unsigned char 
 10185 ;;  sign            1   39[COMRAM] unsigned char 
 10186 ;; Return value:  Size  Location     Type
 10187 ;;                  4   27[COMRAM] unsigned char 
 10188 ;; Registers used:
 10189 ;;		wreg, status,2, status,0, prodl, prodh
 10190 ;; Tracked objects:
 10191 ;;		On entry : 0/0
 10192 ;;		On exit  : 0/0
 10193 ;;		Unchanged: 0/0
 10194 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10195 ;;      Params:         8       0       0       0       0       0       0
 10196 ;;      Locals:        13       0       0       0       0       0       0
 10197 ;;      Temps:          4       0       0       0       0       0       0
 10198 ;;      Totals:        25       0       0       0       0       0       0
 10199 ;;Total ram usage:       25 bytes
 10200 ;; Hardware stack levels used:    1
 10201 ;; Hardware stack levels required when called:    1
 10202 ;; This function calls:
 10203 ;;		Nothing
 10204 ;; This function is called by:
 10205 ;;		_scanAdcConversion
 10206 ;;		_speedControl
 10207 ;;		_efgtoa
 10208 ;; This function uses a non-reentrant model
 10209 ;;
 10210                           
 10211                           	psect	text34
 10212  001F66                     __ptext34:
 10213                           	callstack 0
 10214  001F66                     ___flmul:
 10215                           	callstack 22
 10216  001F66  501F               	movf	(___flmul@b+3)^0,w,c
 10217  001F68  0B80               	andlw	128
 10218  001F6A  6E28               	movwf	___flmul@sign^0,c
 10219  001F6C  501F               	movf	(___flmul@b+3)^0,w,c
 10220  001F6E  241F               	addwf	(___flmul@b+3)^0,w,c
 10221  001F70  6E2E               	movwf	___flmul@bexp^0,c
 10222  001F72  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10223  001F74  EFBE  F00F         	goto	u4831
 10224  001F78  EFC0  F00F         	goto	u4830
 10225  001F7C                     u4831:
 10226  001F7C  EFC1  F00F         	goto	l4649
 10227  001F80                     u4830:
 10228  001F80  802E               	bsf	___flmul@bexp^0,0,c
 10229  001F82                     l4649:
 10230  001F82  502E               	movf	___flmul@bexp^0,w,c
 10231  001F84  B4D8               	btfsc	status,2,c
 10232  001F86  EFC7  F00F         	goto	u4841
 10233  001F8A  EFC9  F00F         	goto	u4840
 10234  001F8E                     u4841:
 10235  001F8E  EFDC  F00F         	goto	l4657
 10236  001F92                     u4840:
 10237  001F92  282E               	incf	___flmul@bexp^0,w,c
 10238  001F94  A4D8               	btfss	status,2,c
 10239  001F96  EFCF  F00F         	goto	u4851
 10240  001F9A  EFD1  F00F         	goto	u4850
 10241  001F9E                     u4851:
 10242  001F9E  EFD9  F00F         	goto	l4655
 10243  001FA2                     u4850:
 10244  001FA2  0E00               	movlw	0
 10245  001FA4  6E1C               	movwf	___flmul@b^0,c
 10246  001FA6  0E00               	movlw	0
 10247  001FA8  6E1D               	movwf	(___flmul@b+1)^0,c
 10248  001FAA  0E00               	movlw	0
 10249  001FAC  6E1E               	movwf	(___flmul@b+2)^0,c
 10250  001FAE  0E00               	movlw	0
 10251  001FB0  6E1F               	movwf	(___flmul@b+3)^0,c
 10252  001FB2                     l4655:
 10253  001FB2  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10254  001FB4  EFE4  F00F         	goto	l4659
 10255  001FB8                     l4657:
 10256  001FB8  0E00               	movlw	0
 10257  001FBA  6E1C               	movwf	___flmul@b^0,c
 10258  001FBC  0E00               	movlw	0
 10259  001FBE  6E1D               	movwf	(___flmul@b+1)^0,c
 10260  001FC0  0E00               	movlw	0
 10261  001FC2  6E1E               	movwf	(___flmul@b+2)^0,c
 10262  001FC4  0E00               	movlw	0
 10263  001FC6  6E1F               	movwf	(___flmul@b+3)^0,c
 10264  001FC8                     l4659:
 10265  001FC8  5023               	movf	(___flmul@a+3)^0,w,c
 10266  001FCA  0B80               	andlw	128
 10267  001FCC  1A28               	xorwf	___flmul@sign^0,f,c
 10268  001FCE  5023               	movf	(___flmul@a+3)^0,w,c
 10269  001FD0  2423               	addwf	(___flmul@a+3)^0,w,c
 10270  001FD2  6E2D               	movwf	___flmul@aexp^0,c
 10271  001FD4  AE22               	btfss	(___flmul@a+2)^0,7,c
 10272  001FD6  EFEF  F00F         	goto	u4861
 10273  001FDA  EFF1  F00F         	goto	u4860
 10274  001FDE                     u4861:
 10275  001FDE  EFF2  F00F         	goto	l4667
 10276  001FE2                     u4860:
 10277  001FE2  802D               	bsf	___flmul@aexp^0,0,c
 10278  001FE4                     l4667:
 10279  001FE4  502D               	movf	___flmul@aexp^0,w,c
 10280  001FE6  B4D8               	btfsc	status,2,c
 10281  001FE8  EFF8  F00F         	goto	u4871
 10282  001FEC  EFFA  F00F         	goto	u4870
 10283  001FF0                     u4871:
 10284  001FF0  EF0D  F010         	goto	l4675
 10285  001FF4                     u4870:
 10286  001FF4  282D               	incf	___flmul@aexp^0,w,c
 10287  001FF6  A4D8               	btfss	status,2,c
 10288  001FF8  EF00  F010         	goto	u4881
 10289  001FFC  EF02  F010         	goto	u4880
 10290  002000                     u4881:
 10291  002000  EF0A  F010         	goto	l4673
 10292  002004                     u4880:
 10293  002004  0E00               	movlw	0
 10294  002006  6E20               	movwf	___flmul@a^0,c
 10295  002008  0E00               	movlw	0
 10296  00200A  6E21               	movwf	(___flmul@a+1)^0,c
 10297  00200C  0E00               	movlw	0
 10298  00200E  6E22               	movwf	(___flmul@a+2)^0,c
 10299  002010  0E00               	movlw	0
 10300  002012  6E23               	movwf	(___flmul@a+3)^0,c
 10301  002014                     l4673:
 10302  002014  8E22               	bsf	(___flmul@a+2)^0,7,c
 10303  002016  EF15  F010         	goto	l1312
 10304  00201A                     l4675:
 10305  00201A  0E00               	movlw	0
 10306  00201C  6E20               	movwf	___flmul@a^0,c
 10307  00201E  0E00               	movlw	0
 10308  002020  6E21               	movwf	(___flmul@a+1)^0,c
 10309  002022  0E00               	movlw	0
 10310  002024  6E22               	movwf	(___flmul@a+2)^0,c
 10311  002026  0E00               	movlw	0
 10312  002028  6E23               	movwf	(___flmul@a+3)^0,c
 10313  00202A                     l1312:
 10314  00202A  502D               	movf	___flmul@aexp^0,w,c
 10315  00202C  B4D8               	btfsc	status,2,c
 10316  00202E  EF1B  F010         	goto	u4891
 10317  002032  EF1D  F010         	goto	u4890
 10318  002036                     u4891:
 10319  002036  EF25  F010         	goto	l4679
 10320  00203A                     u4890:
 10321  00203A  502E               	movf	___flmul@bexp^0,w,c
 10322  00203C  A4D8               	btfss	status,2,c
 10323  00203E  EF23  F010         	goto	u4901
 10324  002042  EF25  F010         	goto	u4900
 10325  002046                     u4901:
 10326  002046  EF2F  F010         	goto	l4683
 10327  00204A                     u4900:
 10328  00204A                     l4679:
 10329  00204A  0E00               	movlw	0
 10330  00204C  6E1C               	movwf	?___flmul^0,c
 10331  00204E  0E00               	movlw	0
 10332  002050  6E1D               	movwf	(?___flmul+1)^0,c
 10333  002052  0E00               	movlw	0
 10334  002054  6E1E               	movwf	(?___flmul+2)^0,c
 10335  002056  0E00               	movlw	0
 10336  002058  6E1F               	movwf	(?___flmul+3)^0,c
 10337  00205A  EFC7  F011         	goto	l1316
 10338  00205E                     l4683:
 10339  00205E  5022               	movf	(___flmul@a+2)^0,w,c
 10340  002060  021C               	mulwf	___flmul@b^0,c
 10341  002062  CFF3 F033          	movff	prodl,___flmul@temp
 10342  002066  CFF4 F034          	movff	prodh,___flmul@temp+1
 10343  00206A  5033               	movf	___flmul@temp^0,w,c
 10344  00206C  6E29               	movwf	___flmul@grs^0,c
 10345  00206E  6A2A               	clrf	(___flmul@grs+1)^0,c
 10346  002070  6A2B               	clrf	(___flmul@grs+2)^0,c
 10347  002072  6A2C               	clrf	(___flmul@grs+3)^0,c
 10348  002074  5034               	movf	(___flmul@temp+1)^0,w,c
 10349  002076  6E2F               	movwf	___flmul@prod^0,c
 10350  002078  6A30               	clrf	(___flmul@prod+1)^0,c
 10351  00207A  6A31               	clrf	(___flmul@prod+2)^0,c
 10352  00207C  6A32               	clrf	(___flmul@prod+3)^0,c
 10353  00207E  5021               	movf	(___flmul@a+1)^0,w,c
 10354  002080  021D               	mulwf	(___flmul@b+1)^0,c
 10355  002082  CFF3 F033          	movff	prodl,___flmul@temp
 10356  002086  CFF4 F034          	movff	prodh,___flmul@temp+1
 10357  00208A  5033               	movf	___flmul@temp^0,w,c
 10358  00208C  2629               	addwf	___flmul@grs^0,f,c
 10359  00208E  0E00               	movlw	0
 10360  002090  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10361  002092  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10362  002094  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10363  002096  5034               	movf	(___flmul@temp+1)^0,w,c
 10364  002098  262F               	addwf	___flmul@prod^0,f,c
 10365  00209A  0E00               	movlw	0
 10366  00209C  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10367  00209E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10368  0020A0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10369  0020A2  5020               	movf	___flmul@a^0,w,c
 10370  0020A4  021E               	mulwf	(___flmul@b+2)^0,c
 10371  0020A6  CFF3 F033          	movff	prodl,___flmul@temp
 10372  0020AA  CFF4 F034          	movff	prodh,___flmul@temp+1
 10373  0020AE  5033               	movf	___flmul@temp^0,w,c
 10374  0020B0  2629               	addwf	___flmul@grs^0,f,c
 10375  0020B2  0E00               	movlw	0
 10376  0020B4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10377  0020B6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10378  0020B8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10379  0020BA  5034               	movf	(___flmul@temp+1)^0,w,c
 10380  0020BC  262F               	addwf	___flmul@prod^0,f,c
 10381  0020BE  0E00               	movlw	0
 10382  0020C0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10383  0020C2  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10384  0020C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10385  0020C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10386  0020CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10387  0020CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10388  0020D2  6A29               	clrf	___flmul@grs^0,c
 10389  0020D4  5020               	movf	___flmul@a^0,w,c
 10390  0020D6  021D               	mulwf	(___flmul@b+1)^0,c
 10391  0020D8  CFF3 F033          	movff	prodl,___flmul@temp
 10392  0020DC  CFF4 F034          	movff	prodh,___flmul@temp+1
 10393  0020E0  5033               	movf	___flmul@temp^0,w,c
 10394  0020E2  2629               	addwf	___flmul@grs^0,f,c
 10395  0020E4  5034               	movf	(___flmul@temp+1)^0,w,c
 10396  0020E6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10397  0020E8  0E00               	movlw	0
 10398  0020EA  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10399  0020EC  0E00               	movlw	0
 10400  0020EE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10401  0020F0  5021               	movf	(___flmul@a+1)^0,w,c
 10402  0020F2  021C               	mulwf	___flmul@b^0,c
 10403  0020F4  CFF3 F033          	movff	prodl,___flmul@temp
 10404  0020F8  CFF4 F034          	movff	prodh,___flmul@temp+1
 10405  0020FC  5033               	movf	___flmul@temp^0,w,c
 10406  0020FE  2629               	addwf	___flmul@grs^0,f,c
 10407  002100  5034               	movf	(___flmul@temp+1)^0,w,c
 10408  002102  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10409  002104  0E00               	movlw	0
 10410  002106  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10411  002108  0E00               	movlw	0
 10412  00210A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10413  00210C  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10414  002110  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10415  002114  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10416  002118  6A29               	clrf	___flmul@grs^0,c
 10417  00211A  5020               	movf	___flmul@a^0,w,c
 10418  00211C  021C               	mulwf	___flmul@b^0,c
 10419  00211E  CFF3 F033          	movff	prodl,___flmul@temp
 10420  002122  CFF4 F034          	movff	prodh,___flmul@temp+1
 10421  002126  5033               	movf	___flmul@temp^0,w,c
 10422  002128  2629               	addwf	___flmul@grs^0,f,c
 10423  00212A  5034               	movf	(___flmul@temp+1)^0,w,c
 10424  00212C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10425  00212E  0E00               	movlw	0
 10426  002130  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10427  002132  0E00               	movlw	0
 10428  002134  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10429  002136  5022               	movf	(___flmul@a+2)^0,w,c
 10430  002138  021D               	mulwf	(___flmul@b+1)^0,c
 10431  00213A  CFF3 F033          	movff	prodl,___flmul@temp
 10432  00213E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10433  002142  5033               	movf	___flmul@temp^0,w,c
 10434  002144  262F               	addwf	___flmul@prod^0,f,c
 10435  002146  5034               	movf	(___flmul@temp+1)^0,w,c
 10436  002148  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10437  00214A  0E00               	movlw	0
 10438  00214C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10439  00214E  0E00               	movlw	0
 10440  002150  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10441  002152  5021               	movf	(___flmul@a+1)^0,w,c
 10442  002154  021E               	mulwf	(___flmul@b+2)^0,c
 10443  002156  CFF3 F033          	movff	prodl,___flmul@temp
 10444  00215A  CFF4 F034          	movff	prodh,___flmul@temp+1
 10445  00215E  5033               	movf	___flmul@temp^0,w,c
 10446  002160  262F               	addwf	___flmul@prod^0,f,c
 10447  002162  5034               	movf	(___flmul@temp+1)^0,w,c
 10448  002164  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10449  002166  0E00               	movlw	0
 10450  002168  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10451  00216A  0E00               	movlw	0
 10452  00216C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10453  00216E  5022               	movf	(___flmul@a+2)^0,w,c
 10454  002170  021E               	mulwf	(___flmul@b+2)^0,c
 10455  002172  CFF3 F033          	movff	prodl,___flmul@temp
 10456  002176  CFF4 F034          	movff	prodh,___flmul@temp+1
 10457  00217A  5033               	movf	___flmul@temp^0,w,c
 10458  00217C  6E24               	movwf	??___flmul^0,c
 10459  00217E  5034               	movf	(___flmul@temp+1)^0,w,c
 10460  002180  6E25               	movwf	(??___flmul+1)^0,c
 10461  002182  6A26               	clrf	(??___flmul+2)^0,c
 10462  002184  6A27               	clrf	(??___flmul+3)^0,c
 10463  002186  C026  F027         	movff	??___flmul+2,??___flmul+3
 10464  00218A  C025  F026         	movff	??___flmul+1,??___flmul+2
 10465  00218E  C024  F025         	movff	??___flmul,??___flmul+1
 10466  002192  6A24               	clrf	??___flmul^0,c
 10467  002194  5024               	movf	??___flmul^0,w,c
 10468  002196  262F               	addwf	___flmul@prod^0,f,c
 10469  002198  5025               	movf	(??___flmul+1)^0,w,c
 10470  00219A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10471  00219C  5026               	movf	(??___flmul+2)^0,w,c
 10472  00219E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10473  0021A0  5027               	movf	(??___flmul+3)^0,w,c
 10474  0021A2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10475  0021A4  C029  F024         	movff	___flmul@grs,??___flmul
 10476  0021A8  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10477  0021AC  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10478  0021B0  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10479  0021B4  0E19               	movlw	25
 10480  0021B6  EFE2  F010         	goto	u4910
 10481  0021BA                     u4915:
 10482  0021BA  90D8               	bcf	status,0,c
 10483  0021BC  3227               	rrcf	(??___flmul+3)^0,f,c
 10484  0021BE  3226               	rrcf	(??___flmul+2)^0,f,c
 10485  0021C0  3225               	rrcf	(??___flmul+1)^0,f,c
 10486  0021C2  3224               	rrcf	??___flmul^0,f,c
 10487  0021C4                     u4910:
 10488  0021C4  2EE8               	decfsz	wreg,f,c
 10489  0021C6  EFDD  F010         	goto	u4915
 10490  0021CA  5024               	movf	??___flmul^0,w,c
 10491  0021CC  262F               	addwf	___flmul@prod^0,f,c
 10492  0021CE  5025               	movf	(??___flmul+1)^0,w,c
 10493  0021D0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10494  0021D2  5026               	movf	(??___flmul+2)^0,w,c
 10495  0021D4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10496  0021D6  5027               	movf	(??___flmul+3)^0,w,c
 10497  0021D8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10498  0021DA  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10499  0021DE  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10500  0021E2  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10501  0021E6  6A29               	clrf	___flmul@grs^0,c
 10502  0021E8  502D               	movf	___flmul@aexp^0,w,c
 10503  0021EA  C02E  F024         	movff	___flmul@bexp,??___flmul
 10504  0021EE  6A25               	clrf	(??___flmul+1)^0,c
 10505  0021F0  2624               	addwf	??___flmul^0,f,c
 10506  0021F2  0E00               	movlw	0
 10507  0021F4  2225               	addwfc	(??___flmul+1)^0,f,c
 10508  0021F6  0E82               	movlw	130
 10509  0021F8  2424               	addwf	??___flmul^0,w,c
 10510  0021FA  6E33               	movwf	___flmul@temp^0,c
 10511  0021FC  0EFF               	movlw	255
 10512  0021FE  2025               	addwfc	(??___flmul+1)^0,w,c
 10513  002200  6E34               	movwf	(___flmul@temp+1)^0,c
 10514  002202  EF18  F011         	goto	l4731
 10515  002206                     l4725:
 10516  002206  90D8               	bcf	status,0,c
 10517  002208  362F               	rlcf	___flmul@prod^0,f,c
 10518  00220A  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10519  00220C  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10520  00220E  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10521  002210  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10522  002212  EF0D  F011         	goto	u4921
 10523  002216  EF0F  F011         	goto	u4920
 10524  00221A                     u4921:
 10525  00221A  EF10  F011         	goto	l1319
 10526  00221E                     u4920:
 10527  00221E  802F               	bsf	___flmul@prod^0,0,c
 10528  002220                     l1319:
 10529  002220  90D8               	bcf	status,0,c
 10530  002222  3629               	rlcf	___flmul@grs^0,f,c
 10531  002224  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10532  002226  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10533  002228  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10534  00222A  0633               	decf	___flmul@temp^0,f,c
 10535  00222C  A0D8               	btfss	status,0,c
 10536  00222E  0634               	decf	(___flmul@temp+1)^0,f,c
 10537  002230                     l4731:
 10538  002230  AE31               	btfss	(___flmul@prod+2)^0,7,c
 10539  002232  EF1D  F011         	goto	u4931
 10540  002236  EF1F  F011         	goto	u4930
 10541  00223A                     u4931:
 10542  00223A  EF03  F011         	goto	l4725
 10543  00223E                     u4930:
 10544  00223E  0E00               	movlw	0
 10545  002240  6E2D               	movwf	___flmul@aexp^0,c
 10546  002242  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10547  002244  EF26  F011         	goto	u4941
 10548  002248  EF28  F011         	goto	u4940
 10549  00224C                     u4941:
 10550  00224C  EF4C  F011         	goto	l1321
 10551  002250                     u4940:
 10552  002250  0EFF               	movlw	255
 10553  002252  1429               	andwf	___flmul@grs^0,w,c
 10554  002254  6E24               	movwf	??___flmul^0,c
 10555  002256  0EFF               	movlw	255
 10556  002258  142A               	andwf	(___flmul@grs+1)^0,w,c
 10557  00225A  6E25               	movwf	(??___flmul+1)^0,c
 10558  00225C  0EFF               	movlw	255
 10559  00225E  142B               	andwf	(___flmul@grs+2)^0,w,c
 10560  002260  6E26               	movwf	(??___flmul+2)^0,c
 10561  002262  0E7F               	movlw	127
 10562  002264  142C               	andwf	(___flmul@grs+3)^0,w,c
 10563  002266  6E27               	movwf	(??___flmul+3)^0,c
 10564  002268  5024               	movf	??___flmul^0,w,c
 10565  00226A  1025               	iorwf	(??___flmul+1)^0,w,c
 10566  00226C  1026               	iorwf	(??___flmul+2)^0,w,c
 10567  00226E  1027               	iorwf	(??___flmul+3)^0,w,c
 10568  002270  B4D8               	btfsc	status,2,c
 10569  002272  EF3D  F011         	goto	u4951
 10570  002276  EF3F  F011         	goto	u4950
 10571  00227A                     u4951:
 10572  00227A  EF43  F011         	goto	l1322
 10573  00227E                     u4950:
 10574  00227E                     l4739:
 10575  00227E  0E01               	movlw	1
 10576  002280  6E2D               	movwf	___flmul@aexp^0,c
 10577  002282  EF4C  F011         	goto	l1321
 10578  002286                     l1322:
 10579  002286  A02F               	btfss	___flmul@prod^0,0,c
 10580  002288  EF48  F011         	goto	u4961
 10581  00228C  EF4A  F011         	goto	u4960
 10582  002290                     u4961:
 10583  002290  EF4C  F011         	goto	l1321
 10584  002294                     u4960:
 10585  002294  EF3F  F011         	goto	l4739
 10586  002298                     l1321:
 10587  002298  502D               	movf	___flmul@aexp^0,w,c
 10588  00229A  B4D8               	btfsc	status,2,c
 10589  00229C  EF52  F011         	goto	u4971
 10590  0022A0  EF54  F011         	goto	u4970
 10591  0022A4                     u4971:
 10592  0022A4  EF78  F011         	goto	l4751
 10593  0022A8                     u4970:
 10594  0022A8  0E01               	movlw	1
 10595  0022AA  262F               	addwf	___flmul@prod^0,f,c
 10596  0022AC  0E00               	movlw	0
 10597  0022AE  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10598  0022B0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10599  0022B2  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10600  0022B4  A032               	btfss	(___flmul@prod+3)^0,0,c
 10601  0022B6  EF5F  F011         	goto	u4981
 10602  0022BA  EF61  F011         	goto	u4980
 10603  0022BE                     u4981:
 10604  0022BE  EF78  F011         	goto	l4751
 10605  0022C2                     u4980:
 10606  0022C2  C02F  F024         	movff	___flmul@prod,??___flmul
 10607  0022C6  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 10608  0022CA  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 10609  0022CE  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 10610  0022D2  3427               	rlcf	(??___flmul+3)^0,w,c
 10611  0022D4  3227               	rrcf	(??___flmul+3)^0,f,c
 10612  0022D6  3226               	rrcf	(??___flmul+2)^0,f,c
 10613  0022D8  3225               	rrcf	(??___flmul+1)^0,f,c
 10614  0022DA  3224               	rrcf	??___flmul^0,f,c
 10615  0022DC  C024  F02F         	movff	??___flmul,___flmul@prod
 10616  0022E0  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 10617  0022E4  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 10618  0022E8  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 10619  0022EC  4A33               	infsnz	___flmul@temp^0,f,c
 10620  0022EE  2A34               	incf	(___flmul@temp+1)^0,f,c
 10621  0022F0                     l4751:
 10622  0022F0  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10623  0022F2  EF83  F011         	goto	u4991
 10624  0022F6  5034               	movf	(___flmul@temp+1)^0,w,c
 10625  0022F8  E108               	bnz	u4990
 10626  0022FA  2833               	incf	___flmul@temp^0,w,c
 10627  0022FC  A0D8               	btfss	status,0,c
 10628  0022FE  EF83  F011         	goto	u4991
 10629  002302  EF85  F011         	goto	u4990
 10630  002306                     u4991:
 10631  002306  EF8F  F011         	goto	l4755
 10632  00230A                     u4990:
 10633  00230A  0E00               	movlw	0
 10634  00230C  6E2F               	movwf	___flmul@prod^0,c
 10635  00230E  0E00               	movlw	0
 10636  002310  6E30               	movwf	(___flmul@prod+1)^0,c
 10637  002312  0E80               	movlw	128
 10638  002314  6E31               	movwf	(___flmul@prod+2)^0,c
 10639  002316  0E7F               	movlw	127
 10640  002318  6E32               	movwf	(___flmul@prod+3)^0,c
 10641  00231A  EFBD  F011         	goto	l4767
 10642  00231E                     l4755:
 10643  00231E  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 10644  002320  EF9C  F011         	goto	u5000
 10645  002324  5034               	movf	(___flmul@temp+1)^0,w,c
 10646  002326  E106               	bnz	u5001
 10647  002328  0433               	decf	___flmul@temp^0,w,c
 10648  00232A  B0D8               	btfsc	status,0,c
 10649  00232C  EF9A  F011         	goto	u5001
 10650  002330  EF9C  F011         	goto	u5000
 10651  002334                     u5001:
 10652  002334  EFA8  F011         	goto	l1329
 10653  002338                     u5000:
 10654  002338  0E00               	movlw	0
 10655  00233A  6E2F               	movwf	___flmul@prod^0,c
 10656  00233C  0E00               	movlw	0
 10657  00233E  6E30               	movwf	(___flmul@prod+1)^0,c
 10658  002340  0E00               	movlw	0
 10659  002342  6E31               	movwf	(___flmul@prod+2)^0,c
 10660  002344  0E00               	movlw	0
 10661  002346  6E32               	movwf	(___flmul@prod+3)^0,c
 10662  002348  0E00               	movlw	0
 10663  00234A  6E28               	movwf	___flmul@sign^0,c
 10664  00234C  EFBD  F011         	goto	l4767
 10665  002350                     l1329:
 10666  002350  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 10667  002354  0EFF               	movlw	255
 10668  002356  162F               	andwf	___flmul@prod^0,f,c
 10669  002358  0EFF               	movlw	255
 10670  00235A  1630               	andwf	(___flmul@prod+1)^0,f,c
 10671  00235C  0E7F               	movlw	127
 10672  00235E  1631               	andwf	(___flmul@prod+2)^0,f,c
 10673  002360  0E00               	movlw	0
 10674  002362  1632               	andwf	(___flmul@prod+3)^0,f,c
 10675  002364  A02E               	btfss	___flmul@bexp^0,0,c
 10676  002366  EFB7  F011         	goto	u5011
 10677  00236A  EFB9  F011         	goto	u5010
 10678  00236E                     u5011:
 10679  00236E  EFBA  F011         	goto	l4765
 10680  002372                     u5010:
 10681  002372  8E31               	bsf	(___flmul@prod+2)^0,7,c
 10682  002374                     l4765:
 10683  002374  90D8               	bcf	status,0,c
 10684  002376  302E               	rrcf	___flmul@bexp^0,w,c
 10685  002378  6E32               	movwf	(___flmul@prod+3)^0,c
 10686  00237A                     l4767:
 10687  00237A  5028               	movf	___flmul@sign^0,w,c
 10688  00237C  1232               	iorwf	(___flmul@prod+3)^0,f,c
 10689  00237E  C02F  F01C         	movff	___flmul@prod,?___flmul
 10690  002382  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 10691  002386  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 10692  00238A  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 10693  00238E                     l1316:
 10694  00238E  0012               	return		;funcret
 10695  002390                     __end_of___flmul:
 10696                           	callstack 0
 10697                           
 10698 ;; *************** function ___flge *****************
 10699 ;; Defined at:
 10700 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  ff1             4   52[COMRAM] unsigned char 
 10703 ;;  ff2             4   56[COMRAM] unsigned char 
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;		None
 10706 ;; Return value:  Size  Location     Type
 10707 ;;		None               void
 10708 ;; Registers used:
 10709 ;;		wreg, status,2, status,0
 10710 ;; Tracked objects:
 10711 ;;		On entry : 0/0
 10712 ;;		On exit  : 0/0
 10713 ;;		Unchanged: 0/0
 10714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10715 ;;      Params:         8       0       0       0       0       0       0
 10716 ;;      Locals:         0       0       0       0       0       0       0
 10717 ;;      Temps:          4       0       0       0       0       0       0
 10718 ;;      Totals:        12       0       0       0       0       0       0
 10719 ;;Total ram usage:       12 bytes
 10720 ;; Hardware stack levels used:    1
 10721 ;; Hardware stack levels required when called:    1
 10722 ;; This function calls:
 10723 ;;		Nothing
 10724 ;; This function is called by:
 10725 ;;		_secretMenu
 10726 ;;		_efgtoa
 10727 ;; This function uses a non-reentrant model
 10728 ;;
 10729                           
 10730                           	psect	text35
 10731  0043DC                     __ptext35:
 10732                           	callstack 0
 10733  0043DC                     ___flge:
 10734                           	callstack 22
 10735  0043DC  0E00               	movlw	0
 10736  0043DE  1435               	andwf	___flge@ff1^0,w,c
 10737  0043E0  6E3D               	movwf	??___flge^0,c
 10738  0043E2  0E00               	movlw	0
 10739  0043E4  1436               	andwf	(___flge@ff1+1)^0,w,c
 10740  0043E6  6E3E               	movwf	(??___flge+1)^0,c
 10741  0043E8  0E80               	movlw	128
 10742  0043EA  1437               	andwf	(___flge@ff1+2)^0,w,c
 10743  0043EC  6E3F               	movwf	(??___flge+2)^0,c
 10744  0043EE  0E7F               	movlw	127
 10745  0043F0  1438               	andwf	(___flge@ff1+3)^0,w,c
 10746  0043F2  6E40               	movwf	(??___flge+3)^0,c
 10747  0043F4  503D               	movf	??___flge^0,w,c
 10748  0043F6  103E               	iorwf	(??___flge+1)^0,w,c
 10749  0043F8  103F               	iorwf	(??___flge+2)^0,w,c
 10750  0043FA  1040               	iorwf	(??___flge+3)^0,w,c
 10751  0043FC  A4D8               	btfss	status,2,c
 10752  0043FE  EF03  F022         	goto	u5171
 10753  004402  EF05  F022         	goto	u5170
 10754  004406                     u5171:
 10755  004406  EF0D  F022         	goto	l4879
 10756  00440A                     u5170:
 10757  00440A  0E00               	movlw	0
 10758  00440C  6E35               	movwf	___flge@ff1^0,c
 10759  00440E  0E00               	movlw	0
 10760  004410  6E36               	movwf	(___flge@ff1+1)^0,c
 10761  004412  0E00               	movlw	0
 10762  004414  6E37               	movwf	(___flge@ff1+2)^0,c
 10763  004416  0E00               	movlw	0
 10764  004418  6E38               	movwf	(___flge@ff1+3)^0,c
 10765  00441A                     l4879:
 10766  00441A  0E00               	movlw	0
 10767  00441C  1439               	andwf	___flge@ff2^0,w,c
 10768  00441E  6E3D               	movwf	??___flge^0,c
 10769  004420  0E00               	movlw	0
 10770  004422  143A               	andwf	(___flge@ff2+1)^0,w,c
 10771  004424  6E3E               	movwf	(??___flge+1)^0,c
 10772  004426  0E80               	movlw	128
 10773  004428  143B               	andwf	(___flge@ff2+2)^0,w,c
 10774  00442A  6E3F               	movwf	(??___flge+2)^0,c
 10775  00442C  0E7F               	movlw	127
 10776  00442E  143C               	andwf	(___flge@ff2+3)^0,w,c
 10777  004430  6E40               	movwf	(??___flge+3)^0,c
 10778  004432  503D               	movf	??___flge^0,w,c
 10779  004434  103E               	iorwf	(??___flge+1)^0,w,c
 10780  004436  103F               	iorwf	(??___flge+2)^0,w,c
 10781  004438  1040               	iorwf	(??___flge+3)^0,w,c
 10782  00443A  A4D8               	btfss	status,2,c
 10783  00443C  EF22  F022         	goto	u5181
 10784  004440  EF24  F022         	goto	u5180
 10785  004444                     u5181:
 10786  004444  EF2C  F022         	goto	l4883
 10787  004448                     u5180:
 10788  004448  0E00               	movlw	0
 10789  00444A  6E39               	movwf	___flge@ff2^0,c
 10790  00444C  0E00               	movlw	0
 10791  00444E  6E3A               	movwf	(___flge@ff2+1)^0,c
 10792  004450  0E00               	movlw	0
 10793  004452  6E3B               	movwf	(___flge@ff2+2)^0,c
 10794  004454  0E00               	movlw	0
 10795  004456  6E3C               	movwf	(___flge@ff2+3)^0,c
 10796  004458                     l4883:
 10797  004458  AE38               	btfss	(___flge@ff1+3)^0,7,c
 10798  00445A  EF31  F022         	goto	u5191
 10799  00445E  EF33  F022         	goto	u5190
 10800  004462                     u5191:
 10801  004462  EF3C  F022         	goto	l4887
 10802  004466                     u5190:
 10803  004466  6C35               	negf	___flge@ff1^0,c
 10804  004468  1E36               	comf	(___flge@ff1+1)^0,f,c
 10805  00446A  B0D8               	btfsc	status,0,c
 10806  00446C  2A36               	incf	(___flge@ff1+1)^0,f,c
 10807  00446E  1E37               	comf	(___flge@ff1+2)^0,f,c
 10808  004470  B0D8               	btfsc	status,0,c
 10809  004472  2A37               	incf	(___flge@ff1+2)^0,f,c
 10810  004474  0E80               	movlw	128
 10811  004476  5638               	subfwb	(___flge@ff1+3)^0,f,c
 10812  004478                     l4887:
 10813  004478  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 10814  00447A  EF41  F022         	goto	u5201
 10815  00447E  EF43  F022         	goto	u5200
 10816  004482                     u5201:
 10817  004482  EF4C  F022         	goto	l963
 10818  004486                     u5200:
 10819  004486  6C39               	negf	___flge@ff2^0,c
 10820  004488  1E3A               	comf	(___flge@ff2+1)^0,f,c
 10821  00448A  B0D8               	btfsc	status,0,c
 10822  00448C  2A3A               	incf	(___flge@ff2+1)^0,f,c
 10823  00448E  1E3B               	comf	(___flge@ff2+2)^0,f,c
 10824  004490  B0D8               	btfsc	status,0,c
 10825  004492  2A3B               	incf	(___flge@ff2+2)^0,f,c
 10826  004494  0E80               	movlw	128
 10827  004496  563C               	subfwb	(___flge@ff2+3)^0,f,c
 10828  004498                     l963:
 10829  004498  0E00               	movlw	0
 10830  00449A  1A35               	xorwf	___flge@ff1^0,f,c
 10831  00449C  0E00               	movlw	0
 10832  00449E  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 10833  0044A0  0E00               	movlw	0
 10834  0044A2  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 10835  0044A4  0E80               	movlw	128
 10836  0044A6  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 10837  0044A8  0E00               	movlw	0
 10838  0044AA  1A39               	xorwf	___flge@ff2^0,f,c
 10839  0044AC  0E00               	movlw	0
 10840  0044AE  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 10841  0044B0  0E00               	movlw	0
 10842  0044B2  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 10843  0044B4  0E80               	movlw	128
 10844  0044B6  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 10845  0044B8  5039               	movf	___flge@ff2^0,w,c
 10846  0044BA  5C35               	subwf	___flge@ff1^0,w,c
 10847  0044BC  503A               	movf	(___flge@ff2+1)^0,w,c
 10848  0044BE  5836               	subwfb	(___flge@ff1+1)^0,w,c
 10849  0044C0  503B               	movf	(___flge@ff2+2)^0,w,c
 10850  0044C2  5837               	subwfb	(___flge@ff1+2)^0,w,c
 10851  0044C4  503C               	movf	(___flge@ff2+3)^0,w,c
 10852  0044C6  5838               	subwfb	(___flge@ff1+3)^0,w,c
 10853  0044C8  B0D8               	btfsc	status,0,c
 10854  0044CA  EF69  F022         	goto	u5211
 10855  0044CE  EF6B  F022         	goto	u5210
 10856  0044D2                     u5211:
 10857  0044D2  EF6E  F022         	goto	l4893
 10858  0044D6                     u5210:
 10859  0044D6  90D8               	bcf	status,0,c
 10860  0044D8  EF6F  F022         	goto	l968
 10861  0044DC                     l4893:
 10862  0044DC  80D8               	bsf	status,0,c
 10863  0044DE                     l968:
 10864  0044DE  0012               	return		;funcret
 10865  0044E0                     __end_of___flge:
 10866                           	callstack 0
 10867                           
 10868 ;; *************** function ___fleq *****************
 10869 ;; Defined at:
 10870 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 10871 ;; Parameters:    Size  Location     Type
 10872 ;;  ff1             4    0[COMRAM] unsigned char 
 10873 ;;  ff2             4    4[COMRAM] unsigned char 
 10874 ;; Auto vars:     Size  Location     Type
 10875 ;;		None
 10876 ;; Return value:  Size  Location     Type
 10877 ;;		None               void
 10878 ;; Registers used:
 10879 ;;		wreg, status,2, status,0
 10880 ;; Tracked objects:
 10881 ;;		On entry : 0/0
 10882 ;;		On exit  : 0/0
 10883 ;;		Unchanged: 0/0
 10884 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10885 ;;      Params:         8       0       0       0       0       0       0
 10886 ;;      Locals:         0       0       0       0       0       0       0
 10887 ;;      Temps:          4       0       0       0       0       0       0
 10888 ;;      Totals:        12       0       0       0       0       0       0
 10889 ;;Total ram usage:       12 bytes
 10890 ;; Hardware stack levels used:    1
 10891 ;; Hardware stack levels required when called:    1
 10892 ;; This function calls:
 10893 ;;		Nothing
 10894 ;; This function is called by:
 10895 ;;		_efgtoa
 10896 ;; This function uses a non-reentrant model
 10897 ;;
 10898                           
 10899                           	psect	text36
 10900  004B3C                     __ptext36:
 10901                           	callstack 0
 10902  004B3C                     ___fleq:
 10903                           	callstack 22
 10904  004B3C  0E00               	movlw	0
 10905  004B3E  1401               	andwf	___fleq@ff1^0,w,c
 10906  004B40  6E09               	movwf	??___fleq^0,c
 10907  004B42  0E00               	movlw	0
 10908  004B44  1402               	andwf	(___fleq@ff1+1)^0,w,c
 10909  004B46  6E0A               	movwf	(??___fleq+1)^0,c
 10910  004B48  0E80               	movlw	128
 10911  004B4A  1403               	andwf	(___fleq@ff1+2)^0,w,c
 10912  004B4C  6E0B               	movwf	(??___fleq+2)^0,c
 10913  004B4E  0E7F               	movlw	127
 10914  004B50  1404               	andwf	(___fleq@ff1+3)^0,w,c
 10915  004B52  6E0C               	movwf	(??___fleq+3)^0,c
 10916  004B54  5009               	movf	??___fleq^0,w,c
 10917  004B56  100A               	iorwf	(??___fleq+1)^0,w,c
 10918  004B58  100B               	iorwf	(??___fleq+2)^0,w,c
 10919  004B5A  100C               	iorwf	(??___fleq+3)^0,w,c
 10920  004B5C  A4D8               	btfss	status,2,c
 10921  004B5E  EFB3  F025         	goto	u5141
 10922  004B62  EFB5  F025         	goto	u5140
 10923  004B66                     u5141:
 10924  004B66  EFBD  F025         	goto	l4863
 10925  004B6A                     u5140:
 10926  004B6A  0E00               	movlw	0
 10927  004B6C  6E01               	movwf	___fleq@ff1^0,c
 10928  004B6E  0E00               	movlw	0
 10929  004B70  6E02               	movwf	(___fleq@ff1+1)^0,c
 10930  004B72  0E00               	movlw	0
 10931  004B74  6E03               	movwf	(___fleq@ff1+2)^0,c
 10932  004B76  0E00               	movlw	0
 10933  004B78  6E04               	movwf	(___fleq@ff1+3)^0,c
 10934  004B7A                     l4863:
 10935  004B7A  0E00               	movlw	0
 10936  004B7C  1405               	andwf	___fleq@ff2^0,w,c
 10937  004B7E  6E09               	movwf	??___fleq^0,c
 10938  004B80  0E00               	movlw	0
 10939  004B82  1406               	andwf	(___fleq@ff2+1)^0,w,c
 10940  004B84  6E0A               	movwf	(??___fleq+1)^0,c
 10941  004B86  0E80               	movlw	128
 10942  004B88  1407               	andwf	(___fleq@ff2+2)^0,w,c
 10943  004B8A  6E0B               	movwf	(??___fleq+2)^0,c
 10944  004B8C  0E7F               	movlw	127
 10945  004B8E  1408               	andwf	(___fleq@ff2+3)^0,w,c
 10946  004B90  6E0C               	movwf	(??___fleq+3)^0,c
 10947  004B92  5009               	movf	??___fleq^0,w,c
 10948  004B94  100A               	iorwf	(??___fleq+1)^0,w,c
 10949  004B96  100B               	iorwf	(??___fleq+2)^0,w,c
 10950  004B98  100C               	iorwf	(??___fleq+3)^0,w,c
 10951  004B9A  A4D8               	btfss	status,2,c
 10952  004B9C  EFD2  F025         	goto	u5151
 10953  004BA0  EFD4  F025         	goto	u5150
 10954  004BA4                     u5151:
 10955  004BA4  EFDC  F025         	goto	l4867
 10956  004BA8                     u5150:
 10957  004BA8  0E00               	movlw	0
 10958  004BAA  6E05               	movwf	___fleq@ff2^0,c
 10959  004BAC  0E00               	movlw	0
 10960  004BAE  6E06               	movwf	(___fleq@ff2+1)^0,c
 10961  004BB0  0E00               	movlw	0
 10962  004BB2  6E07               	movwf	(___fleq@ff2+2)^0,c
 10963  004BB4  0E00               	movlw	0
 10964  004BB6  6E08               	movwf	(___fleq@ff2+3)^0,c
 10965  004BB8                     l4867:
 10966  004BB8  5005               	movf	___fleq@ff2^0,w,c
 10967  004BBA  1801               	xorwf	___fleq@ff1^0,w,c
 10968  004BBC  E10F               	bnz	u5160
 10969  004BBE  5006               	movf	(___fleq@ff2+1)^0,w,c
 10970  004BC0  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 10971  004BC2  E10C               	bnz	u5160
 10972  004BC4  5007               	movf	(___fleq@ff2+2)^0,w,c
 10973  004BC6  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 10974  004BC8  E109               	bnz	u5160
 10975  004BCA  5008               	movf	(___fleq@ff2+3)^0,w,c
 10976  004BCC  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 10977  004BCE  B4D8               	btfsc	status,2,c
 10978  004BD0  EFEC  F025         	goto	u5161
 10979  004BD4  EFEE  F025         	goto	u5160
 10980  004BD8                     u5161:
 10981  004BD8  EFF1  F025         	goto	l4871
 10982  004BDC                     u5160:
 10983  004BDC  90D8               	bcf	status,0,c
 10984  004BDE  EFF2  F025         	goto	l957
 10985  004BE2                     l4871:
 10986  004BE2  80D8               	bsf	status,0,c
 10987  004BE4                     l957:
 10988  004BE4  0012               	return		;funcret
 10989  004BE6                     __end_of___fleq:
 10990                           	callstack 0
 10991                           
 10992 ;; *************** function ___fldiv *****************
 10993 ;; Defined at:
 10994 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 10995 ;; Parameters:    Size  Location     Type
 10996 ;;  b               4   52[COMRAM] unsigned char 
 10997 ;;  a               4   56[COMRAM] unsigned char 
 10998 ;; Auto vars:     Size  Location     Type
 10999 ;;  grs             4   71[COMRAM] unsigned long 
 11000 ;;  rem             4   64[COMRAM] unsigned long 
 11001 ;;  new_exp         2   69[COMRAM] short 
 11002 ;;  aexp            1   76[COMRAM] unsigned char 
 11003 ;;  bexp            1   75[COMRAM] unsigned char 
 11004 ;;  sign            1   68[COMRAM] unsigned char 
 11005 ;; Return value:  Size  Location     Type
 11006 ;;                  4   52[COMRAM] unsigned char 
 11007 ;; Registers used:
 11008 ;;		wreg, status,2, status,0
 11009 ;; Tracked objects:
 11010 ;;		On entry : 0/0
 11011 ;;		On exit  : 0/0
 11012 ;;		Unchanged: 0/0
 11013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11014 ;;      Params:         8       0       0       0       0       0       0
 11015 ;;      Locals:        13       0       0       0       0       0       0
 11016 ;;      Temps:          4       0       0       0       0       0       0
 11017 ;;      Totals:        25       0       0       0       0       0       0
 11018 ;;Total ram usage:       25 bytes
 11019 ;; Hardware stack levels used:    1
 11020 ;; Hardware stack levels required when called:    1
 11021 ;; This function calls:
 11022 ;;		Nothing
 11023 ;; This function is called by:
 11024 ;;		_scanAdcConversion
 11025 ;;		_efgtoa
 11026 ;; This function uses a non-reentrant model
 11027 ;;
 11028                           
 11029                           	psect	text37
 11030  002390                     __ptext37:
 11031                           	callstack 0
 11032  002390                     ___fldiv:
 11033                           	callstack 22
 11034  002390  5038               	movf	(___fldiv@b+3)^0,w,c
 11035  002392  0B80               	andlw	128
 11036  002394  6E45               	movwf	___fldiv@sign^0,c
 11037  002396  5038               	movf	(___fldiv@b+3)^0,w,c
 11038  002398  2438               	addwf	(___fldiv@b+3)^0,w,c
 11039  00239A  6E4C               	movwf	___fldiv@bexp^0,c
 11040  00239C  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11041  00239E  EFD3  F011         	goto	u4601
 11042  0023A2  EFD5  F011         	goto	u4600
 11043  0023A6                     u4601:
 11044  0023A6  EFD6  F011         	goto	l4511
 11045  0023AA                     u4600:
 11046  0023AA  804C               	bsf	___fldiv@bexp^0,0,c
 11047  0023AC                     l4511:
 11048  0023AC  504C               	movf	___fldiv@bexp^0,w,c
 11049  0023AE  B4D8               	btfsc	status,2,c
 11050  0023B0  EFDC  F011         	goto	u4611
 11051  0023B4  EFDE  F011         	goto	u4610
 11052  0023B8                     u4611:
 11053  0023B8  EFF3  F011         	goto	l4521
 11054  0023BC                     u4610:
 11055  0023BC  284C               	incf	___fldiv@bexp^0,w,c
 11056  0023BE  A4D8               	btfss	status,2,c
 11057  0023C0  EFE4  F011         	goto	u4621
 11058  0023C4  EFE6  F011         	goto	u4620
 11059  0023C8                     u4621:
 11060  0023C8  EFEE  F011         	goto	l4517
 11061  0023CC                     u4620:
 11062  0023CC  0E00               	movlw	0
 11063  0023CE  6E35               	movwf	___fldiv@b^0,c
 11064  0023D0  0E00               	movlw	0
 11065  0023D2  6E36               	movwf	(___fldiv@b+1)^0,c
 11066  0023D4  0E00               	movlw	0
 11067  0023D6  6E37               	movwf	(___fldiv@b+2)^0,c
 11068  0023D8  0E00               	movlw	0
 11069  0023DA  6E38               	movwf	(___fldiv@b+3)^0,c
 11070  0023DC                     l4517:
 11071  0023DC  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11072  0023DE  0E00               	movlw	0
 11073  0023E0  6E38               	movwf	(___fldiv@b+3)^0,c
 11074  0023E2  EFFB  F011         	goto	l4523
 11075  0023E6                     l4521:
 11076  0023E6  0E00               	movlw	0
 11077  0023E8  6E35               	movwf	___fldiv@b^0,c
 11078  0023EA  0E00               	movlw	0
 11079  0023EC  6E36               	movwf	(___fldiv@b+1)^0,c
 11080  0023EE  0E00               	movlw	0
 11081  0023F0  6E37               	movwf	(___fldiv@b+2)^0,c
 11082  0023F2  0E00               	movlw	0
 11083  0023F4  6E38               	movwf	(___fldiv@b+3)^0,c
 11084  0023F6                     l4523:
 11085  0023F6  503C               	movf	(___fldiv@a+3)^0,w,c
 11086  0023F8  0B80               	andlw	128
 11087  0023FA  1A45               	xorwf	___fldiv@sign^0,f,c
 11088  0023FC  503C               	movf	(___fldiv@a+3)^0,w,c
 11089  0023FE  243C               	addwf	(___fldiv@a+3)^0,w,c
 11090  002400  6E4D               	movwf	___fldiv@aexp^0,c
 11091  002402  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11092  002404  EF06  F012         	goto	u4631
 11093  002408  EF08  F012         	goto	u4630
 11094  00240C                     u4631:
 11095  00240C  EF09  F012         	goto	l4531
 11096  002410                     u4630:
 11097  002410  804D               	bsf	___fldiv@aexp^0,0,c
 11098  002412                     l4531:
 11099  002412  504D               	movf	___fldiv@aexp^0,w,c
 11100  002414  B4D8               	btfsc	status,2,c
 11101  002416  EF0F  F012         	goto	u4641
 11102  00241A  EF11  F012         	goto	u4640
 11103  00241E                     u4641:
 11104  00241E  EF26  F012         	goto	l4541
 11105  002422                     u4640:
 11106  002422  284D               	incf	___fldiv@aexp^0,w,c
 11107  002424  A4D8               	btfss	status,2,c
 11108  002426  EF17  F012         	goto	u4651
 11109  00242A  EF19  F012         	goto	u4650
 11110  00242E                     u4651:
 11111  00242E  EF21  F012         	goto	l4537
 11112  002432                     u4650:
 11113  002432  0E00               	movlw	0
 11114  002434  6E39               	movwf	___fldiv@a^0,c
 11115  002436  0E00               	movlw	0
 11116  002438  6E3A               	movwf	(___fldiv@a+1)^0,c
 11117  00243A  0E00               	movlw	0
 11118  00243C  6E3B               	movwf	(___fldiv@a+2)^0,c
 11119  00243E  0E00               	movlw	0
 11120  002440  6E3C               	movwf	(___fldiv@a+3)^0,c
 11121  002442                     l4537:
 11122  002442  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11123  002444  0E00               	movlw	0
 11124  002446  6E3C               	movwf	(___fldiv@a+3)^0,c
 11125  002448  EF2E  F012         	goto	l4543
 11126  00244C                     l4541:
 11127  00244C  0E00               	movlw	0
 11128  00244E  6E39               	movwf	___fldiv@a^0,c
 11129  002450  0E00               	movlw	0
 11130  002452  6E3A               	movwf	(___fldiv@a+1)^0,c
 11131  002454  0E00               	movlw	0
 11132  002456  6E3B               	movwf	(___fldiv@a+2)^0,c
 11133  002458  0E00               	movlw	0
 11134  00245A  6E3C               	movwf	(___fldiv@a+3)^0,c
 11135  00245C                     l4543:
 11136  00245C  5039               	movf	___fldiv@a^0,w,c
 11137  00245E  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11138  002460  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11139  002462  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11140  002464  A4D8               	btfss	status,2,c
 11141  002466  EF37  F012         	goto	u4661
 11142  00246A  EF39  F012         	goto	u4660
 11143  00246E                     u4661:
 11144  00246E  EF51  F012         	goto	l4555
 11145  002472                     u4660:
 11146  002472  0E00               	movlw	0
 11147  002474  6E35               	movwf	___fldiv@b^0,c
 11148  002476  0E00               	movlw	0
 11149  002478  6E36               	movwf	(___fldiv@b+1)^0,c
 11150  00247A  0E00               	movlw	0
 11151  00247C  6E37               	movwf	(___fldiv@b+2)^0,c
 11152  00247E  0E00               	movlw	0
 11153  002480  6E38               	movwf	(___fldiv@b+3)^0,c
 11154  002482  0E80               	movlw	128
 11155  002484  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11156  002486  0E7F               	movlw	127
 11157  002488  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11158  00248A                     l4549:
 11159  00248A  5045               	movf	___fldiv@sign^0,w,c
 11160  00248C  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11161  00248E  C035  F035         	movff	___fldiv@b,?___fldiv
 11162  002492  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11163  002496  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11164  00249A  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11165  00249E  EF94  F013         	goto	l1280
 11166  0024A2                     l4555:
 11167  0024A2  504C               	movf	___fldiv@bexp^0,w,c
 11168  0024A4  A4D8               	btfss	status,2,c
 11169  0024A6  EF57  F012         	goto	u4671
 11170  0024AA  EF59  F012         	goto	u4670
 11171  0024AE                     u4671:
 11172  0024AE  EF63  F012         	goto	l4563
 11173  0024B2                     u4670:
 11174  0024B2  0E00               	movlw	0
 11175  0024B4  6E35               	movwf	?___fldiv^0,c
 11176  0024B6  0E00               	movlw	0
 11177  0024B8  6E36               	movwf	(?___fldiv+1)^0,c
 11178  0024BA  0E00               	movlw	0
 11179  0024BC  6E37               	movwf	(?___fldiv+2)^0,c
 11180  0024BE  0E00               	movlw	0
 11181  0024C0  6E38               	movwf	(?___fldiv+3)^0,c
 11182  0024C2  EF94  F013         	goto	l1280
 11183  0024C6                     l4563:
 11184  0024C6  504D               	movf	___fldiv@aexp^0,w,c
 11185  0024C8  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11186  0024CC  6A3E               	clrf	(??___fldiv+1)^0,c
 11187  0024CE  5E3D               	subwf	??___fldiv^0,f,c
 11188  0024D0  0E00               	movlw	0
 11189  0024D2  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11190  0024D4  0E7F               	movlw	127
 11191  0024D6  243D               	addwf	??___fldiv^0,w,c
 11192  0024D8  6E46               	movwf	___fldiv@new_exp^0,c
 11193  0024DA  0E00               	movlw	0
 11194  0024DC  203E               	addwfc	(??___fldiv+1)^0,w,c
 11195  0024DE  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11196  0024E0  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11197  0024E4  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11198  0024E8  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11199  0024EC  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11200  0024F0  0E00               	movlw	0
 11201  0024F2  6E35               	movwf	___fldiv@b^0,c
 11202  0024F4  0E00               	movlw	0
 11203  0024F6  6E36               	movwf	(___fldiv@b+1)^0,c
 11204  0024F8  0E00               	movlw	0
 11205  0024FA  6E37               	movwf	(___fldiv@b+2)^0,c
 11206  0024FC  0E00               	movlw	0
 11207  0024FE  6E38               	movwf	(___fldiv@b+3)^0,c
 11208  002500  0E00               	movlw	0
 11209  002502  6E48               	movwf	___fldiv@grs^0,c
 11210  002504  0E00               	movlw	0
 11211  002506  6E49               	movwf	(___fldiv@grs+1)^0,c
 11212  002508  0E00               	movlw	0
 11213  00250A  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11214  00250C  0E00               	movlw	0
 11215  00250E  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11216  002510  0E00               	movlw	0
 11217  002512  6E4D               	movwf	___fldiv@aexp^0,c
 11218  002514  EFC4  F012         	goto	l1282
 11219  002518                     l4573:
 11220  002518  504D               	movf	___fldiv@aexp^0,w,c
 11221  00251A  B4D8               	btfsc	status,2,c
 11222  00251C  EF92  F012         	goto	u4681
 11223  002520  EF94  F012         	goto	u4680
 11224  002524                     u4681:
 11225  002524  EFAB  F012         	goto	l4581
 11226  002528                     u4680:
 11227  002528  90D8               	bcf	status,0,c
 11228  00252A  3641               	rlcf	___fldiv@rem^0,f,c
 11229  00252C  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11230  00252E  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11231  002530  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11232  002532  90D8               	bcf	status,0,c
 11233  002534  3635               	rlcf	___fldiv@b^0,f,c
 11234  002536  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11235  002538  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11236  00253A  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11237  00253C  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11238  00253E  EFA3  F012         	goto	u4691
 11239  002542  EFA5  F012         	goto	u4690
 11240  002546                     u4691:
 11241  002546  EFA6  F012         	goto	l1285
 11242  00254A                     u4690:
 11243  00254A  8035               	bsf	___fldiv@b^0,0,c
 11244  00254C                     l1285:
 11245  00254C  90D8               	bcf	status,0,c
 11246  00254E  3648               	rlcf	___fldiv@grs^0,f,c
 11247  002550  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11248  002552  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11249  002554  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11250  002556                     l4581:
 11251  002556  5039               	movf	___fldiv@a^0,w,c
 11252  002558  5C41               	subwf	___fldiv@rem^0,w,c
 11253  00255A  503A               	movf	(___fldiv@a+1)^0,w,c
 11254  00255C  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11255  00255E  503B               	movf	(___fldiv@a+2)^0,w,c
 11256  002560  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11257  002562  503C               	movf	(___fldiv@a+3)^0,w,c
 11258  002564  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11259  002566  A0D8               	btfss	status,0,c
 11260  002568  EFB8  F012         	goto	u4701
 11261  00256C  EFBA  F012         	goto	u4700
 11262  002570                     u4701:
 11263  002570  EFC3  F012         	goto	l4587
 11264  002574                     u4700:
 11265  002574  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11266  002576  5039               	movf	___fldiv@a^0,w,c
 11267  002578  5E41               	subwf	___fldiv@rem^0,f,c
 11268  00257A  503A               	movf	(___fldiv@a+1)^0,w,c
 11269  00257C  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11270  00257E  503B               	movf	(___fldiv@a+2)^0,w,c
 11271  002580  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11272  002582  503C               	movf	(___fldiv@a+3)^0,w,c
 11273  002584  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11274  002586                     l4587:
 11275  002586  2A4D               	incf	___fldiv@aexp^0,f,c
 11276  002588                     l1282:
 11277  002588  0E19               	movlw	25
 11278  00258A  644D               	cpfsgt	___fldiv@aexp^0,c
 11279  00258C  EFCA  F012         	goto	u4711
 11280  002590  EFCC  F012         	goto	u4710
 11281  002594                     u4711:
 11282  002594  EF8C  F012         	goto	l4573
 11283  002598                     u4710:
 11284  002598  5041               	movf	___fldiv@rem^0,w,c
 11285  00259A  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11286  00259C  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11287  00259E  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11288  0025A0  B4D8               	btfsc	status,2,c
 11289  0025A2  EFD5  F012         	goto	u4721
 11290  0025A6  EFD7  F012         	goto	u4720
 11291  0025AA                     u4721:
 11292  0025AA  EFEF  F012         	goto	l4599
 11293  0025AE                     u4720:
 11294  0025AE  8048               	bsf	___fldiv@grs^0,0,c
 11295  0025B0  EFEF  F012         	goto	l4599
 11296  0025B4                     l4593:
 11297  0025B4  90D8               	bcf	status,0,c
 11298  0025B6  3635               	rlcf	___fldiv@b^0,f,c
 11299  0025B8  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11300  0025BA  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11301  0025BC  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11302  0025BE  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11303  0025C0  EFE4  F012         	goto	u4731
 11304  0025C4  EFE6  F012         	goto	u4730
 11305  0025C8                     u4731:
 11306  0025C8  EFE7  F012         	goto	l1291
 11307  0025CC                     u4730:
 11308  0025CC  8035               	bsf	___fldiv@b^0,0,c
 11309  0025CE                     l1291:
 11310  0025CE  90D8               	bcf	status,0,c
 11311  0025D0  3648               	rlcf	___fldiv@grs^0,f,c
 11312  0025D2  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11313  0025D4  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11314  0025D6  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11315  0025D8  0646               	decf	___fldiv@new_exp^0,f,c
 11316  0025DA  A0D8               	btfss	status,0,c
 11317  0025DC  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11318  0025DE                     l4599:
 11319  0025DE  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11320  0025E0  EFF4  F012         	goto	u4741
 11321  0025E4  EFF6  F012         	goto	u4740
 11322  0025E8                     u4741:
 11323  0025E8  EFDA  F012         	goto	l4593
 11324  0025EC                     u4740:
 11325  0025EC  0E00               	movlw	0
 11326  0025EE  6E4D               	movwf	___fldiv@aexp^0,c
 11327  0025F0  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11328  0025F2  EFFD  F012         	goto	u4751
 11329  0025F6  EFFF  F012         	goto	u4750
 11330  0025FA                     u4751:
 11331  0025FA  EF23  F013         	goto	l1293
 11332  0025FE                     u4750:
 11333  0025FE  0EFF               	movlw	255
 11334  002600  1448               	andwf	___fldiv@grs^0,w,c
 11335  002602  6E3D               	movwf	??___fldiv^0,c
 11336  002604  0EFF               	movlw	255
 11337  002606  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11338  002608  6E3E               	movwf	(??___fldiv+1)^0,c
 11339  00260A  0EFF               	movlw	255
 11340  00260C  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11341  00260E  6E3F               	movwf	(??___fldiv+2)^0,c
 11342  002610  0E7F               	movlw	127
 11343  002612  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11344  002614  6E40               	movwf	(??___fldiv+3)^0,c
 11345  002616  503D               	movf	??___fldiv^0,w,c
 11346  002618  103E               	iorwf	(??___fldiv+1)^0,w,c
 11347  00261A  103F               	iorwf	(??___fldiv+2)^0,w,c
 11348  00261C  1040               	iorwf	(??___fldiv+3)^0,w,c
 11349  00261E  B4D8               	btfsc	status,2,c
 11350  002620  EF14  F013         	goto	u4761
 11351  002624  EF16  F013         	goto	u4760
 11352  002628                     u4761:
 11353  002628  EF1A  F013         	goto	l1294
 11354  00262C                     u4760:
 11355  00262C                     l4607:
 11356  00262C  0E01               	movlw	1
 11357  00262E  6E4D               	movwf	___fldiv@aexp^0,c
 11358  002630  EF23  F013         	goto	l1293
 11359  002634                     l1294:
 11360  002634  A035               	btfss	___fldiv@b^0,0,c
 11361  002636  EF1F  F013         	goto	u4771
 11362  00263A  EF21  F013         	goto	u4770
 11363  00263E                     u4771:
 11364  00263E  EF23  F013         	goto	l1293
 11365  002642                     u4770:
 11366  002642  EF16  F013         	goto	l4607
 11367  002646                     l1293:
 11368  002646  504D               	movf	___fldiv@aexp^0,w,c
 11369  002648  B4D8               	btfsc	status,2,c
 11370  00264A  EF29  F013         	goto	u4781
 11371  00264E  EF2B  F013         	goto	u4780
 11372  002652                     u4781:
 11373  002652  EF4F  F013         	goto	l4619
 11374  002656                     u4780:
 11375  002656  0E01               	movlw	1
 11376  002658  2635               	addwf	___fldiv@b^0,f,c
 11377  00265A  0E00               	movlw	0
 11378  00265C  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11379  00265E  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11380  002660  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11381  002662  A038               	btfss	(___fldiv@b+3)^0,0,c
 11382  002664  EF36  F013         	goto	u4791
 11383  002668  EF38  F013         	goto	u4790
 11384  00266C                     u4791:
 11385  00266C  EF4F  F013         	goto	l4619
 11386  002670                     u4790:
 11387  002670  C035  F03D         	movff	___fldiv@b,??___fldiv
 11388  002674  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11389  002678  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11390  00267C  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11391  002680  3440               	rlcf	(??___fldiv+3)^0,w,c
 11392  002682  3240               	rrcf	(??___fldiv+3)^0,f,c
 11393  002684  323F               	rrcf	(??___fldiv+2)^0,f,c
 11394  002686  323E               	rrcf	(??___fldiv+1)^0,f,c
 11395  002688  323D               	rrcf	??___fldiv^0,f,c
 11396  00268A  C03D  F035         	movff	??___fldiv,___fldiv@b
 11397  00268E  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11398  002692  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11399  002696  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11400  00269A  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11401  00269C  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11402  00269E                     l4619:
 11403  00269E  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11404  0026A0  EF5A  F013         	goto	u4801
 11405  0026A4  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11406  0026A6  E108               	bnz	u4800
 11407  0026A8  2846               	incf	___fldiv@new_exp^0,w,c
 11408  0026AA  A0D8               	btfss	status,0,c
 11409  0026AC  EF5A  F013         	goto	u4801
 11410  0026B0  EF5C  F013         	goto	u4800
 11411  0026B4                     u4801:
 11412  0026B4  EF67  F013         	goto	l4623
 11413  0026B8                     u4800:
 11414  0026B8  0E00               	movlw	0
 11415  0026BA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11416  0026BC  6846               	setf	___fldiv@new_exp^0,c
 11417  0026BE  0E00               	movlw	0
 11418  0026C0  6E35               	movwf	___fldiv@b^0,c
 11419  0026C2  0E00               	movlw	0
 11420  0026C4  6E36               	movwf	(___fldiv@b+1)^0,c
 11421  0026C6  0E00               	movlw	0
 11422  0026C8  6E37               	movwf	(___fldiv@b+2)^0,c
 11423  0026CA  0E00               	movlw	0
 11424  0026CC  6E38               	movwf	(___fldiv@b+3)^0,c
 11425  0026CE                     l4623:
 11426  0026CE  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11427  0026D0  EF74  F013         	goto	u4810
 11428  0026D4  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11429  0026D6  E106               	bnz	u4811
 11430  0026D8  0446               	decf	___fldiv@new_exp^0,w,c
 11431  0026DA  B0D8               	btfsc	status,0,c
 11432  0026DC  EF72  F013         	goto	u4811
 11433  0026E0  EF74  F013         	goto	u4810
 11434  0026E4                     u4811:
 11435  0026E4  EF82  F013         	goto	l4627
 11436  0026E8                     u4810:
 11437  0026E8  0E00               	movlw	0
 11438  0026EA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11439  0026EC  0E00               	movlw	0
 11440  0026EE  6E46               	movwf	___fldiv@new_exp^0,c
 11441  0026F0  0E00               	movlw	0
 11442  0026F2  6E35               	movwf	___fldiv@b^0,c
 11443  0026F4  0E00               	movlw	0
 11444  0026F6  6E36               	movwf	(___fldiv@b+1)^0,c
 11445  0026F8  0E00               	movlw	0
 11446  0026FA  6E37               	movwf	(___fldiv@b+2)^0,c
 11447  0026FC  0E00               	movlw	0
 11448  0026FE  6E38               	movwf	(___fldiv@b+3)^0,c
 11449  002700  0E00               	movlw	0
 11450  002702  6E45               	movwf	___fldiv@sign^0,c
 11451  002704                     l4627:
 11452  002704  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11453  002708  A04C               	btfss	___fldiv@bexp^0,0,c
 11454  00270A  EF89  F013         	goto	u4821
 11455  00270E  EF8B  F013         	goto	u4820
 11456  002712                     u4821:
 11457  002712  EF8E  F013         	goto	l4633
 11458  002716                     u4820:
 11459  002716  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11460  002718  EF8F  F013         	goto	l4635
 11461  00271C                     l4633:
 11462  00271C  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11463  00271E                     l4635:
 11464  00271E  90D8               	bcf	status,0,c
 11465  002720  304C               	rrcf	___fldiv@bexp^0,w,c
 11466  002722  6E38               	movwf	(___fldiv@b+3)^0,c
 11467  002724  EF45  F012         	goto	l4549
 11468  002728                     l1280:
 11469  002728  0012               	return		;funcret
 11470  00272A                     __end_of___fldiv:
 11471                           	callstack 0
 11472                           
 11473 ;; *************** function ___awmod *****************
 11474 ;; Defined at:
 11475 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11476 ;; Parameters:    Size  Location     Type
 11477 ;;  dividend        2    0[COMRAM] int 
 11478 ;;  divisor         2    2[COMRAM] int 
 11479 ;; Auto vars:     Size  Location     Type
 11480 ;;  sign            1    5[COMRAM] unsigned char 
 11481 ;;  counter         1    4[COMRAM] unsigned char 
 11482 ;; Return value:  Size  Location     Type
 11483 ;;                  2    0[COMRAM] int 
 11484 ;; Registers used:
 11485 ;;		wreg, status,2, status,0
 11486 ;; Tracked objects:
 11487 ;;		On entry : 0/0
 11488 ;;		On exit  : 0/0
 11489 ;;		Unchanged: 0/0
 11490 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11491 ;;      Params:         4       0       0       0       0       0       0
 11492 ;;      Locals:         2       0       0       0       0       0       0
 11493 ;;      Temps:          0       0       0       0       0       0       0
 11494 ;;      Totals:         6       0       0       0       0       0       0
 11495 ;;Total ram usage:        6 bytes
 11496 ;; Hardware stack levels used:    1
 11497 ;; Hardware stack levels required when called:    1
 11498 ;; This function calls:
 11499 ;;		Nothing
 11500 ;; This function is called by:
 11501 ;;		_efgtoa
 11502 ;; This function uses a non-reentrant model
 11503 ;;
 11504                           
 11505                           	psect	text38
 11506  004A8C                     __ptext38:
 11507                           	callstack 0
 11508  004A8C                     ___awmod:
 11509                           	callstack 22
 11510  004A8C  0E00               	movlw	0
 11511  004A8E  6E06               	movwf	___awmod@sign^0,c
 11512  004A90  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11513  004A92  EF4F  F025         	goto	u5080
 11514  004A96  EF4D  F025         	goto	u5081
 11515  004A9A                     u5081:
 11516  004A9A  EF55  F025         	goto	l4831
 11517  004A9E                     u5080:
 11518  004A9E  6C01               	negf	___awmod@dividend^0,c
 11519  004AA0  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11520  004AA2  B0D8               	btfsc	status,0,c
 11521  004AA4  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11522  004AA6  0E01               	movlw	1
 11523  004AA8  6E06               	movwf	___awmod@sign^0,c
 11524  004AAA                     l4831:
 11525  004AAA  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11526  004AAC  EF5C  F025         	goto	u5090
 11527  004AB0  EF5A  F025         	goto	u5091
 11528  004AB4                     u5091:
 11529  004AB4  EF60  F025         	goto	l4835
 11530  004AB8                     u5090:
 11531  004AB8  6C03               	negf	___awmod@divisor^0,c
 11532  004ABA  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11533  004ABC  B0D8               	btfsc	status,0,c
 11534  004ABE  2A04               	incf	(___awmod@divisor+1)^0,f,c
 11535  004AC0                     l4835:
 11536  004AC0  5003               	movf	___awmod@divisor^0,w,c
 11537  004AC2  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 11538  004AC4  B4D8               	btfsc	status,2,c
 11539  004AC6  EF67  F025         	goto	u5101
 11540  004ACA  EF69  F025         	goto	u5100
 11541  004ACE                     u5101:
 11542  004ACE  EF8D  F025         	goto	l4851
 11543  004AD2                     u5100:
 11544  004AD2  0E01               	movlw	1
 11545  004AD4  6E05               	movwf	___awmod@counter^0,c
 11546  004AD6  EF71  F025         	goto	l4841
 11547  004ADA                     l4839:
 11548  004ADA  90D8               	bcf	status,0,c
 11549  004ADC  3603               	rlcf	___awmod@divisor^0,f,c
 11550  004ADE  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 11551  004AE0  2A05               	incf	___awmod@counter^0,f,c
 11552  004AE2                     l4841:
 11553  004AE2  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 11554  004AE4  EF76  F025         	goto	u5111
 11555  004AE8  EF78  F025         	goto	u5110
 11556  004AEC                     u5111:
 11557  004AEC  EF6D  F025         	goto	l4839
 11558  004AF0                     u5110:
 11559  004AF0                     l4843:
 11560  004AF0  5003               	movf	___awmod@divisor^0,w,c
 11561  004AF2  5C01               	subwf	___awmod@dividend^0,w,c
 11562  004AF4  5004               	movf	(___awmod@divisor+1)^0,w,c
 11563  004AF6  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 11564  004AF8  A0D8               	btfss	status,0,c
 11565  004AFA  EF81  F025         	goto	u5121
 11566  004AFE  EF83  F025         	goto	u5120
 11567  004B02                     u5121:
 11568  004B02  EF87  F025         	goto	l4847
 11569  004B06                     u5120:
 11570  004B06  5003               	movf	___awmod@divisor^0,w,c
 11571  004B08  5E01               	subwf	___awmod@dividend^0,f,c
 11572  004B0A  5004               	movf	(___awmod@divisor+1)^0,w,c
 11573  004B0C  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 11574  004B0E                     l4847:
 11575  004B0E  90D8               	bcf	status,0,c
 11576  004B10  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 11577  004B12  3203               	rrcf	___awmod@divisor^0,f,c
 11578  004B14  2E05               	decfsz	___awmod@counter^0,f,c
 11579  004B16  EF78  F025         	goto	l4843
 11580  004B1A                     l4851:
 11581  004B1A  5006               	movf	___awmod@sign^0,w,c
 11582  004B1C  B4D8               	btfsc	status,2,c
 11583  004B1E  EF93  F025         	goto	u5131
 11584  004B22  EF95  F025         	goto	u5130
 11585  004B26                     u5131:
 11586  004B26  EF99  F025         	goto	l4855
 11587  004B2A                     u5130:
 11588  004B2A  6C01               	negf	___awmod@dividend^0,c
 11589  004B2C  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11590  004B2E  B0D8               	btfsc	status,0,c
 11591  004B30  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11592  004B32                     l4855:
 11593  004B32  C001  F001         	movff	___awmod@dividend,?___awmod
 11594  004B36  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 11595  004B3A  0012               	return		;funcret
 11596  004B3C                     __end_of___awmod:
 11597                           	callstack 0
 11598                           
 11599 ;; *************** function ___awdiv *****************
 11600 ;; Defined at:
 11601 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 11602 ;; Parameters:    Size  Location     Type
 11603 ;;  dividend        2    0[COMRAM] int 
 11604 ;;  divisor         2    2[COMRAM] int 
 11605 ;; Auto vars:     Size  Location     Type
 11606 ;;  quotient        2    6[COMRAM] int 
 11607 ;;  sign            1    5[COMRAM] unsigned char 
 11608 ;;  counter         1    4[COMRAM] unsigned char 
 11609 ;; Return value:  Size  Location     Type
 11610 ;;                  2    0[COMRAM] int 
 11611 ;; Registers used:
 11612 ;;		wreg, status,2, status,0
 11613 ;; Tracked objects:
 11614 ;;		On entry : 0/0
 11615 ;;		On exit  : 0/0
 11616 ;;		Unchanged: 0/0
 11617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11618 ;;      Params:         4       0       0       0       0       0       0
 11619 ;;      Locals:         4       0       0       0       0       0       0
 11620 ;;      Temps:          0       0       0       0       0       0       0
 11621 ;;      Totals:         8       0       0       0       0       0       0
 11622 ;;Total ram usage:        8 bytes
 11623 ;; Hardware stack levels used:    1
 11624 ;; Hardware stack levels required when called:    1
 11625 ;; This function calls:
 11626 ;;		Nothing
 11627 ;; This function is called by:
 11628 ;;		_efgtoa
 11629 ;; This function uses a non-reentrant model
 11630 ;;
 11631                           
 11632                           	psect	text39
 11633  004916                     __ptext39:
 11634                           	callstack 0
 11635  004916                     ___awdiv:
 11636                           	callstack 22
 11637  004916  0E00               	movlw	0
 11638  004918  6E06               	movwf	___awdiv@sign^0,c
 11639  00491A  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 11640  00491C  EF94  F024         	goto	u5020
 11641  004920  EF92  F024         	goto	u5021
 11642  004924                     u5021:
 11643  004924  EF9A  F024         	goto	l4787
 11644  004928                     u5020:
 11645  004928  6C03               	negf	___awdiv@divisor^0,c
 11646  00492A  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 11647  00492C  B0D8               	btfsc	status,0,c
 11648  00492E  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 11649  004930  0E01               	movlw	1
 11650  004932  6E06               	movwf	___awdiv@sign^0,c
 11651  004934                     l4787:
 11652  004934  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 11653  004936  EFA1  F024         	goto	u5030
 11654  00493A  EF9F  F024         	goto	u5031
 11655  00493E                     u5031:
 11656  00493E  EFA7  F024         	goto	l4793
 11657  004942                     u5030:
 11658  004942  6C01               	negf	___awdiv@dividend^0,c
 11659  004944  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 11660  004946  B0D8               	btfsc	status,0,c
 11661  004948  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 11662  00494A  0E01               	movlw	1
 11663  00494C  1A06               	xorwf	___awdiv@sign^0,f,c
 11664  00494E                     l4793:
 11665  00494E  0E00               	movlw	0
 11666  004950  6E08               	movwf	(___awdiv@quotient+1)^0,c
 11667  004952  0E00               	movlw	0
 11668  004954  6E07               	movwf	___awdiv@quotient^0,c
 11669  004956  5003               	movf	___awdiv@divisor^0,w,c
 11670  004958  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 11671  00495A  B4D8               	btfsc	status,2,c
 11672  00495C  EFB2  F024         	goto	u5041
 11673  004960  EFB4  F024         	goto	u5040
 11674  004964                     u5041:
 11675  004964  EFDC  F024         	goto	l4815
 11676  004968                     u5040:
 11677  004968  0E01               	movlw	1
 11678  00496A  6E05               	movwf	___awdiv@counter^0,c
 11679  00496C  EFBC  F024         	goto	l4801
 11680  004970                     l4799:
 11681  004970  90D8               	bcf	status,0,c
 11682  004972  3603               	rlcf	___awdiv@divisor^0,f,c
 11683  004974  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 11684  004976  2A05               	incf	___awdiv@counter^0,f,c
 11685  004978                     l4801:
 11686  004978  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 11687  00497A  EFC1  F024         	goto	u5051
 11688  00497E  EFC3  F024         	goto	u5050
 11689  004982                     u5051:
 11690  004982  EFB8  F024         	goto	l4799
 11691  004986                     u5050:
 11692  004986                     l4803:
 11693  004986  90D8               	bcf	status,0,c
 11694  004988  3607               	rlcf	___awdiv@quotient^0,f,c
 11695  00498A  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 11696  00498C  5003               	movf	___awdiv@divisor^0,w,c
 11697  00498E  5C01               	subwf	___awdiv@dividend^0,w,c
 11698  004990  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11699  004992  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 11700  004994  A0D8               	btfss	status,0,c
 11701  004996  EFCF  F024         	goto	u5061
 11702  00499A  EFD1  F024         	goto	u5060
 11703  00499E                     u5061:
 11704  00499E  EFD6  F024         	goto	l4811
 11705  0049A2                     u5060:
 11706  0049A2  5003               	movf	___awdiv@divisor^0,w,c
 11707  0049A4  5E01               	subwf	___awdiv@dividend^0,f,c
 11708  0049A6  5004               	movf	(___awdiv@divisor+1)^0,w,c
 11709  0049A8  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 11710  0049AA  8007               	bsf	___awdiv@quotient^0,0,c
 11711  0049AC                     l4811:
 11712  0049AC  90D8               	bcf	status,0,c
 11713  0049AE  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 11714  0049B0  3203               	rrcf	___awdiv@divisor^0,f,c
 11715  0049B2  2E05               	decfsz	___awdiv@counter^0,f,c
 11716  0049B4  EFC3  F024         	goto	l4803
 11717  0049B8                     l4815:
 11718  0049B8  5006               	movf	___awdiv@sign^0,w,c
 11719  0049BA  B4D8               	btfsc	status,2,c
 11720  0049BC  EFE2  F024         	goto	u5071
 11721  0049C0  EFE4  F024         	goto	u5070
 11722  0049C4                     u5071:
 11723  0049C4  EFE8  F024         	goto	l4819
 11724  0049C8                     u5070:
 11725  0049C8  6C07               	negf	___awdiv@quotient^0,c
 11726  0049CA  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 11727  0049CC  B0D8               	btfsc	status,0,c
 11728  0049CE  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 11729  0049D0                     l4819:
 11730  0049D0  C007  F001         	movff	___awdiv@quotient,?___awdiv
 11731  0049D4  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 11732  0049D8  0012               	return		;funcret
 11733  0049DA                     __end_of___awdiv:
 11734                           	callstack 0
 11735                           
 11736 ;; *************** function _dtoa *****************
 11737 ;; Defined at:
 11738 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 11739 ;; Parameters:    Size  Location     Type
 11740 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 11741 ;;		 -> sprintf@f(6), 
 11742 ;;  d               8   29[COMRAM] long long 
 11743 ;; Auto vars:     Size  Location     Type
 11744 ;;  n               8   53[COMRAM] long long 
 11745 ;;  i               2   61[COMRAM] int 
 11746 ;;  s               2   51[COMRAM] int 
 11747 ;;  w               2   49[COMRAM] int 
 11748 ;;  p               2   47[COMRAM] int 
 11749 ;; Return value:  Size  Location     Type
 11750 ;;                  2   27[COMRAM] int 
 11751 ;; Registers used:
 11752 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 11753 ;; Tracked objects:
 11754 ;;		On entry : 0/0
 11755 ;;		On exit  : 0/0
 11756 ;;		Unchanged: 0/0
 11757 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11758 ;;      Params:        10       0       0       0       0       0       0
 11759 ;;      Locals:        18       0       0       0       0       0       0
 11760 ;;      Temps:          8       0       0       0       0       0       0
 11761 ;;      Totals:        36       0       0       0       0       0       0
 11762 ;;Total ram usage:       36 bytes
 11763 ;; Hardware stack levels used:    1
 11764 ;; Hardware stack levels required when called:    5
 11765 ;; This function calls:
 11766 ;;		___aodiv
 11767 ;;		___aomod
 11768 ;;		_abs
 11769 ;;		_pad
 11770 ;; This function is called by:
 11771 ;;		_vfpfcnvrt
 11772 ;; This function uses a non-reentrant model
 11773 ;;
 11774                           
 11775                           	psect	text40
 11776  002A10                     __ptext40:
 11777                           	callstack 0
 11778  002A10                     _dtoa:
 11779                           	callstack 19
 11780  002A10                     
 11781                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 11782  002A10  C01E  F036         	movff	dtoa@d,dtoa@n
 11783  002A14  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 11784  002A18  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 11785  002A1C  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 11786  002A20  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 11787  002A24  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 11788  002A28  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 11789  002A2C  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 11790  002A30                     
 11791                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 11792  002A30  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 11793  002A32  EF1D  F015         	goto	u5611
 11794  002A36  EF20  F015         	goto	u5610
 11795  002A3A                     u5611:
 11796  002A3A  0E01               	movlw	1
 11797  002A3C  EF21  F015         	goto	u5620
 11798  002A40                     u5610:
 11799  002A40  0E00               	movlw	0
 11800  002A42                     u5620:
 11801  002A42  6E34               	movwf	dtoa@s^0,c
 11802  002A44  6A35               	clrf	(dtoa@s+1)^0,c
 11803                           
 11804                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 11805  002A46  5034               	movf	dtoa@s^0,w,c
 11806  002A48  1035               	iorwf	(dtoa@s+1)^0,w,c
 11807  002A4A  B4D8               	btfsc	status,2,c
 11808  002A4C  EF2A  F015         	goto	u5631
 11809  002A50  EF2C  F015         	goto	u5630
 11810  002A54                     u5631:
 11811  002A54  EF3C  F015         	goto	l5061
 11812  002A58                     u5630:
 11813  002A58                     
 11814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 11815  002A58  1E3D               	comf	(dtoa@n+7)^0,f,c
 11816  002A5A  1E3C               	comf	(dtoa@n+6)^0,f,c
 11817  002A5C  1E3B               	comf	(dtoa@n+5)^0,f,c
 11818  002A5E  1E3A               	comf	(dtoa@n+4)^0,f,c
 11819  002A60  1E39               	comf	(dtoa@n+3)^0,f,c
 11820  002A62  1E38               	comf	(dtoa@n+2)^0,f,c
 11821  002A64  1E37               	comf	(dtoa@n+1)^0,f,c
 11822  002A66  6C36               	negf	dtoa@n^0,c
 11823  002A68  0E00               	movlw	0
 11824  002A6A  2237               	addwfc	(dtoa@n+1)^0,f,c
 11825  002A6C  2238               	addwfc	(dtoa@n+2)^0,f,c
 11826  002A6E  2239               	addwfc	(dtoa@n+3)^0,f,c
 11827  002A70  223A               	addwfc	(dtoa@n+4)^0,f,c
 11828  002A72  223B               	addwfc	(dtoa@n+5)^0,f,c
 11829  002A74  223C               	addwfc	(dtoa@n+6)^0,f,c
 11830  002A76  223D               	addwfc	(dtoa@n+7)^0,f,c
 11831  002A78                     l5061:
 11832                           
 11833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 11834  002A78  0100               	movlb	0	; () banked
 11835  002A7A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11836  002A7C  EF42  F015         	goto	u5641
 11837  002A80  EF44  F015         	goto	u5640
 11838  002A84                     u5641:
 11839  002A84  EF45  F015         	goto	l5065
 11840  002A88                     u5640:
 11841  002A88                     
 11842                           ; BSR set to: 0
 11843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 11844  002A88  93F8               	bcf	_flags& (0+255),1,b
 11845  002A8A                     l5065:
 11846                           
 11847                           ; BSR set to: 0
 11848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 11849  002A8A  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 11850  002A8C  EF52  F015         	goto	u5650
 11851  002A90  51F7               	movf	(_prec+1)& (0+255),w,b
 11852  002A92  E106               	bnz	u5651
 11853  002A94  05F6               	decf	_prec& (0+255),w,b
 11854  002A96  B0D8               	btfsc	status,0,c
 11855  002A98  EF50  F015         	goto	u5651
 11856  002A9C  EF52  F015         	goto	u5650
 11857  002AA0                     u5651:
 11858  002AA0  EF58  F015         	goto	l1435
 11859  002AA4                     u5650:
 11860  002AA4                     
 11861                           ; BSR set to: 0
 11862  002AA4  0E00               	movlw	0
 11863  002AA6  6E31               	movwf	(dtoa@p+1)^0,c
 11864  002AA8  0E01               	movlw	1
 11865  002AAA  6E30               	movwf	dtoa@p^0,c
 11866  002AAC  EF5C  F015         	goto	l1437
 11867  002AB0                     l1435:
 11868                           
 11869                           ; BSR set to: 0
 11870  002AB0  C0F6  F030         	movff	_prec,dtoa@p
 11871  002AB4  C0F7  F031         	movff	_prec+1,dtoa@p+1
 11872  002AB8                     l1437:
 11873                           
 11874                           ; BSR set to: 0
 11875                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 11876  002AB8  C1B1  F032         	movff	_width,dtoa@w
 11877  002ABC  C1B2  F033         	movff	_width+1,dtoa@w+1
 11878  002AC0                     
 11879                           ; BSR set to: 0
 11880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 11881  002AC0  5034               	movf	dtoa@s^0,w,c
 11882  002AC2  1035               	iorwf	(dtoa@s+1)^0,w,c
 11883  002AC4  A4D8               	btfss	status,2,c
 11884  002AC6  EF67  F015         	goto	u5661
 11885  002ACA  EF69  F015         	goto	u5660
 11886  002ACE                     u5661:
 11887  002ACE  EF70  F015         	goto	l5073
 11888  002AD2                     u5660:
 11889  002AD2                     
 11890                           ; BSR set to: 0
 11891  002AD2  A5F8               	btfss	_flags& (0+255),2,b
 11892  002AD4  EF6E  F015         	goto	u5671
 11893  002AD8  EF70  F015         	goto	u5670
 11894  002ADC                     u5671:
 11895  002ADC  EF73  F015         	goto	l5075
 11896  002AE0                     u5670:
 11897  002AE0                     l5073:
 11898                           
 11899                           ; BSR set to: 0
 11900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 11901  002AE0  0632               	decf	dtoa@w^0,f,c
 11902  002AE2  A0D8               	btfss	status,0,c
 11903  002AE4  0633               	decf	(dtoa@w+1)^0,f,c
 11904  002AE6                     l5075:
 11905                           
 11906                           ; BSR set to: 0
 11907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 11908  002AE6  0E00               	movlw	0
 11909  002AE8  6E3F               	movwf	(dtoa@i+1)^0,c
 11910  002AEA  0E4F               	movlw	79
 11911  002AEC  6E3E               	movwf	dtoa@i^0,c
 11912  002AEE                     
 11913                           ; BSR set to: 0
 11914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 11915  002AEE  0E00               	movlw	0
 11916  002AF0  0102               	movlb	2	; () banked
 11917  002AF2  6FAF               	movwf	(_dbuf+79)& (0+255),b
 11918                           
 11919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 11920  002AF4  EFF8  F015         	goto	l5089
 11921  002AF8                     l5079:
 11922                           
 11923                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 11924  002AF8  063E               	decf	dtoa@i^0,f,c
 11925  002AFA  A0D8               	btfss	status,0,c
 11926  002AFC  063F               	decf	(dtoa@i+1)^0,f,c
 11927  002AFE                     
 11928                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 11929  002AFE  0E60               	movlw	low _dbuf
 11930  002B00  243E               	addwf	dtoa@i^0,w,c
 11931  002B02  6ED9               	movwf	fsr2l,c
 11932  002B04  0E02               	movlw	high _dbuf
 11933  002B06  203F               	addwfc	(dtoa@i+1)^0,w,c
 11934  002B08  6EDA               	movwf	fsr2h,c
 11935  002B0A  C036  F001         	movff	dtoa@n,___aomod@dividend
 11936  002B0E  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 11937  002B12  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 11938  002B16  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 11939  002B1A  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 11940  002B1E  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 11941  002B22  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 11942  002B26  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 11943  002B2A  0E0A               	movlw	10
 11944  002B2C  6E09               	movwf	___aomod@divisor^0,c
 11945  002B2E  0E00               	movlw	0
 11946  002B30  6E0A               	movwf	(___aomod@divisor+1)^0,c
 11947  002B32  0E00               	movlw	0
 11948  002B34  6E0B               	movwf	(___aomod@divisor+2)^0,c
 11949  002B36  0E00               	movlw	0
 11950  002B38  6E0C               	movwf	(___aomod@divisor+3)^0,c
 11951  002B3A  0E00               	movlw	0
 11952  002B3C  6E0D               	movwf	(___aomod@divisor+4)^0,c
 11953  002B3E  0E00               	movlw	0
 11954  002B40  6E0E               	movwf	(___aomod@divisor+5)^0,c
 11955  002B42  0E00               	movlw	0
 11956  002B44  6E0F               	movwf	(___aomod@divisor+6)^0,c
 11957  002B46  0E00               	movlw	0
 11958  002B48  6E10               	movwf	(___aomod@divisor+7)^0,c
 11959  002B4A  ECEC  F01D         	call	___aomod	;wreg free
 11960  002B4E  C001  F026         	movff	?___aomod,??_dtoa
 11961  002B52  C002  F027         	movff	?___aomod+1,??_dtoa+1
 11962  002B56  C003  F028         	movff	?___aomod+2,??_dtoa+2
 11963  002B5A  C004  F029         	movff	?___aomod+3,??_dtoa+3
 11964  002B5E  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 11965  002B62  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 11966  002B66  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 11967  002B6A  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 11968  002B6E  C026  F013         	movff	??_dtoa,abs@a
 11969  002B72  C028  F014         	movff	??_dtoa+2,abs@a+1
 11970  002B76  EC1B  F02A         	call	_abs	;wreg free
 11971  002B7A  5013               	movf	?_abs^0,w,c
 11972  002B7C  0F30               	addlw	48
 11973  002B7E  6EDF               	movwf	indf2,c
 11974  002B80                     
 11975                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 11976  002B80  0630               	decf	dtoa@p^0,f,c
 11977  002B82  A0D8               	btfss	status,0,c
 11978  002B84  0631               	decf	(dtoa@p+1)^0,f,c
 11979  002B86                     
 11980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 11981  002B86  0632               	decf	dtoa@w^0,f,c
 11982  002B88  A0D8               	btfss	status,0,c
 11983  002B8A  0633               	decf	(dtoa@w+1)^0,f,c
 11984  002B8C                     
 11985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 11986  002B8C  C036  F001         	movff	dtoa@n,___aodiv@dividend
 11987  002B90  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 11988  002B94  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 11989  002B98  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 11990  002B9C  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 11991  002BA0  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 11992  002BA4  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 11993  002BA8  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 11994  002BAC  0E0A               	movlw	10
 11995  002BAE  6E09               	movwf	___aodiv@divisor^0,c
 11996  002BB0  0E00               	movlw	0
 11997  002BB2  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 11998  002BB4  0E00               	movlw	0
 11999  002BB6  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12000  002BB8  0E00               	movlw	0
 12001  002BBA  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12002  002BBC  0E00               	movlw	0
 12003  002BBE  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12004  002BC0  0E00               	movlw	0
 12005  002BC2  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12006  002BC4  0E00               	movlw	0
 12007  002BC6  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12008  002BC8  0E00               	movlw	0
 12009  002BCA  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12010  002BCC  EC28  F01D         	call	___aodiv	;wreg free
 12011  002BD0  C001  F036         	movff	?___aodiv,dtoa@n
 12012  002BD4  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12013  002BD8  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12014  002BDC  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12015  002BE0  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12016  002BE4  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12017  002BE8  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12018  002BEC  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12019  002BF0                     l5089:
 12020                           
 12021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12022  002BF0  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12023  002BF2  EF03  F016         	goto	u5681
 12024  002BF6  503F               	movf	(dtoa@i+1)^0,w,c
 12025  002BF8  E108               	bnz	u5680
 12026  002BFA  043E               	decf	dtoa@i^0,w,c
 12027  002BFC  A0D8               	btfss	status,0,c
 12028  002BFE  EF03  F016         	goto	u5681
 12029  002C02  EF05  F016         	goto	u5680
 12030  002C06                     u5681:
 12031  002C06  EF36  F016         	goto	l5099
 12032  002C0A                     u5680:
 12033  002C0A  5036               	movf	dtoa@n^0,w,c
 12034  002C0C  1037               	iorwf	(dtoa@n+1)^0,w,c
 12035  002C0E  1038               	iorwf	(dtoa@n+2)^0,w,c
 12036  002C10  1039               	iorwf	(dtoa@n+3)^0,w,c
 12037  002C12  103A               	iorwf	(dtoa@n+4)^0,w,c
 12038  002C14  103B               	iorwf	(dtoa@n+5)^0,w,c
 12039  002C16  103C               	iorwf	(dtoa@n+6)^0,w,c
 12040  002C18  103D               	iorwf	(dtoa@n+7)^0,w,c
 12041  002C1A  A4D8               	btfss	status,2,c
 12042  002C1C  EF12  F016         	goto	u5691
 12043  002C20  EF14  F016         	goto	u5690
 12044  002C24                     u5691:
 12045  002C24  EF7C  F015         	goto	l5079
 12046  002C28                     u5690:
 12047  002C28  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12048  002C2A  EF21  F016         	goto	u5700
 12049  002C2E  5031               	movf	(dtoa@p+1)^0,w,c
 12050  002C30  E106               	bnz	u5701
 12051  002C32  0430               	decf	dtoa@p^0,w,c
 12052  002C34  B0D8               	btfsc	status,0,c
 12053  002C36  EF1F  F016         	goto	u5701
 12054  002C3A  EF21  F016         	goto	u5700
 12055  002C3E                     u5701:
 12056  002C3E  EF7C  F015         	goto	l5079
 12057  002C42                     u5700:
 12058  002C42  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12059  002C44  EF2C  F016         	goto	u5711
 12060  002C48  5033               	movf	(dtoa@w+1)^0,w,c
 12061  002C4A  E108               	bnz	u5710
 12062  002C4C  0432               	decf	dtoa@w^0,w,c
 12063  002C4E  A0D8               	btfss	status,0,c
 12064  002C50  EF2C  F016         	goto	u5711
 12065  002C54  EF2E  F016         	goto	u5710
 12066  002C58                     u5711:
 12067  002C58  EF36  F016         	goto	l5099
 12068  002C5C                     u5710:
 12069  002C5C  0100               	movlb	0	; () banked
 12070  002C5E  B3F8               	btfsc	_flags& (0+255),1,b
 12071  002C60  EF34  F016         	goto	u5721
 12072  002C64  EF36  F016         	goto	u5720
 12073  002C68                     u5721:
 12074  002C68  EF7C  F015         	goto	l5079
 12075  002C6C                     u5720:
 12076  002C6C                     l5099:
 12077                           
 12078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12079  002C6C  5034               	movf	dtoa@s^0,w,c
 12080  002C6E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12081  002C70  A4D8               	btfss	status,2,c
 12082  002C72  EF3D  F016         	goto	u5731
 12083  002C76  EF3F  F016         	goto	u5730
 12084  002C7A                     u5731:
 12085  002C7A  EF47  F016         	goto	l5103
 12086  002C7E                     u5730:
 12087  002C7E  0100               	movlb	0	; () banked
 12088  002C80  A5F8               	btfss	_flags& (0+255),2,b
 12089  002C82  EF45  F016         	goto	u5741
 12090  002C86  EF47  F016         	goto	u5740
 12091  002C8A                     u5741:
 12092  002C8A  EF65  F016         	goto	l5113
 12093  002C8E                     u5740:
 12094  002C8E                     l5103:
 12095                           
 12096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12097  002C8E  063E               	decf	dtoa@i^0,f,c
 12098  002C90  A0D8               	btfss	status,0,c
 12099  002C92  063F               	decf	(dtoa@i+1)^0,f,c
 12100  002C94                     
 12101                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12102  002C94  5034               	movf	dtoa@s^0,w,c
 12103  002C96  1035               	iorwf	(dtoa@s+1)^0,w,c
 12104  002C98  A4D8               	btfss	status,2,c
 12105  002C9A  EF51  F016         	goto	u5751
 12106  002C9E  EF53  F016         	goto	u5750
 12107  002CA2                     u5751:
 12108  002CA2  EF59  F016         	goto	l5109
 12109  002CA6                     u5750:
 12110  002CA6  0E00               	movlw	0
 12111  002CA8  6E2F               	movwf	(_dtoa$2959+1)^0,c
 12112  002CAA  0E2B               	movlw	43
 12113  002CAC  6E2E               	movwf	_dtoa$2959^0,c
 12114  002CAE  EF5D  F016         	goto	l5111
 12115  002CB2                     l5109:
 12116  002CB2  0E00               	movlw	0
 12117  002CB4  6E2F               	movwf	(_dtoa$2959+1)^0,c
 12118  002CB6  0E2D               	movlw	45
 12119  002CB8  6E2E               	movwf	_dtoa$2959^0,c
 12120  002CBA                     l5111:
 12121  002CBA  0E60               	movlw	low _dbuf
 12122  002CBC  243E               	addwf	dtoa@i^0,w,c
 12123  002CBE  6ED9               	movwf	fsr2l,c
 12124  002CC0  0E02               	movlw	high _dbuf
 12125  002CC2  203F               	addwfc	(dtoa@i+1)^0,w,c
 12126  002CC4  6EDA               	movwf	fsr2h,c
 12127  002CC6  C02E  FFDF         	movff	_dtoa$2959,indf2
 12128  002CCA                     l5113:
 12129                           
 12130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12131  002CCA  C01C  F011         	movff	dtoa@fp,pad@fp
 12132  002CCE  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12133  002CD2  0E60               	movlw	low _dbuf
 12134  002CD4  243E               	addwf	dtoa@i^0,w,c
 12135  002CD6  6E13               	movwf	pad@buf^0,c
 12136  002CD8  0E02               	movlw	high _dbuf
 12137  002CDA  203F               	addwfc	(dtoa@i+1)^0,w,c
 12138  002CDC  6E14               	movwf	(pad@buf+1)^0,c
 12139  002CDE  C032  F015         	movff	dtoa@w,pad@p
 12140  002CE2  C033  F016         	movff	dtoa@w+1,pad@p+1
 12141  002CE6  EC28  F024         	call	_pad	;wreg free
 12142  002CEA  C011  F01C         	movff	?_pad,?_dtoa
 12143  002CEE  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12144  002CF2  0012               	return		;funcret
 12145  002CF4                     __end_of_dtoa:
 12146                           	callstack 0
 12147                           
 12148 ;; *************** function _pad *****************
 12149 ;; Defined at:
 12150 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12151 ;; Parameters:    Size  Location     Type
 12152 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12153 ;;		 -> sprintf@f(6), 
 12154 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12155 ;;		 -> dbuf(80), 
 12156 ;;  p               2   20[COMRAM] int 
 12157 ;; Auto vars:     Size  Location     Type
 12158 ;;  w               2   25[COMRAM] int 
 12159 ;;  i               2   23[COMRAM] int 
 12160 ;; Return value:  Size  Location     Type
 12161 ;;                  2   16[COMRAM] int 
 12162 ;; Registers used:
 12163 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12164 ;; Tracked objects:
 12165 ;;		On entry : 0/0
 12166 ;;		On exit  : 0/0
 12167 ;;		Unchanged: 0/0
 12168 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12169 ;;      Params:         6       0       0       0       0       0       0
 12170 ;;      Locals:         4       0       0       0       0       0       0
 12171 ;;      Temps:          1       0       0       0       0       0       0
 12172 ;;      Totals:        11       0       0       0       0       0       0
 12173 ;;Total ram usage:       11 bytes
 12174 ;; Hardware stack levels used:    1
 12175 ;; Hardware stack levels required when called:    4
 12176 ;; This function calls:
 12177 ;;		_fputc
 12178 ;;		_fputs
 12179 ;;		_strlen
 12180 ;; This function is called by:
 12181 ;;		_dtoa
 12182 ;;		_efgtoa
 12183 ;; This function uses a non-reentrant model
 12184 ;;
 12185                           
 12186                           	psect	text41
 12187  004850                     __ptext41:
 12188                           	callstack 0
 12189  004850                     _pad:
 12190                           	callstack 19
 12191  004850                     
 12192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12193  004850  0100               	movlb	0	; () banked
 12194  004852  A1F8               	btfss	_flags& (0+255),0,b
 12195  004854  EF2E  F024         	goto	u5301
 12196  004858  EF30  F024         	goto	u5300
 12197  00485C                     u5301:
 12198  00485C  EF3A  F024         	goto	l4953
 12199  004860                     u5300:
 12200  004860                     
 12201                           ; BSR set to: 0
 12202                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12203  004860  C013  F00A         	movff	pad@buf,fputs@s
 12204  004864  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12205  004868  C011  F00C         	movff	pad@fp,fputs@fp
 12206  00486C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12207  004870  ECB8  F029         	call	_fputs	;wreg free
 12208  004874                     l4953:
 12209                           
 12210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12211  004874  BE16               	btfsc	(pad@p+1)^0,7,c
 12212  004876  EF3F  F024         	goto	u5311
 12213  00487A  EF41  F024         	goto	u5310
 12214  00487E                     u5311:
 12215  00487E  EF47  F024         	goto	l4957
 12216  004882                     u5310:
 12217  004882  C015  F01A         	movff	pad@p,pad@w
 12218  004886  C016  F01B         	movff	pad@p+1,pad@w+1
 12219  00488A  EF4B  F024         	goto	l1424
 12220  00488E                     l4957:
 12221  00488E  0E00               	movlw	0
 12222  004890  6E1B               	movwf	(pad@w+1)^0,c
 12223  004892  0E00               	movlw	0
 12224  004894  6E1A               	movwf	pad@w^0,c
 12225  004896                     l1424:
 12226                           
 12227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12228  004896  0E00               	movlw	0
 12229  004898  6E19               	movwf	(pad@i+1)^0,c
 12230  00489A  0E00               	movlw	0
 12231  00489C  6E18               	movwf	pad@i^0,c
 12232                           
 12233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12234  00489E  EF5D  F024         	goto	l4963
 12235  0048A2                     l4959:
 12236                           
 12237                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12238  0048A2  0E00               	movlw	0
 12239  0048A4  6E02               	movwf	(fputc@c+1)^0,c
 12240  0048A6  0E20               	movlw	32
 12241  0048A8  6E01               	movwf	fputc@c^0,c
 12242  0048AA  C011  F003         	movff	pad@fp,fputc@fp
 12243  0048AE  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12244  0048B2  ECC3  F023         	call	_fputc	;wreg free
 12245  0048B6                     
 12246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12247  0048B6  4A18               	infsnz	pad@i^0,f,c
 12248  0048B8  2A19               	incf	(pad@i+1)^0,f,c
 12249  0048BA                     l4963:
 12250                           
 12251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12252  0048BA  501A               	movf	pad@w^0,w,c
 12253  0048BC  5C18               	subwf	pad@i^0,w,c
 12254  0048BE  5019               	movf	(pad@i+1)^0,w,c
 12255  0048C0  0A80               	xorlw	128
 12256  0048C2  6E17               	movwf	??_pad^0,c
 12257  0048C4  501B               	movf	(pad@w+1)^0,w,c
 12258  0048C6  0A80               	xorlw	128
 12259  0048C8  5817               	subwfb	??_pad^0,w,c
 12260  0048CA  A0D8               	btfss	status,0,c
 12261  0048CC  EF6A  F024         	goto	u5321
 12262  0048D0  EF6C  F024         	goto	u5320
 12263  0048D4                     u5321:
 12264  0048D4  EF51  F024         	goto	l4959
 12265  0048D8                     u5320:
 12266  0048D8                     
 12267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12268  0048D8  0100               	movlb	0	; () banked
 12269  0048DA  B1F8               	btfsc	_flags& (0+255),0,b
 12270  0048DC  EF72  F024         	goto	u5331
 12271  0048E0  EF74  F024         	goto	u5330
 12272  0048E4                     u5331:
 12273  0048E4  EF7E  F024         	goto	l4967
 12274  0048E8                     u5330:
 12275  0048E8                     
 12276                           ; BSR set to: 0
 12277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12278  0048E8  C013  F00A         	movff	pad@buf,fputs@s
 12279  0048EC  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12280  0048F0  C011  F00C         	movff	pad@fp,fputs@fp
 12281  0048F4  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12282  0048F8  ECB8  F029         	call	_fputs	;wreg free
 12283  0048FC                     l4967:
 12284                           
 12285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12286  0048FC  C013  F001         	movff	pad@buf,strlen@s
 12287  004900  C014  F002         	movff	pad@buf+1,strlen@s+1
 12288  004904  EC22  F02B         	call	_strlen	;wreg free
 12289  004908  501A               	movf	pad@w^0,w,c
 12290  00490A  2401               	addwf	?_strlen^0,w,c
 12291  00490C  6E11               	movwf	?_pad^0,c
 12292  00490E  501B               	movf	(pad@w+1)^0,w,c
 12293  004910  2002               	addwfc	(?_strlen+1)^0,w,c
 12294  004912  6E12               	movwf	(?_pad+1)^0,c
 12295  004914  0012               	return		;funcret
 12296  004916                     __end_of_pad:
 12297                           	callstack 0
 12298                           
 12299 ;; *************** function _strlen *****************
 12300 ;; Defined at:
 12301 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12302 ;; Parameters:    Size  Location     Type
 12303 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12304 ;;		 -> dbuf(80), 
 12305 ;; Auto vars:     Size  Location     Type
 12306 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12307 ;;		 -> dbuf(80), 
 12308 ;; Return value:  Size  Location     Type
 12309 ;;                  2    0[COMRAM] unsigned int 
 12310 ;; Registers used:
 12311 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12312 ;; Tracked objects:
 12313 ;;		On entry : 0/0
 12314 ;;		On exit  : 0/0
 12315 ;;		Unchanged: 0/0
 12316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12317 ;;      Params:         2       0       0       0       0       0       0
 12318 ;;      Locals:         2       0       0       0       0       0       0
 12319 ;;      Temps:          0       0       0       0       0       0       0
 12320 ;;      Totals:         4       0       0       0       0       0       0
 12321 ;;Total ram usage:        4 bytes
 12322 ;; Hardware stack levels used:    1
 12323 ;; Hardware stack levels required when called:    1
 12324 ;; This function calls:
 12325 ;;		Nothing
 12326 ;; This function is called by:
 12327 ;;		_pad
 12328 ;; This function uses a non-reentrant model
 12329 ;;
 12330                           
 12331                           	psect	text42
 12332  005644                     __ptext42:
 12333                           	callstack 0
 12334  005644                     _strlen:
 12335                           	callstack 21
 12336  005644  C001  F003         	movff	strlen@s,strlen@a
 12337  005648  C002  F004         	movff	strlen@s+1,strlen@a+1
 12338  00564C  EF2A  F02B         	goto	l4409
 12339  005650                     l4407:
 12340  005650  4A01               	infsnz	strlen@s^0,f,c
 12341  005652  2A02               	incf	(strlen@s+1)^0,f,c
 12342  005654                     l4409:
 12343  005654  C001  FFD9         	movff	strlen@s,fsr2l
 12344  005658  C002  FFDA         	movff	strlen@s+1,fsr2h
 12345  00565C  50DF               	movf	indf2,w,c
 12346  00565E  A4D8               	btfss	status,2,c
 12347  005660  EF34  F02B         	goto	u4441
 12348  005664  EF36  F02B         	goto	u4440
 12349  005668                     u4441:
 12350  005668  EF28  F02B         	goto	l4407
 12351  00566C                     u4440:
 12352  00566C  5003               	movf	strlen@a^0,w,c
 12353  00566E  5C01               	subwf	strlen@s^0,w,c
 12354  005670  6E01               	movwf	?_strlen^0,c
 12355  005672  5004               	movf	(strlen@a+1)^0,w,c
 12356  005674  5802               	subwfb	(strlen@s+1)^0,w,c
 12357  005676  6E02               	movwf	(?_strlen+1)^0,c
 12358  005678  0012               	return		;funcret
 12359  00567A                     __end_of_strlen:
 12360                           	callstack 0
 12361                           
 12362 ;; *************** function _fputs *****************
 12363 ;; Defined at:
 12364 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12365 ;; Parameters:    Size  Location     Type
 12366 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12367 ;;		 -> dbuf(80), 
 12368 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12369 ;;		 -> sprintf@f(6), 
 12370 ;; Auto vars:     Size  Location     Type
 12371 ;;  i               2   14[COMRAM] int 
 12372 ;;  c               1   13[COMRAM] unsigned char 
 12373 ;; Return value:  Size  Location     Type
 12374 ;;                  2    9[COMRAM] int 
 12375 ;; Registers used:
 12376 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12377 ;; Tracked objects:
 12378 ;;		On entry : 0/0
 12379 ;;		On exit  : 0/0
 12380 ;;		Unchanged: 0/0
 12381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12382 ;;      Params:         4       0       0       0       0       0       0
 12383 ;;      Locals:         3       0       0       0       0       0       0
 12384 ;;      Temps:          0       0       0       0       0       0       0
 12385 ;;      Totals:         7       0       0       0       0       0       0
 12386 ;;Total ram usage:        7 bytes
 12387 ;; Hardware stack levels used:    1
 12388 ;; Hardware stack levels required when called:    3
 12389 ;; This function calls:
 12390 ;;		_fputc
 12391 ;; This function is called by:
 12392 ;;		_pad
 12393 ;; This function uses a non-reentrant model
 12394 ;;
 12395                           
 12396                           	psect	text43
 12397  005370                     __ptext43:
 12398                           	callstack 0
 12399  005370                     _fputs:
 12400                           	callstack 19
 12401  005370  0E00               	movlw	0
 12402  005372  6E10               	movwf	(fputs@i+1)^0,c
 12403  005374  0E00               	movlw	0
 12404  005376  6E0F               	movwf	fputs@i^0,c
 12405  005378  EFC9  F029         	goto	l4403
 12406  00537C                     l4399:
 12407  00537C  C00E  F001         	movff	fputs@c,fputc@c
 12408  005380  6A02               	clrf	(fputc@c+1)^0,c
 12409  005382  C00C  F003         	movff	fputs@fp,fputc@fp
 12410  005386  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12411  00538A  ECC3  F023         	call	_fputc	;wreg free
 12412  00538E  4A0F               	infsnz	fputs@i^0,f,c
 12413  005390  2A10               	incf	(fputs@i+1)^0,f,c
 12414  005392                     l4403:
 12415  005392  500F               	movf	fputs@i^0,w,c
 12416  005394  240A               	addwf	fputs@s^0,w,c
 12417  005396  6ED9               	movwf	fsr2l,c
 12418  005398  5010               	movf	(fputs@i+1)^0,w,c
 12419  00539A  200B               	addwfc	(fputs@s+1)^0,w,c
 12420  00539C  6EDA               	movwf	fsr2h,c
 12421  00539E  50DF               	movf	indf2,w,c
 12422  0053A0  6E0E               	movwf	fputs@c^0,c
 12423  0053A2  500E               	movf	fputs@c^0,w,c
 12424  0053A4  A4D8               	btfss	status,2,c
 12425  0053A6  EFD7  F029         	goto	u4431
 12426  0053AA  EFD9  F029         	goto	u4430
 12427  0053AE                     u4431:
 12428  0053AE  EFBE  F029         	goto	l4399
 12429  0053B2                     u4430:
 12430  0053B2  0012               	return		;funcret
 12431  0053B4                     __end_of_fputs:
 12432                           	callstack 0
 12433                           
 12434 ;; *************** function _fputc *****************
 12435 ;; Defined at:
 12436 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12437 ;; Parameters:    Size  Location     Type
 12438 ;;  c               2    0[COMRAM] int 
 12439 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12440 ;;		 -> sprintf@f(6), 
 12441 ;; Auto vars:     Size  Location     Type
 12442 ;;		None
 12443 ;; Return value:  Size  Location     Type
 12444 ;;                  2    0[COMRAM] int 
 12445 ;; Registers used:
 12446 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12447 ;; Tracked objects:
 12448 ;;		On entry : 0/0
 12449 ;;		On exit  : 0/0
 12450 ;;		Unchanged: 0/0
 12451 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12452 ;;      Params:         4       0       0       0       0       0       0
 12453 ;;      Locals:         0       0       0       0       0       0       0
 12454 ;;      Temps:          5       0       0       0       0       0       0
 12455 ;;      Totals:         9       0       0       0       0       0       0
 12456 ;;Total ram usage:        9 bytes
 12457 ;; Hardware stack levels used:    1
 12458 ;; Hardware stack levels required when called:    2
 12459 ;; This function calls:
 12460 ;;		_putch
 12461 ;; This function is called by:
 12462 ;;		_pad
 12463 ;;		_vfpfcnvrt
 12464 ;;		_fputs
 12465 ;; This function uses a non-reentrant model
 12466 ;;
 12467                           
 12468                           	psect	text44
 12469  004786                     __ptext44:
 12470                           	callstack 0
 12471  004786                     _fputc:
 12472                           	callstack 22
 12473  004786  5003               	movf	fputc@fp^0,w,c
 12474  004788  1004               	iorwf	(fputc@fp+1)^0,w,c
 12475  00478A  B4D8               	btfsc	status,2,c
 12476  00478C  EFCA  F023         	goto	u4001
 12477  004790  EFCC  F023         	goto	u4000
 12478  004794                     u4001:
 12479  004794  EFD5  F023         	goto	l4185
 12480  004798                     u4000:
 12481  004798  5003               	movf	fputc@fp^0,w,c
 12482  00479A  1004               	iorwf	(fputc@fp+1)^0,w,c
 12483  00479C  A4D8               	btfss	status,2,c
 12484  00479E  EFD3  F023         	goto	u4011
 12485  0047A2  EFD5  F023         	goto	u4010
 12486  0047A6                     u4011:
 12487  0047A6  EFDA  F023         	goto	l4187
 12488  0047AA                     u4010:
 12489  0047AA                     l4185:
 12490  0047AA  5001               	movf	fputc@c^0,w,c
 12491  0047AC  ECFA  F02B         	call	_putch
 12492  0047B0  EF27  F024         	goto	l1684
 12493  0047B4                     l4187:
 12494  0047B4  EE20 F004          	lfsr	2,4
 12495  0047B8  5003               	movf	fputc@fp^0,w,c
 12496  0047BA  26D9               	addwf	fsr2l,f,c
 12497  0047BC  5004               	movf	(fputc@fp+1)^0,w,c
 12498  0047BE  22DA               	addwfc	fsr2h,f,c
 12499  0047C0  50DE               	movf	postinc2,w,c
 12500  0047C2  10DE               	iorwf	postinc2,w,c
 12501  0047C4  B4D8               	btfsc	status,2,c
 12502  0047C6  EFE7  F023         	goto	u4021
 12503  0047CA  EFE9  F023         	goto	u4020
 12504  0047CE                     u4021:
 12505  0047CE  EF04  F024         	goto	l4191
 12506  0047D2                     u4020:
 12507  0047D2  EE20 F004          	lfsr	2,4
 12508  0047D6  5003               	movf	fputc@fp^0,w,c
 12509  0047D8  26D9               	addwf	fsr2l,f,c
 12510  0047DA  5004               	movf	(fputc@fp+1)^0,w,c
 12511  0047DC  22DA               	addwfc	fsr2h,f,c
 12512  0047DE  EE10 F002          	lfsr	1,2
 12513  0047E2  5003               	movf	fputc@fp^0,w,c
 12514  0047E4  26E1               	addwf	fsr1l,f,c
 12515  0047E6  5004               	movf	(fputc@fp+1)^0,w,c
 12516  0047E8  22E2               	addwfc	fsr1h,f,c
 12517  0047EA  50DE               	movf	postinc2,w,c
 12518  0047EC  5CE6               	subwf	postinc1,w,c
 12519  0047EE  50E6               	movf	postinc1,w,c
 12520  0047F0  0A80               	xorlw	128
 12521  0047F2  6E09               	movwf	(??_fputc+4)^0,c
 12522  0047F4  50DE               	movf	postinc2,w,c
 12523  0047F6  0A80               	xorlw	128
 12524  0047F8  5809               	subwfb	(??_fputc+4)^0,w,c
 12525  0047FA  B0D8               	btfsc	status,0,c
 12526  0047FC  EF02  F024         	goto	u4031
 12527  004800  EF04  F024         	goto	u4030
 12528  004804                     u4031:
 12529  004804  EF27  F024         	goto	l1684
 12530  004808                     u4030:
 12531  004808                     l4191:
 12532  004808  EE20 F002          	lfsr	2,2
 12533  00480C  5003               	movf	fputc@fp^0,w,c
 12534  00480E  26D9               	addwf	fsr2l,f,c
 12535  004810  5004               	movf	(fputc@fp+1)^0,w,c
 12536  004812  22DA               	addwfc	fsr2h,f,c
 12537  004814  CFDE F005          	movff	postinc2,??_fputc
 12538  004818  CFDD F006          	movff	postdec2,??_fputc+1
 12539  00481C  C003  FFD9         	movff	fputc@fp,fsr2l
 12540  004820  C004  FFDA         	movff	fputc@fp+1,fsr2h
 12541  004824  CFDE F007          	movff	postinc2,??_fputc+2
 12542  004828  CFDD F008          	movff	postdec2,??_fputc+3
 12543  00482C  5005               	movf	??_fputc^0,w,c
 12544  00482E  2407               	addwf	(??_fputc+2)^0,w,c
 12545  004830  6ED9               	movwf	fsr2l,c
 12546  004832  5006               	movf	(??_fputc+1)^0,w,c
 12547  004834  2008               	addwfc	(??_fputc+3)^0,w,c
 12548  004836  6EDA               	movwf	fsr2h,c
 12549  004838  C001  FFDF         	movff	fputc@c,indf2
 12550  00483C  EE20 F002          	lfsr	2,2
 12551  004840  5003               	movf	fputc@fp^0,w,c
 12552  004842  26D9               	addwf	fsr2l,f,c
 12553  004844  5004               	movf	(fputc@fp+1)^0,w,c
 12554  004846  22DA               	addwfc	fsr2h,f,c
 12555  004848  2ADE               	incf	postinc2,f,c
 12556  00484A  0E00               	movlw	0
 12557  00484C  22DD               	addwfc	postdec2,f,c
 12558  00484E                     l1684:
 12559  00484E  0012               	return		;funcret
 12560  004850                     __end_of_fputc:
 12561                           	callstack 0
 12562                           
 12563 ;; *************** function _putch *****************
 12564 ;; Defined at:
 12565 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 12566 ;; Parameters:    Size  Location     Type
 12567 ;;  c               1    wreg     unsigned char 
 12568 ;; Auto vars:     Size  Location     Type
 12569 ;;  c               1    0[COMRAM] unsigned char 
 12570 ;; Return value:  Size  Location     Type
 12571 ;;                  1    wreg      void 
 12572 ;; Registers used:
 12573 ;;		wreg
 12574 ;; Tracked objects:
 12575 ;;		On entry : 0/0
 12576 ;;		On exit  : 0/0
 12577 ;;		Unchanged: 0/0
 12578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12579 ;;      Params:         0       0       0       0       0       0       0
 12580 ;;      Locals:         0       0       0       0       0       0       0
 12581 ;;      Temps:          0       0       0       0       0       0       0
 12582 ;;      Totals:         0       0       0       0       0       0       0
 12583 ;;Total ram usage:        0 bytes
 12584 ;; Hardware stack levels used:    1
 12585 ;; Hardware stack levels required when called:    1
 12586 ;; This function calls:
 12587 ;;		Nothing
 12588 ;; This function is called by:
 12589 ;;		_fputc
 12590 ;; This function uses a non-reentrant model
 12591 ;;
 12592                           
 12593                           	psect	text45
 12594  0057F4                     __ptext45:
 12595                           	callstack 0
 12596  0057F4                     _putch:
 12597                           	callstack 22
 12598  0057F4  0012               	return		;funcret
 12599  0057F6                     __end_of_putch:
 12600                           	callstack 0
 12601                           
 12602 ;; *************** function _abs *****************
 12603 ;; Defined at:
 12604 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 12605 ;; Parameters:    Size  Location     Type
 12606 ;;  a               2   18[COMRAM] int 
 12607 ;; Auto vars:     Size  Location     Type
 12608 ;;		None
 12609 ;; Return value:  Size  Location     Type
 12610 ;;                  2   18[COMRAM] int 
 12611 ;; Registers used:
 12612 ;;		wreg, status,2, status,0
 12613 ;; Tracked objects:
 12614 ;;		On entry : 0/0
 12615 ;;		On exit  : 0/0
 12616 ;;		Unchanged: 0/0
 12617 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12618 ;;      Params:         2       0       0       0       0       0       0
 12619 ;;      Locals:         0       0       0       0       0       0       0
 12620 ;;      Temps:          2       0       0       0       0       0       0
 12621 ;;      Totals:         4       0       0       0       0       0       0
 12622 ;;Total ram usage:        4 bytes
 12623 ;; Hardware stack levels used:    1
 12624 ;; Hardware stack levels required when called:    1
 12625 ;; This function calls:
 12626 ;;		Nothing
 12627 ;; This function is called by:
 12628 ;;		_dtoa
 12629 ;; This function uses a non-reentrant model
 12630 ;;
 12631                           
 12632                           	psect	text46
 12633  005436                     __ptext46:
 12634                           	callstack 0
 12635  005436                     _abs:
 12636                           	callstack 22
 12637  005436  BE14               	btfsc	(abs@a+1)^0,7,c
 12638  005438  EF28  F02A         	goto	u5340
 12639  00543C  5014               	movf	(abs@a+1)^0,w,c
 12640  00543E  E106               	bnz	u5341
 12641  005440  0413               	decf	abs@a^0,w,c
 12642  005442  B0D8               	btfsc	status,0,c
 12643  005444  EF26  F02A         	goto	u5341
 12644  005448  EF28  F02A         	goto	u5340
 12645  00544C                     u5341:
 12646  00544C  EF36  F02A         	goto	l1605
 12647  005450                     u5340:
 12648  005450  C013  F015         	movff	abs@a,??_abs
 12649  005454  C014  F016         	movff	abs@a+1,??_abs+1
 12650  005458  1E15               	comf	??_abs^0,f,c
 12651  00545A  1E16               	comf	(??_abs+1)^0,f,c
 12652  00545C  4A15               	infsnz	??_abs^0,f,c
 12653  00545E  2A16               	incf	(??_abs+1)^0,f,c
 12654  005460  C015  F013         	movff	??_abs,?_abs
 12655  005464  C016  F014         	movff	??_abs+1,?_abs+1
 12656  005468  EF3A  F02A         	goto	l1608
 12657  00546C                     l1605:
 12658  00546C  C013  F013         	movff	abs@a,?_abs
 12659  005470  C014  F014         	movff	abs@a+1,?_abs+1
 12660  005474                     l1608:
 12661  005474  0012               	return		;funcret
 12662  005476                     __end_of_abs:
 12663                           	callstack 0
 12664                           
 12665 ;; *************** function ___aomod *****************
 12666 ;; Defined at:
 12667 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 12668 ;; Parameters:    Size  Location     Type
 12669 ;;  dividend        8    0[COMRAM] long long 
 12670 ;;  divisor         8    8[COMRAM] long long 
 12671 ;; Auto vars:     Size  Location     Type
 12672 ;;  sign            1   17[COMRAM] unsigned char 
 12673 ;;  counter         1   16[COMRAM] unsigned char 
 12674 ;; Return value:  Size  Location     Type
 12675 ;;                  8    0[COMRAM] long long 
 12676 ;; Registers used:
 12677 ;;		wreg, status,2, status,0
 12678 ;; Tracked objects:
 12679 ;;		On entry : 0/0
 12680 ;;		On exit  : 0/0
 12681 ;;		Unchanged: 0/0
 12682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12683 ;;      Params:        16       0       0       0       0       0       0
 12684 ;;      Locals:         2       0       0       0       0       0       0
 12685 ;;      Temps:          0       0       0       0       0       0       0
 12686 ;;      Totals:        18       0       0       0       0       0       0
 12687 ;;Total ram usage:       18 bytes
 12688 ;; Hardware stack levels used:    1
 12689 ;; Hardware stack levels required when called:    1
 12690 ;; This function calls:
 12691 ;;		Nothing
 12692 ;; This function is called by:
 12693 ;;		_dtoa
 12694 ;; This function uses a non-reentrant model
 12695 ;;
 12696                           
 12697                           	psect	text47
 12698  003BD8                     __ptext47:
 12699                           	callstack 0
 12700  003BD8                     ___aomod:
 12701                           	callstack 22
 12702  003BD8  0E00               	movlw	0
 12703  003BDA  6E12               	movwf	___aomod@sign^0,c
 12704  003BDC  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 12705  003BDE  EFF5  F01D         	goto	u4540
 12706  003BE2  EFF3  F01D         	goto	u4541
 12707  003BE6                     u4541:
 12708  003BE6  EF07  F01E         	goto	l4477
 12709  003BEA                     u4540:
 12710  003BEA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12711  003BEC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12712  003BEE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12713  003BF0  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12714  003BF2  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12715  003BF4  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12716  003BF6  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12717  003BF8  6C01               	negf	___aomod@dividend^0,c
 12718  003BFA  0E00               	movlw	0
 12719  003BFC  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12720  003BFE  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12721  003C00  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12722  003C02  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12723  003C04  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12724  003C06  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12725  003C08  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12726  003C0A  0E01               	movlw	1
 12727  003C0C  6E12               	movwf	___aomod@sign^0,c
 12728  003C0E                     l4477:
 12729  003C0E  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 12730  003C10  EF0E  F01E         	goto	u4550
 12731  003C14  EF0C  F01E         	goto	u4551
 12732  003C18                     u4551:
 12733  003C18  EF1E  F01E         	goto	l4481
 12734  003C1C                     u4550:
 12735  003C1C  1E10               	comf	(___aomod@divisor+7)^0,f,c
 12736  003C1E  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 12737  003C20  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 12738  003C22  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 12739  003C24  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 12740  003C26  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 12741  003C28  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 12742  003C2A  6C09               	negf	___aomod@divisor^0,c
 12743  003C2C  0E00               	movlw	0
 12744  003C2E  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 12745  003C30  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 12746  003C32  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 12747  003C34  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 12748  003C36  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 12749  003C38  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 12750  003C3A  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 12751  003C3C                     l4481:
 12752  003C3C  5009               	movf	___aomod@divisor^0,w,c
 12753  003C3E  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 12754  003C40  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 12755  003C42  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 12756  003C44  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 12757  003C46  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 12758  003C48  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 12759  003C4A  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 12760  003C4C  B4D8               	btfsc	status,2,c
 12761  003C4E  EF2B  F01E         	goto	u4561
 12762  003C52  EF2D  F01E         	goto	u4560
 12763  003C56                     u4561:
 12764  003C56  EF75  F01E         	goto	l4497
 12765  003C5A                     u4560:
 12766  003C5A  0E01               	movlw	1
 12767  003C5C  6E11               	movwf	___aomod@counter^0,c
 12768  003C5E  EF3B  F01E         	goto	l4487
 12769  003C62                     l4485:
 12770  003C62  90D8               	bcf	status,0,c
 12771  003C64  3609               	rlcf	___aomod@divisor^0,f,c
 12772  003C66  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 12773  003C68  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 12774  003C6A  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 12775  003C6C  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 12776  003C6E  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 12777  003C70  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 12778  003C72  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 12779  003C74  2A11               	incf	___aomod@counter^0,f,c
 12780  003C76                     l4487:
 12781  003C76  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 12782  003C78  EF40  F01E         	goto	u4571
 12783  003C7C  EF42  F01E         	goto	u4570
 12784  003C80                     u4571:
 12785  003C80  EF31  F01E         	goto	l4485
 12786  003C84                     u4570:
 12787  003C84                     l4489:
 12788  003C84  5009               	movf	___aomod@divisor^0,w,c
 12789  003C86  5C01               	subwf	___aomod@dividend^0,w,c
 12790  003C88  500A               	movf	(___aomod@divisor+1)^0,w,c
 12791  003C8A  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 12792  003C8C  500B               	movf	(___aomod@divisor+2)^0,w,c
 12793  003C8E  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 12794  003C90  500C               	movf	(___aomod@divisor+3)^0,w,c
 12795  003C92  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 12796  003C94  500D               	movf	(___aomod@divisor+4)^0,w,c
 12797  003C96  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 12798  003C98  500E               	movf	(___aomod@divisor+5)^0,w,c
 12799  003C9A  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 12800  003C9C  500F               	movf	(___aomod@divisor+6)^0,w,c
 12801  003C9E  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 12802  003CA0  5010               	movf	(___aomod@divisor+7)^0,w,c
 12803  003CA2  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 12804  003CA4  A0D8               	btfss	status,0,c
 12805  003CA6  EF57  F01E         	goto	u4581
 12806  003CAA  EF59  F01E         	goto	u4580
 12807  003CAE                     u4581:
 12808  003CAE  EF69  F01E         	goto	l4493
 12809  003CB2                     u4580:
 12810  003CB2  5009               	movf	___aomod@divisor^0,w,c
 12811  003CB4  5E01               	subwf	___aomod@dividend^0,f,c
 12812  003CB6  500A               	movf	(___aomod@divisor+1)^0,w,c
 12813  003CB8  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 12814  003CBA  500B               	movf	(___aomod@divisor+2)^0,w,c
 12815  003CBC  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 12816  003CBE  500C               	movf	(___aomod@divisor+3)^0,w,c
 12817  003CC0  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 12818  003CC2  500D               	movf	(___aomod@divisor+4)^0,w,c
 12819  003CC4  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 12820  003CC6  500E               	movf	(___aomod@divisor+5)^0,w,c
 12821  003CC8  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 12822  003CCA  500F               	movf	(___aomod@divisor+6)^0,w,c
 12823  003CCC  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 12824  003CCE  5010               	movf	(___aomod@divisor+7)^0,w,c
 12825  003CD0  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 12826  003CD2                     l4493:
 12827  003CD2  90D8               	bcf	status,0,c
 12828  003CD4  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 12829  003CD6  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 12830  003CD8  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 12831  003CDA  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 12832  003CDC  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 12833  003CDE  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 12834  003CE0  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 12835  003CE2  3209               	rrcf	___aomod@divisor^0,f,c
 12836  003CE4  2E11               	decfsz	___aomod@counter^0,f,c
 12837  003CE6  EF42  F01E         	goto	l4489
 12838  003CEA                     l4497:
 12839  003CEA  5012               	movf	___aomod@sign^0,w,c
 12840  003CEC  B4D8               	btfsc	status,2,c
 12841  003CEE  EF7B  F01E         	goto	u4591
 12842  003CF2  EF7D  F01E         	goto	u4590
 12843  003CF6                     u4591:
 12844  003CF6  EF8D  F01E         	goto	l4501
 12845  003CFA                     u4590:
 12846  003CFA  1E08               	comf	(___aomod@dividend+7)^0,f,c
 12847  003CFC  1E07               	comf	(___aomod@dividend+6)^0,f,c
 12848  003CFE  1E06               	comf	(___aomod@dividend+5)^0,f,c
 12849  003D00  1E05               	comf	(___aomod@dividend+4)^0,f,c
 12850  003D02  1E04               	comf	(___aomod@dividend+3)^0,f,c
 12851  003D04  1E03               	comf	(___aomod@dividend+2)^0,f,c
 12852  003D06  1E02               	comf	(___aomod@dividend+1)^0,f,c
 12853  003D08  6C01               	negf	___aomod@dividend^0,c
 12854  003D0A  0E00               	movlw	0
 12855  003D0C  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 12856  003D0E  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 12857  003D10  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 12858  003D12  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 12859  003D14  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 12860  003D16  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 12861  003D18  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 12862  003D1A                     l4501:
 12863  003D1A  C001  F001         	movff	___aomod@dividend,?___aomod
 12864  003D1E  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 12865  003D22  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 12866  003D26  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 12867  003D2A  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 12868  003D2E  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 12869  003D32  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 12870  003D36  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 12871  003D3A  0012               	return		;funcret
 12872  003D3C                     __end_of___aomod:
 12873                           	callstack 0
 12874                           
 12875 ;; *************** function ___aodiv *****************
 12876 ;; Defined at:
 12877 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 12878 ;; Parameters:    Size  Location     Type
 12879 ;;  dividend        8    0[COMRAM] long long 
 12880 ;;  divisor         8    8[COMRAM] long long 
 12881 ;; Auto vars:     Size  Location     Type
 12882 ;;  quotient        8   18[COMRAM] long long 
 12883 ;;  sign            1   17[COMRAM] unsigned char 
 12884 ;;  counter         1   16[COMRAM] unsigned char 
 12885 ;; Return value:  Size  Location     Type
 12886 ;;                  8    0[COMRAM] long long 
 12887 ;; Registers used:
 12888 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12889 ;; Tracked objects:
 12890 ;;		On entry : 0/0
 12891 ;;		On exit  : 0/0
 12892 ;;		Unchanged: 0/0
 12893 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12894 ;;      Params:        16       0       0       0       0       0       0
 12895 ;;      Locals:        10       0       0       0       0       0       0
 12896 ;;      Temps:          0       0       0       0       0       0       0
 12897 ;;      Totals:        26       0       0       0       0       0       0
 12898 ;;Total ram usage:       26 bytes
 12899 ;; Hardware stack levels used:    1
 12900 ;; Hardware stack levels required when called:    1
 12901 ;; This function calls:
 12902 ;;		Nothing
 12903 ;; This function is called by:
 12904 ;;		_dtoa
 12905 ;; This function uses a non-reentrant model
 12906 ;;
 12907                           
 12908                           	psect	text48
 12909  003A50                     __ptext48:
 12910                           	callstack 0
 12911  003A50                     ___aodiv:
 12912                           	callstack 22
 12913  003A50  0E00               	movlw	0
 12914  003A52  6E12               	movwf	___aodiv@sign^0,c
 12915  003A54  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 12916  003A56  EF31  F01D         	goto	u4470
 12917  003A5A  EF2F  F01D         	goto	u4471
 12918  003A5E                     u4471:
 12919  003A5E  EF43  F01D         	goto	l4433
 12920  003A62                     u4470:
 12921  003A62  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 12922  003A64  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 12923  003A66  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 12924  003A68  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 12925  003A6A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 12926  003A6C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 12927  003A6E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 12928  003A70  6C09               	negf	___aodiv@divisor^0,c
 12929  003A72  0E00               	movlw	0
 12930  003A74  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 12931  003A76  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 12932  003A78  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 12933  003A7A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 12934  003A7C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 12935  003A7E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 12936  003A80  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 12937  003A82  0E01               	movlw	1
 12938  003A84  6E12               	movwf	___aodiv@sign^0,c
 12939  003A86                     l4433:
 12940  003A86  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 12941  003A88  EF4A  F01D         	goto	u4480
 12942  003A8C  EF48  F01D         	goto	u4481
 12943  003A90                     u4481:
 12944  003A90  EF5C  F01D         	goto	l4439
 12945  003A94                     u4480:
 12946  003A94  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 12947  003A96  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 12948  003A98  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 12949  003A9A  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 12950  003A9C  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 12951  003A9E  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 12952  003AA0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 12953  003AA2  6C01               	negf	___aodiv@dividend^0,c
 12954  003AA4  0E00               	movlw	0
 12955  003AA6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 12956  003AA8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 12957  003AAA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 12958  003AAC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 12959  003AAE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 12960  003AB0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 12961  003AB2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 12962  003AB4  0E01               	movlw	1
 12963  003AB6  1A12               	xorwf	___aodiv@sign^0,f,c
 12964  003AB8                     l4439:
 12965  003AB8  EE20  F013         	lfsr	2,___aodiv@quotient
 12966  003ABC  0E07               	movlw	7
 12967  003ABE                     u4491:
 12968  003ABE  6ADE               	clrf	postinc2,c
 12969  003AC0  06E8               	decf	wreg,f,c
 12970  003AC2  E2FD               	bc	u4491
 12971  003AC4  5009               	movf	___aodiv@divisor^0,w,c
 12972  003AC6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 12973  003AC8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 12974  003ACA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 12975  003ACC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 12976  003ACE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 12977  003AD0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 12978  003AD2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 12979  003AD4  B4D8               	btfsc	status,2,c
 12980  003AD6  EF6F  F01D         	goto	u4501
 12981  003ADA  EF71  F01D         	goto	u4500
 12982  003ADE                     u4501:
 12983  003ADE  EFC3  F01D         	goto	l4461
 12984  003AE2                     u4500:
 12985  003AE2  0E01               	movlw	1
 12986  003AE4  6E11               	movwf	___aodiv@counter^0,c
 12987  003AE6  EF7F  F01D         	goto	l4447
 12988  003AEA                     l4445:
 12989  003AEA  90D8               	bcf	status,0,c
 12990  003AEC  3609               	rlcf	___aodiv@divisor^0,f,c
 12991  003AEE  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 12992  003AF0  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 12993  003AF2  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 12994  003AF4  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 12995  003AF6  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 12996  003AF8  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 12997  003AFA  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 12998  003AFC  2A11               	incf	___aodiv@counter^0,f,c
 12999  003AFE                     l4447:
 13000  003AFE  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13001  003B00  EF84  F01D         	goto	u4511
 13002  003B04  EF86  F01D         	goto	u4510
 13003  003B08                     u4511:
 13004  003B08  EF75  F01D         	goto	l4445
 13005  003B0C                     u4510:
 13006  003B0C                     l4449:
 13007  003B0C  90D8               	bcf	status,0,c
 13008  003B0E  3613               	rlcf	___aodiv@quotient^0,f,c
 13009  003B10  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13010  003B12  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13011  003B14  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13012  003B16  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13013  003B18  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13014  003B1A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13015  003B1C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13016  003B1E  5009               	movf	___aodiv@divisor^0,w,c
 13017  003B20  5C01               	subwf	___aodiv@dividend^0,w,c
 13018  003B22  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13019  003B24  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13020  003B26  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13021  003B28  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13022  003B2A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13023  003B2C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13024  003B2E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13025  003B30  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13026  003B32  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13027  003B34  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13028  003B36  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13029  003B38  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13030  003B3A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13031  003B3C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13032  003B3E  A0D8               	btfss	status,0,c
 13033  003B40  EFA4  F01D         	goto	u4521
 13034  003B44  EFA6  F01D         	goto	u4520
 13035  003B48                     u4521:
 13036  003B48  EFB7  F01D         	goto	l4457
 13037  003B4C                     u4520:
 13038  003B4C  5009               	movf	___aodiv@divisor^0,w,c
 13039  003B4E  5E01               	subwf	___aodiv@dividend^0,f,c
 13040  003B50  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13041  003B52  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13042  003B54  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13043  003B56  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13044  003B58  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13045  003B5A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13046  003B5C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13047  003B5E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13048  003B60  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13049  003B62  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13050  003B64  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13051  003B66  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13052  003B68  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13053  003B6A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13054  003B6C  8013               	bsf	___aodiv@quotient^0,0,c
 13055  003B6E                     l4457:
 13056  003B6E  90D8               	bcf	status,0,c
 13057  003B70  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13058  003B72  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13059  003B74  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13060  003B76  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13061  003B78  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13062  003B7A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13063  003B7C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13064  003B7E  3209               	rrcf	___aodiv@divisor^0,f,c
 13065  003B80  2E11               	decfsz	___aodiv@counter^0,f,c
 13066  003B82  EF86  F01D         	goto	l4449
 13067  003B86                     l4461:
 13068  003B86  5012               	movf	___aodiv@sign^0,w,c
 13069  003B88  B4D8               	btfsc	status,2,c
 13070  003B8A  EFC9  F01D         	goto	u4531
 13071  003B8E  EFCB  F01D         	goto	u4530
 13072  003B92                     u4531:
 13073  003B92  EFDB  F01D         	goto	l4465
 13074  003B96                     u4530:
 13075  003B96  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13076  003B98  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13077  003B9A  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13078  003B9C  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13079  003B9E  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13080  003BA0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13081  003BA2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13082  003BA4  6C13               	negf	___aodiv@quotient^0,c
 13083  003BA6  0E00               	movlw	0
 13084  003BA8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13085  003BAA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13086  003BAC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13087  003BAE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13088  003BB0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13089  003BB2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13090  003BB4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13091  003BB6                     l4465:
 13092  003BB6  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13093  003BBA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13094  003BBE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13095  003BC2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13096  003BC6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13097  003BCA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13098  003BCE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13099  003BD2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13100  003BD6  0012               	return		;funcret
 13101  003BD8                     __end_of___aodiv:
 13102                           	callstack 0
 13103                           
 13104 ;; *************** function _atoi *****************
 13105 ;; Defined at:
 13106 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13107 ;; Parameters:    Size  Location     Type
 13108 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13109 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
 13110 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
 13111 ;; Auto vars:     Size  Location     Type
 13112 ;;  n               2   20[COMRAM] int 
 13113 ;;  neg             2   13[COMRAM] int 
 13114 ;; Return value:  Size  Location     Type
 13115 ;;                  2    7[COMRAM] int 
 13116 ;; Registers used:
 13117 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13118 ;; Tracked objects:
 13119 ;;		On entry : 0/0
 13120 ;;		On exit  : 0/0
 13121 ;;		Unchanged: 0/0
 13122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13123 ;;      Params:         2       0       0       0       0       0       0
 13124 ;;      Locals:         9       0       0       0       0       0       0
 13125 ;;      Temps:          4       0       0       0       0       0       0
 13126 ;;      Totals:        15       0       0       0       0       0       0
 13127 ;;Total ram usage:       15 bytes
 13128 ;; Hardware stack levels used:    1
 13129 ;; Hardware stack levels required when called:    2
 13130 ;; This function calls:
 13131 ;;		___wmul
 13132 ;;		_isdigit
 13133 ;;		_isspace
 13134 ;; This function is called by:
 13135 ;;		_vfpfcnvrt
 13136 ;; This function uses a non-reentrant model
 13137 ;;
 13138                           
 13139                           	psect	text49
 13140  0038C0                     __ptext49:
 13141                           	callstack 0
 13142  0038C0                     _atoi:
 13143                           	callstack 22
 13144  0038C0  0E00               	movlw	0
 13145  0038C2  6E16               	movwf	(atoi@n+1)^0,c
 13146  0038C4  0E00               	movlw	0
 13147  0038C6  6E15               	movwf	atoi@n^0,c
 13148  0038C8  0E00               	movlw	0
 13149  0038CA  6E0F               	movwf	(atoi@neg+1)^0,c
 13150  0038CC  0E00               	movlw	0
 13151  0038CE  6E0E               	movwf	atoi@neg^0,c
 13152  0038D0  EF6C  F01C         	goto	l5419
 13153  0038D4                     l5417:
 13154  0038D4  4A08               	infsnz	atoi@s^0,f,c
 13155  0038D6  2A09               	incf	(atoi@s+1)^0,f,c
 13156  0038D8                     l5419:
 13157  0038D8  0E01               	movlw	1
 13158  0038DA  6E14               	movwf	_atoi$3051^0,c
 13159  0038DC  C008  FFF6         	movff	atoi@s,tblptrl
 13160  0038E0  C009  FFF7         	movff	atoi@s+1,tblptrh
 13161  0038E4                     	if	0	;tblptru may be non-zero
 13162  0038E4                     	endif
 13163  0038E4                     	if	0	;tblptru may be non-zero
 13164  0038E4                     	endif
 13165  0038E4  0008               	tblrd		*
 13166  0038E6  50F5               	movf	tablat,w,c
 13167  0038E8  0A20               	xorlw	32
 13168  0038EA  B4D8               	btfsc	status,2,c
 13169  0038EC  EF7A  F01C         	goto	u6281
 13170  0038F0  EF7C  F01C         	goto	u6280
 13171  0038F4                     u6281:
 13172  0038F4  EF99  F01C         	goto	l5427
 13173  0038F8                     u6280:
 13174  0038F8  0EF7               	movlw	247
 13175  0038FA  6E0A               	movwf	??_atoi^0,c
 13176  0038FC  0EFF               	movlw	255
 13177  0038FE  6E0B               	movwf	(??_atoi+1)^0,c
 13178  003900  C008  FFF6         	movff	atoi@s,tblptrl
 13179  003904  C009  FFF7         	movff	atoi@s+1,tblptrh
 13180  003908                     	if	0	;tblptru may be non-zero
 13181  003908                     	endif
 13182  003908                     	if	0	;tblptru may be non-zero
 13183  003908                     	endif
 13184  003908  0008               	tblrd		*
 13185  00390A  50F5               	movf	tablat,w,c
 13186  00390C  6E0C               	movwf	(??_atoi+2)^0,c
 13187  00390E  6A0D               	clrf	(??_atoi+3)^0,c
 13188  003910  500A               	movf	??_atoi^0,w,c
 13189  003912  260C               	addwf	(??_atoi+2)^0,f,c
 13190  003914  500B               	movf	(??_atoi+1)^0,w,c
 13191  003916  220D               	addwfc	(??_atoi+3)^0,f,c
 13192  003918  500D               	movf	(??_atoi+3)^0,w,c
 13193  00391A  E109               	bnz	u6290
 13194  00391C  0E05               	movlw	5
 13195  00391E  5C0C               	subwf	(??_atoi+2)^0,w,c
 13196  003920  A0D8               	btfss	status,0,c
 13197  003922  EF95  F01C         	goto	u6291
 13198  003926  EF97  F01C         	goto	u6290
 13199  00392A                     u6291:
 13200  00392A  EF99  F01C         	goto	l5427
 13201  00392E                     u6290:
 13202  00392E  0E00               	movlw	0
 13203  003930  6E14               	movwf	_atoi$3051^0,c
 13204  003932                     l5427:
 13205  003932  C014  F010         	movff	_atoi$3051,_atoi$3050
 13206  003936  6A11               	clrf	(_atoi$3050+1)^0,c
 13207  003938  5010               	movf	_atoi$3050^0,w,c
 13208  00393A  1011               	iorwf	(_atoi$3050+1)^0,w,c
 13209  00393C  A4D8               	btfss	status,2,c
 13210  00393E  EFA3  F01C         	goto	u6301
 13211  003942  EFA5  F01C         	goto	u6300
 13212  003946                     u6301:
 13213  003946  EF6A  F01C         	goto	l5417
 13214  00394A                     u6300:
 13215  00394A  EFAF  F01C         	goto	l5437
 13216  00394E                     l5433:
 13217  00394E  0E00               	movlw	0
 13218  003950  6E0F               	movwf	(atoi@neg+1)^0,c
 13219  003952  0E01               	movlw	1
 13220  003954  6E0E               	movwf	atoi@neg^0,c
 13221  003956                     l5435:
 13222  003956  4A08               	infsnz	atoi@s^0,f,c
 13223  003958  2A09               	incf	(atoi@s+1)^0,f,c
 13224  00395A  EFE4  F01C         	goto	l5443
 13225  00395E                     l5437:
 13226  00395E  C008  FFF6         	movff	atoi@s,tblptrl
 13227  003962  C009  FFF7         	movff	atoi@s+1,tblptrh
 13228  003966                     	if	0	;tblptru may be non-zero
 13229  003966                     	endif
 13230  003966                     	if	0	;tblptru may be non-zero
 13231  003966                     	endif
 13232  003966  0008               	tblrd		*
 13233  003968  50F5               	movf	tablat,w,c
 13234  00396A  6E0A               	movwf	??_atoi^0,c
 13235  00396C  6A0B               	clrf	(??_atoi+1)^0,c
 13236                           
 13237                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13238                           ; Switch size 1, requested type "simple"
 13239                           ; Number of cases is 1, Range of values is 0 to 0
 13240                           ; switch strategies available:
 13241                           ; Name         Instructions Cycles
 13242                           ; simple_byte            4     3 (average)
 13243                           ;	Chosen strategy is simple_byte
 13244  00396E  500B               	movf	(??_atoi+1)^0,w,c
 13245  003970  0A00               	xorlw	0	; case 0
 13246  003972  B4D8               	btfsc	status,2,c
 13247  003974  EFBE  F01C         	goto	l6623
 13248  003978  EFE4  F01C         	goto	l5443
 13249  00397C                     l6623:
 13250                           
 13251                           ; Switch size 1, requested type "simple"
 13252                           ; Number of cases is 2, Range of values is 43 to 45
 13253                           ; switch strategies available:
 13254                           ; Name         Instructions Cycles
 13255                           ; simple_byte            7     4 (average)
 13256                           ;	Chosen strategy is simple_byte
 13257  00397C  500A               	movf	??_atoi^0,w,c
 13258  00397E  0A2B               	xorlw	43	; case 43
 13259  003980  B4D8               	btfsc	status,2,c
 13260  003982  EFAB  F01C         	goto	l5435
 13261  003986  0A06               	xorlw	6	; case 45
 13262  003988  B4D8               	btfsc	status,2,c
 13263  00398A  EFA7  F01C         	goto	l5433
 13264  00398E  EFE4  F01C         	goto	l5443
 13265  003992                     l5439:
 13266  003992  C015  F001         	movff	atoi@n,___wmul@multiplier
 13267  003996  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13268  00399A  0E00               	movlw	0
 13269  00399C  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13270  00399E  0E0A               	movlw	10
 13271  0039A0  6E03               	movwf	___wmul@multiplicand^0,c
 13272  0039A2  EC96  F02B         	call	___wmul	;wreg free
 13273  0039A6  C008  FFF6         	movff	atoi@s,tblptrl
 13274  0039AA  C009  FFF7         	movff	atoi@s+1,tblptrh
 13275  0039AE                     	if	0	;tblptru may be non-zero
 13276  0039AE                     	endif
 13277  0039AE                     	if	0	;tblptru may be non-zero
 13278  0039AE                     	endif
 13279  0039AE  0008               	tblrd		*
 13280  0039B0  50F5               	movf	tablat,w,c
 13281  0039B2  5E01               	subwf	?___wmul^0,f,c
 13282  0039B4  0E00               	movlw	0
 13283  0039B6  5A02               	subwfb	(?___wmul+1)^0,f,c
 13284  0039B8  0E30               	movlw	48
 13285  0039BA  2401               	addwf	?___wmul^0,w,c
 13286  0039BC  6E15               	movwf	atoi@n^0,c
 13287  0039BE  0E00               	movlw	0
 13288  0039C0  2002               	addwfc	(?___wmul+1)^0,w,c
 13289  0039C2  6E16               	movwf	(atoi@n+1)^0,c
 13290  0039C4  EFAB  F01C         	goto	l5435
 13291  0039C8                     l5443:
 13292  0039C8  0ED0               	movlw	208
 13293  0039CA  6E0A               	movwf	??_atoi^0,c
 13294  0039CC  0EFF               	movlw	255
 13295  0039CE  6E0B               	movwf	(??_atoi+1)^0,c
 13296  0039D0  C008  FFF6         	movff	atoi@s,tblptrl
 13297  0039D4  C009  FFF7         	movff	atoi@s+1,tblptrh
 13298  0039D8                     	if	0	;tblptru may be non-zero
 13299  0039D8                     	endif
 13300  0039D8                     	if	0	;tblptru may be non-zero
 13301  0039D8                     	endif
 13302  0039D8  0008               	tblrd		*
 13303  0039DA  50F5               	movf	tablat,w,c
 13304  0039DC  6E0C               	movwf	(??_atoi+2)^0,c
 13305  0039DE  6A0D               	clrf	(??_atoi+3)^0,c
 13306  0039E0  500A               	movf	??_atoi^0,w,c
 13307  0039E2  260C               	addwf	(??_atoi+2)^0,f,c
 13308  0039E4  500B               	movf	(??_atoi+1)^0,w,c
 13309  0039E6  220D               	addwfc	(??_atoi+3)^0,f,c
 13310  0039E8  500D               	movf	(??_atoi+3)^0,w,c
 13311  0039EA  E10A               	bnz	u6310
 13312  0039EC  0E0A               	movlw	10
 13313  0039EE  5C0C               	subwf	(??_atoi+2)^0,w,c
 13314  0039F0  A0D8               	btfss	status,0,c
 13315  0039F2  EFFD  F01C         	goto	u6311
 13316  0039F6  EF00  F01D         	goto	u6310
 13317  0039FA                     u6311:
 13318  0039FA  0E01               	movlw	1
 13319  0039FC  EF01  F01D         	goto	u6320
 13320  003A00                     u6310:
 13321  003A00  0E00               	movlw	0
 13322  003A02                     u6320:
 13323  003A02  6E12               	movwf	_atoi$3052^0,c
 13324  003A04  6A13               	clrf	(_atoi$3052+1)^0,c
 13325  003A06  5012               	movf	_atoi$3052^0,w,c
 13326  003A08  1013               	iorwf	(_atoi$3052+1)^0,w,c
 13327  003A0A  A4D8               	btfss	status,2,c
 13328  003A0C  EF0A  F01D         	goto	u6331
 13329  003A10  EF0C  F01D         	goto	u6330
 13330  003A14                     u6331:
 13331  003A14  EFC9  F01C         	goto	l5439
 13332  003A18                     u6330:
 13333  003A18  500E               	movf	atoi@neg^0,w,c
 13334  003A1A  100F               	iorwf	(atoi@neg+1)^0,w,c
 13335  003A1C  A4D8               	btfss	status,2,c
 13336  003A1E  EF13  F01D         	goto	u6341
 13337  003A22  EF15  F01D         	goto	u6340
 13338  003A26                     u6341:
 13339  003A26  EF23  F01D         	goto	l1636
 13340  003A2A                     u6340:
 13341  003A2A  C015  F00A         	movff	atoi@n,??_atoi
 13342  003A2E  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13343  003A32  1E0A               	comf	??_atoi^0,f,c
 13344  003A34  1E0B               	comf	(??_atoi+1)^0,f,c
 13345  003A36  4A0A               	infsnz	??_atoi^0,f,c
 13346  003A38  2A0B               	incf	(??_atoi+1)^0,f,c
 13347  003A3A  C00A  F008         	movff	??_atoi,?_atoi
 13348  003A3E  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13349  003A42  EF27  F01D         	goto	l1639
 13350  003A46                     l1636:
 13351  003A46  C015  F008         	movff	atoi@n,?_atoi
 13352  003A4A  C016  F009         	movff	atoi@n+1,?_atoi+1
 13353  003A4E                     l1639:
 13354  003A4E  0012               	return		;funcret
 13355  003A50                     __end_of_atoi:
 13356                           	callstack 0
 13357                           
 13358 ;; *************** function _isspace *****************
 13359 ;; Defined at:
 13360 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13361 ;; Parameters:    Size  Location     Type
 13362 ;;  c               2    0[COMRAM] int 
 13363 ;; Auto vars:     Size  Location     Type
 13364 ;;		None
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  2    0[COMRAM] int 
 13367 ;; Registers used:
 13368 ;;		wreg, status,2, status,0
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13374 ;;      Params:         2       0       0       0       0       0       0
 13375 ;;      Locals:         1       0       0       0       0       0       0
 13376 ;;      Temps:          4       0       0       0       0       0       0
 13377 ;;      Totals:         7       0       0       0       0       0       0
 13378 ;;Total ram usage:        7 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; Hardware stack levels required when called:    1
 13381 ;; This function calls:
 13382 ;;		Nothing
 13383 ;; This function is called by:
 13384 ;;		_atoi
 13385 ;; This function uses a non-reentrant model
 13386 ;;
 13387                           
 13388                           	psect	text50
 13389  00528E                     __ptext50:
 13390                           	callstack 0
 13391  00528E                     _isspace:
 13392                           	callstack 22
 13393  00528E  0E01               	movlw	1
 13394  005290  6E07               	movwf	_isspace$3081^0,c
 13395  005292  0E20               	movlw	32
 13396  005294  1801               	xorwf	isspace@c^0,w,c
 13397  005296  1002               	iorwf	(isspace@c+1)^0,w,c
 13398  005298  B4D8               	btfsc	status,2,c
 13399  00529A  EF51  F029         	goto	u5591
 13400  00529E  EF53  F029         	goto	u5590
 13401  0052A2                     u5591:
 13402  0052A2  EF6C  F029         	goto	l5051
 13403  0052A6                     u5590:
 13404  0052A6  0EF7               	movlw	247
 13405  0052A8  6E03               	movwf	??_isspace^0,c
 13406  0052AA  0EFF               	movlw	255
 13407  0052AC  6E04               	movwf	(??_isspace+1)^0,c
 13408  0052AE  C001  F005         	movff	isspace@c,??_isspace+2
 13409  0052B2  C002  F006         	movff	isspace@c+1,??_isspace+3
 13410  0052B6  5003               	movf	??_isspace^0,w,c
 13411  0052B8  2605               	addwf	(??_isspace+2)^0,f,c
 13412  0052BA  5004               	movf	(??_isspace+1)^0,w,c
 13413  0052BC  2206               	addwfc	(??_isspace+3)^0,f,c
 13414  0052BE  5006               	movf	(??_isspace+3)^0,w,c
 13415  0052C0  E109               	bnz	u5600
 13416  0052C2  0E05               	movlw	5
 13417  0052C4  5C05               	subwf	(??_isspace+2)^0,w,c
 13418  0052C6  A0D8               	btfss	status,0,c
 13419  0052C8  EF68  F029         	goto	u5601
 13420  0052CC  EF6A  F029         	goto	u5600
 13421  0052D0                     u5601:
 13422  0052D0  EF6C  F029         	goto	l5051
 13423  0052D4                     u5600:
 13424  0052D4  0E00               	movlw	0
 13425  0052D6  6E07               	movwf	_isspace$3081^0,c
 13426  0052D8                     l5051:
 13427  0052D8  C007  F001         	movff	_isspace$3081,?_isspace
 13428  0052DC  6A02               	clrf	(?_isspace+1)^0,c
 13429  0052DE  0012               	return		;funcret
 13430  0052E0                     __end_of_isspace:
 13431                           	callstack 0
 13432                           
 13433 ;; *************** function _isdigit *****************
 13434 ;; Defined at:
 13435 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13436 ;; Parameters:    Size  Location     Type
 13437 ;;  c               2    0[COMRAM] int 
 13438 ;; Auto vars:     Size  Location     Type
 13439 ;;		None
 13440 ;; Return value:  Size  Location     Type
 13441 ;;                  2    0[COMRAM] int 
 13442 ;; Registers used:
 13443 ;;		wreg, status,2, status,0
 13444 ;; Tracked objects:
 13445 ;;		On entry : 0/0
 13446 ;;		On exit  : 0/0
 13447 ;;		Unchanged: 0/0
 13448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13449 ;;      Params:         2       0       0       0       0       0       0
 13450 ;;      Locals:         0       0       0       0       0       0       0
 13451 ;;      Temps:          4       0       0       0       0       0       0
 13452 ;;      Totals:         6       0       0       0       0       0       0
 13453 ;;Total ram usage:        6 bytes
 13454 ;; Hardware stack levels used:    1
 13455 ;; Hardware stack levels required when called:    1
 13456 ;; This function calls:
 13457 ;;		Nothing
 13458 ;; This function is called by:
 13459 ;;		_vfpfcnvrt
 13460 ;;		_atoi
 13461 ;; This function uses a non-reentrant model
 13462 ;;
 13463                           
 13464                           	psect	text51
 13465  00559E                     __ptext51:
 13466                           	callstack 0
 13467  00559E                     _isdigit:
 13468                           	callstack 23
 13469  00559E  0ED0               	movlw	208
 13470  0055A0  6E03               	movwf	??_isdigit^0,c
 13471  0055A2  0EFF               	movlw	255
 13472  0055A4  6E04               	movwf	(??_isdigit+1)^0,c
 13473  0055A6  C001  F005         	movff	isdigit@c,??_isdigit+2
 13474  0055AA  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13475  0055AE  5003               	movf	??_isdigit^0,w,c
 13476  0055B0  2605               	addwf	(??_isdigit+2)^0,f,c
 13477  0055B2  5004               	movf	(??_isdigit+1)^0,w,c
 13478  0055B4  2206               	addwfc	(??_isdigit+3)^0,f,c
 13479  0055B6  5006               	movf	(??_isdigit+3)^0,w,c
 13480  0055B8  E10A               	bnz	u5570
 13481  0055BA  0E0A               	movlw	10
 13482  0055BC  5C05               	subwf	(??_isdigit+2)^0,w,c
 13483  0055BE  A0D8               	btfss	status,0,c
 13484  0055C0  EFE4  F02A         	goto	u5571
 13485  0055C4  EFE7  F02A         	goto	u5570
 13486  0055C8                     u5571:
 13487  0055C8  0E01               	movlw	1
 13488  0055CA  EFE8  F02A         	goto	u5580
 13489  0055CE                     u5570:
 13490  0055CE  0E00               	movlw	0
 13491  0055D0                     u5580:
 13492  0055D0  6E01               	movwf	?_isdigit^0,c
 13493  0055D2  6A02               	clrf	(?_isdigit+1)^0,c
 13494  0055D4  0012               	return		;funcret
 13495  0055D6                     __end_of_isdigit:
 13496                           	callstack 0
 13497                           
 13498 ;; *************** function ___wmul *****************
 13499 ;; Defined at:
 13500 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13501 ;; Parameters:    Size  Location     Type
 13502 ;;  multiplier      2    0[COMRAM] unsigned int 
 13503 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13504 ;; Auto vars:     Size  Location     Type
 13505 ;;  product         2    4[COMRAM] unsigned int 
 13506 ;; Return value:  Size  Location     Type
 13507 ;;                  2    0[COMRAM] unsigned int 
 13508 ;; Registers used:
 13509 ;;		wreg, status,2, status,0, prodl, prodh
 13510 ;; Tracked objects:
 13511 ;;		On entry : 0/0
 13512 ;;		On exit  : 0/0
 13513 ;;		Unchanged: 0/0
 13514 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13515 ;;      Params:         4       0       0       0       0       0       0
 13516 ;;      Locals:         2       0       0       0       0       0       0
 13517 ;;      Temps:          0       0       0       0       0       0       0
 13518 ;;      Totals:         6       0       0       0       0       0       0
 13519 ;;Total ram usage:        6 bytes
 13520 ;; Hardware stack levels used:    1
 13521 ;; Hardware stack levels required when called:    1
 13522 ;; This function calls:
 13523 ;;		Nothing
 13524 ;; This function is called by:
 13525 ;;		_atoi
 13526 ;; This function uses a non-reentrant model
 13527 ;;
 13528                           
 13529                           	psect	text52
 13530  00572C                     __ptext52:
 13531                           	callstack 0
 13532  00572C                     ___wmul:
 13533                           	callstack 22
 13534  00572C  5001               	movf	___wmul@multiplier^0,w,c
 13535  00572E  0203               	mulwf	___wmul@multiplicand^0,c
 13536  005730  CFF3 F005          	movff	prodl,___wmul@product
 13537  005734  CFF4 F006          	movff	prodh,___wmul@product+1
 13538  005738  5001               	movf	___wmul@multiplier^0,w,c
 13539  00573A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 13540  00573C  50F3               	movf	243,w,c
 13541  00573E  2606               	addwf	(___wmul@product+1)^0,f,c
 13542  005740  5002               	movf	(___wmul@multiplier+1)^0,w,c
 13543  005742  0203               	mulwf	___wmul@multiplicand^0,c
 13544  005744  50F3               	movf	243,w,c
 13545  005746  2606               	addwf	(___wmul@product+1)^0,f,c
 13546  005748  C005  F001         	movff	___wmul@product,?___wmul
 13547  00574C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 13548  005750  0012               	return		;funcret
 13549  005752                     __end_of___wmul:
 13550                           	callstack 0
 13551                           
 13552 ;; *************** function _eepromWrite *****************
 13553 ;; Defined at:
 13554 ;;		line 69 in file "fs_eeprom.c"
 13555 ;; Parameters:    Size  Location     Type
 13556 ;;  address         1    wreg     unsigned char 
 13557 ;;  data            1    0[COMRAM] unsigned char 
 13558 ;; Auto vars:     Size  Location     Type
 13559 ;;  address         1    1[COMRAM] unsigned char 
 13560 ;; Return value:  Size  Location     Type
 13561 ;;                  1    wreg      void 
 13562 ;; Registers used:
 13563 ;;		wreg, status,2
 13564 ;; Tracked objects:
 13565 ;;		On entry : 0/0
 13566 ;;		On exit  : 0/0
 13567 ;;		Unchanged: 0/0
 13568 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13569 ;;      Params:         1       0       0       0       0       0       0
 13570 ;;      Locals:         1       0       0       0       0       0       0
 13571 ;;      Temps:          0       0       0       0       0       0       0
 13572 ;;      Totals:         2       0       0       0       0       0       0
 13573 ;;Total ram usage:        2 bytes
 13574 ;; Hardware stack levels used:    1
 13575 ;; Hardware stack levels required when called:    1
 13576 ;; This function calls:
 13577 ;;		Nothing
 13578 ;; This function is called by:
 13579 ;;		_speedLimitSettingMenu
 13580 ;;		_stopTimeSettingMenu
 13581 ;;		_driverTimeSettingMenu
 13582 ;; This function uses a non-reentrant model
 13583 ;;
 13584                           
 13585                           	psect	text53
 13586  0056AE                     __ptext53:
 13587                           	callstack 0
 13588  0056AE                     _eepromWrite:
 13589                           	callstack 26
 13590                           
 13591                           ;incstack = 0
 13592                           ;eepromWrite@address stored from wreg
 13593  0056AE  6E02               	movwf	eepromWrite@address^0,c
 13594  0056B0                     
 13595                           ;fs_eeprom.c: 69: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 70: {;fs_
      +                          eeprom.c: 73:     EEADR = (uint8_t)address;
 13596  0056B0  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 13597  0056B4                     
 13598                           ;fs_eeprom.c: 75:     EEDATA = data;
 13599  0056B4  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 13600  0056B8                     
 13601                           ;fs_eeprom.c: 76:     EECON1bits.EEPGD = 0;
 13602  0056B8  9EA6               	bcf	166,7,c	;volsfr
 13603  0056BA                     
 13604                           ;fs_eeprom.c: 77:     EECON1bits.CFGS = 0;
 13605  0056BA  9CA6               	bcf	166,6,c	;volsfr
 13606  0056BC                     
 13607                           ;fs_eeprom.c: 78:     EECON1bits.WREN = 1;
 13608  0056BC  84A6               	bsf	166,2,c	;volsfr
 13609  0056BE                     
 13610                           ;fs_eeprom.c: 82:     EECON2 = 0x55;
 13611  0056BE  0E55               	movlw	85
 13612  0056C0  6EA7               	movwf	167,c	;volsfr
 13613  0056C2                     
 13614                           ;fs_eeprom.c: 83:     EECON2 = 0xAA;
 13615  0056C2  0EAA               	movlw	170
 13616  0056C4  6EA7               	movwf	167,c	;volsfr
 13617  0056C6                     
 13618                           ;fs_eeprom.c: 84:     EECON1bits.WR = 1;
 13619  0056C6  82A6               	bsf	166,1,c	;volsfr
 13620  0056C8                     l98:
 13621                           
 13622                           ;fs_eeprom.c: 87:     while(PIR2bits.EEIF == 0)
 13623  0056C8  A8A1               	btfss	161,4,c	;volatile
 13624  0056CA  EF69  F02B         	goto	u6881
 13625  0056CE  EF6B  F02B         	goto	u6880
 13626  0056D2                     u6881:
 13627  0056D2  EF64  F02B         	goto	l98
 13628  0056D6                     u6880:
 13629  0056D6                     
 13630                           ;fs_eeprom.c: 92:     PIR2bits.EEIF = 0;
 13631  0056D6  98A1               	bcf	161,4,c	;volatile
 13632                           
 13633                           ;fs_eeprom.c: 93:     EECON1bits.WREN = 0;
 13634  0056D8  94A6               	bcf	166,2,c	;volsfr
 13635  0056DA  0012               	return		;funcret
 13636  0056DC                     __end_of_eepromWrite:
 13637                           	callstack 0
 13638                           
 13639 ;; *************** function _buttonControlFlags *****************
 13640 ;; Defined at:
 13641 ;;		line 76 in file "fs_menu_controller.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;		None
 13644 ;; Auto vars:     Size  Location     Type
 13645 ;;		None
 13646 ;; Return value:  Size  Location     Type
 13647 ;;                  1    wreg      void 
 13648 ;; Registers used:
 13649 ;;		wreg, status,2, status,0
 13650 ;; Tracked objects:
 13651 ;;		On entry : 0/0
 13652 ;;		On exit  : 0/0
 13653 ;;		Unchanged: 0/0
 13654 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13655 ;;      Params:         0       0       0       0       0       0       0
 13656 ;;      Locals:         0       0       0       0       0       0       0
 13657 ;;      Temps:          0       0       0       0       0       0       0
 13658 ;;      Totals:         0       0       0       0       0       0       0
 13659 ;;Total ram usage:        0 bytes
 13660 ;; Hardware stack levels used:    1
 13661 ;; Hardware stack levels required when called:    1
 13662 ;; This function calls:
 13663 ;;		Nothing
 13664 ;; This function is called by:
 13665 ;;		_loopTaskMenuControl
 13666 ;; This function uses a non-reentrant model
 13667 ;;
 13668                           
 13669                           	psect	text54
 13670  0031E2                     __ptext54:
 13671                           	callstack 0
 13672  0031E2                     _buttonControlFlags:
 13673                           	callstack 28
 13674  0031E2                     
 13675                           ;fs_menu_controller.c: 79:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 13676  0031E2  0101               	movlb	1	; () banked
 13677  0031E4  519D               	movf	_button_bounce_controller& (0+255),w,b
 13678  0031E6  A4D8               	btfss	status,2,c
 13679  0031E8  EFF8  F018         	goto	u7571
 13680  0031EC  EFFA  F018         	goto	u7570
 13681  0031F0                     u7571:
 13682  0031F0  EF05  F019         	goto	l6359
 13683  0031F4                     u7570:
 13684  0031F4                     
 13685                           ; BSR set to: 1
 13686  0031F4  BE81               	btfsc	129,7,c	;volatile
 13687  0031F6  EFFF  F018         	goto	u7581
 13688  0031FA  EF01  F019         	goto	u7580
 13689  0031FE                     u7581:
 13690  0031FE  EF05  F019         	goto	l6359
 13691  003202                     u7580:
 13692  003202                     
 13693                           ; BSR set to: 1
 13694                           ;fs_menu_controller.c: 80:     {;fs_menu_controller.c: 81:         button_bounce_control
      +                          ler.menu = 1;
 13695  003202  0E01               	movlw	1
 13696  003204  6F9D               	movwf	_button_bounce_controller& (0+255),b
 13697                           
 13698                           ;fs_menu_controller.c: 82:         menu_flags.menu_input_flag = 1;
 13699  003206  0E01               	movlw	1
 13700  003208  6F97               	movwf	_menu_flags& (0+255),b
 13701  00320A                     l6359:
 13702                           
 13703                           ; BSR set to: 1
 13704                           ;fs_menu_controller.c: 85:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 13705  00320A  AE81               	btfss	129,7,c	;volatile
 13706  00320C  EF0A  F019         	goto	u7591
 13707  003210  EF0C  F019         	goto	u7590
 13708  003214                     u7591:
 13709  003214  EF18  F019         	goto	l417
 13710  003218                     u7590:
 13711  003218                     
 13712                           ; BSR set to: 1
 13713  003218  059D               	decf	_button_bounce_controller& (0+255),w,b
 13714  00321A  A4D8               	btfss	status,2,c
 13715  00321C  EF12  F019         	goto	u7601
 13716  003220  EF14  F019         	goto	u7600
 13717  003224                     u7601:
 13718  003224  EF18  F019         	goto	l417
 13719  003228                     u7600:
 13720  003228                     
 13721                           ; BSR set to: 1
 13722                           ;fs_menu_controller.c: 86:     {;fs_menu_controller.c: 87:         button_bounce_control
      +                          ler.menu = 0;
 13723  003228  0E00               	movlw	0
 13724  00322A  6F9D               	movwf	_button_bounce_controller& (0+255),b
 13725                           
 13726                           ;fs_menu_controller.c: 88:         menu_flags.menu_input_flag = 0;
 13727  00322C  0E00               	movlw	0
 13728  00322E  6F97               	movwf	_menu_flags& (0+255),b
 13729  003230                     l417:
 13730                           
 13731                           ; BSR set to: 1
 13732                           ;fs_menu_controller.c: 92:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 13733  003230  51A0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 13734  003232  A4D8               	btfss	status,2,c
 13735  003234  EF1E  F019         	goto	u7611
 13736  003238  EF20  F019         	goto	u7610
 13737  00323C                     u7611:
 13738  00323C  EF2B  F019         	goto	l6369
 13739  003240                     u7610:
 13740  003240                     
 13741                           ; BSR set to: 1
 13742  003240  B483               	btfsc	131,2,c	;volatile
 13743  003242  EF25  F019         	goto	u7621
 13744  003246  EF27  F019         	goto	u7620
 13745  00324A                     u7621:
 13746  00324A  EF2B  F019         	goto	l6369
 13747  00324E                     u7620:
 13748  00324E                     
 13749                           ; BSR set to: 1
 13750                           ;fs_menu_controller.c: 93:     {;fs_menu_controller.c: 94:         button_bounce_control
      +                          ler.pause = 1;
 13751  00324E  0E01               	movlw	1
 13752  003250  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 13753                           
 13754                           ;fs_menu_controller.c: 95:         menu_flags.menu_pause_flag = 1;
 13755  003252  0E01               	movlw	1
 13756  003254  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 13757  003256                     l6369:
 13758                           
 13759                           ; BSR set to: 1
 13760                           ;fs_menu_controller.c: 97:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 13761  003256  A483               	btfss	131,2,c	;volatile
 13762  003258  EF30  F019         	goto	u7631
 13763  00325C  EF32  F019         	goto	u7630
 13764  003260                     u7631:
 13765  003260  EF3E  F019         	goto	l419
 13766  003264                     u7630:
 13767  003264                     
 13768                           ; BSR set to: 1
 13769  003264  05A0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 13770  003266  A4D8               	btfss	status,2,c
 13771  003268  EF38  F019         	goto	u7641
 13772  00326C  EF3A  F019         	goto	u7640
 13773  003270                     u7641:
 13774  003270  EF3E  F019         	goto	l419
 13775  003274                     u7640:
 13776  003274                     
 13777                           ; BSR set to: 1
 13778                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 0;
 13779  003274  0E00               	movlw	0
 13780  003276  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 13781                           
 13782                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 0;
 13783  003278  0E00               	movlw	0
 13784  00327A  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 13785  00327C                     l419:
 13786                           
 13787                           ; BSR set to: 1
 13788                           ;fs_menu_controller.c: 104:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 13789  00327C  519E               	movf	(_button_bounce_controller+1)& (0+255),w,b
 13790  00327E  A4D8               	btfss	status,2,c
 13791  003280  EF44  F019         	goto	u7651
 13792  003284  EF46  F019         	goto	u7650
 13793  003288                     u7651:
 13794  003288  EF51  F019         	goto	l6379
 13795  00328C                     u7650:
 13796  00328C                     
 13797                           ; BSR set to: 1
 13798  00328C  B083               	btfsc	131,0,c	;volatile
 13799  00328E  EF4B  F019         	goto	u7661
 13800  003292  EF4D  F019         	goto	u7660
 13801  003296                     u7661:
 13802  003296  EF51  F019         	goto	l6379
 13803  00329A                     u7660:
 13804  00329A                     
 13805                           ; BSR set to: 1
 13806                           ;fs_menu_controller.c: 105:     {;fs_menu_controller.c: 106:         button_bounce_contr
      +                          oller.start = 1;
 13807  00329A  0E01               	movlw	1
 13808  00329C  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 13809                           
 13810                           ;fs_menu_controller.c: 107:         menu_flags.menu_start_flag = 1;
 13811  00329E  0E01               	movlw	1
 13812  0032A0  6F98               	movwf	(_menu_flags+1)& (0+255),b
 13813  0032A2                     l6379:
 13814                           
 13815                           ; BSR set to: 1
 13816                           ;fs_menu_controller.c: 109:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 13817  0032A2  A083               	btfss	131,0,c	;volatile
 13818  0032A4  EF56  F019         	goto	u7671
 13819  0032A8  EF58  F019         	goto	u7670
 13820  0032AC                     u7671:
 13821  0032AC  EF64  F019         	goto	l421
 13822  0032B0                     u7670:
 13823  0032B0                     
 13824                           ; BSR set to: 1
 13825  0032B0  059E               	decf	(_button_bounce_controller+1)& (0+255),w,b
 13826  0032B2  A4D8               	btfss	status,2,c
 13827  0032B4  EF5E  F019         	goto	u7681
 13828  0032B8  EF60  F019         	goto	u7680
 13829  0032BC                     u7681:
 13830  0032BC  EF64  F019         	goto	l421
 13831  0032C0                     u7680:
 13832  0032C0                     
 13833                           ; BSR set to: 1
 13834                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 0;
 13835  0032C0  0E00               	movlw	0
 13836  0032C2  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 13837                           
 13838                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 0;
 13839  0032C4  0E00               	movlw	0
 13840  0032C6  6F98               	movwf	(_menu_flags+1)& (0+255),b
 13841  0032C8                     l421:
 13842                           
 13843                           ; BSR set to: 1
 13844                           ;fs_menu_controller.c: 116:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 13845  0032C8  519F               	movf	(_button_bounce_controller+2)& (0+255),w,b
 13846  0032CA  A4D8               	btfss	status,2,c
 13847  0032CC  EF6A  F019         	goto	u7691
 13848  0032D0  EF6C  F019         	goto	u7690
 13849  0032D4                     u7691:
 13850  0032D4  EF77  F019         	goto	l6389
 13851  0032D8                     u7690:
 13852  0032D8                     
 13853                           ; BSR set to: 1
 13854  0032D8  B283               	btfsc	131,1,c	;volatile
 13855  0032DA  EF71  F019         	goto	u7701
 13856  0032DE  EF73  F019         	goto	u7700
 13857  0032E2                     u7701:
 13858  0032E2  EF77  F019         	goto	l6389
 13859  0032E6                     u7700:
 13860  0032E6                     
 13861                           ; BSR set to: 1
 13862                           ;fs_menu_controller.c: 117:     {;fs_menu_controller.c: 118:         button_bounce_contr
      +                          oller.stop = 1;
 13863  0032E6  0E01               	movlw	1
 13864  0032E8  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 13865                           
 13866                           ;fs_menu_controller.c: 119:         menu_flags.menu_stop_flag = 1;
 13867  0032EA  0E01               	movlw	1
 13868  0032EC  6F99               	movwf	(_menu_flags+2)& (0+255),b
 13869  0032EE                     l6389:
 13870                           
 13871                           ; BSR set to: 1
 13872                           ;fs_menu_controller.c: 121:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 13873  0032EE  A283               	btfss	131,1,c	;volatile
 13874  0032F0  EF7C  F019         	goto	u7711
 13875  0032F4  EF7E  F019         	goto	u7710
 13876  0032F8                     u7711:
 13877  0032F8  EF8A  F019         	goto	l423
 13878  0032FC                     u7710:
 13879  0032FC                     
 13880                           ; BSR set to: 1
 13881  0032FC  059F               	decf	(_button_bounce_controller+2)& (0+255),w,b
 13882  0032FE  A4D8               	btfss	status,2,c
 13883  003300  EF84  F019         	goto	u7721
 13884  003304  EF86  F019         	goto	u7720
 13885  003308                     u7721:
 13886  003308  EF8A  F019         	goto	l423
 13887  00330C                     u7720:
 13888  00330C                     
 13889                           ; BSR set to: 1
 13890                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 0;
 13891  00330C  0E00               	movlw	0
 13892  00330E  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 13893                           
 13894                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 0;
 13895  003310  0E00               	movlw	0
 13896  003312  6F99               	movwf	(_menu_flags+2)& (0+255),b
 13897  003314                     l423:
 13898                           
 13899                           ; BSR set to: 1
 13900                           ;fs_menu_controller.c: 128:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 13901  003314  51A2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 13902  003316  A4D8               	btfss	status,2,c
 13903  003318  EF90  F019         	goto	u7731
 13904  00331C  EF92  F019         	goto	u7730
 13905  003320                     u7731:
 13906  003320  EF9D  F019         	goto	l6399
 13907  003324                     u7730:
 13908  003324                     
 13909                           ; BSR set to: 1
 13910  003324  BC81               	btfsc	129,6,c	;volatile
 13911  003326  EF97  F019         	goto	u7741
 13912  00332A  EF99  F019         	goto	u7740
 13913  00332E                     u7741:
 13914  00332E  EF9D  F019         	goto	l6399
 13915  003332                     u7740:
 13916  003332                     
 13917                           ; BSR set to: 1
 13918                           ;fs_menu_controller.c: 129:     {;fs_menu_controller.c: 130:         button_bounce_contr
      +                          oller.increase = 1;
 13919  003332  0E01               	movlw	1
 13920  003334  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 13921                           
 13922                           ;fs_menu_controller.c: 131:         menu_flags.menu_increase_flag = 1;
 13923  003336  0E01               	movlw	1
 13924  003338  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 13925  00333A                     l6399:
 13926                           
 13927                           ; BSR set to: 1
 13928                           ;fs_menu_controller.c: 133:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 13929  00333A  AC81               	btfss	129,6,c	;volatile
 13930  00333C  EFA2  F019         	goto	u7751
 13931  003340  EFA4  F019         	goto	u7750
 13932  003344                     u7751:
 13933  003344  EFB0  F019         	goto	l425
 13934  003348                     u7750:
 13935  003348                     
 13936                           ; BSR set to: 1
 13937  003348  05A2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 13938  00334A  A4D8               	btfss	status,2,c
 13939  00334C  EFAA  F019         	goto	u7761
 13940  003350  EFAC  F019         	goto	u7760
 13941  003354                     u7761:
 13942  003354  EFB0  F019         	goto	l425
 13943  003358                     u7760:
 13944  003358                     
 13945                           ; BSR set to: 1
 13946                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 13947  003358  0E00               	movlw	0
 13948  00335A  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 13949                           
 13950                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 13951  00335C  0E00               	movlw	0
 13952  00335E  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 13953  003360                     l425:
 13954                           
 13955                           ; BSR set to: 1
 13956                           ;fs_menu_controller.c: 140:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 13957  003360  51A1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 13958  003362  A4D8               	btfss	status,2,c
 13959  003364  EFB6  F019         	goto	u7771
 13960  003368  EFB8  F019         	goto	u7770
 13961  00336C                     u7771:
 13962  00336C  EFC3  F019         	goto	l6409
 13963  003370                     u7770:
 13964  003370                     
 13965                           ; BSR set to: 1
 13966  003370  B883               	btfsc	131,4,c	;volatile
 13967  003372  EFBD  F019         	goto	u7781
 13968  003376  EFBF  F019         	goto	u7780
 13969  00337A                     u7781:
 13970  00337A  EFC3  F019         	goto	l6409
 13971  00337E                     u7780:
 13972  00337E                     
 13973                           ; BSR set to: 1
 13974                           ;fs_menu_controller.c: 141:     {;fs_menu_controller.c: 142:         button_bounce_contr
      +                          oller.decrease = 1;
 13975  00337E  0E01               	movlw	1
 13976  003380  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 13977                           
 13978                           ;fs_menu_controller.c: 143:         menu_flags.menu_decrease_flag = 1;
 13979  003382  0E01               	movlw	1
 13980  003384  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 13981  003386                     l6409:
 13982                           
 13983                           ; BSR set to: 1
 13984                           ;fs_menu_controller.c: 145:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 13985  003386  A883               	btfss	131,4,c	;volatile
 13986  003388  EFC8  F019         	goto	u7791
 13987  00338C  EFCA  F019         	goto	u7790
 13988  003390                     u7791:
 13989  003390  EFD6  F019         	goto	l428
 13990  003394                     u7790:
 13991  003394                     
 13992                           ; BSR set to: 1
 13993  003394  05A1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 13994  003396  A4D8               	btfss	status,2,c
 13995  003398  EFD0  F019         	goto	u7801
 13996  00339C  EFD2  F019         	goto	u7800
 13997  0033A0                     u7801:
 13998  0033A0  EFD6  F019         	goto	l428
 13999  0033A4                     u7800:
 14000  0033A4                     
 14001                           ; BSR set to: 1
 14002                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 14003  0033A4  0E00               	movlw	0
 14004  0033A6  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 14005                           
 14006                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 14007  0033A8  0E00               	movlw	0
 14008  0033AA  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 14009  0033AC                     l428:
 14010                           
 14011                           ; BSR set to: 1
 14012  0033AC  0012               	return		;funcret
 14013  0033AE                     __end_of_buttonControlFlags:
 14014                           	callstack 0
 14015                           
 14016 ;; *************** function _loopTaskInit *****************
 14017 ;; Defined at:
 14018 ;;		line 86 in file "fs_main.c"
 14019 ;; Parameters:    Size  Location     Type
 14020 ;;		None
 14021 ;; Auto vars:     Size  Location     Type
 14022 ;;		None
 14023 ;; Return value:  Size  Location     Type
 14024 ;;                  1    wreg      void 
 14025 ;; Registers used:
 14026 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14027 ;; Tracked objects:
 14028 ;;		On entry : 0/0
 14029 ;;		On exit  : 0/0
 14030 ;;		Unchanged: 0/0
 14031 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14032 ;;      Params:         0       0       0       0       0       0       0
 14033 ;;      Locals:         0       0       0       0       0       0       0
 14034 ;;      Temps:          0       0       0       0       0       0       0
 14035 ;;      Totals:         0       0       0       0       0       0       0
 14036 ;;Total ram usage:        0 bytes
 14037 ;; Hardware stack levels used:    1
 14038 ;; Hardware stack levels required when called:    5
 14039 ;; This function calls:
 14040 ;;		_PWM1_setDC
 14041 ;;		_PWM2_setDC
 14042 ;;		_PWM_Init
 14043 ;;		_adcInit
 14044 ;;		_lcdClear
 14045 ;;		_lcdInit
 14046 ;;		_mcuInit
 14047 ;;		_menuInitialize
 14048 ;;		_openLCD_Script
 14049 ;;		_systemInit
 14050 ;;		_timer_0_init
 14051 ;; This function is called by:
 14052 ;;		_main
 14053 ;; This function uses a non-reentrant model
 14054 ;;
 14055                           
 14056                           	psect	text55
 14057  005476                     __ptext55:
 14058                           	callstack 0
 14059  005476                     _loopTaskInit:
 14060                           	callstack 25
 14061  005476                     
 14062                           ;fs_main.c: 88:     mcuInit();
 14063  005476  ECD4  F02B         	call	_mcuInit	;wreg free
 14064  00547A                     
 14065                           ;fs_main.c: 89:     menuInitialize();
 14066  00547A  EC6E  F02B         	call	_menuInitialize	;wreg free
 14067  00547E                     
 14068                           ;fs_main.c: 91:     adcInit();
 14069  00547E  EC5A  F02A         	call	_adcInit	;wreg free
 14070  005482                     
 14071                           ;fs_main.c: 93:     timer_0_init();
 14072  005482  ECE9  F02B         	call	_timer_0_init	;wreg free
 14073  005486                     
 14074                           ;fs_main.c: 94:     lcdInit();
 14075  005486  EC45  F026         	call	_lcdInit	;wreg free
 14076  00548A                     
 14077                           ;fs_main.c: 95:     systemInit();
 14078  00548A  ECD1  F01F         	call	_systemInit	;wreg free
 14079  00548E                     
 14080                           ;fs_main.c: 96:     lcdClear();
 14081  00548E  ECF2  F02B         	call	_lcdClear	;wreg free
 14082  005492                     
 14083                           ;fs_main.c: 98:     PWM_Init();
 14084  005492  EC82  F02B         	call	_PWM_Init	;wreg free
 14085  005496                     
 14086                           ;fs_main.c: 99:     PWM1_setDC(0);
 14087  005496  0E00               	movlw	0
 14088  005498  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
 14089  00549A  0E00               	movlw	0
 14090  00549C  6E58               	movwf	PWM1_setDC@dutycycle^0,c
 14091  00549E  EC54  F027         	call	_PWM1_setDC	;wreg free
 14092  0054A2                     
 14093                           ;fs_main.c: 100:     PWM2_setDC(0);
 14094  0054A2  0E00               	movlw	0
 14095  0054A4  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
 14096  0054A6  0E00               	movlw	0
 14097  0054A8  6E58               	movwf	PWM2_setDC@dutycycle^0,c
 14098  0054AA  EC17  F027         	call	_PWM2_setDC	;wreg free
 14099  0054AE                     
 14100                           ;fs_main.c: 101:     openLCD_Script();
 14101  0054AE  EC70  F029         	call	_openLCD_Script	;wreg free
 14102  0054B2  0012               	return		;funcret
 14103  0054B4                     __end_of_loopTaskInit:
 14104                           	callstack 0
 14105                           
 14106 ;; *************** function _timer_0_init *****************
 14107 ;; Defined at:
 14108 ;;		line 77 in file "fs_timer.c"
 14109 ;; Parameters:    Size  Location     Type
 14110 ;;		None
 14111 ;; Auto vars:     Size  Location     Type
 14112 ;;		None
 14113 ;; Return value:  Size  Location     Type
 14114 ;;                  1    wreg      void 
 14115 ;; Registers used:
 14116 ;;		wreg, status,2
 14117 ;; Tracked objects:
 14118 ;;		On entry : 0/0
 14119 ;;		On exit  : 0/0
 14120 ;;		Unchanged: 0/0
 14121 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14122 ;;      Params:         0       0       0       0       0       0       0
 14123 ;;      Locals:         0       0       0       0       0       0       0
 14124 ;;      Temps:          0       0       0       0       0       0       0
 14125 ;;      Totals:         0       0       0       0       0       0       0
 14126 ;;Total ram usage:        0 bytes
 14127 ;; Hardware stack levels used:    1
 14128 ;; Hardware stack levels required when called:    1
 14129 ;; This function calls:
 14130 ;;		Nothing
 14131 ;; This function is called by:
 14132 ;;		_loopTaskInit
 14133 ;; This function uses a non-reentrant model
 14134 ;;
 14135                           
 14136                           	psect	text56
 14137  0057D2                     __ptext56:
 14138                           	callstack 0
 14139  0057D2                     _timer_0_init:
 14140                           	callstack 28
 14141  0057D2                     
 14142                           ;fs_timer.c: 79:   T0CON = 0x81;
 14143  0057D2  0E81               	movlw	129
 14144  0057D4  6ED5               	movwf	213,c	;volatile
 14145                           
 14146                           ;fs_timer.c: 80:   TMR0H = 0x63;
 14147  0057D6  0E63               	movlw	99
 14148  0057D8  6ED7               	movwf	215,c	;volatile
 14149                           
 14150                           ;fs_timer.c: 81:   TMR0L = 0xC0;
 14151  0057DA  0EC0               	movlw	192
 14152  0057DC  6ED6               	movwf	214,c	;volatile
 14153  0057DE                     
 14154                           ;fs_timer.c: 82:   INTCONbits.GIE = 1;
 14155  0057DE  8EF2               	bsf	242,7,c	;volatile
 14156  0057E0                     
 14157                           ;fs_timer.c: 83:   INTCONbits.TMR0IE = 1;
 14158  0057E0  8AF2               	bsf	242,5,c	;volatile
 14159  0057E2  0012               	return		;funcret
 14160  0057E4                     __end_of_timer_0_init:
 14161                           	callstack 0
 14162                           
 14163 ;; *************** function _systemInit *****************
 14164 ;; Defined at:
 14165 ;;		line 49 in file "fs_mcu.c"
 14166 ;; Parameters:    Size  Location     Type
 14167 ;;		None
 14168 ;; Auto vars:     Size  Location     Type
 14169 ;;		None
 14170 ;; Return value:  Size  Location     Type
 14171 ;;                  1    wreg      void 
 14172 ;; Registers used:
 14173 ;;		wreg, status,2, cstack
 14174 ;; Tracked objects:
 14175 ;;		On entry : 0/0
 14176 ;;		On exit  : 0/0
 14177 ;;		Unchanged: 0/0
 14178 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14179 ;;      Params:         0       0       0       0       0       0       0
 14180 ;;      Locals:         0       0       0       0       0       0       0
 14181 ;;      Temps:          2       0       0       0       0       0       0
 14182 ;;      Totals:         2       0       0       0       0       0       0
 14183 ;;Total ram usage:        2 bytes
 14184 ;; Hardware stack levels used:    1
 14185 ;; Hardware stack levels required when called:    2
 14186 ;; This function calls:
 14187 ;;		_eepromRead
 14188 ;; This function is called by:
 14189 ;;		_loopTaskInit
 14190 ;; This function uses a non-reentrant model
 14191 ;;
 14192                           
 14193                           	psect	text57
 14194  003FA2                     __ptext57:
 14195                           	callstack 0
 14196  003FA2                     _systemInit:
 14197                           	callstack 27
 14198  003FA2                     
 14199                           ;fs_mcu.c: 51:     driver_limit.pay = 0;
 14200  003FA2  0E00               	movlw	0
 14201  003FA4  0101               	movlb	1	; () banked
 14202  003FA6  6F83               	movwf	_driver_limit& (0+255),b
 14203  003FA8  0E00               	movlw	0
 14204  003FAA  6F84               	movwf	(_driver_limit+1)& (0+255),b
 14205  003FAC  0E00               	movlw	0
 14206  003FAE  6F85               	movwf	(_driver_limit+2)& (0+255),b
 14207  003FB0  0E00               	movlw	0
 14208  003FB2  6F86               	movwf	(_driver_limit+3)& (0+255),b
 14209                           
 14210                           ;fs_mcu.c: 52:     driver_limit.payda = 0;
 14211  003FB4  0E00               	movlw	0
 14212  003FB6  6F87               	movwf	(_driver_limit+4)& (0+255),b
 14213  003FB8  0E00               	movlw	0
 14214  003FBA  6F88               	movwf	(_driver_limit+5)& (0+255),b
 14215  003FBC  0E00               	movlw	0
 14216  003FBE  6F89               	movwf	(_driver_limit+6)& (0+255),b
 14217  003FC0  0E00               	movlw	0
 14218  003FC2  6F8A               	movwf	(_driver_limit+7)& (0+255),b
 14219                           
 14220                           ;fs_mcu.c: 53:     driver_limit.ortalama = 0;
 14221  003FC4  0E00               	movlw	0
 14222  003FC6  6F8B               	movwf	(_driver_limit+8)& (0+255),b
 14223  003FC8  0E00               	movlw	0
 14224  003FCA  6F8C               	movwf	(_driver_limit+9)& (0+255),b
 14225  003FCC  0E00               	movlw	0
 14226  003FCE  6F8D               	movwf	(_driver_limit+10)& (0+255),b
 14227  003FD0  0E00               	movlw	0
 14228  003FD2  6F8E               	movwf	(_driver_limit+11)& (0+255),b
 14229                           
 14230                           ;fs_mcu.c: 54:     convert_data.convert_channel_0 = 0;
 14231  003FD4  0E00               	movlw	0
 14232  003FD6  6F00               	movwf	_convert_data& (0+255),b
 14233  003FD8  0E00               	movlw	0
 14234  003FDA  6F01               	movwf	(_convert_data+1)& (0+255),b
 14235  003FDC  0E00               	movlw	0
 14236  003FDE  6F02               	movwf	(_convert_data+2)& (0+255),b
 14237  003FE0  0E00               	movlw	0
 14238  003FE2  6F03               	movwf	(_convert_data+3)& (0+255),b
 14239                           
 14240                           ;fs_mcu.c: 55:     convert_data.convert_channel_1 = 0;
 14241  003FE4  0E00               	movlw	0
 14242  003FE6  6F04               	movwf	(_convert_data+4)& (0+255),b
 14243  003FE8  0E00               	movlw	0
 14244  003FEA  6F05               	movwf	(_convert_data+5)& (0+255),b
 14245  003FEC  0E00               	movlw	0
 14246  003FEE  6F06               	movwf	(_convert_data+6)& (0+255),b
 14247  003FF0  0E00               	movlw	0
 14248  003FF2  6F07               	movwf	(_convert_data+7)& (0+255),b
 14249                           
 14250                           ;fs_mcu.c: 56:     convert_data.convert_channel_2 = 0;
 14251  003FF4  0E00               	movlw	0
 14252  003FF6  6F08               	movwf	(_convert_data+8)& (0+255),b
 14253  003FF8  0E00               	movlw	0
 14254  003FFA  6F09               	movwf	(_convert_data+9)& (0+255),b
 14255  003FFC  0E00               	movlw	0
 14256  003FFE  6F0A               	movwf	(_convert_data+10)& (0+255),b
 14257  004000  0E00               	movlw	0
 14258  004002  6F0B               	movwf	(_convert_data+11)& (0+255),b
 14259                           
 14260                           ;fs_mcu.c: 57:     convert_data.convert_channel_3 = 0;
 14261  004004  0E00               	movlw	0
 14262  004006  6F0C               	movwf	(_convert_data+12)& (0+255),b
 14263  004008  0E00               	movlw	0
 14264  00400A  6F0D               	movwf	(_convert_data+13)& (0+255),b
 14265  00400C  0E00               	movlw	0
 14266  00400E  6F0E               	movwf	(_convert_data+14)& (0+255),b
 14267  004010  0E00               	movlw	0
 14268  004012  6F0F               	movwf	(_convert_data+15)& (0+255),b
 14269                           
 14270                           ;fs_mcu.c: 58:     convert_data.convert_channel_4 = 0;
 14271  004014  0E00               	movlw	0
 14272  004016  6F10               	movwf	(_convert_data+16)& (0+255),b
 14273  004018  0E00               	movlw	0
 14274  00401A  6F11               	movwf	(_convert_data+17)& (0+255),b
 14275  00401C  0E00               	movlw	0
 14276  00401E  6F12               	movwf	(_convert_data+18)& (0+255),b
 14277  004020  0E00               	movlw	0
 14278  004022  6F13               	movwf	(_convert_data+19)& (0+255),b
 14279                           
 14280                           ;fs_mcu.c: 59:     convert_data.convert_channel_5 = 0;
 14281  004024  0E00               	movlw	0
 14282  004026  6F14               	movwf	(_convert_data+20)& (0+255),b
 14283  004028  0E00               	movlw	0
 14284  00402A  6F15               	movwf	(_convert_data+21)& (0+255),b
 14285  00402C  0E00               	movlw	0
 14286  00402E  6F16               	movwf	(_convert_data+22)& (0+255),b
 14287  004030  0E00               	movlw	0
 14288  004032  6F17               	movwf	(_convert_data+23)& (0+255),b
 14289                           
 14290                           ;fs_mcu.c: 60:     convert_data.convert_channel_6 = 0;
 14291  004034  0E00               	movlw	0
 14292  004036  6F18               	movwf	(_convert_data+24)& (0+255),b
 14293  004038  0E00               	movlw	0
 14294  00403A  6F19               	movwf	(_convert_data+25)& (0+255),b
 14295  00403C  0E00               	movlw	0
 14296  00403E  6F1A               	movwf	(_convert_data+26)& (0+255),b
 14297  004040  0E00               	movlw	0
 14298  004042  6F1B               	movwf	(_convert_data+27)& (0+255),b
 14299                           
 14300                           ;fs_mcu.c: 61:     convert_data.convert_channel_7 = 0;
 14301  004044  0E00               	movlw	0
 14302  004046  6F1C               	movwf	(_convert_data+28)& (0+255),b
 14303  004048  0E00               	movlw	0
 14304  00404A  6F1D               	movwf	(_convert_data+29)& (0+255),b
 14305  00404C  0E00               	movlw	0
 14306  00404E  6F1E               	movwf	(_convert_data+30)& (0+255),b
 14307  004050  0E00               	movlw	0
 14308  004052  6F1F               	movwf	(_convert_data+31)& (0+255),b
 14309                           
 14310                           ;fs_mcu.c: 62:     controller.leftMotorSpeed = 0;
 14311  004054  0E00               	movlw	0
 14312  004056  6F57               	movwf	(_controller+7)& (0+255),b
 14313  004058  0E00               	movlw	0
 14314  00405A  6F56               	movwf	(_controller+6)& (0+255),b
 14315                           
 14316                           ;fs_mcu.c: 63:     controller.rightMotorSpeed = 0;
 14317  00405C  0E00               	movlw	0
 14318  00405E  6F59               	movwf	(_controller+9)& (0+255),b
 14319  004060  0E00               	movlw	0
 14320  004062  6F58               	movwf	(_controller+8)& (0+255),b
 14321                           
 14322                           ;fs_mcu.c: 64:     timer_value.adc_conversion_time = 0;
 14323  004064  0E00               	movlw	0
 14324  004066  6F94               	movwf	(_timer_value+5)& (0+255),b
 14325                           
 14326                           ;fs_mcu.c: 65:     controller.error = 0;
 14327  004068  0E00               	movlw	0
 14328  00406A  6F51               	movwf	(_controller+1)& (0+255),b
 14329  00406C  0E00               	movlw	0
 14330  00406E  6F50               	movwf	_controller& (0+255),b
 14331                           
 14332                           ;fs_mcu.c: 67:     button_bounce_controller.menu = 0;
 14333  004070  0E00               	movlw	0
 14334  004072  6F9D               	movwf	_button_bounce_controller& (0+255),b
 14335                           
 14336                           ;fs_mcu.c: 68:     button_bounce_controller.pause = 0;
 14337  004074  0E00               	movlw	0
 14338  004076  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 14339                           
 14340                           ;fs_mcu.c: 69:     button_bounce_controller.start = 0;
 14341  004078  0E00               	movlw	0
 14342  00407A  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 14343                           
 14344                           ;fs_mcu.c: 70:     button_bounce_controller.stop = 0;
 14345  00407C  0E00               	movlw	0
 14346  00407E  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 14347  004080                     
 14348                           ; BSR set to: 1
 14349                           ;fs_mcu.c: 71:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
 14350  004080  0E00               	movlw	0
 14351  004082  ECA9  F02B         	call	_eepromRead
 14352  004086  0100               	movlb	0	; () banked
 14353  004088  6FF3               	movwf	_menu_value& (0+255),b
 14354  00408A                     
 14355                           ; BSR set to: 0
 14356                           ;fs_mcu.c: 72:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
 14357  00408A  0E01               	movlw	1
 14358  00408C  ECA9  F02B         	call	_eepromRead
 14359  004090  0100               	movlb	0	; () banked
 14360  004092  6FF4               	movwf	(_menu_value+1)& (0+255),b
 14361  004094                     
 14362                           ; BSR set to: 0
 14363                           ;fs_mcu.c: 73:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
 14364  004094  0E02               	movlw	2
 14365  004096  ECA9  F02B         	call	_eepromRead
 14366  00409A  0100               	movlb	0	; () banked
 14367  00409C  6FF5               	movwf	(_menu_value+2)& (0+255),b
 14368  00409E                     
 14369                           ; BSR set to: 0
 14370                           ;fs_mcu.c: 75:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
 14371  00409E  0E39               	movlw	57
 14372  0040A0  6E03               	movwf	(??_systemInit+1)^0,c
 14373  0040A2  0ED2               	movlw	210
 14374  0040A4  6E02               	movwf	??_systemInit^0,c
 14375  0040A6  0E4C               	movlw	76
 14376  0040A8                     u7987:
 14377  0040A8  2EE8               	decfsz	wreg,f,c
 14378  0040AA  D7FE               	bra	u7987
 14379  0040AC  2E02               	decfsz	??_systemInit^0,f,c
 14380  0040AE  D7FC               	bra	u7987
 14381  0040B0  2E03               	decfsz	(??_systemInit+1)^0,f,c
 14382  0040B2  D7FA               	bra	u7987
 14383  0040B4  D000               	nop2	
 14384  0040B6                     
 14385                           ;fs_mcu.c: 76:     timer_value.remainingMinute = menu_value.driver_time;
 14386  0040B6  C0F3  F192         	movff	_menu_value,_timer_value+3
 14387  0040BA                     
 14388                           ;fs_mcu.c: 77:     timer_value.remainingSecond = 0;
 14389  0040BA  0E00               	movlw	0
 14390  0040BC  0101               	movlb	1	; () banked
 14391  0040BE  6F91               	movwf	(_timer_value+2)& (0+255),b
 14392  0040C0                     
 14393                           ; BSR set to: 1
 14394  0040C0  0012               	return		;funcret
 14395  0040C2                     __end_of_systemInit:
 14396                           	callstack 0
 14397                           
 14398 ;; *************** function _eepromRead *****************
 14399 ;; Defined at:
 14400 ;;		line 36 in file "fs_eeprom.c"
 14401 ;; Parameters:    Size  Location     Type
 14402 ;;  address         1    wreg     unsigned char 
 14403 ;; Auto vars:     Size  Location     Type
 14404 ;;  address         1    0[COMRAM] unsigned char 
 14405 ;; Return value:  Size  Location     Type
 14406 ;;                  1    wreg      unsigned char 
 14407 ;; Registers used:
 14408 ;;		wreg, status,2
 14409 ;; Tracked objects:
 14410 ;;		On entry : 0/0
 14411 ;;		On exit  : 0/0
 14412 ;;		Unchanged: 0/0
 14413 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14414 ;;      Params:         0       0       0       0       0       0       0
 14415 ;;      Locals:         1       0       0       0       0       0       0
 14416 ;;      Temps:          0       0       0       0       0       0       0
 14417 ;;      Totals:         1       0       0       0       0       0       0
 14418 ;;Total ram usage:        1 bytes
 14419 ;; Hardware stack levels used:    1
 14420 ;; Hardware stack levels required when called:    1
 14421 ;; This function calls:
 14422 ;;		Nothing
 14423 ;; This function is called by:
 14424 ;;		_systemInit
 14425 ;; This function uses a non-reentrant model
 14426 ;;
 14427                           
 14428                           	psect	text58
 14429  005752                     __ptext58:
 14430                           	callstack 0
 14431  005752                     _eepromRead:
 14432                           	callstack 27
 14433                           
 14434                           ; BSR set to: 1
 14435                           ;incstack = 0
 14436                           ;eepromRead@address stored from wreg
 14437  005752  6E01               	movwf	eepromRead@address^0,c
 14438  005754                     
 14439                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 48
      +                          :     EEADR = (uint8_t)address;
 14440  005754  C001  FFA9         	movff	eepromRead@address,4009	;volatile
 14441  005758                     
 14442                           ;fs_eeprom.c: 50:     EECON1bits.EEPGD = 0;
 14443  005758  9EA6               	bcf	166,7,c	;volsfr
 14444  00575A                     
 14445                           ;fs_eeprom.c: 51:     EECON1bits.CFGS = 0;
 14446  00575A  9CA6               	bcf	166,6,c	;volsfr
 14447  00575C                     
 14448                           ;fs_eeprom.c: 52:     EECON1bits.RD = 1;
 14449  00575C  80A6               	bsf	166,0,c	;volsfr
 14450  00575E                     l92:
 14451  00575E  B0A6               	btfsc	166,0,c	;volsfr
 14452  005760  EFB4  F02B         	goto	u6941
 14453  005764  EFB6  F02B         	goto	u6940
 14454  005768                     u6941:
 14455  005768  EFAF  F02B         	goto	l92
 14456  00576C                     u6940:
 14457  00576C                     
 14458                           ;fs_eeprom.c: 58:     return EEDATA;
 14459  00576C  50A8               	movf	168,w,c	;volatile
 14460  00576E  0012               	return		;funcret
 14461  005770                     __end_of_eepromRead:
 14462                           	callstack 0
 14463                           
 14464 ;; *************** function _openLCD_Script *****************
 14465 ;; Defined at:
 14466 ;;		line 87 in file "fs_mcu.c"
 14467 ;; Parameters:    Size  Location     Type
 14468 ;;		None
 14469 ;; Auto vars:     Size  Location     Type
 14470 ;;		None
 14471 ;; Return value:  Size  Location     Type
 14472 ;;                  1    wreg      void 
 14473 ;; Registers used:
 14474 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14475 ;; Tracked objects:
 14476 ;;		On entry : 0/0
 14477 ;;		On exit  : 0/0
 14478 ;;		Unchanged: 0/0
 14479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14480 ;;      Params:         0       0       0       0       0       0       0
 14481 ;;      Locals:         0       0       0       0       0       0       0
 14482 ;;      Temps:          2       0       0       0       0       0       0
 14483 ;;      Totals:         2       0       0       0       0       0       0
 14484 ;;Total ram usage:        2 bytes
 14485 ;; Hardware stack levels used:    1
 14486 ;; Hardware stack levels required when called:    4
 14487 ;; This function calls:
 14488 ;;		_lcdClear
 14489 ;;		_lcdSetCursor
 14490 ;;		_lcdWriteString
 14491 ;; This function is called by:
 14492 ;;		_loopTaskInit
 14493 ;; This function uses a non-reentrant model
 14494 ;;
 14495                           
 14496                           	psect	text59
 14497  0052E0                     __ptext59:
 14498                           	callstack 0
 14499  0052E0                     _openLCD_Script:
 14500                           	callstack 25
 14501  0052E0                     
 14502                           ;fs_mcu.c: 89:     lcdSetCursor(1,1);
 14503  0052E0  0E01               	movlw	1
 14504  0052E2  6E04               	movwf	lcdSetCursor@b^0,c
 14505  0052E4  0E01               	movlw	1
 14506  0052E6  EC36  F028         	call	_lcdSetCursor
 14507  0052EA                     
 14508                           ;fs_mcu.c: 90:     lcdWriteString("   Ergin Oyun  ");
 14509  0052EA  0EB1               	movlw	low STR_1
 14510  0052EC  6E05               	movwf	lcdWriteString@a^0,c
 14511  0052EE  0E7F               	movlw	high STR_1
 14512  0052F0  6E06               	movwf	(lcdWriteString@a+1)^0,c
 14513  0052F2  ECD8  F026         	call	_lcdWriteString	;wreg free
 14514  0052F6                     
 14515                           ;fs_mcu.c: 91:     lcdSetCursor(2,1);
 14516  0052F6  0E01               	movlw	1
 14517  0052F8  6E04               	movwf	lcdSetCursor@b^0,c
 14518  0052FA  0E02               	movlw	2
 14519  0052FC  EC36  F028         	call	_lcdSetCursor
 14520                           
 14521                           ;fs_mcu.c: 92:     lcdWriteString(" iYi Eglenceler ");
 14522  005300  0E80               	movlw	low STR_2
 14523  005302  6E05               	movwf	lcdWriteString@a^0,c
 14524  005304  0E7F               	movlw	high STR_2
 14525  005306  6E06               	movwf	(lcdWriteString@a+1)^0,c
 14526  005308  ECD8  F026         	call	_lcdWriteString	;wreg free
 14527  00530C                     
 14528                           ;fs_mcu.c: 93:     _delay((unsigned long)((2500)*(64000000UL/4000.0)));
 14529  00530C  0ECB               	movlw	203
 14530  00530E  6E0C               	movwf	(??_openLCD_Script+1)^0,c
 14531  005310  0EEC               	movlw	236
 14532  005312  6E0B               	movwf	??_openLCD_Script^0,c
 14533  005314  0E84               	movlw	132
 14534  005316                     u7997:
 14535  005316  2EE8               	decfsz	wreg,f,c
 14536  005318  D7FE               	bra	u7997
 14537  00531A  2E0B               	decfsz	??_openLCD_Script^0,f,c
 14538  00531C  D7FC               	bra	u7997
 14539  00531E  2E0C               	decfsz	(??_openLCD_Script+1)^0,f,c
 14540  005320  D7FA               	bra	u7997
 14541  005322  D000               	nop2	
 14542  005324                     
 14543                           ;fs_mcu.c: 94:     lcdClear();
 14544  005324  ECF2  F02B         	call	_lcdClear	;wreg free
 14545  005328  0012               	return		;funcret
 14546  00532A                     __end_of_openLCD_Script:
 14547                           	callstack 0
 14548                           
 14549 ;; *************** function _lcdWriteString *****************
 14550 ;; Defined at:
 14551 ;;		line 176 in file "fs_lcd.c"
 14552 ;; Parameters:    Size  Location     Type
 14553 ;;  a               2    4[COMRAM] PTR unsigned char 
 14554 ;;		 -> STR_17(17), driverTimeSettingMenu@textCursor2(16), STR_15(17), stopTimeSettingMenu@textCursor2(16), 
 14555 ;;		 -> STR_13(17), speedLimitSettingMenu@textCursor2(16), STR_11(17), STR_9(17), 
 14556 ;;		 -> secretMenu@textCursor2(16), STR_7(17), pauseMenu@textCursor2(16), STR_5(17), 
 14557 ;;		 -> stopMenu@textCursor2(16), STR_3(17), mainMenu@textCursor2(16), STR_2(17), 
 14558 ;;		 -> STR_1(16), 
 14559 ;; Auto vars:     Size  Location     Type
 14560 ;;  i               2    8[COMRAM] int 
 14561 ;; Return value:  Size  Location     Type
 14562 ;;                  1    wreg      void 
 14563 ;; Registers used:
 14564 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14565 ;; Tracked objects:
 14566 ;;		On entry : 0/0
 14567 ;;		On exit  : 0/0
 14568 ;;		Unchanged: 0/0
 14569 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14570 ;;      Params:         2       0       0       0       0       0       0
 14571 ;;      Locals:         2       0       0       0       0       0       0
 14572 ;;      Temps:          2       0       0       0       0       0       0
 14573 ;;      Totals:         6       0       0       0       0       0       0
 14574 ;;Total ram usage:        6 bytes
 14575 ;; Hardware stack levels used:    1
 14576 ;; Hardware stack levels required when called:    3
 14577 ;; This function calls:
 14578 ;;		_lcdWriteChar
 14579 ;; This function is called by:
 14580 ;;		_openLCD_Script
 14581 ;;		_mainMenu
 14582 ;;		_stopMenu
 14583 ;;		_pauseMenu
 14584 ;;		_secretMenu
 14585 ;;		_speedLimitSettingMenu
 14586 ;;		_stopTimeSettingMenu
 14587 ;;		_driverTimeSettingMenu
 14588 ;; This function uses a non-reentrant model
 14589 ;;
 14590                           
 14591                           	psect	text60
 14592  004DB0                     __ptext60:
 14593                           	callstack 0
 14594  004DB0                     _lcdWriteString:
 14595                           	callstack 24
 14596  004DB0                     
 14597                           ;fs_lcd.c: 176: void lcdWriteString(char *a);fs_lcd.c: 177: {;fs_lcd.c: 178:    int i;;f
      +                          s_lcd.c: 179:    for(i=0;a[i]!='\0';i++)
 14598  004DB0  0E00               	movlw	0
 14599  004DB2  6E0A               	movwf	(lcdWriteString@i+1)^0,c
 14600  004DB4  0E00               	movlw	0
 14601  004DB6  6E09               	movwf	lcdWriteString@i^0,c
 14602  004DB8  EFF8  F026         	goto	l5905
 14603  004DBC                     l5901:
 14604                           
 14605                           ;fs_lcd.c: 180:    lcdWriteChar(a[i]);
 14606  004DBC  5009               	movf	lcdWriteString@i^0,w,c
 14607  004DBE  2405               	addwf	lcdWriteString@a^0,w,c
 14608  004DC0  6E07               	movwf	??_lcdWriteString^0,c
 14609  004DC2  500A               	movf	(lcdWriteString@i+1)^0,w,c
 14610  004DC4  2006               	addwfc	(lcdWriteString@a+1)^0,w,c
 14611  004DC6  6E08               	movwf	(??_lcdWriteString+1)^0,c
 14612  004DC8  C007  FFF6         	movff	??_lcdWriteString,tblptrl
 14613  004DCC  C008  FFF7         	movff	??_lcdWriteString+1,tblptrh
 14614  004DD0  6AF8               	clrf	tblptru,c
 14615  004DD2  0E05               	movlw	(high __ramtop+-1)
 14616  004DD4  64F7               	cpfsgt	tblptrh,c
 14617  004DD6  D003               	bra	u6917
 14618  004DD8  0008               	tblrd		*
 14619  004DDA  50F5               	movf	tablat,w,c
 14620  004DDC  D005               	bra	u6910
 14621  004DDE                     u6917:
 14622  004DDE  CFF6 FFE1          	movff	tblptrl,fsr1l
 14623  004DE2  CFF7 FFE2          	movff	tblptrh,fsr1h
 14624  004DE6  50E7               	movf	indf1,w,c
 14625  004DE8                     u6910:
 14626  004DE8  ECEB  F02A         	call	_lcdWriteChar
 14627  004DEC  4A09               	infsnz	lcdWriteString@i^0,f,c
 14628  004DEE  2A0A               	incf	(lcdWriteString@i+1)^0,f,c
 14629  004DF0                     l5905:
 14630  004DF0  5009               	movf	lcdWriteString@i^0,w,c
 14631  004DF2  2405               	addwf	lcdWriteString@a^0,w,c
 14632  004DF4  6E07               	movwf	??_lcdWriteString^0,c
 14633  004DF6  500A               	movf	(lcdWriteString@i+1)^0,w,c
 14634  004DF8  2006               	addwfc	(lcdWriteString@a+1)^0,w,c
 14635  004DFA  6E08               	movwf	(??_lcdWriteString+1)^0,c
 14636  004DFC  C007  FFF6         	movff	??_lcdWriteString,tblptrl
 14637  004E00  C008  FFF7         	movff	??_lcdWriteString+1,tblptrh
 14638  004E04  6AF8               	clrf	tblptru,c
 14639  004E06  0E05               	movlw	(high __ramtop+-1)
 14640  004E08  64F7               	cpfsgt	tblptrh,c
 14641  004E0A  D003               	bra	u6927
 14642  004E0C  0008               	tblrd		*
 14643  004E0E  50F5               	movf	tablat,w,c
 14644  004E10  D005               	bra	u6920
 14645  004E12                     u6927:
 14646  004E12  CFF6 FFE1          	movff	tblptrl,fsr1l
 14647  004E16  CFF7 FFE2          	movff	tblptrh,fsr1h
 14648  004E1A  50E7               	movf	indf1,w,c
 14649  004E1C                     u6920:
 14650  004E1C  0900               	iorlw	0
 14651  004E1E  A4D8               	btfss	status,2,c
 14652  004E20  EF14  F027         	goto	u6931
 14653  004E24  EF16  F027         	goto	u6930
 14654  004E28                     u6931:
 14655  004E28  EFDE  F026         	goto	l5901
 14656  004E2C                     u6930:
 14657  004E2C  0012               	return		;funcret
 14658  004E2E                     __end_of_lcdWriteString:
 14659                           	callstack 0
 14660                           
 14661 ;; *************** function _lcdWriteChar *****************
 14662 ;; Defined at:
 14663 ;;		line 153 in file "fs_lcd.c"
 14664 ;; Parameters:    Size  Location     Type
 14665 ;;  a               1    wreg     unsigned char 
 14666 ;; Auto vars:     Size  Location     Type
 14667 ;;  a               1    3[COMRAM] unsigned char 
 14668 ;;  y               1    2[COMRAM] unsigned char 
 14669 ;;  temp            1    1[COMRAM] unsigned char 
 14670 ;; Return value:  Size  Location     Type
 14671 ;;                  1    wreg      void 
 14672 ;; Registers used:
 14673 ;;		wreg, status,2, status,0, cstack
 14674 ;; Tracked objects:
 14675 ;;		On entry : 0/0
 14676 ;;		On exit  : 0/0
 14677 ;;		Unchanged: 0/0
 14678 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14679 ;;      Params:         0       0       0       0       0       0       0
 14680 ;;      Locals:         3       0       0       0       0       0       0
 14681 ;;      Temps:          0       0       0       0       0       0       0
 14682 ;;      Totals:         3       0       0       0       0       0       0
 14683 ;;Total ram usage:        3 bytes
 14684 ;; Hardware stack levels used:    1
 14685 ;; Hardware stack levels required when called:    2
 14686 ;; This function calls:
 14687 ;;		_lcdPort
 14688 ;; This function is called by:
 14689 ;;		_lcdWriteString
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693                           	psect	text61
 14694  0055D6                     __ptext61:
 14695                           	callstack 0
 14696  0055D6                     _lcdWriteChar:
 14697                           	callstack 24
 14698                           
 14699                           ;incstack = 0
 14700                           ;lcdWriteChar@a stored from wreg
 14701  0055D6  6E04               	movwf	lcdWriteChar@a^0,c
 14702  0055D8                     
 14703                           ;fs_lcd.c: 153: void lcdWriteChar(char a);fs_lcd.c: 154: {;fs_lcd.c: 155:    char temp,y
      +                          ;;fs_lcd.c: 156:    temp = a&0x0F;
 14704  0055D8  5004               	movf	lcdWriteChar@a^0,w,c
 14705  0055DA  0B0F               	andlw	15
 14706  0055DC  6E02               	movwf	lcdWriteChar@temp^0,c
 14707                           
 14708                           ;fs_lcd.c: 157:    y = a&0xF0;
 14709  0055DE  5004               	movf	lcdWriteChar@a^0,w,c
 14710  0055E0  0BF0               	andlw	240
 14711  0055E2  6E03               	movwf	lcdWriteChar@y^0,c
 14712  0055E4                     
 14713                           ;fs_lcd.c: 158:    PORTDbits.RD6 = 1;
 14714  0055E4  8C83               	bsf	131,6,c	;volatile
 14715  0055E6                     
 14716                           ;fs_lcd.c: 159:    lcdPort(y>>4);
 14717  0055E6  3803               	swapf	lcdWriteChar@y^0,w,c
 14718  0055E8  0B0F               	andlw	15
 14719  0055EA  ECC7  F028         	call	_lcdPort
 14720  0055EE                     
 14721                           ;fs_lcd.c: 160:    PORTDbits.RD7 = 1;
 14722  0055EE  8E83               	bsf	131,7,c	;volatile
 14723  0055F0                     
 14724                           ;fs_lcd.c: 161:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14725  0055F0  0ED5               	movlw	213
 14726  0055F2                     u8007:
 14727  0055F2  2EE8               	decfsz	wreg,f,c
 14728  0055F4  D7FE               	bra	u8007
 14729  0055F6  F000               	nop	
 14730  0055F8                     
 14731                           ;fs_lcd.c: 162:    PORTDbits.RD7 = 0;
 14732  0055F8  9E83               	bcf	131,7,c	;volatile
 14733  0055FA                     
 14734                           ;fs_lcd.c: 163:    lcdPort(temp);
 14735  0055FA  5002               	movf	lcdWriteChar@temp^0,w,c
 14736  0055FC  ECC7  F028         	call	_lcdPort
 14737  005600                     
 14738                           ;fs_lcd.c: 164:    PORTDbits.RD7 = 1;
 14739  005600  8E83               	bsf	131,7,c	;volatile
 14740  005602                     
 14741                           ;fs_lcd.c: 165:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14742  005602  0ED5               	movlw	213
 14743  005604                     u8017:
 14744  005604  2EE8               	decfsz	wreg,f,c
 14745  005606  D7FE               	bra	u8017
 14746  005608  F000               	nop	
 14747  00560A                     
 14748                           ;fs_lcd.c: 166:    PORTDbits.RD7 = 0;
 14749  00560A  9E83               	bcf	131,7,c	;volatile
 14750  00560C  0012               	return		;funcret
 14751  00560E                     __end_of_lcdWriteChar:
 14752                           	callstack 0
 14753                           
 14754 ;; *************** function _lcdSetCursor *****************
 14755 ;; Defined at:
 14756 ;;		line 83 in file "fs_lcd.c"
 14757 ;; Parameters:    Size  Location     Type
 14758 ;;  a               1    wreg     unsigned char 
 14759 ;;  b               1    3[COMRAM] unsigned char 
 14760 ;; Auto vars:     Size  Location     Type
 14761 ;;  a               1    4[COMRAM] unsigned char 
 14762 ;;  temp            1    7[COMRAM] unsigned char 
 14763 ;;  y               1    6[COMRAM] unsigned char 
 14764 ;;  z               1    5[COMRAM] unsigned char 
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      void 
 14767 ;; Registers used:
 14768 ;;		wreg, status,2, status,0, cstack
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14774 ;;      Params:         1       0       0       0       0       0       0
 14775 ;;      Locals:         4       0       0       0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0
 14777 ;;      Totals:         5       0       0       0       0       0       0
 14778 ;;Total ram usage:        5 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; Hardware stack levels required when called:    3
 14781 ;; This function calls:
 14782 ;;		_lcdCmd
 14783 ;; This function is called by:
 14784 ;;		_openLCD_Script
 14785 ;;		_mainMenu
 14786 ;;		_stopMenu
 14787 ;;		_pauseMenu
 14788 ;;		_secretMenu
 14789 ;;		_speedLimitSettingMenu
 14790 ;;		_stopTimeSettingMenu
 14791 ;;		_driverTimeSettingMenu
 14792 ;; This function uses a non-reentrant model
 14793 ;;
 14794                           
 14795                           	psect	text62
 14796  00506C                     __ptext62:
 14797                           	callstack 0
 14798  00506C                     _lcdSetCursor:
 14799                           	callstack 24
 14800                           
 14801                           ;incstack = 0
 14802                           ;lcdSetCursor@a stored from wreg
 14803  00506C  6E05               	movwf	lcdSetCursor@a^0,c
 14804  00506E                     
 14805                           ;fs_lcd.c: 83: void lcdSetCursor(char a, char b);fs_lcd.c: 84: {;fs_lcd.c: 85:    char t
      +                          emp,z,y;;fs_lcd.c: 86:    if(a == 1)
 14806  00506E  0405               	decf	lcdSetCursor@a^0,w,c
 14807  005070  A4D8               	btfss	status,2,c
 14808  005072  EF3D  F028         	goto	u6891
 14809  005076  EF3F  F028         	goto	u6890
 14810  00507A                     u6891:
 14811  00507A  EF50  F028         	goto	l5891
 14812  00507E                     u6890:
 14813  00507E                     
 14814                           ;fs_lcd.c: 87:    {;fs_lcd.c: 88:      temp = 0x80 + b - 1;
 14815  00507E  5004               	movf	lcdSetCursor@b^0,w,c
 14816  005080  0F7F               	addlw	127
 14817  005082  6E08               	movwf	lcdSetCursor@temp^0,c
 14818                           
 14819                           ;fs_lcd.c: 89:       z = temp>>4;
 14820  005084  3808               	swapf	lcdSetCursor@temp^0,w,c
 14821  005086  0B0F               	andlw	15
 14822  005088  6E06               	movwf	lcdSetCursor@z^0,c
 14823                           
 14824                           ;fs_lcd.c: 90:       y = temp & 0x0F;
 14825  00508A  5008               	movf	lcdSetCursor@temp^0,w,c
 14826  00508C  0B0F               	andlw	15
 14827  00508E  6E07               	movwf	lcdSetCursor@y^0,c
 14828  005090                     
 14829                           ;fs_lcd.c: 91:       lcdCmd(z);
 14830  005090  5006               	movf	lcdSetCursor@z^0,w,c
 14831  005092  ECB8  F02B         	call	_lcdCmd
 14832  005096                     
 14833                           ;fs_lcd.c: 92:       lcdCmd(y);
 14834  005096  5007               	movf	lcdSetCursor@y^0,w,c
 14835  005098  ECB8  F02B         	call	_lcdCmd
 14836                           
 14837                           ;fs_lcd.c: 93:    }
 14838  00509C  EF68  F028         	goto	l172
 14839  0050A0                     l5891:
 14840  0050A0  0E02               	movlw	2
 14841  0050A2  1805               	xorwf	lcdSetCursor@a^0,w,c
 14842  0050A4  A4D8               	btfss	status,2,c
 14843  0050A6  EF57  F028         	goto	u6901
 14844  0050AA  EF59  F028         	goto	u6900
 14845  0050AE                     u6901:
 14846  0050AE  EF68  F028         	goto	l172
 14847  0050B2                     u6900:
 14848  0050B2                     
 14849                           ;fs_lcd.c: 95:    {;fs_lcd.c: 96:       temp = 0xC0 + b - 1;
 14850  0050B2  5004               	movf	lcdSetCursor@b^0,w,c
 14851  0050B4  0FBF               	addlw	191
 14852  0050B6  6E08               	movwf	lcdSetCursor@temp^0,c
 14853                           
 14854                           ;fs_lcd.c: 97:       z = temp>>4;
 14855  0050B8  3808               	swapf	lcdSetCursor@temp^0,w,c
 14856  0050BA  0B0F               	andlw	15
 14857  0050BC  6E06               	movwf	lcdSetCursor@z^0,c
 14858                           
 14859                           ;fs_lcd.c: 98:       y = temp & 0x0F;
 14860  0050BE  5008               	movf	lcdSetCursor@temp^0,w,c
 14861  0050C0  0B0F               	andlw	15
 14862  0050C2  6E07               	movwf	lcdSetCursor@y^0,c
 14863  0050C4                     
 14864                           ;fs_lcd.c: 99:       lcdCmd(z);
 14865  0050C4  5006               	movf	lcdSetCursor@z^0,w,c
 14866  0050C6  ECB8  F02B         	call	_lcdCmd
 14867  0050CA                     
 14868                           ;fs_lcd.c: 100:       lcdCmd(y);
 14869  0050CA  5007               	movf	lcdSetCursor@y^0,w,c
 14870  0050CC  ECB8  F02B         	call	_lcdCmd
 14871  0050D0                     l172:
 14872  0050D0  0012               	return		;funcret
 14873  0050D2                     __end_of_lcdSetCursor:
 14874                           	callstack 0
 14875                           
 14876 ;; *************** function _lcdClear *****************
 14877 ;; Defined at:
 14878 ;;		line 72 in file "fs_lcd.c"
 14879 ;; Parameters:    Size  Location     Type
 14880 ;;		None
 14881 ;; Auto vars:     Size  Location     Type
 14882 ;;		None
 14883 ;; Return value:  Size  Location     Type
 14884 ;;                  1    wreg      void 
 14885 ;; Registers used:
 14886 ;;		wreg, status,2, cstack
 14887 ;; Tracked objects:
 14888 ;;		On entry : 0/0
 14889 ;;		On exit  : 0/0
 14890 ;;		Unchanged: 0/0
 14891 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14892 ;;      Params:         0       0       0       0       0       0       0
 14893 ;;      Locals:         0       0       0       0       0       0       0
 14894 ;;      Temps:          0       0       0       0       0       0       0
 14895 ;;      Totals:         0       0       0       0       0       0       0
 14896 ;;Total ram usage:        0 bytes
 14897 ;; Hardware stack levels used:    1
 14898 ;; Hardware stack levels required when called:    3
 14899 ;; This function calls:
 14900 ;;		_lcdCmd
 14901 ;; This function is called by:
 14902 ;;		_loopTaskInit
 14903 ;;		_openLCD_Script
 14904 ;; This function uses a non-reentrant model
 14905 ;;
 14906                           
 14907                           	psect	text63
 14908  0057E4                     __ptext63:
 14909                           	callstack 0
 14910  0057E4                     _lcdClear:
 14911                           	callstack 25
 14912  0057E4                     
 14913                           ;fs_lcd.c: 74:    lcdCmd(0);
 14914  0057E4  0E00               	movlw	0
 14915  0057E6  ECB8  F02B         	call	_lcdCmd
 14916                           
 14917                           ;fs_lcd.c: 75:    lcdCmd(1);
 14918  0057EA  0E01               	movlw	1
 14919  0057EC  ECB8  F02B         	call	_lcdCmd
 14920  0057F0  0012               	return		;funcret
 14921  0057F2                     __end_of_lcdClear:
 14922                           	callstack 0
 14923                           
 14924 ;; *************** function _menuInitialize *****************
 14925 ;; Defined at:
 14926 ;;		line 35 in file "fs_menu_controller.c"
 14927 ;; Parameters:    Size  Location     Type
 14928 ;;		None
 14929 ;; Auto vars:     Size  Location     Type
 14930 ;;		None
 14931 ;; Return value:  Size  Location     Type
 14932 ;;                  1    wreg      void 
 14933 ;; Registers used:
 14934 ;;		None
 14935 ;; Tracked objects:
 14936 ;;		On entry : 0/0
 14937 ;;		On exit  : 0/0
 14938 ;;		Unchanged: 0/0
 14939 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14940 ;;      Params:         0       0       0       0       0       0       0
 14941 ;;      Locals:         0       0       0       0       0       0       0
 14942 ;;      Temps:          0       0       0       0       0       0       0
 14943 ;;      Totals:         0       0       0       0       0       0       0
 14944 ;;Total ram usage:        0 bytes
 14945 ;; Hardware stack levels used:    1
 14946 ;; Hardware stack levels required when called:    1
 14947 ;; This function calls:
 14948 ;;		Nothing
 14949 ;; This function is called by:
 14950 ;;		_loopTaskInit
 14951 ;; This function uses a non-reentrant model
 14952 ;;
 14953                           
 14954                           	psect	text64
 14955  0056DC                     __ptext64:
 14956                           	callstack 0
 14957  0056DC                     _menuInitialize:
 14958                           	callstack 28
 14959  0056DC                     
 14960                           ;fs_menu_controller.c: 38:     TRISBbits.RB6 = 1;
 14961  0056DC  8C93               	bsf	147,6,c	;volatile
 14962                           
 14963                           ;fs_menu_controller.c: 41:     TRISBbits.RB7 = 1;
 14964  0056DE  8E93               	bsf	147,7,c	;volatile
 14965                           
 14966                           ;fs_menu_controller.c: 43:     ANSELDbits.ANSD4 = 0;
 14967  0056E0  010F               	movlb	15	; () banked
 14968  0056E2  993B               	bcf	59,4,b	;volatile
 14969                           
 14970                           ;fs_menu_controller.c: 44:     TRISDbits.RD4 = 1;
 14971  0056E4  8895               	bsf	149,4,c	;volatile
 14972                           
 14973                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD0 = 0;
 14974  0056E6  913B               	bcf	59,0,b	;volatile
 14975                           
 14976                           ;fs_menu_controller.c: 47:     TRISDbits.RD0 = 1;
 14977  0056E8  8095               	bsf	149,0,c	;volatile
 14978                           
 14979                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD1 = 0;
 14980  0056EA  933B               	bcf	59,1,b	;volatile
 14981                           
 14982                           ;fs_menu_controller.c: 50:     TRISDbits.RD1 = 1;
 14983  0056EC  8295               	bsf	149,1,c	;volatile
 14984                           
 14985                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD2 = 0;
 14986  0056EE  953B               	bcf	59,2,b	;volatile
 14987                           
 14988                           ;fs_menu_controller.c: 53:     TRISDbits.RD2 = 1;
 14989  0056F0  8495               	bsf	149,2,c	;volatile
 14990                           
 14991                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD3 = 0;
 14992  0056F2  973B               	bcf	59,3,b	;volatile
 14993                           
 14994                           ;fs_menu_controller.c: 56:     TRISDbits.RD3 = 1;
 14995  0056F4  8695               	bsf	149,3,c	;volatile
 14996                           
 14997                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD5 = 0;
 14998  0056F6  9B3B               	bcf	59,5,b	;volatile
 14999                           
 15000                           ;fs_menu_controller.c: 59:     TRISDbits.RD5 = 0;
 15001  0056F8  9A95               	bcf	149,5,c	;volatile
 15002                           
 15003                           ;fs_menu_controller.c: 61:     ANSELCbits.ANSC5 = 0;
 15004  0056FA  9B3A               	bcf	58,5,b	;volatile
 15005                           
 15006                           ;fs_menu_controller.c: 62:     TRISCbits.RC5 = 0;
 15007  0056FC  9A94               	bcf	148,5,c	;volatile
 15008                           
 15009                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC4 = 0;
 15010  0056FE  993A               	bcf	58,4,b	;volatile
 15011                           
 15012                           ;fs_menu_controller.c: 65:     TRISCbits.RC4 = 0;
 15013  005700  9894               	bcf	148,4,c	;volatile
 15014  005702                     
 15015                           ; BSR set to: 15
 15016  005702  0012               	return		;funcret
 15017  005704                     __end_of_menuInitialize:
 15018                           	callstack 0
 15019                           
 15020 ;; *************** function _mcuInit *****************
 15021 ;; Defined at:
 15022 ;;		line 35 in file "fs_mcu.c"
 15023 ;; Parameters:    Size  Location     Type
 15024 ;;		None
 15025 ;; Auto vars:     Size  Location     Type
 15026 ;;		None
 15027 ;; Return value:  Size  Location     Type
 15028 ;;                  1    wreg      void 
 15029 ;; Registers used:
 15030 ;;		wreg, status,2
 15031 ;; Tracked objects:
 15032 ;;		On entry : 0/0
 15033 ;;		On exit  : 0/0
 15034 ;;		Unchanged: 0/0
 15035 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15036 ;;      Params:         0       0       0       0       0       0       0
 15037 ;;      Locals:         0       0       0       0       0       0       0
 15038 ;;      Temps:          0       0       0       0       0       0       0
 15039 ;;      Totals:         0       0       0       0       0       0       0
 15040 ;;Total ram usage:        0 bytes
 15041 ;; Hardware stack levels used:    1
 15042 ;; Hardware stack levels required when called:    1
 15043 ;; This function calls:
 15044 ;;		Nothing
 15045 ;; This function is called by:
 15046 ;;		_loopTaskInit
 15047 ;; This function uses a non-reentrant model
 15048 ;;
 15049                           
 15050                           	psect	text65
 15051  0057A8                     __ptext65:
 15052                           	callstack 0
 15053  0057A8                     _mcuInit:
 15054                           	callstack 28
 15055  0057A8                     
 15056                           ;fs_mcu.c: 37:    OSCCONbits.IRCF = 0b111;
 15057  0057A8  0E70               	movlw	112
 15058  0057AA  12D3               	iorwf	211,f,c	;volatile
 15059  0057AC                     
 15060                           ;fs_mcu.c: 38:    OSCTUNEbits.PLLEN = 0b1;
 15061  0057AC  8C9B               	bsf	155,6,c	;volatile
 15062  0057AE                     l317:
 15063  0057AE  A4D3               	btfss	211,2,c	;volatile
 15064  0057B0  EFDC  F02B         	goto	u3581
 15065  0057B4  EFDE  F02B         	goto	u3580
 15066  0057B8                     u3581:
 15067  0057B8  EFD7  F02B         	goto	l317
 15068  0057BC                     u3580:
 15069  0057BC  0012               	return		;funcret
 15070  0057BE                     __end_of_mcuInit:
 15071                           	callstack 0
 15072                           
 15073 ;; *************** function _lcdInit *****************
 15074 ;; Defined at:
 15075 ;;		line 109 in file "fs_lcd.c"
 15076 ;; Parameters:    Size  Location     Type
 15077 ;;		None
 15078 ;; Auto vars:     Size  Location     Type
 15079 ;;		None
 15080 ;; Return value:  Size  Location     Type
 15081 ;;                  1    wreg      void 
 15082 ;; Registers used:
 15083 ;;		wreg, status,2, cstack
 15084 ;; Tracked objects:
 15085 ;;		On entry : 0/0
 15086 ;;		On exit  : 0/0
 15087 ;;		Unchanged: 0/0
 15088 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15089 ;;      Params:         0       0       0       0       0       0       0
 15090 ;;      Locals:         0       0       0       0       0       0       0
 15091 ;;      Temps:          2       0       0       0       0       0       0
 15092 ;;      Totals:         2       0       0       0       0       0       0
 15093 ;;Total ram usage:        2 bytes
 15094 ;; Hardware stack levels used:    1
 15095 ;; Hardware stack levels required when called:    3
 15096 ;; This function calls:
 15097 ;;		_lcdCmd
 15098 ;;		_lcdPort
 15099 ;; This function is called by:
 15100 ;;		_loopTaskInit
 15101 ;; This function uses a non-reentrant model
 15102 ;;
 15103                           
 15104                           	psect	text66
 15105  004C8A                     __ptext66:
 15106                           	callstack 0
 15107  004C8A                     _lcdInit:
 15108                           	callstack 26
 15109  004C8A                     
 15110                           ;fs_lcd.c: 111:     TRISDbits.RD6 = 0;
 15111  004C8A  9C95               	bcf	149,6,c	;volatile
 15112                           
 15113                           ;fs_lcd.c: 112:     ANSELDbits.ANSD6 = 0;
 15114  004C8C  010F               	movlb	15	; () banked
 15115  004C8E  9D3B               	bcf	59,6,b	;volatile
 15116                           
 15117                           ;fs_lcd.c: 114:     TRISDbits.RD7 = 0;
 15118  004C90  9E95               	bcf	149,7,c	;volatile
 15119                           
 15120                           ;fs_lcd.c: 115:     ANSELDbits.ANSD7 = 0;
 15121  004C92  9F3B               	bcf	59,7,b	;volatile
 15122                           
 15123                           ;fs_lcd.c: 117:     TRISBbits.RB0 = 0;
 15124  004C94  9093               	bcf	147,0,c	;volatile
 15125                           
 15126                           ;fs_lcd.c: 118:     ANSELBbits.ANSB0 = 0;
 15127  004C96  9139               	bcf	57,0,b	;volatile
 15128                           
 15129                           ;fs_lcd.c: 120:     TRISBbits.RB1 = 0;
 15130  004C98  9293               	bcf	147,1,c	;volatile
 15131                           
 15132                           ;fs_lcd.c: 121:     ANSELBbits.ANSB1 = 0;
 15133  004C9A  9339               	bcf	57,1,b	;volatile
 15134                           
 15135                           ;fs_lcd.c: 123:     TRISBbits.RB2 = 0;
 15136  004C9C  9493               	bcf	147,2,c	;volatile
 15137                           
 15138                           ;fs_lcd.c: 124:     ANSELBbits.ANSB2 = 0;
 15139  004C9E  9539               	bcf	57,2,b	;volatile
 15140                           
 15141                           ;fs_lcd.c: 126:     TRISBbits.RB3 = 0;
 15142  004CA0  9693               	bcf	147,3,c	;volatile
 15143                           
 15144                           ;fs_lcd.c: 127:     ANSELBbits.ANSB3 = 0;
 15145  004CA2  9739               	bcf	57,3,b	;volatile
 15146  004CA4                     
 15147                           ; BSR set to: 15
 15148                           ;fs_lcd.c: 130:     lcdPort(0x00);
 15149  004CA4  0E00               	movlw	0
 15150  004CA6  ECC7  F028         	call	_lcdPort
 15151  004CAA                     
 15152                           ;fs_lcd.c: 131:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15153  004CAA  0E02               	movlw	2
 15154  004CAC  6E05               	movwf	(??_lcdInit+1)^0,c
 15155  004CAE  0EA0               	movlw	160
 15156  004CB0  6E04               	movwf	??_lcdInit^0,c
 15157  004CB2  0E92               	movlw	146
 15158  004CB4                     u8027:
 15159  004CB4  2EE8               	decfsz	wreg,f,c
 15160  004CB6  D7FE               	bra	u8027
 15161  004CB8  2E04               	decfsz	??_lcdInit^0,f,c
 15162  004CBA  D7FC               	bra	u8027
 15163  004CBC  2E05               	decfsz	(??_lcdInit+1)^0,f,c
 15164  004CBE  D7FA               	bra	u8027
 15165  004CC0  D000               	nop2	
 15166  004CC2                     
 15167                           ;fs_lcd.c: 132:     lcdCmd(0x03);
 15168  004CC2  0E03               	movlw	3
 15169  004CC4  ECB8  F02B         	call	_lcdCmd
 15170  004CC8                     
 15171                           ;fs_lcd.c: 133:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15172  004CC8  0E68               	movlw	104
 15173  004CCA  6E04               	movwf	??_lcdInit^0,c
 15174  004CCC  0EE4               	movlw	228
 15175  004CCE                     u8037:
 15176  004CCE  2EE8               	decfsz	wreg,f,c
 15177  004CD0  D7FE               	bra	u8037
 15178  004CD2  2E04               	decfsz	??_lcdInit^0,f,c
 15179  004CD4  D7FC               	bra	u8037
 15180  004CD6  D000               	nop2	
 15181  004CD8                     
 15182                           ;fs_lcd.c: 134:     lcdCmd(0x03);
 15183  004CD8  0E03               	movlw	3
 15184  004CDA  ECB8  F02B         	call	_lcdCmd
 15185  004CDE                     
 15186                           ;fs_lcd.c: 135:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15187  004CDE  0EE5               	movlw	229
 15188  004CE0  6E04               	movwf	??_lcdInit^0,c
 15189  004CE2  0E91               	movlw	145
 15190  004CE4                     u8047:
 15191  004CE4  2EE8               	decfsz	wreg,f,c
 15192  004CE6  D7FE               	bra	u8047
 15193  004CE8  2E04               	decfsz	??_lcdInit^0,f,c
 15194  004CEA  D7FC               	bra	u8047
 15195  004CEC  F000               	nop	
 15196  004CEE                     
 15197                           ;fs_lcd.c: 136:     lcdCmd(0x03);
 15198  004CEE  0E03               	movlw	3
 15199  004CF0  ECB8  F02B         	call	_lcdCmd
 15200  004CF4                     
 15201                           ;fs_lcd.c: 137:     lcdCmd(0x02);
 15202  004CF4  0E02               	movlw	2
 15203  004CF6  ECB8  F02B         	call	_lcdCmd
 15204  004CFA                     
 15205                           ;fs_lcd.c: 138:     lcdCmd(0x02);
 15206  004CFA  0E02               	movlw	2
 15207  004CFC  ECB8  F02B         	call	_lcdCmd
 15208  004D00                     
 15209                           ;fs_lcd.c: 139:     lcdCmd(0x08);
 15210  004D00  0E08               	movlw	8
 15211  004D02  ECB8  F02B         	call	_lcdCmd
 15212  004D06                     
 15213                           ;fs_lcd.c: 140:     lcdCmd(0x00);
 15214  004D06  0E00               	movlw	0
 15215  004D08  ECB8  F02B         	call	_lcdCmd
 15216  004D0C                     
 15217                           ;fs_lcd.c: 141:     lcdCmd(0x0C);
 15218  004D0C  0E0C               	movlw	12
 15219  004D0E  ECB8  F02B         	call	_lcdCmd
 15220  004D12                     
 15221                           ;fs_lcd.c: 142:     lcdCmd(0x00);
 15222  004D12  0E00               	movlw	0
 15223  004D14  ECB8  F02B         	call	_lcdCmd
 15224  004D18                     
 15225                           ;fs_lcd.c: 143:     lcdCmd(0x06);
 15226  004D18  0E06               	movlw	6
 15227  004D1A  ECB8  F02B         	call	_lcdCmd
 15228  004D1E  0012               	return		;funcret
 15229  004D20                     __end_of_lcdInit:
 15230                           	callstack 0
 15231                           
 15232 ;; *************** function _lcdCmd *****************
 15233 ;; Defined at:
 15234 ;;		line 56 in file "fs_lcd.c"
 15235 ;; Parameters:    Size  Location     Type
 15236 ;;  a               1    wreg     unsigned char 
 15237 ;; Auto vars:     Size  Location     Type
 15238 ;;  a               1    2[COMRAM] unsigned char 
 15239 ;; Return value:  Size  Location     Type
 15240 ;;                  1    wreg      void 
 15241 ;; Registers used:
 15242 ;;		wreg, status,2, cstack
 15243 ;; Tracked objects:
 15244 ;;		On entry : 0/0
 15245 ;;		On exit  : 0/0
 15246 ;;		Unchanged: 0/0
 15247 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15248 ;;      Params:         0       0       0       0       0       0       0
 15249 ;;      Locals:         1       0       0       0       0       0       0
 15250 ;;      Temps:          1       0       0       0       0       0       0
 15251 ;;      Totals:         2       0       0       0       0       0       0
 15252 ;;Total ram usage:        2 bytes
 15253 ;; Hardware stack levels used:    1
 15254 ;; Hardware stack levels required when called:    2
 15255 ;; This function calls:
 15256 ;;		_lcdPort
 15257 ;; This function is called by:
 15258 ;;		_lcdClear
 15259 ;;		_lcdSetCursor
 15260 ;;		_lcdInit
 15261 ;;		_lcdShiftRight
 15262 ;;		_lcdShiftLeft
 15263 ;; This function uses a non-reentrant model
 15264 ;;
 15265                           
 15266                           	psect	text67
 15267  005770                     __ptext67:
 15268                           	callstack 0
 15269  005770                     _lcdCmd:
 15270                           	callstack 24
 15271                           
 15272                           ;incstack = 0
 15273                           ;lcdCmd@a stored from wreg
 15274  005770  6E03               	movwf	lcdCmd@a^0,c
 15275  005772                     
 15276                           ;fs_lcd.c: 56: void lcdCmd(char a);fs_lcd.c: 57: {;fs_lcd.c: 58:    PORTDbits.RD6 = 0;
 15277  005772  9C83               	bcf	131,6,c	;volatile
 15278  005774                     
 15279                           ;fs_lcd.c: 59:    lcdPort(a);
 15280  005774  5003               	movf	lcdCmd@a^0,w,c
 15281  005776  ECC7  F028         	call	_lcdPort
 15282  00577A                     
 15283                           ;fs_lcd.c: 60:    PORTDbits.RD7 = 1;
 15284  00577A  8E83               	bsf	131,7,c	;volatile
 15285  00577C                     
 15286                           ;fs_lcd.c: 61:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15287  00577C  0E2A               	movlw	42
 15288  00577E  6E02               	movwf	??_lcdCmd^0,c
 15289  005780  0E8E               	movlw	142
 15290  005782                     u8057:
 15291  005782  2EE8               	decfsz	wreg,f,c
 15292  005784  D7FE               	bra	u8057
 15293  005786  2E02               	decfsz	??_lcdCmd^0,f,c
 15294  005788  D7FC               	bra	u8057
 15295  00578A                     
 15296                           ;fs_lcd.c: 62:    PORTDbits.RD7 = 0;
 15297  00578A  9E83               	bcf	131,7,c	;volatile
 15298  00578C  0012               	return		;funcret
 15299  00578E                     __end_of_lcdCmd:
 15300                           	callstack 0
 15301                           
 15302 ;; *************** function _lcdPort *****************
 15303 ;; Defined at:
 15304 ;;		line 33 in file "fs_lcd.c"
 15305 ;; Parameters:    Size  Location     Type
 15306 ;;  a               1    wreg     unsigned char 
 15307 ;; Auto vars:     Size  Location     Type
 15308 ;;  a               1    0[COMRAM] unsigned char 
 15309 ;; Return value:  Size  Location     Type
 15310 ;;                  1    wreg      void 
 15311 ;; Registers used:
 15312 ;;		wreg
 15313 ;; Tracked objects:
 15314 ;;		On entry : 0/0
 15315 ;;		On exit  : 0/0
 15316 ;;		Unchanged: 0/0
 15317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15318 ;;      Params:         0       0       0       0       0       0       0
 15319 ;;      Locals:         1       0       0       0       0       0       0
 15320 ;;      Temps:          0       0       0       0       0       0       0
 15321 ;;      Totals:         1       0       0       0       0       0       0
 15322 ;;Total ram usage:        1 bytes
 15323 ;; Hardware stack levels used:    1
 15324 ;; Hardware stack levels required when called:    1
 15325 ;; This function calls:
 15326 ;;		Nothing
 15327 ;; This function is called by:
 15328 ;;		_lcdCmd
 15329 ;;		_lcdInit
 15330 ;;		_lcdWriteChar
 15331 ;; This function uses a non-reentrant model
 15332 ;;
 15333                           
 15334                           	psect	text68
 15335  00518E                     __ptext68:
 15336                           	callstack 0
 15337  00518E                     _lcdPort:
 15338                           	callstack 24
 15339                           
 15340                           ;incstack = 0
 15341                           ;lcdPort@a stored from wreg
 15342  00518E  6E01               	movwf	lcdPort@a^0,c
 15343  005190                     
 15344                           ;fs_lcd.c: 33: void lcdPort(char a);fs_lcd.c: 34: {;fs_lcd.c: 35:    if(a & 1) { PORTBbi
      +                          ts.RB0 = 1;}
 15345  005190  A001               	btfss	lcdPort@a^0,0,c
 15346  005192  EFCD  F028         	goto	u6411
 15347  005196  EFCF  F028         	goto	u6410
 15348  00519A                     u6411:
 15349  00519A  EFD2  F028         	goto	l152
 15350  00519E                     u6410:
 15351  00519E  8081               	bsf	129,0,c	;volatile
 15352  0051A0  EFD3  F028         	goto	l5495
 15353  0051A4                     l152:
 15354  0051A4  9081               	bcf	129,0,c	;volatile
 15355  0051A6                     l5495:
 15356                           
 15357                           ;fs_lcd.c: 38:    if(a & 2) { PORTBbits.RB1 = 1;}
 15358  0051A6  A201               	btfss	lcdPort@a^0,1,c
 15359  0051A8  EFD8  F028         	goto	u6421
 15360  0051AC  EFDA  F028         	goto	u6420
 15361  0051B0                     u6421:
 15362  0051B0  EFDD  F028         	goto	l154
 15363  0051B4                     u6420:
 15364  0051B4  8281               	bsf	129,1,c	;volatile
 15365  0051B6  EFDE  F028         	goto	l5499
 15366  0051BA                     l154:
 15367  0051BA  9281               	bcf	129,1,c	;volatile
 15368  0051BC                     l5499:
 15369                           
 15370                           ;fs_lcd.c: 41:    if(a & 4) {PORTBbits.RB2 = 1;}
 15371  0051BC  A401               	btfss	lcdPort@a^0,2,c
 15372  0051BE  EFE3  F028         	goto	u6431
 15373  0051C2  EFE5  F028         	goto	u6430
 15374  0051C6                     u6431:
 15375  0051C6  EFE8  F028         	goto	l156
 15376  0051CA                     u6430:
 15377  0051CA  8481               	bsf	129,2,c	;volatile
 15378  0051CC  EFE9  F028         	goto	l5503
 15379  0051D0                     l156:
 15380  0051D0  9481               	bcf	129,2,c	;volatile
 15381  0051D2                     l5503:
 15382                           
 15383                           ;fs_lcd.c: 44:    if(a & 8) {PORTBbits.RB3 = 1;}
 15384  0051D2  A601               	btfss	lcdPort@a^0,3,c
 15385  0051D4  EFEE  F028         	goto	u6441
 15386  0051D8  EFF0  F028         	goto	u6440
 15387  0051DC                     u6441:
 15388  0051DC  EFF3  F028         	goto	l158
 15389  0051E0                     u6440:
 15390  0051E0  8681               	bsf	129,3,c	;volatile
 15391  0051E2  EFF4  F028         	goto	l160
 15392  0051E6                     l158:
 15393  0051E6  9681               	bcf	129,3,c	;volatile
 15394  0051E8                     l160:
 15395  0051E8  0012               	return		;funcret
 15396  0051EA                     __end_of_lcdPort:
 15397                           	callstack 0
 15398                           
 15399 ;; *************** function _adcInit *****************
 15400 ;; Defined at:
 15401 ;;		line 53 in file "fs_adc.c"
 15402 ;; Parameters:    Size  Location     Type
 15403 ;;		None
 15404 ;; Auto vars:     Size  Location     Type
 15405 ;;		None
 15406 ;; Return value:  Size  Location     Type
 15407 ;;                  1    wreg      void 
 15408 ;; Registers used:
 15409 ;;		wreg, status,2
 15410 ;; Tracked objects:
 15411 ;;		On entry : 0/0
 15412 ;;		On exit  : 0/0
 15413 ;;		Unchanged: 0/0
 15414 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15415 ;;      Params:         0       0       0       0       0       0       0
 15416 ;;      Locals:         0       0       0       0       0       0       0
 15417 ;;      Temps:          0       0       0       0       0       0       0
 15418 ;;      Totals:         0       0       0       0       0       0       0
 15419 ;;Total ram usage:        0 bytes
 15420 ;; Hardware stack levels used:    1
 15421 ;; Hardware stack levels required when called:    1
 15422 ;; This function calls:
 15423 ;;		Nothing
 15424 ;; This function is called by:
 15425 ;;		_loopTaskInit
 15426 ;; This function uses a non-reentrant model
 15427 ;;
 15428                           
 15429                           	psect	text69
 15430  0054B4                     __ptext69:
 15431                           	callstack 0
 15432  0054B4                     _adcInit:
 15433                           	callstack 28
 15434  0054B4                     
 15435                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15436  0054B4  8092               	bsf	146,0,c	;volatile
 15437                           
 15438                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15439  0054B6  010F               	movlb	15	; () banked
 15440  0054B8  8138               	bsf	56,0,b	;volatile
 15441                           
 15442                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15443  0054BA  8292               	bsf	146,1,c	;volatile
 15444                           
 15445                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15446  0054BC  8338               	bsf	56,1,b	;volatile
 15447                           
 15448                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15449  0054BE  8492               	bsf	146,2,c	;volatile
 15450                           
 15451                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15452  0054C0  8538               	bsf	56,2,b	;volatile
 15453                           
 15454                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15455  0054C2  8692               	bsf	146,3,c	;volatile
 15456                           
 15457                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15458  0054C4  8738               	bsf	56,3,b	;volatile
 15459                           
 15460                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15461  0054C6  8A92               	bsf	146,5,c	;volatile
 15462                           
 15463                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15464  0054C8  8B38               	bsf	56,5,b	;volatile
 15465                           
 15466                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15467  0054CA  8096               	bsf	150,0,c	;volatile
 15468                           
 15469                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15470  0054CC  813C               	bsf	60,0,b	;volatile
 15471                           
 15472                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15473  0054CE  8296               	bsf	150,1,c	;volatile
 15474                           
 15475                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15476  0054D0  833C               	bsf	60,1,b	;volatile
 15477                           
 15478                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15479  0054D2  8496               	bsf	150,2,c	;volatile
 15480                           
 15481                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15482  0054D4  853C               	bsf	60,2,b	;volatile
 15483  0054D6                     
 15484                           ; BSR set to: 15
 15485                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15486  0054D6  0E01               	movlw	1
 15487  0054D8  6EC2               	movwf	194,c	;volatile
 15488                           
 15489                           ;fs_adc.c: 80:     ADCON1=0x00;
 15490  0054DA  0E00               	movlw	0
 15491  0054DC  6EC1               	movwf	193,c	;volatile
 15492  0054DE                     
 15493                           ; BSR set to: 15
 15494                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15495  0054DE  8EC0               	bsf	192,7,c	;volatile
 15496                           
 15497                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15498  0054E0  50C0               	movf	192,w,c	;volatile
 15499  0054E2  0BC7               	andlw	-57
 15500  0054E4  0910               	iorlw	16
 15501  0054E6  6EC0               	movwf	192,c	;volatile
 15502                           
 15503                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15504  0054E8  50C0               	movf	192,w,c	;volatile
 15505  0054EA  0BF8               	andlw	-8
 15506  0054EC  0906               	iorlw	6
 15507  0054EE  6EC0               	movwf	192,c	;volatile
 15508  0054F0                     
 15509                           ; BSR set to: 15
 15510  0054F0  0012               	return		;funcret
 15511  0054F2                     __end_of_adcInit:
 15512                           	callstack 0
 15513                           
 15514 ;; *************** function _PWM_Init *****************
 15515 ;; Defined at:
 15516 ;;		line 34 in file "fs_pwm.c"
 15517 ;; Parameters:    Size  Location     Type
 15518 ;;		None
 15519 ;; Auto vars:     Size  Location     Type
 15520 ;;		None
 15521 ;; Return value:  Size  Location     Type
 15522 ;;                  1    wreg      void 
 15523 ;; Registers used:
 15524 ;;		wreg, status,2
 15525 ;; Tracked objects:
 15526 ;;		On entry : 0/0
 15527 ;;		On exit  : 0/0
 15528 ;;		Unchanged: 0/0
 15529 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15530 ;;      Params:         0       0       0       0       0       0       0
 15531 ;;      Locals:         0       0       0       0       0       0       0
 15532 ;;      Temps:          0       0       0       0       0       0       0
 15533 ;;      Totals:         0       0       0       0       0       0       0
 15534 ;;Total ram usage:        0 bytes
 15535 ;; Hardware stack levels used:    1
 15536 ;; Hardware stack levels required when called:    1
 15537 ;; This function calls:
 15538 ;;		Nothing
 15539 ;; This function is called by:
 15540 ;;		_loopTaskInit
 15541 ;; This function uses a non-reentrant model
 15542 ;;
 15543                           
 15544                           	psect	text70
 15545  005704                     __ptext70:
 15546                           	callstack 0
 15547  005704                     _PWM_Init:
 15548                           	callstack 28
 15549  005704                     
 15550                           ;fs_pwm.c: 36:     TRISCbits.RC2 = 0;
 15551  005704  9494               	bcf	148,2,c	;volatile
 15552                           
 15553                           ;fs_pwm.c: 37:     TRISCbits.RC1 = 0;
 15554  005706  9294               	bcf	148,1,c	;volatile
 15555  005708                     
 15556                           ;fs_pwm.c: 40:     CCP1CON = 0b00001100;
 15557  005708  0E0C               	movlw	12
 15558  00570A  6EBD               	movwf	189,c	;volatile
 15559                           
 15560                           ;fs_pwm.c: 42:     CCP2CON = 0b00001100;
 15561  00570C  0E0C               	movlw	12
 15562  00570E  6E66               	movwf	102,c	;volatile
 15563                           
 15564                           ;fs_pwm.c: 46:     T2CONbits.T2CKPS = 0b01;
 15565  005710  50BA               	movf	186,w,c	;volatile
 15566  005712  0BFC               	andlw	-4
 15567  005714  0901               	iorlw	1
 15568  005716  6EBA               	movwf	186,c	;volatile
 15569  005718                     
 15570                           ;fs_pwm.c: 47:     T2CONbits.TMR2ON = 1;
 15571  005718  84BA               	bsf	186,2,c	;volatile
 15572                           
 15573                           ;fs_pwm.c: 49:     TMR2 = 0;
 15574  00571A  0E00               	movlw	0
 15575  00571C  6EBC               	movwf	188,c	;volatile
 15576                           
 15577                           ;fs_pwm.c: 50:     PR2 = 199;
 15578  00571E  0EC7               	movlw	199
 15579  005720  6EBB               	movwf	187,c	;volatile
 15580                           
 15581                           ;fs_pwm.c: 51:     CCPR1L = 0;
 15582  005722  0E00               	movlw	0
 15583  005724  6EBE               	movwf	190,c	;volatile
 15584                           
 15585                           ;fs_pwm.c: 52:     CCPR2L = 0;
 15586  005726  0E00               	movlw	0
 15587  005728  6E67               	movwf	103,c	;volatile
 15588  00572A  0012               	return		;funcret
 15589  00572C                     __end_of_PWM_Init:
 15590                           	callstack 0
 15591                           
 15592 ;; *************** function _PWM2_setDC *****************
 15593 ;; Defined at:
 15594 ;;		line 76 in file "fs_pwm.c"
 15595 ;; Parameters:    Size  Location     Type
 15596 ;;  dutycycle       2   87[COMRAM] short 
 15597 ;; Auto vars:     Size  Location     Type
 15598 ;;  duty            2   91[COMRAM] unsigned short 
 15599 ;; Return value:  Size  Location     Type
 15600 ;;                  1    wreg      void 
 15601 ;; Registers used:
 15602 ;;		wreg, status,2, status,0, cstack
 15603 ;; Tracked objects:
 15604 ;;		On entry : 0/0
 15605 ;;		On exit  : 0/0
 15606 ;;		Unchanged: 0/0
 15607 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15608 ;;      Params:         2       0       0       0       0       0       0
 15609 ;;      Locals:         2       0       0       0       0       0       0
 15610 ;;      Temps:          2       0       0       0       0       0       0
 15611 ;;      Totals:         6       0       0       0       0       0       0
 15612 ;;Total ram usage:        6 bytes
 15613 ;; Hardware stack levels used:    1
 15614 ;; Hardware stack levels required when called:    2
 15615 ;; This function calls:
 15616 ;;		___fltol
 15617 ;;		___xxtofl
 15618 ;;		_fabsf
 15619 ;; This function is called by:
 15620 ;;		_loopTaskInit
 15621 ;;		_stopMotor
 15622 ;;		_startMotor
 15623 ;; This function uses a non-reentrant model
 15624 ;;
 15625                           
 15626                           	psect	text71
 15627  004E2E                     __ptext71:
 15628                           	callstack 0
 15629  004E2E                     _PWM2_setDC:
 15630                           	callstack 24
 15631  004E2E                     
 15632                           ;fs_pwm.c: 80:     if (dutycycle <= 1023)
 15633  004E2E  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
 15634  004E30  EF23  F027         	goto	u6820
 15635  004E34  0E04               	movlw	4
 15636  004E36  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
 15637  004E38  B0D8               	btfsc	status,0,c
 15638  004E3A  EF21  F027         	goto	u6821
 15639  004E3E  EF23  F027         	goto	u6820
 15640  004E42                     u6821:
 15641  004E42  EF53  F027         	goto	l584
 15642  004E46                     u6820:
 15643  004E46                     
 15644                           ;fs_pwm.c: 81:     {;fs_pwm.c: 82:         duty = (uint16_t) fabsf(dutycycle);
 15645  004E46  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
 15646  004E4A  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
 15647  004E4E  0E00               	movlw	0
 15648  004E50  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15649  004E52  0EFF               	movlw	-1
 15650  004E54  6E10               	movwf	(___xxtofl@val+2)^0,c
 15651  004E56  6E11               	movwf	(___xxtofl@val+3)^0,c
 15652  004E58  0E01               	movlw	1
 15653  004E5A  ECB6  F01A         	call	___xxtofl
 15654  004E5E  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15655  004E62  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15656  004E66  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15657  004E6A  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15658  004E6E  EC3D  F02B         	call	_fabsf	;wreg free
 15659  004E72  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15660  004E76  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15661  004E7A  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15662  004E7E  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15663  004E82  EC6B  F021         	call	___fltol	;wreg free
 15664  004E86  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
 15665  004E8A  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
 15666  004E8E                     
 15667                           ;fs_pwm.c: 83:         CCPR2L = duty>>2;
 15668  004E8E  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
 15669  004E92  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
 15670  004E96  90D8               	bcf	status,0,c
 15671  004E98  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15672  004E9A  325A               	rrcf	??_PWM2_setDC^0,f,c
 15673  004E9C  90D8               	bcf	status,0,c
 15674  004E9E  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
 15675  004EA0  325A               	rrcf	??_PWM2_setDC^0,f,c
 15676  004EA2  505A               	movf	??_PWM2_setDC^0,w,c
 15677  004EA4  6E67               	movwf	103,c	;volatile
 15678  004EA6                     l584:
 15679  004EA6  0012               	return		;funcret
 15680  004EA8                     __end_of_PWM2_setDC:
 15681                           	callstack 0
 15682                           
 15683 ;; *************** function _PWM1_setDC *****************
 15684 ;; Defined at:
 15685 ;;		line 60 in file "fs_pwm.c"
 15686 ;; Parameters:    Size  Location     Type
 15687 ;;  dutycycle       2   87[COMRAM] short 
 15688 ;; Auto vars:     Size  Location     Type
 15689 ;;  duty            2   91[COMRAM] unsigned short 
 15690 ;; Return value:  Size  Location     Type
 15691 ;;                  1    wreg      void 
 15692 ;; Registers used:
 15693 ;;		wreg, status,2, status,0, cstack
 15694 ;; Tracked objects:
 15695 ;;		On entry : 0/0
 15696 ;;		On exit  : 0/0
 15697 ;;		Unchanged: 0/0
 15698 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15699 ;;      Params:         2       0       0       0       0       0       0
 15700 ;;      Locals:         2       0       0       0       0       0       0
 15701 ;;      Temps:          2       0       0       0       0       0       0
 15702 ;;      Totals:         6       0       0       0       0       0       0
 15703 ;;Total ram usage:        6 bytes
 15704 ;; Hardware stack levels used:    1
 15705 ;; Hardware stack levels required when called:    2
 15706 ;; This function calls:
 15707 ;;		___fltol
 15708 ;;		___xxtofl
 15709 ;;		_fabsf
 15710 ;; This function is called by:
 15711 ;;		_loopTaskInit
 15712 ;;		_stopMotor
 15713 ;;		_startMotor
 15714 ;; This function uses a non-reentrant model
 15715 ;;
 15716                           
 15717                           	psect	text72
 15718  004EA8                     __ptext72:
 15719                           	callstack 0
 15720  004EA8                     _PWM1_setDC:
 15721                           	callstack 24
 15722  004EA8                     
 15723                           ;fs_pwm.c: 64:     if (dutycycle <= 1023)
 15724  004EA8  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
 15725  004EAA  EF60  F027         	goto	u6810
 15726  004EAE  0E04               	movlw	4
 15727  004EB0  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
 15728  004EB2  B0D8               	btfsc	status,0,c
 15729  004EB4  EF5E  F027         	goto	u6811
 15730  004EB8  EF60  F027         	goto	u6810
 15731  004EBC                     u6811:
 15732  004EBC  EF90  F027         	goto	l580
 15733  004EC0                     u6810:
 15734  004EC0                     
 15735                           ;fs_pwm.c: 65:     {;fs_pwm.c: 66:         duty = (uint16_t) fabsf(dutycycle);
 15736  004EC0  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
 15737  004EC4  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
 15738  004EC8  0E00               	movlw	0
 15739  004ECA  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
 15740  004ECC  0EFF               	movlw	-1
 15741  004ECE  6E10               	movwf	(___xxtofl@val+2)^0,c
 15742  004ED0  6E11               	movwf	(___xxtofl@val+3)^0,c
 15743  004ED2  0E01               	movlw	1
 15744  004ED4  ECB6  F01A         	call	___xxtofl
 15745  004ED8  C00E  F01C         	movff	?___xxtofl,fabsf@x
 15746  004EDC  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
 15747  004EE0  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
 15748  004EE4  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
 15749  004EE8  EC3D  F02B         	call	_fabsf	;wreg free
 15750  004EEC  C01C  F04E         	movff	?_fabsf,___fltol@f1
 15751  004EF0  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
 15752  004EF4  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
 15753  004EF8  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
 15754  004EFC  EC6B  F021         	call	___fltol	;wreg free
 15755  004F00  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
 15756  004F04  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
 15757  004F08                     
 15758                           ;fs_pwm.c: 67:         CCPR1L = duty>>2;
 15759  004F08  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
 15760  004F0C  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
 15761  004F10  90D8               	bcf	status,0,c
 15762  004F12  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15763  004F14  325A               	rrcf	??_PWM1_setDC^0,f,c
 15764  004F16  90D8               	bcf	status,0,c
 15765  004F18  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
 15766  004F1A  325A               	rrcf	??_PWM1_setDC^0,f,c
 15767  004F1C  505A               	movf	??_PWM1_setDC^0,w,c
 15768  004F1E  6EBE               	movwf	190,c	;volatile
 15769  004F20                     l580:
 15770  004F20  0012               	return		;funcret
 15771  004F22                     __end_of_PWM1_setDC:
 15772                           	callstack 0
 15773                           
 15774 ;; *************** function _fabsf *****************
 15775 ;; Defined at:
 15776 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
 15777 ;; Parameters:    Size  Location     Type
 15778 ;;  x               4   27[COMRAM] float 
 15779 ;; Auto vars:     Size  Location     Type
 15780 ;;  u               4   31[COMRAM] struct .
 15781 ;; Return value:  Size  Location     Type
 15782 ;;                  4   27[COMRAM] float 
 15783 ;; Registers used:
 15784 ;;		status,2, status,0
 15785 ;; Tracked objects:
 15786 ;;		On entry : 0/0
 15787 ;;		On exit  : 0/0
 15788 ;;		Unchanged: 0/0
 15789 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15790 ;;      Params:         4       0       0       0       0       0       0
 15791 ;;      Locals:         4       0       0       0       0       0       0
 15792 ;;      Temps:          0       0       0       0       0       0       0
 15793 ;;      Totals:         8       0       0       0       0       0       0
 15794 ;;Total ram usage:        8 bytes
 15795 ;; Hardware stack levels used:    1
 15796 ;; Hardware stack levels required when called:    1
 15797 ;; This function calls:
 15798 ;;		Nothing
 15799 ;; This function is called by:
 15800 ;;		_PWM1_setDC
 15801 ;;		_PWM2_setDC
 15802 ;; This function uses a non-reentrant model
 15803 ;;
 15804                           
 15805                           	psect	text73
 15806  00567A                     __ptext73:
 15807                           	callstack 0
 15808  00567A                     _fabsf:
 15809                           	callstack 24
 15810  00567A  C1AB  F020         	movff	fabsf@F463,fabsf@u
 15811  00567E  C1AC  F021         	movff	fabsf@F463+1,fabsf@u+1
 15812  005682  C1AD  F022         	movff	fabsf@F463+2,fabsf@u+2
 15813  005686  C1AE  F023         	movff	fabsf@F463+3,fabsf@u+3
 15814  00568A  C01C  F020         	movff	fabsf@x,fabsf@u
 15815  00568E  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
 15816  005692  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
 15817  005696  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
 15818  00569A  9E23               	bcf	(fabsf@u+3)^0,7,c
 15819  00569C  C020  F01C         	movff	fabsf@u,?_fabsf
 15820  0056A0  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
 15821  0056A4  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
 15822  0056A8  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
 15823  0056AC  0012               	return		;funcret
 15824  0056AE                     __end_of_fabsf:
 15825                           	callstack 0
 15826                           
 15827 ;; *************** function ___xxtofl *****************
 15828 ;; Defined at:
 15829 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
 15830 ;; Parameters:    Size  Location     Type
 15831 ;;  sign            1    wreg     unsigned char 
 15832 ;;  val             4   13[COMRAM] long 
 15833 ;; Auto vars:     Size  Location     Type
 15834 ;;  sign            1   21[COMRAM] unsigned char 
 15835 ;;  arg             4   23[COMRAM] unsigned long 
 15836 ;;  exp             1   22[COMRAM] unsigned char 
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  4   13[COMRAM] unsigned char 
 15839 ;; Registers used:
 15840 ;;		wreg, status,2, status,0
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/0
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15846 ;;      Params:         4       0       0       0       0       0       0
 15847 ;;      Locals:         6       0       0       0       0       0       0
 15848 ;;      Temps:          4       0       0       0       0       0       0
 15849 ;;      Totals:        14       0       0       0       0       0       0
 15850 ;;Total ram usage:       14 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:    1
 15853 ;; This function calls:
 15854 ;;		Nothing
 15855 ;; This function is called by:
 15856 ;;		_scanAdcConversion
 15857 ;;		_calculatedAverageValue
 15858 ;;		_PWM1_setDC
 15859 ;;		_PWM2_setDC
 15860 ;;		_speedControl
 15861 ;; This function uses a non-reentrant model
 15862 ;;
 15863                           
 15864                           	psect	text74
 15865  00356C                     __ptext74:
 15866                           	callstack 0
 15867  00356C                     ___xxtofl:
 15868                           	callstack 24
 15869                           
 15870                           ;incstack = 0
 15871                           ;___xxtofl@sign stored from wreg
 15872  00356C  6E16               	movwf	___xxtofl@sign^0,c
 15873  00356E  5016               	movf	___xxtofl@sign^0,w,c
 15874  003570  B4D8               	btfsc	status,2,c
 15875  003572  EFBD  F01A         	goto	u6501
 15876  003576  EFBF  F01A         	goto	u6500
 15877  00357A                     u6501:
 15878  00357A  EFE1  F01A         	goto	l1353
 15879  00357E                     u6500:
 15880  00357E  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 15881  003580  EFC6  F01A         	goto	u6510
 15882  003584  EFC4  F01A         	goto	u6511
 15883  003588                     u6511:
 15884  003588  EFE1  F01A         	goto	l1353
 15885  00358C                     u6510:
 15886  00358C  C00E  F012         	movff	___xxtofl@val,??___xxtofl
 15887  003590  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
 15888  003594  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
 15889  003598  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
 15890  00359C  1E12               	comf	??___xxtofl^0,f,c
 15891  00359E  1E13               	comf	(??___xxtofl+1)^0,f,c
 15892  0035A0  1E14               	comf	(??___xxtofl+2)^0,f,c
 15893  0035A2  1E15               	comf	(??___xxtofl+3)^0,f,c
 15894  0035A4  2A12               	incf	??___xxtofl^0,f,c
 15895  0035A6  0E00               	movlw	0
 15896  0035A8  2213               	addwfc	(??___xxtofl+1)^0,f,c
 15897  0035AA  2214               	addwfc	(??___xxtofl+2)^0,f,c
 15898  0035AC  2215               	addwfc	(??___xxtofl+3)^0,f,c
 15899  0035AE  C012  F018         	movff	??___xxtofl,___xxtofl@arg
 15900  0035B2  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
 15901  0035B6  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
 15902  0035BA  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
 15903  0035BE  EFE9  F01A         	goto	l5553
 15904  0035C2                     l1353:
 15905  0035C2  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
 15906  0035C6  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
 15907  0035CA  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
 15908  0035CE  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
 15909  0035D2                     l5553:
 15910  0035D2  500E               	movf	___xxtofl@val^0,w,c
 15911  0035D4  100F               	iorwf	(___xxtofl@val+1)^0,w,c
 15912  0035D6  1010               	iorwf	(___xxtofl@val+2)^0,w,c
 15913  0035D8  1011               	iorwf	(___xxtofl@val+3)^0,w,c
 15914  0035DA  A4D8               	btfss	status,2,c
 15915  0035DC  EFF2  F01A         	goto	u6521
 15916  0035E0  EFF4  F01A         	goto	u6520
 15917  0035E4                     u6521:
 15918  0035E4  EFFE  F01A         	goto	l5559
 15919  0035E8                     u6520:
 15920  0035E8  0E00               	movlw	0
 15921  0035EA  6E0E               	movwf	?___xxtofl^0,c
 15922  0035EC  0E00               	movlw	0
 15923  0035EE  6E0F               	movwf	(?___xxtofl+1)^0,c
 15924  0035F0  0E00               	movlw	0
 15925  0035F2  6E10               	movwf	(?___xxtofl+2)^0,c
 15926  0035F4  0E00               	movlw	0
 15927  0035F6  6E11               	movwf	(?___xxtofl+3)^0,c
 15928  0035F8  EF8F  F01B         	goto	l1356
 15929  0035FC                     l5559:
 15930  0035FC  0E96               	movlw	150
 15931  0035FE  6E17               	movwf	___xxtofl@exp^0,c
 15932  003600  EF08  F01B         	goto	l5563
 15933  003604                     l5561:
 15934  003604  2A17               	incf	___xxtofl@exp^0,f,c
 15935  003606  90D8               	bcf	status,0,c
 15936  003608  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15937  00360A  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15938  00360C  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15939  00360E  3218               	rrcf	___xxtofl@arg^0,f,c
 15940  003610                     l5563:
 15941  003610  0E00               	movlw	0
 15942  003612  1418               	andwf	___xxtofl@arg^0,w,c
 15943  003614  6E12               	movwf	??___xxtofl^0,c
 15944  003616  0E00               	movlw	0
 15945  003618  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15946  00361A  6E13               	movwf	(??___xxtofl+1)^0,c
 15947  00361C  0E00               	movlw	0
 15948  00361E  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15949  003620  6E14               	movwf	(??___xxtofl+2)^0,c
 15950  003622  0EFE               	movlw	254
 15951  003624  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15952  003626  6E15               	movwf	(??___xxtofl+3)^0,c
 15953  003628  5012               	movf	??___xxtofl^0,w,c
 15954  00362A  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15955  00362C  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15956  00362E  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15957  003630  A4D8               	btfss	status,2,c
 15958  003632  EF1D  F01B         	goto	u6531
 15959  003636  EF1F  F01B         	goto	u6530
 15960  00363A                     u6531:
 15961  00363A  EF02  F01B         	goto	l5561
 15962  00363E                     u6530:
 15963  00363E  EF2D  F01B         	goto	l1360
 15964  003642                     l5565:
 15965  003642  2A17               	incf	___xxtofl@exp^0,f,c
 15966  003644  0E01               	movlw	1
 15967  003646  2618               	addwf	___xxtofl@arg^0,f,c
 15968  003648  0E00               	movlw	0
 15969  00364A  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
 15970  00364C  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
 15971  00364E  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
 15972  003650  90D8               	bcf	status,0,c
 15973  003652  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
 15974  003654  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
 15975  003656  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
 15976  003658  3218               	rrcf	___xxtofl@arg^0,f,c
 15977  00365A                     l1360:
 15978  00365A  0E00               	movlw	0
 15979  00365C  1418               	andwf	___xxtofl@arg^0,w,c
 15980  00365E  6E12               	movwf	??___xxtofl^0,c
 15981  003660  0E00               	movlw	0
 15982  003662  1419               	andwf	(___xxtofl@arg+1)^0,w,c
 15983  003664  6E13               	movwf	(??___xxtofl+1)^0,c
 15984  003666  0E00               	movlw	0
 15985  003668  141A               	andwf	(___xxtofl@arg+2)^0,w,c
 15986  00366A  6E14               	movwf	(??___xxtofl+2)^0,c
 15987  00366C  0EFF               	movlw	255
 15988  00366E  141B               	andwf	(___xxtofl@arg+3)^0,w,c
 15989  003670  6E15               	movwf	(??___xxtofl+3)^0,c
 15990  003672  5012               	movf	??___xxtofl^0,w,c
 15991  003674  1013               	iorwf	(??___xxtofl+1)^0,w,c
 15992  003676  1014               	iorwf	(??___xxtofl+2)^0,w,c
 15993  003678  1015               	iorwf	(??___xxtofl+3)^0,w,c
 15994  00367A  A4D8               	btfss	status,2,c
 15995  00367C  EF42  F01B         	goto	u6541
 15996  003680  EF44  F01B         	goto	u6540
 15997  003684                     u6541:
 15998  003684  EF21  F01B         	goto	l5565
 15999  003688                     u6540:
 16000  003688  EF4C  F01B         	goto	l5573
 16001  00368C                     l5571:
 16002  00368C  0617               	decf	___xxtofl@exp^0,f,c
 16003  00368E  90D8               	bcf	status,0,c
 16004  003690  3618               	rlcf	___xxtofl@arg^0,f,c
 16005  003692  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
 16006  003694  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
 16007  003696  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
 16008  003698                     l5573:
 16009  003698  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
 16010  00369A  EF51  F01B         	goto	u6551
 16011  00369E  EF53  F01B         	goto	u6550
 16012  0036A2                     u6551:
 16013  0036A2  EF5B  F01B         	goto	l1367
 16014  0036A6                     u6550:
 16015  0036A6  0E02               	movlw	2
 16016  0036A8  6017               	cpfslt	___xxtofl@exp^0,c
 16017  0036AA  EF59  F01B         	goto	u6561
 16018  0036AE  EF5B  F01B         	goto	u6560
 16019  0036B2                     u6561:
 16020  0036B2  EF46  F01B         	goto	l5571
 16021  0036B6                     u6560:
 16022  0036B6                     l1367:
 16023  0036B6  B017               	btfsc	___xxtofl@exp^0,0,c
 16024  0036B8  EF60  F01B         	goto	u6571
 16025  0036BC  EF62  F01B         	goto	u6570
 16026  0036C0                     u6571:
 16027  0036C0  EF63  F01B         	goto	l5579
 16028  0036C4                     u6570:
 16029  0036C4  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
 16030  0036C6                     l5579:
 16031  0036C6  90D8               	bcf	status,0,c
 16032  0036C8  3217               	rrcf	___xxtofl@exp^0,f,c
 16033  0036CA  C017  F012         	movff	___xxtofl@exp,??___xxtofl
 16034  0036CE  6A13               	clrf	(??___xxtofl+1)^0,c
 16035  0036D0  6A14               	clrf	(??___xxtofl+2)^0,c
 16036  0036D2  6A15               	clrf	(??___xxtofl+3)^0,c
 16037  0036D4  C012  F015         	movff	??___xxtofl,??___xxtofl+3
 16038  0036D8  6A14               	clrf	(??___xxtofl+2)^0,c
 16039  0036DA  6A13               	clrf	(??___xxtofl+1)^0,c
 16040  0036DC  6A12               	clrf	??___xxtofl^0,c
 16041  0036DE  5012               	movf	??___xxtofl^0,w,c
 16042  0036E0  1218               	iorwf	___xxtofl@arg^0,f,c
 16043  0036E2  5013               	movf	(??___xxtofl+1)^0,w,c
 16044  0036E4  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
 16045  0036E6  5014               	movf	(??___xxtofl+2)^0,w,c
 16046  0036E8  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
 16047  0036EA  5015               	movf	(??___xxtofl+3)^0,w,c
 16048  0036EC  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
 16049  0036EE  5016               	movf	___xxtofl@sign^0,w,c
 16050  0036F0  B4D8               	btfsc	status,2,c
 16051  0036F2  EF7D  F01B         	goto	u6581
 16052  0036F6  EF7F  F01B         	goto	u6580
 16053  0036FA                     u6581:
 16054  0036FA  EF87  F01B         	goto	l5589
 16055  0036FE                     u6580:
 16056  0036FE  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
 16057  003700  EF86  F01B         	goto	u6590
 16058  003704  EF84  F01B         	goto	u6591
 16059  003708                     u6591:
 16060  003708  EF87  F01B         	goto	l5589
 16061  00370C                     u6590:
 16062  00370C  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
 16063  00370E                     l5589:
 16064  00370E  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
 16065  003712  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
 16066  003716  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
 16067  00371A  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
 16068  00371E                     l1356:
 16069  00371E  0012               	return		;funcret
 16070  003720                     __end_of___xxtofl:
 16071                           	callstack 0
 16072                           
 16073 ;; *************** function ___fltol *****************
 16074 ;; Defined at:
 16075 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 16076 ;; Parameters:    Size  Location     Type
 16077 ;;  f1              4   77[COMRAM] unsigned char 
 16078 ;; Auto vars:     Size  Location     Type
 16079 ;;  exp1            1   86[COMRAM] unsigned char 
 16080 ;;  sign1           1   85[COMRAM] unsigned char 
 16081 ;; Return value:  Size  Location     Type
 16082 ;;                  4   77[COMRAM] long 
 16083 ;; Registers used:
 16084 ;;		wreg, status,2, status,0
 16085 ;; Tracked objects:
 16086 ;;		On entry : 0/0
 16087 ;;		On exit  : 0/0
 16088 ;;		Unchanged: 0/0
 16089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16090 ;;      Params:         4       0       0       0       0       0       0
 16091 ;;      Locals:         2       0       0       0       0       0       0
 16092 ;;      Temps:          4       0       0       0       0       0       0
 16093 ;;      Totals:        10       0       0       0       0       0       0
 16094 ;;Total ram usage:       10 bytes
 16095 ;; Hardware stack levels used:    1
 16096 ;; Hardware stack levels required when called:    1
 16097 ;; This function calls:
 16098 ;;		Nothing
 16099 ;; This function is called by:
 16100 ;;		_scanAdcConversion
 16101 ;;		_PWM1_setDC
 16102 ;;		_PWM2_setDC
 16103 ;;		_speedControl
 16104 ;;		_efgtoa
 16105 ;; This function uses a non-reentrant model
 16106 ;;
 16107                           
 16108                           	psect	text75
 16109  0042D6                     __ptext75:
 16110                           	callstack 0
 16111  0042D6                     ___fltol:
 16112                           	callstack 24
 16113  0042D6  3450               	rlcf	(___fltol@f1+2)^0,w,c
 16114  0042D8  3451               	rlcf	(___fltol@f1+3)^0,w,c
 16115  0042DA  6E57               	movwf	___fltol@exp1^0,c
 16116  0042DC  5057               	movf	___fltol@exp1^0,w,c
 16117  0042DE  A4D8               	btfss	status,2,c
 16118  0042E0  EF74  F021         	goto	u5231
 16119  0042E4  EF76  F021         	goto	u5230
 16120  0042E8                     u5231:
 16121  0042E8  EF80  F021         	goto	l4911
 16122  0042EC                     u5230:
 16123  0042EC                     l4907:
 16124  0042EC  0E00               	movlw	0
 16125  0042EE  6E4E               	movwf	?___fltol^0,c
 16126  0042F0  0E00               	movlw	0
 16127  0042F2  6E4F               	movwf	(?___fltol+1)^0,c
 16128  0042F4  0E00               	movlw	0
 16129  0042F6  6E50               	movwf	(?___fltol+2)^0,c
 16130  0042F8  0E00               	movlw	0
 16131  0042FA  6E51               	movwf	(?___fltol+3)^0,c
 16132  0042FC  EFED  F021         	goto	l995
 16133  004300                     l4911:
 16134  004300  C04E  F052         	movff	___fltol@f1,??___fltol
 16135  004304  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 16136  004308  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 16137  00430C  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 16138  004310  0E20               	movlw	32
 16139  004312  EF90  F021         	goto	u5240
 16140  004316                     u5245:
 16141  004316  90D8               	bcf	status,0,c
 16142  004318  3255               	rrcf	(??___fltol+3)^0,f,c
 16143  00431A  3254               	rrcf	(??___fltol+2)^0,f,c
 16144  00431C  3253               	rrcf	(??___fltol+1)^0,f,c
 16145  00431E  3252               	rrcf	??___fltol^0,f,c
 16146  004320                     u5240:
 16147  004320  2EE8               	decfsz	wreg,f,c
 16148  004322  EF8B  F021         	goto	u5245
 16149  004326  5052               	movf	??___fltol^0,w,c
 16150  004328  6E56               	movwf	___fltol@sign1^0,c
 16151  00432A  8E50               	bsf	(___fltol@f1+2)^0,7,c
 16152  00432C  0EFF               	movlw	255
 16153  00432E  164E               	andwf	___fltol@f1^0,f,c
 16154  004330  0EFF               	movlw	255
 16155  004332  164F               	andwf	(___fltol@f1+1)^0,f,c
 16156  004334  0EFF               	movlw	255
 16157  004336  1650               	andwf	(___fltol@f1+2)^0,f,c
 16158  004338  0E00               	movlw	0
 16159  00433A  1651               	andwf	(___fltol@f1+3)^0,f,c
 16160  00433C  0E96               	movlw	150
 16161  00433E  5E57               	subwf	___fltol@exp1^0,f,c
 16162  004340  BE57               	btfsc	___fltol@exp1^0,7,c
 16163  004342  EFA7  F021         	goto	u5250
 16164  004346  EFA5  F021         	goto	u5251
 16165  00434A                     u5251:
 16166  00434A  EFBD  F021         	goto	l4931
 16167  00434E                     u5250:
 16168  00434E  5057               	movf	___fltol@exp1^0,w,c
 16169  004350  0A80               	xorlw	128
 16170  004352  0F97               	addlw	151
 16171  004354  B0D8               	btfsc	status,0,c
 16172  004356  EFAF  F021         	goto	u5261
 16173  00435A  EFB1  F021         	goto	u5260
 16174  00435E                     u5261:
 16175  00435E  EFB3  F021         	goto	l4927
 16176  004362                     u5260:
 16177  004362  EF76  F021         	goto	l4907
 16178  004366                     l4927:
 16179  004366  90D8               	bcf	status,0,c
 16180  004368  3251               	rrcf	(___fltol@f1+3)^0,f,c
 16181  00436A  3250               	rrcf	(___fltol@f1+2)^0,f,c
 16182  00436C  324F               	rrcf	(___fltol@f1+1)^0,f,c
 16183  00436E  324E               	rrcf	___fltol@f1^0,f,c
 16184  004370  3E57               	incfsz	___fltol@exp1^0,f,c
 16185  004372  EFB3  F021         	goto	l4927
 16186  004376  EFD5  F021         	goto	l4941
 16187  00437A                     l4931:
 16188  00437A  0E1F               	movlw	31
 16189  00437C  6457               	cpfsgt	___fltol@exp1^0,c
 16190  00437E  EFC3  F021         	goto	u5271
 16191  004382  EFC5  F021         	goto	u5270
 16192  004386                     u5271:
 16193  004386  EFCD  F021         	goto	l4939
 16194  00438A                     u5270:
 16195  00438A  EF76  F021         	goto	l4907
 16196  00438E                     l4937:
 16197  00438E  90D8               	bcf	status,0,c
 16198  004390  364E               	rlcf	___fltol@f1^0,f,c
 16199  004392  364F               	rlcf	(___fltol@f1+1)^0,f,c
 16200  004394  3650               	rlcf	(___fltol@f1+2)^0,f,c
 16201  004396  3651               	rlcf	(___fltol@f1+3)^0,f,c
 16202  004398  0657               	decf	___fltol@exp1^0,f,c
 16203  00439A                     l4939:
 16204  00439A  5057               	movf	___fltol@exp1^0,w,c
 16205  00439C  A4D8               	btfss	status,2,c
 16206  00439E  EFD3  F021         	goto	u5281
 16207  0043A2  EFD5  F021         	goto	u5280
 16208  0043A6                     u5281:
 16209  0043A6  EFC7  F021         	goto	l4937
 16210  0043AA                     u5280:
 16211  0043AA                     l4941:
 16212  0043AA  5056               	movf	___fltol@sign1^0,w,c
 16213  0043AC  B4D8               	btfsc	status,2,c
 16214  0043AE  EFDB  F021         	goto	u5291
 16215  0043B2  EFDD  F021         	goto	u5290
 16216  0043B6                     u5291:
 16217  0043B6  EFE5  F021         	goto	l4945
 16218  0043BA                     u5290:
 16219  0043BA  1E51               	comf	(___fltol@f1+3)^0,f,c
 16220  0043BC  1E50               	comf	(___fltol@f1+2)^0,f,c
 16221  0043BE  1E4F               	comf	(___fltol@f1+1)^0,f,c
 16222  0043C0  6C4E               	negf	___fltol@f1^0,c
 16223  0043C2  0E00               	movlw	0
 16224  0043C4  224F               	addwfc	(___fltol@f1+1)^0,f,c
 16225  0043C6  2250               	addwfc	(___fltol@f1+2)^0,f,c
 16226  0043C8  2251               	addwfc	(___fltol@f1+3)^0,f,c
 16227  0043CA                     l4945:
 16228  0043CA  C04E  F04E         	movff	___fltol@f1,?___fltol
 16229  0043CE  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 16230  0043D2  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 16231  0043D6  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 16232  0043DA                     l995:
 16233  0043DA  0012               	return		;funcret
 16234  0043DC                     __end_of___fltol:
 16235                           	callstack 0
 16236                           
 16237 ;; *************** function _TIMER0 *****************
 16238 ;; Defined at:
 16239 ;;		line 33 in file "fs_timer.c"
 16240 ;; Parameters:    Size  Location     Type
 16241 ;;		None
 16242 ;; Auto vars:     Size  Location     Type
 16243 ;;		None
 16244 ;; Return value:  Size  Location     Type
 16245 ;;                  1    wreg      void 
 16246 ;; Registers used:
 16247 ;;		wreg, status,2, status,0
 16248 ;; Tracked objects:
 16249 ;;		On entry : 0/0
 16250 ;;		On exit  : 0/0
 16251 ;;		Unchanged: 0/0
 16252 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16253 ;;      Params:         0       0       0       0       0       0       0
 16254 ;;      Locals:         0       0       0       0       0       0       0
 16255 ;;      Temps:          0       0       0       0       0       0       0
 16256 ;;      Totals:         0       0       0       0       0       0       0
 16257 ;;Total ram usage:        0 bytes
 16258 ;; Hardware stack levels used:    1
 16259 ;; This function calls:
 16260 ;;		Nothing
 16261 ;; This function is called by:
 16262 ;;		Interrupt level 2
 16263 ;; This function uses a non-reentrant model
 16264 ;;
 16265                           
 16266                           	psect	intcode
 16267  000008                     __pintcode:
 16268                           	callstack 0
 16269  000008                     _TIMER0:
 16270                           	callstack 19
 16271                           
 16272                           ;incstack = 0
 16273  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16274  00000A                     
 16275                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 16276  00000A  A4F2               	btfss	242,2,c	;volatile
 16277  00000C  EF0A  F000         	goto	i2u791_41
 16278  000010  EF0C  F000         	goto	i2u791_40
 16279  000014                     i2u791_41:
 16280  000014  EF55  F000         	goto	i2l692
 16281  000018                     i2u791_40:
 16282  000018  AAF2               	btfss	242,5,c	;volatile
 16283  00001A  EF11  F000         	goto	i2u792_41
 16284  00001E  EF13  F000         	goto	i2u792_40
 16285  000022                     i2u792_41:
 16286  000022  EF55  F000         	goto	i2l692
 16287  000026                     i2u792_40:
 16288  000026                     
 16289                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 16290  000026  94F2               	bcf	242,2,c	;volatile
 16291  000028                     
 16292                           ;fs_timer.c: 38:         TMR0H = 0x63;
 16293  000028  0E63               	movlw	99
 16294  00002A  6ED7               	movwf	215,c	;volatile
 16295                           
 16296                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 16297  00002C  0EC0               	movlw	192
 16298  00002E  6ED6               	movwf	214,c	;volatile
 16299  000030                     
 16300                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 16301  000030  0101               	movlb	1	; () banked
 16302  000032  2B94               	incf	(_timer_value+5)& (0+255),f,b
 16303  000034                     
 16304                           ; BSR set to: 1
 16305                           ;fs_timer.c: 43:         if (timer_value.adc_conversion_time >8)
 16306  000034  0E08               	movlw	8
 16307  000036  6594               	cpfsgt	(_timer_value+5)& (0+255),b
 16308  000038  EF20  F000         	goto	i2u793_41
 16309  00003C  EF22  F000         	goto	i2u793_40
 16310  000040                     i2u793_41:
 16311  000040  EF24  F000         	goto	i2l6531
 16312  000044                     i2u793_40:
 16313  000044                     
 16314                           ; BSR set to: 1
 16315                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.adc_conversion_time =
      +                           0;
 16316  000044  0E00               	movlw	0
 16317  000046  6F94               	movwf	(_timer_value+5)& (0+255),b
 16318  000048                     i2l6531:
 16319                           
 16320                           ; BSR set to: 1
 16321                           ;fs_timer.c: 48:         if (startIsClick == 1)
 16322  000048  0100               	movlb	0	; () banked
 16323  00004A  05FE               	decf	_startIsClick& (0+255),w,b
 16324  00004C  A4D8               	btfss	status,2,c
 16325  00004E  EF2B  F000         	goto	i2u794_41
 16326  000052  EF2D  F000         	goto	i2u794_40
 16327  000056                     i2u794_41:
 16328  000056  EF30  F000         	goto	i2l6535
 16329  00005A                     i2u794_40:
 16330  00005A                     
 16331                           ; BSR set to: 0
 16332                           ;fs_timer.c: 49:         {;fs_timer.c: 50:             timer_value.second_counter++;
 16333  00005A  0101               	movlb	1	; () banked
 16334  00005C  4B95               	infsnz	(_timer_value+6)& (0+255),f,b
 16335  00005E  2B96               	incf	(_timer_value+7)& (0+255),f,b
 16336  000060                     i2l6535:
 16337                           
 16338                           ;fs_timer.c: 53:         if(button_bounce_controller.menu == 1)
 16339  000060  0101               	movlb	1	; () banked
 16340  000062  059D               	decf	_button_bounce_controller& (0+255),w,b
 16341  000064  A4D8               	btfss	status,2,c
 16342  000066  EF37  F000         	goto	i2u795_41
 16343  00006A  EF39  F000         	goto	i2u795_40
 16344  00006E                     i2u795_41:
 16345  00006E  EF3A  F000         	goto	i2l6539
 16346  000072                     i2u795_40:
 16347  000072                     
 16348                           ; BSR set to: 1
 16349                           ;fs_timer.c: 54:         {;fs_timer.c: 55:              timer_value.menu_login_delay++;
 16350  000072  2B93               	incf	(_timer_value+4)& (0+255),f,b
 16351  000074                     i2l6539:
 16352                           
 16353                           ; BSR set to: 1
 16354                           ;fs_timer.c: 57:         if(button_bounce_controller.menu == 0)
 16355  000074  519D               	movf	_button_bounce_controller& (0+255),w,b
 16356  000076  A4D8               	btfss	status,2,c
 16357  000078  EF40  F000         	goto	i2u796_41
 16358  00007C  EF42  F000         	goto	i2u796_40
 16359  000080                     i2u796_41:
 16360  000080  EF44  F000         	goto	i2l6543
 16361  000084                     i2u796_40:
 16362  000084                     
 16363                           ; BSR set to: 1
 16364                           ;fs_timer.c: 58:         {;fs_timer.c: 59:              timer_value.menu_login_delay = 0
      +                          ;
 16365  000084  0E00               	movlw	0
 16366  000086  6F93               	movwf	(_timer_value+4)& (0+255),b
 16367  000088                     i2l6543:
 16368                           
 16369                           ; BSR set to: 1
 16370                           ;fs_timer.c: 62:         if (timer_value.second_counter >= 100)
 16371  000088  5196               	movf	(_timer_value+7)& (0+255),w,b
 16372  00008A  E109               	bnz	i2u797_40
 16373  00008C  0E64               	movlw	100
 16374  00008E  5D95               	subwf	(_timer_value+6)& (0+255),w,b
 16375  000090  A0D8               	btfss	status,0,c
 16376  000092  EF4D  F000         	goto	i2u797_41
 16377  000096  EF4F  F000         	goto	i2u797_40
 16378  00009A                     i2u797_41:
 16379  00009A  EF55  F000         	goto	i2l692
 16380  00009E                     i2u797_40:
 16381  00009E                     
 16382                           ; BSR set to: 1
 16383                           ;fs_timer.c: 63:         {;fs_timer.c: 64:             timer_value.second_counter = 0;
 16384  00009E  0E00               	movlw	0
 16385  0000A0  6F96               	movwf	(_timer_value+7)& (0+255),b
 16386  0000A2  0E00               	movlw	0
 16387  0000A4  6F95               	movwf	(_timer_value+6)& (0+255),b
 16388  0000A6                     
 16389                           ; BSR set to: 1
 16390                           ;fs_timer.c: 65:             timer_counter_flag.one_second_flag = 1;
 16391  0000A6  0100               	movlb	0	; () banked
 16392  0000A8  81FA               	bsf	_timer_counter_flag& (0+255),0,b
 16393  0000AA                     i2l692:
 16394  0000AA  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16395  0000AC  0011               	retfie		f
 16396  0000AE                     __end_of_TIMER0:
 16397                           	callstack 0
 16398                           
 16399                           	psect	rparam
 16400  0000                     
 16401                           	psect	temp
 16402  00005F                     btemp:
 16403                           	callstack 0
 16404  00005F                     	ds	1
 16405  0000                     int$flags	set	btemp
 16406  0000                     wtemp8	set	btemp+1
 16407  0000                     ttemp5	set	btemp+1
 16408  0000                     ttemp6	set	btemp+4
 16409  0000                     ttemp7	set	btemp+8
 16410                           
 16411                           	psect	idloc
 16412                           
 16413                           ;Config register IDLOC0 @ 0x200000
 16414                           ;	unspecified, using default values
 16415  200000                     	org	2097152
 16416  200000  FF                 	db	255
 16417                           
 16418                           ;Config register IDLOC1 @ 0x200001
 16419                           ;	unspecified, using default values
 16420  200001                     	org	2097153
 16421  200001  FF                 	db	255
 16422                           
 16423                           ;Config register IDLOC2 @ 0x200002
 16424                           ;	unspecified, using default values
 16425  200002                     	org	2097154
 16426  200002  FF                 	db	255
 16427                           
 16428                           ;Config register IDLOC3 @ 0x200003
 16429                           ;	unspecified, using default values
 16430  200003                     	org	2097155
 16431  200003  FF                 	db	255
 16432                           
 16433                           ;Config register IDLOC4 @ 0x200004
 16434                           ;	unspecified, using default values
 16435  200004                     	org	2097156
 16436  200004  FF                 	db	255
 16437                           
 16438                           ;Config register IDLOC5 @ 0x200005
 16439                           ;	unspecified, using default values
 16440  200005                     	org	2097157
 16441  200005  FF                 	db	255
 16442                           
 16443                           ;Config register IDLOC6 @ 0x200006
 16444                           ;	unspecified, using default values
 16445  200006                     	org	2097158
 16446  200006  FF                 	db	255
 16447                           
 16448                           ;Config register IDLOC7 @ 0x200007
 16449                           ;	unspecified, using default values
 16450  200007                     	org	2097159
 16451  200007  FF                 	db	255
 16452                           
 16453                           	psect	config
 16454                           
 16455                           ; Padding undefined space
 16456  300000                     	org	3145728
 16457  300000  FF                 	db	255
 16458                           
 16459                           ;Config register CONFIG1H @ 0x300001
 16460                           ;	Oscillator Selection bits
 16461                           ;	FOSC = INTIO67, Internal oscillator block
 16462                           ;	4X PLL Enable
 16463                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16464                           ;	Primary clock enable bit
 16465                           ;	PRICLKEN = ON, Primary clock is always enabled
 16466                           ;	Fail-Safe Clock Monitor Enable bit
 16467                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16468                           ;	Internal/External Oscillator Switchover bit
 16469                           ;	IESO = ON, Oscillator Switchover mode enabled
 16470  300001                     	org	3145729
 16471  300001  B8                 	db	184
 16472                           
 16473                           ;Config register CONFIG2L @ 0x300002
 16474                           ;	Power-up Timer Enable bit
 16475                           ;	PWRTEN = OFF, Power up timer disabled
 16476                           ;	Brown-out Reset Enable bits
 16477                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16478                           ;	Brown Out Reset Voltage bits
 16479                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16480  300002                     	org	3145730
 16481  300002  1F                 	db	31
 16482                           
 16483                           ;Config register CONFIG2H @ 0x300003
 16484                           ;	Watchdog Timer Enable bits
 16485                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16486                           ;	Watchdog Timer Postscale Select bits
 16487                           ;	WDTPS = 32768, 1:32768
 16488  300003                     	org	3145731
 16489  300003  3C                 	db	60
 16490                           
 16491                           ; Padding undefined space
 16492  300004                     	org	3145732
 16493  300004  FF                 	db	255
 16494                           
 16495                           ;Config register CONFIG3H @ 0x300005
 16496                           ;	CCP2 MUX bit
 16497                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16498                           ;	PORTB A/D Enable bit
 16499                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16500                           ;	P3A/CCP3 Mux bit
 16501                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16502                           ;	HFINTOSC Fast Start-up
 16503                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16504                           ;	Timer3 Clock input mux bit
 16505                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16506                           ;	ECCP2 B output mux bit
 16507                           ;	P2BMX = PORTD2, P2B is on RD2
 16508                           ;	MCLR Pin Enable bit
 16509                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16510  300005                     	org	3145733
 16511  300005  BD                 	db	189
 16512                           
 16513                           ;Config register CONFIG4L @ 0x300006
 16514                           ;	Stack Full/Underflow Reset Enable bit
 16515                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16516                           ;	Single-Supply ICSP Enable bit
 16517                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16518                           ;	Extended Instruction Set Enable bit
 16519                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16520                           ;	Background Debug
 16521                           ;	DEBUG = 0x1, unprogrammed default
 16522  300006                     	org	3145734
 16523  300006  84                 	db	132
 16524                           
 16525                           ; Padding undefined space
 16526  300007                     	org	3145735
 16527  300007  FF                 	db	255
 16528                           
 16529                           ;Config register CONFIG5L @ 0x300008
 16530                           ;	Code Protection Block 0
 16531                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16532                           ;	Code Protection Block 1
 16533                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16534                           ;	Code Protection Block 2
 16535                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16536                           ;	Code Protection Block 3
 16537                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16538  300008                     	org	3145736
 16539  300008  0F                 	db	15
 16540                           
 16541                           ;Config register CONFIG5H @ 0x300009
 16542                           ;	Boot Block Code Protection bit
 16543                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16544                           ;	Data EEPROM Code Protection bit
 16545                           ;	CPD = OFF, Data EEPROM not code-protected
 16546  300009                     	org	3145737
 16547  300009  C0                 	db	192
 16548                           
 16549                           ;Config register CONFIG6L @ 0x30000A
 16550                           ;	Write Protection Block 0
 16551                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16552                           ;	Write Protection Block 1
 16553                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16554                           ;	Write Protection Block 2
 16555                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16556                           ;	Write Protection Block 3
 16557                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16558  30000A                     	org	3145738
 16559  30000A  0F                 	db	15
 16560                           
 16561                           ;Config register CONFIG6H @ 0x30000B
 16562                           ;	Configuration Register Write Protection bit
 16563                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16564                           ;	Boot Block Write Protection bit
 16565                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16566                           ;	Data EEPROM Write Protection bit
 16567                           ;	WRTD = OFF, Data EEPROM not write-protected
 16568  30000B                     	org	3145739
 16569  30000B  E0                 	db	224
 16570                           
 16571                           ;Config register CONFIG7L @ 0x30000C
 16572                           ;	Table Read Protection Block 0
 16573                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16574                           ;	Table Read Protection Block 1
 16575                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16576                           ;	Table Read Protection Block 2
 16577                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16578                           ;	Table Read Protection Block 3
 16579                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16580  30000C                     	org	3145740
 16581  30000C  0F                 	db	15
 16582                           
 16583                           ;Config register CONFIG7H @ 0x30000D
 16584                           ;	Boot Block Table Read Protection bit
 16585                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16586  30000D                     	org	3145741
 16587  30000D  40                 	db	64
 16588                           tosu	equ	0xFFF
 16589                           tosh	equ	0xFFE
 16590                           tosl	equ	0xFFD
 16591                           stkptr	equ	0xFFC
 16592                           pclatu	equ	0xFFB
 16593                           pclath	equ	0xFFA
 16594                           pcl	equ	0xFF9
 16595                           tblptru	equ	0xFF8
 16596                           tblptrh	equ	0xFF7
 16597                           tblptrl	equ	0xFF6
 16598                           tablat	equ	0xFF5
 16599                           prodh	equ	0xFF4
 16600                           prodl	equ	0xFF3
 16601                           indf0	equ	0xFEF
 16602                           postinc0	equ	0xFEE
 16603                           postdec0	equ	0xFED
 16604                           preinc0	equ	0xFEC
 16605                           plusw0	equ	0xFEB
 16606                           fsr0h	equ	0xFEA
 16607                           fsr0l	equ	0xFE9
 16608                           wreg	equ	0xFE8
 16609                           indf1	equ	0xFE7
 16610                           postinc1	equ	0xFE6
 16611                           postdec1	equ	0xFE5
 16612                           preinc1	equ	0xFE4
 16613                           plusw1	equ	0xFE3
 16614                           fsr1h	equ	0xFE2
 16615                           fsr1l	equ	0xFE1
 16616                           bsr	equ	0xFE0
 16617                           indf2	equ	0xFDF
 16618                           postinc2	equ	0xFDE
 16619                           postdec2	equ	0xFDD
 16620                           preinc2	equ	0xFDC
 16621                           plusw2	equ	0xFDB
 16622                           fsr2h	equ	0xFDA
 16623                           fsr2l	equ	0xFD9
 16624                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    0
    Data        64
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     176
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2843_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    lcdWriteString@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_15(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_13(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_7(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), mainMenu@textCursor2(BANK0[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _loopTaskInit->_PWM1_setDC
    _loopTaskInit->_PWM2_setDC
    _systemInit->_eepromRead
    _openLCD_Script->_lcdWriteString
    _lcdWriteString->_lcdWriteChar
    _lcdWriteChar->_lcdPort
    _lcdSetCursor->_lcdCmd
    _lcdClear->_lcdCmd
    _lcdInit->_lcdCmd
    _lcdCmd->_lcdPort
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    ___fltol->___fldiv

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _loopTaskMenuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  420673
                       _loopTaskInit
                _loopTaskMenuControl
                _loopTaskTimeMachine
 ---------------------------------------------------------------------------------
 (1) _loopTaskTimeMachine                                  0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskMenuControl                                  0     0      0  410501
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  410501
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   53117
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52617
                                            129 BANK0     16    16      0
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60426
                                            129 BANK0     16    16      0
                            ___fladd
                             ___flge
                            ___flsub
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52617
                                            129 BANK0     16    16      0
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   85490
                                            129 BANK0     16    16      0
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                        _eepromWrite
                       _lcdSetCursor
                     _lcdWriteString
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _loopTaskInit                                         0     0      0   10172
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcdClear
                            _lcdInit
                            _mcuInit
                     _menuInitialize
                     _openLCD_Script
                         _systemInit
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (2) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _systemInit                                           2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (3) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _openLCD_Script                                       2     2      0    3494
                                             10 COMRAM     2     2      0
                           _lcdClear
                       _lcdSetCursor
                     _lcdWriteString
 ---------------------------------------------------------------------------------
 (4) _lcdWriteString                                       6     4      2    1636
                                              4 COMRAM     6     4      2
                       _lcdWriteChar
 ---------------------------------------------------------------------------------
 (5) _lcdWriteChar                                         3     3      0     178
                                              1 COMRAM     3     3      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (4) _lcdSetCursor                                         5     4      1    1748
                                              3 COMRAM     5     4      1
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (3) _lcdClear                                             0     0      0     110
                             _lcdCmd
 ---------------------------------------------------------------------------------
 (2) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _mcuInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _lcdInit                                              2     2      0     198
                                              3 COMRAM     2     2      0
                             _lcdCmd
                            _lcdPort
 ---------------------------------------------------------------------------------
 (5) _lcdCmd                                               2     2      0     110
                                              1 COMRAM     2     2      0
                            _lcdPort
 ---------------------------------------------------------------------------------
 (6) _lcdPort                                              1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (2) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (2) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _loopTaskInit
     _PWM1_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM2_setDC
       ___fltol
         ___fladd (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___fldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
         _fabsf (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___xxtofl
         ___lldiv (ARG)
       _fabsf
         ___xxtofl (ARG)
           ___lldiv (ARG)
     _PWM_Init
     _adcInit
     _lcdClear
       _lcdCmd
         _lcdPort
     _lcdInit
       _lcdCmd
         _lcdPort
       _lcdPort
     _mcuInit
     _menuInitialize
     _openLCD_Script
       _lcdClear
         _lcdCmd
           _lcdPort
       _lcdSetCursor
         _lcdCmd
           _lcdPort
       _lcdWriteString
         _lcdWriteChar
           _lcdPort
     _systemInit
       _eepromRead
     _timer_0_init
   _loopTaskMenuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _pauseMenu
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _eepromWrite
         _lcdSetCursor
           _lcdCmd
             _lcdPort
         _lcdWriteString
           _lcdWriteChar
             _lcdPort
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _loopTaskTimeMachine

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      B0       8       68.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A1       9        0.0%
DATA                 0      0     2A1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Tue Aug 25 00:01:58 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
              __end_of_systemInit 40C2                      ___fldiv@sign 0045  
                              l60 53F4                                l63 54F0  
                              l57 53CC                                l92 575E  
                              l76 1466                                l94 576C  
                              _KD 01EB                                l95 576E  
                              l79 2A0E                                l98 56C8  
                              _KP 01EF                      ___awdiv@sign 0006  
             ___wmul@multiplicand 0003                               l100 56D6  
                             l101 56DA          ??_calculatedAverageValue 001C  
                             l160 51E8                               l152 51A4  
                             l320 57BC                               l154 51BA  
                             l163 578C                               l323 40C0  
                             l156 51D0                               l172 50D0  
                             l500 42D4                               l317 57AE  
                             l413 5702                               l421 32C8  
                             l158 51E6                               l166 57F0  
                             l326 5328                               l175 4D1E  
                             l423 3314                               l255 4DAE  
                             l184 4E2C                               l425 3360  
                             l417 3230                               l521 57F2  
                             l178 560C                               l258 54B2  
                             l434 4F96                               l419 327C  
                             l507 4162                               l428 33AC  
                             l509 41CC                               l518 3FA0  
                             l710 5000                               l454 37D6  
                             l470 3DD0                               l455 3826  
                    _startIsClick 00FE                               l448 4A8A  
                             l633 356A                               l465 4784  
                             l458 38BE                               l474 3E74  
                             l491 2FCA                               l580 4F20  
                             l812 3BD6                               l636 552C  
                             l732 4C88                               l725 4C78  
                             l709 4FF0                               l477 57A6  
                             l639 5642                               l584 4EA6  
                             l576 572A                               l825 3D3A  
                             l942 4B3A                               l695 57E2  
                             l929 49D8                               l698 5750  
                             l963 4498                               l972 559C  
                             l957 4BE4                               l968 44DE  
                             l995 43DA                               _PR2 000FBB  
                 ?_openLCD_Script 0001                               _abs 5436  
                             _pad 4850                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 002D  
                    ___flmul@bexp 002E               stopMenu@textCursor2 00E1  
    __size_of_loopTaskTimeMachine 0090                      ___flmul@sign 0028  
                    ___flmul@temp 0033                      ___flmul@prod 002F  
                     _stopIsClick 00FD                    ??_lcdWriteChar 0002  
                   lcdWriteChar@a 0004                     lcdWriteChar@y 0003  
                    ___fltol@exp1 0057                              ?_abs 0013  
                            l1312 202A                              l1321 2298  
                            l1322 2286                              l1226 1C94  
                            l1243 1DAE                              l1235 1F64  
                            l1227 1C82                              l1316 238E  
                            l1252 1E7E                              l1228 1C48  
                            l1253 1E6C                              l1319 2220  
                            l1360 365A                              l1424 4896  
                            l1280 2728                              l1600 45DC  
                            l1353 35C2                              l1329 2350  
                            l1282 2588                              l1427 48D8  
                            l1435 2AB0                              l1291 25CE  
                            l1356 371E                              l1268 536E  
                            l1605 546C                              l1429 4914  
                            l1437 2AB8                              l1293 2646  
                            l1285 254C                              l1701 518C  
                            l1517 0836                              l1381 528C  
                            l1374 56AC                              l1294 2634  
                            l1367 36B6                              l1455 2CF2  
                            l1711 46B2                              l1608 5474  
                            l4201 1AC2                              l1721 5128  
                            l5001 50D2                              l1473 0C60  
                            l1707 5678                              l4203 1AD2  
                            l4211 1AFC                              l5011 2FCC  
                            l1491 049E                              l1636 3A46  
                            l5101 2C7E                              l4301 1CC6  
                            l4221 1B2C                              l4213 1B0C  
                            l4205 1AE2                              l1645 31E0  
                            l5013 2FEC                              l5005 5108  
                            l1726 5130                              l1590 506A  
                            l1655 55D4                              l1663 52DE  
                            l1639 3A4E                              l5111 2CBA  
                            l5103 2C8E                              l4311 1D02  
                            l4303 1CD6                              l4231 1B6C  
                            l4223 1B3A                              l4215 1B12  
                            l4207 1AF2                              l5031 3198  
                            l5023 30D8                              l5015 3044  
                            l5007 511A                              l1583 19EA  
                            l1575 1AA4                              l1648 3124  
                            l4401 538E                              l5105 2C94  
                            l5113 2CCA                              l4321 1D48  
                            l4313 1D10                              l4305 1CE4  
                            l4241 1BA6                              l4233 1B6E  
                            l4225 1B3C                              l4217 1B24  
                            l4209 1AF4                              l5033 31C0  
                            l5025 3114                              l5017 3058  
                            l5201 0438                              l5121 00CC  
                            l6001 38B4                              l5051 52D8  
                            l5043 528E                              l4403 5392  
                            l4411 566C                              l5107 2CA6  
                            l4331 1DC4                              l4323 1D7C  
                            l4315 1D12                              l4307 1CF2  
                            l4251 1BBA                              l4243 1BAA  
                            l4227 1B4C                              l4235 1B76  
                            l4219 1B26                              l5035 31D0  
                            l5019 3066                              l5027 3148  
                            l5211 0478                              l5203 0448  
                            l5131 0118                              l5123 00DA  
                            l6011 3E82                              l6003 38B8  
                            l1684 484E                              l1692 53B2  
                            l4421 5748                              l5045 5292  
                            l4501 3D1A                              l4181 4786  
                            l4405 5644                              l5109 2CB2  
                            l5061 2A78                              l4341 1E00  
                            l4333 1DD4                              l4325 1D7E  
                            l4317 1D1C                              l4309 1CFE  
                            l4261 1BCE                              l4253 1BBE  
                            l4245 1BAE                              l4237 1B86  
                            l4229 1B5C                              l5029 3184  
                            l1669 5564                              l5301 0900  
                            l5221 04BC                              l5213 0492  
                            l5205 044C                              l5141 015E  
                            l5133 012A                              l5125 00E2  
                            l5117 00B2                              l1589 5062  
                            l6021 3EC6                              l6013 3E86  
                            l6005 38BA                              l6101 419E  
                            l5039 559E                              l5047 52A6  
                            l4431 3A82                              l1695 57F4  
                            l4191 4808                              l4183 4798  
                            l4407 5650                              l5071 2AD2  
                            l5063 2A88                              l5055 2A10  
                            l4511 23AC                              l4351 1E2C  
                            l4343 1E02                              l4327 1D8E  
                            l4319 1D22                              l4271 1BE2  
                            l4263 1BD2                              l4255 1BC2  
                            l4247 1BB2                              l4239 1B98  
                            l4415 552E                              l5311 093A  
                            l5303 0912                              l5223 04CE  
                            l5231 052C                              l5207 045E  
                            l5215 04AA                              l5143 0162  
                            l5135 0138                              l5127 0106  
                            l5119 00BC                              l6031 3EE4  
                            l6023 3ECC                              l6015 3E98  
                            l6007 38BC                              l6111 41DE  
                            l6103 41AA                              l5049 52D4  
                            l4441 3AC4                              l4433 3A86  
                            l4425 3A50                              l4185 47AA  
                            l4409 5654                              l5081 2AFE  
                            l5073 2AE0                              l5065 2A8A  
                            l5057 2A30                              l4601 25EC  
                            l4513 23BC                              l4521 23E6  
                            l4505 2390                              l4361 1E64  
                            l4345 1E10                              l4337 1DE8  
                            l4353 1E2E                              l4329 1D9E  
                            l4281 1C40                              l4265 1BD6  
                            l4257 1BC6                              l4249 1BB6  
                            l4273 1BE6                              l5401 0C16  
                            l5313 0946                              l5305 0920  
                            l5321 0966                              l5241 056A  
                            l5233 0534                              l5225 04EA  
                            l5209 0470                              l5161 0218  
                            l5153 01C8                              l5145 0166  
                            l5137 014A                              l5129 0110  
                            l6041 3F16                              l6033 3EE8  
                            l6025 3ED0                              l6017 3EA2  
                            l6009 3E76                              l6201 3DA8  
                            l6121 4224                              l6113 41F0  
                            l6105 41BE                              l4419 572C  
                            l4451 3B1E                              l4443 3AE2  
                            l4435 3A94                              l4427 3A54  
                            l4187 47B4                              l5091 2C0A  
                            l5083 2B80                              l5075 2AE6  
                            l5067 2AA4                              l5059 2A58  
                            l4611 2656                              l4603 25F0  
                            l4531 2412                              l4523 23F6  
                            l4515 23CC                              l4507 239C  
                            l4371 1EE2                              l4347 1E18  
                            l4339 1DF2                              l4355 1E3C  
                            l4291 1C76                              l4283 1C56  
                            l4275 1BEA                              l4267 1BDA  
                            l4259 1BCA                              l4195 1AA6  
                            l5403 0C22                              l5331 09EC  
                            l5323 0978                              l5315 0956  
                            l5307 0930                              l5243 057C  
                            l5251 05BC                              l5235 0546  
                            l5227 0520                              l5171 029C  
                            l5155 01DA                              l5139 0156  
                            l5147 016C                              l6051 3F32  
                            l6043 3F1A                              l6027 3EDA  
                            l6019 3EB4                              l6035 3EEC  
                            l6211 3E14                              l6203 3DBA  
                            l6131 425C                              l6123 4228  
                            l6115 41FA                              l6107 41CE  
                            l5501 51CA                              l6301 4CA4  
                            l5421 38DC                              l4453 3B4C  
                            l4445 3AEA                              l4461 3B86  
                            l4437 3AB4                              l4429 3A62  
                            l4189 47D2                              l5093 2C28  
                            l5085 2B86                              l5077 2AEE  
                            l5069 2AC0                              l4621 26B8  
                            l4613 2662                              l4605 25FE  
                            l4533 2422                              l4541 244C  
                            l4525 23FC                              l4517 23DC  
                            l4509 23AA                              l4701 20E0  
                            l4381 1F28                              l4365 1E8E  
                            l4373 1EE4                              l4357 1E40  
                            l4349 1E1C                              l4293 1C80  
                            l4285 1C62                              l4277 1C14  
                            l4269 1BDE                              l4197 1AB2  
                            l5405 0C2A                              l5341 0A66  
                            l5333 0A20                              l5325 098A  
                            l5317 095A                              l5309 0934  
                            l5261 06A4                              l5253 05C4  
                            l5245 058A                              l5237 0558  
                            l5229 0528                              l5173 02AE  
                            l5157 01F6                              l5149 0192  
                            l5165 0240                              l6061 3F72  
                            l6045 3F24                              l6037 3EFE  
                            l6053 3F36                              l6029 3EE0  
                            l6221 3E5A                              l6213 3E18  
                            l6205 3DE2                              l6141 428A  
                            l6133 4260                              l6117 420C  
                            l6125 4232                              l6109 41DA  
                            ?_pad 0011                              l5511 569C  
                            l3911 5708                              l5503 51D2  
                            l6311 4CDE                              l6303 4CAA  
                            l5431 3938                              l5423 38F8  
                            l5415 38C0                              l4463 3B96  
                            l4455 3B6C                              l4447 3AFE  
                            l4439 3AB8                              l4471 3BDC  
                            l5095 2C42                              l5087 2B8C  
                            l5079 2AF8                              l4631 2716  
                            l4623 26CE                              l4615 2670  
                            l4607 262C                              l4551 248E  
                            l4543 245C                              l4535 2432  
                            l4527 2402                              l4519 23DE  
                            l4711 2136                              l4703 20F0  
                            l4391 1F52                              l4383 1F36  
                            l4375 1EF4                              l4367 1E9A  
                            l4359 1E4E                              l4295 1CA2  
                            l4287 1C66                              l4279 1C30  
                            l4199 1AC0                              l5407 0C3A  
                            l5351 0AAA                              l5343 0A78  
                            l5335 0A28                              l5327 098E  
                            l5319 0960                              l5271 0762  
                            l5263 06D8                              l5255 05D4  
                            l5247 05A2                              l5239 0566  
                            l5191 036A                              l5175 02CA  
                            l5167 0266                              l5183 02E6  
                            l5159 020E                              l6063 3F7E  
                            l6055 3F40                              l6047 3F2A  
                            l6039 3F10                              l6223 3E6A  
                            l6207 3DF2                              l6215 3E26  
                            l6231 2D16                              l6143 42A6  
                            l6127 4244                              l6135 426A  
                            l6119 421E                              l6151 46C0  
                            l6071 40D2                              l3913 5718  
                            l5505 51E0                              l6321 4D06  
                            l6313 4CEE                              l6305 4CC2  
                            l6401 3348                              l5433 394E  
                            l5425 392E                              l5417 38D4  
                            l4465 3BB6                              l4457 3B6E  
                            l4449 3B0C                              l4481 3C3C  
                            l4473 3BEA                              l5097 2C5C  
                            l5089 2BF0                              l4801 4978  
                            l4633 271C                              l4625 26E8  
                            l4617 269A                              l4545 2472  
                            l4537 2442                              l4529 2410  
                            l4721 21DA                              l4713 2152  
                            l4705 20FC                              l4393 1F54  
                            l4385 1F3C                              l4377 1F04  
                            l4369 1EA8                              l4297 1CB2  
                            l4289 1C74                              l5409 0C40  
                            l5361 0AEA                              l5353 0ABC  
                            l5345 0A86                              l5329 0994  
                            l5337 0A2C                              l5281 07FE  
                            l5273 0778                              l5257 05E8  
                            l5265 06DE                              l5249 05B4  
                            l5193 0370                              l5185 0300  
                            l5601 14B2                              l6065 3F92  
                            l6057 3F4C                              l6049 3F2E  
                            l5521 4FC6                              l6217 3E3A  
                            l6209 3E02                              l6241 2D44  
                            l6233 2D1A                              l6225 2CF4  
                            l6145 42B2                              l6137 4274  
                            l6129 4256                              l6161 46DC  
                            l6153 46C4                              l6081 4118  
                            l6073 40E4                              l5507 567A  
                            l3851 54DE                              l6323 4D0C  
                            l6315 4CF4                              l6307 4CC8  
                            l6331 4080                              l6411 3394  
                            l6403 3358                              l5451 3A2A  
                            l5443 39C8                              l5435 3956  
                            l5427 3932                              l5419 38D8  
                            l4459 3B80                              l4491 3CB2  
                            l4483 3C5A                              l4475 3C0A  
                            l5099 2C6C                              l4811 49AC  
                            l4803 4986                              l4635 271E  
                            l4627 2704                              l4619 269E  
                            l4571 2510                              l4563 24C6  
                            l4547 2482                              l4555 24A2  
                            l4539 2444                              l4731 2230  
                            l4723 21E8                              l4715 215E  
                            l4707 210C                              l4651 1F92  
                            l4643 1F66                              l4387 1F3E  
                            l4379 1F24                              l5371 0B32  
                            l5363 0AF2                              l5355 0AC4  
                            l5347 0A96                              l5339 0A4A  
                            l5291 08B6                              l5283 080E  
                            l5275 07AA                              l5267 06FC  
                            l5259 064C                              l5195 03CA  
                            l5611 154E                              l5603 14D6  
                            l6059 3F56                              l5531 4C14  
                            l5523 4FD0                              l5515 4F98  
                            l6219 3E48                              l6251 2D96  
                            l6243 2D4E                              l6235 2D1E  
                            l6227 2D00                              l6147 42C6  
                            l6139 4280                              l6171 4726  
                            l6163 46E8                              l6155 46CA  
                            l6091 4152                              l6083 411E  
                            l6075 40EE                              l6067 40C2  
                            l5509 569A                              l3909 5704  
                            l6325 4D12                              l6317 4CFA  
                            l6309 4CD8                              l6341 40BA  
                            l6333 408A                              l6413 33A4  
                            l6405 3370                              l5437 395E  
                            l4493 3CD2                              l4485 3C62  
                            l4477 3C0E                              l4469 3BD8  
                            l4397 5370                              l4813 49B2  
                            l4805 498C                              l4629 2708  
                            l4581 2556                              l4573 2518  
                            l4565 24E0                              l4557 24B2  
                            l4549 248A                              l4733 223E  
                            l4725 2206                              l4717 217A  
                            l4709 2126                              l4661 1FCE  
                            l4653 1FA2                              l4645 1F72  
                            l4901 558C                              l4389 1F44  
                            l5381 0B88                              l5373 0B4E  
                            l5365 0AFA                              l5357 0AD4  
                            l5349 0A9A                              l5293 08C6  
                            l5285 0822                              l5277 07BA  
                            l5269 0730                              l5197 03FE  
                            l5189 0336                              l5621 15DA  
                            l5613 155C                              l5605 150C  
                            l5541 4C66                              l5533 4C20  
                            l5525 4BE6                              l5517 4FA8  
                            l6261 2E26                              l6253 2DA8  
                            l6245 2D5A                              l6237 2D2E  
                            l6229 2D04                              l6181 578E  
                            l6173 4732                              l6165 46EE  
                            l6157 46CE                              l6149 46B4  
                            l6093 4158                              l6077 4100  
                            l6085 4128                              l6069 40CE  
                            l6421 49EE                              l6501 4F60  
                            l4911 4300                              l5551 358C  
                            l3847 54B4                              l6327 4D18  
                            l6319 4D00                              l6351 5324  
                            l6343 52E0                              l6335 4094  
                            l6407 337E                              l5447 3A06  
                            l5439 3992                              l4495 3CE4  
                            l4487 3C76                              l4479 3C1C  
                            l4399 537C                              l4807 49A2  
                            l4815 49B8                              l4831 4AAA  
                            l4823 4A8C                              l4591 25AE  
                            l4583 2574                              l4575 2528  
                            l4567 24F0                              l4559 24B2  
                            l4743 22A8                              l4751 22F0  
                            l4735 2242                              l4727 2210  
                            l4719 21A4                              l4671 2004  
                            l4663 1FD4                              l4655 1FB2  
                            l4647 1F80                              l5391 0BC4  
                            l5383 0B8E                              l5375 0B56  
                            l5367 0B06                              l5359 0ADC  
                            l5295 08D8                              l5287 082E  
                            l5279 07CA                              l5199 0406  
                            l5471 4668                              l5463 4614  
                            l5631 1670                              l5623 15E4  
                            l5607 151C                              l5703 1A6E  
                            l5543 4C68                              l5535 4C2E  
                            l5527 4BF6                              l5519 4FB6  
                            l5711 0C62                              l6191 3D52  
                            l6271 2E8A                              l6263 2E34  
                            l6255 2DDA                              l6247 2D64  
                            l6239 2D32                              l6183 5792  
                            l6175 4744                              l6167 46F2  
                            l6159 46D2                              l6095 416C  
                            l6087 413A                              l6079 4112  
                            l6431 4A16                              l6423 49F6  
                            l6415 49DA                              l6503 4F72  
                            l6511 57BE                              l4921 434E  
                            l4913 432A                              l4905 42D6  
                            l5561 3604                              l5553 35D2  
                            l3849 54D6                              l5801 55F0  
                            l6345 52EA                              l6337 409E  
                            l6329 3FA2                              l6409 3386  
                            l6361 3218                              l6353 31E2  
                            l5449 3A18                              l4489 3C84  
                            l4497 3CEA                              l4817 49C8  
                            l4809 49AA                              l4841 4AE2  
                            l4833 4AB8                              l4825 4A90  
                            l4593 25B4                              l4585 2576  
                            l4577 253C                              l4569 2500  
                            l4761 2364                              l4753 230A  
                            l4745 22B4                              l4737 2250  
                            l4729 221E                              l4673 2014  
                            l4665 1FE2                              l4657 1FB8  
                            l4649 1F82                              l5393 0BCA  
                            l5385 0BA0                              l5369 0B0C  
                            l5377 0B5C                              l5297 08EA  
                            l5289 0852                              l5473 4690  
                            l5465 4622                              l5457 45DE  
                            l5705 1A92                              l5641 16FA  
                            l5633 167E                              l5625 15F2  
                            l5617 15A4                              l5609 152E  
                            l5545 4C72                              l5537 4C38  
                            l5529 4C0C                              l5481 53C8  
                            l5721 0D5C                              l5713 0C66  
                            l6193 3D5C                              l6185 3D3C  
                            l6281 2EE4                              l6273 2E96  
                            l6265 2E38                              l6257 2DE0  
                            l6249 2D8A                              l6177 4764  
                            l6169 46FC                              l6097 4178  
                            l6089 414C                              l6433 4A1E  
                            l6425 49FE                              l6417 49DE  
                            l6505 4F84                              l6513 57C2  
                            l4931 437A                              l4915 432C  
                            l4907 42EC                              l5571 368C  
                            l5563 3610                              l5555 35E8  
                            l5547 356E                              l5491 5190  
                            l3883 57A8                              l5811 560A  
                            l5803 55F8                              l6347 52F6  
                            l6339 40B6                              l3891 57DE  
                            l6371 3264                              l6363 3228  
                            l6355 31F4                              l4499 3CFA  
                            l4819 49D0                              l4843 4AF0  
                            l4851 4B1A                              l4835 4AC0  
                            l4827 4A9E                              l4595 25BE  
                            l4587 2586                              l4579 254A  
                            l4763 2372                              l4755 231E  
                            l4747 22C2                              l4739 227E  
                            l4691 2096                              l4683 205E  
                            l4675 201A                              l4667 1FE4  
                            l4659 1FC8                              l5395 0BD0  
                            l5387 0BAC                              l5379 0B6E  
                            l5299 08F8                              l5467 463A  
                            l5459 4608                              l5651 17A2  
                            l5643 170A                              l5627 1616  
                            l5619 15B6                              l5539 4C56  
                            l5483 53CA                              l5731 0F1A  
                            l5723 0DC6                              l5715 0C74  
                            l6195 3D68                              l6187 3D48  
                            l6291 2F70                              l6283 2F16  
                            l6275 2EA0                              l6259 2E14  
                            l6267 2E6C                              l6179 4776  
                            l6099 4182                              l6427 4A06  
                            l6419 49E6                              l6451 4D52  
                            l6443 4D20                              l6515 57C6  
                            l4941 43AA                              l4917 433C  
                            l5581 36CA                              l5573 3698  
                            l5565 3642                              l5549 357E  
                            l5813 4EA8                              l5821 4E2E  
                            l5493 519E                              l3885 57AC  
                            l5805 55FA                              l5901 4DBC  
                            l6349 530C                              l3893 57E0  
                            l6381 32B0                              l6373 3274  
                            l6365 3240                              l6357 3202  
                            l4781 491A                              l4853 4B2A  
                            l4845 4B06                              l4837 4AD2  
                            l4829 4AA6                              l4597 25CC  
                            l4589 2598                              l4861 4B6A  
                            l4765 2374                              l4757 2338  
                            l4749 22EC                              l4693 20AE  
                            l4685 206A                              l4677 203A  
                            l4669 1FF4                              l4773 532A  
                            l5389 0BB4                              l5469 4656  
                            l5661 1858                              l5653 17C6  
                            l5645 173C                              l5637 16C6  
                            l5629 1650                              l5485 53DA  
                            l5477 53B6                              l6621 1420  
                            l5741 1078                              l5733 0F82  
                            l5725 0E36                              l5717 0CDE  
                            l6197 3D72                              l6189 3D4E  
                            l6293 2F74                              l6285 2F1C  
                            l6277 2EC6                              l6269 2E80  
                            l6429 4A0E                              l6437 4A26  
                            l6461 4D8E                              l6453 4D62  
                            l6445 4D30                              l4943 43BA  
                            l4927 4366                              l4919 4340  
                            l5583 36EE                              l5575 36A6  
                            l5567 3644                              l5559 35FC  
                            l5815 4EA8                              l5823 4E2E  
                            l5495 51A6                              l3887 56DC  
                            l5807 5600                              l5903 4DEC  
                            l6471 547A                              l6391 32FC  
                            l6383 32C0                              l6375 328C  
                            l6367 324E                              l6359 320A  
                            l6623 397C                              l4951 4860  
                            l4791 494A                              l4783 4928  
                            l4855 4B32                              l4847 4B0E  
                            l4839 4ADA                              l4599 25DE  
                            l4871 4BE2                              l4863 4B7A  
                            l4759 2354                              l4767 237A  
                            l4695 20BA                              l4687 2074  
                            l4679 204A                              l4775 533A  
                            l5399 0C04                              l5663 186E  
                            l5671 18D8                              l5655 180E  
                            l5647 174C                              l5639 16D8  
                            l5911 5256                              l5487 53EC  
                            l5479 53B6                              l5751 123A  
                            l5743 10E2                              l5735 0F90  
                            l5727 0E44                              l5719 0D4E  
                            l5831 33AE                              l6199 3D9C  
                            l6287 2F50                              l6279 2ED2  
                            l6295 2FA8                              l6463 4D90  
                            l6455 4D72                              l6447 4D32  
                            l4945 43CA                              l4937 438E  
                            l4929 4370                              l5585 36FE  
                            l5577 36C4                              l5569 3650  
                            l5817 4EC0                              l5825 4E46  
                            l5497 51B4                              l5809 5602  
                            l5905 4DF0                              l3889 57D2  
                            l6481 548E                              l6473 547E  
                            l6393 330C                              l6385 32D8  
                            l6377 329A                              l6369 3256  
                            l4961 48B6                              l4953 4874  
                            l4793 494E                              l4785 4930  
                            l4849 4B14                              l4865 4BA8  
                            l4881 4448                              l4769 237E  
                            l4697 20C6                              l4689 208A  
                            l5681 19BA                              l5673 1906  
                            l5665 187C                              l5649 177E  
                            l5593 1468                              l5913 525E  
                            l5921 5514                              l5761 139A  
                            l5753 1248                              l5745 1152  
                            l5737 0FFA                              l5729 0EAE  
                            l5841 34CA                              l5833 33AE  
                            l6297 2FBC                              l6289 2F62  
                            l6465 4D9A                              l6457 4D76  
                            l6449 4D42                              l4939 439A  
                            l5587 370C                              l5579 36C6  
                            l5819 4F08                              l5827 4E8E  
                            l5499 51BC                              l6299 4C8A  
                            l5931 5754                              l6483 5492  
                            l6475 5482                              l6395 3324  
                            l6387 32E6                              l6379 32A2  
                            l4971 5436                              l4963 48BA  
                            l4955 4882                              l4795 4956  
                            l4787 4934                              l4779 4916  
                            l4867 4BB8                              l4859 4B3C  
                            l4891 44D6                              l4883 4458  
                            l4875 43DC                              l4699 20D4  
                            l5691 1A30                              l5667 18AC  
                            l5659 1846                              l5595 148C  
                            l5915 527A                              l5907 523C  
                            l5923 5520                              l5755 12B2  
                            l5747 1160                              l5739 106A  
                            l5851 3522                              l5843 34DA  
                            l5835 33EE                              l6619 4A3C  
                            l6491 4F22                              l6467 4DAA  
                            l6459 4D7C                              l5589 370E  
                            l5933 5758                              l6485 5496  
                            l6477 5486                              l6469 5476  
                            l6397 3332                              l6389 32EE  
                            l4973 5450                              l4965 48E8  
                            l4957 488E                              l4949 4850  
                            l4797 4968                              l4789 4942  
                            l4869 4BDC                              l4893 44DC  
                            l4885 4466                              l4877 440A  
                            l4981 4566                              l5693 1A44  
                            l5677 1974                              l5597 149A  
                            l5861 500A                              l5909 524E  
                            l5781 29C4                              l5773 272A  
                            l5757 1322                              l5749 11CA  
                            l5765 140A                              l5853 353E  
                            l5845 34F6                              l5837 34B4  
                            l5829 33AE                              l5925 560E  
                            l5941 3720                              l6493 4F26  
                            l5791 578A                              l5783 5772  
                            l5935 575A                              l6487 54A2  
                            l6479 548A                              l6399 333A  
                            l5871 56B8                              l4967 48FC  
                            l4959 48A2                              l4799 4970  
                            l4887 4478                              l4879 441A  
                            l4983 4572                              l4975 44E0  
                            l5679 1986                              l5687 19FE  
                            l5599 14AC                              l5863 5018  
                            l5919 54F2                              l5775 275C  
                            l5759 1330                              l5855 3546  
                            l5847 34FE                              l5839 34BC  
                            l5927 5612                              l5951 3776  
                            l5943 372C                              l6495 4F2A  
                            l5785 5774                              l5793 55D8  
                            l5937 575C                              l6489 54AE  
                            l5881 56C6                              l5873 56BA  
                            l4889 4486                              l4897 5566  
                            l4993 45D4                              l4977 4500  
                            l5689 1A22                              l5697 1A52  
                            l5865 5046                              l5777 2822  
                            l5857 3562                              l5849 351A  
                            l5929 5616                              l5961 37CA  
                            l5953 3782                              l5945 3736  
                            l6497 4F3C                              l5787 577A  
                            l5939 57E4                              l5891 50A0  
                            l5883 506E                              l5795 55E4  
                            l5875 56BC                              l5867 56B0  
                            l4899 557C                              l4979 453E  
                            l4987 457E                              l5699 1A60  
                            l5859 5002                              l5779 291C  
                            l5971 381C                              l5963 37E8  
                            l5955 3796                              l5947 3742  
                            l6499 4F4E                              l5789 577C  
                            l5893 50B2                              l5885 507E  
                            l5797 55E6                              l5877 56BE  
                            l5869 56B4                              l4989 4590  
                            l4997 5132                              l5981 3856  
                            l5973 381E                              l5965 37F8  
                            l5957 37A4                              l5949 374C  
                            l5895 50C4                              l5887 5090  
                            l5799 55EE                              l5879 56C2  
                            l4999 5142                              l5991 387C  
                            l5983 3866                              l5975 3820  
                            l5967 3808                              l5959 37BA  
                            l5897 50CA                              l5889 5096  
                            l5993 387E                              l5985 386A  
                            l5977 3836                              l5969 3818  
                            l5899 4DB0                              l5987 3878  
                            l5979 3846                              l5995 3882  
                            l5997 3894                              l5989 387A  
                            l5999 38A4                              STR_1 7FB1  
                            STR_2 7F80                              STR_3 7F2B  
                            STR_4 7FC1                              STR_5 7F3C  
                            STR_6 7FA1                              STR_7 7F4D  
                            STR_8 7FA1                              STR_9 7F09  
                            u4000 4798                              u4001 4794  
                            u4010 47AA                              u4011 47A6  
                            u4020 47D2                              u4100 1B5C  
                            u4021 47CE                              u4101 1B58  
                            u4030 4808                              u4110 1B98  
                            u4031 4804                              u4111 1B94  
                            u5000 2338                              u4200 1CB2  
                            u4120 1BA6                              u4040 1AC0  
                            u5001 2334                              u4201 1CAE  
                            u4121 1BA2                              u4041 1ABC  
                            u5010 2372                              u4210 1CE4  
                            u4130 1C14                              u4050 1AD2  
                            u5011 236E                              u4211 1CE0  
                            u4131 1C10                              u4051 1ACE  
                            u5020 4928                              u5100 4AD2  
                            u4300 1E2C                              u4220 1CF2  
                            u4140 1C2C                              u4060 1AE2  
                            u5021 4924                              u5101 4ACE  
                            u4301 1E28                              u4221 1CEE  
                            u4141 1C26                              u4061 1ADE  
                            u5030 4942                              u5110 4AF0  
                            u4310 1E3C                              u4230 1D10  
                            u4150 1C2E                              u4070 1B24  
                            u5031 493E                              u5111 4AEC  
                            u4311 1E38                              u4231 1D0C  
                            u4071 1B20                              u5040 4968  
                            u5120 4B06                              u5200 4486  
                            u4400 1F24                              u4320 1E4E  
                            u4240 1D48                              u4160 1C56  
                            u4080 1B3A                              u6000 0566  
                            u5041 4964                              u5121 4B02  
                            u5201 4482                              u4401 1F20  
                            u4321 1E4A                              u4241 1D44  
                            u4161 1C52                              u4081 1B36  
                            u6001 0562                              u5050 4986  
                            u5130 4B2A                              u5210 44D6  
                            u4410 1F36                              u4330 1E64  
                            u4250 1D8E                              u4170 1C74  
                            u4090 1B4C                              u6010 057C  
                            u5051 4982                              u5131 4B26  
                            u5211 44D2                              u4411 1F32  
                            u4331 1E60                              u4251 1D8A  
                            u4171 1C70                              u4091 1B48  
                            u6011 0578                              u4500 3AE2  
                            u5300 4860                              u5060 49A2  
                            u5140 4B6A                              u5220 557C  
                            u4420 1F52                              u4340 1E7A  
                            u4260 1DC4                              u4180 1C94  
                            u6100 08D8                              u6020 058A  
                            u4501 3ADE                              u5301 485C  
                            u5061 499E                              u5141 4B66  
                            u5221 5578                              u4421 1F4E  
                            u4341 1E76                              u4261 1DC0  
                            u4181 1C90                              u6101 08D4  
                            u6021 0586                              u5230 42EC  
                            u4510 3B0C                              u4430 53B2  
                            u5310 4882                              u5070 49C8  
                            u5150 4BA8                              u4350 1E8E  
                            u4270 1DD4                              u4190 1CA2  
                            u6110 08EA                              u6030 05B4  
                            u5231 42E8                              u4511 3B08  
                            u4431 53AE                              u5311 487E  
                            u5071 49C4                              u5151 4BA4  
                            u4351 1E8A                              u4271 1DD0  
                            u4191 1C9E                              u6111 08E6  
                            u6031 05B0                              u5240 4320  
                            u4520 3B4C                              u4440 566C  
                            u5320 48D8                              u5080 4A9E  
                            u4600 23AA                              u5160 4BDC  
                            u4360 1EA8                              u4280 1E00  
                            u5400 45CA                              u6200 0ABC  
                            u6120 08F8                              u6040 06FC  
                            u7000 37F8                              u4521 3B48  
                            u4441 5668                              u5321 48D4  
                            u5081 4A9A                              u4601 23A6  
                            u5161 4BD8                              u4361 1EA4  
                            u4281 1DFC                              u5401 45C4  
                            u6201 0AB8                              u6121 08F4  
                            u6041 06F8                              u7001 37F4  
                            u5250 434E                              u4530 3B96  
                            u5330 48E8                              u5090 4AB8  
                            u4610 23BC                              u5170 440A  
                            u4370 1EE2                              u4290 1E10  
                            u5410 45CC                              u4450 555E  
                            u6210 0AEA                              u6130 0912  
                            u6050 0762                              u7010 3808  
                            u5251 434A                              u4531 3B92  
                            u5331 48E4                              u5091 4AB4  
                            u4611 23B8                              u5171 4406  
                            u4371 1EDE                              u4291 1E0C  
                            u4451 5558                              u6211 0AE6  
                            u6131 090E                              u6051 075E  
                            u7011 3804                              u5260 4362  
                            u3580 57BC                              u6300 394A  
                            u4540 3BEA                              u5340 5450  
                            u4700 2574                              u4620 23CC  
                            u5180 4448                              u4380 1EF4  
                            u5420 517A                              u4460 5560  
                            u6220 0B6E                              u6140 0920  
                            u6060 07AA                              u7020 3818  
                            u5261 435E                              u5245 4316  
                            u3581 57B8                              u6301 3946  
                            u4541 3BE6                              u5341 544C  
                            u4701 2570                              u4621 23C8  
                            u5181 4444                              u4381 1EF0  
                            u6221 0B6A                              u6141 091C  
                            u6061 07A6                              u7101 3E7C  
                            u7021 3814                              u5270 438A  
                            u6310 3A00                              u4470 3A62  
                            u4550 3C1C                              u4710 2598  
                            u4630 2410                              u5190 4466  
                            u4390 1F04                              u5350 4520  
                            u5510 30D4                              u5430 518C  
                            u6230 0B88                              u6150 0978  
                            u6070 07BA                              u7110 3E98  
                            u7030 3836                              u5271 4386  
                            u6311 39FA                              u4471 3A5E  
                            u4551 3C18                              u4711 2594  
                            u4631 240C                              u5191 4462  
                            u4391 1F00                              u5511 30D0  
                            u5431 5188                              u6231 0B84  
                            u6151 0974                              u6071 07B6  
                            u7111 3E94                              u7031 3832  
                            u5280 43AA                              u5600 52D4  
                            u6320 3A02                              u4480 3A94  
                            u4560 3C5A                              u4800 26B8  
                            u4720 25AE                              u4640 2422  
                            u5360 453E                              u5520 30F8  
                            u5440 5102                              u6240 0BA0  
                            u6160 0A4A                              u6080 0822  
                            u7120 3EB4                              u6400 53DA  
                            u7040 3846                              u7200 4112  
                            u5281 43A6                              u5601 52D0  
                            u4481 3A90                              u4561 3C56  
                            u4801 26B4                              u4721 25AA  
                            u4641 241E                              u5361 453A  
                            u5505 307A                              u5441 50FC  
                            u6241 0B9C                              u6161 0A46  
                            u6081 081E                              u7121 3EB0  
                            u6401 53D6                              u7041 3842  
                            u7201 410E                              u5290 43BA  
                            u6410 519E                              u6330 3A18  
                            u4570 3C84                              u5610 2A40  
                            u4810 26E8                              u4730 25CC  
                            u4650 2432                              u5370 4566  
                            u5530 3114                              u5506 3084  
                            u5450 5104                              u6250 0BFE  
                            u6170 0A66                              u6090 08C6  
                            u7130 3EC6                              u7050 3856  
                            u7210 413A                              u5291 43B6  
                            u6411 519A                              u6331 3A14  
                            u4491 3ABE                              u4571 3C80  
                            u5611 2A3A                              u4811 26E4  
                            u4731 25C8                              u4651 242E  
                            u5371 4562                              u5355 4516  
                            u5531 3110                              u5507 3094  
                            u5427 5170                              u6251 0BF8  
                            u6171 0A62                              u6091 08C2  
                            u7131 3EC2                              u7051 3852  
                            u7211 4136                              u6500 357E  
                            u6420 51B4                              u6340 3A2A  
                            u4580 3CB2                              u5700 2C42  
                            u5620 2A42                              u4820 2716  
                            u4740 25EC                              u4660 2472  
                            u4900 204A                              u5380 4590  
                            u5540 3168                              u5460 511A  
                            u6260 0C00                              u6180 0A78  
                            u7140 3EFE                              u7060 3866  
                            u7300 42C6                              u7220 414C  
                            u6501 357A                              u6421 51B0  
                            u6341 3A26                              u4581 3CAE  
                            u5701 2C3E                              u4821 2712  
                            u4741 25E8                              u4661 246E  
                            u4901 2046                              u5381 458C  
                            u5525 30EE                              u5461 5116  
                            u6181 0A74                              u7141 3EFA  
                            u7061 3862                              u7301 42C2  
                            u7221 4148                              u6510 358C  
                            u6430 51CA                              u4590 3CFA  
                            u5710 2C5C                              u5630 2A58  
                            u4750 25FE                              u4670 24B2  
                            u4910 21C4                              u4830 1F80  
                            u5550 3184                              u5470 3014  
                            u6270 0C16                              u6190 0A86  
                            u6350 4608                              u7150 3F10  
                            u7070 3894                              u7230 41BE  
                            u6511 3588                              u6431 51C6  
                            u8007 55F2                              u4591 3CF6  
                            u5711 2C58                              u5631 2A54  
                            u4751 25FA                              u4671 24AE  
                            u4831 1F7C                              u5551 3180  
                            u6271 0C12                              u6191 0A82  
                            u6351 4604                              u7151 3F0C  
                            u7071 3890                              u7311 46BA  
                            u7231 41BA                              u6520 35E8  
                            u6440 51E0                              u6280 38F8  
                            u5720 2C6C                              u5640 2A88  
                            u4760 262C                              u4680 2528  
                            u4920 221E                              u4840 1F92  
                            u5560 31C0                              u5480 3044  
                            u5800 0192                              u6360 463A  
                            u6600 148C                              u7160 3F92  
                            u7080 38A4                              u7400 3E3A  
                            u7320 4744                              u6521 35E4  
                            u6441 51DC                              u8017 5604  
                            u6281 38F4                              u5721 2C68  
                            u5641 2A84                              u4761 2628  
                            u4681 2524                              u4921 221A  
                            u4841 1F8E                              u5561 31BC  
                            u5545 315E                              u5481 3040  
                            u5801 018E                              u6361 4636  
                            u6601 1488                              u7161 3F8E  
                            u7081 38A0                              u7401 3E36  
                            u7241 41D4                              u7321 4740  
                            u6530 363E                              u5570 55CE  
                            u6290 392E                              u5730 2C7E  
                            u5650 2AA4                              u4770 2642  
                            u4690 254A                              u4930 223E  
                            u4850 1FA2                              u5490 3066  
                            u5810 01C2                              u6370 4656  
                            u6610 14D6                              u6450 4FB6  
                            u7090 38B4                              u7410 3E5A  
                            u7250 41F0                              u7330 4776  
                            u6531 363A                              u8027 4CB4  
                            u5571 55C8                              u6291 392A  
                            u5731 2C7A                              u5651 2AA0  
                            u4771 263E                              u4691 2546  
                            u4931 223A                              u4915 21BA  
                            u4851 1F9E                              u5395 45A2  
                            u5491 3062                              u5475 300A  
                            u5811 01BC                              u6371 4652  
                            u6611 14D2                              u6451 4FB2  
                            u7091 38B0                              u7411 3E56  
                            u7251 41EC                              u7331 4772  
                            u7171 40C8                              u6540 3688  
                            u5580 55D0                              u5740 2C8E  
                            u5660 2AD2                              u4780 2656  
                            u4940 2250                              u4860 1FE2  
                            u5900 0438                              u5820 01C4  
                            u6380 4668                              u6700 16D8  
                            u6620 151C                              u6460 4FF0  
                            u7420 3E6A                              u7500 2E34  
                            u7260 420C                              u7180 40E4  
                            u6541 3684                              u8037 4CCE  
                            u5741 2C8A                              u5661 2ACE  
                            u4781 2652                              u4941 224C  
                            u4861 1FDE                              u5901 0434  
                            u6381 4664                              u6701 16D4  
                            u6621 1518                              u6461 4FEC  
                            u7421 3E66                              u7341 3D42  
                            u7501 2E30                              u7261 4208  
                            u7181 40E0                              u6550 36A6  
                            u5590 52A6                              u5750 2CA6  
                            u5670 2AE0                              u4790 2670  
                            u4950 227E                              u4870 1FF4  
                            u5910 045E                              u5830 01DA  
                            u6390 4690                              u6710 170A  
                            u6630 159E                              u6470 4C0C  
                            u7350 3DBA                              u7510 2E80  
                            u7270 421E                              u7190 4100  
                            u6551 36A2                              u8047 4CE4  
                            u5591 52A2                              u5751 2CA2  
                            u5671 2ADC                              u4791 266C  
                            u4951 227A                              u4871 1FF0  
                            u5911 045A                              u5831 01D6  
                            u6391 468C                              u6711 1706  
                            u6631 1598                              u6471 4C08  
                            u7351 3DB6                              u7511 2E7C  
                            u7431 2CFA                              u7271 421A  
                            u7191 40FC                              u6560 36B6  
                            u7600 3228                              u5680 2C0A  
                            u4960 2294                              u4880 2004  
                            u5920 0470                              u5840 0266  
                            u5760 00DA                              u6800 1A22  
                            u6720 174C                              u6640 15A0  
                            u6480 4C2E                              u7360 3DE2  
                            u7520 2EE4                              u7440 2D16  
                            u7280 4244                              u6561 36B2  
                            u8057 5782                              u7601 3224  
                            u5681 2C06                              u4961 2290  
                            u4881 2000                              u5921 046C  
                            u5841 0262                              u5761 00D6  
                            u6801 1A1E                              u6721 1748  
                            u6481 4C2A                              u7361 3DDE  
                            u7521 2EE0                              u7441 2D12  
                            u7281 4240                              u6570 36C4  
                            u6810 4EC0                              u7610 3240  
                            u5690 2C28                              u4970 22A8  
                            u4890 203A                              u5930 0492  
                            u5850 0296                              u5770 012A  
                            u6730 17A2                              u6650 15B6  
                            u6490 4C56                              u7370 3DF2  
                            u7530 2F16                              u7450 2D2E  
                            u7290 4256                              u6571 36C0  
                            u6811 4EBC                              u7611 323C  
                            u5691 2C24                              u4971 22A4  
                            u4891 2036                              u5931 048E  
                            u5851 0290                              u5771 0126  
                            u6731 179E                              u6651 15B2  
                            u6491 4C52                              u7371 3DEE  
                            u7531 2F12                              u7451 2D2A  
                            u7291 4252                              u6580 36FE  
                            u6820 4E46                              u6900 50B2  
                            u7700 32E6                              u7620 324E  
                            u4980 22C2                              u5940 04B8  
                            u5860 0298                              u5780 0138  
                            u6740 17C6                              u6660 15DA  
                            u7380 3E02                              u7540 2F62  
                            u7460 2D44                              u6581 36FA  
                            u6821 4E42                              u6901 50AE  
                            u7701 32E2                              u7621 324A  
                            u4981 22BE                              u5941 04B4  
                            u5781 0134                              u6741 17C2  
                            u6661 15D6                              u7381 3DFE  
                            u7541 2F5E                              u7461 2D40  
                            u6590 370C                              u6910 4DE8  
                            u7710 32FC                              u7630 3264  
                            u4990 230A                              u5950 04CE  
                            u5870 02AE                              u5790 014A  
                            u6750 1858                              u6670 1616  
                            u6830 34F6                              u7390 3E14  
                            u7550 2F70                              u7470 2DA8  
                            u6591 3708                              u7711 32F8  
                            u7631 3260                              u4991 2306  
                            u5951 04CA                              u5871 02AA  
                            u5791 0146                              u6751 1854  
                            u6671 1612                              u6831 34F2  
                            u7391 3E10                              u7551 2F6C  
                            u7471 2DA4                              u6920 4E1C  
                            u7800 33A4                              u7720 330C  
                            u7640 3274                              u5960 04EA  
                            u5880 0332                              u6760 1906  
                            u6680 16C0                              u6840 351A  
                            u7560 2FBC                              u7480 2DDA  
                            u7801 33A0                              u7721 3308  
                            u7641 3270                              u5961 04E6  
                            u5881 032E                              u6761 1902  
                            u6681 16BA                              u6841 3516  
                            u7561 2FB8                              u7481 2DD6  
                            u6930 4E2C                              u7730 3324  
                            u7650 328C                              u7570 31F4  
                            u5970 0520                              u5890 03C6  
                            u6770 196E                              u6690 16C2  
                            u6850 353E                              u7490 2E26  
                            u7810 4D30                              u6931 4E28  
                            u7731 3320                              u7651 3288  
                            u7571 31F0                              u5971 051C  
                            u5891 03C2                              u6771 1968  
                            u6851 353A                              u7491 2E22  
                            u7811 4D2C                              u6940 576C  
                            u7740 3332                              u7660 329A  
                            u7580 3202                              u5980 0546  
                            u6780 1970                              u6860 3562  
                            u7900 4F84                              u7820 4D42  
                            u6917 4DDE                              u6941 5768  
                            u7741 332E                              u7661 3296  
                            u7581 31FE                              u5981 0542  
                            u6861 355E                              u7901 4F80  
                            u7821 4D3E                              u7750 3348  
                            u7670 32B0                              u7590 3218  
                            u5990 0558                              u6790 1986  
                            u6870 5062                              u7830 4D52  
                            u6927 4E12                              u7751 3344  
                            u7671 32AC                              u7591 3214  
                            u5991 0554                              u6791 1982  
                            u6871 505E                              u6951 3726  
                            u7831 4D4E                              u7760 3358  
                            u7680 32C0                              u6880 56D6  
                            u6960 3796                              u7840 4D62  
                            u7761 3354                              u7681 32BC  
                            u6881 56D2                              u6961 3792  
                            u7841 4D5E                              u6890 507E  
                            u7770 3370                              u7690 32D8  
                            u6970 37BA                              u7850 4D72  
                            u6891 507A                              u7771 336C  
                            u7691 32D4                              u6971 37B6  
                            u7851 4D6E                              u7780 337E  
                            u6980 37CA                              u7860 4D8E  
                            u7781 337A                              u6981 37C6  
                            u7861 4D8A                              u7790 3394  
                            u6990 37E8                              u7870 4DAA  
                            u7791 3390                              u6991 37E4  
                            u7871 4DA6                              u7880 4F3C  
                            u7881 4F38                              u7890 4F60  
                            u7891 4F5C                              u7987 40A8  
                            u7997 5316                              _TMR2 000FBC  
           ??_stopTimeSettingMenu 005F                              abs@a 0013  
                            _dbuf 0260                              _atoi 38C0  
                            _main 57BE                              _dtoa 2A10  
                            _prec 00F6                              _nout 01AF  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              btemp 005F  
                   ___fpclassifyf 44E0                              prodh 000FF4  
                            prodl 000FF3                              start 00AE  
                 ___fldiv@new_exp 0046                      _tolower$3145 000D  
                    ___param_bank 000000           ??_driverTimeSettingMenu 005F  
                           ??_abs 0015                             ??_pad 0017  
speedLimitSettingMenu@textCursor2 00E1                     ___fltol@sign1 0056  
                 __end_of___aodiv 3BD8                             ?_atoi 0008  
                 __end_of___fladd 1F66                             ?_main 0001  
                           ?_dtoa 001C                   __end_of___aomod 3D3C  
                 __end_of_adcInit 54F2                   __end_of___fldiv 272A  
                 __end_of___awdiv 49DA                   __end_of___flneg 559E  
                           _EEADR 000FA9                             STR_10 7FD0  
                           STR_11 7F09                             STR_20 7FF3  
                           STR_12 7FDE                             STR_13 7F1A  
                           STR_14 7EF7                             STR_23 7FEF  
                           STR_15 7F6F                             STR_24 7FF7  
                           STR_16 7F91                             STR_17 7F5E  
                           STR_18 7EF7                             STR_27 7FFB  
                           STR_19 7FEB                   __end_of___awmod 4B3C  
                           STR_29 7FFB                   __end_of___flmul 2390  
                 __end_of___flsub 5370                   __end_of___fltol 43DC  
                 __end_of___lldiv 4C8A                             _T0CON 000FD5  
                 ___awdiv@divisor 0003                             i2l692 00AA  
                 ___awdiv@counter 0005                      vfpfcnvrt@fmt 00A9  
                           _TMR0H 000FD7                             _TMR0L 000FD6  
             ___lmul@multiplicand 0005                   __end_of_lcdInit 4D20  
                 __end_of_lcdPort 51EA                             _fabsf 567A  
                 __end_of_mcuInit 57BE                             _flags 00F8  
                           _fputc 4786                             _fputs 5370  
                 __end_of_isdigit 55D6                       ?_PWM1_setDC 0058  
                    _adc_raw_data 0173                       ?_PWM2_setDC 0058  
                           atoi@n 0015                             pad@fp 0011  
                           atoi@s 0008                             _width 01B1  
                           _putch 57F4                             dtoa@d 001E  
                           dtoa@i 003E                             dtoa@n 0036  
                           dtoa@p 0030                             dtoa@s 0034  
                           dtoa@w 0032                   __end_of_isspace 52E0  
                 __end_of_isupper 5566                  __end_of_PWM_Init 572C  
                           tablat 000FF5                             ttemp5 0060  
                           ttemp6 0063                             ttemp7 0067  
                           status 000FD8            ?_speedLimitSettingMenu 0001  
                           wtemp8 0060                   __end_of_sprintf 528E  
                  ?___fpclassifyf 0001                   __end_of_tolower 5132  
                 __end_of_strncmp 46B4                     ?_readAdcValue 0001  
                 __initialization 51EA                      __end_of_atoi 3A50  
                    __end_of_main 57D2                      __end_of_dtoa 2CF4  
     _KP@fs_speed_controller$F949 01E7                            ??_atoi 000A  
                          ??_main 005F                            ??_dtoa 0026  
             _loopTaskMenuControl 4F22                     __activetblptr 000002  
 __size_of_calculatedAverageValue 02E6              __end_of_lcdSetCursor 50D2  
                ??_lcdWriteString 0007          stopTimeSettingMenu@F6912 0210  
                          ?_fabsf 001C                            _ADCON0 000FC2  
                          _ADCON1 000FC1                            ?_fputc 0001  
                          ?_fputs 000A                            _ADRESH 000FC4  
                          _ADRESL 000FC3                            _EEDATA 000FA8  
                          _CCPR1L 000FBE                            _CCPR2L 000F67  
                          _EECON2 000FA7                  ___awdiv@dividend 0001  
                          ?_putch 0001                            i2l6521 0026  
                          i2l6531 0048                            i2l6523 0028  
                          i2l6541 0084                            i2l6533 005A  
                          i2l6525 0030                            i2l6517 000A  
                          i2l6543 0088                            i2l6535 0060  
                          i2l6527 0034                            i2l6519 0018  
                          i2l6545 009E                            i2l6537 0072  
                          i2l6529 0044                            i2l6547 00A6  
                          i2l6539 0074                            _TIMER0 0008  
                  ??_readAdcValue 0003              ?_loopTaskMenuControl 0001  
                __end_of___xxtofl 3720                 _scanAdcConversion 0C62  
              _timer_counter_flag 00FA                  __end_of_lcdClear 57F2  
              ?_scanAdcConversion 0001              __size_of_eepromWrite 002E  
                    vfprintf@cfmt 00CD                            ___flge 43DC  
                          ___fleq 4B3C                  __end_of_mainMenu 38C0  
                          ___lmul 4F98                         ??___aodiv 0011  
                       ??___fladd 003D                         ??___aomod 0011  
                          ___wmul 572C                         ??_adcInit 0001  
                       ??___fldiv 003D                         ??___awdiv 0005  
            __end_of_lcdWriteChar 560E                         ??___flneg 0005  
                 lcdWriteString@a 0005                         ??___awmod 0005  
                 lcdWriteString@i 0009                         ??___flmul 0024  
                       ??___flsub 004D                         ??___fltol 0052  
                       ??___lldiv 0009                            _lcdCmd 5770  
                          _efgtoa 00B2                            _floorf 2FCC  
             __size_of_PWM1_setDC 007A                            fabsf@u 0020  
                          fabsf@x 001C                  __end_of_exitLine 57F4  
             __size_of_PWM2_setDC 007A                 _secretMenuCounter 00FC  
             ??_scanAdcConversion 0058                            clear_0 5210  
                          clear_1 521C                            clear_2 5228  
                 eepromWrite@data 0001                  ___awdiv@quotient 0007  
                 ___awmod@divisor 0003                         ??_lcdInit 0004  
                 ___awmod@counter 0005                            pad@buf 0013  
                       ??_lcdPort 0001                            dtoa@fp 001C  
                          _strcpy 5132                            _strlen 5644  
                       ??_mcuInit 0001                            fputc@c 0001  
            readAdcValue@adcValue 0006                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 7EF6                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 506C  
                       ??_sprintf 005F                         ??_tolower 0009  
                __end_of_stopMenu 4786                         ??_strncmp 0007  
      __end_of_buttonControlFlags 33AE                        ___flge@ff1 0035  
                      ___flge@ff2 0039                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 0018                      ___xxtofl@exp 0017  
                    ___xxtofl@val 000E                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                     mainMenu@F6896 0163  
       __end_of_scanAdcConversion 1468                        __accesstop 0060  
         __end_of__initialization 522E             ??_loopTaskMenuControl 005F  
                      ___flneg@f1 0001            _calculatedAverageValue 272A  
                   ___rparam_used 000001                        ___fltol@f1 004E  
             _loopTaskTimeMachine 4D20                    __pcstackCOMRAM 0001  
                    __pidataBANK1 53F6        driverTimeSettingMenu@F6915 0200  
                   __end_of_fabsf 56AE                  ??_openLCD_Script 000B  
                   __end_of_fputc 4850                     __end_of_fputs 53B4  
                   __end_of_putch 57F6                         ?_PWM_Init 0001  
    _KP@fs_speed_controller$F1163 01DF      _KP@fs_speed_controller$F1342 01D7  
    _KP@fs_speed_controller$F2207 01BF      _KP@fs_speed_controller$F2076 01C7  
    _KP@fs_speed_controller$F2360 01B7      _KP@fs_speed_controller$F1842 01CF  
               eepromRead@address 0001              ?_loopTaskTimeMachine 0001  
                lcdWriteChar@temp 0002                           ??_fabsf 0020  
                   ?_loopTaskInit 0001                           ??_fputc 0005  
                         ??_fputs 000E                           ??_putch 0001  
                      __pbssBANK0 00F3                        __pbssBANK1 0100  
                      __pbssBANK2 0200               PWM1_setDC@dutycycle 0058  
                         ?_TIMER0 0001                           ?___flge 0035  
                         ?___fleq 0001                __size_of_pauseMenu 013A  
                         ?___lmul 0001                           ?___wmul 0001  
                         ?_lcdCmd 0001                           ?_efgtoa 0058  
  __size_of_driverTimeSettingMenu 012C                           _CCP1CON 000FBD  
                         _CCP2CON 000F66                           ?_floorf 004E  
           __size_of_lcdSetCursor 0066     __end_of_driverTimeSettingMenu 3FA2  
                  ___lmul@product 0009                        ??_PWM_Init 0001  
                         ?_strcpy 0001                           ?_strlen 0001  
            __end_of_readAdcValue 53F6                        _eepromRead 5752  
                       ?___xxtofl 000E             ??_loopTaskTimeMachine 0001  
  stopTimeSettingMenu@textCursor2 00E1                __size_of_vfpfcnvrt 063E  
                       ?_lcdClear 0001       __end_of_stopTimeSettingMenu 41CE  
                  ??_loopTaskInit 005E                __size_of_startMenu 001A  
                    ??_PWM1_setDC 005A                      ??_PWM2_setDC 005A  
         __size_of_menuInitialize 0028           ??_speedLimitSettingMenu 005F  
                       ?_mainMenu 0001                     _menu_selected 00FB  
              __size_of_stopMotor 003C        __size_of_scanAdcConversion 0806  
                       ?_exitLine 0001                   __size_of_TIMER0 00A6  
                      _controller 0150             __size_of_lcdWriteChar 0038  
                    _lcdSetCursor 506C                           __Hparam 0000  
                         __Lparam 0000               PWM2_setDC@dutycycle 0058  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 3A50                           ___fladd 1AA6  
                         ___aomod 3BD8                           _adcInit 54B4  
                         ___fldiv 2390                           ___awdiv 4916  
                         ___flneg 5566                   __size_of___lmul 006A  
                         ___awmod 4A8C                           ___flmul 1F66  
                         ___flsub 532A                           ___fltol 42D6  
                         ___lldiv 4BE6                   __size_of___wmul 0026  
                       ?_vfprintf 00C7                   __size_of_lcdCmd 001E  
                 __size_of_efgtoa 0BB0                         ?_stopMenu 0001  
                 __size_of_floorf 0216                           __pcinit 51EA  
              __end_of_PWM1_setDC 4F22                           __ramtop 0600  
              __end_of_PWM2_setDC 4EA8                           _lcdInit 4C8A  
                         __ptext0 57BE                           __ptext1 4D20  
                         __ptext2 4F22                           __ptext3 49DA  
                         __ptext4 40C2                           __ptext5 46B4  
                         __ptext6 578E                           __ptext7 41CE  
                         __ptext8 2CF4                           __ptext9 3D3C  
                         _lcdPort 518E                        _menu_flags 0197  
                      _menu_value 00F3                   __size_of_strcpy 005C  
                 __size_of_strlen 0036                           _mcuInit 57A8  
                       _T2CONbits 000FBA                      __size_of_abs 0040  
                    __size_of_pad 00C6                           _isdigit 559E  
                      ??___xxtofl 0012                  ___awmod@dividend 0001  
                         lcdCmd@a 0003                           _isspace 528E  
                         _isupper 552E                        ??_lcdClear 0004  
                         efgtoa@c 005E                           efgtoa@d 0087  
                         efgtoa@e 009F                           efgtoa@f 005A  
                         efgtoa@g 009B                           efgtoa@h 0091  
                         efgtoa@i 0099                           efgtoa@l 0095  
                         efgtoa@m 0083                           efgtoa@n 00A1  
                         efgtoa@p 008B                           efgtoa@t 007F  
                         efgtoa@u 00A3                           efgtoa@w 008E  
                   ?_speedControl 0058                           atoi@neg 000E  
                   ?_timer_0_init 0001                 __end_of_pauseMenu 3E76  
                         _sprintf 523C                           _tolower 50D2  
                    _lcdWriteChar 55D6                           _strncmp 45DE  
            end_of_initialization 522E                        ??_mainMenu 005F  
            speedControl@position 0058                           floorf@e 0064  
                         floorf@m 0060                           floorf@u 0066  
                         floorf@x 004E                        _secretMenu 2CF4  
                         fputc@fp 0003                        ??_exitLine 0001  
                   __Lmediumconst 7EF6                           fputs@fp 000C  
                 ___lldiv@divisor 0005                   ___lldiv@counter 000D  
               __end_of_vfpfcnvrt 1AA6                        efgtoa@mode 0090  
                      efgtoa@sign 0089                           postdec1 000FE5  
                         postdec2 000FDD                           postinc0 000FEE  
                         postinc1 000FE6                           postinc2 000FDE  
               __end_of_startMenu 57A8                        ??_vfprintf 005F  
                      ??_stopMenu 005F                           strcpy@d 0009  
                         strlen@a 0003                           strcpy@s 0007  
                         strlen@s 0001                 __end_of_stopMotor 552E  
                       _PORTBbits 000F81                         _PORTDbits 000F83  
                     ?_eepromRead 0001                       ___fladd@grs 0044  
                   ___xxtofl@sign 0016                    pauseMenu@F6902 0240  
                       _TRISAbits 000F92                    ??_speedControl 005C  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _TRISEbits 000F96  
                  ??_timer_0_init 0001              pauseMenu@textCursor2 00E1  
                     ___fldiv@grs 0048                       ___fldiv@rem 0041  
                      _startMotor 560E           ?_calculatedAverageValue 0001  
                     ___flmul@grs 0029                     ??_eepromWrite 0002  
        _button_bounce_controller 019D                    __end_of_TIMER0 00AE  
             mainMenu@textCursor2 00E1                     ?_stateMachine 0001  
              _buttonControlFlags 31E2              __end_of_loopTaskInit 54B4  
                    _convert_data 0100             __size_of_readAdcValue 0042  
                  __end_of___flge 44E0                    __end_of___fleq 4BE6  
                  __end_of___lmul 5002                       vfpfcnvrt@ap 00AB  
                     vfpfcnvrt@ct 00C3                       vfpfcnvrt@fp 00A7  
                     vfpfcnvrt@ll 00B1                    __end_of___wmul 5752  
                  __end_of_lcdCmd 578E                    __end_of_efgtoa 0C62  
             ?_buttonControlFlags 0001                    __end_of_floorf 31E2  
                      floorf@F524 01A3                    __end_of_strcpy 518E  
                  __end_of_strlen 567A                 __size_of_PWM_Init 0028  
             start_initialization 51EA                        _systemInit 3FA2  
                     __end_of_abs 5476                       __end_of_pad 4916  
     __end_of_loopTaskMenuControl 4F98    __end_of_calculatedAverageValue 2A10  
                  _menuInitialize 56DC                      _driver_limit 0183  
                     ?_secretMenu 0001              ??_buttonControlFlags 0001  
                        ??_TIMER0 0001           __size_of_lcdWriteString 007E  
                   stopMenu@F6899 0250             __end_of___fpclassifyf 45DE  
                    _readAdcValue 53B4                    ??_stateMachine 00F1  
             __size_of_eepromRead 001E                       vfprintf@fmt 00C9  
                        ??___flge 003D                          ??___fleq 0009  
                        ??___lmul 0009               __end_of_eepromWrite 56DC  
                        ??___wmul 0005                          ??_lcdCmd 0002  
                        ??_efgtoa 006A                       __pdataBANK1 01B3  
                        ??_floorf 0052                          ??_strcpy 0005  
                        ??_strlen 0003                         ___fladd@a 0039  
                       ___fladd@b 0035                         ___fldiv@a 0039  
                       ___fldiv@b 0035                         ___flmul@a 0020  
                       ___flmul@b 001C                         ___flsub@a 0049  
                       ___flsub@b 0045            __end_of_menuInitialize 5704  
                   __pcstackBANK0 0060                  ___aodiv@dividend 0001  
               __size_of___xxtofl 01B4                       ?_startMotor 0001  
               __size_of_lcdClear 000E    __size_of_speedLimitSettingMenu 0108  
   __end_of_speedLimitSettingMenu 42D6                 __size_of_mainMenu 01A0  
                       _atoi$3050 0010                         _atoi$3051 0014  
                       _atoi$3052 0012                   secretMenu@F6906 0230  
               __size_of_exitLine 0002                       _efgtoa$2983 0073  
                     _efgtoa$2992 0079                       _efgtoa$2984 0075  
                     _efgtoa$2993 007B                       _efgtoa$2994 007D  
                     _efgtoa$2988 0077                         _dtoa$2959 002E  
            __end_of_speedControl 356C                         __pintcode 0008  
                   __pmediumconst 7EF6              __end_of_timer_0_init 57E4  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001       __end_of_loopTaskTimeMachine 4DB0  
                        ?_lcdInit 0001               __size_of_secretMenu 02D8  
                        ?_lcdPort 0001                 __size_of_vfprintf 006A  
           _driverTimeSettingMenu 3E76                 __size_of_stopMenu 00D2  
                        ?_mcuInit 0001                         fabsf@F463 01AB  
                        ?_isdigit 0001                          ?_isspace 0001  
                 ?_menuInitialize 0001                       ?_systemInit 0001  
                        ?_isupper 0001           __size_of_openLCD_Script 004A  
                  __size_of_fabsf 0034                          ?_sprintf 00CF  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002                eepromWrite@address 0002  
                       _pauseMenu 3D3C                    ___wmul@product 0005  
    __size_of_stopTimeSettingMenu 010C                          _LATCbits 000F8B  
                        _LATDbits 000F8C                       _eepromWrite 56AE  
           __size_of_loopTaskInit 003E                    PWM1_setDC@duty 005C  
                        _PIR2bits 000FA1                          i2u791_40 0018  
                        i2u791_41 0014                          i2u792_40 0026  
                        i2u792_41 0022                          i2u793_40 0044  
                        i2u793_41 0040                          i2u794_40 005A  
                        i2u794_41 0056                          i2u795_40 0072  
                        i2u795_41 006E                          i2u796_40 0084  
                        i2u796_41 0080                          i2u797_40 009E  
                        i2u797_41 009A                      _pauseIsClick 00FF  
             __size_of_startMotor 0036                         _vfpfcnvrt 1468  
                      _ADCON0bits 000FC2                        _ADCON2bits 000FC0  
                        _PWM_Init 5704                 ___wmul@multiplier 0001  
                       _startMenu 578E  driverTimeSettingMenu@textCursor2 00E1  
                    ??_eepromRead 0001                    PWM2_setDC@duty 005C  
                       _stopMotor 54F2        speedLimitSettingMenu@F6909 0220  
            __end_of_stateMachine 4A8C                      _isspace$3081 0007  
                      vfpfcnvrt@c 00C6                        vfpfcnvrt@f 00BF  
               ___lmul@multiplier 0001                      _loopTaskInit 5476  
                       copy_data0 51FE                    _lcdWriteString 4DB0  
                      ?_pauseMenu 0001                        _EECON1bits 000FA6  
                lcdSetCursor@temp 0008                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 5770  
             __size_of_systemInit 0120                  __size_of___aodiv 0188  
                __size_of___fladd 04C0                  __size_of___aomod 0164  
                __size_of_adcInit 003E                  __size_of___fldiv 039A  
                __size_of___awdiv 00C4                  __size_of___flneg 0038  
                __size_of___awmod 00B0                  __size_of___flmul 042A  
                __size_of___flsub 0046                  __size_of___fltol 0106  
                __size_of___lldiv 00A4                        ?_vfpfcnvrt 00A7  
          ?_driverTimeSettingMenu 0001                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        ?_startMenu 0001  
                      _ANSELAbits 000F38                        _ANSELBbits 000F39  
                      _ANSELCbits 000F3A                        _ANSELDbits 000F3B  
                      _ANSELEbits 000F3C                  __size_of_lcdInit 0096  
              ___fpclassifyf@F463 01A7                  __size_of_lcdPort 005C  
                      sprintf@fmt 00D1                          ___xxtofl 356C  
                __size_of_mcuInit 0016                        ?_stopMotor 0001  
                __size_of_isdigit 0038                          _lcdClear 57E4  
                __size_of_isspace 0052                          __ptext10 3720  
                        __ptext11 560E                          __ptext20 54F2  
                        __ptext12 33AE                          __ptext21 523C  
                        __ptext13 0C62                          __ptext30 44E0  
                        __ptext22 5002                          __ptext14 53B4  
                        __ptext31 532A                          __ptext23 1468  
                        __ptext15 272A                          __ptext40 2A10  
                        __ptext32 1AA6                          __ptext24 45DE  
                        __ptext16 4F98                          __ptext41 4850  
                        __ptext33 5566                          __ptext25 00B2  
                        __ptext17 4BE6                          __ptext50 528E  
                        __ptext42 5644                          __ptext34 1F66  
                        __ptext26 50D2                          __ptext18 57F2  
                        __ptext51 559E                          __ptext43 5370  
                        __ptext35 43DC                          __ptext27 552E  
                        __ptext19 3E76                          __ptext60 4DB0  
                        __ptext52 572C                          __ptext44 4786  
                        __ptext36 4B3C                          __ptext28 5132  
                        __ptext61 55D6                          __ptext53 56AE  
                        __ptext45 57F4                          __ptext37 2390  
                        __ptext29 2FCC                          __ptext70 5704  
                        __ptext62 506C                          __ptext54 31E2  
                        __ptext46 5436                          __ptext38 4A8C  
                        __ptext71 4E2E                          __ptext63 57E4  
                        __ptext55 5476                          __ptext47 3BD8  
                        __ptext39 4916                          __ptext72 4EA8  
                        __ptext64 56DC                          __ptext56 57D2  
                        __ptext48 3A50                          __ptext73 567A  
                        __ptext65 57A8                          __ptext57 3FA2  
                        __ptext49 38C0                          __ptext74 356C  
                        __ptext66 4C8A                          __ptext58 5752  
                        __ptext75 42D6                          __ptext67 5770  
                        __ptext59 52E0                          __ptext68 518E  
                        __ptext69 54B4                  __size_of_isupper 0038  
          __end_of_lcdWriteString 4E2E                          _mainMenu 3720  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                    ??_secretMenu 005F                        strcpy@dest 0001  
                __size_of_strncmp 00D6                     lcdSetCursor@a 0005  
                   lcdSetCursor@b 0004                     lcdSetCursor@y 0007  
                   lcdSetCursor@z 0006                          _exitLine 57F2  
                   __size_of_atoi 0190                     __size_of_main 0014  
                   __size_of_dtoa 02E4             __size_of_speedControl 01BE  
           __size_of_timer_0_init 0012             secretMenu@textCursor2 00E1  
                        efgtoa@fp 0058                          efgtoa@ne 0085  
                        efgtoa@pp 0081                          efgtoa@ou 006F  
                        lcdPort@a 0001                          int$flags 005F  
                        _vfprintf 5002                          _stopMenu 46B4  
          readAdcValue@adcChannel 0005                  ___aomod@dividend 0001  
              __end_of_secretMenu 2FCC                    _vfpfcnvrt$3014 00BD  
                  _vfpfcnvrt$3008 00B9                    _vfpfcnvrt$3009 00BB  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  _openLCD_Script 52E0      _KD@fs_speed_controller$F1164 01DB  
    _KD@fs_speed_controller$F1343 01D3      _KD@fs_speed_controller$F2208 01BB  
    _KD@fs_speed_controller$F2077 01C3      _KD@fs_speed_controller$F2361 01B3  
    _KD@fs_speed_controller$F1843 01CB                          isdigit@c 0001  
                    _speedControl 33AE                      _timer_0_init 57D2  
                 ?_lcdWriteString 0005                      ??_startMotor 005E  
                        intlevel2 0000                         sprintf@ap 00D9  
                     ??_pauseMenu 005F       __size_of_buttonControlFlags 01CC  
                        isspace@c 0001                  ___lldiv@dividend 0001  
    __size_of_loopTaskMenuControl 0076                         strcpy@src 0003  
                   ?_lcdSetCursor 0004                          isupper@c 0001  
                       strncmp@_l 0001                         strncmp@_r 0003  
                      _OSCCONbits 000FD3                       efgtoa@nmode 008D  
                    _procces_data 0130                   ___aomod@divisor 0009  
                     ??_vfpfcnvrt 00AD                   ___aomod@counter 0011  
                ??_menuInitialize 0001                __end_of_startMotor 5644  
     _KD@fs_speed_controller$F950 01E3             __size_of_stateMachine 00B2  
                     ??_startMenu 0001               _stopTimeSettingMenu 40C2  
          __end_of_openLCD_Script 532A                          sprintf@f 00DB  
                        tolower@c 0007                          sprintf@s 00CF  
          __size_of___fpclassifyf 00FE                  ___lldiv@quotient 0009  
                     ??_stopMotor 005E                      ??_systemInit 0002  
                        strncmp@l 0008                          strncmp@n 0005  
                        strncmp@r 000A                       _timer_value 018F  
                   ?_lcdWriteChar 0001                     ___fladd@signs 0041  
                      _PWM1_setDC 4EA8                        _PWM2_setDC 4E2E  
                    ___aodiv@sign 0012                      ___fladd@aexp 0042  
                    ___fladd@bexp 0043              ?_stopTimeSettingMenu 0001  
                    ?_eepromWrite 0001                    ??_lcdSetCursor 0005  
           _speedLimitSettingMenu 41CE                      ___aomod@sign 0012  
                    _stateMachine 49DA  
