

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Thu Aug 13 20:08:41 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F45K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	eeprom_data
   122  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   123  0000                     
   124                           	psect	idataBANK1
   125  005C56                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _KD@fs_speed_controller$F1783
   129  005C56  0000               	dw	0
   130  005C58  3F80               	dw	16256
   131                           
   132                           ;initializer for _KP@fs_speed_controller$F1782
   133  005C5A  CCCD               	dw	52429
   134  005C5C  3E4C               	dw	15948
   135                           
   136                           ;initializer for _KD@fs_speed_controller$F1599
   137  005C5E  0000               	dw	0
   138  005C60  3F80               	dw	16256
   139                           
   140                           ;initializer for _KP@fs_speed_controller$F1598
   141  005C62  CCCD               	dw	52429
   142  005C64  3E4C               	dw	15948
   143                           
   144                           ;initializer for _KD@fs_speed_controller$F1182
   145  005C66  0000               	dw	0
   146  005C68  3F80               	dw	16256
   147                           
   148                           ;initializer for _KP@fs_speed_controller$F1181
   149  005C6A  CCCD               	dw	52429
   150  005C6C  3E4C               	dw	15948
   151                           
   152                           ;initializer for _KD
   153  005C6E  0000               	dw	0
   154  005C70  3F80               	dw	16256
   155                           
   156                           ;initializer for _KP
   157  005C72  CCCD               	dw	52429
   158  005C74  3E4C               	dw	15948
   159  0000                     _ANSELCbits	set	3898
   160  0000                     _ANSELBbits	set	3897
   161  0000                     _ANSELDbits	set	3899
   162  0000                     _ANSELEbits	set	3900
   163  0000                     _ANSELAbits	set	3896
   164  0000                     _T0CON	set	4053
   165  0000                     _TMR0L	set	4054
   166  0000                     _TMR0H	set	4055
   167  0000                     _INTCONbits	set	4082
   168  0000                     _CCPR2L	set	3943
   169  0000                     _CCPR1L	set	4030
   170  0000                     _PR2	set	4027
   171  0000                     _TMR2	set	4028
   172  0000                     _T2CONbits	set	4026
   173  0000                     _CCP2CON	set	3942
   174  0000                     _CCP1CON	set	4029
   175  0000                     _LATCbits	set	3979
   176  0000                     _LATDbits	set	3980
   177  0000                     _TRISCbits	set	3988
   178  0000                     _OSCTUNEbits	set	3995
   179  0000                     _OSCCONbits	set	4051
   180  0000                     _TRISBbits	set	3987
   181  0000                     _TRISDbits	set	3989
   182  0000                     _PORTDbits	set	3971
   183  0000                     _PORTBbits	set	3969
   184  0000                     _PIR2bits	set	4001
   185  0000                     _EECON2	set	4007
   186  0000                     _EEDATA	set	4008
   187  0000                     _EECON1bits	set	4006
   188  0000                     _EEADR	set	4009
   189  0000                     _ADCON2bits	set	4032
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON0	set	4034
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TRISAbits	set	3986
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON0bits	set	4034
   197                           
   198                           	psect	smallconst
   199  000600                     __psmallconst:
   200                           	callstack 0
   201  000600  00                 	db	0
   202  000601                     STR_4:
   203  000601  25                 	db	37
   204  000602  64                 	db	100	;'d'
   205  000603  20                 	db	32
   206  000604  20                 	db	32
   207  000605  20                 	db	32
   208  000606  20                 	db	32
   209  000607  20                 	db	32
   210  000608  20                 	db	32
   211  000609  20                 	db	32
   212  00060A  20                 	db	32
   213  00060B  20                 	db	32
   214  00060C  20                 	db	32
   215  00060D  20                 	db	32
   216  00060E  20                 	db	32
   217  00060F  20                 	db	32
   218  000610  20                 	db	32
   219  000611  20                 	db	32
   220  000612  00                 	db	0
   221  000613                     STR_13:
   222  000613  50                 	db	80	;'P'
   223  000614  49                 	db	73	;'I'
   224  000615  44                 	db	68	;'D'
   225  000616  20                 	db	32
   226  000617  50                 	db	80	;'P'
   227  000618  41                 	db	65	;'A'
   228  000619  52                 	db	82	;'R'
   229  00061A  41                 	db	65	;'A'
   230  00061B  4D                 	db	77	;'M'
   231  00061C  20                 	db	32
   232  00061D  20                 	db	32
   233  00061E  20                 	db	32
   234  00061F  20                 	db	32
   235  000620  20                 	db	32
   236  000621  20                 	db	32
   237  000622  20                 	db	32
   238  000623  00                 	db	0
   239  000624                     STR_7:
   240  000624  48                 	db	72	;'H'
   241  000625  49                 	db	73	;'I'
   242  000626  5A                 	db	90	;'Z'
   243  000627  20                 	db	32
   244  000628  4C                 	db	76	;'L'
   245  000629  69                 	db	105	;'i'
   246  00062A  4D                 	db	77	;'M'
   247  00062B  69                 	db	105	;'i'
   248  00062C  54                 	db	84	;'T'
   249  00062D  69                 	db	105	;'i'
   250  00062E  20                 	db	32
   251  00062F  20                 	db	32
   252  000630  20                 	db	32
   253  000631  20                 	db	32
   254  000632  20                 	db	32
   255  000633  20                 	db	32
   256  000634  00                 	db	0
   257  000635                     STR_1:
   258  000635  4B                 	db	75	;'K'
   259  000636  41                 	db	65	;'A'
   260  000637  4C                 	db	76	;'L'
   261  000638  41                 	db	65	;'A'
   262  000639  4E                 	db	78	;'N'
   263  00063A  20                 	db	32
   264  00063B  5A                 	db	90	;'Z'
   265  00063C  41                 	db	65	;'A'
   266  00063D  4D                 	db	77	;'M'
   267  00063E  41                 	db	65	;'A'
   268  00063F  4E                 	db	78	;'N'
   269  000640  20                 	db	32
   270  000641  20                 	db	32
   271  000642  20                 	db	32
   272  000643  20                 	db	32
   273  000644  20                 	db	32
   274  000645  00                 	db	0
   275  000646                     STR_9:
   276  000646  5A                 	db	90	;'Z'
   277  000647  41                 	db	65	;'A'
   278  000648  4D                 	db	77	;'M'
   279  000649  41                 	db	65	;'A'
   280  00064A  4E                 	db	78	;'N'
   281  00064B  20                 	db	32
   282  00064C  44                 	db	68	;'D'
   283  00064D  4F                 	db	79	;'O'
   284  00064E  4C                 	db	76	;'L'
   285  00064F  44                 	db	68	;'D'
   286  000650  55                 	db	85	;'U'
   287  000651  20                 	db	32
   288  000652  20                 	db	32
   289  000653  20                 	db	32
   290  000654  20                 	db	32
   291  000655  20                 	db	32
   292  000656  00                 	db	0
   293  000657                     STR_11:
   294  000657  48                 	db	72	;'H'
   295  000658  41                 	db	65	;'A'
   296  000659  52                 	db	82	;'R'
   297  00065A  45                 	db	69	;'E'
   298  00065B  4B                 	db	75	;'K'
   299  00065C  45                 	db	69	;'E'
   300  00065D  54                 	db	84	;'T'
   301  00065E  20                 	db	32
   302  00065F  44                 	db	68	;'D'
   303  000660  55                 	db	85	;'U'
   304  000661  52                 	db	82	;'R'
   305  000662  44                 	db	68	;'D'
   306  000663  55                 	db	85	;'U'
   307  000664  20                 	db	32
   308  000665  20                 	db	32
   309  000666  20                 	db	32
   310  000667  00                 	db	0
   311  000668                     STR_3:
   312  000668  48                 	db	72	;'H'
   313  000669  41                 	db	65	;'A'
   314  00066A  52                 	db	82	;'R'
   315  00066B  45                 	db	69	;'E'
   316  00066C  4B                 	db	75	;'K'
   317  00066D  54                 	db	84	;'T'
   318  00066E  20                 	db	32
   319  00066F  5A                 	db	90	;'Z'
   320  000670  41                 	db	65	;'A'
   321  000671  4D                 	db	77	;'M'
   322  000672  41                 	db	65	;'A'
   323  000673  4E                 	db	78	;'N'
   324  000674  49                 	db	73	;'I'
   325  000675  20                 	db	32
   326  000676  64                 	db	100	;'d'
   327  000677  6B                 	db	107	;'k'
   328  000678  00                 	db	0
   329  000679                     STR_5:
   330  000679  44                 	db	68	;'D'
   331  00067A  55                 	db	85	;'U'
   332  00067B  52                 	db	82	;'R'
   333  00067C  4D                 	db	77	;'M'
   334  00067D  41                 	db	65	;'A'
   335  00067E  20                 	db	32
   336  00067F  5A                 	db	90	;'Z'
   337  000680  41                 	db	65	;'A'
   338  000681  4D                 	db	77	;'M'
   339  000682  41                 	db	65	;'A'
   340  000683  4E                 	db	78	;'N'
   341  000684  49                 	db	73	;'I'
   342  000685  20                 	db	32
   343  000686  20                 	db	32
   344  000687  6D                 	db	109	;'m'
   345  000688  73                 	db	115	;'s'
   346  000689  00                 	db	0
   347  00068A                     STR_10:
   348  00068A  20                 	db	32
   349  00068B  20                 	db	32
   350  00068C  20                 	db	32
   351  00068D  20                 	db	32
   352  00068E  20                 	db	32
   353  00068F  20                 	db	32
   354  000690  25                 	db	37
   355  000691  64                 	db	100	;'d'
   356  000692  3A                 	db	58	;':'
   357  000693  25                 	db	37
   358  000694  64                 	db	100	;'d'
   359  000695  20                 	db	32
   360  000696  20                 	db	32
   361  000697  20                 	db	32
   362  000698  20                 	db	32
   363  000699  00                 	db	0
   364  00069A                     STR_2:
   365  00069A  20                 	db	32
   366  00069B  20                 	db	32
   367  00069C  20                 	db	32
   368  00069D  20                 	db	32
   369  00069E  20                 	db	32
   370  00069F  20                 	db	32
   371  0006A0  25                 	db	37
   372  0006A1  64                 	db	100	;'d'
   373  0006A2  3A                 	db	58	;':'
   374  0006A3  25                 	db	37
   375  0006A4  64                 	db	100	;'d'
   376  0006A5  20                 	db	32
   377  0006A6  20                 	db	32
   378  0006A7  20                 	db	32
   379  0006A8  00                 	db	0
   380  0006A9                     STR_14:
   381  0006A9  4B                 	db	75	;'K'
   382  0006AA  70                 	db	112	;'p'
   383  0006AB  3A                 	db	58	;':'
   384  0006AC  25                 	db	37
   385  0006AD  35                 	db	53	;'5'
   386  0006AE  2E                 	db	46
   387  0006AF  31                 	db	49	;'1'
   388  0006B0  66                 	db	102	;'f'
   389  0006B1  20                 	db	32
   390  0006B2  20                 	db	32
   391  0006B3  20                 	db	32
   392  0006B4  20                 	db	32
   393  0006B5  20                 	db	32
   394  0006B6  00                 	db	0
   395  0006B7                     STR_16:
   396  0006B7  4B                 	db	75	;'K'
   397  0006B8  64                 	db	100	;'d'
   398  0006B9  3A                 	db	58	;':'
   399  0006BA  25                 	db	37
   400  0006BB  35                 	db	53	;'5'
   401  0006BC  2E                 	db	46
   402  0006BD  31                 	db	49	;'1'
   403  0006BE  66                 	db	102	;'f'
   404  0006BF  20                 	db	32
   405  0006C0  20                 	db	32
   406  0006C1  20                 	db	32
   407  0006C2  20                 	db	32
   408  0006C3  00                 	db	0
   409  0006C4                     STR_17:
   410  0006C4  49                 	db	73	;'I'
   411  0006C5  4E                 	db	78	;'N'
   412  0006C6  46                 	db	70	;'F'
   413  0006C7  00                 	db	0
   414  0006C8                     STR_21:
   415  0006C8  4E                 	db	78	;'N'
   416  0006C9  41                 	db	65	;'A'
   417  0006CA  4E                 	db	78	;'N'
   418  0006CB  00                 	db	0
   419  0006CC                     STR_18:
   420  0006CC  69                 	db	105	;'i'
   421  0006CD  6E                 	db	110	;'n'
   422  0006CE  66                 	db	102	;'f'
   423  0006CF  00                 	db	0
   424  0006D0                     STR_22:
   425  0006D0  6E                 	db	110	;'n'
   426  0006D1  61                 	db	97	;'a'
   427  0006D2  6E                 	db	110	;'n'
   428  0006D3  00                 	db	0
   429  0006D4                     STR_25:
   430  0006D4  6C                 	db	108	;'l'
   431  0006D5  66                 	db	102	;'f'
   432  0006D6  00                 	db	0
   433  0006D7  00                 	db	0	; dummy byte at the end
   434  0000                     
   435                           ; #config settings
   436                           
   437                           	psect	cinit
   438  0057B8                     __pcinit:
   439                           	callstack 0
   440  0057B8                     start_initialization:
   441                           	callstack 0
   442  0057B8                     __initialization:
   443                           	callstack 0
   444                           
   445                           ; Initialize objects allocated to BANK1 (32 bytes)
   446                           ; load TBLPTR registers with __pidataBANK1
   447  0057B8  0E56               	movlw	low __pidataBANK1
   448  0057BA  6EF6               	movwf	tblptrl,c
   449  0057BC  0E5C               	movlw	high __pidataBANK1
   450  0057BE  6EF7               	movwf	tblptrh,c
   451  0057C0  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   452  0057C2  6EF8               	movwf	tblptru,c
   453  0057C4  EE01  F0BF         	lfsr	0,__pdataBANK1
   454  0057C8  EE10 F020          	lfsr	1,32
   455  0057CC                     copy_data0:
   456  0057CC  0009               	tblrd		*+
   457  0057CE  CFF5 FFEE          	movff	tablat,postinc0
   458  0057D2  50E5               	movf	postdec1,w,c
   459  0057D4  50E1               	movf	fsr1l,w,c
   460  0057D6  E1FA               	bnz	copy_data0
   461                           
   462                           ; Clear objects allocated to BANK2 (80 bytes)
   463  0057D8  EE02  F000         	lfsr	0,__pbssBANK2
   464  0057DC  0E50               	movlw	80
   465  0057DE                     clear_0:
   466  0057DE  6AEE               	clrf	postinc0,c
   467  0057E0  06E8               	decf	wreg,f,c
   468  0057E2  E1FD               	bnz	clear_0
   469                           
   470                           ; Clear objects allocated to BANK1 (191 bytes)
   471  0057E4  EE01  F000         	lfsr	0,__pbssBANK1
   472  0057E8  0EBF               	movlw	191
   473  0057EA                     clear_1:
   474  0057EA  6AEE               	clrf	postinc0,c
   475  0057EC  06E8               	decf	wreg,f,c
   476  0057EE  E1FD               	bnz	clear_1
   477                           
   478                           ; Clear objects allocated to BANK0 (13 bytes)
   479  0057F0  EE00  F0F3         	lfsr	0,__pbssBANK0
   480  0057F4  0E0D               	movlw	13
   481  0057F6                     clear_2:
   482  0057F6  6AEE               	clrf	postinc0,c
   483  0057F8  06E8               	decf	wreg,f,c
   484  0057FA  E1FD               	bnz	clear_2
   485  0057FC                     end_of_initialization:
   486                           	callstack 0
   487  0057FC                     __end_of__initialization:
   488                           	callstack 0
   489  0057FC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   490  0057FE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   491  005800  0E00               	movlw	low (__Lmediumconst shr (0+16))
   492  005802  6EF8               	movwf	tblptru,c
   493  005804  0100               	movlb	0
   494  005806  EF67  F026         	goto	_main	;jump to C main() function
   495                           
   496                           	psect	bssBANK0
   497  0000F3                     __pbssBANK0:
   498                           	callstack 0
   499  0000F3                     _timer_value:
   500                           	callstack 0
   501  0000F3                     	ds	10
   502  0000FD                     _menu_flags:
   503                           	callstack 0
   504  0000FD                     	ds	1
   505  0000FE                     _button_bounce_controller:
   506                           	callstack 0
   507  0000FE                     	ds	1
   508  0000FF                     _pauseIsClick:
   509                           	callstack 0
   510  0000FF                     	ds	1
   511                           
   512                           	psect	bssBANK1
   513  000100                     __pbssBANK1:
   514                           	callstack 0
   515  000100                     _convert_data:
   516                           	callstack 0
   517  000100                     	ds	48
   518  000130                     _procces_data:
   519                           	callstack 0
   520  000130                     	ds	32
   521  000150                     _controller:
   522                           	callstack 0
   523  000150                     	ds	19
   524  000163                     	ds	16
   525  000173                     _textCursor2:
   526                           	callstack 0
   527  000173                     	ds	16
   528  000183                     _adc_raw_data:
   529                           	callstack 0
   530  000183                     	ds	16
   531  000193                     _driver_limit:
   532                           	callstack 0
   533  000193                     	ds	12
   534  00019F                     floorf@F524:
   535                           	callstack 0
   536  00019F                     	ds	4
   537  0001A3                     ___fpclassifyf@F463:
   538                           	callstack 0
   539  0001A3                     	ds	4
   540  0001A7                     fabsf@F463:
   541                           	callstack 0
   542  0001A7                     	ds	4
   543  0001AB                     _counter:
   544                           	callstack 0
   545  0001AB                     	ds	4
   546  0001AF                     _menu_value:
   547                           	callstack 0
   548  0001AF                     	ds	3
   549  0001B2                     _nout:
   550                           	callstack 0
   551  0001B2                     	ds	2
   552  0001B4                     _width:
   553                           	callstack 0
   554  0001B4                     	ds	2
   555  0001B6                     _prec:
   556                           	callstack 0
   557  0001B6                     	ds	2
   558  0001B8                     _flags:
   559                           	callstack 0
   560  0001B8                     	ds	2
   561  0001BA                     stateMachine@secretMenuCounter:
   562                           	callstack 0
   563  0001BA                     	ds	1
   564  0001BB                     _menu_selected:
   565                           	callstack 0
   566  0001BB                     	ds	1
   567  0001BC                     _stopIsClick:
   568                           	callstack 0
   569  0001BC                     	ds	1
   570  0001BD                     _startIsClick:
   571                           	callstack 0
   572  0001BD                     	ds	1
   573  0001BE                     _timer_counter_flag:
   574                           	callstack 0
   575  0001BE                     	ds	1
   576                           
   577                           	psect	dataBANK1
   578  0001BF                     __pdataBANK1:
   579                           	callstack 0
   580  0001BF                     	ds	4
   581  0001C3                     	ds	4
   582  0001C7                     _KD@fs_speed_controller$F1599:
   583                           	callstack 0
   584  0001C7                     	ds	4
   585  0001CB                     _KP@fs_speed_controller$F1598:
   586                           	callstack 0
   587  0001CB                     	ds	4
   588  0001CF                     	ds	4
   589  0001D3                     	ds	4
   590  0001D7                     	ds	4
   591  0001DB                     	ds	4
   592                           
   593                           	psect	bssBANK2
   594  000200                     __pbssBANK2:
   595                           	callstack 0
   596  000200                     _dbuf:
   597                           	callstack 0
   598  000200                     	ds	80
   599                           
   600                           	psect	cstackBANK0
   601  000060                     __pcstackBANK0:
   602                           	callstack 0
   603  000060                     floorf@m:
   604                           	callstack 0
   605                           
   606                           ; 4 bytes @ 0x0
   607  000060                     	ds	4
   608  000064                     floorf@e:
   609                           	callstack 0
   610                           
   611                           ; 2 bytes @ 0x4
   612  000064                     	ds	2
   613  000066                     floorf@u:
   614                           	callstack 0
   615                           
   616                           ; 4 bytes @ 0x6
   617  000066                     	ds	4
   618  00006A                     ??_efgtoa:
   619                           
   620                           ; 1 bytes @ 0xA
   621  00006A                     	ds	5
   622  00006F                     efgtoa@ou:
   623                           	callstack 0
   624                           
   625                           ; 4 bytes @ 0xF
   626  00006F                     	ds	4
   627  000073                     _efgtoa$2505:
   628                           	callstack 0
   629                           
   630                           ; 2 bytes @ 0x13
   631  000073                     	ds	2
   632  000075                     _efgtoa$2506:
   633                           	callstack 0
   634                           
   635                           ; 2 bytes @ 0x15
   636  000075                     	ds	2
   637  000077                     _efgtoa$2510:
   638                           	callstack 0
   639                           
   640                           ; 2 bytes @ 0x17
   641  000077                     	ds	2
   642  000079                     _efgtoa$2514:
   643                           	callstack 0
   644                           
   645                           ; 2 bytes @ 0x19
   646  000079                     	ds	2
   647  00007B                     _efgtoa$2515:
   648                           	callstack 0
   649                           
   650                           ; 2 bytes @ 0x1B
   651  00007B                     	ds	2
   652  00007D                     _efgtoa$2516:
   653                           	callstack 0
   654                           
   655                           ; 2 bytes @ 0x1D
   656  00007D                     	ds	2
   657  00007F                     efgtoa@t:
   658                           	callstack 0
   659                           
   660                           ; 2 bytes @ 0x1F
   661  00007F                     	ds	2
   662  000081                     efgtoa@pp:
   663                           	callstack 0
   664                           
   665                           ; 2 bytes @ 0x21
   666  000081                     	ds	2
   667  000083                     efgtoa@m:
   668                           	callstack 0
   669                           
   670                           ; 2 bytes @ 0x23
   671  000083                     	ds	2
   672  000085                     efgtoa@ne:
   673                           	callstack 0
   674                           
   675                           ; 2 bytes @ 0x25
   676  000085                     	ds	2
   677  000087                     efgtoa@d:
   678                           	callstack 0
   679                           
   680                           ; 2 bytes @ 0x27
   681  000087                     	ds	2
   682  000089                     efgtoa@sign:
   683                           	callstack 0
   684                           
   685                           ; 2 bytes @ 0x29
   686  000089                     	ds	2
   687  00008B                     efgtoa@p:
   688                           	callstack 0
   689                           
   690                           ; 2 bytes @ 0x2B
   691  00008B                     	ds	2
   692  00008D                     efgtoa@nmode:
   693                           	callstack 0
   694                           
   695                           ; 1 bytes @ 0x2D
   696  00008D                     	ds	1
   697  00008E                     efgtoa@w:
   698                           	callstack 0
   699                           
   700                           ; 2 bytes @ 0x2E
   701  00008E                     	ds	2
   702  000090                     efgtoa@mode:
   703                           	callstack 0
   704                           
   705                           ; 1 bytes @ 0x30
   706  000090                     	ds	1
   707  000091                     efgtoa@h:
   708                           	callstack 0
   709                           
   710                           ; 4 bytes @ 0x31
   711  000091                     	ds	4
   712  000095                     efgtoa@l:
   713                           	callstack 0
   714                           
   715                           ; 4 bytes @ 0x35
   716  000095                     	ds	4
   717  000099                     efgtoa@i:
   718                           	callstack 0
   719                           
   720                           ; 2 bytes @ 0x39
   721  000099                     	ds	2
   722  00009B                     efgtoa@g:
   723                           	callstack 0
   724                           
   725                           ; 4 bytes @ 0x3B
   726  00009B                     	ds	4
   727  00009F                     efgtoa@e:
   728                           	callstack 0
   729                           
   730                           ; 2 bytes @ 0x3F
   731  00009F                     	ds	2
   732  0000A1                     efgtoa@n:
   733                           	callstack 0
   734                           
   735                           ; 2 bytes @ 0x41
   736  0000A1                     	ds	2
   737  0000A3                     efgtoa@u:
   738                           	callstack 0
   739                           
   740                           ; 4 bytes @ 0x43
   741  0000A3                     	ds	4
   742  0000A7                     ?_vfpfcnvrt:
   743                           	callstack 0
   744  0000A7                     vfpfcnvrt@fp:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x47
   748  0000A7                     	ds	2
   749  0000A9                     vfpfcnvrt@fmt:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x49
   753  0000A9                     	ds	2
   754  0000AB                     vfpfcnvrt@ap:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x4B
   758  0000AB                     	ds	2
   759  0000AD                     ??_vfpfcnvrt:
   760                           
   761                           ; 1 bytes @ 0x4D
   762  0000AD                     	ds	4
   763  0000B1                     vfpfcnvrt@ll:
   764                           	callstack 0
   765                           
   766                           ; 8 bytes @ 0x51
   767  0000B1                     	ds	8
   768  0000B9                     _vfpfcnvrt$2530:
   769                           	callstack 0
   770                           
   771                           ; 2 bytes @ 0x59
   772  0000B9                     	ds	2
   773  0000BB                     _vfpfcnvrt$2531:
   774                           	callstack 0
   775                           
   776                           ; 2 bytes @ 0x5B
   777  0000BB                     	ds	2
   778  0000BD                     _vfpfcnvrt$2536:
   779                           	callstack 0
   780                           
   781                           ; 2 bytes @ 0x5D
   782  0000BD                     	ds	2
   783  0000BF                     vfpfcnvrt@f:
   784                           	callstack 0
   785                           
   786                           ; 4 bytes @ 0x5F
   787  0000BF                     	ds	4
   788  0000C3                     vfpfcnvrt@ct:
   789                           	callstack 0
   790                           
   791                           ; 3 bytes @ 0x63
   792  0000C3                     	ds	3
   793  0000C6                     vfpfcnvrt@c:
   794                           	callstack 0
   795                           
   796                           ; 1 bytes @ 0x66
   797  0000C6                     	ds	1
   798  0000C7                     ?_vfprintf:
   799                           	callstack 0
   800  0000C7                     vfprintf@fp:
   801                           	callstack 0
   802                           
   803                           ; 2 bytes @ 0x67
   804  0000C7                     	ds	2
   805  0000C9                     vfprintf@fmt:
   806                           	callstack 0
   807                           
   808                           ; 2 bytes @ 0x69
   809  0000C9                     	ds	2
   810  0000CB                     vfprintf@ap:
   811                           	callstack 0
   812                           
   813                           ; 2 bytes @ 0x6B
   814  0000CB                     	ds	2
   815  0000CD                     vfprintf@cfmt:
   816                           	callstack 0
   817                           
   818                           ; 2 bytes @ 0x6D
   819  0000CD                     	ds	2
   820  0000CF                     ?_sprintf:
   821                           	callstack 0
   822  0000CF                     sprintf@s:
   823                           	callstack 0
   824                           
   825                           ; 2 bytes @ 0x6F
   826  0000CF                     	ds	2
   827  0000D1                     sprintf@fmt:
   828                           	callstack 0
   829                           
   830                           ; 2 bytes @ 0x71
   831  0000D1                     	ds	8
   832  0000D9                     sprintf@ap:
   833                           	callstack 0
   834                           
   835                           ; 2 bytes @ 0x79
   836  0000D9                     	ds	2
   837  0000DB                     sprintf@f:
   838                           	callstack 0
   839                           
   840                           ; 6 bytes @ 0x7B
   841  0000DB                     	ds	6
   842  0000E1                     ??_stateMachine:
   843                           
   844                           ; 1 bytes @ 0x81
   845  0000E1                     	ds	2
   846  0000E3                     stateMachine@textCursor2:
   847                           	callstack 0
   848                           
   849                           ; 16 bytes @ 0x83
   850  0000E3                     	ds	16
   851                           
   852                           	psect	cstackCOMRAM
   853  000001                     __pcstackCOMRAM:
   854                           	callstack 0
   855  000001                     ?_strlen:
   856                           	callstack 0
   857  000001                     ?___fpclassifyf:
   858                           	callstack 0
   859  000001                     ?_isupper:
   860                           	callstack 0
   861  000001                     ?_isdigit:
   862                           	callstack 0
   863  000001                     ?_strncmp:
   864                           	callstack 0
   865  000001                     ?_isspace:
   866                           	callstack 0
   867  000001                     ?_readAdcValue:
   868                           	callstack 0
   869  000001                     ?___wmul:
   870                           	callstack 0
   871  000001                     ?___awdiv:
   872                           	callstack 0
   873  000001                     ?___awmod:
   874                           	callstack 0
   875  000001                     ?___lmul:
   876                           	callstack 0
   877  000001                     ?___lldiv:
   878                           	callstack 0
   879  000001                     ?___flneg:
   880                           	callstack 0
   881  000001                     ?___aodiv:
   882                           	callstack 0
   883  000001                     ?___aomod:
   884                           	callstack 0
   885  000001                     eepromRead@address:
   886                           	callstack 0
   887  000001                     eepromWrite@data:
   888                           	callstack 0
   889  000001                     Lcd_Port@a:
   890                           	callstack 0
   891  000001                     ___wmul@multiplier:
   892                           	callstack 0
   893  000001                     ___awdiv@dividend:
   894                           	callstack 0
   895  000001                     ___awmod@dividend:
   896                           	callstack 0
   897  000001                     isdigit@c:
   898                           	callstack 0
   899  000001                     isspace@c:
   900                           	callstack 0
   901  000001                     isupper@c:
   902                           	callstack 0
   903  000001                     fputc@c:
   904                           	callstack 0
   905  000001                     strcpy@dest:
   906                           	callstack 0
   907  000001                     strlen@s:
   908                           	callstack 0
   909  000001                     strncmp@_l:
   910                           	callstack 0
   911  000001                     ___lmul@multiplier:
   912                           	callstack 0
   913  000001                     ___lldiv@dividend:
   914                           	callstack 0
   915  000001                     ___fleq@ff1:
   916                           	callstack 0
   917  000001                     ___flneg@f1:
   918                           	callstack 0
   919  000001                     ___fpclassifyf@x:
   920                           	callstack 0
   921  000001                     ___aodiv@dividend:
   922                           	callstack 0
   923  000001                     ___aomod@dividend:
   924                           	callstack 0
   925                           
   926                           ; 8 bytes @ 0x0
   927  000001                     	ds	1
   928  000002                     ??_system_init:
   929  000002                     ??_Lcd_Cmd:
   930  000002                     eepromWrite@address:
   931                           	callstack 0
   932  000002                     Lcd_Write_Char@temp:
   933                           	callstack 0
   934                           
   935                           ; 1 bytes @ 0x1
   936  000002                     	ds	1
   937  000003                     ??_isupper:
   938  000003                     ??_isdigit:
   939  000003                     ??_isspace:
   940  000003                     ??_readAdcValue:
   941  000003                     Lcd_Cmd@a:
   942                           	callstack 0
   943  000003                     Lcd_Write_Char@y:
   944                           	callstack 0
   945  000003                     ___wmul@multiplicand:
   946                           	callstack 0
   947  000003                     ___awdiv@divisor:
   948                           	callstack 0
   949  000003                     ___awmod@divisor:
   950                           	callstack 0
   951  000003                     fputc@fp:
   952                           	callstack 0
   953  000003                     strcpy@src:
   954                           	callstack 0
   955  000003                     strlen@a:
   956                           	callstack 0
   957  000003                     strncmp@_r:
   958                           	callstack 0
   959                           
   960                           ; 2 bytes @ 0x2
   961  000003                     	ds	1
   962  000004                     ??_lcd_init:
   963  000004                     Lcd_Set_Cursor@b:
   964                           	callstack 0
   965  000004                     Lcd_Write_Char@a:
   966                           	callstack 0
   967                           
   968                           ; 1 bytes @ 0x3
   969  000004                     	ds	1
   970  000005                     ??_fputc:
   971  000005                     ??___fpclassifyf:
   972  000005                     ??_strcpy:
   973  000005                     readAdcValue@adcChannel:
   974                           	callstack 0
   975  000005                     Lcd_Set_Cursor@a:
   976                           	callstack 0
   977  000005                     ___awdiv@counter:
   978                           	callstack 0
   979  000005                     ___awmod@counter:
   980                           	callstack 0
   981  000005                     Lcd_Write_String@a:
   982                           	callstack 0
   983  000005                     ___wmul@product:
   984                           	callstack 0
   985  000005                     strncmp@n:
   986                           	callstack 0
   987  000005                     ___lmul@multiplicand:
   988                           	callstack 0
   989  000005                     ___lldiv@divisor:
   990                           	callstack 0
   991  000005                     ___fleq@ff2:
   992                           	callstack 0
   993                           
   994                           ; 4 bytes @ 0x4
   995  000005                     	ds	1
   996  000006                     Lcd_Set_Cursor@z:
   997                           	callstack 0
   998  000006                     ___awdiv@sign:
   999                           	callstack 0
  1000  000006                     ___awmod@sign:
  1001                           	callstack 0
  1002  000006                     readAdcValue@adcValue:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0x5
  1006  000006                     	ds	1
  1007  000007                     ??_strncmp:
  1008  000007                     ??_Lcd_Write_String:
  1009  000007                     ?_tolower:
  1010                           	callstack 0
  1011  000007                     Lcd_Set_Cursor@y:
  1012                           	callstack 0
  1013  000007                     _isspace$2603:
  1014                           	callstack 0
  1015  000007                     ___awdiv@quotient:
  1016                           	callstack 0
  1017  000007                     strcpy@s:
  1018                           	callstack 0
  1019  000007                     tolower@c:
  1020                           	callstack 0
  1021                           
  1022                           ; 2 bytes @ 0x6
  1023  000007                     	ds	1
  1024  000008                     ?_atoi:
  1025                           	callstack 0
  1026  000008                     Lcd_Set_Cursor@temp:
  1027                           	callstack 0
  1028  000008                     atoi@s:
  1029                           	callstack 0
  1030  000008                     strncmp@l:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x7
  1034  000008                     	ds	1
  1035  000009                     ??_tolower:
  1036  000009                     ??___fleq:
  1037  000009                     Lcd_Write_String@i:
  1038                           	callstack 0
  1039  000009                     ___fpclassifyf@e:
  1040                           	callstack 0
  1041  000009                     strcpy@d:
  1042                           	callstack 0
  1043  000009                     ___lmul@product:
  1044                           	callstack 0
  1045  000009                     ___lldiv@quotient:
  1046                           	callstack 0
  1047  000009                     ___aodiv@divisor:
  1048                           	callstack 0
  1049  000009                     ___aomod@divisor:
  1050                           	callstack 0
  1051                           
  1052                           ; 8 bytes @ 0x8
  1053  000009                     	ds	1
  1054  00000A                     ??_atoi:
  1055  00000A                     fputs@s:
  1056                           	callstack 0
  1057  00000A                     strncmp@r:
  1058                           	callstack 0
  1059                           
  1060                           ; 2 bytes @ 0x9
  1061  00000A                     	ds	1
  1062  00000B                     ___fpclassifyf@u:
  1063                           	callstack 0
  1064                           
  1065                           ; 4 bytes @ 0xA
  1066  00000B                     	ds	1
  1067  00000C                     fputs@fp:
  1068                           	callstack 0
  1069                           
  1070                           ; 2 bytes @ 0xB
  1071  00000C                     	ds	1
  1072  00000D                     ___lldiv@counter:
  1073                           	callstack 0
  1074  00000D                     _tolower$2667:
  1075                           	callstack 0
  1076                           
  1077                           ; 2 bytes @ 0xC
  1078  00000D                     	ds	1
  1079  00000E                     ?___xxtofl:
  1080                           	callstack 0
  1081  00000E                     fputs@c:
  1082                           	callstack 0
  1083  00000E                     atoi@neg:
  1084                           	callstack 0
  1085  00000E                     ___xxtofl@val:
  1086                           	callstack 0
  1087                           
  1088                           ; 4 bytes @ 0xD
  1089  00000E                     	ds	1
  1090  00000F                     fputs@i:
  1091                           	callstack 0
  1092                           
  1093                           ; 2 bytes @ 0xE
  1094  00000F                     	ds	1
  1095  000010                     _atoi$2572:
  1096                           	callstack 0
  1097                           
  1098                           ; 2 bytes @ 0xF
  1099  000010                     	ds	1
  1100  000011                     ?_pad:
  1101                           	callstack 0
  1102  000011                     ___aodiv@counter:
  1103                           	callstack 0
  1104  000011                     ___aomod@counter:
  1105                           	callstack 0
  1106  000011                     pad@fp:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0x10
  1110  000011                     	ds	1
  1111  000012                     ??___xxtofl:
  1112  000012                     ___aodiv@sign:
  1113                           	callstack 0
  1114  000012                     ___aomod@sign:
  1115                           	callstack 0
  1116  000012                     _atoi$2574:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x11
  1120  000012                     	ds	1
  1121  000013                     ?_abs:
  1122                           	callstack 0
  1123  000013                     pad@buf:
  1124                           	callstack 0
  1125  000013                     abs@a:
  1126                           	callstack 0
  1127  000013                     ___aodiv@quotient:
  1128                           	callstack 0
  1129                           
  1130                           ; 8 bytes @ 0x12
  1131  000013                     	ds	1
  1132  000014                     _atoi$2573:
  1133                           	callstack 0
  1134                           
  1135                           ; 1 bytes @ 0x13
  1136  000014                     	ds	1
  1137  000015                     ??_abs:
  1138  000015                     pad@p:
  1139                           	callstack 0
  1140  000015                     atoi@n:
  1141                           	callstack 0
  1142                           
  1143                           ; 2 bytes @ 0x14
  1144  000015                     	ds	1
  1145  000016                     ___xxtofl@sign:
  1146                           	callstack 0
  1147                           
  1148                           ; 1 bytes @ 0x15
  1149  000016                     	ds	1
  1150  000017                     ??_pad:
  1151  000017                     ___xxtofl@exp:
  1152                           	callstack 0
  1153                           
  1154                           ; 1 bytes @ 0x16
  1155  000017                     	ds	1
  1156  000018                     pad@i:
  1157                           	callstack 0
  1158  000018                     ___xxtofl@arg:
  1159                           	callstack 0
  1160                           
  1161                           ; 4 bytes @ 0x17
  1162  000018                     	ds	2
  1163  00001A                     pad@w:
  1164                           	callstack 0
  1165                           
  1166                           ; 2 bytes @ 0x19
  1167  00001A                     	ds	2
  1168  00001C                     ??_calculatedAverageValue:
  1169  00001C                     ?_dtoa:
  1170                           	callstack 0
  1171  00001C                     ?_fabsf:
  1172                           	callstack 0
  1173  00001C                     ?___flmul:
  1174                           	callstack 0
  1175  00001C                     dtoa@fp:
  1176                           	callstack 0
  1177  00001C                     ___flmul@b:
  1178                           	callstack 0
  1179  00001C                     fabsf@x:
  1180                           	callstack 0
  1181                           
  1182                           ; 4 bytes @ 0x1B
  1183  00001C                     	ds	2
  1184  00001E                     dtoa@d:
  1185                           	callstack 0
  1186                           
  1187                           ; 8 bytes @ 0x1D
  1188  00001E                     	ds	2
  1189  000020                     ___flmul@a:
  1190                           	callstack 0
  1191  000020                     fabsf@u:
  1192                           	callstack 0
  1193                           
  1194                           ; 4 bytes @ 0x1F
  1195  000020                     	ds	4
  1196  000024                     ??___flmul:
  1197                           
  1198                           ; 1 bytes @ 0x23
  1199  000024                     	ds	2
  1200  000026                     ??_dtoa:
  1201                           
  1202                           ; 1 bytes @ 0x25
  1203  000026                     	ds	2
  1204  000028                     ___flmul@sign:
  1205                           	callstack 0
  1206                           
  1207                           ; 1 bytes @ 0x27
  1208  000028                     	ds	1
  1209  000029                     ___flmul@grs:
  1210                           	callstack 0
  1211                           
  1212                           ; 4 bytes @ 0x28
  1213  000029                     	ds	4
  1214  00002D                     ___flmul@aexp:
  1215                           	callstack 0
  1216                           
  1217                           ; 1 bytes @ 0x2C
  1218  00002D                     	ds	1
  1219  00002E                     ___flmul@bexp:
  1220                           	callstack 0
  1221  00002E                     _dtoa$2481:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x2D
  1225  00002E                     	ds	1
  1226  00002F                     ___flmul@prod:
  1227                           	callstack 0
  1228                           
  1229                           ; 4 bytes @ 0x2E
  1230  00002F                     	ds	1
  1231  000030                     dtoa@p:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x2F
  1235  000030                     	ds	2
  1236  000032                     dtoa@w:
  1237                           	callstack 0
  1238                           
  1239                           ; 2 bytes @ 0x31
  1240  000032                     	ds	1
  1241  000033                     ___flmul@temp:
  1242                           	callstack 0
  1243                           
  1244                           ; 2 bytes @ 0x32
  1245  000033                     	ds	1
  1246  000034                     dtoa@s:
  1247                           	callstack 0
  1248                           
  1249                           ; 2 bytes @ 0x33
  1250  000034                     	ds	1
  1251  000035                     ?___fladd:
  1252                           	callstack 0
  1253  000035                     ?___fldiv:
  1254                           	callstack 0
  1255  000035                     ___flge@ff1:
  1256                           	callstack 0
  1257  000035                     ___fladd@b:
  1258                           	callstack 0
  1259  000035                     ___fldiv@b:
  1260                           	callstack 0
  1261                           
  1262                           ; 4 bytes @ 0x34
  1263  000035                     	ds	1
  1264  000036                     dtoa@n:
  1265                           	callstack 0
  1266                           
  1267                           ; 8 bytes @ 0x35
  1268  000036                     	ds	3
  1269  000039                     ___flge@ff2:
  1270                           	callstack 0
  1271  000039                     ___fladd@a:
  1272                           	callstack 0
  1273  000039                     ___fldiv@a:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x38
  1277  000039                     	ds	4
  1278  00003D                     ??___fladd:
  1279  00003D                     ??___fldiv:
  1280  00003D                     ??___flge:
  1281                           
  1282                           ; 1 bytes @ 0x3C
  1283  00003D                     	ds	1
  1284  00003E                     dtoa@i:
  1285                           	callstack 0
  1286                           
  1287                           ; 2 bytes @ 0x3D
  1288  00003E                     	ds	3
  1289  000041                     ___fladd@signs:
  1290                           	callstack 0
  1291  000041                     ___fldiv@rem:
  1292                           	callstack 0
  1293                           
  1294                           ; 4 bytes @ 0x40
  1295  000041                     	ds	1
  1296  000042                     ___fladd@aexp:
  1297                           	callstack 0
  1298                           
  1299                           ; 1 bytes @ 0x41
  1300  000042                     	ds	1
  1301  000043                     ___fladd@bexp:
  1302                           	callstack 0
  1303                           
  1304                           ; 1 bytes @ 0x42
  1305  000043                     	ds	1
  1306  000044                     ___fladd@grs:
  1307                           	callstack 0
  1308                           
  1309                           ; 1 bytes @ 0x43
  1310  000044                     	ds	1
  1311  000045                     ?___flsub:
  1312                           	callstack 0
  1313  000045                     ___fldiv@sign:
  1314                           	callstack 0
  1315  000045                     ___flsub@b:
  1316                           	callstack 0
  1317                           
  1318                           ; 4 bytes @ 0x44
  1319  000045                     	ds	1
  1320  000046                     ___fldiv@new_exp:
  1321                           	callstack 0
  1322                           
  1323                           ; 2 bytes @ 0x45
  1324  000046                     	ds	2
  1325  000048                     ___fldiv@grs:
  1326                           	callstack 0
  1327                           
  1328                           ; 4 bytes @ 0x47
  1329  000048                     	ds	1
  1330  000049                     ___flsub@a:
  1331                           	callstack 0
  1332                           
  1333                           ; 4 bytes @ 0x48
  1334  000049                     	ds	3
  1335  00004C                     ___fldiv@bexp:
  1336                           	callstack 0
  1337                           
  1338                           ; 1 bytes @ 0x4B
  1339  00004C                     	ds	1
  1340  00004D                     ___fldiv@aexp:
  1341                           	callstack 0
  1342                           
  1343                           ; 1 bytes @ 0x4C
  1344  00004D                     	ds	1
  1345  00004E                     ?_floorf:
  1346                           	callstack 0
  1347  00004E                     ?___fltol:
  1348                           	callstack 0
  1349  00004E                     ___fltol@f1:
  1350                           	callstack 0
  1351  00004E                     floorf@x:
  1352                           	callstack 0
  1353                           
  1354                           ; 4 bytes @ 0x4D
  1355  00004E                     	ds	4
  1356  000052                     ??_floorf:
  1357  000052                     ??___fltol:
  1358                           
  1359                           ; 1 bytes @ 0x51
  1360  000052                     	ds	4
  1361  000056                     ___fltol@sign1:
  1362                           	callstack 0
  1363                           
  1364                           ; 1 bytes @ 0x55
  1365  000056                     	ds	1
  1366  000057                     ___fltol@exp1:
  1367                           	callstack 0
  1368                           
  1369                           ; 1 bytes @ 0x56
  1370  000057                     	ds	1
  1371  000058                     ??_scanAdcConversion:
  1372  000058                     ?_efgtoa:
  1373                           	callstack 0
  1374  000058                     PWM1_setDC@dutycycle:
  1375                           	callstack 0
  1376  000058                     PWM2_setDC@dutycycle:
  1377                           	callstack 0
  1378  000058                     efgtoa@fp:
  1379                           	callstack 0
  1380  000058                     speedControl@position:
  1381                           	callstack 0
  1382                           
  1383                           ; 4 bytes @ 0x57
  1384  000058                     	ds	2
  1385  00005A                     ??_PWM1_setDC:
  1386  00005A                     ??_PWM2_setDC:
  1387  00005A                     efgtoa@f:
  1388                           	callstack 0
  1389                           
  1390                           ; 4 bytes @ 0x59
  1391  00005A                     	ds	2
  1392  00005C                     ??_speedControl:
  1393  00005C                     PWM1_setDC@duty:
  1394                           	callstack 0
  1395  00005C                     PWM2_setDC@duty:
  1396                           	callstack 0
  1397                           
  1398                           ; 2 bytes @ 0x5B
  1399  00005C                     	ds	2
  1400  00005E                     efgtoa@c:
  1401                           	callstack 0
  1402                           
  1403                           ; 1 bytes @ 0x5D
  1404  00005E                     	ds	1
  1405  00005F                     
  1406                           ; 1 bytes @ 0x5E
  1407 ;;
  1408 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1409 ;;
  1410 ;; *************** function _main *****************
  1411 ;; Defined at:
  1412 ;;		line 43 in file "fs_main.c"
  1413 ;; Parameters:    Size  Location     Type
  1414 ;;		None
  1415 ;; Auto vars:     Size  Location     Type
  1416 ;;		None
  1417 ;; Return value:  Size  Location     Type
  1418 ;;                  1    wreg      void 
  1419 ;; Registers used:
  1420 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1421 ;; Tracked objects:
  1422 ;;		On entry : 0/0
  1423 ;;		On exit  : 0/0
  1424 ;;		Unchanged: 0/0
  1425 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1426 ;;      Params:         0       0       0       0       0       0       0
  1427 ;;      Locals:         0       0       0       0       0       0       0
  1428 ;;      Temps:          0       0       0       0       0       0       0
  1429 ;;      Totals:         0       0       0       0       0       0       0
  1430 ;;Total ram usage:        0 bytes
  1431 ;; Hardware stack levels required when called:   11
  1432 ;; This function calls:
  1433 ;;		_Lcd_Clear
  1434 ;;		_PWM1_setDC
  1435 ;;		_PWM2_setDC
  1436 ;;		_PWM_Init
  1437 ;;		_adcInit
  1438 ;;		_lcd_init
  1439 ;;		_mcu_init
  1440 ;;		_menuControl
  1441 ;;		_menuInitialize
  1442 ;;		_system_init
  1443 ;;		_timer_0_init
  1444 ;; This function is called by:
  1445 ;;		Startup code after reset
  1446 ;; This function uses a non-reentrant model
  1447 ;;
  1448                           
  1449                           	psect	text0
  1450  004CCE                     __ptext0:
  1451                           	callstack 0
  1452  004CCE                     _main:
  1453                           	callstack 20
  1454  004CCE                     
  1455                           ;fs_main.c: 45:     mcu_init();
  1456  004CCE  EC59  F02E         	call	_mcu_init	;wreg free
  1457  004CD2                     
  1458                           ;fs_main.c: 46:     menuInitialize();
  1459  004CD2  ECF0  F02D         	call	_menuInitialize	;wreg free
  1460  004CD6                     
  1461                           ;fs_main.c: 48:     adcInit();
  1462  004CD6  ECDD  F02C         	call	_adcInit	;wreg free
  1463  004CDA                     
  1464                           ;fs_main.c: 50:     timer_0_init();
  1465  004CDA  EC64  F02E         	call	_timer_0_init	;wreg free
  1466  004CDE                     
  1467                           ;fs_main.c: 51:     lcd_init();
  1468  004CDE  EC78  F029         	call	_lcd_init	;wreg free
  1469  004CE2                     
  1470                           ;fs_main.c: 52:     system_init();
  1471  004CE2  EC51  F024         	call	_system_init	;wreg free
  1472  004CE6                     
  1473                           ;fs_main.c: 53:     Lcd_Clear();
  1474  004CE6  EC6D  F02E         	call	_Lcd_Clear	;wreg free
  1475  004CEA                     
  1476                           ;fs_main.c: 55:     PWM_Init();
  1477  004CEA  EC04  F02E         	call	_PWM_Init	;wreg free
  1478  004CEE                     
  1479                           ;fs_main.c: 56:     PWM1_setDC(0);
  1480  004CEE  0E00               	movlw	0
  1481  004CF0  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1482  004CF2  0E00               	movlw	0
  1483  004CF4  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1484  004CF6  EC3F  F02A         	call	_PWM1_setDC	;wreg free
  1485  004CFA                     
  1486                           ;fs_main.c: 57:     PWM2_setDC(0);
  1487  004CFA  0E00               	movlw	0
  1488  004CFC  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1489  004CFE  0E00               	movlw	0
  1490  004D00  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1491  004D02  EC02  F02A         	call	_PWM2_setDC	;wreg free
  1492  004D06                     l6195:
  1493                           
  1494                           ;fs_main.c: 60: {;fs_main.c: 61:     if (timer_counter_flag.one_second_flag == 1)
  1495  004D06  0101               	movlb	1	; () banked
  1496  004D08  A1BE               	btfss	_timer_counter_flag& (0+255),0,b
  1497  004D0A  EF89  F026         	goto	u7701
  1498  004D0E  EF8B  F026         	goto	u7700
  1499  004D12                     u7701:
  1500  004D12  EFDE  F026         	goto	l6221
  1501  004D16                     u7700:
  1502  004D16                     
  1503                           ; BSR set to: 1
  1504                           ;fs_main.c: 62:     {;fs_main.c: 63:         timer_counter_flag.one_second_flag = 0;
  1505  004D16  91BE               	bcf	_timer_counter_flag& (0+255),0,b
  1506  004D18                     
  1507                           ; BSR set to: 1
  1508                           ;fs_main.c: 65:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1509  004D18  05BD               	decf	_startIsClick& (0+255),w,b
  1510  004D1A  A4D8               	btfss	status,2,c
  1511  004D1C  EF92  F026         	goto	u7711
  1512  004D20  EF94  F026         	goto	u7710
  1513  004D24                     u7711:
  1514  004D24  EFDE  F026         	goto	l6221
  1515  004D28                     u7710:
  1516  004D28                     
  1517                           ; BSR set to: 1
  1518  004D28  0100               	movlb	0	; () banked
  1519  004D2A  51FF               	movf	_pauseIsClick& (0+255),w,b
  1520  004D2C  A4D8               	btfss	status,2,c
  1521  004D2E  EF9B  F026         	goto	u7721
  1522  004D32  EF9D  F026         	goto	u7720
  1523  004D36                     u7721:
  1524  004D36  EFDE  F026         	goto	l6221
  1525  004D3A                     u7720:
  1526  004D3A                     
  1527                           ; BSR set to: 0
  1528  004D3A  0101               	movlb	1	; () banked
  1529  004D3C  51BC               	movf	_stopIsClick& (0+255),w,b
  1530  004D3E  A4D8               	btfss	status,2,c
  1531  004D40  EFA4  F026         	goto	u7731
  1532  004D44  EFA6  F026         	goto	u7730
  1533  004D48                     u7731:
  1534  004D48  EFDE  F026         	goto	l6221
  1535  004D4C                     u7730:
  1536  004D4C                     
  1537                           ; BSR set to: 1
  1538  004D4C  51BB               	movf	_menu_selected& (0+255),w,b
  1539  004D4E  A4D8               	btfss	status,2,c
  1540  004D50  EFAC  F026         	goto	u7741
  1541  004D54  EFAE  F026         	goto	u7740
  1542  004D58                     u7741:
  1543  004D58  EFDE  F026         	goto	l6221
  1544  004D5C                     u7740:
  1545  004D5C                     
  1546                           ; BSR set to: 1
  1547                           ;fs_main.c: 66:         {;fs_main.c: 67:             timer_value.second++;
  1548  004D5C  0100               	movlb	0	; () banked
  1549  004D5E  4BF3               	infsnz	_timer_value& (0+255),f,b
  1550  004D60  2BF4               	incf	(_timer_value+1)& (0+255),f,b
  1551  004D62                     
  1552                           ; BSR set to: 0
  1553                           ;fs_main.c: 68:             timer_value.remainingSecond = 60 - timer_value.second;
  1554  004D62  51F3               	movf	_timer_value& (0+255),w,b
  1555  004D64  083C               	sublw	60
  1556  004D66  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1557  004D68  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1558  004D6A  A0D8               	btfss	status,0,c
  1559  004D6C  2AE8               	incf	wreg,f,c
  1560  004D6E  0800               	sublw	0
  1561  004D70  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1562  004D72                     
  1563                           ; BSR set to: 0
  1564                           ;fs_main.c: 70:             if (timer_value.remainingSecond == 59 )
  1565  004D72  0E3B               	movlw	59
  1566  004D74  19F7               	xorwf	(_timer_value+4)& (0+255),w,b
  1567  004D76  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  1568  004D78  A4D8               	btfss	status,2,c
  1569  004D7A  EFC1  F026         	goto	u7751
  1570  004D7E  EFC3  F026         	goto	u7750
  1571  004D82                     u7751:
  1572  004D82  EFCF  F026         	goto	l6217
  1573  004D86                     u7750:
  1574  004D86                     
  1575                           ; BSR set to: 0
  1576                           ;fs_main.c: 71:             {;fs_main.c: 72:                 timer_value.minute++;
  1577  004D86  4BF5               	infsnz	(_timer_value+2)& (0+255),f,b
  1578  004D88  2BF6               	incf	(_timer_value+3)& (0+255),f,b
  1579  004D8A                     
  1580                           ; BSR set to: 0
  1581                           ;fs_main.c: 73:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1582  004D8A  51F5               	movf	(_timer_value+2)& (0+255),w,b
  1583  004D8C  0101               	movlb	1	; () banked
  1584  004D8E  5DAF               	subwf	_menu_value& (0+255),w,b
  1585  004D90  0100               	movlb	0	; () banked
  1586  004D92  6FF9               	movwf	(_timer_value+6)& (0+255),b
  1587  004D94  51F6               	movf	(_timer_value+3)& (0+255),w,b
  1588  004D96  A0D8               	btfss	status,0,c
  1589  004D98  29F6               	incf	(_timer_value+3)& (0+255),w,b
  1590  004D9A  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1591  004D9C  5FFA               	subwf	(_timer_value+7)& (0+255),f,b
  1592  004D9E                     l6217:
  1593                           
  1594                           ; BSR set to: 0
  1595                           ;fs_main.c: 76:             if (timer_value.second > 59)
  1596  004D9E  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1597  004DA0  E109               	bnz	u7760
  1598  004DA2  0E3C               	movlw	60
  1599  004DA4  5DF3               	subwf	_timer_value& (0+255),w,b
  1600  004DA6  A0D8               	btfss	status,0,c
  1601  004DA8  EFD8  F026         	goto	u7761
  1602  004DAC  EFDA  F026         	goto	u7760
  1603  004DB0                     u7761:
  1604  004DB0  EFDE  F026         	goto	l6221
  1605  004DB4                     u7760:
  1606  004DB4                     
  1607                           ; BSR set to: 0
  1608                           ;fs_main.c: 77:             {;fs_main.c: 78:                 timer_value.second = 0;
  1609  004DB4  0E00               	movlw	0
  1610  004DB6  6FF4               	movwf	(_timer_value+1)& (0+255),b
  1611  004DB8  0E00               	movlw	0
  1612  004DBA  6FF3               	movwf	_timer_value& (0+255),b
  1613  004DBC                     l6221:
  1614                           
  1615                           ;fs_main.c: 83:     menuControl();
  1616  004DBC  EC7C  F02A         	call	_menuControl	;wreg free
  1617  004DC0  EF83  F026         	goto	l6195
  1618  004DC4  EF34  F000         	goto	start
  1619  004DC8                     __end_of_main:
  1620                           	callstack 0
  1621                           
  1622 ;; *************** function _timer_0_init *****************
  1623 ;; Defined at:
  1624 ;;		line 67 in file "fs_timer.c"
  1625 ;; Parameters:    Size  Location     Type
  1626 ;;		None
  1627 ;; Auto vars:     Size  Location     Type
  1628 ;;		None
  1629 ;; Return value:  Size  Location     Type
  1630 ;;                  1    wreg      void 
  1631 ;; Registers used:
  1632 ;;		wreg, status,2
  1633 ;; Tracked objects:
  1634 ;;		On entry : 0/0
  1635 ;;		On exit  : 0/0
  1636 ;;		Unchanged: 0/0
  1637 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1638 ;;      Params:         0       0       0       0       0       0       0
  1639 ;;      Locals:         0       0       0       0       0       0       0
  1640 ;;      Temps:          0       0       0       0       0       0       0
  1641 ;;      Totals:         0       0       0       0       0       0       0
  1642 ;;Total ram usage:        0 bytes
  1643 ;; Hardware stack levels used:    1
  1644 ;; Hardware stack levels required when called:    1
  1645 ;; This function calls:
  1646 ;;		Nothing
  1647 ;; This function is called by:
  1648 ;;		_main
  1649 ;; This function uses a non-reentrant model
  1650 ;;
  1651                           
  1652                           	psect	text1
  1653  005CC8                     __ptext1:
  1654                           	callstack 0
  1655  005CC8                     _timer_0_init:
  1656                           	callstack 29
  1657  005CC8                     
  1658                           ;fs_timer.c: 69:   T0CON = 0x81;
  1659  005CC8  0E81               	movlw	129
  1660  005CCA  6ED5               	movwf	213,c	;volatile
  1661                           
  1662                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1663  005CCC  0E63               	movlw	99
  1664  005CCE  6ED7               	movwf	215,c	;volatile
  1665                           
  1666                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1667  005CD0  0EC0               	movlw	192
  1668  005CD2  6ED6               	movwf	214,c	;volatile
  1669  005CD4                     
  1670                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1671  005CD4  8EF2               	bsf	242,7,c	;volatile
  1672  005CD6                     
  1673                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1674  005CD6  8AF2               	bsf	242,5,c	;volatile
  1675  005CD8  0012               	return		;funcret
  1676  005CDA                     __end_of_timer_0_init:
  1677                           	callstack 0
  1678                           
  1679 ;; *************** function _system_init *****************
  1680 ;; Defined at:
  1681 ;;		line 56 in file "fs_mcu.c"
  1682 ;; Parameters:    Size  Location     Type
  1683 ;;		None
  1684 ;; Auto vars:     Size  Location     Type
  1685 ;;		None
  1686 ;; Return value:  Size  Location     Type
  1687 ;;                  1    wreg      void 
  1688 ;; Registers used:
  1689 ;;		wreg, status,2, cstack
  1690 ;; Tracked objects:
  1691 ;;		On entry : 0/0
  1692 ;;		On exit  : 0/0
  1693 ;;		Unchanged: 0/0
  1694 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1695 ;;      Params:         0       0       0       0       0       0       0
  1696 ;;      Locals:         0       0       0       0       0       0       0
  1697 ;;      Temps:          2       0       0       0       0       0       0
  1698 ;;      Totals:         2       0       0       0       0       0       0
  1699 ;;Total ram usage:        2 bytes
  1700 ;; Hardware stack levels used:    1
  1701 ;; Hardware stack levels required when called:    2
  1702 ;; This function calls:
  1703 ;;		_eepromRead
  1704 ;; This function is called by:
  1705 ;;		_main
  1706 ;; This function uses a non-reentrant model
  1707 ;;
  1708                           
  1709                           	psect	text2
  1710  0048A2                     __ptext2:
  1711                           	callstack 0
  1712  0048A2                     _system_init:
  1713                           	callstack 28
  1714  0048A2                     
  1715                           ;fs_mcu.c: 58:     driver_limit.pay = 0;
  1716  0048A2  0E00               	movlw	0
  1717  0048A4  0101               	movlb	1	; () banked
  1718  0048A6  6F93               	movwf	_driver_limit& (0+255),b
  1719  0048A8  0E00               	movlw	0
  1720  0048AA  6F94               	movwf	(_driver_limit+1)& (0+255),b
  1721  0048AC  0E00               	movlw	0
  1722  0048AE  6F95               	movwf	(_driver_limit+2)& (0+255),b
  1723  0048B0  0E00               	movlw	0
  1724  0048B2  6F96               	movwf	(_driver_limit+3)& (0+255),b
  1725                           
  1726                           ;fs_mcu.c: 59:     driver_limit.payda = 0;
  1727  0048B4  0E00               	movlw	0
  1728  0048B6  6F97               	movwf	(_driver_limit+4)& (0+255),b
  1729  0048B8  0E00               	movlw	0
  1730  0048BA  6F98               	movwf	(_driver_limit+5)& (0+255),b
  1731  0048BC  0E00               	movlw	0
  1732  0048BE  6F99               	movwf	(_driver_limit+6)& (0+255),b
  1733  0048C0  0E00               	movlw	0
  1734  0048C2  6F9A               	movwf	(_driver_limit+7)& (0+255),b
  1735                           
  1736                           ;fs_mcu.c: 60:     driver_limit.ortalama = 0;
  1737  0048C4  0E00               	movlw	0
  1738  0048C6  6F9B               	movwf	(_driver_limit+8)& (0+255),b
  1739  0048C8  0E00               	movlw	0
  1740  0048CA  6F9C               	movwf	(_driver_limit+9)& (0+255),b
  1741  0048CC  0E00               	movlw	0
  1742  0048CE  6F9D               	movwf	(_driver_limit+10)& (0+255),b
  1743  0048D0  0E00               	movlw	0
  1744  0048D2  6F9E               	movwf	(_driver_limit+11)& (0+255),b
  1745                           
  1746                           ;fs_mcu.c: 61:     convert_data.convert_channel_0 = 0;
  1747  0048D4  0E00               	movlw	0
  1748  0048D6  6F00               	movwf	_convert_data& (0+255),b
  1749  0048D8  0E00               	movlw	0
  1750  0048DA  6F01               	movwf	(_convert_data+1)& (0+255),b
  1751  0048DC  0E00               	movlw	0
  1752  0048DE  6F02               	movwf	(_convert_data+2)& (0+255),b
  1753  0048E0  0E00               	movlw	0
  1754  0048E2  6F03               	movwf	(_convert_data+3)& (0+255),b
  1755                           
  1756                           ;fs_mcu.c: 62:     convert_data.convert_channel_1 = 0;
  1757  0048E4  0E00               	movlw	0
  1758  0048E6  6F04               	movwf	(_convert_data+4)& (0+255),b
  1759  0048E8  0E00               	movlw	0
  1760  0048EA  6F05               	movwf	(_convert_data+5)& (0+255),b
  1761  0048EC  0E00               	movlw	0
  1762  0048EE  6F06               	movwf	(_convert_data+6)& (0+255),b
  1763  0048F0  0E00               	movlw	0
  1764  0048F2  6F07               	movwf	(_convert_data+7)& (0+255),b
  1765                           
  1766                           ;fs_mcu.c: 63:     convert_data.convert_channel_2 = 0;
  1767  0048F4  0E00               	movlw	0
  1768  0048F6  6F08               	movwf	(_convert_data+8)& (0+255),b
  1769  0048F8  0E00               	movlw	0
  1770  0048FA  6F09               	movwf	(_convert_data+9)& (0+255),b
  1771  0048FC  0E00               	movlw	0
  1772  0048FE  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1773  004900  0E00               	movlw	0
  1774  004902  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1775                           
  1776                           ;fs_mcu.c: 64:     convert_data.convert_channel_3 = 0;
  1777  004904  0E00               	movlw	0
  1778  004906  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1779  004908  0E00               	movlw	0
  1780  00490A  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1781  00490C  0E00               	movlw	0
  1782  00490E  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1783  004910  0E00               	movlw	0
  1784  004912  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1785                           
  1786                           ;fs_mcu.c: 65:     convert_data.convert_channel_4 = 0;
  1787  004914  0E00               	movlw	0
  1788  004916  6F10               	movwf	(_convert_data+16)& (0+255),b
  1789  004918  0E00               	movlw	0
  1790  00491A  6F11               	movwf	(_convert_data+17)& (0+255),b
  1791  00491C  0E00               	movlw	0
  1792  00491E  6F12               	movwf	(_convert_data+18)& (0+255),b
  1793  004920  0E00               	movlw	0
  1794  004922  6F13               	movwf	(_convert_data+19)& (0+255),b
  1795                           
  1796                           ;fs_mcu.c: 66:     convert_data.convert_channel_5 = 0;
  1797  004924  0E00               	movlw	0
  1798  004926  6F14               	movwf	(_convert_data+20)& (0+255),b
  1799  004928  0E00               	movlw	0
  1800  00492A  6F15               	movwf	(_convert_data+21)& (0+255),b
  1801  00492C  0E00               	movlw	0
  1802  00492E  6F16               	movwf	(_convert_data+22)& (0+255),b
  1803  004930  0E00               	movlw	0
  1804  004932  6F17               	movwf	(_convert_data+23)& (0+255),b
  1805                           
  1806                           ;fs_mcu.c: 67:     convert_data.convert_channel_6 = 0;
  1807  004934  0E00               	movlw	0
  1808  004936  6F18               	movwf	(_convert_data+24)& (0+255),b
  1809  004938  0E00               	movlw	0
  1810  00493A  6F19               	movwf	(_convert_data+25)& (0+255),b
  1811  00493C  0E00               	movlw	0
  1812  00493E  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1813  004940  0E00               	movlw	0
  1814  004942  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1815                           
  1816                           ;fs_mcu.c: 68:     convert_data.convert_channel_7 = 0;
  1817  004944  0E00               	movlw	0
  1818  004946  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1819  004948  0E00               	movlw	0
  1820  00494A  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1821  00494C  0E00               	movlw	0
  1822  00494E  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1823  004950  0E00               	movlw	0
  1824  004952  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1825                           
  1826                           ;fs_mcu.c: 69:     controller.leftMotorSpeed = 0;
  1827  004954  0E00               	movlw	0
  1828  004956  6F57               	movwf	(_controller+7)& (0+255),b
  1829  004958  0E00               	movlw	0
  1830  00495A  6F56               	movwf	(_controller+6)& (0+255),b
  1831                           
  1832                           ;fs_mcu.c: 70:     controller.rightMotorSpeed = 0;
  1833  00495C  0E00               	movlw	0
  1834  00495E  6F59               	movwf	(_controller+9)& (0+255),b
  1835  004960  0E00               	movlw	0
  1836  004962  6F58               	movwf	(_controller+8)& (0+255),b
  1837                           
  1838                           ;fs_mcu.c: 71:     timer_value.timer_0_counter = 0;
  1839  004964  0E00               	movlw	0
  1840  004966  0100               	movlb	0	; () banked
  1841  004968  6FFC               	movwf	(_timer_value+9)& (0+255),b
  1842                           
  1843                           ;fs_mcu.c: 72:     controller.error = 0;
  1844  00496A  0E00               	movlw	0
  1845  00496C  0101               	movlb	1	; () banked
  1846  00496E  6F51               	movwf	(_controller+1)& (0+255),b
  1847  004970  0E00               	movlw	0
  1848  004972  6F50               	movwf	_controller& (0+255),b
  1849  004974                     
  1850                           ; BSR set to: 1
  1851                           ;fs_mcu.c: 74:     button_bounce_controller.menu = 0;
  1852  004974  0100               	movlb	0	; () banked
  1853  004976  91FE               	bcf	_button_bounce_controller& (0+255),0,b
  1854  004978                     
  1855                           ; BSR set to: 0
  1856                           ;fs_mcu.c: 75:     button_bounce_controller.pause = 0;
  1857  004978  97FE               	bcf	_button_bounce_controller& (0+255),3,b
  1858  00497A                     
  1859                           ; BSR set to: 0
  1860                           ;fs_mcu.c: 76:     button_bounce_controller.start = 0;
  1861  00497A  93FE               	bcf	_button_bounce_controller& (0+255),1,b
  1862  00497C                     
  1863                           ; BSR set to: 0
  1864                           ;fs_mcu.c: 77:     button_bounce_controller.stop = 0;
  1865  00497C  95FE               	bcf	_button_bounce_controller& (0+255),2,b
  1866  00497E                     
  1867                           ; BSR set to: 0
  1868                           ;fs_mcu.c: 78:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1869  00497E  0E00               	movlw	0
  1870  004980  EC3B  F02E         	call	_eepromRead
  1871  004984  0101               	movlb	1	; () banked
  1872  004986  6FAF               	movwf	_menu_value& (0+255),b
  1873  004988                     
  1874                           ; BSR set to: 1
  1875                           ;fs_mcu.c: 79:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1876  004988  0E01               	movlw	1
  1877  00498A  EC3B  F02E         	call	_eepromRead
  1878  00498E  0101               	movlb	1	; () banked
  1879  004990  6FB0               	movwf	(_menu_value+1)& (0+255),b
  1880  004992                     
  1881                           ; BSR set to: 1
  1882                           ;fs_mcu.c: 80:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1883  004992  0E02               	movlw	2
  1884  004994  EC3B  F02E         	call	_eepromRead
  1885  004998  0101               	movlb	1	; () banked
  1886  00499A  6FB1               	movwf	(_menu_value+2)& (0+255),b
  1887  00499C                     
  1888                           ; BSR set to: 1
  1889                           ;fs_mcu.c: 82:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1890  00499C  0E39               	movlw	57
  1891  00499E  6E03               	movwf	(??_system_init+1)^0,c
  1892  0049A0  0ED2               	movlw	210
  1893  0049A2  6E02               	movwf	??_system_init^0,c
  1894  0049A4  0E4C               	movlw	76
  1895  0049A6                     u7817:
  1896  0049A6  2EE8               	decfsz	wreg,f,c
  1897  0049A8  D7FE               	bra	u7817
  1898  0049AA  2E02               	decfsz	??_system_init^0,f,c
  1899  0049AC  D7FC               	bra	u7817
  1900  0049AE  2E03               	decfsz	(??_system_init+1)^0,f,c
  1901  0049B0  D7FA               	bra	u7817
  1902  0049B2  D000               	nop2	
  1903  0049B4                     
  1904                           ;fs_mcu.c: 83:     timer_value.remainingMinute = menu_value.driver_time;
  1905  0049B4  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  1906  0049B8  0100               	movlb	0	; () banked
  1907  0049BA  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1908  0049BC                     
  1909                           ; BSR set to: 0
  1910                           ;fs_mcu.c: 84:     timer_value.remainingSecond = 0;
  1911  0049BC  0E00               	movlw	0
  1912  0049BE  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1913  0049C0  0E00               	movlw	0
  1914  0049C2  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1915  0049C4                     
  1916                           ; BSR set to: 0
  1917  0049C4  0012               	return		;funcret
  1918  0049C6                     __end_of_system_init:
  1919                           	callstack 0
  1920                           
  1921 ;; *************** function _eepromRead *****************
  1922 ;; Defined at:
  1923 ;;		line 36 in file "fs_eeprom.c"
  1924 ;; Parameters:    Size  Location     Type
  1925 ;;  address         1    wreg     unsigned char 
  1926 ;; Auto vars:     Size  Location     Type
  1927 ;;  address         1    0[COMRAM] unsigned char 
  1928 ;; Return value:  Size  Location     Type
  1929 ;;                  1    wreg      unsigned char 
  1930 ;; Registers used:
  1931 ;;		wreg, status,2
  1932 ;; Tracked objects:
  1933 ;;		On entry : 0/0
  1934 ;;		On exit  : 0/0
  1935 ;;		Unchanged: 0/0
  1936 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1937 ;;      Params:         0       0       0       0       0       0       0
  1938 ;;      Locals:         1       0       0       0       0       0       0
  1939 ;;      Temps:          0       0       0       0       0       0       0
  1940 ;;      Totals:         1       0       0       0       0       0       0
  1941 ;;Total ram usage:        1 bytes
  1942 ;; Hardware stack levels used:    1
  1943 ;; Hardware stack levels required when called:    1
  1944 ;; This function calls:
  1945 ;;		Nothing
  1946 ;; This function is called by:
  1947 ;;		_system_init
  1948 ;; This function uses a non-reentrant model
  1949 ;;
  1950                           
  1951                           	psect	text3
  1952  005C76                     __ptext3:
  1953                           	callstack 0
  1954  005C76                     _eepromRead:
  1955                           	callstack 28
  1956                           
  1957                           ; BSR set to: 0
  1958                           ;incstack = 0
  1959                           ;eepromRead@address stored from wreg
  1960  005C76  6E01               	movwf	eepromRead@address^0,c
  1961  005C78                     
  1962                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1963  005C78  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1964  005C7C                     
  1965                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1966  005C7C  9EA6               	bcf	166,7,c	;volsfr
  1967  005C7E                     
  1968                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1969  005C7E  9CA6               	bcf	166,6,c	;volsfr
  1970  005C80                     
  1971                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1972  005C80  80A6               	bsf	166,0,c	;volsfr
  1973  005C82                     l70:
  1974  005C82  B0A6               	btfsc	166,0,c	;volsfr
  1975  005C84  EF46  F02E         	goto	u6851
  1976  005C88  EF48  F02E         	goto	u6850
  1977  005C8C                     u6851:
  1978  005C8C  EF41  F02E         	goto	l70
  1979  005C90                     u6850:
  1980  005C90                     
  1981                           ;fs_eeprom.c: 51:     return EEDATA;
  1982  005C90  50A8               	movf	168,w,c	;volatile
  1983  005C92  0012               	return		;funcret
  1984  005C94                     __end_of_eepromRead:
  1985                           	callstack 0
  1986                           
  1987 ;; *************** function _menuInitialize *****************
  1988 ;; Defined at:
  1989 ;;		line 38 in file "fs_menu_controller.c"
  1990 ;; Parameters:    Size  Location     Type
  1991 ;;		None
  1992 ;; Auto vars:     Size  Location     Type
  1993 ;;		None
  1994 ;; Return value:  Size  Location     Type
  1995 ;;                  1    wreg      void 
  1996 ;; Registers used:
  1997 ;;		None
  1998 ;; Tracked objects:
  1999 ;;		On entry : 0/0
  2000 ;;		On exit  : 0/0
  2001 ;;		Unchanged: 0/0
  2002 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2003 ;;      Params:         0       0       0       0       0       0       0
  2004 ;;      Locals:         0       0       0       0       0       0       0
  2005 ;;      Temps:          0       0       0       0       0       0       0
  2006 ;;      Totals:         0       0       0       0       0       0       0
  2007 ;;Total ram usage:        0 bytes
  2008 ;; Hardware stack levels used:    1
  2009 ;; Hardware stack levels required when called:    1
  2010 ;; This function calls:
  2011 ;;		Nothing
  2012 ;; This function is called by:
  2013 ;;		_main
  2014 ;; This function uses a non-reentrant model
  2015 ;;
  2016                           
  2017                           	psect	text4
  2018  005BE0                     __ptext4:
  2019                           	callstack 0
  2020  005BE0                     _menuInitialize:
  2021                           	callstack 29
  2022  005BE0                     
  2023                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  2024  005BE0  8C93               	bsf	147,6,c	;volatile
  2025                           
  2026                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  2027  005BE2  8E93               	bsf	147,7,c	;volatile
  2028                           
  2029                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2030  005BE4  010F               	movlb	15	; () banked
  2031  005BE6  993B               	bcf	59,4,b	;volatile
  2032                           
  2033                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2034  005BE8  8895               	bsf	149,4,c	;volatile
  2035                           
  2036                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2037  005BEA  913B               	bcf	59,0,b	;volatile
  2038                           
  2039                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2040  005BEC  8095               	bsf	149,0,c	;volatile
  2041                           
  2042                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2043  005BEE  933B               	bcf	59,1,b	;volatile
  2044                           
  2045                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2046  005BF0  8295               	bsf	149,1,c	;volatile
  2047                           
  2048                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2049  005BF2  953B               	bcf	59,2,b	;volatile
  2050                           
  2051                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2052  005BF4  8495               	bsf	149,2,c	;volatile
  2053                           
  2054                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2055  005BF6  973B               	bcf	59,3,b	;volatile
  2056                           
  2057                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2058  005BF8  8695               	bsf	149,3,c	;volatile
  2059                           
  2060                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2061  005BFA  9B3B               	bcf	59,5,b	;volatile
  2062                           
  2063                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2064  005BFC  9A95               	bcf	149,5,c	;volatile
  2065                           
  2066                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2067  005BFE  9B3A               	bcf	58,5,b	;volatile
  2068                           
  2069                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2070  005C00  9A94               	bcf	148,5,c	;volatile
  2071                           
  2072                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2073  005C02  993A               	bcf	58,4,b	;volatile
  2074                           
  2075                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2076  005C04  9894               	bcf	148,4,c	;volatile
  2077  005C06                     
  2078                           ; BSR set to: 15
  2079  005C06  0012               	return		;funcret
  2080  005C08                     __end_of_menuInitialize:
  2081                           	callstack 0
  2082                           
  2083 ;; *************** function _menuControl *****************
  2084 ;; Defined at:
  2085 ;;		line 162 in file "fs_menu_controller.c"
  2086 ;; Parameters:    Size  Location     Type
  2087 ;;		None
  2088 ;; Auto vars:     Size  Location     Type
  2089 ;;		None
  2090 ;; Return value:  Size  Location     Type
  2091 ;;                  1    wreg      void 
  2092 ;; Registers used:
  2093 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2094 ;; Tracked objects:
  2095 ;;		On entry : 0/0
  2096 ;;		On exit  : 0/0
  2097 ;;		Unchanged: 0/0
  2098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2099 ;;      Params:         0       0       0       0       0       0       0
  2100 ;;      Locals:         0       0       0       0       0       0       0
  2101 ;;      Temps:          0       0       0       0       0       0       0
  2102 ;;      Totals:         0       0       0       0       0       0       0
  2103 ;;Total ram usage:        0 bytes
  2104 ;; Hardware stack levels used:    1
  2105 ;; Hardware stack levels required when called:   10
  2106 ;; This function calls:
  2107 ;;		_buttonControlFlags
  2108 ;;		_stateMachine
  2109 ;; This function is called by:
  2110 ;;		_main
  2111 ;; This function uses a non-reentrant model
  2112 ;;
  2113                           
  2114                           	psect	text5
  2115  0054F8                     __ptext5:
  2116                           	callstack 0
  2117  0054F8                     _menuControl:
  2118                           	callstack 20
  2119  0054F8                     
  2120                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2121  0054F8  ECDD  F022         	call	_buttonControlFlags	;wreg free
  2122  0054FC                     
  2123                           ;fs_menu_controller.c: 165:     stateMachine();
  2124  0054FC  EC4F  F009         	call	_stateMachine	;wreg free
  2125  005500                     
  2126                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2127  005500  0100               	movlb	0	; () banked
  2128  005502  A3FD               	btfss	_menu_flags& (0+255),1,b
  2129  005504  EF86  F02A         	goto	u7671
  2130  005508  EF88  F02A         	goto	u7670
  2131  00550C                     u7671:
  2132  00550C  EF92  F02A         	goto	l6159
  2133  005510                     u7670:
  2134  005510                     
  2135                           ; BSR set to: 0
  2136                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2137  005510  93FD               	bcf	_menu_flags& (0+255),1,b
  2138  005512                     
  2139                           ; BSR set to: 0
  2140                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2141  005512  0E01               	movlw	1
  2142  005514  0101               	movlb	1	; () banked
  2143  005516  6FBD               	movwf	_startIsClick& (0+255),b
  2144                           
  2145                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2146  005518  0E00               	movlw	0
  2147  00551A  0100               	movlb	0	; () banked
  2148  00551C  6FFF               	movwf	_pauseIsClick& (0+255),b
  2149                           
  2150                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2151  00551E  0E00               	movlw	0
  2152  005520  0101               	movlb	1	; () banked
  2153  005522  6FBC               	movwf	_stopIsClick& (0+255),b
  2154  005524                     l6159:
  2155                           
  2156                           ;fs_menu_controller.c: 176:     if (menu_flags.menu_pause_flag == 1)
  2157  005524  0100               	movlb	0	; () banked
  2158  005526  A7FD               	btfss	_menu_flags& (0+255),3,b
  2159  005528  EF98  F02A         	goto	u7681
  2160  00552C  EF9A  F02A         	goto	u7680
  2161  005530                     u7681:
  2162  005530  EFA2  F02A         	goto	l6165
  2163  005534                     u7680:
  2164  005534                     
  2165                           ; BSR set to: 0
  2166                           ;fs_menu_controller.c: 177:     {;fs_menu_controller.c: 178:         menu_flags.menu_pau
      +                          se_flag = 0;
  2167  005534  97FD               	bcf	_menu_flags& (0+255),3,b
  2168  005536                     
  2169                           ; BSR set to: 0
  2170                           ;fs_menu_controller.c: 179:         pauseIsClick = 1;
  2171  005536  0E01               	movlw	1
  2172  005538  6FFF               	movwf	_pauseIsClick& (0+255),b
  2173                           
  2174                           ;fs_menu_controller.c: 180:         startIsClick = 0;
  2175  00553A  0E00               	movlw	0
  2176  00553C  0101               	movlb	1	; () banked
  2177  00553E  6FBD               	movwf	_startIsClick& (0+255),b
  2178                           
  2179                           ;fs_menu_controller.c: 181:         stopIsClick = 0;
  2180  005540  0E00               	movlw	0
  2181  005542  6FBC               	movwf	_stopIsClick& (0+255),b
  2182  005544                     l6165:
  2183                           
  2184                           ;fs_menu_controller.c: 184:     if (menu_flags.menu_stop_flag == 1)
  2185  005544  0100               	movlb	0	; () banked
  2186  005546  A5FD               	btfss	_menu_flags& (0+255),2,b
  2187  005548  EFA8  F02A         	goto	u7691
  2188  00554C  EFAA  F02A         	goto	u7690
  2189  005550                     u7691:
  2190  005550  EFB2  F02A         	goto	l333
  2191  005554                     u7690:
  2192  005554                     
  2193                           ; BSR set to: 0
  2194                           ;fs_menu_controller.c: 185:     {;fs_menu_controller.c: 186:         menu_flags.menu_sto
      +                          p_flag = 0;
  2195  005554  95FD               	bcf	_menu_flags& (0+255),2,b
  2196  005556                     
  2197                           ; BSR set to: 0
  2198                           ;fs_menu_controller.c: 187:         pauseIsClick = 0;
  2199  005556  0E00               	movlw	0
  2200  005558  6FFF               	movwf	_pauseIsClick& (0+255),b
  2201                           
  2202                           ;fs_menu_controller.c: 188:         startIsClick = 0;
  2203  00555A  0E00               	movlw	0
  2204  00555C  0101               	movlb	1	; () banked
  2205  00555E  6FBD               	movwf	_startIsClick& (0+255),b
  2206                           
  2207                           ;fs_menu_controller.c: 189:         stopIsClick = 1;
  2208  005560  0E01               	movlw	1
  2209  005562  6FBC               	movwf	_stopIsClick& (0+255),b
  2210  005564                     l333:
  2211  005564  0012               	return		;funcret
  2212  005566                     __end_of_menuControl:
  2213                           	callstack 0
  2214                           
  2215 ;; *************** function _stateMachine *****************
  2216 ;; Defined at:
  2217 ;;		line 200 in file "fs_menu_controller.c"
  2218 ;; Parameters:    Size  Location     Type
  2219 ;;		None
  2220 ;; Auto vars:     Size  Location     Type
  2221 ;;  textCursor2    16  131[BANK0 ] unsigned char [16]
  2222 ;; Return value:  Size  Location     Type
  2223 ;;                  1    wreg      void 
  2224 ;; Registers used:
  2225 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2226 ;; Tracked objects:
  2227 ;;		On entry : 0/0
  2228 ;;		On exit  : 0/0
  2229 ;;		Unchanged: 0/0
  2230 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2231 ;;      Params:         0       0       0       0       0       0       0
  2232 ;;      Locals:         0      16       0       0       0       0       0
  2233 ;;      Temps:          0       2       0       0       0       0       0
  2234 ;;      Totals:         0      18       0       0       0       0       0
  2235 ;;Total ram usage:       18 bytes
  2236 ;; Hardware stack levels used:    1
  2237 ;; Hardware stack levels required when called:    9
  2238 ;; This function calls:
  2239 ;;		_Lcd_Set_Cursor
  2240 ;;		_Lcd_Write_String
  2241 ;;		___fladd
  2242 ;;		___flge
  2243 ;;		___flsub
  2244 ;;		_eepromWrite
  2245 ;;		_sprintf
  2246 ;;		_startMotor
  2247 ;;		_stopMotor
  2248 ;; This function is called by:
  2249 ;;		_menuControl
  2250 ;; This function uses a non-reentrant model
  2251 ;;
  2252                           
  2253                           	psect	text6
  2254  00129E                     __ptext6:
  2255                           	callstack 0
  2256  00129E                     _stateMachine:
  2257                           	callstack 20
  2258  00129E                     
  2259                           ;fs_menu_controller.c: 202:     char textCursor2[16] = {0};
  2260  00129E  EE20  F0E3         	lfsr	2,stateMachine@textCursor2
  2261  0012A2  0E0F               	movlw	15
  2262  0012A4                     u7101:
  2263  0012A4  6ADE               	clrf	postinc2,c
  2264  0012A6  06E8               	decf	wreg,f,c
  2265  0012A8  E2FD               	bc	u7101
  2266                           
  2267                           ;fs_menu_controller.c: 203:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 205:     switch (menu_selected)
  2268  0012AA  EF14  F00E         	goto	l6065
  2269  0012AE                     l5721:
  2270                           
  2271                           ; BSR set to: 0
  2272                           ;fs_menu_controller.c: 209:             Lcd_Set_Cursor(1,1);
  2273  0012AE  0E01               	movlw	1
  2274  0012B0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2275  0012B2  0E01               	movlw	1
  2276  0012B4  EC1D  F02B         	call	_Lcd_Set_Cursor
  2277  0012B8                     
  2278                           ;fs_menu_controller.c: 210:             Lcd_Write_String("KALAN ZAMAN     ");
  2279  0012B8  0E35               	movlw	low STR_1
  2280  0012BA  6E05               	movwf	Lcd_Write_String@a^0,c
  2281  0012BC  0E06               	movlw	high STR_1
  2282  0012BE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2283  0012C0  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2284  0012C4                     
  2285                           ;fs_menu_controller.c: 211:             Lcd_Set_Cursor(2,1);
  2286  0012C4  0E01               	movlw	1
  2287  0012C6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2288  0012C8  0E02               	movlw	2
  2289  0012CA  EC1D  F02B         	call	_Lcd_Set_Cursor
  2290  0012CE                     
  2291                           ;fs_menu_controller.c: 212:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2292  0012CE  0EE3               	movlw	low stateMachine@textCursor2
  2293  0012D0  0100               	movlb	0	; () banked
  2294  0012D2  6FCF               	movwf	sprintf@s& (0+255),b
  2295  0012D4  0E00               	movlw	high stateMachine@textCursor2
  2296  0012D6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2297  0012D8  0E9A               	movlw	low STR_2
  2298  0012DA  6FD1               	movwf	sprintf@fmt& (0+255),b
  2299  0012DC  0E06               	movlw	high STR_2
  2300  0012DE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2301  0012E0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  2302  0012E4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  2303  0012E8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  2304  0012EC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  2305  0012F0  EC05  F02C         	call	_sprintf	;wreg free
  2306  0012F4                     
  2307                           ;fs_menu_controller.c: 213:             Lcd_Write_String(textCursor2);
  2308  0012F4  0EE3               	movlw	low stateMachine@textCursor2
  2309  0012F6  6E05               	movwf	Lcd_Write_String@a^0,c
  2310  0012F8  0E00               	movlw	high stateMachine@textCursor2
  2311  0012FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2312  0012FC  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2313  001300                     
  2314                           ;fs_menu_controller.c: 215:             if ( timer_value.menu_login_delay == 100)
  2315  001300  0E64               	movlw	100
  2316  001302  0100               	movlb	0	; () banked
  2317  001304  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2318  001306  A4D8               	btfss	status,2,c
  2319  001308  EF88  F009         	goto	u7111
  2320  00130C  EF8A  F009         	goto	u7110
  2321  001310                     u7111:
  2322  001310  EF8F  F009         	goto	l5735
  2323  001314                     u7110:
  2324  001314                     
  2325                           ; BSR set to: 0
  2326                           ;fs_menu_controller.c: 216:             {;fs_menu_controller.c: 217:                 tim
      +                          er_value.menu_login_delay = 0;
  2327  001314  0E00               	movlw	0
  2328  001316  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2329                           
  2330                           ;fs_menu_controller.c: 218:                 menu_selected = DRIVER_TIME_SETTING;
  2331  001318  0E01               	movlw	1
  2332  00131A  0101               	movlb	1	; () banked
  2333  00131C  6FBB               	movwf	_menu_selected& (0+255),b
  2334  00131E                     l5735:
  2335                           
  2336                           ;fs_menu_controller.c: 221:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2337  00131E  0100               	movlb	0	; () banked
  2338  001320  BFFA               	btfsc	(_timer_value+7)& (0+255),7,b
  2339  001322  EF9D  F009         	goto	u7120
  2340  001326  51FA               	movf	(_timer_value+7)& (0+255),w,b
  2341  001328  E106               	bnz	u7121
  2342  00132A  05F9               	decf	(_timer_value+6)& (0+255),w,b
  2343  00132C  B0D8               	btfsc	status,0,c
  2344  00132E  EF9B  F009         	goto	u7121
  2345  001332  EF9D  F009         	goto	u7120
  2346  001336                     u7121:
  2347  001336  EFAE  F009         	goto	l343
  2348  00133A                     u7120:
  2349  00133A                     
  2350                           ; BSR set to: 0
  2351  00133A  51F7               	movf	(_timer_value+4)& (0+255),w,b
  2352  00133C  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  2353  00133E  A4D8               	btfss	status,2,c
  2354  001340  EFA4  F009         	goto	u7131
  2355  001344  EFA6  F009         	goto	u7130
  2356  001348                     u7131:
  2357  001348  EFAE  F009         	goto	l343
  2358  00134C                     u7130:
  2359  00134C                     
  2360                           ; BSR set to: 0
  2361                           ;fs_menu_controller.c: 222:             {;fs_menu_controller.c: 223:                 men
      +                          u_selected = STOP_MENU;
  2362  00134C  0E04               	movlw	4
  2363  00134E  0101               	movlb	1	; () banked
  2364  001350  6FBB               	movwf	_menu_selected& (0+255),b
  2365                           
  2366                           ;fs_menu_controller.c: 224:                 timer_value.minute = 0;
  2367  001352  0E00               	movlw	0
  2368  001354  0100               	movlb	0	; () banked
  2369  001356  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2370  001358  0E00               	movlw	0
  2371  00135A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2372  00135C                     l343:
  2373                           
  2374                           ; BSR set to: 0
  2375                           ;fs_menu_controller.c: 227:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2376  00135C  0101               	movlb	1	; () banked
  2377  00135E  51BD               	movf	_startIsClick& (0+255),w,b
  2378  001360  A4D8               	btfss	status,2,c
  2379  001362  EFB5  F009         	goto	u7141
  2380  001366  EFB7  F009         	goto	u7140
  2381  00136A                     u7141:
  2382  00136A  EFD6  F009         	goto	l344
  2383  00136E                     u7140:
  2384  00136E                     
  2385                           ; BSR set to: 1
  2386  00136E  0100               	movlb	0	; () banked
  2387  001370  05FF               	decf	_pauseIsClick& (0+255),w,b
  2388  001372  A4D8               	btfss	status,2,c
  2389  001374  EFBE  F009         	goto	u7151
  2390  001378  EFC0  F009         	goto	u7150
  2391  00137C                     u7151:
  2392  00137C  EFD6  F009         	goto	l344
  2393  001380                     u7150:
  2394  001380                     
  2395                           ; BSR set to: 0
  2396  001380  0101               	movlb	1	; () banked
  2397  001382  51BC               	movf	_stopIsClick& (0+255),w,b
  2398  001384  A4D8               	btfss	status,2,c
  2399  001386  EFC7  F009         	goto	u7161
  2400  00138A  EFC9  F009         	goto	u7160
  2401  00138E                     u7161:
  2402  00138E  EFD6  F009         	goto	l344
  2403  001392                     u7160:
  2404  001392                     
  2405                           ; BSR set to: 1
  2406  001392  51BB               	movf	_menu_selected& (0+255),w,b
  2407  001394  A4D8               	btfss	status,2,c
  2408  001396  EFCF  F009         	goto	u7171
  2409  00139A  EFD1  F009         	goto	u7170
  2410  00139E                     u7171:
  2411  00139E  EFD6  F009         	goto	l344
  2412  0013A2                     u7170:
  2413  0013A2                     
  2414                           ; BSR set to: 1
  2415                           ;fs_menu_controller.c: 228:             {;fs_menu_controller.c: 229:                 men
      +                          u_selected = PAUSE_MENU;
  2416  0013A2  0E06               	movlw	6
  2417  0013A4  6FBB               	movwf	_menu_selected& (0+255),b
  2418  0013A6                     
  2419                           ; BSR set to: 1
  2420                           ;fs_menu_controller.c: 230:                 LATDbits.LATD5 = 0;
  2421  0013A6  9A8C               	bcf	140,5,c	;volatile
  2422  0013A8                     
  2423                           ; BSR set to: 1
  2424                           ;fs_menu_controller.c: 231:                 LATCbits.LATC5 = 0;
  2425  0013A8  9A8B               	bcf	139,5,c	;volatile
  2426  0013AA                     
  2427                           ; BSR set to: 1
  2428                           ;fs_menu_controller.c: 232:                 LATCbits.LATC4 = 0;
  2429  0013AA  988B               	bcf	139,4,c	;volatile
  2430  0013AC                     l344:
  2431                           
  2432                           ;fs_menu_controller.c: 235:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2433  0013AC  0101               	movlb	1	; () banked
  2434  0013AE  51BD               	movf	_startIsClick& (0+255),w,b
  2435  0013B0  A4D8               	btfss	status,2,c
  2436  0013B2  EFDD  F009         	goto	u7181
  2437  0013B6  EFDF  F009         	goto	u7180
  2438  0013BA                     u7181:
  2439  0013BA  EF0C  F00A         	goto	l5771
  2440  0013BE                     u7180:
  2441  0013BE                     
  2442                           ; BSR set to: 1
  2443  0013BE  0100               	movlb	0	; () banked
  2444  0013C0  51FF               	movf	_pauseIsClick& (0+255),w,b
  2445  0013C2  A4D8               	btfss	status,2,c
  2446  0013C4  EFE6  F009         	goto	u7191
  2447  0013C8  EFE8  F009         	goto	u7190
  2448  0013CC                     u7191:
  2449  0013CC  EF0C  F00A         	goto	l5771
  2450  0013D0                     u7190:
  2451  0013D0                     
  2452                           ; BSR set to: 0
  2453  0013D0  0101               	movlb	1	; () banked
  2454  0013D2  05BC               	decf	_stopIsClick& (0+255),w,b
  2455  0013D4  A4D8               	btfss	status,2,c
  2456  0013D6  EFEF  F009         	goto	u7201
  2457  0013DA  EFF1  F009         	goto	u7200
  2458  0013DE                     u7201:
  2459  0013DE  EF0C  F00A         	goto	l5771
  2460  0013E2                     u7200:
  2461  0013E2                     
  2462                           ; BSR set to: 1
  2463  0013E2  51BB               	movf	_menu_selected& (0+255),w,b
  2464  0013E4  A4D8               	btfss	status,2,c
  2465  0013E6  EFF7  F009         	goto	u7211
  2466  0013EA  EFF9  F009         	goto	u7210
  2467  0013EE                     u7211:
  2468  0013EE  EF0C  F00A         	goto	l5771
  2469  0013F2                     u7210:
  2470  0013F2                     
  2471                           ; BSR set to: 1
  2472                           ;fs_menu_controller.c: 236:             {;fs_menu_controller.c: 237:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2473  0013F2  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  2474  0013F6  0100               	movlb	0	; () banked
  2475  0013F8  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2476  0013FA                     
  2477                           ; BSR set to: 0
  2478                           ;fs_menu_controller.c: 238:                  timer_value.remainingSecond = 0;
  2479  0013FA  0E00               	movlw	0
  2480  0013FC  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2481  0013FE  0E00               	movlw	0
  2482  001400  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2483                           
  2484                           ;fs_menu_controller.c: 239:                  timer_value.second = 0;
  2485  001402  0E00               	movlw	0
  2486  001404  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2487  001406  0E00               	movlw	0
  2488  001408  6FF3               	movwf	_timer_value& (0+255),b
  2489                           
  2490                           ;fs_menu_controller.c: 240:                  timer_value.minute = 0;
  2491  00140A  0E00               	movlw	0
  2492  00140C  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2493  00140E  0E00               	movlw	0
  2494  001410  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2495  001412                     
  2496                           ; BSR set to: 0
  2497                           ;fs_menu_controller.c: 241:                  LATDbits.LATD5 = 0;
  2498  001412  9A8C               	bcf	140,5,c	;volatile
  2499  001414                     
  2500                           ; BSR set to: 0
  2501                           ;fs_menu_controller.c: 242:                  LATCbits.LATC5 = 0;
  2502  001414  9A8B               	bcf	139,5,c	;volatile
  2503  001416                     
  2504                           ; BSR set to: 0
  2505                           ;fs_menu_controller.c: 243:                  LATCbits.LATC4 = 0;
  2506  001416  988B               	bcf	139,4,c	;volatile
  2507  001418                     l5771:
  2508                           
  2509                           ;fs_menu_controller.c: 246:             if ( (startIsClick == 1) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 0) )
  2510  001418  0101               	movlb	1	; () banked
  2511  00141A  05BD               	decf	_startIsClick& (0+255),w,b
  2512  00141C  A4D8               	btfss	status,2,c
  2513  00141E  EF13  F00A         	goto	u7221
  2514  001422  EF15  F00A         	goto	u7220
  2515  001426                     u7221:
  2516  001426  EF47  F00E         	goto	l383
  2517  00142A                     u7220:
  2518  00142A                     
  2519                           ; BSR set to: 1
  2520  00142A  0100               	movlb	0	; () banked
  2521  00142C  51FF               	movf	_pauseIsClick& (0+255),w,b
  2522  00142E  A4D8               	btfss	status,2,c
  2523  001430  EF1C  F00A         	goto	u7231
  2524  001434  EF1E  F00A         	goto	u7230
  2525  001438                     u7231:
  2526  001438  EF47  F00E         	goto	l383
  2527  00143C                     u7230:
  2528  00143C                     
  2529                           ; BSR set to: 0
  2530  00143C  0101               	movlb	1	; () banked
  2531  00143E  51BC               	movf	_stopIsClick& (0+255),w,b
  2532  001440  A4D8               	btfss	status,2,c
  2533  001442  EF25  F00A         	goto	u7241
  2534  001446  EF27  F00A         	goto	u7240
  2535  00144A                     u7241:
  2536  00144A  EF47  F00E         	goto	l383
  2537  00144E                     u7240:
  2538  00144E                     
  2539                           ; BSR set to: 1
  2540                           ;fs_menu_controller.c: 247:             {;fs_menu_controller.c: 248:                 sta
      +                          rtMotor();
  2541  00144E  EC6E  F02D         	call	_startMotor	;wreg free
  2542  001452                     
  2543                           ;fs_menu_controller.c: 249:                 LATDbits.LATD5 = 1;
  2544  001452  8A8C               	bsf	140,5,c	;volatile
  2545  001454                     
  2546                           ;fs_menu_controller.c: 250:                 LATCbits.LATC5 = 1;
  2547  001454  8A8B               	bsf	139,5,c	;volatile
  2548  001456                     
  2549                           ;fs_menu_controller.c: 251:                 LATCbits.LATC4 = 1;
  2550  001456  888B               	bsf	139,4,c	;volatile
  2551  001458  EF47  F00E         	goto	l383
  2552  00145C                     l348:
  2553                           
  2554                           ; BSR set to: 0
  2555                           ;fs_menu_controller.c: 259:             if (menu_flags.menu_input_flag == 1)
  2556  00145C  A1FD               	btfss	_menu_flags& (0+255),0,b
  2557  00145E  EF33  F00A         	goto	u7251
  2558  001462  EF35  F00A         	goto	u7250
  2559  001466                     u7251:
  2560  001466  EF39  F00A         	goto	l5789
  2561  00146A                     u7250:
  2562  00146A                     
  2563                           ; BSR set to: 0
  2564                           ;fs_menu_controller.c: 260:             {;fs_menu_controller.c: 261:                 men
      +                          u_flags.menu_input_flag = 0;
  2565  00146A  91FD               	bcf	_menu_flags& (0+255),0,b
  2566  00146C                     
  2567                           ; BSR set to: 0
  2568                           ;fs_menu_controller.c: 262:                 menu_selected = STOP_TIME_SETTING;
  2569  00146C  0E02               	movlw	2
  2570  00146E  0101               	movlb	1	; () banked
  2571  001470  6FBB               	movwf	_menu_selected& (0+255),b
  2572  001472                     l5789:
  2573                           
  2574                           ;fs_menu_controller.c: 265:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2575  001472  0100               	movlb	0	; () banked
  2576  001474  A9FD               	btfss	_menu_flags& (0+255),4,b
  2577  001476  EF3F  F00A         	goto	u7261
  2578  00147A  EF41  F00A         	goto	u7260
  2579  00147E                     u7261:
  2580  00147E  EF63  F00A         	goto	l5807
  2581  001482                     u7260:
  2582  001482                     
  2583                           ; BSR set to: 0
  2584  001482  0E1E               	movlw	30
  2585  001484  0101               	movlb	1	; () banked
  2586  001486  61AF               	cpfslt	_menu_value& (0+255),b
  2587  001488  EF48  F00A         	goto	u7271
  2588  00148C  EF4A  F00A         	goto	u7270
  2589  001490                     u7271:
  2590  001490  EF63  F00A         	goto	l5807
  2591  001494                     u7270:
  2592  001494                     
  2593                           ; BSR set to: 1
  2594                           ;fs_menu_controller.c: 266:             {;fs_menu_controller.c: 267:                 men
      +                          u_flags.menu_increase_flag = 0;
  2595  001494  0100               	movlb	0	; () banked
  2596  001496  99FD               	bcf	_menu_flags& (0+255),4,b
  2597  001498                     
  2598                           ; BSR set to: 0
  2599                           ;fs_menu_controller.c: 268:                 menu_value.driver_time++;
  2600  001498  0101               	movlb	1	; () banked
  2601  00149A  2BAF               	incf	_menu_value& (0+255),f,b
  2602  00149C                     
  2603                           ; BSR set to: 1
  2604                           ;fs_menu_controller.c: 269:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2605  00149C  C1AF  F001         	movff	_menu_value,eepromWrite@data
  2606  0014A0  0E00               	movlw	0
  2607  0014A2  ECD9  F02D         	call	_eepromWrite
  2608  0014A6                     
  2609                           ;fs_menu_controller.c: 270:                 timer_value.minute =0 ;
  2610  0014A6  0E00               	movlw	0
  2611  0014A8  0100               	movlb	0	; () banked
  2612  0014AA  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2613  0014AC  0E00               	movlw	0
  2614  0014AE  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2615  0014B0                     
  2616                           ; BSR set to: 0
  2617                           ;fs_menu_controller.c: 271:                 timer_value.second = 0;
  2618  0014B0  0E00               	movlw	0
  2619  0014B2  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2620  0014B4  0E00               	movlw	0
  2621  0014B6  6FF3               	movwf	_timer_value& (0+255),b
  2622  0014B8                     
  2623                           ; BSR set to: 0
  2624                           ;fs_menu_controller.c: 272:                 timer_value.remainingSecond = 0;
  2625  0014B8  0E00               	movlw	0
  2626  0014BA  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2627  0014BC  0E00               	movlw	0
  2628  0014BE  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2629  0014C0                     
  2630                           ; BSR set to: 0
  2631                           ;fs_menu_controller.c: 273:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2632  0014C0  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  2633  0014C4  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2634  0014C6                     l5807:
  2635                           
  2636                           ;fs_menu_controller.c: 276:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 1))
  2637  0014C6  0100               	movlb	0	; () banked
  2638  0014C8  ABFD               	btfss	_menu_flags& (0+255),5,b
  2639  0014CA  EF69  F00A         	goto	u7281
  2640  0014CE  EF6B  F00A         	goto	u7280
  2641  0014D2                     u7281:
  2642  0014D2  EF8D  F00A         	goto	l5825
  2643  0014D6                     u7280:
  2644  0014D6                     
  2645                           ; BSR set to: 0
  2646  0014D6  0E01               	movlw	1
  2647  0014D8  0101               	movlb	1	; () banked
  2648  0014DA  65AF               	cpfsgt	_menu_value& (0+255),b
  2649  0014DC  EF72  F00A         	goto	u7291
  2650  0014E0  EF74  F00A         	goto	u7290
  2651  0014E4                     u7291:
  2652  0014E4  EF8D  F00A         	goto	l5825
  2653  0014E8                     u7290:
  2654  0014E8                     
  2655                           ; BSR set to: 1
  2656                           ;fs_menu_controller.c: 277:             {;fs_menu_controller.c: 278:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2657  0014E8  0100               	movlb	0	; () banked
  2658  0014EA  9BFD               	bcf	_menu_flags& (0+255),5,b
  2659  0014EC                     
  2660                           ; BSR set to: 0
  2661                           ;fs_menu_controller.c: 279:                  menu_value.driver_time--;
  2662  0014EC  0101               	movlb	1	; () banked
  2663  0014EE  07AF               	decf	_menu_value& (0+255),f,b
  2664  0014F0                     
  2665                           ; BSR set to: 1
  2666                           ;fs_menu_controller.c: 280:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2667  0014F0  C1AF  F001         	movff	_menu_value,eepromWrite@data
  2668  0014F4  0E00               	movlw	0
  2669  0014F6  ECD9  F02D         	call	_eepromWrite
  2670  0014FA                     
  2671                           ;fs_menu_controller.c: 281:                  timer_value.minute =0 ;
  2672  0014FA  0E00               	movlw	0
  2673  0014FC  0100               	movlb	0	; () banked
  2674  0014FE  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2675  001500  0E00               	movlw	0
  2676  001502  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2677  001504                     
  2678                           ; BSR set to: 0
  2679                           ;fs_menu_controller.c: 282:                  timer_value.second = 0;
  2680  001504  0E00               	movlw	0
  2681  001506  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2682  001508  0E00               	movlw	0
  2683  00150A  6FF3               	movwf	_timer_value& (0+255),b
  2684  00150C                     
  2685                           ; BSR set to: 0
  2686                           ;fs_menu_controller.c: 283:                  timer_value.remainingSecond = 0;
  2687  00150C  0E00               	movlw	0
  2688  00150E  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2689  001510  0E00               	movlw	0
  2690  001512  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2691  001514                     
  2692                           ; BSR set to: 0
  2693                           ;fs_menu_controller.c: 284:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2694  001514  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  2695  001518  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2696  00151A                     l5825:
  2697                           
  2698                           ;fs_menu_controller.c: 288:             Lcd_Set_Cursor(1,1);
  2699  00151A  0E01               	movlw	1
  2700  00151C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2701  00151E  0E01               	movlw	1
  2702  001520  EC1D  F02B         	call	_Lcd_Set_Cursor
  2703  001524                     
  2704                           ;fs_menu_controller.c: 289:             Lcd_Write_String("HAREKT ZAMANI dk");
  2705  001524  0E68               	movlw	low STR_3
  2706  001526  6E05               	movwf	Lcd_Write_String@a^0,c
  2707  001528  0E06               	movlw	high STR_3
  2708  00152A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2709  00152C  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2710  001530                     
  2711                           ;fs_menu_controller.c: 290:             Lcd_Set_Cursor(2,1);
  2712  001530  0E01               	movlw	1
  2713  001532  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2714  001534  0E02               	movlw	2
  2715  001536  EC1D  F02B         	call	_Lcd_Set_Cursor
  2716  00153A                     
  2717                           ;fs_menu_controller.c: 291:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2718  00153A  0EE3               	movlw	low stateMachine@textCursor2
  2719  00153C  0100               	movlb	0	; () banked
  2720  00153E  6FCF               	movwf	sprintf@s& (0+255),b
  2721  001540  0E00               	movlw	high stateMachine@textCursor2
  2722  001542  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2723  001544  0E01               	movlw	low STR_4
  2724  001546  6FD1               	movwf	sprintf@fmt& (0+255),b
  2725  001548  0E06               	movlw	high STR_4
  2726  00154A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2727  00154C  C1AF  F0D3         	movff	_menu_value,?_sprintf+4
  2728  001550  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2729  001552  EC05  F02C         	call	_sprintf	;wreg free
  2730  001556                     
  2731                           ;fs_menu_controller.c: 292:             Lcd_Write_String(textCursor2);
  2732  001556  0EE3               	movlw	low stateMachine@textCursor2
  2733  001558  6E05               	movwf	Lcd_Write_String@a^0,c
  2734  00155A  0E00               	movlw	high stateMachine@textCursor2
  2735  00155C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2736  00155E  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2737  001562                     
  2738                           ;fs_menu_controller.c: 294:             if(timer_value.menu_login_delay == 100)
  2739  001562  0E64               	movlw	100
  2740  001564  0100               	movlb	0	; () banked
  2741  001566  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2742  001568  A4D8               	btfss	status,2,c
  2743  00156A  EFB9  F00A         	goto	u7301
  2744  00156E  EFBB  F00A         	goto	u7300
  2745  001572                     u7301:
  2746  001572  EFC0  F00A         	goto	l5839
  2747  001576                     u7300:
  2748  001576                     l5837:
  2749                           
  2750                           ; BSR set to: 0
  2751                           ;fs_menu_controller.c: 295:             {;fs_menu_controller.c: 296:                 tim
      +                          er_value.menu_login_delay = 0;
  2752  001576  0E00               	movlw	0
  2753  001578  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2754                           
  2755                           ;fs_menu_controller.c: 297:                 menu_selected = PAUSE_MENU;
  2756  00157A  0E06               	movlw	6
  2757  00157C  0101               	movlb	1	; () banked
  2758  00157E  6FBB               	movwf	_menu_selected& (0+255),b
  2759  001580                     l5839:
  2760                           
  2761                           ;fs_menu_controller.c: 300:         stopMotor();
  2762  001580  ECFC  F02C         	call	_stopMotor	;wreg free
  2763                           
  2764                           ;fs_menu_controller.c: 302:         break;
  2765  001584  EF47  F00E         	goto	l383
  2766  001588                     l5841:
  2767                           
  2768                           ; BSR set to: 0
  2769                           ;fs_menu_controller.c: 306:             stopMotor();
  2770  001588  ECFC  F02C         	call	_stopMotor	;wreg free
  2771  00158C                     
  2772                           ;fs_menu_controller.c: 308:             if (menu_flags.menu_input_flag == 1)
  2773  00158C  0100               	movlb	0	; () banked
  2774  00158E  A1FD               	btfss	_menu_flags& (0+255),0,b
  2775  001590  EFCC  F00A         	goto	u7311
  2776  001594  EFCE  F00A         	goto	u7310
  2777  001598                     u7311:
  2778  001598  EFD2  F00A         	goto	l5849
  2779  00159C                     u7310:
  2780  00159C                     
  2781                           ; BSR set to: 0
  2782                           ;fs_menu_controller.c: 309:             {;fs_menu_controller.c: 310:                 men
      +                          u_flags.menu_input_flag = 0;
  2783  00159C  91FD               	bcf	_menu_flags& (0+255),0,b
  2784  00159E                     
  2785                           ; BSR set to: 0
  2786                           ;fs_menu_controller.c: 311:                 menu_selected = SPEED_LIMIT_SETTING;
  2787  00159E  0E03               	movlw	3
  2788  0015A0  0101               	movlb	1	; () banked
  2789  0015A2  6FBB               	movwf	_menu_selected& (0+255),b
  2790  0015A4                     l5849:
  2791                           
  2792                           ;fs_menu_controller.c: 314:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2793  0015A4  0100               	movlb	0	; () banked
  2794  0015A6  A9FD               	btfss	_menu_flags& (0+255),4,b
  2795  0015A8  EFD8  F00A         	goto	u7321
  2796  0015AC  EFDA  F00A         	goto	u7320
  2797  0015B0                     u7321:
  2798  0015B0  EFED  F00A         	goto	l5859
  2799  0015B4                     u7320:
  2800  0015B4                     
  2801                           ; BSR set to: 0
  2802  0015B4  0EFA               	movlw	250
  2803  0015B6  0101               	movlb	1	; () banked
  2804  0015B8  61B0               	cpfslt	(_menu_value+1)& (0+255),b
  2805  0015BA  EFE1  F00A         	goto	u7331
  2806  0015BE  EFE3  F00A         	goto	u7330
  2807  0015C2                     u7331:
  2808  0015C2  EFED  F00A         	goto	l5859
  2809  0015C6                     u7330:
  2810  0015C6                     
  2811                           ; BSR set to: 1
  2812                           ;fs_menu_controller.c: 315:             {;fs_menu_controller.c: 316:                 men
      +                          u_flags.menu_increase_flag = 0;
  2813  0015C6  0100               	movlb	0	; () banked
  2814  0015C8  99FD               	bcf	_menu_flags& (0+255),4,b
  2815  0015CA                     
  2816                           ; BSR set to: 0
  2817                           ;fs_menu_controller.c: 317:                 menu_value.stop_time += 10;
  2818  0015CA  0E0A               	movlw	10
  2819  0015CC  0101               	movlb	1	; () banked
  2820  0015CE  27B0               	addwf	(_menu_value+1)& (0+255),f,b
  2821  0015D0                     
  2822                           ; BSR set to: 1
  2823                           ;fs_menu_controller.c: 318:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2824  0015D0  C1B0  F001         	movff	_menu_value+1,eepromWrite@data
  2825  0015D4  0E01               	movlw	1
  2826  0015D6  ECD9  F02D         	call	_eepromWrite
  2827  0015DA                     l5859:
  2828                           
  2829                           ;fs_menu_controller.c: 321:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2830  0015DA  0100               	movlb	0	; () banked
  2831  0015DC  ABFD               	btfss	_menu_flags& (0+255),5,b
  2832  0015DE  EFF3  F00A         	goto	u7341
  2833  0015E2  EFF5  F00A         	goto	u7340
  2834  0015E6                     u7341:
  2835  0015E6  EF08  F00B         	goto	l5869
  2836  0015EA                     u7340:
  2837  0015EA                     
  2838                           ; BSR set to: 0
  2839  0015EA  0E0A               	movlw	10
  2840  0015EC  0101               	movlb	1	; () banked
  2841  0015EE  65B0               	cpfsgt	(_menu_value+1)& (0+255),b
  2842  0015F0  EFFC  F00A         	goto	u7351
  2843  0015F4  EFFE  F00A         	goto	u7350
  2844  0015F8                     u7351:
  2845  0015F8  EF08  F00B         	goto	l5869
  2846  0015FC                     u7350:
  2847  0015FC                     
  2848                           ; BSR set to: 1
  2849                           ;fs_menu_controller.c: 322:             {;fs_menu_controller.c: 323:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2850  0015FC  0100               	movlb	0	; () banked
  2851  0015FE  9BFD               	bcf	_menu_flags& (0+255),5,b
  2852  001600                     
  2853                           ; BSR set to: 0
  2854                           ;fs_menu_controller.c: 324:                  menu_value.stop_time -= 10;
  2855  001600  0E0A               	movlw	10
  2856  001602  0101               	movlb	1	; () banked
  2857  001604  5FB0               	subwf	(_menu_value+1)& (0+255),f,b
  2858  001606                     
  2859                           ; BSR set to: 1
  2860                           ;fs_menu_controller.c: 325:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2861  001606  C1B0  F001         	movff	_menu_value+1,eepromWrite@data
  2862  00160A  0E01               	movlw	1
  2863  00160C  ECD9  F02D         	call	_eepromWrite
  2864  001610                     l5869:
  2865                           
  2866                           ;fs_menu_controller.c: 327:             Lcd_Set_Cursor(1,1);
  2867  001610  0E01               	movlw	1
  2868  001612  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2869  001614  0E01               	movlw	1
  2870  001616  EC1D  F02B         	call	_Lcd_Set_Cursor
  2871  00161A                     
  2872                           ;fs_menu_controller.c: 328:             Lcd_Write_String("DURMA ZAMANI  ms");
  2873  00161A  0E79               	movlw	low STR_5
  2874  00161C  6E05               	movwf	Lcd_Write_String@a^0,c
  2875  00161E  0E06               	movlw	high STR_5
  2876  001620  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2877  001622  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2878  001626                     
  2879                           ;fs_menu_controller.c: 329:             Lcd_Set_Cursor(2,1);
  2880  001626  0E01               	movlw	1
  2881  001628  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2882  00162A  0E02               	movlw	2
  2883  00162C  EC1D  F02B         	call	_Lcd_Set_Cursor
  2884  001630                     
  2885                           ;fs_menu_controller.c: 330:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2886  001630  0EE3               	movlw	low stateMachine@textCursor2
  2887  001632  0100               	movlb	0	; () banked
  2888  001634  6FCF               	movwf	sprintf@s& (0+255),b
  2889  001636  0E00               	movlw	high stateMachine@textCursor2
  2890  001638  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2891  00163A  0E01               	movlw	low STR_4
  2892  00163C  6FD1               	movwf	sprintf@fmt& (0+255),b
  2893  00163E  0E06               	movlw	high STR_4
  2894  001640  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2895  001642  C1B0  F0D3         	movff	_menu_value+1,?_sprintf+4
  2896  001646  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2897  001648  EC05  F02C         	call	_sprintf	;wreg free
  2898  00164C                     
  2899                           ;fs_menu_controller.c: 331:             Lcd_Write_String(textCursor2);
  2900  00164C  0EE3               	movlw	low stateMachine@textCursor2
  2901  00164E  6E05               	movwf	Lcd_Write_String@a^0,c
  2902  001650  0E00               	movlw	high stateMachine@textCursor2
  2903  001652  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2904  001654  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  2905  001658                     
  2906                           ;fs_menu_controller.c: 333:             if(timer_value.menu_login_delay == 100)
  2907  001658  0E64               	movlw	100
  2908  00165A  0100               	movlb	0	; () banked
  2909  00165C  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2910  00165E  A4D8               	btfss	status,2,c
  2911  001660  EF34  F00B         	goto	u7361
  2912  001664  EF36  F00B         	goto	u7360
  2913  001668                     u7361:
  2914  001668  EF47  F00E         	goto	l383
  2915  00166C                     u7360:
  2916  00166C                     l5881:
  2917                           
  2918                           ; BSR set to: 0
  2919                           ;fs_menu_controller.c: 334:             {;fs_menu_controller.c: 335:                 tim
      +                          er_value.menu_login_delay = 0;
  2920  00166C  0E00               	movlw	0
  2921  00166E  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2922                           
  2923                           ;fs_menu_controller.c: 336:                 menu_selected = PAUSE_MENU;
  2924  001670  0E06               	movlw	6
  2925  001672  0101               	movlb	1	; () banked
  2926  001674  6FBB               	movwf	_menu_selected& (0+255),b
  2927  001676  EF47  F00E         	goto	l383
  2928  00167A                     l358:
  2929                           
  2930                           ; BSR set to: 0
  2931                           ;fs_menu_controller.c: 342:             if (menu_flags.menu_input_flag == 1)
  2932  00167A  A1FD               	btfss	_menu_flags& (0+255),0,b
  2933  00167C  EF42  F00B         	goto	u7371
  2934  001680  EF44  F00B         	goto	u7370
  2935  001684                     u7371:
  2936  001684  EF48  F00B         	goto	l5887
  2937  001688                     u7370:
  2938  001688                     
  2939                           ; BSR set to: 0
  2940                           ;fs_menu_controller.c: 343:             {;fs_menu_controller.c: 344:                 men
      +                          u_flags.menu_input_flag = 0;
  2941  001688  91FD               	bcf	_menu_flags& (0+255),0,b
  2942  00168A                     
  2943                           ; BSR set to: 0
  2944                           ;fs_menu_controller.c: 345:                 menu_selected = DRIVER_TIME_SETTING;
  2945  00168A  0E01               	movlw	1
  2946  00168C  0101               	movlb	1	; () banked
  2947  00168E  6FBB               	movwf	_menu_selected& (0+255),b
  2948  001690                     l5887:
  2949                           
  2950                           ;fs_menu_controller.c: 348:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2951  001690  0100               	movlb	0	; () banked
  2952  001692  A9FD               	btfss	_menu_flags& (0+255),4,b
  2953  001694  EF4E  F00B         	goto	u7381
  2954  001698  EF50  F00B         	goto	u7380
  2955  00169C                     u7381:
  2956  00169C  EF62  F00B         	goto	l5897
  2957  0016A0                     u7380:
  2958  0016A0                     
  2959                           ; BSR set to: 0
  2960  0016A0  0E05               	movlw	5
  2961  0016A2  0101               	movlb	1	; () banked
  2962  0016A4  61B1               	cpfslt	(_menu_value+2)& (0+255),b
  2963  0016A6  EF57  F00B         	goto	u7391
  2964  0016AA  EF59  F00B         	goto	u7390
  2965  0016AE                     u7391:
  2966  0016AE  EF62  F00B         	goto	l5897
  2967  0016B2                     u7390:
  2968  0016B2                     
  2969                           ; BSR set to: 1
  2970                           ;fs_menu_controller.c: 349:             {;fs_menu_controller.c: 350:                 men
      +                          u_flags.menu_increase_flag = 0;
  2971  0016B2  0100               	movlb	0	; () banked
  2972  0016B4  99FD               	bcf	_menu_flags& (0+255),4,b
  2973  0016B6                     
  2974                           ; BSR set to: 0
  2975                           ;fs_menu_controller.c: 351:                 menu_value.speed_limit += 1;
  2976  0016B6  0101               	movlb	1	; () banked
  2977  0016B8  2BB1               	incf	(_menu_value+2)& (0+255),f,b
  2978  0016BA                     
  2979                           ; BSR set to: 1
  2980                           ;fs_menu_controller.c: 352:                 eepromWrite(0x02,menu_value.speed_limit);
  2981  0016BA  C1B1  F001         	movff	_menu_value+2,eepromWrite@data
  2982  0016BE  0E02               	movlw	2
  2983  0016C0  ECD9  F02D         	call	_eepromWrite
  2984  0016C4                     l5897:
  2985                           
  2986                           ;fs_menu_controller.c: 355:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  2987  0016C4  0100               	movlb	0	; () banked
  2988  0016C6  ABFD               	btfss	_menu_flags& (0+255),5,b
  2989  0016C8  EF68  F00B         	goto	u7401
  2990  0016CC  EF6A  F00B         	goto	u7400
  2991  0016D0                     u7401:
  2992  0016D0  EF7C  F00B         	goto	l5907
  2993  0016D4                     u7400:
  2994  0016D4                     
  2995                           ; BSR set to: 0
  2996  0016D4  0E01               	movlw	1
  2997  0016D6  0101               	movlb	1	; () banked
  2998  0016D8  65B1               	cpfsgt	(_menu_value+2)& (0+255),b
  2999  0016DA  EF71  F00B         	goto	u7411
  3000  0016DE  EF73  F00B         	goto	u7410
  3001  0016E2                     u7411:
  3002  0016E2  EF7C  F00B         	goto	l5907
  3003  0016E6                     u7410:
  3004  0016E6                     
  3005                           ; BSR set to: 1
  3006                           ;fs_menu_controller.c: 356:             {;fs_menu_controller.c: 357:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  3007  0016E6  0100               	movlb	0	; () banked
  3008  0016E8  9BFD               	bcf	_menu_flags& (0+255),5,b
  3009  0016EA                     
  3010                           ; BSR set to: 0
  3011                           ;fs_menu_controller.c: 358:                  menu_value.speed_limit -= 1;
  3012  0016EA  0101               	movlb	1	; () banked
  3013  0016EC  07B1               	decf	(_menu_value+2)& (0+255),f,b
  3014  0016EE                     
  3015                           ; BSR set to: 1
  3016                           ;fs_menu_controller.c: 359:                  eepromWrite(0x02,menu_value.speed_limit);
  3017  0016EE  C1B1  F001         	movff	_menu_value+2,eepromWrite@data
  3018  0016F2  0E02               	movlw	2
  3019  0016F4  ECD9  F02D         	call	_eepromWrite
  3020  0016F8                     l5907:
  3021                           
  3022                           ;fs_menu_controller.c: 361:             Lcd_Set_Cursor(1,1);
  3023  0016F8  0E01               	movlw	1
  3024  0016FA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3025  0016FC  0E01               	movlw	1
  3026  0016FE  EC1D  F02B         	call	_Lcd_Set_Cursor
  3027  001702                     
  3028                           ;fs_menu_controller.c: 362:             Lcd_Write_String("HIZ LiMiTi      ");
  3029  001702  0E24               	movlw	low STR_7
  3030  001704  6E05               	movwf	Lcd_Write_String@a^0,c
  3031  001706  0E06               	movlw	high STR_7
  3032  001708  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3033  00170A  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3034  00170E                     
  3035                           ;fs_menu_controller.c: 363:             Lcd_Set_Cursor(2,1);
  3036  00170E  0E01               	movlw	1
  3037  001710  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3038  001712  0E02               	movlw	2
  3039  001714  EC1D  F02B         	call	_Lcd_Set_Cursor
  3040  001718                     
  3041                           ;fs_menu_controller.c: 364:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  3042  001718  0EE3               	movlw	low stateMachine@textCursor2
  3043  00171A  0100               	movlb	0	; () banked
  3044  00171C  6FCF               	movwf	sprintf@s& (0+255),b
  3045  00171E  0E00               	movlw	high stateMachine@textCursor2
  3046  001720  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3047  001722  0E01               	movlw	low STR_4
  3048  001724  6FD1               	movwf	sprintf@fmt& (0+255),b
  3049  001726  0E06               	movlw	high STR_4
  3050  001728  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3051  00172A  C1B1  F0D3         	movff	_menu_value+2,?_sprintf+4
  3052  00172E  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3053  001730  EC05  F02C         	call	_sprintf	;wreg free
  3054  001734                     
  3055                           ;fs_menu_controller.c: 365:             Lcd_Write_String(textCursor2);
  3056  001734  0EE3               	movlw	low stateMachine@textCursor2
  3057  001736  6E05               	movwf	Lcd_Write_String@a^0,c
  3058  001738  0E00               	movlw	high stateMachine@textCursor2
  3059  00173A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3060  00173C  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3061  001740                     
  3062                           ;fs_menu_controller.c: 367:             if(timer_value.menu_login_delay == 100)
  3063  001740  0E64               	movlw	100
  3064  001742  0100               	movlb	0	; () banked
  3065  001744  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3066  001746  A4D8               	btfss	status,2,c
  3067  001748  EFA8  F00B         	goto	u7421
  3068  00174C  EFAA  F00B         	goto	u7420
  3069  001750                     u7421:
  3070  001750  EFC0  F00A         	goto	l5839
  3071  001754                     u7420:
  3072  001754  EFBB  F00A         	goto	l5837
  3073  001758                     l5923:
  3074                           
  3075                           ; BSR set to: 0
  3076                           ;fs_menu_controller.c: 378:             startIsClick = 0;
  3077  001758  0E00               	movlw	0
  3078  00175A  0101               	movlb	1	; () banked
  3079  00175C  6FBD               	movwf	_startIsClick& (0+255),b
  3080                           
  3081                           ;fs_menu_controller.c: 379:             pauseIsClick = 0;
  3082  00175E  0E00               	movlw	0
  3083  001760  0100               	movlb	0	; () banked
  3084  001762  6FFF               	movwf	_pauseIsClick& (0+255),b
  3085                           
  3086                           ;fs_menu_controller.c: 380:             stopIsClick = 1;
  3087  001764  0E01               	movlw	1
  3088  001766  0101               	movlb	1	; () banked
  3089  001768  6FBC               	movwf	_stopIsClick& (0+255),b
  3090  00176A                     
  3091                           ; BSR set to: 1
  3092                           ;fs_menu_controller.c: 382:             Lcd_Set_Cursor(1,1);
  3093  00176A  0E01               	movlw	1
  3094  00176C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3095  00176E  0E01               	movlw	1
  3096  001770  EC1D  F02B         	call	_Lcd_Set_Cursor
  3097  001774                     
  3098                           ;fs_menu_controller.c: 383:             Lcd_Write_String("ZAMAN DOLDU     ");
  3099  001774  0E46               	movlw	low STR_9
  3100  001776  6E05               	movwf	Lcd_Write_String@a^0,c
  3101  001778  0E06               	movlw	high STR_9
  3102  00177A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3103  00177C  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3104  001780                     
  3105                           ;fs_menu_controller.c: 385:             timer_value.remainingSecond = 0;
  3106  001780  0E00               	movlw	0
  3107  001782  0100               	movlb	0	; () banked
  3108  001784  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3109  001786  0E00               	movlw	0
  3110  001788  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3111  00178A                     
  3112                           ; BSR set to: 0
  3113                           ;fs_menu_controller.c: 386:             timer_value.remainingMinute = 0;
  3114  00178A  0E00               	movlw	0
  3115  00178C  6FFA               	movwf	(_timer_value+7)& (0+255),b
  3116  00178E  0E00               	movlw	0
  3117  001790  6FF9               	movwf	(_timer_value+6)& (0+255),b
  3118  001792                     
  3119                           ; BSR set to: 0
  3120                           ;fs_menu_controller.c: 387:              Lcd_Set_Cursor(2,1);
  3121  001792  0E01               	movlw	1
  3122  001794  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3123  001796  0E02               	movlw	2
  3124  001798  EC1D  F02B         	call	_Lcd_Set_Cursor
  3125  00179C                     
  3126                           ;fs_menu_controller.c: 388:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3127  00179C  0EE3               	movlw	low stateMachine@textCursor2
  3128  00179E  0100               	movlb	0	; () banked
  3129  0017A0  6FCF               	movwf	sprintf@s& (0+255),b
  3130  0017A2  0E00               	movlw	high stateMachine@textCursor2
  3131  0017A4  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3132  0017A6  0E8A               	movlw	low STR_10
  3133  0017A8  6FD1               	movwf	sprintf@fmt& (0+255),b
  3134  0017AA  0E06               	movlw	high STR_10
  3135  0017AC  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3136  0017AE  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3137  0017B2  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3138  0017B6  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3139  0017BA  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3140  0017BE  EC05  F02C         	call	_sprintf	;wreg free
  3141  0017C2                     
  3142                           ;fs_menu_controller.c: 389:             Lcd_Write_String(textCursor2);
  3143  0017C2  0EE3               	movlw	low stateMachine@textCursor2
  3144  0017C4  6E05               	movwf	Lcd_Write_String@a^0,c
  3145  0017C6  0E00               	movlw	high stateMachine@textCursor2
  3146  0017C8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3147  0017CA  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3148  0017CE                     
  3149                           ;fs_menu_controller.c: 391:         if (menu_flags.menu_start_flag == 1)
  3150  0017CE  0100               	movlb	0	; () banked
  3151  0017D0  A3FD               	btfss	_menu_flags& (0+255),1,b
  3152  0017D2  EFED  F00B         	goto	u7431
  3153  0017D6  EFEF  F00B         	goto	u7430
  3154  0017DA                     u7431:
  3155  0017DA  EF04  F00C         	goto	l5945
  3156  0017DE                     u7430:
  3157  0017DE                     
  3158                           ; BSR set to: 0
  3159                           ;fs_menu_controller.c: 392:         {;fs_menu_controller.c: 393:             menu_flags.
      +                          menu_start_flag = 0;
  3160  0017DE  93FD               	bcf	_menu_flags& (0+255),1,b
  3161  0017E0                     
  3162                           ; BSR set to: 0
  3163                           ;fs_menu_controller.c: 394:             menu_selected = START_MENU;
  3164  0017E0  0E05               	movlw	5
  3165  0017E2  0101               	movlb	1	; () banked
  3166  0017E4  6FBB               	movwf	_menu_selected& (0+255),b
  3167                           
  3168                           ;fs_menu_controller.c: 396:             startIsClick = 1;
  3169  0017E6  0E01               	movlw	1
  3170  0017E8  6FBD               	movwf	_startIsClick& (0+255),b
  3171                           
  3172                           ;fs_menu_controller.c: 397:             pauseIsClick = 0;
  3173  0017EA  0E00               	movlw	0
  3174  0017EC  0100               	movlb	0	; () banked
  3175  0017EE  6FFF               	movwf	_pauseIsClick& (0+255),b
  3176                           
  3177                           ;fs_menu_controller.c: 398:             stopIsClick = 0;
  3178  0017F0  0E00               	movlw	0
  3179  0017F2  0101               	movlb	1	; () banked
  3180  0017F4  6FBC               	movwf	_stopIsClick& (0+255),b
  3181                           
  3182                           ;fs_menu_controller.c: 399:             timer_value.second = 0;
  3183  0017F6  0E00               	movlw	0
  3184  0017F8  0100               	movlb	0	; () banked
  3185  0017FA  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3186  0017FC  0E00               	movlw	0
  3187  0017FE  6FF3               	movwf	_timer_value& (0+255),b
  3188                           
  3189                           ;fs_menu_controller.c: 400:             timer_value.minute = 0;
  3190  001800  0E00               	movlw	0
  3191  001802  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3192  001804  0E00               	movlw	0
  3193  001806  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3194  001808                     l5945:
  3195                           
  3196                           ; BSR set to: 0
  3197                           ;fs_menu_controller.c: 403:         if ( timer_value.menu_login_delay == 100)
  3198  001808  0E64               	movlw	100
  3199  00180A  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3200  00180C  A4D8               	btfss	status,2,c
  3201  00180E  EF0B  F00C         	goto	u7441
  3202  001812  EF0D  F00C         	goto	u7440
  3203  001816                     u7441:
  3204  001816  EFC0  F00A         	goto	l5839
  3205  00181A                     u7440:
  3206  00181A                     
  3207                           ; BSR set to: 0
  3208                           ;fs_menu_controller.c: 404:         {;fs_menu_controller.c: 405:             timer_value
      +                          .menu_login_delay = 0;
  3209  00181A  0E00               	movlw	0
  3210  00181C  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3211                           
  3212                           ;fs_menu_controller.c: 406:             menu_selected = DRIVER_TIME_SETTING;
  3213  00181E  0E01               	movlw	1
  3214  001820  0101               	movlb	1	; () banked
  3215  001822  6FBB               	movwf	_menu_selected& (0+255),b
  3216  001824  EFC0  F00A         	goto	l5839
  3217  001828                     l366:
  3218                           
  3219                           ; BSR set to: 0
  3220                           ;fs_menu_controller.c: 414:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  3221  001828  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  3222  00182C  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3223  00182E                     
  3224                           ; BSR set to: 0
  3225                           ;fs_menu_controller.c: 415:             timer_value.remainingSecond = 0;
  3226  00182E  0E00               	movlw	0
  3227  001830  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3228  001832  0E00               	movlw	0
  3229  001834  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3230                           
  3231                           ;fs_menu_controller.c: 416:             startIsClick = 1;
  3232  001836  0E01               	movlw	1
  3233  001838  0101               	movlb	1	; () banked
  3234  00183A  6FBD               	movwf	_startIsClick& (0+255),b
  3235                           
  3236                           ;fs_menu_controller.c: 417:             stopIsClick = 0;
  3237  00183C  0E00               	movlw	0
  3238  00183E  6FBC               	movwf	_stopIsClick& (0+255),b
  3239                           
  3240                           ;fs_menu_controller.c: 418:             menu_selected = MAIN_MENU;
  3241  001840  0E00               	movlw	0
  3242  001842  6FBB               	movwf	_menu_selected& (0+255),b
  3243                           
  3244                           ;fs_menu_controller.c: 419:         break;
  3245  001844  EF47  F00E         	goto	l383
  3246  001848                     l5953:
  3247                           
  3248                           ; BSR set to: 0
  3249                           ;fs_menu_controller.c: 426:             Lcd_Set_Cursor(1,1);
  3250  001848  0E01               	movlw	1
  3251  00184A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3252  00184C  0E01               	movlw	1
  3253  00184E  EC1D  F02B         	call	_Lcd_Set_Cursor
  3254  001852                     
  3255                           ;fs_menu_controller.c: 427:             Lcd_Write_String("HAREKET DURDU   ");
  3256  001852  0E57               	movlw	low STR_11
  3257  001854  6E05               	movwf	Lcd_Write_String@a^0,c
  3258  001856  0E06               	movlw	high STR_11
  3259  001858  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3260  00185A  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3261  00185E                     
  3262                           ;fs_menu_controller.c: 428:             Lcd_Set_Cursor(2,1);
  3263  00185E  0E01               	movlw	1
  3264  001860  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3265  001862  0E02               	movlw	2
  3266  001864  EC1D  F02B         	call	_Lcd_Set_Cursor
  3267  001868                     
  3268                           ;fs_menu_controller.c: 429:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3269  001868  0EE3               	movlw	low stateMachine@textCursor2
  3270  00186A  0100               	movlb	0	; () banked
  3271  00186C  6FCF               	movwf	sprintf@s& (0+255),b
  3272  00186E  0E00               	movlw	high stateMachine@textCursor2
  3273  001870  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3274  001872  0E8A               	movlw	low STR_10
  3275  001874  6FD1               	movwf	sprintf@fmt& (0+255),b
  3276  001876  0E06               	movlw	high STR_10
  3277  001878  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3278  00187A  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3279  00187E  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3280  001882  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3281  001886  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3282  00188A  EC05  F02C         	call	_sprintf	;wreg free
  3283  00188E                     
  3284                           ;fs_menu_controller.c: 430:             Lcd_Write_String(textCursor2);
  3285  00188E  0EE3               	movlw	low stateMachine@textCursor2
  3286  001890  6E05               	movwf	Lcd_Write_String@a^0,c
  3287  001892  0E00               	movlw	high stateMachine@textCursor2
  3288  001894  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3289  001896  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3290  00189A                     
  3291                           ;fs_menu_controller.c: 432:             if (menu_flags.menu_start_flag == 1)
  3292  00189A  0100               	movlb	0	; () banked
  3293  00189C  A3FD               	btfss	_menu_flags& (0+255),1,b
  3294  00189E  EF53  F00C         	goto	u7451
  3295  0018A2  EF55  F00C         	goto	u7450
  3296  0018A6                     u7451:
  3297  0018A6  EF61  F00C         	goto	l368
  3298  0018AA                     u7450:
  3299  0018AA                     
  3300                           ; BSR set to: 0
  3301                           ;fs_menu_controller.c: 433:             {;fs_menu_controller.c: 434:                 men
      +                          u_flags.menu_start_flag = 0;
  3302  0018AA  93FD               	bcf	_menu_flags& (0+255),1,b
  3303  0018AC                     
  3304                           ; BSR set to: 0
  3305                           ;fs_menu_controller.c: 435:                 menu_selected = MAIN_MENU;
  3306  0018AC  0E00               	movlw	0
  3307  0018AE  0101               	movlb	1	; () banked
  3308  0018B0  6FBB               	movwf	_menu_selected& (0+255),b
  3309                           
  3310                           ;fs_menu_controller.c: 437:                 startIsClick = 1;
  3311  0018B2  0E01               	movlw	1
  3312  0018B4  6FBD               	movwf	_startIsClick& (0+255),b
  3313                           
  3314                           ;fs_menu_controller.c: 438:                 pauseIsClick = 0;
  3315  0018B6  0E00               	movlw	0
  3316  0018B8  0100               	movlb	0	; () banked
  3317  0018BA  6FFF               	movwf	_pauseIsClick& (0+255),b
  3318                           
  3319                           ;fs_menu_controller.c: 439:                 stopIsClick = 0;
  3320  0018BC  0E00               	movlw	0
  3321  0018BE  0101               	movlb	1	; () banked
  3322  0018C0  6FBC               	movwf	_stopIsClick& (0+255),b
  3323  0018C2                     l368:
  3324                           
  3325                           ;fs_menu_controller.c: 442:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3326  0018C2  0101               	movlb	1	; () banked
  3327  0018C4  51BD               	movf	_startIsClick& (0+255),w,b
  3328  0018C6  A4D8               	btfss	status,2,c
  3329  0018C8  EF68  F00C         	goto	u7461
  3330  0018CC  EF6A  F00C         	goto	u7460
  3331  0018D0                     u7461:
  3332  0018D0  EF95  F00C         	goto	l5979
  3333  0018D4                     u7460:
  3334  0018D4                     
  3335                           ; BSR set to: 1
  3336  0018D4  0100               	movlb	0	; () banked
  3337  0018D6  51FF               	movf	_pauseIsClick& (0+255),w,b
  3338  0018D8  A4D8               	btfss	status,2,c
  3339  0018DA  EF71  F00C         	goto	u7471
  3340  0018DE  EF73  F00C         	goto	u7470
  3341  0018E2                     u7471:
  3342  0018E2  EF95  F00C         	goto	l5979
  3343  0018E6                     u7470:
  3344  0018E6                     
  3345                           ; BSR set to: 0
  3346  0018E6  0101               	movlb	1	; () banked
  3347  0018E8  05BC               	decf	_stopIsClick& (0+255),w,b
  3348  0018EA  A4D8               	btfss	status,2,c
  3349  0018EC  EF7A  F00C         	goto	u7481
  3350  0018F0  EF7C  F00C         	goto	u7480
  3351  0018F4                     u7481:
  3352  0018F4  EF95  F00C         	goto	l5979
  3353  0018F8                     u7480:
  3354  0018F8                     
  3355                           ; BSR set to: 1
  3356  0018F8  0E06               	movlw	6
  3357  0018FA  19BB               	xorwf	_menu_selected& (0+255),w,b
  3358  0018FC  A4D8               	btfss	status,2,c
  3359  0018FE  EF83  F00C         	goto	u7491
  3360  001902  EF85  F00C         	goto	u7490
  3361  001906                     u7491:
  3362  001906  EF95  F00C         	goto	l5979
  3363  00190A                     u7490:
  3364  00190A                     
  3365                           ; BSR set to: 1
  3366                           ;fs_menu_controller.c: 443:             {;fs_menu_controller.c: 444:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3367  00190A  C1AF  F0F9         	movff	_menu_value,_timer_value+6
  3368  00190E  0100               	movlb	0	; () banked
  3369  001910  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3370  001912                     
  3371                           ; BSR set to: 0
  3372                           ;fs_menu_controller.c: 445:                  timer_value.remainingSecond = 0;
  3373  001912  0E00               	movlw	0
  3374  001914  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3375  001916  0E00               	movlw	0
  3376  001918  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3377                           
  3378                           ;fs_menu_controller.c: 446:                  timer_value.second = 0;
  3379  00191A  0E00               	movlw	0
  3380  00191C  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3381  00191E  0E00               	movlw	0
  3382  001920  6FF3               	movwf	_timer_value& (0+255),b
  3383                           
  3384                           ;fs_menu_controller.c: 447:                  timer_value.minute = 0;
  3385  001922  0E00               	movlw	0
  3386  001924  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3387  001926  0E00               	movlw	0
  3388  001928  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3389  00192A                     l5979:
  3390                           
  3391                           ;fs_menu_controller.c: 451:             if ( timer_value.menu_login_delay == 100)
  3392  00192A  0E64               	movlw	100
  3393  00192C  0100               	movlb	0	; () banked
  3394  00192E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3395  001930  A4D8               	btfss	status,2,c
  3396  001932  EF9D  F00C         	goto	u7501
  3397  001936  EF9F  F00C         	goto	u7500
  3398  00193A                     u7501:
  3399  00193A  EFA4  F00C         	goto	l5983
  3400  00193E                     u7500:
  3401  00193E                     
  3402                           ; BSR set to: 0
  3403                           ;fs_menu_controller.c: 452:             {;fs_menu_controller.c: 453:                 tim
      +                          er_value.menu_login_delay = 0;
  3404  00193E  0E00               	movlw	0
  3405  001940  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3406                           
  3407                           ;fs_menu_controller.c: 454:                 menu_selected = DRIVER_TIME_SETTING;
  3408  001942  0E01               	movlw	1
  3409  001944  0101               	movlb	1	; () banked
  3410  001946  6FBB               	movwf	_menu_selected& (0+255),b
  3411  001948                     l5983:
  3412                           
  3413                           ;fs_menu_controller.c: 457:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3414  001948  0100               	movlb	0	; () banked
  3415  00194A  A9FD               	btfss	_menu_flags& (0+255),4,b
  3416  00194C  EFAA  F00C         	goto	u7511
  3417  001950  EFAC  F00C         	goto	u7510
  3418  001954                     u7511:
  3419  001954  EFC0  F00A         	goto	l5839
  3420  001958                     u7510:
  3421  001958                     
  3422                           ; BSR set to: 0
  3423  001958  ABFD               	btfss	_menu_flags& (0+255),5,b
  3424  00195A  EFB1  F00C         	goto	u7521
  3425  00195E  EFB3  F00C         	goto	u7520
  3426  001962                     u7521:
  3427  001962  EFC0  F00A         	goto	l5839
  3428  001966                     u7520:
  3429  001966                     
  3430                           ; BSR set to: 0
  3431                           ;fs_menu_controller.c: 458:             {;fs_menu_controller.c: 459:                 men
      +                          u_selected = SECRET_MENU;
  3432  001966  0E08               	movlw	8
  3433  001968  0101               	movlb	1	; () banked
  3434  00196A  6FBB               	movwf	_menu_selected& (0+255),b
  3435                           
  3436                           ;fs_menu_controller.c: 460:                 secretMenuCounter = 1;
  3437  00196C  0E01               	movlw	1
  3438  00196E  6FBA               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3439  001970  EFC0  F00A         	goto	l5839
  3440  001974                     l5991:
  3441                           
  3442                           ; BSR set to: 0
  3443                           ;fs_menu_controller.c: 473:             stopMotor();
  3444  001974  ECFC  F02C         	call	_stopMotor	;wreg free
  3445  001978                     
  3446                           ;fs_menu_controller.c: 475:             if (menu_flags.menu_input_flag == 1)
  3447  001978  0100               	movlb	0	; () banked
  3448  00197A  A1FD               	btfss	_menu_flags& (0+255),0,b
  3449  00197C  EFC2  F00C         	goto	u7531
  3450  001980  EFC4  F00C         	goto	u7530
  3451  001984                     u7531:
  3452  001984  EFD1  F00C         	goto	l6003
  3453  001988                     u7530:
  3454  001988                     
  3455                           ; BSR set to: 0
  3456                           ;fs_menu_controller.c: 476:             {;fs_menu_controller.c: 477:                 men
      +                          u_flags.menu_input_flag = 0;
  3457  001988  91FD               	bcf	_menu_flags& (0+255),0,b
  3458  00198A                     
  3459                           ; BSR set to: 0
  3460                           ;fs_menu_controller.c: 478:                 secretMenuCounter++;
  3461  00198A  0101               	movlb	1	; () banked
  3462  00198C  2BBA               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3463  00198E                     
  3464                           ; BSR set to: 1
  3465                           ;fs_menu_controller.c: 480:                 if (secretMenuCounter >2)
  3466  00198E  0E02               	movlw	2
  3467  001990  65BA               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3468  001992  EFCD  F00C         	goto	u7541
  3469  001996  EFCF  F00C         	goto	u7540
  3470  00199A                     u7541:
  3471  00199A  EFD1  F00C         	goto	l6003
  3472  00199E                     u7540:
  3473  00199E                     
  3474                           ; BSR set to: 1
  3475                           ;fs_menu_controller.c: 481:                 {;fs_menu_controller.c: 482:                
      +                               secretMenuCounter = 1;
  3476  00199E  0E01               	movlw	1
  3477  0019A0  6FBA               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3478  0019A2                     l6003:
  3479                           
  3480                           ;fs_menu_controller.c: 486:             if (secretMenuCounter == 1)
  3481  0019A2  0101               	movlb	1	; () banked
  3482  0019A4  05BA               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3483  0019A6  A4D8               	btfss	status,2,c
  3484  0019A8  EFD8  F00C         	goto	u7551
  3485  0019AC  EFDA  F00C         	goto	u7550
  3486  0019B0                     u7551:
  3487  0019B0  EF6C  F00D         	goto	l6031
  3488  0019B4                     u7550:
  3489  0019B4                     
  3490                           ; BSR set to: 1
  3491                           ;fs_menu_controller.c: 487:             {;fs_menu_controller.c: 488:                 Lcd
      +                          _Set_Cursor(1,1);
  3492  0019B4  0E01               	movlw	1
  3493  0019B6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3494  0019B8  0E01               	movlw	1
  3495  0019BA  EC1D  F02B         	call	_Lcd_Set_Cursor
  3496  0019BE                     
  3497                           ;fs_menu_controller.c: 489:                 Lcd_Write_String("PID PARAM       ");
  3498  0019BE  0E13               	movlw	low STR_13
  3499  0019C0  6E05               	movwf	Lcd_Write_String@a^0,c
  3500  0019C2  0E06               	movlw	high STR_13
  3501  0019C4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3502  0019C6  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3503  0019CA                     
  3504                           ;fs_menu_controller.c: 490:                 Lcd_Set_Cursor(2,1);
  3505  0019CA  0E01               	movlw	1
  3506  0019CC  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3507  0019CE  0E02               	movlw	2
  3508  0019D0  EC1D  F02B         	call	_Lcd_Set_Cursor
  3509  0019D4                     
  3510                           ;fs_menu_controller.c: 491:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3511  0019D4  0EE3               	movlw	low stateMachine@textCursor2
  3512  0019D6  0100               	movlb	0	; () banked
  3513  0019D8  6FCF               	movwf	sprintf@s& (0+255),b
  3514  0019DA  0E00               	movlw	high stateMachine@textCursor2
  3515  0019DC  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3516  0019DE  0EA9               	movlw	low STR_14
  3517  0019E0  6FD1               	movwf	sprintf@fmt& (0+255),b
  3518  0019E2  0E06               	movlw	high STR_14
  3519  0019E4  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3520  0019E6  C1CB  F0D3         	movff	_KP@fs_speed_controller$F1598,?_sprintf+4
  3521  0019EA  C1CC  F0D4         	movff	_KP@fs_speed_controller$F1598+1,?_sprintf+5
  3522  0019EE  C1CD  F0D5         	movff	_KP@fs_speed_controller$F1598+2,?_sprintf+6
  3523  0019F2  C1CE  F0D6         	movff	_KP@fs_speed_controller$F1598+3,?_sprintf+7
  3524  0019F6  EC05  F02C         	call	_sprintf	;wreg free
  3525  0019FA                     
  3526                           ;fs_menu_controller.c: 492:                 Lcd_Write_String(textCursor2);
  3527  0019FA  0EE3               	movlw	low stateMachine@textCursor2
  3528  0019FC  6E05               	movwf	Lcd_Write_String@a^0,c
  3529  0019FE  0E00               	movlw	high stateMachine@textCursor2
  3530  001A00  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3531  001A02  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3532  001A06                     
  3533                           ;fs_menu_controller.c: 494:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3534  001A06  0100               	movlb	0	; () banked
  3535  001A08  A9FD               	btfss	_menu_flags& (0+255),4,b
  3536  001A0A  EF09  F00D         	goto	u7561
  3537  001A0E  EF0B  F00D         	goto	u7560
  3538  001A12                     u7561:
  3539  001A12  EF40  F00D         	goto	l6023
  3540  001A16                     u7560:
  3541  001A16                     
  3542                           ; BSR set to: 0
  3543  001A16  C1CB  F035         	movff	_KP@fs_speed_controller$F1598,___flge@ff1
  3544  001A1A  C1CC  F036         	movff	_KP@fs_speed_controller$F1598+1,___flge@ff1+1
  3545  001A1E  C1CD  F037         	movff	_KP@fs_speed_controller$F1598+2,___flge@ff1+2
  3546  001A22  C1CE  F038         	movff	_KP@fs_speed_controller$F1598+3,___flge@ff1+3
  3547  001A26  0E00               	movlw	0
  3548  001A28  6E39               	movwf	___flge@ff2^0,c
  3549  001A2A  0E00               	movlw	0
  3550  001A2C  6E3A               	movwf	(___flge@ff2+1)^0,c
  3551  001A2E  0E20               	movlw	32
  3552  001A30  6E3B               	movwf	(___flge@ff2+2)^0,c
  3553  001A32  0E40               	movlw	64
  3554  001A34  6E3C               	movwf	(___flge@ff2+3)^0,c
  3555  001A36  EC66  F025         	call	___flge	;wreg free
  3556  001A3A  B0D8               	btfsc	status,0,c
  3557  001A3C  EF22  F00D         	goto	u7571
  3558  001A40  EF24  F00D         	goto	u7570
  3559  001A44                     u7571:
  3560  001A44  EF40  F00D         	goto	l6023
  3561  001A48                     u7570:
  3562  001A48                     
  3563                           ;fs_menu_controller.c: 495:                 {;fs_menu_controller.c: 496:                
      +                               menu_flags.menu_increase_flag = 0;
  3564  001A48  0100               	movlb	0	; () banked
  3565  001A4A  99FD               	bcf	_menu_flags& (0+255),4,b
  3566  001A4C                     
  3567                           ; BSR set to: 0
  3568                           ;fs_menu_controller.c: 497:                     KP += 0.1;
  3569  001A4C  C1CB  F035         	movff	_KP@fs_speed_controller$F1598,___fladd@b
  3570  001A50  C1CC  F036         	movff	_KP@fs_speed_controller$F1598+1,___fladd@b+1
  3571  001A54  C1CD  F037         	movff	_KP@fs_speed_controller$F1598+2,___fladd@b+2
  3572  001A58  C1CE  F038         	movff	_KP@fs_speed_controller$F1598+3,___fladd@b+3
  3573  001A5C  0ECD               	movlw	205
  3574  001A5E  6E39               	movwf	___fladd@a^0,c
  3575  001A60  0ECC               	movlw	204
  3576  001A62  6E3A               	movwf	(___fladd@a+1)^0,c
  3577  001A64  0ECC               	movlw	204
  3578  001A66  6E3B               	movwf	(___fladd@a+2)^0,c
  3579  001A68  0E3D               	movlw	61
  3580  001A6A  6E3C               	movwf	(___fladd@a+3)^0,c
  3581  001A6C  EC66  F015         	call	___fladd	;wreg free
  3582  001A70  C035  F1CB         	movff	?___fladd,_KP@fs_speed_controller$F1598
  3583  001A74  C036  F1CC         	movff	?___fladd+1,_KP@fs_speed_controller$F1598+1
  3584  001A78  C037  F1CD         	movff	?___fladd+2,_KP@fs_speed_controller$F1598+2
  3585  001A7C  C038  F1CE         	movff	?___fladd+3,_KP@fs_speed_controller$F1598+3
  3586  001A80                     l6023:
  3587                           
  3588                           ;fs_menu_controller.c: 500:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3589  001A80  0100               	movlb	0	; () banked
  3590  001A82  ABFD               	btfss	_menu_flags& (0+255),5,b
  3591  001A84  EF46  F00D         	goto	u7581
  3592  001A88  EF48  F00D         	goto	u7580
  3593  001A8C                     u7581:
  3594  001A8C  EF6C  F00D         	goto	l6031
  3595  001A90                     u7580:
  3596  001A90                     
  3597                           ; BSR set to: 0
  3598  001A90  0101               	movlb	1	; () banked
  3599  001A92  BFCE               	btfsc	(_KP@fs_speed_controller$F1598+3)& (0+255),7,b
  3600  001A94  EF4E  F00D         	goto	u7591
  3601  001A98  EF50  F00D         	goto	u7590
  3602  001A9C                     u7591:
  3603  001A9C  EF6C  F00D         	goto	l6031
  3604  001AA0                     u7590:
  3605  001AA0                     
  3606                           ; BSR set to: 1
  3607                           ;fs_menu_controller.c: 501:                 {;fs_menu_controller.c: 502:                
      +                               menu_flags.menu_decrease_flag = 0;
  3608  001AA0  0100               	movlb	0	; () banked
  3609  001AA2  9BFD               	bcf	_menu_flags& (0+255),5,b
  3610  001AA4                     
  3611                           ; BSR set to: 0
  3612                           ;fs_menu_controller.c: 503:                      KP -= 0.1;
  3613  001AA4  C1CB  F045         	movff	_KP@fs_speed_controller$F1598,___flsub@b
  3614  001AA8  C1CC  F046         	movff	_KP@fs_speed_controller$F1598+1,___flsub@b+1
  3615  001AAC  C1CD  F047         	movff	_KP@fs_speed_controller$F1598+2,___flsub@b+2
  3616  001AB0  C1CE  F048         	movff	_KP@fs_speed_controller$F1598+3,___flsub@b+3
  3617  001AB4  0ECD               	movlw	205
  3618  001AB6  6E49               	movwf	___flsub@a^0,c
  3619  001AB8  0ECC               	movlw	204
  3620  001ABA  6E4A               	movwf	(___flsub@a+1)^0,c
  3621  001ABC  0ECC               	movlw	204
  3622  001ABE  6E4B               	movwf	(___flsub@a+2)^0,c
  3623  001AC0  0E3D               	movlw	61
  3624  001AC2  6E4C               	movwf	(___flsub@a+3)^0,c
  3625  001AC4  EC57  F02C         	call	___flsub	;wreg free
  3626  001AC8  C045  F1CB         	movff	?___flsub,_KP@fs_speed_controller$F1598
  3627  001ACC  C046  F1CC         	movff	?___flsub+1,_KP@fs_speed_controller$F1598+1
  3628  001AD0  C047  F1CD         	movff	?___flsub+2,_KP@fs_speed_controller$F1598+2
  3629  001AD4  C048  F1CE         	movff	?___flsub+3,_KP@fs_speed_controller$F1598+3
  3630  001AD8                     l6031:
  3631                           
  3632                           ;fs_menu_controller.c: 507:             if (secretMenuCounter == 2)
  3633  001AD8  0E02               	movlw	2
  3634  001ADA  0101               	movlb	1	; () banked
  3635  001ADC  19BA               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3636  001ADE  A4D8               	btfss	status,2,c
  3637  001AE0  EF74  F00D         	goto	u7601
  3638  001AE4  EF76  F00D         	goto	u7600
  3639  001AE8                     u7601:
  3640  001AE8  EF08  F00E         	goto	l6059
  3641  001AEC                     u7600:
  3642  001AEC                     
  3643                           ; BSR set to: 1
  3644                           ;fs_menu_controller.c: 508:             {;fs_menu_controller.c: 509:                 Lcd
      +                          _Set_Cursor(1,1);
  3645  001AEC  0E01               	movlw	1
  3646  001AEE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3647  001AF0  0E01               	movlw	1
  3648  001AF2  EC1D  F02B         	call	_Lcd_Set_Cursor
  3649  001AF6                     
  3650                           ;fs_menu_controller.c: 510:                 Lcd_Write_String("PID PARAM       ");
  3651  001AF6  0E13               	movlw	low STR_13
  3652  001AF8  6E05               	movwf	Lcd_Write_String@a^0,c
  3653  001AFA  0E06               	movlw	high STR_13
  3654  001AFC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3655  001AFE  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3656  001B02                     
  3657                           ;fs_menu_controller.c: 511:                 Lcd_Set_Cursor(2,1);
  3658  001B02  0E01               	movlw	1
  3659  001B04  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3660  001B06  0E02               	movlw	2
  3661  001B08  EC1D  F02B         	call	_Lcd_Set_Cursor
  3662  001B0C                     
  3663                           ;fs_menu_controller.c: 512:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3664  001B0C  0EE3               	movlw	low stateMachine@textCursor2
  3665  001B0E  0100               	movlb	0	; () banked
  3666  001B10  6FCF               	movwf	sprintf@s& (0+255),b
  3667  001B12  0E00               	movlw	high stateMachine@textCursor2
  3668  001B14  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3669  001B16  0EB7               	movlw	low STR_16
  3670  001B18  6FD1               	movwf	sprintf@fmt& (0+255),b
  3671  001B1A  0E06               	movlw	high STR_16
  3672  001B1C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3673  001B1E  C1C7  F0D3         	movff	_KD@fs_speed_controller$F1599,?_sprintf+4
  3674  001B22  C1C8  F0D4         	movff	_KD@fs_speed_controller$F1599+1,?_sprintf+5
  3675  001B26  C1C9  F0D5         	movff	_KD@fs_speed_controller$F1599+2,?_sprintf+6
  3676  001B2A  C1CA  F0D6         	movff	_KD@fs_speed_controller$F1599+3,?_sprintf+7
  3677  001B2E  EC05  F02C         	call	_sprintf	;wreg free
  3678  001B32                     
  3679                           ;fs_menu_controller.c: 513:                 Lcd_Write_String(textCursor2);
  3680  001B32  0EE3               	movlw	low stateMachine@textCursor2
  3681  001B34  6E05               	movwf	Lcd_Write_String@a^0,c
  3682  001B36  0E00               	movlw	high stateMachine@textCursor2
  3683  001B38  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3684  001B3A  ECC3  F029         	call	_Lcd_Write_String	;wreg free
  3685  001B3E                     
  3686                           ;fs_menu_controller.c: 515:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3687  001B3E  0100               	movlb	0	; () banked
  3688  001B40  A9FD               	btfss	_menu_flags& (0+255),4,b
  3689  001B42  EFA5  F00D         	goto	u7611
  3690  001B46  EFA7  F00D         	goto	u7610
  3691  001B4A                     u7611:
  3692  001B4A  EFDC  F00D         	goto	l6051
  3693  001B4E                     u7610:
  3694  001B4E                     
  3695                           ; BSR set to: 0
  3696  001B4E  C1C7  F035         	movff	_KD@fs_speed_controller$F1599,___flge@ff1
  3697  001B52  C1C8  F036         	movff	_KD@fs_speed_controller$F1599+1,___flge@ff1+1
  3698  001B56  C1C9  F037         	movff	_KD@fs_speed_controller$F1599+2,___flge@ff1+2
  3699  001B5A  C1CA  F038         	movff	_KD@fs_speed_controller$F1599+3,___flge@ff1+3
  3700  001B5E  0E00               	movlw	0
  3701  001B60  6E39               	movwf	___flge@ff2^0,c
  3702  001B62  0E00               	movlw	0
  3703  001B64  6E3A               	movwf	(___flge@ff2+1)^0,c
  3704  001B66  0E20               	movlw	32
  3705  001B68  6E3B               	movwf	(___flge@ff2+2)^0,c
  3706  001B6A  0E40               	movlw	64
  3707  001B6C  6E3C               	movwf	(___flge@ff2+3)^0,c
  3708  001B6E  EC66  F025         	call	___flge	;wreg free
  3709  001B72  B0D8               	btfsc	status,0,c
  3710  001B74  EFBE  F00D         	goto	u7621
  3711  001B78  EFC0  F00D         	goto	u7620
  3712  001B7C                     u7621:
  3713  001B7C  EFDC  F00D         	goto	l6051
  3714  001B80                     u7620:
  3715  001B80                     
  3716                           ;fs_menu_controller.c: 516:                 {;fs_menu_controller.c: 517:                
      +                               menu_flags.menu_increase_flag = 0;
  3717  001B80  0100               	movlb	0	; () banked
  3718  001B82  99FD               	bcf	_menu_flags& (0+255),4,b
  3719  001B84                     
  3720                           ; BSR set to: 0
  3721                           ;fs_menu_controller.c: 518:                     KD += 0.1;
  3722  001B84  C1C7  F035         	movff	_KD@fs_speed_controller$F1599,___fladd@b
  3723  001B88  C1C8  F036         	movff	_KD@fs_speed_controller$F1599+1,___fladd@b+1
  3724  001B8C  C1C9  F037         	movff	_KD@fs_speed_controller$F1599+2,___fladd@b+2
  3725  001B90  C1CA  F038         	movff	_KD@fs_speed_controller$F1599+3,___fladd@b+3
  3726  001B94  0ECD               	movlw	205
  3727  001B96  6E39               	movwf	___fladd@a^0,c
  3728  001B98  0ECC               	movlw	204
  3729  001B9A  6E3A               	movwf	(___fladd@a+1)^0,c
  3730  001B9C  0ECC               	movlw	204
  3731  001B9E  6E3B               	movwf	(___fladd@a+2)^0,c
  3732  001BA0  0E3D               	movlw	61
  3733  001BA2  6E3C               	movwf	(___fladd@a+3)^0,c
  3734  001BA4  EC66  F015         	call	___fladd	;wreg free
  3735  001BA8  C035  F1C7         	movff	?___fladd,_KD@fs_speed_controller$F1599
  3736  001BAC  C036  F1C8         	movff	?___fladd+1,_KD@fs_speed_controller$F1599+1
  3737  001BB0  C037  F1C9         	movff	?___fladd+2,_KD@fs_speed_controller$F1599+2
  3738  001BB4  C038  F1CA         	movff	?___fladd+3,_KD@fs_speed_controller$F1599+3
  3739  001BB8                     l6051:
  3740                           
  3741                           ;fs_menu_controller.c: 521:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3742  001BB8  0100               	movlb	0	; () banked
  3743  001BBA  ABFD               	btfss	_menu_flags& (0+255),5,b
  3744  001BBC  EFE2  F00D         	goto	u7631
  3745  001BC0  EFE4  F00D         	goto	u7630
  3746  001BC4                     u7631:
  3747  001BC4  EF08  F00E         	goto	l6059
  3748  001BC8                     u7630:
  3749  001BC8                     
  3750                           ; BSR set to: 0
  3751  001BC8  0101               	movlb	1	; () banked
  3752  001BCA  BFCA               	btfsc	(_KD@fs_speed_controller$F1599+3)& (0+255),7,b
  3753  001BCC  EFEA  F00D         	goto	u7641
  3754  001BD0  EFEC  F00D         	goto	u7640
  3755  001BD4                     u7641:
  3756  001BD4  EF08  F00E         	goto	l6059
  3757  001BD8                     u7640:
  3758  001BD8                     
  3759                           ; BSR set to: 1
  3760                           ;fs_menu_controller.c: 522:                 {;fs_menu_controller.c: 523:                
      +                               menu_flags.menu_decrease_flag = 0;
  3761  001BD8  0100               	movlb	0	; () banked
  3762  001BDA  9BFD               	bcf	_menu_flags& (0+255),5,b
  3763  001BDC                     
  3764                           ; BSR set to: 0
  3765                           ;fs_menu_controller.c: 524:                      KD -= 0.1;
  3766  001BDC  C1C7  F045         	movff	_KD@fs_speed_controller$F1599,___flsub@b
  3767  001BE0  C1C8  F046         	movff	_KD@fs_speed_controller$F1599+1,___flsub@b+1
  3768  001BE4  C1C9  F047         	movff	_KD@fs_speed_controller$F1599+2,___flsub@b+2
  3769  001BE8  C1CA  F048         	movff	_KD@fs_speed_controller$F1599+3,___flsub@b+3
  3770  001BEC  0ECD               	movlw	205
  3771  001BEE  6E49               	movwf	___flsub@a^0,c
  3772  001BF0  0ECC               	movlw	204
  3773  001BF2  6E4A               	movwf	(___flsub@a+1)^0,c
  3774  001BF4  0ECC               	movlw	204
  3775  001BF6  6E4B               	movwf	(___flsub@a+2)^0,c
  3776  001BF8  0E3D               	movlw	61
  3777  001BFA  6E4C               	movwf	(___flsub@a+3)^0,c
  3778  001BFC  EC57  F02C         	call	___flsub	;wreg free
  3779  001C00  C045  F1C7         	movff	?___flsub,_KD@fs_speed_controller$F1599
  3780  001C04  C046  F1C8         	movff	?___flsub+1,_KD@fs_speed_controller$F1599+1
  3781  001C08  C047  F1C9         	movff	?___flsub+2,_KD@fs_speed_controller$F1599+2
  3782  001C0C  C048  F1CA         	movff	?___flsub+3,_KD@fs_speed_controller$F1599+3
  3783  001C10                     l6059:
  3784                           
  3785                           ;fs_menu_controller.c: 528:             if ( timer_value.menu_login_delay == 100)
  3786  001C10  0E64               	movlw	100
  3787  001C12  0100               	movlb	0	; () banked
  3788  001C14  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3789  001C16  A4D8               	btfss	status,2,c
  3790  001C18  EF10  F00E         	goto	u7651
  3791  001C1C  EF12  F00E         	goto	u7650
  3792  001C20                     u7651:
  3793  001C20  EF47  F00E         	goto	l383
  3794  001C24                     u7650:
  3795  001C24  EF36  F00B         	goto	l5881
  3796  001C28                     l6065:
  3797  001C28  0101               	movlb	1	; () banked
  3798  001C2A  51BB               	movf	_menu_selected& (0+255),w,b
  3799  001C2C  0100               	movlb	0	; () banked
  3800  001C2E  6FE1               	movwf	??_stateMachine& (0+255),b
  3801  001C30  6BE2               	clrf	(??_stateMachine+1)& (0+255),b
  3802                           
  3803                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3804                           ; Switch size 1, requested type "simple"
  3805                           ; Number of cases is 1, Range of values is 0 to 0
  3806                           ; switch strategies available:
  3807                           ; Name         Instructions Cycles
  3808                           ; simple_byte            4     3 (average)
  3809                           ;	Chosen strategy is simple_byte
  3810  001C32  51E2               	movf	(??_stateMachine+1)& (0+255),w,b
  3811  001C34  0A00               	xorlw	0	; case 0
  3812  001C36  B4D8               	btfsc	status,2,c
  3813  001C38  EF20  F00E         	goto	l6305
  3814  001C3C  EF47  F00E         	goto	l383
  3815  001C40                     l6305:
  3816                           
  3817                           ; BSR set to: 0
  3818                           ; Switch size 1, requested type "simple"
  3819                           ; Number of cases is 9, Range of values is 0 to 8
  3820                           ; switch strategies available:
  3821                           ; Name         Instructions Cycles
  3822                           ; simple_byte           28    15 (average)
  3823                           ;	Chosen strategy is simple_byte
  3824  001C40  51E1               	movf	??_stateMachine& (0+255),w,b
  3825  001C42  0A00               	xorlw	0	; case 0
  3826  001C44  B4D8               	btfsc	status,2,c
  3827  001C46  EF57  F009         	goto	l5721
  3828  001C4A  0A01               	xorlw	1	; case 1
  3829  001C4C  B4D8               	btfsc	status,2,c
  3830  001C4E  EF2E  F00A         	goto	l348
  3831  001C52  0A03               	xorlw	3	; case 2
  3832  001C54  B4D8               	btfsc	status,2,c
  3833  001C56  EFC4  F00A         	goto	l5841
  3834  001C5A  0A01               	xorlw	1	; case 3
  3835  001C5C  B4D8               	btfsc	status,2,c
  3836  001C5E  EF3D  F00B         	goto	l358
  3837  001C62  0A07               	xorlw	7	; case 4
  3838  001C64  B4D8               	btfsc	status,2,c
  3839  001C66  EFAC  F00B         	goto	l5923
  3840  001C6A  0A01               	xorlw	1	; case 5
  3841  001C6C  B4D8               	btfsc	status,2,c
  3842  001C6E  EF14  F00C         	goto	l366
  3843  001C72  0A03               	xorlw	3	; case 6
  3844  001C74  B4D8               	btfsc	status,2,c
  3845  001C76  EF24  F00C         	goto	l5953
  3846  001C7A  0A01               	xorlw	1	; case 7
  3847  001C7C  B4D8               	btfsc	status,2,c
  3848  001C7E  EF47  F00E         	goto	l383
  3849  001C82  0A0F               	xorlw	15	; case 8
  3850  001C84  B4D8               	btfsc	status,2,c
  3851  001C86  EFBA  F00C         	goto	l5991
  3852  001C8A  EF47  F00E         	goto	l383
  3853  001C8E                     l383:
  3854  001C8E  0012               	return		;funcret
  3855  001C90                     __end_of_stateMachine:
  3856                           	callstack 0
  3857                           
  3858 ;; *************** function _stopMotor *****************
  3859 ;; Defined at:
  3860 ;;		line 79 in file "fs_speed_controller.c"
  3861 ;; Parameters:    Size  Location     Type
  3862 ;;		None
  3863 ;; Auto vars:     Size  Location     Type
  3864 ;;		None
  3865 ;; Return value:  Size  Location     Type
  3866 ;;                  1    wreg      void 
  3867 ;; Registers used:
  3868 ;;		wreg, status,2, status,0, cstack
  3869 ;; Tracked objects:
  3870 ;;		On entry : 0/0
  3871 ;;		On exit  : 0/0
  3872 ;;		Unchanged: 0/0
  3873 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3874 ;;      Params:         0       0       0       0       0       0       0
  3875 ;;      Locals:         0       0       0       0       0       0       0
  3876 ;;      Temps:          0       0       0       0       0       0       0
  3877 ;;      Totals:         0       0       0       0       0       0       0
  3878 ;;Total ram usage:        0 bytes
  3879 ;; Hardware stack levels used:    1
  3880 ;; Hardware stack levels required when called:    3
  3881 ;; This function calls:
  3882 ;;		_PWM1_setDC
  3883 ;;		_PWM2_setDC
  3884 ;; This function is called by:
  3885 ;;		_stateMachine
  3886 ;; This function uses a non-reentrant model
  3887 ;;
  3888                           
  3889                           	psect	text7
  3890  0059F8                     __ptext7:
  3891                           	callstack 0
  3892  0059F8                     _stopMotor:
  3893                           	callstack 25
  3894  0059F8                     
  3895                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  3896  0059F8  0E00               	movlw	0
  3897  0059FA  0101               	movlb	1	; () banked
  3898  0059FC  6F59               	movwf	(_controller+9)& (0+255),b
  3899  0059FE  0E00               	movlw	0
  3900  005A00  6F58               	movwf	(_controller+8)& (0+255),b
  3901                           
  3902                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  3903  005A02  0E00               	movlw	0
  3904  005A04  6F57               	movwf	(_controller+7)& (0+255),b
  3905  005A06  0E00               	movlw	0
  3906  005A08  6F56               	movwf	(_controller+6)& (0+255),b
  3907                           
  3908                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  3909  005A0A  0E00               	movlw	0
  3910  005A0C  6F9B               	movwf	(_driver_limit+8)& (0+255),b
  3911  005A0E  0E00               	movlw	0
  3912  005A10  6F9C               	movwf	(_driver_limit+9)& (0+255),b
  3913  005A12  0E00               	movlw	0
  3914  005A14  6F9D               	movwf	(_driver_limit+10)& (0+255),b
  3915  005A16  0E00               	movlw	0
  3916  005A18  6F9E               	movwf	(_driver_limit+11)& (0+255),b
  3917  005A1A                     
  3918                           ; BSR set to: 1
  3919                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  3920  005A1A  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3921  005A1E  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3922  005A22  EC3F  F02A         	call	_PWM1_setDC	;wreg free
  3923  005A26                     
  3924                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  3925  005A26  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3926  005A2A  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3927  005A2E  EC02  F02A         	call	_PWM2_setDC	;wreg free
  3928  005A32  0012               	return		;funcret
  3929  005A34                     __end_of_stopMotor:
  3930                           	callstack 0
  3931                           
  3932 ;; *************** function _startMotor *****************
  3933 ;; Defined at:
  3934 ;;		line 95 in file "fs_speed_controller.c"
  3935 ;; Parameters:    Size  Location     Type
  3936 ;;		None
  3937 ;; Auto vars:     Size  Location     Type
  3938 ;;		None
  3939 ;; Return value:  Size  Location     Type
  3940 ;;                  1    wreg      void 
  3941 ;; Registers used:
  3942 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  3943 ;; Tracked objects:
  3944 ;;		On entry : 0/0
  3945 ;;		On exit  : 0/0
  3946 ;;		Unchanged: 0/0
  3947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3948 ;;      Params:         0       0       0       0       0       0       0
  3949 ;;      Locals:         0       0       0       0       0       0       0
  3950 ;;      Temps:          0       0       0       0       0       0       0
  3951 ;;      Totals:         0       0       0       0       0       0       0
  3952 ;;Total ram usage:        0 bytes
  3953 ;; Hardware stack levels used:    1
  3954 ;; Hardware stack levels required when called:    3
  3955 ;; This function calls:
  3956 ;;		_PWM1_setDC
  3957 ;;		_PWM2_setDC
  3958 ;;		_calculatedAverageValue
  3959 ;;		_scanAdcConversion
  3960 ;;		_speedControl
  3961 ;; This function is called by:
  3962 ;;		_stateMachine
  3963 ;; This function uses a non-reentrant model
  3964 ;;
  3965                           
  3966                           	psect	text8
  3967  005ADC                     __ptext8:
  3968                           	callstack 0
  3969  005ADC                     _startMotor:
  3970                           	callstack 25
  3971  005ADC                     
  3972                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  3973  005ADC  EC48  F00E         	call	_scanAdcConversion	;wreg free
  3974  005AE0                     
  3975                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  3976  005AE0  ECA8  F01B         	call	_calculatedAverageValue	;wreg free
  3977  005AE4                     
  3978                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  3979  005AE4  C19B  F058         	movff	_driver_limit+8,speedControl@position
  3980  005AE8  C19C  F059         	movff	_driver_limit+9,speedControl@position+1
  3981  005AEC  C19D  F05A         	movff	_driver_limit+10,speedControl@position+2
  3982  005AF0  C19E  F05B         	movff	_driver_limit+11,speedControl@position+3
  3983  005AF4  EC98  F01F         	call	_speedControl	;wreg free
  3984                           
  3985                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  3986  005AF8  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3987  005AFC  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3988  005B00  EC3F  F02A         	call	_PWM1_setDC	;wreg free
  3989                           
  3990                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  3991  005B04  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3992  005B08  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3993  005B0C  EC02  F02A         	call	_PWM2_setDC	;wreg free
  3994  005B10  0012               	return		;funcret
  3995  005B12                     __end_of_startMotor:
  3996                           	callstack 0
  3997                           
  3998 ;; *************** function _speedControl *****************
  3999 ;; Defined at:
  4000 ;;		line 38 in file "fs_speed_controller.c"
  4001 ;; Parameters:    Size  Location     Type
  4002 ;;  position        4   87[COMRAM] float 
  4003 ;; Auto vars:     Size  Location     Type
  4004 ;;  pos             4    0        float 
  4005 ;; Return value:  Size  Location     Type
  4006 ;;                  1    wreg      void 
  4007 ;; Registers used:
  4008 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4009 ;; Tracked objects:
  4010 ;;		On entry : 0/0
  4011 ;;		On exit  : 0/0
  4012 ;;		Unchanged: 0/0
  4013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4014 ;;      Params:         4       0       0       0       0       0       0
  4015 ;;      Locals:         0       4       0       0       0       0       0
  4016 ;;      Temps:          2       0       0       0       0       0       0
  4017 ;;      Totals:         6       4       0       0       0       0       0
  4018 ;;Total ram usage:       10 bytes
  4019 ;; Hardware stack levels used:    1
  4020 ;; Hardware stack levels required when called:    2
  4021 ;; This function calls:
  4022 ;;		___fladd
  4023 ;;		___flmul
  4024 ;;		___fltol
  4025 ;;		___xxtofl
  4026 ;; This function is called by:
  4027 ;;		_startMotor
  4028 ;; This function uses a non-reentrant model
  4029 ;;
  4030                           
  4031                           	psect	text9
  4032  003F30                     __ptext9:
  4033                           	callstack 0
  4034  003F30                     _speedControl:
  4035                           	callstack 25
  4036  003F30                     
  4037                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  4038  003F30  0E00               	movlw	0
  4039  003F32  6E39               	movwf	___fladd@a^0,c
  4040  003F34  0E80               	movlw	128
  4041  003F36  6E3A               	movwf	(___fladd@a+1)^0,c
  4042  003F38  0E54               	movlw	84
  4043  003F3A  6E3B               	movwf	(___fladd@a+2)^0,c
  4044  003F3C  0EC5               	movlw	197
  4045  003F3E  6E3C               	movwf	(___fladd@a+3)^0,c
  4046  003F40  C058  F035         	movff	speedControl@position,___fladd@b
  4047  003F44  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4048  003F48  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4049  003F4C  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4050  003F50  EC66  F015         	call	___fladd	;wreg free
  4051  003F54  C035  F04E         	movff	?___fladd,___fltol@f1
  4052  003F58  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4053  003F5C  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4054  003F60  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4055  003F64  ECE3  F024         	call	___fltol	;wreg free
  4056  003F68  C04E  F150         	movff	?___fltol,_controller
  4057  003F6C  C04F  F151         	movff	?___fltol+1,_controller+1
  4058  003F70  0E00               	movlw	0
  4059  003F72  6E20               	movwf	___flmul@a^0,c
  4060  003F74  0E00               	movlw	0
  4061  003F76  6E21               	movwf	(___flmul@a+1)^0,c
  4062  003F78  0E80               	movlw	128
  4063  003F7A  6E22               	movwf	(___flmul@a+2)^0,c
  4064  003F7C  0E3F               	movlw	63
  4065  003F7E  6E23               	movwf	(___flmul@a+3)^0,c
  4066  003F80  0101               	movlb	1	; () banked
  4067  003F82  5152               	movf	(_controller+2)& (0+255),w,b
  4068  003F84  5D50               	subwf	_controller& (0+255),w,b
  4069  003F86  6E5C               	movwf	??_speedControl^0,c
  4070  003F88  5153               	movf	(_controller+3)& (0+255),w,b
  4071  003F8A  5951               	subwfb	(_controller+1)& (0+255),w,b
  4072  003F8C  6E5D               	movwf	(??_speedControl+1)^0,c
  4073  003F8E  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4074  003F92  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4075  003F96  0E00               	movlw	0
  4076  003F98  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4077  003F9A  0EFF               	movlw	-1
  4078  003F9C  6E10               	movwf	(___xxtofl@val+2)^0,c
  4079  003F9E  6E11               	movwf	(___xxtofl@val+3)^0,c
  4080  003FA0  0E01               	movlw	1
  4081  003FA2  EC77  F020         	call	___xxtofl
  4082  003FA6  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4083  003FAA  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4084  003FAE  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4085  003FB2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4086  003FB6  ECC6  F017         	call	___flmul	;wreg free
  4087  003FBA  C01C  F039         	movff	?___flmul,___fladd@a
  4088  003FBE  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4089  003FC2  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4090  003FC6  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4091  003FCA  0ECD               	movlw	205
  4092  003FCC  6E20               	movwf	___flmul@a^0,c
  4093  003FCE  0ECC               	movlw	204
  4094  003FD0  6E21               	movwf	(___flmul@a+1)^0,c
  4095  003FD2  0E4C               	movlw	76
  4096  003FD4  6E22               	movwf	(___flmul@a+2)^0,c
  4097  003FD6  0E3E               	movlw	62
  4098  003FD8  6E23               	movwf	(___flmul@a+3)^0,c
  4099  003FDA  C150  F00E         	movff	_controller,___xxtofl@val
  4100  003FDE  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4101  003FE2  0E00               	movlw	0
  4102  003FE4  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4103  003FE6  0EFF               	movlw	-1
  4104  003FE8  6E10               	movwf	(___xxtofl@val+2)^0,c
  4105  003FEA  6E11               	movwf	(___xxtofl@val+3)^0,c
  4106  003FEC  0E01               	movlw	1
  4107  003FEE  EC77  F020         	call	___xxtofl
  4108  003FF2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4109  003FF6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4110  003FFA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4111  003FFE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4112  004002  ECC6  F017         	call	___flmul	;wreg free
  4113  004006  C01C  F035         	movff	?___flmul,___fladd@b
  4114  00400A  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4115  00400E  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4116  004012  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4117  004016  EC66  F015         	call	___fladd	;wreg free
  4118  00401A  C035  F04E         	movff	?___fladd,___fltol@f1
  4119  00401E  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4120  004022  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4121  004026  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4122  00402A  ECE3  F024         	call	___fltol	;wreg free
  4123  00402E  C04E  F154         	movff	?___fltol,_controller+4
  4124  004032  C04F  F155         	movff	?___fltol+1,_controller+5
  4125  004036                     
  4126                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4127  004036  C150  F152         	movff	_controller,_controller+2
  4128  00403A  C151  F153         	movff	_controller+1,_controller+3
  4129  00403E                     
  4130                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4131  00403E  0E0E               	movlw	14
  4132  004040  0101               	movlb	1	; () banked
  4133  004042  2554               	addwf	(_controller+4)& (0+255),w,b
  4134  004044  6F56               	movwf	(_controller+6)& (0+255),b
  4135  004046  0E01               	movlw	1
  4136  004048  2155               	addwfc	(_controller+5)& (0+255),w,b
  4137  00404A  6F57               	movwf	(_controller+7)& (0+255),b
  4138  00404C                     
  4139                           ; BSR set to: 1
  4140                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4141  00404C  5154               	movf	(_controller+4)& (0+255),w,b
  4142  00404E  08C8               	sublw	200
  4143  004050  6F58               	movwf	(_controller+8)& (0+255),b
  4144  004052  5155               	movf	(_controller+5)& (0+255),w,b
  4145  004054  A0D8               	btfss	status,0,c
  4146  004056  2AE8               	incf	wreg,f,c
  4147  004058  0800               	sublw	0
  4148  00405A  6F59               	movwf	(_controller+9)& (0+255),b
  4149  00405C                     
  4150                           ; BSR set to: 1
  4151                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4152  00405C  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4153  00405E  EF3C  F020         	goto	u6740
  4154  004062  5157               	movf	(_controller+7)& (0+255),w,b
  4155  004064  E107               	bnz	u6741
  4156  004066  0E32               	movlw	50
  4157  004068  5D56               	subwf	(_controller+6)& (0+255),w,b
  4158  00406A  B0D8               	btfsc	status,0,c
  4159  00406C  EF3A  F020         	goto	u6741
  4160  004070  EF3C  F020         	goto	u6740
  4161  004074                     u6741:
  4162  004074  EF40  F020         	goto	l5577
  4163  004078                     u6740:
  4164  004078                     
  4165                           ; BSR set to: 1
  4166                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4167  004078  0E00               	movlw	0
  4168  00407A  6F57               	movwf	(_controller+7)& (0+255),b
  4169  00407C  0E32               	movlw	50
  4170  00407E  6F56               	movwf	(_controller+6)& (0+255),b
  4171  004080                     l5577:
  4172                           
  4173                           ; BSR set to: 1
  4174                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4175  004080  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4176  004082  EF4E  F020         	goto	u6750
  4177  004086  5159               	movf	(_controller+9)& (0+255),w,b
  4178  004088  E107               	bnz	u6751
  4179  00408A  0E32               	movlw	50
  4180  00408C  5D58               	subwf	(_controller+8)& (0+255),w,b
  4181  00408E  B0D8               	btfsc	status,0,c
  4182  004090  EF4C  F020         	goto	u6751
  4183  004094  EF4E  F020         	goto	u6750
  4184  004098                     u6751:
  4185  004098  EF52  F020         	goto	l5581
  4186  00409C                     u6750:
  4187  00409C                     
  4188                           ; BSR set to: 1
  4189                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4190  00409C  0E00               	movlw	0
  4191  00409E  6F59               	movwf	(_controller+9)& (0+255),b
  4192  0040A0  0E32               	movlw	50
  4193  0040A2  6F58               	movwf	(_controller+8)& (0+255),b
  4194  0040A4                     l5581:
  4195                           
  4196                           ; BSR set to: 1
  4197                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4198  0040A4  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4199  0040A6  EF5E  F020         	goto	u6761
  4200  0040AA  0E5F               	movlw	95
  4201  0040AC  5D56               	subwf	(_controller+6)& (0+255),w,b
  4202  0040AE  0E01               	movlw	1
  4203  0040B0  5957               	subwfb	(_controller+7)& (0+255),w,b
  4204  0040B2  A0D8               	btfss	status,0,c
  4205  0040B4  EF5E  F020         	goto	u6761
  4206  0040B8  EF60  F020         	goto	u6760
  4207  0040BC                     u6761:
  4208  0040BC  EF64  F020         	goto	l5585
  4209  0040C0                     u6760:
  4210  0040C0                     
  4211                           ; BSR set to: 1
  4212                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4213  0040C0  0E01               	movlw	1
  4214  0040C2  6F57               	movwf	(_controller+7)& (0+255),b
  4215  0040C4  0E5E               	movlw	94
  4216  0040C6  6F56               	movwf	(_controller+6)& (0+255),b
  4217  0040C8                     l5585:
  4218                           
  4219                           ; BSR set to: 1
  4220                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4221  0040C8  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4222  0040CA  EF70  F020         	goto	u6771
  4223  0040CE  0E5F               	movlw	95
  4224  0040D0  5D58               	subwf	(_controller+8)& (0+255),w,b
  4225  0040D2  0E01               	movlw	1
  4226  0040D4  5959               	subwfb	(_controller+9)& (0+255),w,b
  4227  0040D6  A0D8               	btfss	status,0,c
  4228  0040D8  EF70  F020         	goto	u6771
  4229  0040DC  EF72  F020         	goto	u6770
  4230  0040E0                     u6771:
  4231  0040E0  EF76  F020         	goto	l441
  4232  0040E4                     u6770:
  4233  0040E4                     
  4234                           ; BSR set to: 1
  4235                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4236  0040E4  0E01               	movlw	1
  4237  0040E6  6F59               	movwf	(_controller+9)& (0+255),b
  4238  0040E8  0E5E               	movlw	94
  4239  0040EA  6F58               	movwf	(_controller+8)& (0+255),b
  4240  0040EC                     l441:
  4241                           
  4242                           ; BSR set to: 1
  4243  0040EC  0012               	return		;funcret
  4244  0040EE                     __end_of_speedControl:
  4245                           	callstack 0
  4246                           
  4247 ;; *************** function _scanAdcConversion *****************
  4248 ;; Defined at:
  4249 ;;		line 93 in file "fs_adc.c"
  4250 ;; Parameters:    Size  Location     Type
  4251 ;;		None
  4252 ;; Auto vars:     Size  Location     Type
  4253 ;;		None
  4254 ;; Return value:  Size  Location     Type
  4255 ;;                  1    wreg      void 
  4256 ;; Registers used:
  4257 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4258 ;; Tracked objects:
  4259 ;;		On entry : 0/0
  4260 ;;		On exit  : 0/0
  4261 ;;		Unchanged: 0/0
  4262 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4263 ;;      Params:         0       0       0       0       0       0       0
  4264 ;;      Locals:         0       0       0       0       0       0       0
  4265 ;;      Temps:          2       0       0       0       0       0       0
  4266 ;;      Totals:         2       0       0       0       0       0       0
  4267 ;;Total ram usage:        2 bytes
  4268 ;; Hardware stack levels used:    1
  4269 ;; Hardware stack levels required when called:    2
  4270 ;; This function calls:
  4271 ;;		___fldiv
  4272 ;;		___flmul
  4273 ;;		___fltol
  4274 ;;		___xxtofl
  4275 ;;		_readAdcValue
  4276 ;; This function is called by:
  4277 ;;		_startMotor
  4278 ;; This function uses a non-reentrant model
  4279 ;;
  4280                           
  4281                           	psect	text10
  4282  001C90                     __ptext10:
  4283                           	callstack 0
  4284  001C90                     _scanAdcConversion:
  4285                           	callstack 25
  4286  001C90                     
  4287                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4288  001C90  EF1C  F012         	goto	l5497
  4289  001C94                     l5445:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4293  001C94  0E00               	movlw	0
  4294  001C96  EC9C  F02C         	call	_readAdcValue
  4295  001C9A  C001  F183         	movff	?_readAdcValue,_adc_raw_data
  4296  001C9E  C002  F184         	movff	?_readAdcValue+1,_adc_raw_data+1
  4297  001CA2                     
  4298                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4299  001CA2  0E00               	movlw	0
  4300  001CA4  6E20               	movwf	___flmul@a^0,c
  4301  001CA6  0E00               	movlw	0
  4302  001CA8  6E21               	movwf	(___flmul@a+1)^0,c
  4303  001CAA  0EA0               	movlw	160
  4304  001CAC  6E22               	movwf	(___flmul@a+2)^0,c
  4305  001CAE  0E40               	movlw	64
  4306  001CB0  6E23               	movwf	(___flmul@a+3)^0,c
  4307  001CB2  C183  F00E         	movff	_adc_raw_data,___xxtofl@val
  4308  001CB6  C184  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4309  001CBA  6A10               	clrf	(___xxtofl@val+2)^0,c
  4310  001CBC  6A11               	clrf	(___xxtofl@val+3)^0,c
  4311  001CBE  0E00               	movlw	0
  4312  001CC0  EC77  F020         	call	___xxtofl
  4313  001CC4  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4314  001CC8  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4315  001CCC  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4316  001CD0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4317  001CD4  ECC6  F017         	call	___flmul	;wreg free
  4318  001CD8  C01C  F035         	movff	?___flmul,___fldiv@b
  4319  001CDC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4320  001CE0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4321  001CE4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4322  001CE8  0E00               	movlw	0
  4323  001CEA  6E39               	movwf	___fldiv@a^0,c
  4324  001CEC  0E00               	movlw	0
  4325  001CEE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4326  001CF0  0E80               	movlw	128
  4327  001CF2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4328  001CF4  0E44               	movlw	68
  4329  001CF6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4330  001CF8  ECDB  F019         	call	___fldiv	;wreg free
  4331  001CFC  C035  F130         	movff	?___fldiv,_procces_data
  4332  001D00  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4333  001D04  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4334  001D08  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4335  001D0C                     
  4336                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4337  001D0C  0E00               	movlw	0
  4338  001D0E  6E39               	movwf	___fldiv@a^0,c
  4339  001D10  0E00               	movlw	0
  4340  001D12  6E3A               	movwf	(___fldiv@a+1)^0,c
  4341  001D14  0EA0               	movlw	160
  4342  001D16  6E3B               	movwf	(___fldiv@a+2)^0,c
  4343  001D18  0E40               	movlw	64
  4344  001D1A  6E3C               	movwf	(___fldiv@a+3)^0,c
  4345  001D1C  0E00               	movlw	0
  4346  001D1E  6E20               	movwf	___flmul@a^0,c
  4347  001D20  0EC0               	movlw	192
  4348  001D22  6E21               	movwf	(___flmul@a+1)^0,c
  4349  001D24  0E79               	movlw	121
  4350  001D26  6E22               	movwf	(___flmul@a+2)^0,c
  4351  001D28  0E44               	movlw	68
  4352  001D2A  6E23               	movwf	(___flmul@a+3)^0,c
  4353  001D2C  C130  F01C         	movff	_procces_data,___flmul@b
  4354  001D30  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4355  001D34  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4356  001D38  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4357  001D3C  ECC6  F017         	call	___flmul	;wreg free
  4358  001D40  C01C  F035         	movff	?___flmul,___fldiv@b
  4359  001D44  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4360  001D48  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4361  001D4C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4362  001D50  ECDB  F019         	call	___fldiv	;wreg free
  4363  001D54  C035  F04E         	movff	?___fldiv,___fltol@f1
  4364  001D58  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4365  001D5C  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4366  001D60  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4367  001D64  ECE3  F024         	call	___fltol	;wreg free
  4368  001D68  C04E  F100         	movff	?___fltol,_convert_data
  4369  001D6C  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4370  001D70  C050  F102         	movff	?___fltol+2,_convert_data+2
  4371  001D74  C051  F103         	movff	?___fltol+3,_convert_data+3
  4372                           
  4373                           ;fs_adc.c: 101:         break;
  4374  001D78  EF4A  F012         	goto	l54
  4375  001D7C                     l5451:
  4376                           
  4377                           ; BSR set to: 0
  4378                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4379  001D7C  0E01               	movlw	1
  4380  001D7E  EC9C  F02C         	call	_readAdcValue
  4381  001D82  C001  F185         	movff	?_readAdcValue,_adc_raw_data+2
  4382  001D86  C002  F186         	movff	?_readAdcValue+1,_adc_raw_data+3
  4383  001D8A                     
  4384                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4385  001D8A  0E00               	movlw	0
  4386  001D8C  6E20               	movwf	___flmul@a^0,c
  4387  001D8E  0E00               	movlw	0
  4388  001D90  6E21               	movwf	(___flmul@a+1)^0,c
  4389  001D92  0EA0               	movlw	160
  4390  001D94  6E22               	movwf	(___flmul@a+2)^0,c
  4391  001D96  0E40               	movlw	64
  4392  001D98  6E23               	movwf	(___flmul@a+3)^0,c
  4393  001D9A  C185  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4394  001D9E  C186  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4395  001DA2  6A10               	clrf	(___xxtofl@val+2)^0,c
  4396  001DA4  6A11               	clrf	(___xxtofl@val+3)^0,c
  4397  001DA6  0E00               	movlw	0
  4398  001DA8  EC77  F020         	call	___xxtofl
  4399  001DAC  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4400  001DB0  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4401  001DB4  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4402  001DB8  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4403  001DBC  ECC6  F017         	call	___flmul	;wreg free
  4404  001DC0  C01C  F035         	movff	?___flmul,___fldiv@b
  4405  001DC4  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4406  001DC8  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4407  001DCC  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4408  001DD0  0E00               	movlw	0
  4409  001DD2  6E39               	movwf	___fldiv@a^0,c
  4410  001DD4  0E00               	movlw	0
  4411  001DD6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4412  001DD8  0E80               	movlw	128
  4413  001DDA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4414  001DDC  0E44               	movlw	68
  4415  001DDE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4416  001DE0  ECDB  F019         	call	___fldiv	;wreg free
  4417  001DE4  C035  F134         	movff	?___fldiv,_procces_data+4
  4418  001DE8  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4419  001DEC  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4420  001DF0  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4421  001DF4                     
  4422                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4423  001DF4  0E00               	movlw	0
  4424  001DF6  6E39               	movwf	___fldiv@a^0,c
  4425  001DF8  0E00               	movlw	0
  4426  001DFA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4427  001DFC  0EA0               	movlw	160
  4428  001DFE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4429  001E00  0E40               	movlw	64
  4430  001E02  6E3C               	movwf	(___fldiv@a+3)^0,c
  4431  001E04  0E00               	movlw	0
  4432  001E06  6E20               	movwf	___flmul@a^0,c
  4433  001E08  0EC0               	movlw	192
  4434  001E0A  6E21               	movwf	(___flmul@a+1)^0,c
  4435  001E0C  0E79               	movlw	121
  4436  001E0E  6E22               	movwf	(___flmul@a+2)^0,c
  4437  001E10  0E44               	movlw	68
  4438  001E12  6E23               	movwf	(___flmul@a+3)^0,c
  4439  001E14  C134  F01C         	movff	_procces_data+4,___flmul@b
  4440  001E18  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4441  001E1C  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4442  001E20  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4443  001E24  ECC6  F017         	call	___flmul	;wreg free
  4444  001E28  C01C  F035         	movff	?___flmul,___fldiv@b
  4445  001E2C  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4446  001E30  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4447  001E34  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4448  001E38  ECDB  F019         	call	___fldiv	;wreg free
  4449  001E3C  C035  F04E         	movff	?___fldiv,___fltol@f1
  4450  001E40  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4451  001E44  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4452  001E48  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4453  001E4C  ECE3  F024         	call	___fltol	;wreg free
  4454  001E50  C04E  F104         	movff	?___fltol,_convert_data+4
  4455  001E54  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4456  001E58  C050  F106         	movff	?___fltol+2,_convert_data+6
  4457  001E5C  C051  F107         	movff	?___fltol+3,_convert_data+7
  4458                           
  4459                           ;fs_adc.c: 107:         break;
  4460  001E60  EF4A  F012         	goto	l54
  4461  001E64                     l5457:
  4462                           
  4463                           ; BSR set to: 0
  4464                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4465  001E64  0E02               	movlw	2
  4466  001E66  EC9C  F02C         	call	_readAdcValue
  4467  001E6A  C001  F187         	movff	?_readAdcValue,_adc_raw_data+4
  4468  001E6E  C002  F188         	movff	?_readAdcValue+1,_adc_raw_data+5
  4469  001E72                     
  4470                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4471  001E72  0E00               	movlw	0
  4472  001E74  6E20               	movwf	___flmul@a^0,c
  4473  001E76  0E00               	movlw	0
  4474  001E78  6E21               	movwf	(___flmul@a+1)^0,c
  4475  001E7A  0EA0               	movlw	160
  4476  001E7C  6E22               	movwf	(___flmul@a+2)^0,c
  4477  001E7E  0E40               	movlw	64
  4478  001E80  6E23               	movwf	(___flmul@a+3)^0,c
  4479  001E82  C187  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4480  001E86  C188  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4481  001E8A  6A10               	clrf	(___xxtofl@val+2)^0,c
  4482  001E8C  6A11               	clrf	(___xxtofl@val+3)^0,c
  4483  001E8E  0E00               	movlw	0
  4484  001E90  EC77  F020         	call	___xxtofl
  4485  001E94  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4486  001E98  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4487  001E9C  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4488  001EA0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4489  001EA4  ECC6  F017         	call	___flmul	;wreg free
  4490  001EA8  C01C  F035         	movff	?___flmul,___fldiv@b
  4491  001EAC  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4492  001EB0  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4493  001EB4  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4494  001EB8  0E00               	movlw	0
  4495  001EBA  6E39               	movwf	___fldiv@a^0,c
  4496  001EBC  0E00               	movlw	0
  4497  001EBE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4498  001EC0  0E80               	movlw	128
  4499  001EC2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4500  001EC4  0E44               	movlw	68
  4501  001EC6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4502  001EC8  ECDB  F019         	call	___fldiv	;wreg free
  4503  001ECC  C035  F138         	movff	?___fldiv,_procces_data+8
  4504  001ED0  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4505  001ED4  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4506  001ED8  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4507  001EDC                     
  4508                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4509  001EDC  0E00               	movlw	0
  4510  001EDE  6E39               	movwf	___fldiv@a^0,c
  4511  001EE0  0E00               	movlw	0
  4512  001EE2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4513  001EE4  0EA0               	movlw	160
  4514  001EE6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4515  001EE8  0E40               	movlw	64
  4516  001EEA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4517  001EEC  0E00               	movlw	0
  4518  001EEE  6E20               	movwf	___flmul@a^0,c
  4519  001EF0  0EC0               	movlw	192
  4520  001EF2  6E21               	movwf	(___flmul@a+1)^0,c
  4521  001EF4  0E79               	movlw	121
  4522  001EF6  6E22               	movwf	(___flmul@a+2)^0,c
  4523  001EF8  0E44               	movlw	68
  4524  001EFA  6E23               	movwf	(___flmul@a+3)^0,c
  4525  001EFC  C138  F01C         	movff	_procces_data+8,___flmul@b
  4526  001F00  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4527  001F04  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4528  001F08  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4529  001F0C  ECC6  F017         	call	___flmul	;wreg free
  4530  001F10  C01C  F035         	movff	?___flmul,___fldiv@b
  4531  001F14  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4532  001F18  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4533  001F1C  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4534  001F20  ECDB  F019         	call	___fldiv	;wreg free
  4535  001F24  C035  F04E         	movff	?___fldiv,___fltol@f1
  4536  001F28  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4537  001F2C  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4538  001F30  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4539  001F34  ECE3  F024         	call	___fltol	;wreg free
  4540  001F38  C04E  F108         	movff	?___fltol,_convert_data+8
  4541  001F3C  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4542  001F40  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4543  001F44  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4544  001F48                     
  4545                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4546  001F48  0E00               	movlw	0
  4547  001F4A  6E39               	movwf	___fldiv@a^0,c
  4548  001F4C  0E00               	movlw	0
  4549  001F4E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4550  001F50  0EA0               	movlw	160
  4551  001F52  6E3B               	movwf	(___fldiv@a+2)^0,c
  4552  001F54  0E40               	movlw	64
  4553  001F56  6E3C               	movwf	(___fldiv@a+3)^0,c
  4554  001F58  0E00               	movlw	0
  4555  001F5A  6E20               	movwf	___flmul@a^0,c
  4556  001F5C  0EC0               	movlw	192
  4557  001F5E  6E21               	movwf	(___flmul@a+1)^0,c
  4558  001F60  0E79               	movlw	121
  4559  001F62  6E22               	movwf	(___flmul@a+2)^0,c
  4560  001F64  0E44               	movlw	68
  4561  001F66  6E23               	movwf	(___flmul@a+3)^0,c
  4562  001F68  C138  F01C         	movff	_procces_data+8,___flmul@b
  4563  001F6C  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4564  001F70  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4565  001F74  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4566  001F78  ECC6  F017         	call	___flmul	;wreg free
  4567  001F7C  C01C  F035         	movff	?___flmul,___fldiv@b
  4568  001F80  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4569  001F84  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4570  001F88  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4571  001F8C  ECDB  F019         	call	___fldiv	;wreg free
  4572  001F90  C035  F04E         	movff	?___fldiv,___fltol@f1
  4573  001F94  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4574  001F98  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4575  001F9C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4576  001FA0  ECE3  F024         	call	___fltol	;wreg free
  4577  001FA4  C04E  F124         	movff	?___fltol,_convert_data+36
  4578  001FA8  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4579                           
  4580                           ;fs_adc.c: 114:         break;
  4581  001FAC  EF4A  F012         	goto	l54
  4582  001FB0                     l5465:
  4583                           
  4584                           ; BSR set to: 0
  4585                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4586  001FB0  0E03               	movlw	3
  4587  001FB2  EC9C  F02C         	call	_readAdcValue
  4588  001FB6  C001  F189         	movff	?_readAdcValue,_adc_raw_data+6
  4589  001FBA  C002  F18A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4590  001FBE                     
  4591                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4592  001FBE  0E00               	movlw	0
  4593  001FC0  6E20               	movwf	___flmul@a^0,c
  4594  001FC2  0E00               	movlw	0
  4595  001FC4  6E21               	movwf	(___flmul@a+1)^0,c
  4596  001FC6  0EA0               	movlw	160
  4597  001FC8  6E22               	movwf	(___flmul@a+2)^0,c
  4598  001FCA  0E40               	movlw	64
  4599  001FCC  6E23               	movwf	(___flmul@a+3)^0,c
  4600  001FCE  C189  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4601  001FD2  C18A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4602  001FD6  6A10               	clrf	(___xxtofl@val+2)^0,c
  4603  001FD8  6A11               	clrf	(___xxtofl@val+3)^0,c
  4604  001FDA  0E00               	movlw	0
  4605  001FDC  EC77  F020         	call	___xxtofl
  4606  001FE0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4607  001FE4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4608  001FE8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4609  001FEC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4610  001FF0  ECC6  F017         	call	___flmul	;wreg free
  4611  001FF4  C01C  F035         	movff	?___flmul,___fldiv@b
  4612  001FF8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4613  001FFC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4614  002000  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4615  002004  0E00               	movlw	0
  4616  002006  6E39               	movwf	___fldiv@a^0,c
  4617  002008  0E00               	movlw	0
  4618  00200A  6E3A               	movwf	(___fldiv@a+1)^0,c
  4619  00200C  0E80               	movlw	128
  4620  00200E  6E3B               	movwf	(___fldiv@a+2)^0,c
  4621  002010  0E44               	movlw	68
  4622  002012  6E3C               	movwf	(___fldiv@a+3)^0,c
  4623  002014  ECDB  F019         	call	___fldiv	;wreg free
  4624  002018  C035  F13C         	movff	?___fldiv,_procces_data+12
  4625  00201C  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4626  002020  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4627  002024  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4628  002028                     
  4629                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4630  002028  0E00               	movlw	0
  4631  00202A  6E39               	movwf	___fldiv@a^0,c
  4632  00202C  0E00               	movlw	0
  4633  00202E  6E3A               	movwf	(___fldiv@a+1)^0,c
  4634  002030  0EA0               	movlw	160
  4635  002032  6E3B               	movwf	(___fldiv@a+2)^0,c
  4636  002034  0E40               	movlw	64
  4637  002036  6E3C               	movwf	(___fldiv@a+3)^0,c
  4638  002038  0E00               	movlw	0
  4639  00203A  6E20               	movwf	___flmul@a^0,c
  4640  00203C  0EC0               	movlw	192
  4641  00203E  6E21               	movwf	(___flmul@a+1)^0,c
  4642  002040  0E79               	movlw	121
  4643  002042  6E22               	movwf	(___flmul@a+2)^0,c
  4644  002044  0E44               	movlw	68
  4645  002046  6E23               	movwf	(___flmul@a+3)^0,c
  4646  002048  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4647  00204C  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4648  002050  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4649  002054  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4650  002058  ECC6  F017         	call	___flmul	;wreg free
  4651  00205C  C01C  F035         	movff	?___flmul,___fldiv@b
  4652  002060  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4653  002064  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4654  002068  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4655  00206C  ECDB  F019         	call	___fldiv	;wreg free
  4656  002070  C035  F04E         	movff	?___fldiv,___fltol@f1
  4657  002074  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4658  002078  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4659  00207C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4660  002080  ECE3  F024         	call	___fltol	;wreg free
  4661  002084  C04E  F10C         	movff	?___fltol,_convert_data+12
  4662  002088  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4663  00208C  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4664  002090  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4665                           
  4666                           ;fs_adc.c: 120:         break;
  4667  002094  EF4A  F012         	goto	l54
  4668  002098                     l5471:
  4669                           
  4670                           ; BSR set to: 0
  4671                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4672  002098  0E04               	movlw	4
  4673  00209A  EC9C  F02C         	call	_readAdcValue
  4674  00209E  C001  F18B         	movff	?_readAdcValue,_adc_raw_data+8
  4675  0020A2  C002  F18C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4676  0020A6                     
  4677                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4678  0020A6  0E00               	movlw	0
  4679  0020A8  6E20               	movwf	___flmul@a^0,c
  4680  0020AA  0E00               	movlw	0
  4681  0020AC  6E21               	movwf	(___flmul@a+1)^0,c
  4682  0020AE  0EA0               	movlw	160
  4683  0020B0  6E22               	movwf	(___flmul@a+2)^0,c
  4684  0020B2  0E40               	movlw	64
  4685  0020B4  6E23               	movwf	(___flmul@a+3)^0,c
  4686  0020B6  C18B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4687  0020BA  C18C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4688  0020BE  6A10               	clrf	(___xxtofl@val+2)^0,c
  4689  0020C0  6A11               	clrf	(___xxtofl@val+3)^0,c
  4690  0020C2  0E00               	movlw	0
  4691  0020C4  EC77  F020         	call	___xxtofl
  4692  0020C8  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4693  0020CC  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4694  0020D0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4695  0020D4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4696  0020D8  ECC6  F017         	call	___flmul	;wreg free
  4697  0020DC  C01C  F035         	movff	?___flmul,___fldiv@b
  4698  0020E0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4699  0020E4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4700  0020E8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4701  0020EC  0E00               	movlw	0
  4702  0020EE  6E39               	movwf	___fldiv@a^0,c
  4703  0020F0  0E00               	movlw	0
  4704  0020F2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4705  0020F4  0E80               	movlw	128
  4706  0020F6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4707  0020F8  0E44               	movlw	68
  4708  0020FA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4709  0020FC  ECDB  F019         	call	___fldiv	;wreg free
  4710  002100  C035  F140         	movff	?___fldiv,_procces_data+16
  4711  002104  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4712  002108  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4713  00210C  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4714  002110                     
  4715                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4716  002110  0E00               	movlw	0
  4717  002112  6E39               	movwf	___fldiv@a^0,c
  4718  002114  0E00               	movlw	0
  4719  002116  6E3A               	movwf	(___fldiv@a+1)^0,c
  4720  002118  0EA0               	movlw	160
  4721  00211A  6E3B               	movwf	(___fldiv@a+2)^0,c
  4722  00211C  0E40               	movlw	64
  4723  00211E  6E3C               	movwf	(___fldiv@a+3)^0,c
  4724  002120  0E00               	movlw	0
  4725  002122  6E20               	movwf	___flmul@a^0,c
  4726  002124  0EC0               	movlw	192
  4727  002126  6E21               	movwf	(___flmul@a+1)^0,c
  4728  002128  0E79               	movlw	121
  4729  00212A  6E22               	movwf	(___flmul@a+2)^0,c
  4730  00212C  0E44               	movlw	68
  4731  00212E  6E23               	movwf	(___flmul@a+3)^0,c
  4732  002130  C140  F01C         	movff	_procces_data+16,___flmul@b
  4733  002134  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4734  002138  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4735  00213C  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4736  002140  ECC6  F017         	call	___flmul	;wreg free
  4737  002144  C01C  F035         	movff	?___flmul,___fldiv@b
  4738  002148  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4739  00214C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4740  002150  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4741  002154  ECDB  F019         	call	___fldiv	;wreg free
  4742  002158  C035  F04E         	movff	?___fldiv,___fltol@f1
  4743  00215C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4744  002160  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4745  002164  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4746  002168  ECE3  F024         	call	___fltol	;wreg free
  4747  00216C  C04E  F110         	movff	?___fltol,_convert_data+16
  4748  002170  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4749  002174  C050  F112         	movff	?___fltol+2,_convert_data+18
  4750  002178  C051  F113         	movff	?___fltol+3,_convert_data+19
  4751                           
  4752                           ;fs_adc.c: 126:         break;
  4753  00217C  EF4A  F012         	goto	l54
  4754  002180                     l5477:
  4755                           
  4756                           ; BSR set to: 0
  4757                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4758  002180  0E05               	movlw	5
  4759  002182  EC9C  F02C         	call	_readAdcValue
  4760  002186  C001  F18D         	movff	?_readAdcValue,_adc_raw_data+10
  4761  00218A  C002  F18E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4762  00218E                     
  4763                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4764  00218E  0E00               	movlw	0
  4765  002190  6E20               	movwf	___flmul@a^0,c
  4766  002192  0E00               	movlw	0
  4767  002194  6E21               	movwf	(___flmul@a+1)^0,c
  4768  002196  0EA0               	movlw	160
  4769  002198  6E22               	movwf	(___flmul@a+2)^0,c
  4770  00219A  0E40               	movlw	64
  4771  00219C  6E23               	movwf	(___flmul@a+3)^0,c
  4772  00219E  C18D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4773  0021A2  C18E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4774  0021A6  6A10               	clrf	(___xxtofl@val+2)^0,c
  4775  0021A8  6A11               	clrf	(___xxtofl@val+3)^0,c
  4776  0021AA  0E00               	movlw	0
  4777  0021AC  EC77  F020         	call	___xxtofl
  4778  0021B0  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4779  0021B4  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4780  0021B8  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4781  0021BC  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4782  0021C0  ECC6  F017         	call	___flmul	;wreg free
  4783  0021C4  C01C  F035         	movff	?___flmul,___fldiv@b
  4784  0021C8  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4785  0021CC  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4786  0021D0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4787  0021D4  0E00               	movlw	0
  4788  0021D6  6E39               	movwf	___fldiv@a^0,c
  4789  0021D8  0E00               	movlw	0
  4790  0021DA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4791  0021DC  0E80               	movlw	128
  4792  0021DE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4793  0021E0  0E44               	movlw	68
  4794  0021E2  6E3C               	movwf	(___fldiv@a+3)^0,c
  4795  0021E4  ECDB  F019         	call	___fldiv	;wreg free
  4796  0021E8  C035  F144         	movff	?___fldiv,_procces_data+20
  4797  0021EC  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4798  0021F0  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4799  0021F4  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4800  0021F8                     
  4801                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4802  0021F8  0E00               	movlw	0
  4803  0021FA  6E39               	movwf	___fldiv@a^0,c
  4804  0021FC  0E00               	movlw	0
  4805  0021FE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4806  002200  0EA0               	movlw	160
  4807  002202  6E3B               	movwf	(___fldiv@a+2)^0,c
  4808  002204  0E40               	movlw	64
  4809  002206  6E3C               	movwf	(___fldiv@a+3)^0,c
  4810  002208  0E00               	movlw	0
  4811  00220A  6E20               	movwf	___flmul@a^0,c
  4812  00220C  0EC0               	movlw	192
  4813  00220E  6E21               	movwf	(___flmul@a+1)^0,c
  4814  002210  0E79               	movlw	121
  4815  002212  6E22               	movwf	(___flmul@a+2)^0,c
  4816  002214  0E44               	movlw	68
  4817  002216  6E23               	movwf	(___flmul@a+3)^0,c
  4818  002218  C144  F01C         	movff	_procces_data+20,___flmul@b
  4819  00221C  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4820  002220  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4821  002224  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4822  002228  ECC6  F017         	call	___flmul	;wreg free
  4823  00222C  C01C  F035         	movff	?___flmul,___fldiv@b
  4824  002230  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4825  002234  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4826  002238  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4827  00223C  ECDB  F019         	call	___fldiv	;wreg free
  4828  002240  C035  F04E         	movff	?___fldiv,___fltol@f1
  4829  002244  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4830  002248  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4831  00224C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4832  002250  ECE3  F024         	call	___fltol	;wreg free
  4833  002254  C04E  F114         	movff	?___fltol,_convert_data+20
  4834  002258  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4835  00225C  C050  F116         	movff	?___fltol+2,_convert_data+22
  4836  002260  C051  F117         	movff	?___fltol+3,_convert_data+23
  4837                           
  4838                           ;fs_adc.c: 132:         break;
  4839  002264  EF4A  F012         	goto	l54
  4840  002268                     l5483:
  4841                           
  4842                           ; BSR set to: 0
  4843                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4844  002268  0E06               	movlw	6
  4845  00226A  EC9C  F02C         	call	_readAdcValue
  4846  00226E  C001  F18F         	movff	?_readAdcValue,_adc_raw_data+12
  4847  002272  C002  F190         	movff	?_readAdcValue+1,_adc_raw_data+13
  4848  002276                     
  4849                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4850  002276  0E00               	movlw	0
  4851  002278  6E20               	movwf	___flmul@a^0,c
  4852  00227A  0E00               	movlw	0
  4853  00227C  6E21               	movwf	(___flmul@a+1)^0,c
  4854  00227E  0EA0               	movlw	160
  4855  002280  6E22               	movwf	(___flmul@a+2)^0,c
  4856  002282  0E40               	movlw	64
  4857  002284  6E23               	movwf	(___flmul@a+3)^0,c
  4858  002286  C18F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4859  00228A  C190  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4860  00228E  6A10               	clrf	(___xxtofl@val+2)^0,c
  4861  002290  6A11               	clrf	(___xxtofl@val+3)^0,c
  4862  002292  0E00               	movlw	0
  4863  002294  EC77  F020         	call	___xxtofl
  4864  002298  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4865  00229C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4866  0022A0  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4867  0022A4  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4868  0022A8  ECC6  F017         	call	___flmul	;wreg free
  4869  0022AC  C01C  F035         	movff	?___flmul,___fldiv@b
  4870  0022B0  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4871  0022B4  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4872  0022B8  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4873  0022BC  0E00               	movlw	0
  4874  0022BE  6E39               	movwf	___fldiv@a^0,c
  4875  0022C0  0E00               	movlw	0
  4876  0022C2  6E3A               	movwf	(___fldiv@a+1)^0,c
  4877  0022C4  0E80               	movlw	128
  4878  0022C6  6E3B               	movwf	(___fldiv@a+2)^0,c
  4879  0022C8  0E44               	movlw	68
  4880  0022CA  6E3C               	movwf	(___fldiv@a+3)^0,c
  4881  0022CC  ECDB  F019         	call	___fldiv	;wreg free
  4882  0022D0  C035  F148         	movff	?___fldiv,_procces_data+24
  4883  0022D4  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4884  0022D8  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4885  0022DC  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4886  0022E0                     
  4887                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4888  0022E0  0E00               	movlw	0
  4889  0022E2  6E39               	movwf	___fldiv@a^0,c
  4890  0022E4  0E00               	movlw	0
  4891  0022E6  6E3A               	movwf	(___fldiv@a+1)^0,c
  4892  0022E8  0EA0               	movlw	160
  4893  0022EA  6E3B               	movwf	(___fldiv@a+2)^0,c
  4894  0022EC  0E40               	movlw	64
  4895  0022EE  6E3C               	movwf	(___fldiv@a+3)^0,c
  4896  0022F0  0E00               	movlw	0
  4897  0022F2  6E20               	movwf	___flmul@a^0,c
  4898  0022F4  0EC0               	movlw	192
  4899  0022F6  6E21               	movwf	(___flmul@a+1)^0,c
  4900  0022F8  0E79               	movlw	121
  4901  0022FA  6E22               	movwf	(___flmul@a+2)^0,c
  4902  0022FC  0E44               	movlw	68
  4903  0022FE  6E23               	movwf	(___flmul@a+3)^0,c
  4904  002300  C148  F01C         	movff	_procces_data+24,___flmul@b
  4905  002304  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4906  002308  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4907  00230C  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4908  002310  ECC6  F017         	call	___flmul	;wreg free
  4909  002314  C01C  F035         	movff	?___flmul,___fldiv@b
  4910  002318  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4911  00231C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4912  002320  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4913  002324  ECDB  F019         	call	___fldiv	;wreg free
  4914  002328  C035  F04E         	movff	?___fldiv,___fltol@f1
  4915  00232C  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4916  002330  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4917  002334  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4918  002338  ECE3  F024         	call	___fltol	;wreg free
  4919  00233C  C04E  F118         	movff	?___fltol,_convert_data+24
  4920  002340  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4921  002344  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4922  002348  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4923                           
  4924                           ;fs_adc.c: 138:         break;
  4925  00234C  EF4A  F012         	goto	l54
  4926  002350                     l5489:
  4927                           
  4928                           ; BSR set to: 0
  4929                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4930  002350  0E07               	movlw	7
  4931  002352  EC9C  F02C         	call	_readAdcValue
  4932  002356  C001  F191         	movff	?_readAdcValue,_adc_raw_data+14
  4933  00235A  C002  F192         	movff	?_readAdcValue+1,_adc_raw_data+15
  4934  00235E                     
  4935                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4936  00235E  0E00               	movlw	0
  4937  002360  6E20               	movwf	___flmul@a^0,c
  4938  002362  0E00               	movlw	0
  4939  002364  6E21               	movwf	(___flmul@a+1)^0,c
  4940  002366  0EA0               	movlw	160
  4941  002368  6E22               	movwf	(___flmul@a+2)^0,c
  4942  00236A  0E40               	movlw	64
  4943  00236C  6E23               	movwf	(___flmul@a+3)^0,c
  4944  00236E  C191  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  4945  002372  C192  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  4946  002376  6A10               	clrf	(___xxtofl@val+2)^0,c
  4947  002378  6A11               	clrf	(___xxtofl@val+3)^0,c
  4948  00237A  0E00               	movlw	0
  4949  00237C  EC77  F020         	call	___xxtofl
  4950  002380  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4951  002384  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4952  002388  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4953  00238C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4954  002390  ECC6  F017         	call	___flmul	;wreg free
  4955  002394  C01C  F035         	movff	?___flmul,___fldiv@b
  4956  002398  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4957  00239C  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4958  0023A0  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4959  0023A4  0E00               	movlw	0
  4960  0023A6  6E39               	movwf	___fldiv@a^0,c
  4961  0023A8  0E00               	movlw	0
  4962  0023AA  6E3A               	movwf	(___fldiv@a+1)^0,c
  4963  0023AC  0E80               	movlw	128
  4964  0023AE  6E3B               	movwf	(___fldiv@a+2)^0,c
  4965  0023B0  0E44               	movlw	68
  4966  0023B2  6E3C               	movwf	(___fldiv@a+3)^0,c
  4967  0023B4  ECDB  F019         	call	___fldiv	;wreg free
  4968  0023B8  C035  F14C         	movff	?___fldiv,_procces_data+28
  4969  0023BC  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  4970  0023C0  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  4971  0023C4  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  4972  0023C8                     
  4973                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  4974  0023C8  0E00               	movlw	0
  4975  0023CA  6E39               	movwf	___fldiv@a^0,c
  4976  0023CC  0E00               	movlw	0
  4977  0023CE  6E3A               	movwf	(___fldiv@a+1)^0,c
  4978  0023D0  0EA0               	movlw	160
  4979  0023D2  6E3B               	movwf	(___fldiv@a+2)^0,c
  4980  0023D4  0E40               	movlw	64
  4981  0023D6  6E3C               	movwf	(___fldiv@a+3)^0,c
  4982  0023D8  0E00               	movlw	0
  4983  0023DA  6E20               	movwf	___flmul@a^0,c
  4984  0023DC  0EC0               	movlw	192
  4985  0023DE  6E21               	movwf	(___flmul@a+1)^0,c
  4986  0023E0  0E79               	movlw	121
  4987  0023E2  6E22               	movwf	(___flmul@a+2)^0,c
  4988  0023E4  0E44               	movlw	68
  4989  0023E6  6E23               	movwf	(___flmul@a+3)^0,c
  4990  0023E8  C14C  F01C         	movff	_procces_data+28,___flmul@b
  4991  0023EC  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  4992  0023F0  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  4993  0023F4  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  4994  0023F8  ECC6  F017         	call	___flmul	;wreg free
  4995  0023FC  C01C  F035         	movff	?___flmul,___fldiv@b
  4996  002400  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4997  002404  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4998  002408  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4999  00240C  ECDB  F019         	call	___fldiv	;wreg free
  5000  002410  C035  F04E         	movff	?___fldiv,___fltol@f1
  5001  002414  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5002  002418  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5003  00241C  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5004  002420  ECE3  F024         	call	___fltol	;wreg free
  5005  002424  C04E  F11C         	movff	?___fltol,_convert_data+28
  5006  002428  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5007  00242C  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5008  002430  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5009                           
  5010                           ;fs_adc.c: 144:         break;
  5011  002434  EF4A  F012         	goto	l54
  5012  002438                     l5497:
  5013  002438  0100               	movlb	0	; () banked
  5014  00243A  51FC               	movf	(_timer_value+9)& (0+255),w,b
  5015  00243C  6E58               	movwf	??_scanAdcConversion^0,c
  5016  00243E  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5017                           
  5018                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5019                           ; Switch size 1, requested type "simple"
  5020                           ; Number of cases is 1, Range of values is 0 to 0
  5021                           ; switch strategies available:
  5022                           ; Name         Instructions Cycles
  5023                           ; simple_byte            4     3 (average)
  5024                           ;	Chosen strategy is simple_byte
  5025  002440  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5026  002442  0A00               	xorlw	0	; case 0
  5027  002444  B4D8               	btfsc	status,2,c
  5028  002446  EF27  F012         	goto	l6307
  5029  00244A  EF4A  F012         	goto	l54
  5030  00244E                     l6307:
  5031                           
  5032                           ; BSR set to: 0
  5033                           ; Switch size 1, requested type "simple"
  5034                           ; Number of cases is 8, Range of values is 1 to 8
  5035                           ; switch strategies available:
  5036                           ; Name         Instructions Cycles
  5037                           ; simple_byte           25    13 (average)
  5038                           ;	Chosen strategy is simple_byte
  5039  00244E  5058               	movf	??_scanAdcConversion^0,w,c
  5040  002450  0A01               	xorlw	1	; case 1
  5041  002452  B4D8               	btfsc	status,2,c
  5042  002454  EF4A  F00E         	goto	l5445
  5043  002458  0A03               	xorlw	3	; case 2
  5044  00245A  B4D8               	btfsc	status,2,c
  5045  00245C  EFBE  F00E         	goto	l5451
  5046  002460  0A01               	xorlw	1	; case 3
  5047  002462  B4D8               	btfsc	status,2,c
  5048  002464  EF32  F00F         	goto	l5457
  5049  002468  0A07               	xorlw	7	; case 4
  5050  00246A  B4D8               	btfsc	status,2,c
  5051  00246C  EFD8  F00F         	goto	l5465
  5052  002470  0A01               	xorlw	1	; case 5
  5053  002472  B4D8               	btfsc	status,2,c
  5054  002474  EF4C  F010         	goto	l5471
  5055  002478  0A03               	xorlw	3	; case 6
  5056  00247A  B4D8               	btfsc	status,2,c
  5057  00247C  EFC0  F010         	goto	l5477
  5058  002480  0A01               	xorlw	1	; case 7
  5059  002482  B4D8               	btfsc	status,2,c
  5060  002484  EF34  F011         	goto	l5483
  5061  002488  0A0F               	xorlw	15	; case 8
  5062  00248A  B4D8               	btfsc	status,2,c
  5063  00248C  EFA8  F011         	goto	l5489
  5064  002490  EF4A  F012         	goto	l54
  5065  002494                     l54:
  5066  002494  0012               	return		;funcret
  5067  002496                     __end_of_scanAdcConversion:
  5068                           	callstack 0
  5069                           
  5070 ;; *************** function _readAdcValue *****************
  5071 ;; Defined at:
  5072 ;;		line 34 in file "fs_adc.c"
  5073 ;; Parameters:    Size  Location     Type
  5074 ;;  adcChannel      1    wreg     unsigned char 
  5075 ;; Auto vars:     Size  Location     Type
  5076 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5077 ;;  adcValue        2    5[COMRAM] unsigned short 
  5078 ;; Return value:  Size  Location     Type
  5079 ;;                  2    0[COMRAM] unsigned short 
  5080 ;; Registers used:
  5081 ;;		wreg, status,2, status,0
  5082 ;; Tracked objects:
  5083 ;;		On entry : 0/0
  5084 ;;		On exit  : 0/0
  5085 ;;		Unchanged: 0/0
  5086 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5087 ;;      Params:         2       0       0       0       0       0       0
  5088 ;;      Locals:         3       0       0       0       0       0       0
  5089 ;;      Temps:          2       0       0       0       0       0       0
  5090 ;;      Totals:         7       0       0       0       0       0       0
  5091 ;;Total ram usage:        7 bytes
  5092 ;; Hardware stack levels used:    1
  5093 ;; Hardware stack levels required when called:    1
  5094 ;; This function calls:
  5095 ;;		Nothing
  5096 ;; This function is called by:
  5097 ;;		_scanAdcConversion
  5098 ;; This function uses a non-reentrant model
  5099 ;;
  5100                           
  5101                           	psect	text11
  5102  005938                     __ptext11:
  5103                           	callstack 0
  5104  005938                     _readAdcValue:
  5105                           	callstack 25
  5106                           
  5107                           ;incstack = 0
  5108                           ;readAdcValue@adcChannel stored from wreg
  5109  005938  6E05               	movwf	readAdcValue@adcChannel^0,c
  5110  00593A                     
  5111                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5112  00593A  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5113  00593E  4603               	rlncf	??_readAdcValue^0,f,c
  5114  005940  4603               	rlncf	??_readAdcValue^0,f,c
  5115  005942  50C2               	movf	194,w,c	;volatile
  5116  005944  1803               	xorwf	??_readAdcValue^0,w,c
  5117  005946  0B83               	andlw	-125
  5118  005948  1803               	xorwf	??_readAdcValue^0,w,c
  5119  00594A  6EC2               	movwf	194,c	;volatile
  5120  00594C                     
  5121                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5122  00594C  80C2               	bsf	194,0,c	;volatile
  5123  00594E                     
  5124                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5125  00594E  82C2               	bsf	194,1,c	;volatile
  5126  005950                     l35:
  5127  005950  B2C2               	btfsc	194,1,c	;volatile
  5128  005952  EFAD  F02C         	goto	u6311
  5129  005956  EFAF  F02C         	goto	u6310
  5130  00595A                     u6311:
  5131  00595A  EFA8  F02C         	goto	l35
  5132  00595E                     u6310:
  5133  00595E                     
  5134                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5135  00595E  50C4               	movf	196,w,c	;volatile
  5136  005960  6E04               	movwf	(??_readAdcValue+1)^0,c
  5137  005962  6A03               	clrf	??_readAdcValue^0,c
  5138  005964  50C3               	movf	195,w,c	;volatile
  5139  005966  2403               	addwf	??_readAdcValue^0,w,c
  5140  005968  6E06               	movwf	readAdcValue@adcValue^0,c
  5141  00596A  0E00               	movlw	0
  5142  00596C  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5143  00596E  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5144  005970                     
  5145                           ;fs_adc.c: 43:     return adcValue;
  5146  005970  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5147  005974  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5148  005978  0012               	return		;funcret
  5149  00597A                     __end_of_readAdcValue:
  5150                           	callstack 0
  5151                           
  5152 ;; *************** function _calculatedAverageValue *****************
  5153 ;; Defined at:
  5154 ;;		line 154 in file "fs_adc.c"
  5155 ;; Parameters:    Size  Location     Type
  5156 ;;		None
  5157 ;; Auto vars:     Size  Location     Type
  5158 ;;		None
  5159 ;; Return value:  Size  Location     Type
  5160 ;;                  1    wreg      void 
  5161 ;; Registers used:
  5162 ;;		wreg, status,2, status,0, cstack
  5163 ;; Tracked objects:
  5164 ;;		On entry : 0/0
  5165 ;;		On exit  : 0/0
  5166 ;;		Unchanged: 0/0
  5167 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5168 ;;      Params:         0       0       0       0       0       0       0
  5169 ;;      Locals:         0       0       0       0       0       0       0
  5170 ;;      Temps:         24       0       0       0       0       0       0
  5171 ;;      Totals:        24       0       0       0       0       0       0
  5172 ;;Total ram usage:       24 bytes
  5173 ;; Hardware stack levels used:    1
  5174 ;; Hardware stack levels required when called:    2
  5175 ;; This function calls:
  5176 ;;		___lldiv
  5177 ;;		___lmul
  5178 ;;		___xxtofl
  5179 ;; This function is called by:
  5180 ;;		_startMotor
  5181 ;; This function uses a non-reentrant model
  5182 ;;
  5183                           
  5184                           	psect	text12
  5185  003750                     __ptext12:
  5186                           	callstack 0
  5187  003750                     _calculatedAverageValue:
  5188                           	callstack 25
  5189  003750                     
  5190                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5191  003750  0E00               	movlw	0
  5192  003752  0101               	movlb	1	; () banked
  5193  003754  6F93               	movwf	_driver_limit& (0+255),b
  5194  003756  0E00               	movlw	0
  5195  003758  6F94               	movwf	(_driver_limit+1)& (0+255),b
  5196  00375A  0E00               	movlw	0
  5197  00375C  6F95               	movwf	(_driver_limit+2)& (0+255),b
  5198  00375E  0E00               	movlw	0
  5199  003760  6F96               	movwf	(_driver_limit+3)& (0+255),b
  5200                           
  5201                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5202  003762  0E00               	movlw	0
  5203  003764  6F97               	movwf	(_driver_limit+4)& (0+255),b
  5204  003766  0E00               	movlw	0
  5205  003768  6F98               	movwf	(_driver_limit+5)& (0+255),b
  5206  00376A  0E00               	movlw	0
  5207  00376C  6F99               	movwf	(_driver_limit+6)& (0+255),b
  5208  00376E  0E00               	movlw	0
  5209  003770  6F9A               	movwf	(_driver_limit+7)& (0+255),b
  5210                           
  5211                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5212  003772  0E00               	movlw	0
  5213  003774  6F9B               	movwf	(_driver_limit+8)& (0+255),b
  5214  003776  0E00               	movlw	0
  5215  003778  6F9C               	movwf	(_driver_limit+9)& (0+255),b
  5216  00377A  0E00               	movlw	0
  5217  00377C  6F9D               	movwf	(_driver_limit+10)& (0+255),b
  5218  00377E  0E00               	movlw	0
  5219  003780  6F9E               	movwf	(_driver_limit+11)& (0+255),b
  5220  003782                     
  5221                           ; BSR set to: 1
  5222                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5223  003782  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5224  003786  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5225  00378A  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5226  00378E  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5227  003792  0EB8               	movlw	184
  5228  003794  6E05               	movwf	___lmul@multiplicand^0,c
  5229  003796  0E0B               	movlw	11
  5230  003798  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5231  00379A  0E00               	movlw	0
  5232  00379C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5233  00379E  0E00               	movlw	0
  5234  0037A0  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5235  0037A2  ECB3  F02A         	call	___lmul	;wreg free
  5236  0037A6  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5237  0037AA  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5238  0037AE  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5239  0037B2  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5240  0037B6  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5241  0037BA  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5242  0037BE  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5243  0037C2  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5244  0037C6  0ED0               	movlw	208
  5245  0037C8  6E05               	movwf	___lmul@multiplicand^0,c
  5246  0037CA  0E07               	movlw	7
  5247  0037CC  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5248  0037CE  0E00               	movlw	0
  5249  0037D0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5250  0037D2  0E00               	movlw	0
  5251  0037D4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5252  0037D6  ECB3  F02A         	call	___lmul	;wreg free
  5253  0037DA  5001               	movf	?___lmul^0,w,c
  5254  0037DC  241C               	addwf	??_calculatedAverageValue^0,w,c
  5255  0037DE  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5256  0037E0  5002               	movf	(?___lmul+1)^0,w,c
  5257  0037E2  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5258  0037E4  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5259  0037E6  5003               	movf	(?___lmul+2)^0,w,c
  5260  0037E8  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5261  0037EA  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5262  0037EC  5004               	movf	(?___lmul+3)^0,w,c
  5263  0037EE  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5264  0037F0  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5265  0037F2  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5266  0037F6  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5267  0037FA  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5268  0037FE  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5269  003802  0EE8               	movlw	232
  5270  003804  6E05               	movwf	___lmul@multiplicand^0,c
  5271  003806  0E03               	movlw	3
  5272  003808  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5273  00380A  0E00               	movlw	0
  5274  00380C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5275  00380E  0E00               	movlw	0
  5276  003810  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5277  003812  ECB3  F02A         	call	___lmul	;wreg free
  5278  003816  5001               	movf	?___lmul^0,w,c
  5279  003818  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5280  00381A  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5281  00381C  5002               	movf	(?___lmul+1)^0,w,c
  5282  00381E  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5283  003820  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5284  003822  5003               	movf	(?___lmul+2)^0,w,c
  5285  003824  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5286  003826  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5287  003828  5004               	movf	(?___lmul+3)^0,w,c
  5288  00382A  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5289  00382C  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5290  00382E  0101               	movlb	1	; () banked
  5291  003830  5100               	movf	_convert_data& (0+255),w,b
  5292  003832  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5293  003834  6F93               	movwf	_driver_limit& (0+255),b
  5294  003836  5101               	movf	(_convert_data+1)& (0+255),w,b
  5295  003838  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5296  00383A  6F94               	movwf	(_driver_limit+1)& (0+255),b
  5297  00383C  5102               	movf	(_convert_data+2)& (0+255),w,b
  5298  00383E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5299  003840  6F95               	movwf	(_driver_limit+2)& (0+255),b
  5300  003842  5103               	movf	(_convert_data+3)& (0+255),w,b
  5301  003844  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5302  003846  6F96               	movwf	(_driver_limit+3)& (0+255),b
  5303  003848                     
  5304                           ; BSR set to: 1
  5305                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5306  003848  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5307  00384C  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5308  003850  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5309  003854  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5310  003858  0E58               	movlw	88
  5311  00385A  6E05               	movwf	___lmul@multiplicand^0,c
  5312  00385C  0E1B               	movlw	27
  5313  00385E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5314  003860  0E00               	movlw	0
  5315  003862  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5316  003864  0E00               	movlw	0
  5317  003866  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5318  003868  ECB3  F02A         	call	___lmul	;wreg free
  5319  00386C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5320  003870  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5321  003874  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5322  003878  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5323  00387C  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5324  003880  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5325  003884  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5326  003888  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5327  00388C  0E70               	movlw	112
  5328  00388E  6E05               	movwf	___lmul@multiplicand^0,c
  5329  003890  0E17               	movlw	23
  5330  003892  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5331  003894  0E00               	movlw	0
  5332  003896  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5333  003898  0E00               	movlw	0
  5334  00389A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5335  00389C  ECB3  F02A         	call	___lmul	;wreg free
  5336  0038A0  5001               	movf	?___lmul^0,w,c
  5337  0038A2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5338  0038A4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5339  0038A6  5002               	movf	(?___lmul+1)^0,w,c
  5340  0038A8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5341  0038AA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5342  0038AC  5003               	movf	(?___lmul+2)^0,w,c
  5343  0038AE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5344  0038B0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5345  0038B2  5004               	movf	(?___lmul+3)^0,w,c
  5346  0038B4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5347  0038B6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5348  0038B8  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5349  0038BC  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5350  0038C0  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5351  0038C4  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5352  0038C8  0E88               	movlw	136
  5353  0038CA  6E05               	movwf	___lmul@multiplicand^0,c
  5354  0038CC  0E13               	movlw	19
  5355  0038CE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5356  0038D0  0E00               	movlw	0
  5357  0038D2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5358  0038D4  0E00               	movlw	0
  5359  0038D6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5360  0038D8  ECB3  F02A         	call	___lmul	;wreg free
  5361  0038DC  5001               	movf	?___lmul^0,w,c
  5362  0038DE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5363  0038E0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5364  0038E2  5002               	movf	(?___lmul+1)^0,w,c
  5365  0038E4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5366  0038E6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5367  0038E8  5003               	movf	(?___lmul+2)^0,w,c
  5368  0038EA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5369  0038EC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5370  0038EE  5004               	movf	(?___lmul+3)^0,w,c
  5371  0038F0  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5372  0038F2  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5373  0038F4  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5374  0038F8  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5375  0038FC  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5376  003900  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5377  003904  0EA0               	movlw	160
  5378  003906  6E05               	movwf	___lmul@multiplicand^0,c
  5379  003908  0E0F               	movlw	15
  5380  00390A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5381  00390C  0E00               	movlw	0
  5382  00390E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5383  003910  0E00               	movlw	0
  5384  003912  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5385  003914  ECB3  F02A         	call	___lmul	;wreg free
  5386  003918  5001               	movf	?___lmul^0,w,c
  5387  00391A  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5388  00391C  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5389  00391E  5002               	movf	(?___lmul+1)^0,w,c
  5390  003920  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5391  003922  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5392  003924  5003               	movf	(?___lmul+2)^0,w,c
  5393  003926  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5394  003928  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5395  00392A  5004               	movf	(?___lmul+3)^0,w,c
  5396  00392C  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5397  00392E  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5398  003930  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5399  003932  0101               	movlb	1	; () banked
  5400  003934  2793               	addwf	_driver_limit& (0+255),f,b
  5401  003936  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5402  003938  2394               	addwfc	(_driver_limit+1)& (0+255),f,b
  5403  00393A  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5404  00393C  2395               	addwfc	(_driver_limit+2)& (0+255),f,b
  5405  00393E  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5406  003940  2396               	addwfc	(_driver_limit+3)& (0+255),f,b
  5407  003942                     
  5408                           ; BSR set to: 1
  5409                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5410  003942  5108               	movf	(_convert_data+8)& (0+255),w,b
  5411  003944  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5412  003946  6E1C               	movwf	??_calculatedAverageValue^0,c
  5413  003948  5109               	movf	(_convert_data+9)& (0+255),w,b
  5414  00394A  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5415  00394C  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5416  00394E  510A               	movf	(_convert_data+10)& (0+255),w,b
  5417  003950  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5418  003952  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5419  003954  510B               	movf	(_convert_data+11)& (0+255),w,b
  5420  003956  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5421  003958  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5422  00395A  510C               	movf	(_convert_data+12)& (0+255),w,b
  5423  00395C  241C               	addwf	??_calculatedAverageValue^0,w,c
  5424  00395E  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5425  003960  510D               	movf	(_convert_data+13)& (0+255),w,b
  5426  003962  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5427  003964  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5428  003966  510E               	movf	(_convert_data+14)& (0+255),w,b
  5429  003968  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5430  00396A  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5431  00396C  510F               	movf	(_convert_data+15)& (0+255),w,b
  5432  00396E  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5433  003970  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5434  003972  5110               	movf	(_convert_data+16)& (0+255),w,b
  5435  003974  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5436  003976  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5437  003978  5111               	movf	(_convert_data+17)& (0+255),w,b
  5438  00397A  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5439  00397C  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5440  00397E  5112               	movf	(_convert_data+18)& (0+255),w,b
  5441  003980  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5442  003982  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5443  003984  5113               	movf	(_convert_data+19)& (0+255),w,b
  5444  003986  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5445  003988  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5446  00398A  5114               	movf	(_convert_data+20)& (0+255),w,b
  5447  00398C  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5448  00398E  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5449  003990  5115               	movf	(_convert_data+21)& (0+255),w,b
  5450  003992  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5451  003994  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5452  003996  5116               	movf	(_convert_data+22)& (0+255),w,b
  5453  003998  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5454  00399A  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5455  00399C  5117               	movf	(_convert_data+23)& (0+255),w,b
  5456  00399E  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5457  0039A0  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5458  0039A2  5118               	movf	(_convert_data+24)& (0+255),w,b
  5459  0039A4  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5460  0039A6  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5461  0039A8  5119               	movf	(_convert_data+25)& (0+255),w,b
  5462  0039AA  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5463  0039AC  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5464  0039AE  511A               	movf	(_convert_data+26)& (0+255),w,b
  5465  0039B0  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5466  0039B2  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5467  0039B4  511B               	movf	(_convert_data+27)& (0+255),w,b
  5468  0039B6  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5469  0039B8  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5470  0039BA  511C               	movf	(_convert_data+28)& (0+255),w,b
  5471  0039BC  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5472  0039BE  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5473  0039C0  511D               	movf	(_convert_data+29)& (0+255),w,b
  5474  0039C2  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5475  0039C4  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5476  0039C6  511E               	movf	(_convert_data+30)& (0+255),w,b
  5477  0039C8  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5478  0039CA  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5479  0039CC  511F               	movf	(_convert_data+31)& (0+255),w,b
  5480  0039CE  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5481  0039D0  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5482  0039D2  5100               	movf	_convert_data& (0+255),w,b
  5483  0039D4  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5484  0039D6  6F97               	movwf	(_driver_limit+4)& (0+255),b
  5485  0039D8  5101               	movf	(_convert_data+1)& (0+255),w,b
  5486  0039DA  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5487  0039DC  6F98               	movwf	(_driver_limit+5)& (0+255),b
  5488  0039DE  5102               	movf	(_convert_data+2)& (0+255),w,b
  5489  0039E0  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5490  0039E2  6F99               	movwf	(_driver_limit+6)& (0+255),b
  5491  0039E4  5103               	movf	(_convert_data+3)& (0+255),w,b
  5492  0039E6  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5493  0039E8  6F9A               	movwf	(_driver_limit+7)& (0+255),b
  5494  0039EA                     
  5495                           ; BSR set to: 1
  5496                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5497  0039EA  C197  F005         	movff	_driver_limit+4,___lldiv@divisor
  5498  0039EE  C198  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5499  0039F2  C199  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5500  0039F6  C19A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5501  0039FA  C193  F001         	movff	_driver_limit,___lldiv@dividend
  5502  0039FE  C194  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5503  003A02  C195  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5504  003A06  C196  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5505  003A0A  EC26  F029         	call	___lldiv	;wreg free
  5506  003A0E  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5507  003A12  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5508  003A16  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5509  003A1A  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5510  003A1E  0E00               	movlw	0
  5511  003A20  EC77  F020         	call	___xxtofl
  5512  003A24  C00E  F19B         	movff	?___xxtofl,_driver_limit+8
  5513  003A28  C00F  F19C         	movff	?___xxtofl+1,_driver_limit+9
  5514  003A2C  C010  F19D         	movff	?___xxtofl+2,_driver_limit+10
  5515  003A30  C011  F19E         	movff	?___xxtofl+3,_driver_limit+11
  5516  003A34  0012               	return		;funcret
  5517  003A36                     __end_of_calculatedAverageValue:
  5518                           	callstack 0
  5519                           
  5520 ;; *************** function ___lmul *****************
  5521 ;; Defined at:
  5522 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5523 ;; Parameters:    Size  Location     Type
  5524 ;;  multiplier      4    0[COMRAM] unsigned long 
  5525 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5526 ;; Auto vars:     Size  Location     Type
  5527 ;;  product         4    8[COMRAM] unsigned long 
  5528 ;; Return value:  Size  Location     Type
  5529 ;;                  4    0[COMRAM] unsigned long 
  5530 ;; Registers used:
  5531 ;;		wreg, status,2, status,0
  5532 ;; Tracked objects:
  5533 ;;		On entry : 0/0
  5534 ;;		On exit  : 0/0
  5535 ;;		Unchanged: 0/0
  5536 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5537 ;;      Params:         8       0       0       0       0       0       0
  5538 ;;      Locals:         4       0       0       0       0       0       0
  5539 ;;      Temps:          0       0       0       0       0       0       0
  5540 ;;      Totals:        12       0       0       0       0       0       0
  5541 ;;Total ram usage:       12 bytes
  5542 ;; Hardware stack levels used:    1
  5543 ;; Hardware stack levels required when called:    1
  5544 ;; This function calls:
  5545 ;;		Nothing
  5546 ;; This function is called by:
  5547 ;;		_calculatedAverageValue
  5548 ;; This function uses a non-reentrant model
  5549 ;;
  5550                           
  5551                           	psect	text13
  5552  005566                     __ptext13:
  5553                           	callstack 0
  5554  005566                     ___lmul:
  5555                           	callstack 25
  5556  005566  0E00               	movlw	0
  5557  005568  6E09               	movwf	___lmul@product^0,c
  5558  00556A  0E00               	movlw	0
  5559  00556C  6E0A               	movwf	(___lmul@product+1)^0,c
  5560  00556E  0E00               	movlw	0
  5561  005570  6E0B               	movwf	(___lmul@product+2)^0,c
  5562  005572  0E00               	movlw	0
  5563  005574  6E0C               	movwf	(___lmul@product+3)^0,c
  5564  005576                     l5249:
  5565  005576  A001               	btfss	___lmul@multiplier^0,0,c
  5566  005578  EFC0  F02A         	goto	u6361
  5567  00557C  EFC2  F02A         	goto	u6360
  5568  005580                     u6361:
  5569  005580  EFCA  F02A         	goto	l5253
  5570  005584                     u6360:
  5571  005584  5005               	movf	___lmul@multiplicand^0,w,c
  5572  005586  2609               	addwf	___lmul@product^0,f,c
  5573  005588  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5574  00558A  220A               	addwfc	(___lmul@product+1)^0,f,c
  5575  00558C  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5576  00558E  220B               	addwfc	(___lmul@product+2)^0,f,c
  5577  005590  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5578  005592  220C               	addwfc	(___lmul@product+3)^0,f,c
  5579  005594                     l5253:
  5580  005594  90D8               	bcf	status,0,c
  5581  005596  3605               	rlcf	___lmul@multiplicand^0,f,c
  5582  005598  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5583  00559A  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5584  00559C  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5585  00559E  90D8               	bcf	status,0,c
  5586  0055A0  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5587  0055A2  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5588  0055A4  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5589  0055A6  3201               	rrcf	___lmul@multiplier^0,f,c
  5590  0055A8  5001               	movf	___lmul@multiplier^0,w,c
  5591  0055AA  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5592  0055AC  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5593  0055AE  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5594  0055B0  A4D8               	btfss	status,2,c
  5595  0055B2  EFDD  F02A         	goto	u6371
  5596  0055B6  EFDF  F02A         	goto	u6370
  5597  0055BA                     u6371:
  5598  0055BA  EFBB  F02A         	goto	l5249
  5599  0055BE                     u6370:
  5600  0055BE  C009  F001         	movff	___lmul@product,?___lmul
  5601  0055C2  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5602  0055C6  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5603  0055CA  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5604  0055CE  0012               	return		;funcret
  5605  0055D0                     __end_of___lmul:
  5606                           	callstack 0
  5607                           
  5608 ;; *************** function ___lldiv *****************
  5609 ;; Defined at:
  5610 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5611 ;; Parameters:    Size  Location     Type
  5612 ;;  dividend        4    0[COMRAM] unsigned long 
  5613 ;;  divisor         4    4[COMRAM] unsigned long 
  5614 ;; Auto vars:     Size  Location     Type
  5615 ;;  quotient        4    8[COMRAM] unsigned long 
  5616 ;;  counter         1   12[COMRAM] unsigned char 
  5617 ;; Return value:  Size  Location     Type
  5618 ;;                  4    0[COMRAM] unsigned long 
  5619 ;; Registers used:
  5620 ;;		wreg, status,2, status,0
  5621 ;; Tracked objects:
  5622 ;;		On entry : 0/0
  5623 ;;		On exit  : 0/0
  5624 ;;		Unchanged: 0/0
  5625 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5626 ;;      Params:         8       0       0       0       0       0       0
  5627 ;;      Locals:         5       0       0       0       0       0       0
  5628 ;;      Temps:          0       0       0       0       0       0       0
  5629 ;;      Totals:        13       0       0       0       0       0       0
  5630 ;;Total ram usage:       13 bytes
  5631 ;; Hardware stack levels used:    1
  5632 ;; Hardware stack levels required when called:    1
  5633 ;; This function calls:
  5634 ;;		Nothing
  5635 ;; This function is called by:
  5636 ;;		_calculatedAverageValue
  5637 ;; This function uses a non-reentrant model
  5638 ;;
  5639                           
  5640                           	psect	text14
  5641  00524C                     __ptext14:
  5642                           	callstack 0
  5643  00524C                     ___lldiv:
  5644                           	callstack 25
  5645  00524C  0E00               	movlw	0
  5646  00524E  6E09               	movwf	___lldiv@quotient^0,c
  5647  005250  0E00               	movlw	0
  5648  005252  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5649  005254  0E00               	movlw	0
  5650  005256  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5651  005258  0E00               	movlw	0
  5652  00525A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5653  00525C  5005               	movf	___lldiv@divisor^0,w,c
  5654  00525E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5655  005260  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5656  005262  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5657  005264  B4D8               	btfsc	status,2,c
  5658  005266  EF37  F029         	goto	u6381
  5659  00526A  EF39  F029         	goto	u6380
  5660  00526E                     u6381:
  5661  00526E  EF6F  F029         	goto	l515
  5662  005272                     u6380:
  5663  005272  0E01               	movlw	1
  5664  005274  6E0D               	movwf	___lldiv@counter^0,c
  5665  005276  EF43  F029         	goto	l5265
  5666  00527A                     l5263:
  5667  00527A  90D8               	bcf	status,0,c
  5668  00527C  3605               	rlcf	___lldiv@divisor^0,f,c
  5669  00527E  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5670  005280  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5671  005282  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5672  005284  2A0D               	incf	___lldiv@counter^0,f,c
  5673  005286                     l5265:
  5674  005286  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5675  005288  EF48  F029         	goto	u6391
  5676  00528C  EF4A  F029         	goto	u6390
  5677  005290                     u6391:
  5678  005290  EF3D  F029         	goto	l5263
  5679  005294                     u6390:
  5680  005294                     l5267:
  5681  005294  90D8               	bcf	status,0,c
  5682  005296  3609               	rlcf	___lldiv@quotient^0,f,c
  5683  005298  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5684  00529A  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5685  00529C  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5686  00529E  5005               	movf	___lldiv@divisor^0,w,c
  5687  0052A0  5C01               	subwf	___lldiv@dividend^0,w,c
  5688  0052A2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5689  0052A4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5690  0052A6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5691  0052A8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5692  0052AA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5693  0052AC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5694  0052AE  A0D8               	btfss	status,0,c
  5695  0052B0  EF5C  F029         	goto	u6401
  5696  0052B4  EF5E  F029         	goto	u6400
  5697  0052B8                     u6401:
  5698  0052B8  EF67  F029         	goto	l5275
  5699  0052BC                     u6400:
  5700  0052BC  5005               	movf	___lldiv@divisor^0,w,c
  5701  0052BE  5E01               	subwf	___lldiv@dividend^0,f,c
  5702  0052C0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5703  0052C2  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5704  0052C4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5705  0052C6  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5706  0052C8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5707  0052CA  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5708  0052CC  8009               	bsf	___lldiv@quotient^0,0,c
  5709  0052CE                     l5275:
  5710  0052CE  90D8               	bcf	status,0,c
  5711  0052D0  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5712  0052D2  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5713  0052D4  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5714  0052D6  3205               	rrcf	___lldiv@divisor^0,f,c
  5715  0052D8  2E0D               	decfsz	___lldiv@counter^0,f,c
  5716  0052DA  EF4A  F029         	goto	l5267
  5717  0052DE                     l515:
  5718  0052DE  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5719  0052E2  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5720  0052E6  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5721  0052EA  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5722  0052EE  0012               	return		;funcret
  5723  0052F0                     __end_of___lldiv:
  5724                           	callstack 0
  5725                           
  5726 ;; *************** function _PWM2_setDC *****************
  5727 ;; Defined at:
  5728 ;;		line 59 in file "fs_pwm.c"
  5729 ;; Parameters:    Size  Location     Type
  5730 ;;  dutycycle       2   87[COMRAM] short 
  5731 ;; Auto vars:     Size  Location     Type
  5732 ;;  duty            2   91[COMRAM] unsigned short 
  5733 ;; Return value:  Size  Location     Type
  5734 ;;                  1    wreg      void 
  5735 ;; Registers used:
  5736 ;;		wreg, status,2, status,0, cstack
  5737 ;; Tracked objects:
  5738 ;;		On entry : 0/0
  5739 ;;		On exit  : 0/0
  5740 ;;		Unchanged: 0/0
  5741 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5742 ;;      Params:         2       0       0       0       0       0       0
  5743 ;;      Locals:         2       0       0       0       0       0       0
  5744 ;;      Temps:          2       0       0       0       0       0       0
  5745 ;;      Totals:         6       0       0       0       0       0       0
  5746 ;;Total ram usage:        6 bytes
  5747 ;; Hardware stack levels used:    1
  5748 ;; Hardware stack levels required when called:    2
  5749 ;; This function calls:
  5750 ;;		___fltol
  5751 ;;		___xxtofl
  5752 ;;		_fabsf
  5753 ;; This function is called by:
  5754 ;;		_main
  5755 ;;		_stopMotor
  5756 ;;		_startMotor
  5757 ;; This function uses a non-reentrant model
  5758 ;;
  5759                           
  5760                           	psect	text15
  5761  005404                     __ptext15:
  5762                           	callstack 0
  5763  005404                     _PWM2_setDC:
  5764                           	callstack 25
  5765  005404                     
  5766                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  5767  005404  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  5768  005406  EF0E  F02A         	goto	u6730
  5769  00540A  0E04               	movlw	4
  5770  00540C  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  5771  00540E  B0D8               	btfsc	status,0,c
  5772  005410  EF0C  F02A         	goto	u6731
  5773  005414  EF0E  F02A         	goto	u6730
  5774  005418                     u6731:
  5775  005418  EF3E  F02A         	goto	l412
  5776  00541C                     u6730:
  5777  00541C                     
  5778                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  5779  00541C  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  5780  005420  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  5781  005424  0E00               	movlw	0
  5782  005426  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5783  005428  0EFF               	movlw	-1
  5784  00542A  6E10               	movwf	(___xxtofl@val+2)^0,c
  5785  00542C  6E11               	movwf	(___xxtofl@val+3)^0,c
  5786  00542E  0E01               	movlw	1
  5787  005430  EC77  F020         	call	___xxtofl
  5788  005434  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5789  005438  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5790  00543C  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5791  005440  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5792  005444  ECBF  F02D         	call	_fabsf	;wreg free
  5793  005448  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5794  00544C  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5795  005450  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5796  005454  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5797  005458  ECE3  F024         	call	___fltol	;wreg free
  5798  00545C  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  5799  005460  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  5800  005464                     
  5801                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  5802  005464  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  5803  005468  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  5804  00546C  90D8               	bcf	status,0,c
  5805  00546E  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5806  005470  325A               	rrcf	??_PWM2_setDC^0,f,c
  5807  005472  90D8               	bcf	status,0,c
  5808  005474  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5809  005476  325A               	rrcf	??_PWM2_setDC^0,f,c
  5810  005478  505A               	movf	??_PWM2_setDC^0,w,c
  5811  00547A  6E67               	movwf	103,c	;volatile
  5812  00547C                     l412:
  5813  00547C  0012               	return		;funcret
  5814  00547E                     __end_of_PWM2_setDC:
  5815                           	callstack 0
  5816                           
  5817 ;; *************** function _PWM1_setDC *****************
  5818 ;; Defined at:
  5819 ;;		line 43 in file "fs_pwm.c"
  5820 ;; Parameters:    Size  Location     Type
  5821 ;;  dutycycle       2   87[COMRAM] short 
  5822 ;; Auto vars:     Size  Location     Type
  5823 ;;  duty            2   91[COMRAM] unsigned short 
  5824 ;; Return value:  Size  Location     Type
  5825 ;;                  1    wreg      void 
  5826 ;; Registers used:
  5827 ;;		wreg, status,2, status,0, cstack
  5828 ;; Tracked objects:
  5829 ;;		On entry : 0/0
  5830 ;;		On exit  : 0/0
  5831 ;;		Unchanged: 0/0
  5832 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5833 ;;      Params:         2       0       0       0       0       0       0
  5834 ;;      Locals:         2       0       0       0       0       0       0
  5835 ;;      Temps:          2       0       0       0       0       0       0
  5836 ;;      Totals:         6       0       0       0       0       0       0
  5837 ;;Total ram usage:        6 bytes
  5838 ;; Hardware stack levels used:    1
  5839 ;; Hardware stack levels required when called:    2
  5840 ;; This function calls:
  5841 ;;		___fltol
  5842 ;;		___xxtofl
  5843 ;;		_fabsf
  5844 ;; This function is called by:
  5845 ;;		_main
  5846 ;;		_stopMotor
  5847 ;;		_startMotor
  5848 ;; This function uses a non-reentrant model
  5849 ;;
  5850                           
  5851                           	psect	text16
  5852  00547E                     __ptext16:
  5853                           	callstack 0
  5854  00547E                     _PWM1_setDC:
  5855                           	callstack 25
  5856  00547E                     
  5857                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  5858  00547E  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  5859  005480  EF4B  F02A         	goto	u6720
  5860  005484  0E04               	movlw	4
  5861  005486  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  5862  005488  B0D8               	btfsc	status,0,c
  5863  00548A  EF49  F02A         	goto	u6721
  5864  00548E  EF4B  F02A         	goto	u6720
  5865  005492                     u6721:
  5866  005492  EF7B  F02A         	goto	l408
  5867  005496                     u6720:
  5868  005496                     
  5869                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  5870  005496  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  5871  00549A  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  5872  00549E  0E00               	movlw	0
  5873  0054A0  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5874  0054A2  0EFF               	movlw	-1
  5875  0054A4  6E10               	movwf	(___xxtofl@val+2)^0,c
  5876  0054A6  6E11               	movwf	(___xxtofl@val+3)^0,c
  5877  0054A8  0E01               	movlw	1
  5878  0054AA  EC77  F020         	call	___xxtofl
  5879  0054AE  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5880  0054B2  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5881  0054B6  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5882  0054BA  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5883  0054BE  ECBF  F02D         	call	_fabsf	;wreg free
  5884  0054C2  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5885  0054C6  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5886  0054CA  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5887  0054CE  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5888  0054D2  ECE3  F024         	call	___fltol	;wreg free
  5889  0054D6  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  5890  0054DA  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  5891  0054DE                     
  5892                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  5893  0054DE  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  5894  0054E2  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  5895  0054E6  90D8               	bcf	status,0,c
  5896  0054E8  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5897  0054EA  325A               	rrcf	??_PWM1_setDC^0,f,c
  5898  0054EC  90D8               	bcf	status,0,c
  5899  0054EE  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5900  0054F0  325A               	rrcf	??_PWM1_setDC^0,f,c
  5901  0054F2  505A               	movf	??_PWM1_setDC^0,w,c
  5902  0054F4  6EBE               	movwf	190,c	;volatile
  5903  0054F6                     l408:
  5904  0054F6  0012               	return		;funcret
  5905  0054F8                     __end_of_PWM1_setDC:
  5906                           	callstack 0
  5907                           
  5908 ;; *************** function _fabsf *****************
  5909 ;; Defined at:
  5910 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  5911 ;; Parameters:    Size  Location     Type
  5912 ;;  x               4   27[COMRAM] float 
  5913 ;; Auto vars:     Size  Location     Type
  5914 ;;  u               4   31[COMRAM] struct .
  5915 ;; Return value:  Size  Location     Type
  5916 ;;                  4   27[COMRAM] float 
  5917 ;; Registers used:
  5918 ;;		status,2, status,0
  5919 ;; Tracked objects:
  5920 ;;		On entry : 0/0
  5921 ;;		On exit  : 0/0
  5922 ;;		Unchanged: 0/0
  5923 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5924 ;;      Params:         4       0       0       0       0       0       0
  5925 ;;      Locals:         4       0       0       0       0       0       0
  5926 ;;      Temps:          0       0       0       0       0       0       0
  5927 ;;      Totals:         8       0       0       0       0       0       0
  5928 ;;Total ram usage:        8 bytes
  5929 ;; Hardware stack levels used:    1
  5930 ;; Hardware stack levels required when called:    1
  5931 ;; This function calls:
  5932 ;;		Nothing
  5933 ;; This function is called by:
  5934 ;;		_PWM1_setDC
  5935 ;;		_PWM2_setDC
  5936 ;; This function uses a non-reentrant model
  5937 ;;
  5938                           
  5939                           	psect	text17
  5940  005B7E                     __ptext17:
  5941                           	callstack 0
  5942  005B7E                     _fabsf:
  5943                           	callstack 25
  5944  005B7E  C1A7  F020         	movff	fabsf@F463,fabsf@u
  5945  005B82  C1A8  F021         	movff	fabsf@F463+1,fabsf@u+1
  5946  005B86  C1A9  F022         	movff	fabsf@F463+2,fabsf@u+2
  5947  005B8A  C1AA  F023         	movff	fabsf@F463+3,fabsf@u+3
  5948  005B8E  C01C  F020         	movff	fabsf@x,fabsf@u
  5949  005B92  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  5950  005B96  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  5951  005B9A  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  5952  005B9E  9E23               	bcf	(fabsf@u+3)^0,7,c
  5953  005BA0  C020  F01C         	movff	fabsf@u,?_fabsf
  5954  005BA4  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  5955  005BA8  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  5956  005BAC  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  5957  005BB0  0012               	return		;funcret
  5958  005BB2                     __end_of_fabsf:
  5959                           	callstack 0
  5960                           
  5961 ;; *************** function ___xxtofl *****************
  5962 ;; Defined at:
  5963 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  5964 ;; Parameters:    Size  Location     Type
  5965 ;;  sign            1    wreg     unsigned char 
  5966 ;;  val             4   13[COMRAM] long 
  5967 ;; Auto vars:     Size  Location     Type
  5968 ;;  sign            1   21[COMRAM] unsigned char 
  5969 ;;  arg             4   23[COMRAM] unsigned long 
  5970 ;;  exp             1   22[COMRAM] unsigned char 
  5971 ;; Return value:  Size  Location     Type
  5972 ;;                  4   13[COMRAM] unsigned char 
  5973 ;; Registers used:
  5974 ;;		wreg, status,2, status,0
  5975 ;; Tracked objects:
  5976 ;;		On entry : 0/0
  5977 ;;		On exit  : 0/0
  5978 ;;		Unchanged: 0/0
  5979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5980 ;;      Params:         4       0       0       0       0       0       0
  5981 ;;      Locals:         6       0       0       0       0       0       0
  5982 ;;      Temps:          4       0       0       0       0       0       0
  5983 ;;      Totals:        14       0       0       0       0       0       0
  5984 ;;Total ram usage:       14 bytes
  5985 ;; Hardware stack levels used:    1
  5986 ;; Hardware stack levels required when called:    1
  5987 ;; This function calls:
  5988 ;;		Nothing
  5989 ;; This function is called by:
  5990 ;;		_scanAdcConversion
  5991 ;;		_calculatedAverageValue
  5992 ;;		_PWM1_setDC
  5993 ;;		_PWM2_setDC
  5994 ;;		_speedControl
  5995 ;; This function uses a non-reentrant model
  5996 ;;
  5997                           
  5998                           	psect	text18
  5999  0040EE                     __ptext18:
  6000                           	callstack 0
  6001  0040EE                     ___xxtofl:
  6002                           	callstack 25
  6003                           
  6004                           ;incstack = 0
  6005                           ;___xxtofl@sign stored from wreg
  6006  0040EE  6E16               	movwf	___xxtofl@sign^0,c
  6007  0040F0  5016               	movf	___xxtofl@sign^0,w,c
  6008  0040F2  B4D8               	btfsc	status,2,c
  6009  0040F4  EF7E  F020         	goto	u6411
  6010  0040F8  EF80  F020         	goto	u6410
  6011  0040FC                     u6411:
  6012  0040FC  EFA2  F020         	goto	l1143
  6013  004100                     u6410:
  6014  004100  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6015  004102  EF87  F020         	goto	u6420
  6016  004106  EF85  F020         	goto	u6421
  6017  00410A                     u6421:
  6018  00410A  EFA2  F020         	goto	l1143
  6019  00410E                     u6420:
  6020  00410E  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6021  004112  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6022  004116  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6023  00411A  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6024  00411E  1E12               	comf	??___xxtofl^0,f,c
  6025  004120  1E13               	comf	(??___xxtofl+1)^0,f,c
  6026  004122  1E14               	comf	(??___xxtofl+2)^0,f,c
  6027  004124  1E15               	comf	(??___xxtofl+3)^0,f,c
  6028  004126  2A12               	incf	??___xxtofl^0,f,c
  6029  004128  0E00               	movlw	0
  6030  00412A  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6031  00412C  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6032  00412E  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6033  004130  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6034  004134  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6035  004138  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6036  00413C  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6037  004140  EFAA  F020         	goto	l5285
  6038  004144                     l1143:
  6039  004144  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6040  004148  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6041  00414C  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6042  004150  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6043  004154                     l5285:
  6044  004154  500E               	movf	___xxtofl@val^0,w,c
  6045  004156  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6046  004158  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6047  00415A  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6048  00415C  A4D8               	btfss	status,2,c
  6049  00415E  EFB3  F020         	goto	u6431
  6050  004162  EFB5  F020         	goto	u6430
  6051  004166                     u6431:
  6052  004166  EFBF  F020         	goto	l5291
  6053  00416A                     u6430:
  6054  00416A  0E00               	movlw	0
  6055  00416C  6E0E               	movwf	?___xxtofl^0,c
  6056  00416E  0E00               	movlw	0
  6057  004170  6E0F               	movwf	(?___xxtofl+1)^0,c
  6058  004172  0E00               	movlw	0
  6059  004174  6E10               	movwf	(?___xxtofl+2)^0,c
  6060  004176  0E00               	movlw	0
  6061  004178  6E11               	movwf	(?___xxtofl+3)^0,c
  6062  00417A  EF50  F021         	goto	l1146
  6063  00417E                     l5291:
  6064  00417E  0E96               	movlw	150
  6065  004180  6E17               	movwf	___xxtofl@exp^0,c
  6066  004182  EFC9  F020         	goto	l5295
  6067  004186                     l5293:
  6068  004186  2A17               	incf	___xxtofl@exp^0,f,c
  6069  004188  90D8               	bcf	status,0,c
  6070  00418A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6071  00418C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6072  00418E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6073  004190  3218               	rrcf	___xxtofl@arg^0,f,c
  6074  004192                     l5295:
  6075  004192  0E00               	movlw	0
  6076  004194  1418               	andwf	___xxtofl@arg^0,w,c
  6077  004196  6E12               	movwf	??___xxtofl^0,c
  6078  004198  0E00               	movlw	0
  6079  00419A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6080  00419C  6E13               	movwf	(??___xxtofl+1)^0,c
  6081  00419E  0E00               	movlw	0
  6082  0041A0  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6083  0041A2  6E14               	movwf	(??___xxtofl+2)^0,c
  6084  0041A4  0EFE               	movlw	254
  6085  0041A6  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6086  0041A8  6E15               	movwf	(??___xxtofl+3)^0,c
  6087  0041AA  5012               	movf	??___xxtofl^0,w,c
  6088  0041AC  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6089  0041AE  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6090  0041B0  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6091  0041B2  A4D8               	btfss	status,2,c
  6092  0041B4  EFDE  F020         	goto	u6441
  6093  0041B8  EFE0  F020         	goto	u6440
  6094  0041BC                     u6441:
  6095  0041BC  EFC3  F020         	goto	l5293
  6096  0041C0                     u6440:
  6097  0041C0  EFEE  F020         	goto	l1150
  6098  0041C4                     l5297:
  6099  0041C4  2A17               	incf	___xxtofl@exp^0,f,c
  6100  0041C6  0E01               	movlw	1
  6101  0041C8  2618               	addwf	___xxtofl@arg^0,f,c
  6102  0041CA  0E00               	movlw	0
  6103  0041CC  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6104  0041CE  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6105  0041D0  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6106  0041D2  90D8               	bcf	status,0,c
  6107  0041D4  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6108  0041D6  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6109  0041D8  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6110  0041DA  3218               	rrcf	___xxtofl@arg^0,f,c
  6111  0041DC                     l1150:
  6112  0041DC  0E00               	movlw	0
  6113  0041DE  1418               	andwf	___xxtofl@arg^0,w,c
  6114  0041E0  6E12               	movwf	??___xxtofl^0,c
  6115  0041E2  0E00               	movlw	0
  6116  0041E4  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6117  0041E6  6E13               	movwf	(??___xxtofl+1)^0,c
  6118  0041E8  0E00               	movlw	0
  6119  0041EA  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6120  0041EC  6E14               	movwf	(??___xxtofl+2)^0,c
  6121  0041EE  0EFF               	movlw	255
  6122  0041F0  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6123  0041F2  6E15               	movwf	(??___xxtofl+3)^0,c
  6124  0041F4  5012               	movf	??___xxtofl^0,w,c
  6125  0041F6  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6126  0041F8  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6127  0041FA  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6128  0041FC  A4D8               	btfss	status,2,c
  6129  0041FE  EF03  F021         	goto	u6451
  6130  004202  EF05  F021         	goto	u6450
  6131  004206                     u6451:
  6132  004206  EFE2  F020         	goto	l5297
  6133  00420A                     u6450:
  6134  00420A  EF0D  F021         	goto	l5305
  6135  00420E                     l5303:
  6136  00420E  0617               	decf	___xxtofl@exp^0,f,c
  6137  004210  90D8               	bcf	status,0,c
  6138  004212  3618               	rlcf	___xxtofl@arg^0,f,c
  6139  004214  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6140  004216  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6141  004218  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6142  00421A                     l5305:
  6143  00421A  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6144  00421C  EF12  F021         	goto	u6461
  6145  004220  EF14  F021         	goto	u6460
  6146  004224                     u6461:
  6147  004224  EF1C  F021         	goto	l1157
  6148  004228                     u6460:
  6149  004228  0E02               	movlw	2
  6150  00422A  6017               	cpfslt	___xxtofl@exp^0,c
  6151  00422C  EF1A  F021         	goto	u6471
  6152  004230  EF1C  F021         	goto	u6470
  6153  004234                     u6471:
  6154  004234  EF07  F021         	goto	l5303
  6155  004238                     u6470:
  6156  004238                     l1157:
  6157  004238  B017               	btfsc	___xxtofl@exp^0,0,c
  6158  00423A  EF21  F021         	goto	u6481
  6159  00423E  EF23  F021         	goto	u6480
  6160  004242                     u6481:
  6161  004242  EF24  F021         	goto	l5311
  6162  004246                     u6480:
  6163  004246  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6164  004248                     l5311:
  6165  004248  90D8               	bcf	status,0,c
  6166  00424A  3217               	rrcf	___xxtofl@exp^0,f,c
  6167  00424C  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6168  004250  6A13               	clrf	(??___xxtofl+1)^0,c
  6169  004252  6A14               	clrf	(??___xxtofl+2)^0,c
  6170  004254  6A15               	clrf	(??___xxtofl+3)^0,c
  6171  004256  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6172  00425A  6A14               	clrf	(??___xxtofl+2)^0,c
  6173  00425C  6A13               	clrf	(??___xxtofl+1)^0,c
  6174  00425E  6A12               	clrf	??___xxtofl^0,c
  6175  004260  5012               	movf	??___xxtofl^0,w,c
  6176  004262  1218               	iorwf	___xxtofl@arg^0,f,c
  6177  004264  5013               	movf	(??___xxtofl+1)^0,w,c
  6178  004266  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6179  004268  5014               	movf	(??___xxtofl+2)^0,w,c
  6180  00426A  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6181  00426C  5015               	movf	(??___xxtofl+3)^0,w,c
  6182  00426E  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6183  004270  5016               	movf	___xxtofl@sign^0,w,c
  6184  004272  B4D8               	btfsc	status,2,c
  6185  004274  EF3E  F021         	goto	u6491
  6186  004278  EF40  F021         	goto	u6490
  6187  00427C                     u6491:
  6188  00427C  EF48  F021         	goto	l5321
  6189  004280                     u6490:
  6190  004280  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6191  004282  EF47  F021         	goto	u6500
  6192  004286  EF45  F021         	goto	u6501
  6193  00428A                     u6501:
  6194  00428A  EF48  F021         	goto	l5321
  6195  00428E                     u6500:
  6196  00428E  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6197  004290                     l5321:
  6198  004290  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6199  004294  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6200  004298  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6201  00429C  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6202  0042A0                     l1146:
  6203  0042A0  0012               	return		;funcret
  6204  0042A2                     __end_of___xxtofl:
  6205                           	callstack 0
  6206                           
  6207 ;; *************** function _sprintf *****************
  6208 ;; Defined at:
  6209 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6210 ;; Parameters:    Size  Location     Type
  6211 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6212 ;;		 -> stateMachine@textCursor2(16), 
  6213 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6214 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6215 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6216 ;; Auto vars:     Size  Location     Type
  6217 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6218 ;;  ap              2  121[BANK0 ] PTR void [1]
  6219 ;;		 -> ?_sprintf(2), 
  6220 ;;  ret             2    0        int 
  6221 ;; Return value:  Size  Location     Type
  6222 ;;                  2  111[BANK0 ] int 
  6223 ;; Registers used:
  6224 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6225 ;; Tracked objects:
  6226 ;;		On entry : 0/0
  6227 ;;		On exit  : 0/0
  6228 ;;		Unchanged: 0/0
  6229 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6230 ;;      Params:         0       8       0       0       0       0       0
  6231 ;;      Locals:         0      10       0       0       0       0       0
  6232 ;;      Temps:          0       0       0       0       0       0       0
  6233 ;;      Totals:         0      18       0       0       0       0       0
  6234 ;;Total ram usage:       18 bytes
  6235 ;; Hardware stack levels used:    1
  6236 ;; Hardware stack levels required when called:    8
  6237 ;; This function calls:
  6238 ;;		_vfprintf
  6239 ;; This function is called by:
  6240 ;;		_stateMachine
  6241 ;; This function uses a non-reentrant model
  6242 ;;
  6243                           
  6244                           	psect	text19
  6245  00580A                     __ptext19:
  6246                           	callstack 0
  6247  00580A                     _sprintf:
  6248                           	callstack 20
  6249  00580A  0ED3               	movlw	low (?_sprintf+4)
  6250  00580C  0100               	movlb	0	; () banked
  6251  00580E  6FD9               	movwf	sprintf@ap& (0+255),b
  6252  005810  0E00               	movlw	high (?_sprintf+4)
  6253  005812  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6254  005814  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6255  005818  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6256  00581C                     
  6257                           ; BSR set to: 0
  6258  00581C  0E00               	movlw	0
  6259  00581E  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6260  005820  0E00               	movlw	0
  6261  005822  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6262  005824                     
  6263                           ; BSR set to: 0
  6264  005824  0E00               	movlw	0
  6265  005826  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6266  005828  0E00               	movlw	0
  6267  00582A  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6268  00582C                     
  6269                           ; BSR set to: 0
  6270  00582C  0EDB               	movlw	low sprintf@f
  6271  00582E  6FC7               	movwf	vfprintf@fp& (0+255),b
  6272  005830  0E00               	movlw	high sprintf@f
  6273  005832  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6274  005834  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6275  005838  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6276  00583C  0ED9               	movlw	low sprintf@ap
  6277  00583E  6FCB               	movwf	vfprintf@ap& (0+255),b
  6278  005840  0E00               	movlw	high sprintf@ap
  6279  005842  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6280  005844  ECE8  F02A         	call	_vfprintf	;wreg free
  6281  005848  0100               	movlb	0	; () banked
  6282  00584A  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6283  00584C  25CF               	addwf	sprintf@s& (0+255),w,b
  6284  00584E  6ED9               	movwf	fsr2l,c
  6285  005850  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6286  005852  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6287  005854  6EDA               	movwf	fsr2h,c
  6288  005856  0E00               	movlw	0
  6289  005858  6EDF               	movwf	indf2,c
  6290  00585A                     
  6291                           ; BSR set to: 0
  6292  00585A  0012               	return		;funcret
  6293  00585C                     __end_of_sprintf:
  6294                           	callstack 0
  6295                           
  6296 ;; *************** function _vfprintf *****************
  6297 ;; Defined at:
  6298 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6299 ;; Parameters:    Size  Location     Type
  6300 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6301 ;;		 -> sprintf@f(6), 
  6302 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6303 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6304 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6305 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6306 ;;		 -> sprintf@ap(2), 
  6307 ;; Auto vars:     Size  Location     Type
  6308 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6309 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6310 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
  6311 ;; Return value:  Size  Location     Type
  6312 ;;                  2  103[BANK0 ] int 
  6313 ;; Registers used:
  6314 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6315 ;; Tracked objects:
  6316 ;;		On entry : 0/0
  6317 ;;		On exit  : 0/0
  6318 ;;		Unchanged: 0/0
  6319 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6320 ;;      Params:         0       6       0       0       0       0       0
  6321 ;;      Locals:         0       2       0       0       0       0       0
  6322 ;;      Temps:          0       0       0       0       0       0       0
  6323 ;;      Totals:         0       8       0       0       0       0       0
  6324 ;;Total ram usage:        8 bytes
  6325 ;; Hardware stack levels used:    1
  6326 ;; Hardware stack levels required when called:    7
  6327 ;; This function calls:
  6328 ;;		_vfpfcnvrt
  6329 ;; This function is called by:
  6330 ;;		_sprintf
  6331 ;; This function uses a non-reentrant model
  6332 ;;
  6333                           
  6334                           	psect	text20
  6335  0055D0                     __ptext20:
  6336                           	callstack 0
  6337  0055D0                     _vfprintf:
  6338                           	callstack 20
  6339  0055D0                     
  6340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6341  0055D0  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6342  0055D4  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6343  0055D8                     
  6344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6345  0055D8  0E00               	movlw	0
  6346  0055DA  0101               	movlb	1	; () banked
  6347  0055DC  6FB3               	movwf	(_nout+1)& (0+255),b
  6348  0055DE  0E00               	movlw	0
  6349  0055E0  6FB2               	movwf	_nout& (0+255),b
  6350                           
  6351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6352  0055E2  EF0A  F02B         	goto	l5595
  6353  0055E6                     l5593:
  6354                           
  6355                           ; BSR set to: 1
  6356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6357  0055E6  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6358  0055EA  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6359  0055EE  0ECD               	movlw	low vfprintf@cfmt
  6360  0055F0  0100               	movlb	0	; () banked
  6361  0055F2  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6362  0055F4  0E00               	movlw	high vfprintf@cfmt
  6363  0055F6  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6364  0055F8  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6365  0055FC  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6366  005600  EC4B  F012         	call	_vfpfcnvrt	;wreg free
  6367  005604  0100               	movlb	0	; () banked
  6368  005606  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6369  005608  0101               	movlb	1	; () banked
  6370  00560A  27B2               	addwf	_nout& (0+255),f,b
  6371  00560C  0100               	movlb	0	; () banked
  6372  00560E  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6373  005610  0101               	movlb	1	; () banked
  6374  005612  23B3               	addwfc	(_nout+1)& (0+255),f,b
  6375  005614                     l5595:
  6376                           
  6377                           ; BSR set to: 1
  6378                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6379  005614  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6380  005618  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6381  00561C                     	if	0	;tblptru may be non-zero
  6382  00561C                     	endif
  6383  00561C                     	if	0	;tblptru may be non-zero
  6384  00561C                     	endif
  6385  00561C  0008               	tblrd		*
  6386  00561E  50F5               	movf	tablat,w,c
  6387  005620  0900               	iorlw	0
  6388  005622  A4D8               	btfss	status,2,c
  6389  005624  EF16  F02B         	goto	u6781
  6390  005628  EF18  F02B         	goto	u6780
  6391  00562C                     u6781:
  6392  00562C  EFF3  F02A         	goto	l5593
  6393  005630                     u6780:
  6394  005630                     
  6395                           ; BSR set to: 1
  6396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6397  005630  C1B2  F0C7         	movff	_nout,?_vfprintf
  6398  005634  C1B3  F0C8         	movff	_nout+1,?_vfprintf+1
  6399  005638                     
  6400                           ; BSR set to: 1
  6401  005638  0012               	return		;funcret
  6402  00563A                     __end_of_vfprintf:
  6403                           	callstack 0
  6404                           
  6405 ;; *************** function _vfpfcnvrt *****************
  6406 ;; Defined at:
  6407 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6408 ;; Parameters:    Size  Location     Type
  6409 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6410 ;;		 -> sprintf@f(6), 
  6411 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6412 ;;		 -> vfprintf@cfmt(2), 
  6413 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6414 ;;		 -> sprintf@ap(2), 
  6415 ;; Auto vars:     Size  Location     Type
  6416 ;;  ll              8   81[BANK0 ] long long 
  6417 ;;  llu             8    0        unsigned long long 
  6418 ;;  f               4   95[BANK0 ] unsigned long long 
  6419 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6420 ;;  vp              3    0        PTR void 
  6421 ;;  cp              3    0        PTR unsigned char 
  6422 ;;  i               2    0        int 
  6423 ;;  done            2    0        int 
  6424 ;;  c               1  102[BANK0 ] unsigned char 
  6425 ;; Return value:  Size  Location     Type
  6426 ;;                  2   71[BANK0 ] int 
  6427 ;; Registers used:
  6428 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6429 ;; Tracked objects:
  6430 ;;		On entry : 0/0
  6431 ;;		On exit  : 0/0
  6432 ;;		Unchanged: 0/0
  6433 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6434 ;;      Params:         0       6       0       0       0       0       0
  6435 ;;      Locals:         0      22       0       0       0       0       0
  6436 ;;      Temps:          0       4       0       0       0       0       0
  6437 ;;      Totals:         0      32       0       0       0       0       0
  6438 ;;Total ram usage:       32 bytes
  6439 ;; Hardware stack levels used:    1
  6440 ;; Hardware stack levels required when called:    6
  6441 ;; This function calls:
  6442 ;;		_atoi
  6443 ;;		_dtoa
  6444 ;;		_efgtoa
  6445 ;;		_fputc
  6446 ;;		_isdigit
  6447 ;;		_isupper
  6448 ;;		_strncmp
  6449 ;;		_tolower
  6450 ;; This function is called by:
  6451 ;;		_vfprintf
  6452 ;; This function uses a non-reentrant model
  6453 ;;
  6454                           
  6455                           	psect	text21
  6456  002496                     __ptext21:
  6457                           	callstack 0
  6458  002496                     _vfpfcnvrt:
  6459                           	callstack 20
  6460  002496                     
  6461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6462  002496  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6463  00249A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6464  00249E  CFDE FFF6          	movff	postinc2,tblptrl
  6465  0024A2  CFDD FFF7          	movff	postdec2,tblptrh
  6466  0024A6                     	if	0	;tblptru may be non-zero
  6467  0024A6                     	endif
  6468  0024A6                     	if	0	;tblptru may be non-zero
  6469  0024A6                     	endif
  6470  0024A6  0008               	tblrd		*
  6471  0024A8  50F5               	movf	tablat,w,c
  6472  0024AA  0A25               	xorlw	37
  6473  0024AC  A4D8               	btfss	status,2,c
  6474  0024AE  EF5B  F012         	goto	u6511
  6475  0024B2  EF5D  F012         	goto	u6510
  6476  0024B6                     u6511:
  6477  0024B6  EF4A  F015         	goto	l5435
  6478  0024BA                     u6510:
  6479  0024BA                     
  6480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6481  0024BA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6482  0024BE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6483  0024C2  2ADE               	incf	postinc2,f,c
  6484  0024C4  0E00               	movlw	0
  6485  0024C6  22DD               	addwfc	postdec2,f,c
  6486  0024C8                     
  6487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6488  0024C8  0E00               	movlw	0
  6489  0024CA  0101               	movlb	1	; () banked
  6490  0024CC  6FB5               	movwf	(_width+1)& (0+255),b
  6491  0024CE  0E00               	movlw	0
  6492  0024D0  6FB4               	movwf	_width& (0+255),b
  6493  0024D2  C1B4  F1B8         	movff	_width,_flags
  6494  0024D6  C1B5  F1B9         	movff	_width+1,_flags+1
  6495  0024DA                     
  6496                           ; BSR set to: 1
  6497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6498  0024DA  69B6               	setf	_prec& (0+255),b
  6499  0024DC  69B7               	setf	(_prec+1)& (0+255),b
  6500  0024DE                     
  6501                           ; BSR set to: 1
  6502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6503  0024DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6504  0024E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6505  0024E6  CFDE FFF6          	movff	postinc2,tblptrl
  6506  0024EA  CFDD FFF7          	movff	postdec2,tblptrh
  6507  0024EE                     	if	0	;tblptru may be non-zero
  6508  0024EE                     	endif
  6509  0024EE                     	if	0	;tblptru may be non-zero
  6510  0024EE                     	endif
  6511  0024EE  0008               	tblrd		*
  6512  0024F0  50F5               	movf	tablat,w,c
  6513  0024F2  0A2A               	xorlw	42
  6514  0024F4  A4D8               	btfss	status,2,c
  6515  0024F6  EF7F  F012         	goto	u6521
  6516  0024FA  EF81  F012         	goto	u6520
  6517  0024FE                     u6521:
  6518  0024FE  EFAA  F012         	goto	l5341
  6519  002502                     u6520:
  6520  002502                     
  6521                           ; BSR set to: 1
  6522                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6523  002502  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6524  002506  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6525  00250A  2ADE               	incf	postinc2,f,c
  6526  00250C  0E00               	movlw	0
  6527  00250E  22DD               	addwfc	postdec2,f,c
  6528                           
  6529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6530  002510  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6531  002514  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6532  002518  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6533  00251C  0E02               	movlw	2
  6534  00251E  26DE               	addwf	postinc2,f,c
  6535  002520  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6536  002524  0E00               	movlw	0
  6537  002526  22DD               	addwfc	postdec2,f,c
  6538  002528  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6539  00252C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6540  002530  CFDE F1B4          	movff	postinc2,_width
  6541  002534  CFDD F1B5          	movff	postdec2,_width+1
  6542  002538                     
  6543                           ; BSR set to: 1
  6544                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6545  002538  BFB5               	btfsc	(_width+1)& (0+255),7,b
  6546  00253A  EFA3  F012         	goto	u6530
  6547  00253E  EFA1  F012         	goto	u6531
  6548  002542                     u6531:
  6549  002542  EFEE  F012         	goto	l5351
  6550  002546                     u6530:
  6551  002546                     
  6552                           ; BSR set to: 1
  6553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6554  002546  81B8               	bsf	_flags& (0+255),0,b
  6555                           
  6556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6557  002548  6DB4               	negf	_width& (0+255),b
  6558  00254A  1FB5               	comf	(_width+1)& (0+255),f,b
  6559  00254C  B0D8               	btfsc	status,0,c
  6560  00254E  2BB5               	incf	(_width+1)& (0+255),f,b
  6561  002550  EFEE  F012         	goto	l5351
  6562  002554                     l5341:
  6563                           
  6564                           ; BSR set to: 1
  6565                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6566  002554  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6567  002558  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6568  00255C  CFDE F008          	movff	postinc2,atoi@s
  6569  002560  CFDD F009          	movff	postdec2,atoi@s+1
  6570  002564  EC51  F021         	call	_atoi	;wreg free
  6571  002568  C008  F1B4         	movff	?_atoi,_width
  6572  00256C  C009  F1B5         	movff	?_atoi+1,_width+1
  6573                           
  6574                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6575  002570  EFC1  F012         	goto	l5345
  6576  002574                     l5343:
  6577                           
  6578                           ; BSR set to: 0
  6579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6580  002574  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6581  002578  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6582  00257C  2ADE               	incf	postinc2,f,c
  6583  00257E  0E00               	movlw	0
  6584  002580  22DD               	addwfc	postdec2,f,c
  6585  002582                     l5345:
  6586  002582  0ED0               	movlw	208
  6587  002584  0100               	movlb	0	; () banked
  6588  002586  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6589  002588  0EFF               	movlw	255
  6590  00258A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6591  00258C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6592  002590  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6593  002594  CFDE FFF6          	movff	postinc2,tblptrl
  6594  002598  CFDD FFF7          	movff	postdec2,tblptrh
  6595  00259C                     	if	0	;tblptru may be non-zero
  6596  00259C                     	endif
  6597  00259C                     	if	0	;tblptru may be non-zero
  6598  00259C                     	endif
  6599  00259C  0008               	tblrd		*
  6600  00259E  50F5               	movf	tablat,w,c
  6601  0025A0  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6602  0025A2  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6603  0025A4  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6604  0025A6  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6605  0025A8  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6606  0025AA  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6607  0025AC  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6608  0025AE  E10A               	bnz	u6540
  6609  0025B0  0E0A               	movlw	10
  6610  0025B2  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6611  0025B4  A0D8               	btfss	status,0,c
  6612  0025B6  EFDF  F012         	goto	u6541
  6613  0025BA  EFE2  F012         	goto	u6540
  6614  0025BE                     u6541:
  6615  0025BE  0E01               	movlw	1
  6616  0025C0  EFE3  F012         	goto	u6550
  6617  0025C4                     u6540:
  6618  0025C4  0E00               	movlw	0
  6619  0025C6                     u6550:
  6620  0025C6  6FB9               	movwf	_vfpfcnvrt$2530& (0+255),b
  6621  0025C8  6BBA               	clrf	(_vfpfcnvrt$2530+1)& (0+255),b
  6622  0025CA                     
  6623                           ; BSR set to: 0
  6624  0025CA  51B9               	movf	_vfpfcnvrt$2530& (0+255),w,b
  6625  0025CC  11BA               	iorwf	(_vfpfcnvrt$2530+1)& (0+255),w,b
  6626  0025CE  A4D8               	btfss	status,2,c
  6627  0025D0  EFEC  F012         	goto	u6561
  6628  0025D4  EFEE  F012         	goto	u6560
  6629  0025D8                     u6561:
  6630  0025D8  EFBA  F012         	goto	l5343
  6631  0025DC                     u6560:
  6632  0025DC                     l5351:
  6633                           
  6634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6635  0025DC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6636  0025E0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6637  0025E4  CFDE FFF6          	movff	postinc2,tblptrl
  6638  0025E8  CFDD FFF7          	movff	postdec2,tblptrh
  6639  0025EC                     	if	0	;tblptru may be non-zero
  6640  0025EC                     	endif
  6641  0025EC                     	if	0	;tblptru may be non-zero
  6642  0025EC                     	endif
  6643  0025EC  0008               	tblrd		*
  6644  0025EE  50F5               	movf	tablat,w,c
  6645  0025F0  0A2E               	xorlw	46
  6646  0025F2  A4D8               	btfss	status,2,c
  6647  0025F4  EFFE  F012         	goto	u6571
  6648  0025F8  EF00  F013         	goto	u6570
  6649  0025FC                     u6571:
  6650  0025FC  EF7F  F013         	goto	l5371
  6651  002600                     u6570:
  6652  002600                     
  6653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6654  002600  0E00               	movlw	0
  6655  002602  0101               	movlb	1	; () banked
  6656  002604  6FB7               	movwf	(_prec+1)& (0+255),b
  6657  002606  0E00               	movlw	0
  6658  002608  6FB6               	movwf	_prec& (0+255),b
  6659  00260A                     
  6660                           ; BSR set to: 1
  6661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6662  00260A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6663  00260E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6664  002612  2ADE               	incf	postinc2,f,c
  6665  002614  0E00               	movlw	0
  6666  002616  22DD               	addwfc	postdec2,f,c
  6667  002618                     
  6668                           ; BSR set to: 1
  6669                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6670  002618  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6671  00261C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6672  002620  CFDE FFF6          	movff	postinc2,tblptrl
  6673  002624  CFDD FFF7          	movff	postdec2,tblptrh
  6674  002628                     	if	0	;tblptru may be non-zero
  6675  002628                     	endif
  6676  002628                     	if	0	;tblptru may be non-zero
  6677  002628                     	endif
  6678  002628  0008               	tblrd		*
  6679  00262A  50F5               	movf	tablat,w,c
  6680  00262C  0A2A               	xorlw	42
  6681  00262E  A4D8               	btfss	status,2,c
  6682  002630  EF1C  F013         	goto	u6581
  6683  002634  EF1E  F013         	goto	u6580
  6684  002638                     u6581:
  6685  002638  EF3B  F013         	goto	l5361
  6686  00263C                     u6580:
  6687  00263C                     
  6688                           ; BSR set to: 1
  6689                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6690  00263C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6691  002640  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6692  002644  2ADE               	incf	postinc2,f,c
  6693  002646  0E00               	movlw	0
  6694  002648  22DD               	addwfc	postdec2,f,c
  6695                           
  6696                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6697  00264A  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6698  00264E  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6699  002652  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6700  002656  0E02               	movlw	2
  6701  002658  26DE               	addwf	postinc2,f,c
  6702  00265A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6703  00265E  0E00               	movlw	0
  6704  002660  22DD               	addwfc	postdec2,f,c
  6705  002662  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6706  002666  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6707  00266A  CFDE F1B6          	movff	postinc2,_prec
  6708  00266E  CFDD F1B7          	movff	postdec2,_prec+1
  6709                           
  6710                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6711  002672  EF7F  F013         	goto	l5371
  6712  002676                     l5361:
  6713                           
  6714                           ; BSR set to: 1
  6715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6716  002676  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6717  00267A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6718  00267E  CFDE F008          	movff	postinc2,atoi@s
  6719  002682  CFDD F009          	movff	postdec2,atoi@s+1
  6720  002686  EC51  F021         	call	_atoi	;wreg free
  6721  00268A  C008  F1B6         	movff	?_atoi,_prec
  6722  00268E  C009  F1B7         	movff	?_atoi+1,_prec+1
  6723                           
  6724                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6725  002692  EF52  F013         	goto	l5365
  6726  002696                     l5363:
  6727                           
  6728                           ; BSR set to: 0
  6729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6730  002696  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6731  00269A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6732  00269E  2ADE               	incf	postinc2,f,c
  6733  0026A0  0E00               	movlw	0
  6734  0026A2  22DD               	addwfc	postdec2,f,c
  6735  0026A4                     l5365:
  6736  0026A4  0ED0               	movlw	208
  6737  0026A6  0100               	movlb	0	; () banked
  6738  0026A8  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6739  0026AA  0EFF               	movlw	255
  6740  0026AC  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6741  0026AE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6742  0026B2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6743  0026B6  CFDE FFF6          	movff	postinc2,tblptrl
  6744  0026BA  CFDD FFF7          	movff	postdec2,tblptrh
  6745  0026BE                     	if	0	;tblptru may be non-zero
  6746  0026BE                     	endif
  6747  0026BE                     	if	0	;tblptru may be non-zero
  6748  0026BE                     	endif
  6749  0026BE  0008               	tblrd		*
  6750  0026C0  50F5               	movf	tablat,w,c
  6751  0026C2  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6752  0026C4  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6753  0026C6  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6754  0026C8  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6755  0026CA  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6756  0026CC  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6757  0026CE  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6758  0026D0  E10A               	bnz	u6590
  6759  0026D2  0E0A               	movlw	10
  6760  0026D4  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6761  0026D6  A0D8               	btfss	status,0,c
  6762  0026D8  EF70  F013         	goto	u6591
  6763  0026DC  EF73  F013         	goto	u6590
  6764  0026E0                     u6591:
  6765  0026E0  0E01               	movlw	1
  6766  0026E2  EF74  F013         	goto	u6600
  6767  0026E6                     u6590:
  6768  0026E6  0E00               	movlw	0
  6769  0026E8                     u6600:
  6770  0026E8  6FBB               	movwf	_vfpfcnvrt$2531& (0+255),b
  6771  0026EA  6BBC               	clrf	(_vfpfcnvrt$2531+1)& (0+255),b
  6772  0026EC                     
  6773                           ; BSR set to: 0
  6774  0026EC  51BB               	movf	_vfpfcnvrt$2531& (0+255),w,b
  6775  0026EE  11BC               	iorwf	(_vfpfcnvrt$2531+1)& (0+255),w,b
  6776  0026F0  A4D8               	btfss	status,2,c
  6777  0026F2  EF7D  F013         	goto	u6611
  6778  0026F6  EF7F  F013         	goto	u6610
  6779  0026FA                     u6611:
  6780  0026FA  EF4B  F013         	goto	l5363
  6781  0026FE                     u6610:
  6782  0026FE                     l5371:
  6783                           
  6784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6785  0026FE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6786  002702  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6787  002706  CFDE FFF6          	movff	postinc2,tblptrl
  6788  00270A  CFDD FFF7          	movff	postdec2,tblptrh
  6789  00270E                     	if	0	;tblptru may be non-zero
  6790  00270E                     	endif
  6791  00270E                     	if	0	;tblptru may be non-zero
  6792  00270E                     	endif
  6793  00270E  0008               	tblrd		*
  6794  002710  50F5               	movf	tablat,w,c
  6795  002712  6E07               	movwf	tolower@c^0,c
  6796  002714  6A08               	clrf	(tolower@c+1)^0,c
  6797  002716  EC50  F02B         	call	_tolower	;wreg free
  6798  00271A  5007               	movf	?_tolower^0,w,c
  6799  00271C  0100               	movlb	0	; () banked
  6800  00271E  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6801  002720                     
  6802                           ; BSR set to: 0
  6803                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6804  002720  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6805  002722  B4D8               	btfsc	status,2,c
  6806  002724  EF96  F013         	goto	u6621
  6807  002728  EF98  F013         	goto	u6620
  6808  00272C                     u6621:
  6809  00272C  EFD2  F013         	goto	l5381
  6810  002730                     u6620:
  6811  002730                     
  6812                           ; BSR set to: 0
  6813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6814  002730  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6815  002734  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6816  002738  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6817  00273C  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6818  002740  0E01               	movlw	1
  6819  002742  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6820  002744  0E00               	movlw	0
  6821  002746  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6822  002748  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6823  00274C  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6824  002750                     	if	0	;tblptru may be non-zero
  6825  002750                     	endif
  6826  002750                     	if	0	;tblptru may be non-zero
  6827  002750                     	endif
  6828  002750  0008               	tblrd		*
  6829  002752  50F5               	movf	tablat,w,c
  6830  002754  6E07               	movwf	tolower@c^0,c
  6831  002756  6A08               	clrf	(tolower@c+1)^0,c
  6832  002758  EC50  F02B         	call	_tolower	;wreg free
  6833  00275C  5007               	movf	?_tolower^0,w,c
  6834  00275E  0100               	movlb	0	; () banked
  6835  002760  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6836  002762                     
  6837                           ; BSR set to: 0
  6838                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6839  002762  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6840  002764  B4D8               	btfsc	status,2,c
  6841  002766  EFB7  F013         	goto	u6631
  6842  00276A  EFB9  F013         	goto	u6630
  6843  00276E                     u6631:
  6844  00276E  EFD2  F013         	goto	l5381
  6845  002772                     u6630:
  6846  002772                     
  6847                           ; BSR set to: 0
  6848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6849  002772  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6850  002776  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6851  00277A  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6852  00277E  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6853  002782  0E02               	movlw	2
  6854  002784  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6855  002786  0E00               	movlw	0
  6856  002788  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6857  00278A  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6858  00278E  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6859  002792                     	if	0	;tblptru may be non-zero
  6860  002792                     	endif
  6861  002792                     	if	0	;tblptru may be non-zero
  6862  002792                     	endif
  6863  002792  0008               	tblrd		*
  6864  002794  50F5               	movf	tablat,w,c
  6865  002796  6E07               	movwf	tolower@c^0,c
  6866  002798  6A08               	clrf	(tolower@c+1)^0,c
  6867  00279A  EC50  F02B         	call	_tolower	;wreg free
  6868  00279E  5007               	movf	?_tolower^0,w,c
  6869  0027A0  0100               	movlb	0	; () banked
  6870  0027A2  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6871  0027A4                     l5381:
  6872                           
  6873                           ; BSR set to: 0
  6874                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6875  0027A4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6876  0027A8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6877  0027AC  CFDE FFF6          	movff	postinc2,tblptrl
  6878  0027B0  CFDD FFF7          	movff	postdec2,tblptrh
  6879  0027B4                     	if	0	;tblptru may be non-zero
  6880  0027B4                     	endif
  6881  0027B4                     	if	0	;tblptru may be non-zero
  6882  0027B4                     	endif
  6883  0027B4  0008               	tblrd		*
  6884  0027B6  50F5               	movf	tablat,w,c
  6885  0027B8  0A64               	xorlw	100
  6886  0027BA  B4D8               	btfsc	status,2,c
  6887  0027BC  EFE2  F013         	goto	u6641
  6888  0027C0  EFE4  F013         	goto	u6640
  6889  0027C4                     u6641:
  6890  0027C4  EFF6  F013         	goto	l5385
  6891  0027C8                     u6640:
  6892  0027C8                     
  6893                           ; BSR set to: 0
  6894  0027C8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6895  0027CC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6896  0027D0  CFDE FFF6          	movff	postinc2,tblptrl
  6897  0027D4  CFDD FFF7          	movff	postdec2,tblptrh
  6898  0027D8                     	if	0	;tblptru may be non-zero
  6899  0027D8                     	endif
  6900  0027D8                     	if	0	;tblptru may be non-zero
  6901  0027D8                     	endif
  6902  0027D8  0008               	tblrd		*
  6903  0027DA  50F5               	movf	tablat,w,c
  6904  0027DC  0A69               	xorlw	105
  6905  0027DE  A4D8               	btfss	status,2,c
  6906  0027E0  EFF4  F013         	goto	u6651
  6907  0027E4  EFF6  F013         	goto	u6650
  6908  0027E8                     u6651:
  6909  0027E8  EF36  F014         	goto	l5391
  6910  0027EC                     u6650:
  6911  0027EC                     l5385:
  6912                           
  6913                           ; BSR set to: 0
  6914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6915  0027EC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6916  0027F0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6917  0027F4  2ADE               	incf	postinc2,f,c
  6918  0027F6  0E00               	movlw	0
  6919  0027F8  22DD               	addwfc	postdec2,f,c
  6920                           
  6921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6922  0027FA  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6923  0027FE  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6924  002802  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6925  002806  0E02               	movlw	2
  6926  002808  26DE               	addwf	postinc2,f,c
  6927  00280A  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6928  00280E  0E00               	movlw	0
  6929  002810  22DD               	addwfc	postdec2,f,c
  6930  002812  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6931  002816  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6932  00281A  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6933  00281E  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6934  002822  0E00               	movlw	0
  6935  002824  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6936  002826  0EFF               	movlw	-1
  6937  002828  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6938  00282A  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6939  00282C  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  6940  00282E  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  6941  002830  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  6942  002832  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  6943  002834                     
  6944                           ; BSR set to: 0
  6945                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  6946  002834  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  6947  002838  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  6948  00283C  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  6949  002840  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  6950  002844  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  6951  002848  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  6952  00284C  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  6953  002850  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  6954  002854  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  6955  002858  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  6956  00285C  EC1B  F01D         	call	_dtoa	;wreg free
  6957  002860  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  6958  002864  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  6959  002868  EF65  F015         	goto	l1365
  6960  00286C                     l5391:
  6961                           
  6962                           ; BSR set to: 0
  6963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  6964  00286C  0E66               	movlw	102
  6965  00286E  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  6966  002870  A4D8               	btfss	status,2,c
  6967  002872  EF3D  F014         	goto	u6661
  6968  002876  EF3F  F014         	goto	u6660
  6969  00287A                     u6661:
  6970  00287A  EF7F  F014         	goto	l5403
  6971  00287E                     u6660:
  6972  00287E                     
  6973                           ; BSR set to: 0
  6974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  6975  00287E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6976  002882  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6977  002886  CFDE FFF6          	movff	postinc2,tblptrl
  6978  00288A  CFDD FFF7          	movff	postdec2,tblptrh
  6979  00288E                     	if	0	;tblptru may be non-zero
  6980  00288E                     	endif
  6981  00288E                     	if	0	;tblptru may be non-zero
  6982  00288E                     	endif
  6983  00288E  0008               	tblrd		*
  6984  002890  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  6985  002894                     
  6986                           ; BSR set to: 0
  6987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  6988  002894  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6989  002898  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6990  00289C  2ADE               	incf	postinc2,f,c
  6991  00289E  0E00               	movlw	0
  6992  0028A0  22DD               	addwfc	postdec2,f,c
  6993  0028A2                     
  6994                           ; BSR set to: 0
  6995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  6996  0028A2  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6997  0028A6  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6998  0028AA  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6999  0028AE  0E04               	movlw	4
  7000  0028B0  26DE               	addwf	postinc2,f,c
  7001  0028B2  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7002  0028B6  0E00               	movlw	0
  7003  0028B8  22DD               	addwfc	postdec2,f,c
  7004  0028BA  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7005  0028BE  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7006  0028C2  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7007  0028C6  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7008  0028CA  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7009  0028CE  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7010  0028D2                     l5399:
  7011                           
  7012                           ; BSR set to: 0
  7013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7014  0028D2  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7015  0028D6  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7016  0028DA  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7017  0028DE  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7018  0028E2  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7019  0028E6  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7020  0028EA  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7021  0028EE  EC6C  F003         	call	_efgtoa	;wreg free
  7022  0028F2  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7023  0028F6  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7024  0028FA  EF65  F015         	goto	l1365
  7025  0028FE                     l5403:
  7026                           
  7027                           ; BSR set to: 0
  7028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7029  0028FE  0EC3               	movlw	low vfpfcnvrt@ct
  7030  002900  6E01               	movwf	strncmp@_l^0,c
  7031  002902  0E00               	movlw	high vfpfcnvrt@ct
  7032  002904  6E02               	movwf	(strncmp@_l+1)^0,c
  7033  002906  0ED4               	movlw	low STR_25
  7034  002908  6E03               	movwf	strncmp@_r^0,c
  7035  00290A  0E06               	movlw	high STR_25
  7036  00290C  6E04               	movwf	(strncmp@_r+1)^0,c
  7037  00290E  0E00               	movlw	0
  7038  002910  6E06               	movwf	(strncmp@n+1)^0,c
  7039  002912  0E02               	movlw	2
  7040  002914  6E05               	movwf	strncmp@n^0,c
  7041  002916  ECE4  F026         	call	_strncmp	;wreg free
  7042  00291A  5001               	movf	?_strncmp^0,w,c
  7043  00291C  1002               	iorwf	(?_strncmp+1)^0,w,c
  7044  00291E  A4D8               	btfss	status,2,c
  7045  002920  EF94  F014         	goto	u6671
  7046  002924  EF96  F014         	goto	u6670
  7047  002928                     u6671:
  7048  002928  EF12  F015         	goto	l5419
  7049  00292C                     u6670:
  7050  00292C                     
  7051                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7052  00292C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7053  002930  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7054  002934  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7055  002938  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7056  00293C  0E01               	movlw	1
  7057  00293E  0100               	movlb	0	; () banked
  7058  002940  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7059  002942  0E00               	movlw	0
  7060  002944  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7061  002946  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7062  00294A  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7063  00294E                     	if	0	;tblptru may be non-zero
  7064  00294E                     	endif
  7065  00294E                     	if	0	;tblptru may be non-zero
  7066  00294E                     	endif
  7067  00294E  0008               	tblrd		*
  7068  002950  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7069  002954  0EBF               	movlw	191
  7070  002956  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7071  002958  0EFF               	movlw	255
  7072  00295A  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7073  00295C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7074  002960  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7075  002964  CFDE FFF6          	movff	postinc2,tblptrl
  7076  002968  CFDD FFF7          	movff	postdec2,tblptrh
  7077  00296C                     	if	0	;tblptru may be non-zero
  7078  00296C                     	endif
  7079  00296C                     	if	0	;tblptru may be non-zero
  7080  00296C                     	endif
  7081  00296C  0008               	tblrd		*
  7082  00296E  50F5               	movf	tablat,w,c
  7083  002970  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7084  002972  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7085  002974  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7086  002976  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7087  002978  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7088  00297A  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7089  00297C  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7090  00297E  E10A               	bnz	u6680
  7091  002980  0E1A               	movlw	26
  7092  002982  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7093  002984  A0D8               	btfss	status,0,c
  7094  002986  EFC7  F014         	goto	u6681
  7095  00298A  EFCA  F014         	goto	u6680
  7096  00298E                     u6681:
  7097  00298E  0E01               	movlw	1
  7098  002990  EFCB  F014         	goto	u6690
  7099  002994                     u6680:
  7100  002994  0E00               	movlw	0
  7101  002996                     u6690:
  7102  002996  6FBD               	movwf	_vfpfcnvrt$2536& (0+255),b
  7103  002998  6BBE               	clrf	(_vfpfcnvrt$2536+1)& (0+255),b
  7104  00299A                     
  7105                           ; BSR set to: 0
  7106  00299A  51BD               	movf	_vfpfcnvrt$2536& (0+255),w,b
  7107  00299C  11BE               	iorwf	(_vfpfcnvrt$2536+1)& (0+255),w,b
  7108  00299E  B4D8               	btfsc	status,2,c
  7109  0029A0  EFD4  F014         	goto	u6701
  7110  0029A4  EFD6  F014         	goto	u6700
  7111  0029A8                     u6701:
  7112  0029A8  EFF0  F014         	goto	l5413
  7113  0029AC                     u6700:
  7114  0029AC                     
  7115                           ; BSR set to: 0
  7116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7117  0029AC  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7118  0029B0  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7119  0029B4  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7120  0029B8  0E04               	movlw	4
  7121  0029BA  26DE               	addwf	postinc2,f,c
  7122  0029BC  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7123  0029C0  0E00               	movlw	0
  7124  0029C2  22DD               	addwfc	postdec2,f,c
  7125  0029C4  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7126  0029C8  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7127  0029CC  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7128  0029D0  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7129  0029D4  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7130  0029D8  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7131                           
  7132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7133  0029DC  EF08  F015         	goto	l1373
  7134  0029E0                     l5413:
  7135                           
  7136                           ; BSR set to: 0
  7137                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7138  0029E0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7139  0029E4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7140  0029E8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7141  0029EC  0E04               	movlw	4
  7142  0029EE  26DE               	addwf	postinc2,f,c
  7143  0029F0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7144  0029F4  0E00               	movlw	0
  7145  0029F6  22DD               	addwfc	postdec2,f,c
  7146  0029F8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7147  0029FC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7148  002A00  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7149  002A04  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7150  002A08  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7151  002A0C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7152  002A10                     l1373:
  7153                           
  7154                           ; BSR set to: 0
  7155                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7156  002A10  0E02               	movlw	2
  7157  002A12  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7158  002A16  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7159  002A1A  26DE               	addwf	postinc2,f,c
  7160  002A1C  0E00               	movlw	0
  7161  002A1E  22DD               	addwfc	postdec2,f,c
  7162  002A20  EF69  F014         	goto	l5399
  7163  002A24                     l5419:
  7164                           
  7165                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7166  002A24  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7167  002A28  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7168  002A2C  CFDE FFF6          	movff	postinc2,tblptrl
  7169  002A30  CFDD FFF7          	movff	postdec2,tblptrh
  7170  002A34                     	if	0	;tblptru may be non-zero
  7171  002A34                     	endif
  7172  002A34                     	if	0	;tblptru may be non-zero
  7173  002A34                     	endif
  7174  002A34  0008               	tblrd		*
  7175  002A36  50F5               	movf	tablat,w,c
  7176  002A38  0A25               	xorlw	37
  7177  002A3A  A4D8               	btfss	status,2,c
  7178  002A3C  EF22  F015         	goto	u6711
  7179  002A40  EF24  F015         	goto	u6710
  7180  002A44                     u6711:
  7181  002A44  EF3C  F015         	goto	l5429
  7182  002A48                     u6710:
  7183  002A48                     
  7184                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7185  002A48  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7186  002A4C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7187  002A50  2ADE               	incf	postinc2,f,c
  7188  002A52  0E00               	movlw	0
  7189  002A54  22DD               	addwfc	postdec2,f,c
  7190  002A56                     
  7191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7192  002A56  0E00               	movlw	0
  7193  002A58  6E02               	movwf	(fputc@c+1)^0,c
  7194  002A5A  0E25               	movlw	37
  7195  002A5C  6E01               	movwf	fputc@c^0,c
  7196  002A5E  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7197  002A62  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7198  002A66  EC4F  F027         	call	_fputc	;wreg free
  7199  002A6A                     l5425:
  7200                           
  7201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7202  002A6A  0E00               	movlw	0
  7203  002A6C  0100               	movlb	0	; () banked
  7204  002A6E  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7205  002A70  0E01               	movlw	1
  7206  002A72  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7207  002A74  EF65  F015         	goto	l1365
  7208  002A78                     l5429:
  7209                           
  7210                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7211  002A78  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7212  002A7C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7213  002A80  2ADE               	incf	postinc2,f,c
  7214  002A82  0E00               	movlw	0
  7215  002A84  22DD               	addwfc	postdec2,f,c
  7216  002A86                     
  7217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7218  002A86  0E00               	movlw	0
  7219  002A88  0100               	movlb	0	; () banked
  7220  002A8A  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7221  002A8C  0E00               	movlw	0
  7222  002A8E  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7223  002A90  EF65  F015         	goto	l1365
  7224  002A94                     l5435:
  7225                           
  7226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7227  002A94  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7228  002A98  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7229  002A9C  CFDE FFF6          	movff	postinc2,tblptrl
  7230  002AA0  CFDD FFF7          	movff	postdec2,tblptrh
  7231  002AA4                     	if	0	;tblptru may be non-zero
  7232  002AA4                     	endif
  7233  002AA4                     	if	0	;tblptru may be non-zero
  7234  002AA4                     	endif
  7235  002AA4  0008               	tblrd		*
  7236  002AA6  50F5               	movf	tablat,w,c
  7237  002AA8  6E01               	movwf	fputc@c^0,c
  7238  002AAA  6A02               	clrf	(fputc@c+1)^0,c
  7239  002AAC  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7240  002AB0  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7241  002AB4  EC4F  F027         	call	_fputc	;wreg free
  7242  002AB8                     
  7243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7244  002AB8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7245  002ABC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7246  002AC0  2ADE               	incf	postinc2,f,c
  7247  002AC2  0E00               	movlw	0
  7248  002AC4  22DD               	addwfc	postdec2,f,c
  7249  002AC6  EF35  F015         	goto	l5425
  7250  002ACA                     l1365:
  7251  002ACA  0012               	return		;funcret
  7252  002ACC                     __end_of_vfpfcnvrt:
  7253                           	callstack 0
  7254                           
  7255 ;; *************** function _strncmp *****************
  7256 ;; Defined at:
  7257 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7258 ;; Parameters:    Size  Location     Type
  7259 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7260 ;;		 -> vfpfcnvrt@ct(3), 
  7261 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7262 ;;		 -> STR_27(3), 
  7263 ;;  n               2    4[COMRAM] unsigned int 
  7264 ;; Auto vars:     Size  Location     Type
  7265 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7266 ;;		 -> STR_27(3), 
  7267 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7268 ;;		 -> vfpfcnvrt@ct(3), 
  7269 ;; Return value:  Size  Location     Type
  7270 ;;                  2    0[COMRAM] int 
  7271 ;; Registers used:
  7272 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7273 ;; Tracked objects:
  7274 ;;		On entry : 0/0
  7275 ;;		On exit  : 0/0
  7276 ;;		Unchanged: 0/0
  7277 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7278 ;;      Params:         6       0       0       0       0       0       0
  7279 ;;      Locals:         4       0       0       0       0       0       0
  7280 ;;      Temps:          1       0       0       0       0       0       0
  7281 ;;      Totals:        11       0       0       0       0       0       0
  7282 ;;Total ram usage:       11 bytes
  7283 ;; Hardware stack levels used:    1
  7284 ;; Hardware stack levels required when called:    1
  7285 ;; This function calls:
  7286 ;;		Nothing
  7287 ;; This function is called by:
  7288 ;;		_vfpfcnvrt
  7289 ;; This function uses a non-reentrant model
  7290 ;;
  7291                           
  7292                           	psect	text22
  7293  004DC8                     __ptext22:
  7294                           	callstack 0
  7295  004DC8                     _strncmp:
  7296                           	callstack 24
  7297  004DC8  C001  F008         	movff	strncmp@_l,strncmp@l
  7298  004DCC  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7299  004DD0  C003  F00A         	movff	strncmp@_r,strncmp@r
  7300  004DD4  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7301  004DD8  0605               	decf	strncmp@n^0,f,c
  7302  004DDA  A0D8               	btfss	status,0,c
  7303  004DDC  0606               	decf	(strncmp@n+1)^0,f,c
  7304  004DDE  2805               	incf	strncmp@n^0,w,c
  7305  004DE0  E106               	bnz	u6261
  7306  004DE2  2806               	incf	(strncmp@n+1)^0,w,c
  7307  004DE4  A4D8               	btfss	status,2,c
  7308  004DE6  EFF7  F026         	goto	u6261
  7309  004DEA  EFF9  F026         	goto	u6260
  7310  004DEE                     u6261:
  7311  004DEE  EF06  F027         	goto	l5197
  7312  004DF2                     u6260:
  7313  004DF2  0E00               	movlw	0
  7314  004DF4  6E02               	movwf	(?_strncmp+1)^0,c
  7315  004DF6  0E00               	movlw	0
  7316  004DF8  6E01               	movwf	?_strncmp^0,c
  7317  004DFA  EF4E  F027         	goto	l1501
  7318  004DFE                     l5195:
  7319  004DFE  4A08               	infsnz	strncmp@l^0,f,c
  7320  004E00  2A09               	incf	(strncmp@l+1)^0,f,c
  7321  004E02  4A0A               	infsnz	strncmp@r^0,f,c
  7322  004E04  2A0B               	incf	(strncmp@r+1)^0,f,c
  7323  004E06  0605               	decf	strncmp@n^0,f,c
  7324  004E08  A0D8               	btfss	status,0,c
  7325  004E0A  0606               	decf	(strncmp@n+1)^0,f,c
  7326  004E0C                     l5197:
  7327  004E0C  C008  FFD9         	movff	strncmp@l,fsr2l
  7328  004E10  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7329  004E14  50DF               	movf	indf2,w,c
  7330  004E16  B4D8               	btfsc	status,2,c
  7331  004E18  EF10  F027         	goto	u6271
  7332  004E1C  EF12  F027         	goto	u6270
  7333  004E20                     u6271:
  7334  004E20  EF3D  F027         	goto	l5205
  7335  004E24                     u6270:
  7336  004E24  C00A  FFF6         	movff	strncmp@r,tblptrl
  7337  004E28  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7338  004E2C                     	if	0	;tblptru may be non-zero
  7339  004E2C                     	endif
  7340  004E2C                     	if	0	;tblptru may be non-zero
  7341  004E2C                     	endif
  7342  004E2C  0008               	tblrd		*
  7343  004E2E  50F5               	movf	tablat,w,c
  7344  004E30  0900               	iorlw	0
  7345  004E32  B4D8               	btfsc	status,2,c
  7346  004E34  EF1E  F027         	goto	u6281
  7347  004E38  EF20  F027         	goto	u6280
  7348  004E3C                     u6281:
  7349  004E3C  EF3D  F027         	goto	l5205
  7350  004E40                     u6280:
  7351  004E40  5005               	movf	strncmp@n^0,w,c
  7352  004E42  1006               	iorwf	(strncmp@n+1)^0,w,c
  7353  004E44  B4D8               	btfsc	status,2,c
  7354  004E46  EF27  F027         	goto	u6291
  7355  004E4A  EF29  F027         	goto	u6290
  7356  004E4E                     u6291:
  7357  004E4E  EF3D  F027         	goto	l5205
  7358  004E52                     u6290:
  7359  004E52  C008  FFD9         	movff	strncmp@l,fsr2l
  7360  004E56  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7361  004E5A  50DF               	movf	indf2,w,c
  7362  004E5C  6E07               	movwf	??_strncmp^0,c
  7363  004E5E  C00A  FFF6         	movff	strncmp@r,tblptrl
  7364  004E62  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7365  004E66                     	if	0	;tblptru may be non-zero
  7366  004E66                     	endif
  7367  004E66                     	if	0	;tblptru may be non-zero
  7368  004E66                     	endif
  7369  004E66  0008               	tblrd		*
  7370  004E68  50F5               	movf	tablat,w,c
  7371  004E6A  1807               	xorwf	??_strncmp^0,w,c
  7372  004E6C  B4D8               	btfsc	status,2,c
  7373  004E6E  EF3B  F027         	goto	u6301
  7374  004E72  EF3D  F027         	goto	u6300
  7375  004E76                     u6301:
  7376  004E76  EFFF  F026         	goto	l5195
  7377  004E7A                     u6300:
  7378  004E7A                     l5205:
  7379  004E7A  C008  FFD9         	movff	strncmp@l,fsr2l
  7380  004E7E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7381  004E82  50DF               	movf	indf2,w,c
  7382  004E84  6E07               	movwf	??_strncmp^0,c
  7383  004E86  C00A  FFF6         	movff	strncmp@r,tblptrl
  7384  004E8A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7385  004E8E                     	if	0	;tblptru may be non-zero
  7386  004E8E                     	endif
  7387  004E8E                     	if	0	;tblptru may be non-zero
  7388  004E8E                     	endif
  7389  004E8E  0008               	tblrd		*
  7390  004E90  50F5               	movf	tablat,w,c
  7391  004E92  5C07               	subwf	??_strncmp^0,w,c
  7392  004E94  6E01               	movwf	?_strncmp^0,c
  7393  004E96  6A02               	clrf	(?_strncmp+1)^0,c
  7394  004E98  A0D8               	btfss	status,0,c
  7395  004E9A  0602               	decf	(?_strncmp+1)^0,f,c
  7396  004E9C                     l1501:
  7397  004E9C  0012               	return		;funcret
  7398  004E9E                     __end_of_strncmp:
  7399                           	callstack 0
  7400                           
  7401 ;; *************** function _efgtoa *****************
  7402 ;; Defined at:
  7403 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7404 ;; Parameters:    Size  Location     Type
  7405 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7406 ;;		 -> sprintf@f(6), 
  7407 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7408 ;;  c               1   93[COMRAM] unsigned char 
  7409 ;; Auto vars:     Size  Location     Type
  7410 ;;  u               4   67[BANK0 ] unsigned char 
  7411 ;;  g               4   59[BANK0 ] unsigned char 
  7412 ;;  l               4   53[BANK0 ] unsigned char 
  7413 ;;  h               4   49[BANK0 ] unsigned char 
  7414 ;;  ou              4   15[BANK0 ] unsigned char 
  7415 ;;  n               2   65[BANK0 ] int 
  7416 ;;  e               2   63[BANK0 ] int 
  7417 ;;  i               2   57[BANK0 ] int 
  7418 ;;  w               2   46[BANK0 ] int 
  7419 ;;  p               2   43[BANK0 ] int 
  7420 ;;  sign            2   41[BANK0 ] int 
  7421 ;;  d               2   39[BANK0 ] int 
  7422 ;;  ne              2   37[BANK0 ] int 
  7423 ;;  m               2   35[BANK0 ] int 
  7424 ;;  pp              2   33[BANK0 ] int 
  7425 ;;  t               2   31[BANK0 ] int 
  7426 ;;  mode            1   48[BANK0 ] unsigned char 
  7427 ;;  nmode           1   45[BANK0 ] unsigned char 
  7428 ;; Return value:  Size  Location     Type
  7429 ;;                  2   87[COMRAM] int 
  7430 ;; Registers used:
  7431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7432 ;; Tracked objects:
  7433 ;;		On entry : 0/0
  7434 ;;		On exit  : 0/0
  7435 ;;		Unchanged: 0/0
  7436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7437 ;;      Params:         7       0       0       0       0       0       0
  7438 ;;      Locals:         0      56       0       0       0       0       0
  7439 ;;      Temps:          0       5       0       0       0       0       0
  7440 ;;      Totals:         7      61       0       0       0       0       0
  7441 ;;Total ram usage:       68 bytes
  7442 ;; Hardware stack levels used:    1
  7443 ;; Hardware stack levels required when called:    5
  7444 ;; This function calls:
  7445 ;;		___awdiv
  7446 ;;		___awmod
  7447 ;;		___fladd
  7448 ;;		___fldiv
  7449 ;;		___fleq
  7450 ;;		___flge
  7451 ;;		___flmul
  7452 ;;		___flneg
  7453 ;;		___flsub
  7454 ;;		___fltol
  7455 ;;		___fpclassifyf
  7456 ;;		_floorf
  7457 ;;		_isupper
  7458 ;;		_pad
  7459 ;;		_strcpy
  7460 ;;		_tolower
  7461 ;; This function is called by:
  7462 ;;		_vfpfcnvrt
  7463 ;; This function uses a non-reentrant model
  7464 ;;
  7465                           
  7466                           	psect	text23
  7467  0006D8                     __ptext23:
  7468                           	callstack 0
  7469  0006D8                     _efgtoa:
  7470                           	callstack 20
  7471  0006D8                     
  7472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7473  0006D8  0E00               	movlw	0
  7474  0006DA  0100               	movlb	0	; () banked
  7475  0006DC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7476  0006DE  0E00               	movlw	0
  7477  0006E0  6F89               	movwf	efgtoa@sign& (0+255),b
  7478  0006E2                     
  7479                           ; BSR set to: 0
  7480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7481  0006E2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7482  0006E6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7483  0006EA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7484  0006EE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7485  0006F2                     
  7486                           ; BSR set to: 0
  7487                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7488  0006F2  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7489  0006F4  EF80  F003         	goto	u5670
  7490  0006F8  EF7E  F003         	goto	u5671
  7491  0006FC                     u5671:
  7492  0006FC  EF96  F003         	goto	l4859
  7493  000700                     u5670:
  7494  000700                     
  7495                           ; BSR set to: 0
  7496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7497  000700  0E00               	movlw	0
  7498  000702  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7499  000704  0E01               	movlw	1
  7500  000706  6F89               	movwf	efgtoa@sign& (0+255),b
  7501  000708                     
  7502                           ; BSR set to: 0
  7503                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7504  000708  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7505  00070C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7506  000710  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7507  000714  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7508  000718  EC36  F02D         	call	___flneg	;wreg free
  7509  00071C  C001  F09B         	movff	?___flneg,efgtoa@g
  7510  000720  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7511  000724  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7512  000728  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7513  00072C                     l4859:
  7514                           
  7515                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7516  00072C  0E00               	movlw	0
  7517  00072E  0100               	movlb	0	; () banked
  7518  000730  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7519  000732  0E00               	movlw	0
  7520  000734  6FA1               	movwf	efgtoa@n& (0+255),b
  7521  000736                     
  7522                           ; BSR set to: 0
  7523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7524  000736  C1B4  F08E         	movff	_width,efgtoa@w
  7525  00073A  C1B5  F08F         	movff	_width+1,efgtoa@w+1
  7526  00073E                     
  7527                           ; BSR set to: 0
  7528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7529  00073E  5189               	movf	efgtoa@sign& (0+255),w,b
  7530  000740  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7531  000742  A4D8               	btfss	status,2,c
  7532  000744  EFA6  F003         	goto	u5681
  7533  000748  EFA8  F003         	goto	u5680
  7534  00074C                     u5681:
  7535  00074C  EFB0  F003         	goto	l4867
  7536  000750                     u5680:
  7537  000750                     
  7538                           ; BSR set to: 0
  7539  000750  0101               	movlb	1	; () banked
  7540  000752  A5B8               	btfss	_flags& (0+255),2,b
  7541  000754  EFAE  F003         	goto	u5691
  7542  000758  EFB0  F003         	goto	u5690
  7543  00075C                     u5691:
  7544  00075C  EFCB  F003         	goto	l4879
  7545  000760                     u5690:
  7546  000760                     l4867:
  7547                           
  7548                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7549  000760  0100               	movlb	0	; () banked
  7550  000762  5189               	movf	efgtoa@sign& (0+255),w,b
  7551  000764  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7552  000766  A4D8               	btfss	status,2,c
  7553  000768  EFB8  F003         	goto	u5701
  7554  00076C  EFBA  F003         	goto	u5700
  7555  000770                     u5701:
  7556  000770  EFC0  F003         	goto	l4871
  7557  000774                     u5700:
  7558  000774                     
  7559                           ; BSR set to: 0
  7560  000774  0E00               	movlw	0
  7561  000776  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7562  000778  0E2B               	movlw	43
  7563  00077A  6F73               	movwf	_efgtoa$2505& (0+255),b
  7564  00077C  EFC4  F003         	goto	l4873
  7565  000780                     l4871:
  7566                           
  7567                           ; BSR set to: 0
  7568  000780  0E00               	movlw	0
  7569  000782  6F74               	movwf	(_efgtoa$2505+1)& (0+255),b
  7570  000784  0E2D               	movlw	45
  7571  000786  6F73               	movwf	_efgtoa$2505& (0+255),b
  7572  000788                     l4873:
  7573                           
  7574                           ; BSR set to: 0
  7575  000788  C073  F200         	movff	_efgtoa$2505,_dbuf
  7576  00078C                     
  7577                           ; BSR set to: 0
  7578                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7579  00078C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7580  00078E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7581  000790                     
  7582                           ; BSR set to: 0
  7583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7584  000790  078E               	decf	efgtoa@w& (0+255),f,b
  7585  000792  A0D8               	btfss	status,0,c
  7586  000794  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7587  000796                     l4879:
  7588                           
  7589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7590  000796  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7591  00079A  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7592  00079E  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7593  0007A2  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7594  0007A6  ECE8  F025         	call	___fpclassifyf	;wreg free
  7595  0007AA  0401               	decf	?___fpclassifyf^0,w,c
  7596  0007AC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7597  0007AE  A4D8               	btfss	status,2,c
  7598  0007B0  EFDC  F003         	goto	u5711
  7599  0007B4  EFDE  F003         	goto	u5710
  7600  0007B8                     u5711:
  7601  0007B8  EF35  F004         	goto	l4897
  7602  0007BC                     u5710:
  7603  0007BC  0EBF               	movlw	191
  7604  0007BE  0100               	movlb	0	; () banked
  7605  0007C0  6F6A               	movwf	??_efgtoa& (0+255),b
  7606  0007C2  0EFF               	movlw	255
  7607  0007C4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7608  0007C6  505E               	movf	efgtoa@c^0,w,c
  7609  0007C8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7610  0007CA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7611  0007CC  516A               	movf	??_efgtoa& (0+255),w,b
  7612  0007CE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7613  0007D0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7614  0007D2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7615  0007D4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7616  0007D6  E10A               	bnz	u5720
  7617  0007D8  0E1A               	movlw	26
  7618  0007DA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7619  0007DC  A0D8               	btfss	status,0,c
  7620  0007DE  EFF3  F003         	goto	u5721
  7621  0007E2  EFF6  F003         	goto	u5720
  7622  0007E6                     u5721:
  7623  0007E6  0E01               	movlw	1
  7624  0007E8  EFF7  F003         	goto	u5730
  7625  0007EC                     u5720:
  7626  0007EC  0E00               	movlw	0
  7627  0007EE                     u5730:
  7628  0007EE  6F75               	movwf	_efgtoa$2506& (0+255),b
  7629  0007F0  6B76               	clrf	(_efgtoa$2506+1)& (0+255),b
  7630  0007F2                     
  7631                           ; BSR set to: 0
  7632  0007F2  5175               	movf	_efgtoa$2506& (0+255),w,b
  7633  0007F4  1176               	iorwf	(_efgtoa$2506+1)& (0+255),w,b
  7634  0007F6  B4D8               	btfsc	status,2,c
  7635  0007F8  EF00  F004         	goto	u5741
  7636  0007FC  EF02  F004         	goto	u5740
  7637  000800                     u5741:
  7638  000800  EF10  F004         	goto	l4889
  7639  000804                     u5740:
  7640  000804                     
  7641                           ; BSR set to: 0
  7642                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7643  000804  0E00               	movlw	low _dbuf
  7644  000806  25A1               	addwf	efgtoa@n& (0+255),w,b
  7645  000808  6E01               	movwf	strcpy@dest^0,c
  7646  00080A  0E02               	movlw	high _dbuf
  7647  00080C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7648  00080E  6E02               	movwf	(strcpy@dest+1)^0,c
  7649  000810  0EC4               	movlw	low STR_17
  7650  000812  6E03               	movwf	strcpy@src^0,c
  7651  000814  0E06               	movlw	high STR_17
  7652  000816  6E04               	movwf	(strcpy@src+1)^0,c
  7653  000818  EC80  F02B         	call	_strcpy	;wreg free
  7654                           
  7655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7656  00081C  EF1C  F004         	goto	l4891
  7657  000820                     l4889:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7661  000820  0E00               	movlw	low _dbuf
  7662  000822  25A1               	addwf	efgtoa@n& (0+255),w,b
  7663  000824  6E01               	movwf	strcpy@dest^0,c
  7664  000826  0E02               	movlw	high _dbuf
  7665  000828  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7666  00082A  6E02               	movwf	(strcpy@dest+1)^0,c
  7667  00082C  0ECC               	movlw	low STR_18
  7668  00082E  6E03               	movwf	strcpy@src^0,c
  7669  000830  0E06               	movlw	high STR_18
  7670  000832  6E04               	movwf	(strcpy@src+1)^0,c
  7671  000834  EC80  F02B         	call	_strcpy	;wreg free
  7672  000838                     l4891:
  7673                           
  7674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7675  000838  0100               	movlb	0	; () banked
  7676  00083A  0EFD               	movlw	253
  7677  00083C  278E               	addwf	efgtoa@w& (0+255),f,b
  7678  00083E  0EFF               	movlw	255
  7679  000840  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7680  000842                     l4893:
  7681                           
  7682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7683  000842  C058  F011         	movff	efgtoa@fp,pad@fp
  7684  000846  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7685  00084A  0E00               	movlw	low _dbuf
  7686  00084C  6E13               	movwf	pad@buf^0,c
  7687  00084E  0E02               	movlw	high _dbuf
  7688  000850  6E14               	movwf	(pad@buf+1)^0,c
  7689  000852  C08E  F015         	movff	efgtoa@w,pad@p
  7690  000856  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7691  00085A  ECB4  F027         	call	_pad	;wreg free
  7692  00085E  C011  F058         	movff	?_pad,?_efgtoa
  7693  000862  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7694  000866  EF4E  F009         	goto	l1263
  7695  00086A                     l4897:
  7696                           
  7697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7698  00086A  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7699  00086E  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7700  000872  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7701  000876  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7702  00087A  ECE8  F025         	call	___fpclassifyf	;wreg free
  7703  00087E  5001               	movf	?___fpclassifyf^0,w,c
  7704  000880  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7705  000882  A4D8               	btfss	status,2,c
  7706  000884  EF46  F004         	goto	u5751
  7707  000888  EF48  F004         	goto	u5750
  7708  00088C                     u5751:
  7709  00088C  EF88  F004         	goto	l4915
  7710  000890                     u5750:
  7711  000890  0EBF               	movlw	191
  7712  000892  0100               	movlb	0	; () banked
  7713  000894  6F6A               	movwf	??_efgtoa& (0+255),b
  7714  000896  0EFF               	movlw	255
  7715  000898  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7716  00089A  505E               	movf	efgtoa@c^0,w,c
  7717  00089C  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7718  00089E  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7719  0008A0  516A               	movf	??_efgtoa& (0+255),w,b
  7720  0008A2  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7721  0008A4  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7722  0008A6  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7723  0008A8  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7724  0008AA  E10A               	bnz	u5760
  7725  0008AC  0E1A               	movlw	26
  7726  0008AE  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7727  0008B0  A0D8               	btfss	status,0,c
  7728  0008B2  EF5D  F004         	goto	u5761
  7729  0008B6  EF60  F004         	goto	u5760
  7730  0008BA                     u5761:
  7731  0008BA  0E01               	movlw	1
  7732  0008BC  EF61  F004         	goto	u5770
  7733  0008C0                     u5760:
  7734  0008C0  0E00               	movlw	0
  7735  0008C2                     u5770:
  7736  0008C2  6F77               	movwf	_efgtoa$2510& (0+255),b
  7737  0008C4  6B78               	clrf	(_efgtoa$2510+1)& (0+255),b
  7738  0008C6                     
  7739                           ; BSR set to: 0
  7740  0008C6  5177               	movf	_efgtoa$2510& (0+255),w,b
  7741  0008C8  1178               	iorwf	(_efgtoa$2510+1)& (0+255),w,b
  7742  0008CA  B4D8               	btfsc	status,2,c
  7743  0008CC  EF6A  F004         	goto	u5781
  7744  0008D0  EF6C  F004         	goto	u5780
  7745  0008D4                     u5781:
  7746  0008D4  EF7A  F004         	goto	l4907
  7747  0008D8                     u5780:
  7748  0008D8                     
  7749                           ; BSR set to: 0
  7750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7751  0008D8  0E00               	movlw	low _dbuf
  7752  0008DA  25A1               	addwf	efgtoa@n& (0+255),w,b
  7753  0008DC  6E01               	movwf	strcpy@dest^0,c
  7754  0008DE  0E02               	movlw	high _dbuf
  7755  0008E0  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7756  0008E2  6E02               	movwf	(strcpy@dest+1)^0,c
  7757  0008E4  0EC8               	movlw	low STR_21
  7758  0008E6  6E03               	movwf	strcpy@src^0,c
  7759  0008E8  0E06               	movlw	high STR_21
  7760  0008EA  6E04               	movwf	(strcpy@src+1)^0,c
  7761  0008EC  EC80  F02B         	call	_strcpy	;wreg free
  7762                           
  7763                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7764  0008F0  EF1C  F004         	goto	l4891
  7765  0008F4                     l4907:
  7766                           
  7767                           ; BSR set to: 0
  7768                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7769  0008F4  0E00               	movlw	low _dbuf
  7770  0008F6  25A1               	addwf	efgtoa@n& (0+255),w,b
  7771  0008F8  6E01               	movwf	strcpy@dest^0,c
  7772  0008FA  0E02               	movlw	high _dbuf
  7773  0008FC  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7774  0008FE  6E02               	movwf	(strcpy@dest+1)^0,c
  7775  000900  0ED0               	movlw	low STR_22
  7776  000902  6E03               	movwf	strcpy@src^0,c
  7777  000904  0E06               	movlw	high STR_22
  7778  000906  6E04               	movwf	(strcpy@src+1)^0,c
  7779  000908  EC80  F02B         	call	_strcpy	;wreg free
  7780  00090C  EF1C  F004         	goto	l4891
  7781  000910                     l4915:
  7782                           
  7783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7784  000910  0E00               	movlw	0
  7785  000912  0100               	movlb	0	; () banked
  7786  000914  6FA3               	movwf	efgtoa@u& (0+255),b
  7787  000916  0E00               	movlw	0
  7788  000918  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7789  00091A  0E80               	movlw	128
  7790  00091C  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7791  00091E  0E3F               	movlw	63
  7792  000920  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7793                           
  7794                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7795  000922  0E00               	movlw	0
  7796  000924  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7797  000926  0E00               	movlw	0
  7798  000928  6F9F               	movwf	efgtoa@e& (0+255),b
  7799  00092A                     
  7800                           ; BSR set to: 0
  7801                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7802  00092A  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7803  00092E  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7804  000932  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7805  000936  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7806  00093A  0E00               	movlw	0
  7807  00093C  6E05               	movwf	___fleq@ff2^0,c
  7808  00093E  0E00               	movlw	0
  7809  000940  6E06               	movwf	(___fleq@ff2+1)^0,c
  7810  000942  0E00               	movlw	0
  7811  000944  6E07               	movwf	(___fleq@ff2+2)^0,c
  7812  000946  0E00               	movlw	0
  7813  000948  6E08               	movwf	(___fleq@ff2+3)^0,c
  7814  00094A  ECD1  F028         	call	___fleq	;wreg free
  7815  00094E  B0D8               	btfsc	status,0,c
  7816  000950  EFAC  F004         	goto	u5791
  7817  000954  EFAE  F004         	goto	u5790
  7818  000958                     u5791:
  7819  000958  EF31  F005         	goto	l4933
  7820  00095C                     u5790:
  7821  00095C  EFCD  F004         	goto	l4925
  7822  000960                     l4921:
  7823                           
  7824                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7825  000960  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7826  000964  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7827  000968  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7828  00096C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7829  000970  0E00               	movlw	0
  7830  000972  6E20               	movwf	___flmul@a^0,c
  7831  000974  0E00               	movlw	0
  7832  000976  6E21               	movwf	(___flmul@a+1)^0,c
  7833  000978  0E20               	movlw	32
  7834  00097A  6E22               	movwf	(___flmul@a+2)^0,c
  7835  00097C  0E41               	movlw	65
  7836  00097E  6E23               	movwf	(___flmul@a+3)^0,c
  7837  000980  ECC6  F017         	call	___flmul	;wreg free
  7838  000984  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7839  000988  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7840  00098C  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7841  000990  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7842  000994                     
  7843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7844  000994  0100               	movlb	0	; () banked
  7845  000996  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7846  000998  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7847  00099A                     l4925:
  7848                           
  7849                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7850  00099A  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7851  00099E  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7852  0009A2  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7853  0009A6  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7854  0009AA  0E00               	movlw	0
  7855  0009AC  6E20               	movwf	___flmul@a^0,c
  7856  0009AE  0E00               	movlw	0
  7857  0009B0  6E21               	movwf	(___flmul@a+1)^0,c
  7858  0009B2  0E20               	movlw	32
  7859  0009B4  6E22               	movwf	(___flmul@a+2)^0,c
  7860  0009B6  0E41               	movlw	65
  7861  0009B8  6E23               	movwf	(___flmul@a+3)^0,c
  7862  0009BA  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7863  0009BE  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7864  0009C2  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7865  0009C6  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7866  0009CA  ECC6  F017         	call	___flmul	;wreg free
  7867  0009CE  C01C  F039         	movff	?___flmul,___flge@ff2
  7868  0009D2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7869  0009D6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7870  0009DA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7871  0009DE  EC66  F025         	call	___flge	;wreg free
  7872  0009E2  B0D8               	btfsc	status,0,c
  7873  0009E4  EFF6  F004         	goto	u5801
  7874  0009E8  EFF8  F004         	goto	u5800
  7875  0009EC                     u5801:
  7876  0009EC  EFB0  F004         	goto	l4921
  7877  0009F0                     u5800:
  7878  0009F0  EF18  F005         	goto	l4931
  7879  0009F4                     l4927:
  7880                           
  7881                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7882  0009F4  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7883  0009F8  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7884  0009FC  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7885  000A00  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7886  000A04  0E00               	movlw	0
  7887  000A06  6E39               	movwf	___fldiv@a^0,c
  7888  000A08  0E00               	movlw	0
  7889  000A0A  6E3A               	movwf	(___fldiv@a+1)^0,c
  7890  000A0C  0E20               	movlw	32
  7891  000A0E  6E3B               	movwf	(___fldiv@a+2)^0,c
  7892  000A10  0E41               	movlw	65
  7893  000A12  6E3C               	movwf	(___fldiv@a+3)^0,c
  7894  000A14  ECDB  F019         	call	___fldiv	;wreg free
  7895  000A18  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7896  000A1C  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7897  000A20  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7898  000A24  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7899  000A28                     
  7900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7901  000A28  0100               	movlb	0	; () banked
  7902  000A2A  079F               	decf	efgtoa@e& (0+255),f,b
  7903  000A2C  A0D8               	btfss	status,0,c
  7904  000A2E  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7905  000A30                     l4931:
  7906                           
  7907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7908  000A30  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7909  000A34  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7910  000A38  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7911  000A3C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7912  000A40  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7913  000A44  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7914  000A48  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7915  000A4C  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7916  000A50  EC66  F025         	call	___flge	;wreg free
  7917  000A54  A0D8               	btfss	status,0,c
  7918  000A56  EF2F  F005         	goto	u5811
  7919  000A5A  EF31  F005         	goto	u5810
  7920  000A5E                     u5811:
  7921  000A5E  EFFA  F004         	goto	l4927
  7922  000A62                     u5810:
  7923  000A62                     l4933:
  7924                           
  7925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7926  000A62  C05E  F007         	movff	efgtoa@c,tolower@c
  7927  000A66  6A08               	clrf	(tolower@c+1)^0,c
  7928  000A68  EC50  F02B         	call	_tolower	;wreg free
  7929  000A6C  5007               	movf	?_tolower^0,w,c
  7930  000A6E  0100               	movlb	0	; () banked
  7931  000A70  6F90               	movwf	efgtoa@mode& (0+255),b
  7932  000A72                     
  7933                           ; BSR set to: 0
  7934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7935  000A72  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7936  000A76                     
  7937                           ; BSR set to: 0
  7938                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7939  000A76  0E67               	movlw	103
  7940  000A78  1990               	xorwf	efgtoa@mode& (0+255),w,b
  7941  000A7A  A4D8               	btfss	status,2,c
  7942  000A7C  EF42  F005         	goto	u5821
  7943  000A80  EF44  F005         	goto	u5820
  7944  000A84                     u5821:
  7945  000A84  EF6C  F005         	goto	l4947
  7946  000A88                     u5820:
  7947  000A88                     
  7948                           ; BSR set to: 0
  7949                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  7950  000A88  0101               	movlb	1	; () banked
  7951  000A8A  51B6               	movf	_prec& (0+255),w,b
  7952  000A8C  11B7               	iorwf	(_prec+1)& (0+255),w,b
  7953  000A8E  A4D8               	btfss	status,2,c
  7954  000A90  EF4C  F005         	goto	u5831
  7955  000A94  EF4E  F005         	goto	u5830
  7956  000A98                     u5831:
  7957  000A98  EF52  F005         	goto	l4943
  7958  000A9C                     u5830:
  7959  000A9C                     
  7960                           ; BSR set to: 1
  7961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  7962  000A9C  0E00               	movlw	0
  7963  000A9E  6FB7               	movwf	(_prec+1)& (0+255),b
  7964  000AA0  0E01               	movlw	1
  7965  000AA2  6FB6               	movwf	_prec& (0+255),b
  7966  000AA4                     l4943:
  7967                           
  7968                           ; BSR set to: 1
  7969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  7970  000AA4  BFB7               	btfsc	(_prec+1)& (0+255),7,b
  7971  000AA6  EF5F  F005         	goto	u5840
  7972  000AAA  51B7               	movf	(_prec+1)& (0+255),w,b
  7973  000AAC  E106               	bnz	u5841
  7974  000AAE  05B6               	decf	_prec& (0+255),w,b
  7975  000AB0  B0D8               	btfsc	status,0,c
  7976  000AB2  EF5D  F005         	goto	u5841
  7977  000AB6  EF5F  F005         	goto	u5840
  7978  000ABA                     u5841:
  7979  000ABA  EF66  F005         	goto	l1281
  7980  000ABE                     u5840:
  7981  000ABE                     l4945:
  7982                           
  7983                           ; BSR set to: 1
  7984  000ABE  0E00               	movlw	0
  7985  000AC0  0100               	movlb	0	; () banked
  7986  000AC2  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  7987  000AC4  0E06               	movlw	6
  7988  000AC6  6F8B               	movwf	efgtoa@p& (0+255),b
  7989  000AC8  EF76  F005         	goto	l4953
  7990  000ACC                     l1281:
  7991                           
  7992                           ; BSR set to: 1
  7993  000ACC  C1B6  F08B         	movff	_prec,efgtoa@p
  7994  000AD0  C1B7  F08C         	movff	_prec+1,efgtoa@p+1
  7995  000AD4  EF76  F005         	goto	l4953
  7996  000AD8                     l4947:
  7997                           
  7998                           ; BSR set to: 0
  7999                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  8000  000AD8  0101               	movlb	1	; () banked
  8001  000ADA  BFB7               	btfsc	(_prec+1)& (0+255),7,b
  8002  000ADC  EF72  F005         	goto	u5851
  8003  000AE0  EF74  F005         	goto	u5850
  8004  000AE4                     u5851:
  8005  000AE4  EF5F  F005         	goto	l4945
  8006  000AE8                     u5850:
  8007  000AE8  EF66  F005         	goto	l1281
  8008  000AEC                     l4953:
  8009                           
  8010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8011  000AEC  0E67               	movlw	103
  8012  000AEE  0100               	movlb	0	; () banked
  8013  000AF0  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8014  000AF2  A4D8               	btfss	status,2,c
  8015  000AF4  EF7E  F005         	goto	u5861
  8016  000AF8  EF80  F005         	goto	u5860
  8017  000AFC                     u5861:
  8018  000AFC  EFAF  F005         	goto	l4963
  8019  000B00                     u5860:
  8020  000B00                     
  8021                           ; BSR set to: 0
  8022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8023  000B00  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8024  000B02  EF8E  F005         	goto	u5870
  8025  000B06  0EFC               	movlw	252
  8026  000B08  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8027  000B0A  0EFF               	movlw	255
  8028  000B0C  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8029  000B0E  A0D8               	btfss	status,0,c
  8030  000B10  EF8C  F005         	goto	u5871
  8031  000B14  EF8E  F005         	goto	u5870
  8032  000B18                     u5871:
  8033  000B18  EFAD  F005         	goto	l4961
  8034  000B1C                     u5870:
  8035  000B1C                     
  8036                           ; BSR set to: 0
  8037  000B1C  0EFF               	movlw	255
  8038  000B1E  6F6A               	movwf	??_efgtoa& (0+255),b
  8039  000B20  0EFF               	movlw	255
  8040  000B22  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8041  000B24  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8042  000B28  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8043  000B2C  516A               	movf	??_efgtoa& (0+255),w,b
  8044  000B2E  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8045  000B30  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8046  000B32  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8047  000B34  519F               	movf	efgtoa@e& (0+255),w,b
  8048  000B36  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8049  000B38  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8050  000B3A  0A80               	xorlw	128
  8051  000B3C  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8052  000B3E  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8053  000B40  0A80               	xorlw	128
  8054  000B42  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8055  000B44  A0D8               	btfss	status,0,c
  8056  000B46  EFA7  F005         	goto	u5881
  8057  000B4A  EFA9  F005         	goto	u5880
  8058  000B4E                     u5881:
  8059  000B4E  EFAD  F005         	goto	l4961
  8060  000B52                     u5880:
  8061  000B52                     
  8062                           ; BSR set to: 0
  8063                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8064  000B52  0E66               	movlw	102
  8065  000B54  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8066                           
  8067                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8068  000B56  EFAF  F005         	goto	l4963
  8069  000B5A                     l4961:
  8070                           
  8071                           ; BSR set to: 0
  8072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8073  000B5A  0E65               	movlw	101
  8074  000B5C  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8075  000B5E                     l4963:
  8076                           
  8077                           ; BSR set to: 0
  8078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8079  000B5E  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8080  000B62  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8081  000B66                     
  8082                           ; BSR set to: 0
  8083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8084  000B66  0E67               	movlw	103
  8085  000B68  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8086  000B6A  A4D8               	btfss	status,2,c
  8087  000B6C  EFBA  F005         	goto	u5891
  8088  000B70  EFBC  F005         	goto	u5890
  8089  000B74                     u5891:
  8090  000B74  EFCC  F005         	goto	l4971
  8091  000B78                     u5890:
  8092  000B78                     
  8093                           ; BSR set to: 0
  8094  000B78  0E66               	movlw	102
  8095  000B7A  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8096  000B7C  A4D8               	btfss	status,2,c
  8097  000B7E  EFC3  F005         	goto	u5901
  8098  000B82  EFC5  F005         	goto	u5900
  8099  000B86                     u5901:
  8100  000B86  EFCE  F005         	goto	l4973
  8101  000B8A                     u5900:
  8102  000B8A                     
  8103                           ; BSR set to: 0
  8104  000B8A  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8105  000B8C  EFCC  F005         	goto	u5910
  8106  000B90  EFCA  F005         	goto	u5911
  8107  000B94                     u5911:
  8108  000B94  EFCE  F005         	goto	l4973
  8109  000B98                     u5910:
  8110  000B98                     l4971:
  8111                           
  8112                           ; BSR set to: 0
  8113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8114  000B98  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8115  000B9A  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8116  000B9C                     l4973:
  8117                           
  8118                           ; BSR set to: 0
  8119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8120  000B9C  0E66               	movlw	102
  8121  000B9E  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8122  000BA0  A4D8               	btfss	status,2,c
  8123  000BA2  EFD5  F005         	goto	u5921
  8124  000BA6  EFD7  F005         	goto	u5920
  8125  000BAA                     u5921:
  8126  000BAA  EFF7  F005         	goto	l4983
  8127  000BAE                     u5920:
  8128  000BAE                     
  8129                           ; BSR set to: 0
  8130                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8131  000BAE  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8132  000BB0  EFDE  F005         	goto	u5930
  8133  000BB4  EFDC  F005         	goto	u5931
  8134  000BB8                     u5931:
  8135  000BB8  EFEA  F005         	goto	l4979
  8136  000BBC                     u5930:
  8137  000BBC                     
  8138                           ; BSR set to: 0
  8139                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8140  000BBC  0E00               	movlw	0
  8141  000BBE  6FA3               	movwf	efgtoa@u& (0+255),b
  8142  000BC0  0E00               	movlw	0
  8143  000BC2  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8144  000BC4  0E80               	movlw	128
  8145  000BC6  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8146  000BC8  0E3F               	movlw	63
  8147  000BCA  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8148                           
  8149                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8150  000BCC  0E00               	movlw	0
  8151  000BCE  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8152  000BD0  0E00               	movlw	0
  8153  000BD2  6F9F               	movwf	efgtoa@e& (0+255),b
  8154  000BD4                     l4979:
  8155                           
  8156                           ; BSR set to: 0
  8157                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8158  000BD4  0E67               	movlw	103
  8159  000BD6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8160  000BD8  B4D8               	btfsc	status,2,c
  8161  000BDA  EFF1  F005         	goto	u5941
  8162  000BDE  EFF3  F005         	goto	u5940
  8163  000BE2                     u5941:
  8164  000BE2  EFF7  F005         	goto	l4983
  8165  000BE6                     u5940:
  8166  000BE6                     
  8167                           ; BSR set to: 0
  8168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8169  000BE6  519F               	movf	efgtoa@e& (0+255),w,b
  8170  000BE8  2783               	addwf	efgtoa@m& (0+255),f,b
  8171  000BEA  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8172  000BEC  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8173  000BEE                     l4983:
  8174                           
  8175                           ; BSR set to: 0
  8176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8177  000BEE  0E00               	movlw	0
  8178  000BF0  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8179  000BF2  0E00               	movlw	0
  8180  000BF4  6F99               	movwf	efgtoa@i& (0+255),b
  8181  000BF6                     
  8182                           ; BSR set to: 0
  8183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8184  000BF6  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8185  000BFA  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8186  000BFE  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8187  000C02  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8188  000C06                     
  8189                           ; BSR set to: 0
  8190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8191  000C06  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8192  000C0A  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8193  000C0E  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8194  000C12  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8195                           
  8196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8197  000C16  EF88  F006         	goto	l4997
  8198  000C1A                     l4989:
  8199                           
  8200                           ; BSR set to: 0
  8201                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8202  000C1A  C091  F035         	movff	efgtoa@h,___fldiv@b
  8203  000C1E  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8204  000C22  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8205  000C26  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8206  000C2A  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8207  000C2E  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8208  000C32  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8209  000C36  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8210  000C3A  ECDB  F019         	call	___fldiv	;wreg free
  8211  000C3E  C035  F04E         	movff	?___fldiv,floorf@x
  8212  000C42  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8213  000C46  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8214  000C4A  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8215  000C4E  EC8D  F01E         	call	_floorf	;wreg free
  8216  000C52  C04E  F095         	movff	?_floorf,efgtoa@l
  8217  000C56  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8218  000C5A  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8219  000C5E  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8220                           
  8221                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8222  000C62  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8223  000C66  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8224  000C6A  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8225  000C6E  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8226  000C72  ECE3  F024         	call	___fltol	;wreg free
  8227  000C76  C04E  F087         	movff	?___fltol,efgtoa@d
  8228  000C7A  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8229  000C7E                     
  8230                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8231  000C7E  C091  F045         	movff	efgtoa@h,___flsub@b
  8232  000C82  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8233  000C86  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8234  000C8A  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8235  000C8E  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8236  000C92  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8237  000C96  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8238  000C9A  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8239  000C9E  C095  F01C         	movff	efgtoa@l,___flmul@b
  8240  000CA2  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8241  000CA6  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8242  000CAA  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8243  000CAE  ECC6  F017         	call	___flmul	;wreg free
  8244  000CB2  C01C  F049         	movff	?___flmul,___flsub@a
  8245  000CB6  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8246  000CBA  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8247  000CBE  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8248  000CC2  EC57  F02C         	call	___flsub	;wreg free
  8249  000CC6  C045  F091         	movff	?___flsub,efgtoa@h
  8250  000CCA  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8251  000CCE  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8252  000CD2  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8253  000CD6                     
  8254                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8255  000CD6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8256  000CDA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8257  000CDE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8258  000CE2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8259  000CE6  0E00               	movlw	0
  8260  000CE8  6E39               	movwf	___fldiv@a^0,c
  8261  000CEA  0E00               	movlw	0
  8262  000CEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8263  000CEE  0E20               	movlw	32
  8264  000CF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8265  000CF2  0E41               	movlw	65
  8266  000CF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8267  000CF6  ECDB  F019         	call	___fldiv	;wreg free
  8268  000CFA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8269  000CFE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8270  000D02  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8271  000D06  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8272  000D0A                     
  8273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8274  000D0A  0100               	movlb	0	; () banked
  8275  000D0C  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8276  000D0E  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8277  000D10                     l4997:
  8278                           
  8279                           ; BSR set to: 0
  8280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8281  000D10  5183               	movf	efgtoa@m& (0+255),w,b
  8282  000D12  5D99               	subwf	efgtoa@i& (0+255),w,b
  8283  000D14  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8284  000D16  0A80               	xorlw	128
  8285  000D18  6F6A               	movwf	??_efgtoa& (0+255),b
  8286  000D1A  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8287  000D1C  0A80               	xorlw	128
  8288  000D1E  596A               	subwfb	??_efgtoa& (0+255),w,b
  8289  000D20  A0D8               	btfss	status,0,c
  8290  000D22  EF95  F006         	goto	u5951
  8291  000D26  EF97  F006         	goto	u5950
  8292  000D2A                     u5951:
  8293  000D2A  EF0D  F006         	goto	l4989
  8294  000D2E                     u5950:
  8295  000D2E                     
  8296                           ; BSR set to: 0
  8297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8298  000D2E  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8299  000D32  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8300  000D36  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8301  000D3A  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8302  000D3E  0E00               	movlw	0
  8303  000D40  6E20               	movwf	___flmul@a^0,c
  8304  000D42  0E00               	movlw	0
  8305  000D44  6E21               	movwf	(___flmul@a+1)^0,c
  8306  000D46  0EA0               	movlw	160
  8307  000D48  6E22               	movwf	(___flmul@a+2)^0,c
  8308  000D4A  0E40               	movlw	64
  8309  000D4C  6E23               	movwf	(___flmul@a+3)^0,c
  8310  000D4E  ECC6  F017         	call	___flmul	;wreg free
  8311  000D52  C01C  F095         	movff	?___flmul,efgtoa@l
  8312  000D56  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8313  000D5A  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8314  000D5E  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8315  000D62                     
  8316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8317  000D62  C091  F035         	movff	efgtoa@h,___flge@ff1
  8318  000D66  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8319  000D6A  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8320  000D6E  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8321  000D72  C095  F039         	movff	efgtoa@l,___flge@ff2
  8322  000D76  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8323  000D7A  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8324  000D7E  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8325  000D82  EC66  F025         	call	___flge	;wreg free
  8326  000D86  B0D8               	btfsc	status,0,c
  8327  000D88  EFC8  F006         	goto	u5961
  8328  000D8C  EFCA  F006         	goto	u5960
  8329  000D90                     u5961:
  8330  000D90  EFD5  F006         	goto	l5005
  8331  000D94                     u5960:
  8332  000D94                     
  8333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8334  000D94  0E00               	movlw	0
  8335  000D96  0100               	movlb	0	; () banked
  8336  000D98  6F95               	movwf	efgtoa@l& (0+255),b
  8337  000D9A  0E00               	movlw	0
  8338  000D9C  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8339  000D9E  0E00               	movlw	0
  8340  000DA0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8341  000DA2  0E00               	movlw	0
  8342  000DA4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8343                           
  8344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8345  000DA6  EFFE  F006         	goto	l5011
  8346  000DAA                     l5005:
  8347                           
  8348                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8349  000DAA  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8350  000DAE  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8351  000DB2  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8352  000DB6  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8353  000DBA  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8354  000DBE  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8355  000DC2  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8356  000DC6  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8357  000DCA  ECD1  F028         	call	___fleq	;wreg free
  8358  000DCE  A0D8               	btfss	status,0,c
  8359  000DD0  EFEC  F006         	goto	u5971
  8360  000DD4  EFEE  F006         	goto	u5970
  8361  000DD8                     u5971:
  8362  000DD8  EFFE  F006         	goto	l5011
  8363  000DDC                     u5970:
  8364  000DDC  0100               	movlb	0	; () banked
  8365  000DDE  B187               	btfsc	efgtoa@d& (0+255),0,b
  8366  000DE0  EFF4  F006         	goto	u5981
  8367  000DE4  EFF6  F006         	goto	u5980
  8368  000DE8                     u5981:
  8369  000DE8  EFFE  F006         	goto	l5011
  8370  000DEC                     u5980:
  8371  000DEC                     
  8372                           ; BSR set to: 0
  8373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8374  000DEC  0E00               	movlw	0
  8375  000DEE  6F95               	movwf	efgtoa@l& (0+255),b
  8376  000DF0  0E00               	movlw	0
  8377  000DF2  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8378  000DF4  0E00               	movlw	0
  8379  000DF6  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8380  000DF8  0E00               	movlw	0
  8381  000DFA  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8382  000DFC                     l5011:
  8383                           
  8384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8385  000DFC  C09B  F035         	movff	efgtoa@g,___fladd@b
  8386  000E00  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8387  000E04  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8388  000E08  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8389  000E0C  C095  F039         	movff	efgtoa@l,___fladd@a
  8390  000E10  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8391  000E14  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8392  000E18  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8393  000E1C  EC66  F015         	call	___fladd	;wreg free
  8394  000E20  C035  F091         	movff	?___fladd,efgtoa@h
  8395  000E24  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8396  000E28  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8397  000E2C  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8398  000E30                     
  8399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8400  000E30  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8401  000E34  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8402  000E38  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8403  000E3C  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8404  000E40                     
  8405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8406  000E40  0E65               	movlw	101
  8407  000E42  0100               	movlb	0	; () banked
  8408  000E44  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8409  000E46  B4D8               	btfsc	status,2,c
  8410  000E48  EF28  F007         	goto	u5991
  8411  000E4C  EF2A  F007         	goto	u5990
  8412  000E50                     u5991:
  8413  000E50  EF30  F007         	goto	l5019
  8414  000E54                     u5990:
  8415  000E54                     
  8416                           ; BSR set to: 0
  8417  000E54  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8418  000E58  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8419  000E5C  EF34  F007         	goto	l1307
  8420  000E60                     l5019:
  8421                           
  8422                           ; BSR set to: 0
  8423  000E60  0E00               	movlw	0
  8424  000E62  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8425  000E64  0E00               	movlw	0
  8426  000E66  6F85               	movwf	efgtoa@ne& (0+255),b
  8427  000E68                     l1307:
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8431  000E68  0E00               	movlw	0
  8432  000E6A  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8433  000E6C  0E00               	movlw	0
  8434  000E6E  6F81               	movwf	efgtoa@pp& (0+255),b
  8435                           
  8436                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8437  000E70  0E00               	movlw	0
  8438  000E72  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8439  000E74  0E00               	movlw	0
  8440  000E76  6F7F               	movwf	efgtoa@t& (0+255),b
  8441                           
  8442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8443  000E78  0E00               	movlw	0
  8444  000E7A  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8445  000E7C  0E00               	movlw	0
  8446  000E7E  6F99               	movwf	efgtoa@i& (0+255),b
  8447                           
  8448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8449  000E80  EF31  F008         	goto	l5069
  8450  000E84                     l5021:
  8451                           
  8452                           ; BSR set to: 0
  8453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8454  000E84  C091  F035         	movff	efgtoa@h,___fldiv@b
  8455  000E88  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8456  000E8C  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8457  000E90  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8458  000E94  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8459  000E98  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8460  000E9C  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8461  000EA0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8462  000EA4  ECDB  F019         	call	___fldiv	;wreg free
  8463  000EA8  C035  F04E         	movff	?___fldiv,floorf@x
  8464  000EAC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8465  000EB0  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8466  000EB4  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8467  000EB8  EC8D  F01E         	call	_floorf	;wreg free
  8468  000EBC  C04E  F095         	movff	?_floorf,efgtoa@l
  8469  000EC0  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8470  000EC4  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8471  000EC8  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8472                           
  8473                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8474  000ECC  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8475  000ED0  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8476  000ED4  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8477  000ED8  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8478  000EDC  ECE3  F024         	call	___fltol	;wreg free
  8479  000EE0  C04E  F087         	movff	?___fltol,efgtoa@d
  8480  000EE4  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8481  000EE8                     
  8482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8483  000EE8  0101               	movlb	1	; () banked
  8484  000EEA  B9B8               	btfsc	_flags& (0+255),4,b
  8485  000EEC  EF7A  F007         	goto	u6001
  8486  000EF0  EF7C  F007         	goto	u6000
  8487  000EF4                     u6001:
  8488  000EF4  EF9A  F007         	goto	l5033
  8489  000EF8                     u6000:
  8490  000EF8                     
  8491                           ; BSR set to: 1
  8492  000EF8  0100               	movlb	0	; () banked
  8493  000EFA  5187               	movf	efgtoa@d& (0+255),w,b
  8494  000EFC  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8495  000EFE  A4D8               	btfss	status,2,c
  8496  000F00  EF84  F007         	goto	u6011
  8497  000F04  EF86  F007         	goto	u6010
  8498  000F08                     u6011:
  8499  000F08  EF9A  F007         	goto	l5033
  8500  000F0C                     u6010:
  8501  000F0C                     
  8502                           ; BSR set to: 0
  8503  000F0C  0E67               	movlw	103
  8504  000F0E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8505  000F10  A4D8               	btfss	status,2,c
  8506  000F12  EF8D  F007         	goto	u6021
  8507  000F16  EF8F  F007         	goto	u6020
  8508  000F1A                     u6021:
  8509  000F1A  EF9A  F007         	goto	l5033
  8510  000F1E                     u6020:
  8511  000F1E                     
  8512                           ; BSR set to: 0
  8513  000F1E  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8514  000F20  EF96  F007         	goto	u6030
  8515  000F24  EF94  F007         	goto	u6031
  8516  000F28                     u6031:
  8517  000F28  EF9A  F007         	goto	l5033
  8518  000F2C                     u6030:
  8519  000F2C                     
  8520                           ; BSR set to: 0
  8521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8522  000F2C  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8523  000F2E  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8524                           
  8525                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8526  000F30  EFE5  F007         	goto	l5061
  8527  000F34                     l5033:
  8528                           
  8529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8530  000F34  0100               	movlb	0	; () banked
  8531  000F36  5181               	movf	efgtoa@pp& (0+255),w,b
  8532  000F38  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8533  000F3A  A4D8               	btfss	status,2,c
  8534  000F3C  EFA2  F007         	goto	u6041
  8535  000F40  EFA4  F007         	goto	u6040
  8536  000F44                     u6041:
  8537  000F44  EFCE  F007         	goto	l5053
  8538  000F48                     u6040:
  8539  000F48                     
  8540                           ; BSR set to: 0
  8541  000F48  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8542  000F4A  EFAB  F007         	goto	u6050
  8543  000F4E  EFA9  F007         	goto	u6051
  8544  000F52                     u6051:
  8545  000F52  EFCE  F007         	goto	l5053
  8546  000F56                     u6050:
  8547  000F56                     
  8548                           ; BSR set to: 0
  8549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8550  000F56  0E00               	movlw	low _dbuf
  8551  000F58  25A1               	addwf	efgtoa@n& (0+255),w,b
  8552  000F5A  6ED9               	movwf	fsr2l,c
  8553  000F5C  0E02               	movlw	high _dbuf
  8554  000F5E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8555  000F60  6EDA               	movwf	fsr2h,c
  8556  000F62  0E2E               	movlw	46
  8557  000F64  6EDF               	movwf	indf2,c
  8558  000F66                     
  8559                           ; BSR set to: 0
  8560  000F66  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8561  000F68  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8562  000F6A                     
  8563                           ; BSR set to: 0
  8564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8565  000F6A  078E               	decf	efgtoa@w& (0+255),f,b
  8566  000F6C  A0D8               	btfss	status,0,c
  8567  000F6E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8568  000F70                     
  8569                           ; BSR set to: 0
  8570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8571  000F70  0E00               	movlw	0
  8572  000F72  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8573  000F74  0E01               	movlw	1
  8574  000F76  6F81               	movwf	efgtoa@pp& (0+255),b
  8575  000F78  EFCE  F007         	goto	l5053
  8576  000F7C                     l5045:
  8577                           
  8578                           ; BSR set to: 0
  8579                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8580  000F7C  0E00               	movlw	low _dbuf
  8581  000F7E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8582  000F80  6ED9               	movwf	fsr2l,c
  8583  000F82  0E02               	movlw	high _dbuf
  8584  000F84  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8585  000F86  6EDA               	movwf	fsr2h,c
  8586  000F88  0E30               	movlw	48
  8587  000F8A  6EDF               	movwf	indf2,c
  8588  000F8C                     
  8589                           ; BSR set to: 0
  8590  000F8C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8591  000F8E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8592  000F90                     
  8593                           ; BSR set to: 0
  8594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8595  000F90  078E               	decf	efgtoa@w& (0+255),f,b
  8596  000F92  A0D8               	btfss	status,0,c
  8597  000F94  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8598  000F96                     
  8599                           ; BSR set to: 0
  8600                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8601  000F96  077F               	decf	efgtoa@t& (0+255),f,b
  8602  000F98  A0D8               	btfss	status,0,c
  8603  000F9A  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8604  000F9C                     l5053:
  8605                           
  8606                           ; BSR set to: 0
  8607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8608  000F9C  517F               	movf	efgtoa@t& (0+255),w,b
  8609  000F9E  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8610  000FA0  A4D8               	btfss	status,2,c
  8611  000FA2  EFD5  F007         	goto	u6061
  8612  000FA6  EFD7  F007         	goto	u6060
  8613  000FAA                     u6061:
  8614  000FAA  EFBE  F007         	goto	l5045
  8615  000FAE                     u6060:
  8616  000FAE                     
  8617                           ; BSR set to: 0
  8618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8619  000FAE  0E00               	movlw	low _dbuf
  8620  000FB0  25A1               	addwf	efgtoa@n& (0+255),w,b
  8621  000FB2  6ED9               	movwf	fsr2l,c
  8622  000FB4  0E02               	movlw	high _dbuf
  8623  000FB6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8624  000FB8  6EDA               	movwf	fsr2h,c
  8625  000FBA  5187               	movf	efgtoa@d& (0+255),w,b
  8626  000FBC  0F30               	addlw	48
  8627  000FBE  6EDF               	movwf	indf2,c
  8628  000FC0                     
  8629                           ; BSR set to: 0
  8630  000FC0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8631  000FC2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8632  000FC4                     
  8633                           ; BSR set to: 0
  8634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8635  000FC4  078E               	decf	efgtoa@w& (0+255),f,b
  8636  000FC6  A0D8               	btfss	status,0,c
  8637  000FC8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8638  000FCA                     l5061:
  8639                           
  8640                           ; BSR set to: 0
  8641                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8642  000FCA  C091  F045         	movff	efgtoa@h,___flsub@b
  8643  000FCE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8644  000FD2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8645  000FD6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8646  000FDA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8647  000FDE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8648  000FE2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8649  000FE6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8650  000FEA  C095  F01C         	movff	efgtoa@l,___flmul@b
  8651  000FEE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8652  000FF2  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8653  000FF6  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8654  000FFA  ECC6  F017         	call	___flmul	;wreg free
  8655  000FFE  C01C  F049         	movff	?___flmul,___flsub@a
  8656  001002  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8657  001006  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8658  00100A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8659  00100E  EC57  F02C         	call	___flsub	;wreg free
  8660  001012  C045  F091         	movff	?___flsub,efgtoa@h
  8661  001016  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8662  00101A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8663  00101E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8664  001022                     
  8665                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8666  001022  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8667  001026  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8668  00102A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8669  00102E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8670  001032  0E00               	movlw	0
  8671  001034  6E39               	movwf	___fldiv@a^0,c
  8672  001036  0E00               	movlw	0
  8673  001038  6E3A               	movwf	(___fldiv@a+1)^0,c
  8674  00103A  0E20               	movlw	32
  8675  00103C  6E3B               	movwf	(___fldiv@a+2)^0,c
  8676  00103E  0E41               	movlw	65
  8677  001040  6E3C               	movwf	(___fldiv@a+3)^0,c
  8678  001042  ECDB  F019         	call	___fldiv	;wreg free
  8679  001046  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8680  00104A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8681  00104E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8682  001052  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8683  001056                     
  8684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8685  001056  0100               	movlb	0	; () banked
  8686  001058  0785               	decf	efgtoa@ne& (0+255),f,b
  8687  00105A  A0D8               	btfss	status,0,c
  8688  00105C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8689  00105E                     
  8690                           ; BSR set to: 0
  8691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8692  00105E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8693  001060  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8694  001062                     l5069:
  8695                           
  8696                           ; BSR set to: 0
  8697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8698  001062  5183               	movf	efgtoa@m& (0+255),w,b
  8699  001064  5D99               	subwf	efgtoa@i& (0+255),w,b
  8700  001066  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8701  001068  0A80               	xorlw	128
  8702  00106A  6F6A               	movwf	??_efgtoa& (0+255),b
  8703  00106C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8704  00106E  0A80               	xorlw	128
  8705  001070  596A               	subwfb	??_efgtoa& (0+255),w,b
  8706  001072  B0D8               	btfsc	status,0,c
  8707  001074  EF3E  F008         	goto	u6071
  8708  001078  EF40  F008         	goto	u6070
  8709  00107C                     u6071:
  8710  00107C  EF4E  F008         	goto	l5073
  8711  001080                     u6070:
  8712  001080                     
  8713                           ; BSR set to: 0
  8714  001080  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8715  001082  EF4C  F008         	goto	u6081
  8716  001086  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8717  001088  E109               	bnz	u6080
  8718  00108A  0E4B               	movlw	75
  8719  00108C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8720  00108E  A0D8               	btfss	status,0,c
  8721  001090  EF4C  F008         	goto	u6081
  8722  001094  EF4E  F008         	goto	u6080
  8723  001098                     u6081:
  8724  001098  EF42  F007         	goto	l5021
  8725  00109C                     u6080:
  8726  00109C                     l5073:
  8727                           
  8728                           ; BSR set to: 0
  8729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8730  00109C  5181               	movf	efgtoa@pp& (0+255),w,b
  8731  00109E  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8732  0010A0  A4D8               	btfss	status,2,c
  8733  0010A2  EF55  F008         	goto	u6091
  8734  0010A6  EF57  F008         	goto	u6090
  8735  0010AA                     u6091:
  8736  0010AA  EF6A  F008         	goto	l5081
  8737  0010AE                     u6090:
  8738  0010AE                     
  8739                           ; BSR set to: 0
  8740  0010AE  0101               	movlb	1	; () banked
  8741  0010B0  A9B8               	btfss	_flags& (0+255),4,b
  8742  0010B2  EF5D  F008         	goto	u6101
  8743  0010B6  EF5F  F008         	goto	u6100
  8744  0010BA                     u6101:
  8745  0010BA  EF6A  F008         	goto	l5081
  8746  0010BE                     u6100:
  8747  0010BE                     
  8748                           ; BSR set to: 1
  8749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8750  0010BE  0E00               	movlw	low _dbuf
  8751  0010C0  0100               	movlb	0	; () banked
  8752  0010C2  25A1               	addwf	efgtoa@n& (0+255),w,b
  8753  0010C4  6ED9               	movwf	fsr2l,c
  8754  0010C6  0E02               	movlw	high _dbuf
  8755  0010C8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8756  0010CA  6EDA               	movwf	fsr2h,c
  8757  0010CC  0E2E               	movlw	46
  8758  0010CE  6EDF               	movwf	indf2,c
  8759  0010D0                     
  8760                           ; BSR set to: 0
  8761  0010D0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8762  0010D2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8763  0010D4                     l5081:
  8764                           
  8765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8766  0010D4  0E00               	movlw	low _dbuf
  8767  0010D6  0100               	movlb	0	; () banked
  8768  0010D8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8769  0010DA  6ED9               	movwf	fsr2l,c
  8770  0010DC  0E02               	movlw	high _dbuf
  8771  0010DE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8772  0010E0  6EDA               	movwf	fsr2h,c
  8773  0010E2  0E00               	movlw	0
  8774  0010E4  6EDF               	movwf	indf2,c
  8775  0010E6                     
  8776                           ; BSR set to: 0
  8777                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8778  0010E6  0E65               	movlw	101
  8779  0010E8  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8780  0010EA  A4D8               	btfss	status,2,c
  8781  0010EC  EF7A  F008         	goto	u6111
  8782  0010F0  EF7C  F008         	goto	u6110
  8783  0010F4                     u6111:
  8784  0010F4  EF21  F004         	goto	l4893
  8785  0010F8                     u6110:
  8786  0010F8                     
  8787                           ; BSR set to: 0
  8788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8789  0010F8  0E00               	movlw	0
  8790  0010FA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8791  0010FC  0E4F               	movlw	79
  8792  0010FE  6F99               	movwf	efgtoa@i& (0+255),b
  8793  001100                     
  8794                           ; BSR set to: 0
  8795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8796  001100  0E00               	movlw	low _dbuf
  8797  001102  2599               	addwf	efgtoa@i& (0+255),w,b
  8798  001104  6ED9               	movwf	fsr2l,c
  8799  001106  0E02               	movlw	high _dbuf
  8800  001108  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8801  00110A  6EDA               	movwf	fsr2h,c
  8802  00110C  0E00               	movlw	0
  8803  00110E  6EDF               	movwf	indf2,c
  8804  001110                     
  8805                           ; BSR set to: 0
  8806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8807  001110  0E00               	movlw	0
  8808  001112  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8809  001114  0E00               	movlw	0
  8810  001116  6F89               	movwf	efgtoa@sign& (0+255),b
  8811  001118                     
  8812                           ; BSR set to: 0
  8813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8814  001118  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8815  00111A  EF93  F008         	goto	u6120
  8816  00111E  EF91  F008         	goto	u6121
  8817  001122                     u6121:
  8818  001122  EF9B  F008         	goto	l5097
  8819  001126                     u6120:
  8820  001126                     
  8821                           ; BSR set to: 0
  8822                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8823  001126  0E00               	movlw	0
  8824  001128  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8825  00112A  0E01               	movlw	1
  8826  00112C  6F89               	movwf	efgtoa@sign& (0+255),b
  8827  00112E                     
  8828                           ; BSR set to: 0
  8829                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8830  00112E  6D9F               	negf	efgtoa@e& (0+255),b
  8831  001130  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8832  001132  B0D8               	btfsc	status,0,c
  8833  001134  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8834  001136                     l5097:
  8835                           
  8836                           ; BSR set to: 0
  8837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8838  001136  0E00               	movlw	0
  8839  001138  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8840  00113A  0E02               	movlw	2
  8841  00113C  6F8B               	movwf	efgtoa@p& (0+255),b
  8842                           
  8843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8844  00113E  EFCC  F008         	goto	l5109
  8845  001142                     l5099:
  8846                           
  8847                           ; BSR set to: 0
  8848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8849  001142  0799               	decf	efgtoa@i& (0+255),f,b
  8850  001144  A0D8               	btfss	status,0,c
  8851  001146  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8852  001148                     
  8853                           ; BSR set to: 0
  8854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8855  001148  0E00               	movlw	low _dbuf
  8856  00114A  2599               	addwf	efgtoa@i& (0+255),w,b
  8857  00114C  6ED9               	movwf	fsr2l,c
  8858  00114E  0E02               	movlw	high _dbuf
  8859  001150  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8860  001152  6EDA               	movwf	fsr2h,c
  8861  001154  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8862  001158  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8863  00115C  0E00               	movlw	0
  8864  00115E  6E04               	movwf	(___awmod@divisor+1)^0,c
  8865  001160  0E0A               	movlw	10
  8866  001162  6E03               	movwf	___awmod@divisor^0,c
  8867  001164  EC79  F028         	call	___awmod	;wreg free
  8868  001168  5001               	movf	?___awmod^0,w,c
  8869  00116A  0F30               	addlw	48
  8870  00116C  6EDF               	movwf	indf2,c
  8871  00116E                     
  8872                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8873  00116E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8874  001172  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8875  001176  0E00               	movlw	0
  8876  001178  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8877  00117A  0E0A               	movlw	10
  8878  00117C  6E03               	movwf	___awdiv@divisor^0,c
  8879  00117E  EC17  F028         	call	___awdiv	;wreg free
  8880  001182  C001  F09F         	movff	?___awdiv,efgtoa@e
  8881  001186  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8882  00118A                     
  8883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8884  00118A  0100               	movlb	0	; () banked
  8885  00118C  078B               	decf	efgtoa@p& (0+255),f,b
  8886  00118E  A0D8               	btfss	status,0,c
  8887  001190  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8888  001192                     
  8889                           ; BSR set to: 0
  8890                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8891  001192  078E               	decf	efgtoa@w& (0+255),f,b
  8892  001194  A0D8               	btfss	status,0,c
  8893  001196  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8894  001198                     l5109:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8898  001198  519F               	movf	efgtoa@e& (0+255),w,b
  8899  00119A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8900  00119C  A4D8               	btfss	status,2,c
  8901  00119E  EFD3  F008         	goto	u6131
  8902  0011A2  EFD5  F008         	goto	u6130
  8903  0011A6                     u6131:
  8904  0011A6  EFA1  F008         	goto	l5099
  8905  0011AA                     u6130:
  8906  0011AA                     
  8907                           ; BSR set to: 0
  8908  0011AA  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8909  0011AC  EFE2  F008         	goto	u6140
  8910  0011B0  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8911  0011B2  E106               	bnz	u6141
  8912  0011B4  058B               	decf	efgtoa@p& (0+255),w,b
  8913  0011B6  B0D8               	btfsc	status,0,c
  8914  0011B8  EFE0  F008         	goto	u6141
  8915  0011BC  EFE2  F008         	goto	u6140
  8916  0011C0                     u6141:
  8917  0011C0  EFA1  F008         	goto	l5099
  8918  0011C4                     u6140:
  8919  0011C4                     
  8920                           ; BSR set to: 0
  8921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8922  0011C4  0799               	decf	efgtoa@i& (0+255),f,b
  8923  0011C6  A0D8               	btfss	status,0,c
  8924  0011C8  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8925  0011CA                     
  8926                           ; BSR set to: 0
  8927                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8928  0011CA  5189               	movf	efgtoa@sign& (0+255),w,b
  8929  0011CC  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8930  0011CE  A4D8               	btfss	status,2,c
  8931  0011D0  EFEC  F008         	goto	u6151
  8932  0011D4  EFEE  F008         	goto	u6150
  8933  0011D8                     u6151:
  8934  0011D8  EFF4  F008         	goto	l5119
  8935  0011DC                     u6150:
  8936  0011DC                     
  8937                           ; BSR set to: 0
  8938  0011DC  0E00               	movlw	0
  8939  0011DE  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8940  0011E0  0E2B               	movlw	43
  8941  0011E2  6F79               	movwf	_efgtoa$2514& (0+255),b
  8942  0011E4  EFF8  F008         	goto	l5121
  8943  0011E8                     l5119:
  8944                           
  8945                           ; BSR set to: 0
  8946  0011E8  0E00               	movlw	0
  8947  0011EA  6F7A               	movwf	(_efgtoa$2514+1)& (0+255),b
  8948  0011EC  0E2D               	movlw	45
  8949  0011EE  6F79               	movwf	_efgtoa$2514& (0+255),b
  8950  0011F0                     l5121:
  8951                           
  8952                           ; BSR set to: 0
  8953  0011F0  0E00               	movlw	low _dbuf
  8954  0011F2  2599               	addwf	efgtoa@i& (0+255),w,b
  8955  0011F4  6ED9               	movwf	fsr2l,c
  8956  0011F6  0E02               	movlw	high _dbuf
  8957  0011F8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8958  0011FA  6EDA               	movwf	fsr2h,c
  8959  0011FC  C079  FFDF         	movff	_efgtoa$2514,indf2
  8960  001200                     
  8961                           ; BSR set to: 0
  8962                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  8963  001200  078E               	decf	efgtoa@w& (0+255),f,b
  8964  001202  A0D8               	btfss	status,0,c
  8965  001204  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8966  001206                     
  8967                           ; BSR set to: 0
  8968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  8969  001206  0799               	decf	efgtoa@i& (0+255),f,b
  8970  001208  A0D8               	btfss	status,0,c
  8971  00120A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8972  00120C                     
  8973                           ; BSR set to: 0
  8974  00120C  0EBF               	movlw	191
  8975  00120E  6F6A               	movwf	??_efgtoa& (0+255),b
  8976  001210  0EFF               	movlw	255
  8977  001212  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8978  001214  505E               	movf	efgtoa@c^0,w,c
  8979  001216  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8980  001218  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8981  00121A  516A               	movf	??_efgtoa& (0+255),w,b
  8982  00121C  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8983  00121E  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8984  001220  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8985  001222  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8986  001224  E10A               	bnz	u6160
  8987  001226  0E1A               	movlw	26
  8988  001228  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8989  00122A  A0D8               	btfss	status,0,c
  8990  00122C  EF1A  F009         	goto	u6161
  8991  001230  EF1D  F009         	goto	u6160
  8992  001234                     u6161:
  8993  001234  0E01               	movlw	1
  8994  001236  EF1E  F009         	goto	u6170
  8995  00123A                     u6160:
  8996  00123A  0E00               	movlw	0
  8997  00123C                     u6170:
  8998  00123C  6F7D               	movwf	_efgtoa$2516& (0+255),b
  8999  00123E  6B7E               	clrf	(_efgtoa$2516+1)& (0+255),b
  9000  001240                     
  9001                           ; BSR set to: 0
  9002  001240  517D               	movf	_efgtoa$2516& (0+255),w,b
  9003  001242  117E               	iorwf	(_efgtoa$2516+1)& (0+255),w,b
  9004  001244  A4D8               	btfss	status,2,c
  9005  001246  EF27  F009         	goto	u6181
  9006  00124A  EF29  F009         	goto	u6180
  9007  00124E                     u6181:
  9008  00124E  EF2F  F009         	goto	l5135
  9009  001252                     u6180:
  9010  001252                     
  9011                           ; BSR set to: 0
  9012  001252  0E00               	movlw	0
  9013  001254  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  9014  001256  0E65               	movlw	101
  9015  001258  6F7B               	movwf	_efgtoa$2515& (0+255),b
  9016  00125A  EF33  F009         	goto	l5137
  9017  00125E                     l5135:
  9018                           
  9019                           ; BSR set to: 0
  9020  00125E  0E00               	movlw	0
  9021  001260  6F7C               	movwf	(_efgtoa$2515+1)& (0+255),b
  9022  001262  0E45               	movlw	69
  9023  001264  6F7B               	movwf	_efgtoa$2515& (0+255),b
  9024  001266                     l5137:
  9025                           
  9026                           ; BSR set to: 0
  9027  001266  0E00               	movlw	low _dbuf
  9028  001268  2599               	addwf	efgtoa@i& (0+255),w,b
  9029  00126A  6ED9               	movwf	fsr2l,c
  9030  00126C  0E02               	movlw	high _dbuf
  9031  00126E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9032  001270  6EDA               	movwf	fsr2h,c
  9033  001272  C07B  FFDF         	movff	_efgtoa$2515,indf2
  9034  001276                     
  9035                           ; BSR set to: 0
  9036                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9037  001276  078E               	decf	efgtoa@w& (0+255),f,b
  9038  001278  A0D8               	btfss	status,0,c
  9039  00127A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9040  00127C                     
  9041                           ; BSR set to: 0
  9042                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9043  00127C  0E00               	movlw	low _dbuf
  9044  00127E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9045  001280  6E01               	movwf	strcpy@dest^0,c
  9046  001282  0E02               	movlw	high _dbuf
  9047  001284  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9048  001286  6E02               	movwf	(strcpy@dest+1)^0,c
  9049  001288  0E00               	movlw	low _dbuf
  9050  00128A  2599               	addwf	efgtoa@i& (0+255),w,b
  9051  00128C  6E03               	movwf	strcpy@src^0,c
  9052  00128E  0E02               	movlw	high _dbuf
  9053  001290  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9054  001292  6E04               	movwf	(strcpy@src+1)^0,c
  9055  001294  EC80  F02B         	call	_strcpy	;wreg free
  9056  001298  EF21  F004         	goto	l4893
  9057  00129C                     l1263:
  9058  00129C  0012               	return		;funcret
  9059  00129E                     __end_of_efgtoa:
  9060                           	callstack 0
  9061                           
  9062 ;; *************** function _tolower *****************
  9063 ;; Defined at:
  9064 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9065 ;; Parameters:    Size  Location     Type
  9066 ;;  c               2    6[COMRAM] int 
  9067 ;; Auto vars:     Size  Location     Type
  9068 ;;		None
  9069 ;; Return value:  Size  Location     Type
  9070 ;;                  2    6[COMRAM] int 
  9071 ;; Registers used:
  9072 ;;		wreg, status,2, status,0
  9073 ;; Tracked objects:
  9074 ;;		On entry : 0/0
  9075 ;;		On exit  : 0/0
  9076 ;;		Unchanged: 0/0
  9077 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9078 ;;      Params:         2       0       0       0       0       0       0
  9079 ;;      Locals:         2       0       0       0       0       0       0
  9080 ;;      Temps:          4       0       0       0       0       0       0
  9081 ;;      Totals:         8       0       0       0       0       0       0
  9082 ;;Total ram usage:        8 bytes
  9083 ;; Hardware stack levels used:    1
  9084 ;; Hardware stack levels required when called:    2
  9085 ;; This function calls:
  9086 ;;		_isupper
  9087 ;; This function is called by:
  9088 ;;		_efgtoa
  9089 ;;		_vfpfcnvrt
  9090 ;; This function uses a non-reentrant model
  9091 ;;
  9092                           
  9093                           	psect	text24
  9094  0056A0                     __ptext24:
  9095                           	callstack 0
  9096  0056A0                     _tolower:
  9097                           	callstack 23
  9098  0056A0  0EBF               	movlw	191
  9099  0056A2  6E09               	movwf	??_tolower^0,c
  9100  0056A4  0EFF               	movlw	255
  9101  0056A6  6E0A               	movwf	(??_tolower+1)^0,c
  9102  0056A8  C007  F00B         	movff	tolower@c,??_tolower+2
  9103  0056AC  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9104  0056B0  5009               	movf	??_tolower^0,w,c
  9105  0056B2  260B               	addwf	(??_tolower+2)^0,f,c
  9106  0056B4  500A               	movf	(??_tolower+1)^0,w,c
  9107  0056B6  220C               	addwfc	(??_tolower+3)^0,f,c
  9108  0056B8  500C               	movf	(??_tolower+3)^0,w,c
  9109  0056BA  E10A               	bnz	u5350
  9110  0056BC  0E1A               	movlw	26
  9111  0056BE  5C0B               	subwf	(??_tolower+2)^0,w,c
  9112  0056C0  A0D8               	btfss	status,0,c
  9113  0056C2  EF65  F02B         	goto	u5351
  9114  0056C6  EF68  F02B         	goto	u5350
  9115  0056CA                     u5351:
  9116  0056CA  0E01               	movlw	1
  9117  0056CC  EF69  F02B         	goto	u5360
  9118  0056D0                     u5350:
  9119  0056D0  0E00               	movlw	0
  9120  0056D2                     u5360:
  9121  0056D2  6E0D               	movwf	_tolower$2667^0,c
  9122  0056D4  6A0E               	clrf	(_tolower$2667+1)^0,c
  9123  0056D6  500D               	movf	_tolower$2667^0,w,c
  9124  0056D8  100E               	iorwf	(_tolower$2667+1)^0,w,c
  9125  0056DA  B4D8               	btfsc	status,2,c
  9126  0056DC  EF72  F02B         	goto	u5371
  9127  0056E0  EF74  F02B         	goto	u5370
  9128  0056E4                     u5371:
  9129  0056E4  EF7B  F02B         	goto	l1511
  9130  0056E8                     u5370:
  9131  0056E8  0E20               	movlw	32
  9132  0056EA  1007               	iorwf	tolower@c^0,w,c
  9133  0056EC  6E07               	movwf	?_tolower^0,c
  9134  0056EE  5008               	movf	(tolower@c+1)^0,w,c
  9135  0056F0  6E08               	movwf	(?_tolower+1)^0,c
  9136  0056F2  EF7F  F02B         	goto	l1516
  9137  0056F6                     l1511:
  9138  0056F6  C007  F007         	movff	tolower@c,?_tolower
  9139  0056FA  C008  F008         	movff	tolower@c+1,?_tolower+1
  9140  0056FE                     l1516:
  9141  0056FE  0012               	return		;funcret
  9142  005700                     __end_of_tolower:
  9143                           	callstack 0
  9144                           
  9145 ;; *************** function _isupper *****************
  9146 ;; Defined at:
  9147 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9148 ;; Parameters:    Size  Location     Type
  9149 ;;  c               2    0[COMRAM] int 
  9150 ;; Auto vars:     Size  Location     Type
  9151 ;;		None
  9152 ;; Return value:  Size  Location     Type
  9153 ;;                  2    0[COMRAM] int 
  9154 ;; Registers used:
  9155 ;;		wreg, status,2, status,0
  9156 ;; Tracked objects:
  9157 ;;		On entry : 0/0
  9158 ;;		On exit  : 0/0
  9159 ;;		Unchanged: 0/0
  9160 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9161 ;;      Params:         2       0       0       0       0       0       0
  9162 ;;      Locals:         0       0       0       0       0       0       0
  9163 ;;      Temps:          4       0       0       0       0       0       0
  9164 ;;      Totals:         6       0       0       0       0       0       0
  9165 ;;Total ram usage:        6 bytes
  9166 ;; Hardware stack levels used:    1
  9167 ;; Hardware stack levels required when called:    1
  9168 ;; This function calls:
  9169 ;;		Nothing
  9170 ;; This function is called by:
  9171 ;;		_efgtoa
  9172 ;;		_vfpfcnvrt
  9173 ;;		_tolower
  9174 ;; This function uses a non-reentrant model
  9175 ;;
  9176                           
  9177                           	psect	text25
  9178  005A34                     __ptext25:
  9179                           	callstack 0
  9180  005A34                     _isupper:
  9181                           	callstack 23
  9182  005A34  0EBF               	movlw	191
  9183  005A36  6E03               	movwf	??_isupper^0,c
  9184  005A38  0EFF               	movlw	255
  9185  005A3A  6E04               	movwf	(??_isupper+1)^0,c
  9186  005A3C  C001  F005         	movff	isupper@c,??_isupper+2
  9187  005A40  C002  F006         	movff	isupper@c+1,??_isupper+3
  9188  005A44  5003               	movf	??_isupper^0,w,c
  9189  005A46  2605               	addwf	(??_isupper+2)^0,f,c
  9190  005A48  5004               	movf	(??_isupper+1)^0,w,c
  9191  005A4A  2206               	addwfc	(??_isupper+3)^0,f,c
  9192  005A4C  5006               	movf	(??_isupper+3)^0,w,c
  9193  005A4E  E10A               	bnz	u4360
  9194  005A50  0E1A               	movlw	26
  9195  005A52  5C05               	subwf	(??_isupper+2)^0,w,c
  9196  005A54  A0D8               	btfss	status,0,c
  9197  005A56  EF2F  F02D         	goto	u4361
  9198  005A5A  EF32  F02D         	goto	u4360
  9199  005A5E                     u4361:
  9200  005A5E  0E01               	movlw	1
  9201  005A60  EF33  F02D         	goto	u4370
  9202  005A64                     u4360:
  9203  005A64  0E00               	movlw	0
  9204  005A66                     u4370:
  9205  005A66  6E01               	movwf	?_isupper^0,c
  9206  005A68  6A02               	clrf	(?_isupper+1)^0,c
  9207  005A6A  0012               	return		;funcret
  9208  005A6C                     __end_of_isupper:
  9209                           	callstack 0
  9210                           
  9211 ;; *************** function _strcpy *****************
  9212 ;; Defined at:
  9213 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9214 ;; Parameters:    Size  Location     Type
  9215 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9216 ;;		 -> dbuf(80), 
  9217 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9218 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9219 ;;		 -> dbuf(80), 
  9220 ;; Auto vars:     Size  Location     Type
  9221 ;;  d               2    8[COMRAM] PTR unsigned char 
  9222 ;;		 -> dbuf(80), 
  9223 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9224 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9225 ;;		 -> dbuf(80), 
  9226 ;; Return value:  Size  Location     Type
  9227 ;;                  2    0[COMRAM] PTR unsigned char 
  9228 ;; Registers used:
  9229 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9230 ;; Tracked objects:
  9231 ;;		On entry : 0/0
  9232 ;;		On exit  : 0/0
  9233 ;;		Unchanged: 0/0
  9234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9235 ;;      Params:         4       0       0       0       0       0       0
  9236 ;;      Locals:         4       0       0       0       0       0       0
  9237 ;;      Temps:          2       0       0       0       0       0       0
  9238 ;;      Totals:        10       0       0       0       0       0       0
  9239 ;;Total ram usage:       10 bytes
  9240 ;; Hardware stack levels used:    1
  9241 ;; Hardware stack levels required when called:    1
  9242 ;; This function calls:
  9243 ;;		Nothing
  9244 ;; This function is called by:
  9245 ;;		_efgtoa
  9246 ;; This function uses a non-reentrant model
  9247 ;;
  9248                           
  9249                           	psect	text26
  9250  005700                     __ptext26:
  9251                           	callstack 0
  9252  005700                     _strcpy:
  9253                           	callstack 23
  9254  005700  C003  F007         	movff	strcpy@src,strcpy@s
  9255  005704  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9256  005708  C001  F009         	movff	strcpy@dest,strcpy@d
  9257  00570C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9258  005710                     l4731:
  9259  005710  5007               	movf	strcpy@s^0,w,c
  9260  005712  6E05               	movwf	??_strcpy^0,c
  9261  005714  5008               	movf	(strcpy@s+1)^0,w,c
  9262  005716  6E06               	movwf	(??_strcpy+1)^0,c
  9263  005718  4A07               	infsnz	strcpy@s^0,f,c
  9264  00571A  2A08               	incf	(strcpy@s+1)^0,f,c
  9265  00571C  C005  FFF6         	movff	??_strcpy,tblptrl
  9266  005720  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9267  005724  6AF8               	clrf	tblptru,c
  9268  005726  C009  FFD9         	movff	strcpy@d,fsr2l
  9269  00572A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9270  00572E  4A09               	infsnz	strcpy@d^0,f,c
  9271  005730  2A0A               	incf	(strcpy@d+1)^0,f,c
  9272  005732  0E05               	movlw	(high __ramtop+-1)
  9273  005734  64F7               	cpfsgt	tblptrh,c
  9274  005736  D003               	bra	u5337
  9275  005738  0008               	tblrd		*
  9276  00573A  50F5               	movf	tablat,w,c
  9277  00573C  D005               	bra	u5330
  9278  00573E                     u5337:
  9279  00573E  CFF6 FFE1          	movff	tblptrl,fsr1l
  9280  005742  CFF7 FFE2          	movff	tblptrh,fsr1h
  9281  005746  50E7               	movf	indf1,w,c
  9282  005748                     u5330:
  9283  005748  6EDF               	movwf	indf2,c
  9284  00574A  50DF               	movf	indf2,w,c
  9285  00574C  A4D8               	btfss	status,2,c
  9286  00574E  EFAB  F02B         	goto	u5341
  9287  005752  EFAD  F02B         	goto	u5340
  9288  005756                     u5341:
  9289  005756  EF88  F02B         	goto	l4731
  9290  00575A                     u5340:
  9291  00575A  0012               	return		;funcret
  9292  00575C                     __end_of_strcpy:
  9293                           	callstack 0
  9294                           
  9295 ;; *************** function _floorf *****************
  9296 ;; Defined at:
  9297 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9298 ;; Parameters:    Size  Location     Type
  9299 ;;  x               4   77[COMRAM] float 
  9300 ;; Auto vars:     Size  Location     Type
  9301 ;;  u               4    6[BANK0 ] struct .
  9302 ;;  m               4    0[BANK0 ] unsigned long 
  9303 ;;  e               2    4[BANK0 ] int 
  9304 ;; Return value:  Size  Location     Type
  9305 ;;                  4   77[COMRAM] float 
  9306 ;; Registers used:
  9307 ;;		wreg, status,2, status,0
  9308 ;; Tracked objects:
  9309 ;;		On entry : 0/0
  9310 ;;		On exit  : 0/0
  9311 ;;		Unchanged: 0/0
  9312 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9313 ;;      Params:         4       0       0       0       0       0       0
  9314 ;;      Locals:         0      10       0       0       0       0       0
  9315 ;;      Temps:          6       0       0       0       0       0       0
  9316 ;;      Totals:        10      10       0       0       0       0       0
  9317 ;;Total ram usage:       20 bytes
  9318 ;; Hardware stack levels used:    1
  9319 ;; Hardware stack levels required when called:    1
  9320 ;; This function calls:
  9321 ;;		Nothing
  9322 ;; This function is called by:
  9323 ;;		_efgtoa
  9324 ;; This function uses a non-reentrant model
  9325 ;;
  9326                           
  9327                           	psect	text27
  9328  003D1A                     __ptext27:
  9329                           	callstack 0
  9330  003D1A                     _floorf:
  9331                           	callstack 23
  9332  003D1A  C19F  F066         	movff	floorf@F524,floorf@u
  9333  003D1E  C1A0  F067         	movff	floorf@F524+1,floorf@u+1
  9334  003D22  C1A1  F068         	movff	floorf@F524+2,floorf@u+2
  9335  003D26  C1A2  F069         	movff	floorf@F524+3,floorf@u+3
  9336  003D2A  C04E  F066         	movff	floorf@x,floorf@u
  9337  003D2E  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9338  003D32  C050  F068         	movff	floorf@x+2,floorf@u+2
  9339  003D36  C051  F069         	movff	floorf@x+3,floorf@u+3
  9340  003D3A  0E81               	movlw	129
  9341  003D3C  6E52               	movwf	??_floorf^0,c
  9342  003D3E  0EFF               	movlw	255
  9343  003D40  6E53               	movwf	(??_floorf+1)^0,c
  9344  003D42  C066  F054         	movff	floorf@u,??_floorf+2
  9345  003D46  C067  F055         	movff	floorf@u+1,??_floorf+3
  9346  003D4A  C068  F056         	movff	floorf@u+2,??_floorf+4
  9347  003D4E  C069  F057         	movff	floorf@u+3,??_floorf+5
  9348  003D52  0E18               	movlw	24
  9349  003D54  EFB1  F01E         	goto	u5380
  9350  003D58                     u5385:
  9351  003D58  90D8               	bcf	status,0,c
  9352  003D5A  3257               	rrcf	(??_floorf+5)^0,f,c
  9353  003D5C  3256               	rrcf	(??_floorf+4)^0,f,c
  9354  003D5E  3255               	rrcf	(??_floorf+3)^0,f,c
  9355  003D60  3254               	rrcf	(??_floorf+2)^0,f,c
  9356  003D62                     u5380:
  9357  003D62  2EE8               	decfsz	wreg,f,c
  9358  003D64  EFAC  F01E         	goto	u5385
  9359  003D68  5054               	movf	(??_floorf+2)^0,w,c
  9360  003D6A  2452               	addwf	??_floorf^0,w,c
  9361  003D6C  0100               	movlb	0	; () banked
  9362  003D6E  6F64               	movwf	floorf@e& (0+255),b
  9363  003D70  0E00               	movlw	0
  9364  003D72  2053               	addwfc	(??_floorf+1)^0,w,c
  9365  003D74  6F65               	movwf	(floorf@e+1)& (0+255),b
  9366  003D76  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9367  003D78  EFC7  F01E         	goto	u5391
  9368  003D7C  5165               	movf	(floorf@e+1)& (0+255),w,b
  9369  003D7E  E109               	bnz	u5390
  9370  003D80  0E17               	movlw	23
  9371  003D82  5D64               	subwf	floorf@e& (0+255),w,b
  9372  003D84  A0D8               	btfss	status,0,c
  9373  003D86  EFC7  F01E         	goto	u5391
  9374  003D8A  EFC9  F01E         	goto	u5390
  9375  003D8E                     u5391:
  9376  003D8E  EFD3  F01E         	goto	l4749
  9377  003D92                     u5390:
  9378  003D92                     l4747:
  9379                           
  9380                           ; BSR set to: 0
  9381  003D92  C04E  F04E         	movff	floorf@x,?_floorf
  9382  003D96  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9383  003D9A  C050  F050         	movff	floorf@x+2,?_floorf+2
  9384  003D9E  C051  F051         	movff	floorf@x+3,?_floorf+3
  9385  003DA2  EF97  F01F         	goto	l1435
  9386  003DA6                     l4749:
  9387                           
  9388                           ; BSR set to: 0
  9389  003DA6  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9390  003DA8  EFD8  F01E         	goto	u5401
  9391  003DAC  EFDA  F01E         	goto	u5400
  9392  003DB0                     u5401:
  9393  003DB0  EF4B  F01F         	goto	l4759
  9394  003DB4                     u5400:
  9395  003DB4                     
  9396                           ; BSR set to: 0
  9397  003DB4  C064  F052         	movff	floorf@e,??_floorf
  9398  003DB8  0EFF               	movlw	255
  9399  003DBA  6E53               	movwf	(??_floorf+1)^0,c
  9400  003DBC  0EFF               	movlw	255
  9401  003DBE  6E54               	movwf	(??_floorf+2)^0,c
  9402  003DC0  0E7F               	movlw	127
  9403  003DC2  6E55               	movwf	(??_floorf+3)^0,c
  9404  003DC4  0E00               	movlw	0
  9405  003DC6  6E56               	movwf	(??_floorf+4)^0,c
  9406  003DC8                     u5415:
  9407  003DC8  6652               	tstfsz	??_floorf^0,c
  9408  003DCA  EFE9  F01E         	goto	u5416
  9409  003DCE  EFF1  F01E         	goto	u5417
  9410  003DD2                     u5416:
  9411  003DD2  3456               	rlcf	(??_floorf+4)^0,w,c
  9412  003DD4  3256               	rrcf	(??_floorf+4)^0,f,c
  9413  003DD6  3255               	rrcf	(??_floorf+3)^0,f,c
  9414  003DD8  3254               	rrcf	(??_floorf+2)^0,f,c
  9415  003DDA  3253               	rrcf	(??_floorf+1)^0,f,c
  9416  003DDC  2E52               	decfsz	??_floorf^0,f,c
  9417  003DDE  EFE4  F01E         	goto	u5415
  9418  003DE2                     u5417:
  9419  003DE2  C053  F060         	movff	??_floorf+1,floorf@m
  9420  003DE6  C054  F061         	movff	??_floorf+2,floorf@m+1
  9421  003DEA  C055  F062         	movff	??_floorf+3,floorf@m+2
  9422  003DEE  C056  F063         	movff	??_floorf+4,floorf@m+3
  9423  003DF2  0100               	movlb	0	; () banked
  9424  003DF4  5160               	movf	floorf@m& (0+255),w,b
  9425  003DF6  1566               	andwf	floorf@u& (0+255),w,b
  9426  003DF8  6E52               	movwf	??_floorf^0,c
  9427  003DFA  5161               	movf	(floorf@m+1)& (0+255),w,b
  9428  003DFC  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9429  003DFE  6E53               	movwf	(??_floorf+1)^0,c
  9430  003E00  5162               	movf	(floorf@m+2)& (0+255),w,b
  9431  003E02  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9432  003E04  6E54               	movwf	(??_floorf+2)^0,c
  9433  003E06  5163               	movf	(floorf@m+3)& (0+255),w,b
  9434  003E08  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9435  003E0A  6E55               	movwf	(??_floorf+3)^0,c
  9436  003E0C  5052               	movf	??_floorf^0,w,c
  9437  003E0E  1053               	iorwf	(??_floorf+1)^0,w,c
  9438  003E10  1054               	iorwf	(??_floorf+2)^0,w,c
  9439  003E12  1055               	iorwf	(??_floorf+3)^0,w,c
  9440  003E14  A4D8               	btfss	status,2,c
  9441  003E16  EF0F  F01F         	goto	u5421
  9442  003E1A  EF11  F01F         	goto	u5420
  9443  003E1E                     u5421:
  9444  003E1E  EF13  F01F         	goto	l4755
  9445  003E22                     u5420:
  9446  003E22  EFC9  F01E         	goto	l4747
  9447  003E26                     l4755:
  9448                           
  9449                           ; BSR set to: 0
  9450  003E26  C066  F052         	movff	floorf@u,??_floorf
  9451  003E2A  C067  F053         	movff	floorf@u+1,??_floorf+1
  9452  003E2E  C068  F054         	movff	floorf@u+2,??_floorf+2
  9453  003E32  C069  F055         	movff	floorf@u+3,??_floorf+3
  9454  003E36  0E20               	movlw	32
  9455  003E38  EF23  F01F         	goto	u5430
  9456  003E3C                     u5435:
  9457  003E3C  90D8               	bcf	status,0,c
  9458  003E3E  3255               	rrcf	(??_floorf+3)^0,f,c
  9459  003E40  3254               	rrcf	(??_floorf+2)^0,f,c
  9460  003E42  3253               	rrcf	(??_floorf+1)^0,f,c
  9461  003E44  3252               	rrcf	??_floorf^0,f,c
  9462  003E46                     u5430:
  9463  003E46  2EE8               	decfsz	wreg,f,c
  9464  003E48  EF1E  F01F         	goto	u5435
  9465  003E4C  5052               	movf	??_floorf^0,w,c
  9466  003E4E  1053               	iorwf	(??_floorf+1)^0,w,c
  9467  003E50  1054               	iorwf	(??_floorf+2)^0,w,c
  9468  003E52  1055               	iorwf	(??_floorf+3)^0,w,c
  9469  003E54  B4D8               	btfsc	status,2,c
  9470  003E56  EF2F  F01F         	goto	u5441
  9471  003E5A  EF31  F01F         	goto	u5440
  9472  003E5E                     u5441:
  9473  003E5E  EF39  F01F         	goto	l1438
  9474  003E62                     u5440:
  9475  003E62                     
  9476                           ; BSR set to: 0
  9477  003E62  5160               	movf	floorf@m& (0+255),w,b
  9478  003E64  2766               	addwf	floorf@u& (0+255),f,b
  9479  003E66  5161               	movf	(floorf@m+1)& (0+255),w,b
  9480  003E68  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9481  003E6A  5162               	movf	(floorf@m+2)& (0+255),w,b
  9482  003E6C  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9483  003E6E  5163               	movf	(floorf@m+3)& (0+255),w,b
  9484  003E70  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9485  003E72                     l1438:
  9486                           
  9487                           ; BSR set to: 0
  9488  003E72  1D60               	comf	floorf@m& (0+255),w,b
  9489  003E74  6E52               	movwf	??_floorf^0,c
  9490  003E76  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9491  003E78  6E53               	movwf	(??_floorf+1)^0,c
  9492  003E7A  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9493  003E7C  6E54               	movwf	(??_floorf+2)^0,c
  9494  003E7E  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9495  003E80  6E55               	movwf	(??_floorf+3)^0,c
  9496  003E82  5052               	movf	??_floorf^0,w,c
  9497  003E84  1766               	andwf	floorf@u& (0+255),f,b
  9498  003E86  5053               	movf	(??_floorf+1)^0,w,c
  9499  003E88  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9500  003E8A  5054               	movf	(??_floorf+2)^0,w,c
  9501  003E8C  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9502  003E8E  5055               	movf	(??_floorf+3)^0,w,c
  9503  003E90  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9504  003E92  EF8F  F01F         	goto	l4767
  9505  003E96                     l4759:
  9506                           
  9507                           ; BSR set to: 0
  9508  003E96  C066  F052         	movff	floorf@u,??_floorf
  9509  003E9A  C067  F053         	movff	floorf@u+1,??_floorf+1
  9510  003E9E  C068  F054         	movff	floorf@u+2,??_floorf+2
  9511  003EA2  C069  F055         	movff	floorf@u+3,??_floorf+3
  9512  003EA6  0E20               	movlw	32
  9513  003EA8  EF5B  F01F         	goto	u5450
  9514  003EAC                     u5455:
  9515  003EAC  90D8               	bcf	status,0,c
  9516  003EAE  3255               	rrcf	(??_floorf+3)^0,f,c
  9517  003EB0  3254               	rrcf	(??_floorf+2)^0,f,c
  9518  003EB2  3253               	rrcf	(??_floorf+1)^0,f,c
  9519  003EB4  3252               	rrcf	??_floorf^0,f,c
  9520  003EB6                     u5450:
  9521  003EB6  2EE8               	decfsz	wreg,f,c
  9522  003EB8  EF56  F01F         	goto	u5455
  9523  003EBC  5052               	movf	??_floorf^0,w,c
  9524  003EBE  1053               	iorwf	(??_floorf+1)^0,w,c
  9525  003EC0  1054               	iorwf	(??_floorf+2)^0,w,c
  9526  003EC2  1055               	iorwf	(??_floorf+3)^0,w,c
  9527  003EC4  A4D8               	btfss	status,2,c
  9528  003EC6  EF67  F01F         	goto	u5461
  9529  003ECA  EF69  F01F         	goto	u5460
  9530  003ECE                     u5461:
  9531  003ECE  EF73  F01F         	goto	l4763
  9532  003ED2                     u5460:
  9533  003ED2                     
  9534                           ; BSR set to: 0
  9535  003ED2  0E00               	movlw	0
  9536  003ED4  6F66               	movwf	floorf@u& (0+255),b
  9537  003ED6  0E00               	movlw	0
  9538  003ED8  6F67               	movwf	(floorf@u+1)& (0+255),b
  9539  003EDA  0E00               	movlw	0
  9540  003EDC  6F68               	movwf	(floorf@u+2)& (0+255),b
  9541  003EDE  0E00               	movlw	0
  9542  003EE0  6F69               	movwf	(floorf@u+3)& (0+255),b
  9543  003EE2  EF8F  F01F         	goto	l4767
  9544  003EE6                     l4763:
  9545                           
  9546                           ; BSR set to: 0
  9547  003EE6  90D8               	bcf	status,0,c
  9548  003EE8  3566               	rlcf	floorf@u& (0+255),w,b
  9549  003EEA  6E52               	movwf	??_floorf^0,c
  9550  003EEC  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9551  003EEE  6E53               	movwf	(??_floorf+1)^0,c
  9552  003EF0  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9553  003EF2  6E54               	movwf	(??_floorf+2)^0,c
  9554  003EF4  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9555  003EF6  6E55               	movwf	(??_floorf+3)^0,c
  9556  003EF8  5052               	movf	??_floorf^0,w,c
  9557  003EFA  1053               	iorwf	(??_floorf+1)^0,w,c
  9558  003EFC  1054               	iorwf	(??_floorf+2)^0,w,c
  9559  003EFE  1055               	iorwf	(??_floorf+3)^0,w,c
  9560  003F00  B4D8               	btfsc	status,2,c
  9561  003F02  EF85  F01F         	goto	u5471
  9562  003F06  EF87  F01F         	goto	u5470
  9563  003F0A                     u5471:
  9564  003F0A  EF8F  F01F         	goto	l4767
  9565  003F0E                     u5470:
  9566  003F0E                     
  9567                           ; BSR set to: 0
  9568  003F0E  0E00               	movlw	0
  9569  003F10  6F66               	movwf	floorf@u& (0+255),b
  9570  003F12  0E00               	movlw	0
  9571  003F14  6F67               	movwf	(floorf@u+1)& (0+255),b
  9572  003F16  0E80               	movlw	128
  9573  003F18  6F68               	movwf	(floorf@u+2)& (0+255),b
  9574  003F1A  0EBF               	movlw	191
  9575  003F1C  6F69               	movwf	(floorf@u+3)& (0+255),b
  9576  003F1E                     l4767:
  9577                           
  9578                           ; BSR set to: 0
  9579  003F1E  C066  F04E         	movff	floorf@u,?_floorf
  9580  003F22  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9581  003F26  C068  F050         	movff	floorf@u+2,?_floorf+2
  9582  003F2A  C069  F051         	movff	floorf@u+3,?_floorf+3
  9583  003F2E                     l1435:
  9584                           
  9585                           ; BSR set to: 0
  9586  003F2E  0012               	return		;funcret
  9587  003F30                     __end_of_floorf:
  9588                           	callstack 0
  9589                           
  9590 ;; *************** function ___fpclassifyf *****************
  9591 ;; Defined at:
  9592 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9593 ;; Parameters:    Size  Location     Type
  9594 ;;  x               4    0[COMRAM] float 
  9595 ;; Auto vars:     Size  Location     Type
  9596 ;;  u               4   10[COMRAM] struct .
  9597 ;;  e               2    8[COMRAM] int 
  9598 ;; Return value:  Size  Location     Type
  9599 ;;                  2    0[COMRAM] int 
  9600 ;; Registers used:
  9601 ;;		wreg, status,2, status,0
  9602 ;; Tracked objects:
  9603 ;;		On entry : 0/0
  9604 ;;		On exit  : 0/0
  9605 ;;		Unchanged: 0/0
  9606 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9607 ;;      Params:         4       0       0       0       0       0       0
  9608 ;;      Locals:         6       0       0       0       0       0       0
  9609 ;;      Temps:          4       0       0       0       0       0       0
  9610 ;;      Totals:        14       0       0       0       0       0       0
  9611 ;;Total ram usage:       14 bytes
  9612 ;; Hardware stack levels used:    1
  9613 ;; Hardware stack levels required when called:    1
  9614 ;; This function calls:
  9615 ;;		Nothing
  9616 ;; This function is called by:
  9617 ;;		_efgtoa
  9618 ;; This function uses a non-reentrant model
  9619 ;;
  9620                           
  9621                           	psect	text28
  9622  004BD0                     __ptext28:
  9623                           	callstack 0
  9624  004BD0                     ___fpclassifyf:
  9625                           	callstack 23
  9626  004BD0  C1A3  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9627  004BD4  C1A4  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9628  004BD8  C1A5  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9629  004BDC  C1A6  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9630  004BE0  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9631  004BE4  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9632  004BE8  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9633  004BEC  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9634  004BF0  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9635  004BF4  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9636  004BF8  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9637  004BFC  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9638  004C00  0E18               	movlw	24
  9639  004C02  EF08  F026         	goto	u5260
  9640  004C06                     u5265:
  9641  004C06  90D8               	bcf	status,0,c
  9642  004C08  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9643  004C0A  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9644  004C0C  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9645  004C0E  3205               	rrcf	??___fpclassifyf^0,f,c
  9646  004C10                     u5260:
  9647  004C10  2EE8               	decfsz	wreg,f,c
  9648  004C12  EF03  F026         	goto	u5265
  9649  004C16  5005               	movf	??___fpclassifyf^0,w,c
  9650  004C18  6E09               	movwf	___fpclassifyf@e^0,c
  9651  004C1A  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9652  004C1C  5009               	movf	___fpclassifyf@e^0,w,c
  9653  004C1E  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9654  004C20  A4D8               	btfss	status,2,c
  9655  004C22  EF15  F026         	goto	u5271
  9656  004C26  EF17  F026         	goto	u5270
  9657  004C2A                     u5271:
  9658  004C2A  EF37  F026         	goto	l4719
  9659  004C2E                     u5270:
  9660  004C2E  90D8               	bcf	status,0,c
  9661  004C30  340B               	rlcf	___fpclassifyf@u^0,w,c
  9662  004C32  6E05               	movwf	??___fpclassifyf^0,c
  9663  004C34  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9664  004C36  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9665  004C38  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9666  004C3A  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9667  004C3C  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9668  004C3E  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9669  004C40  5005               	movf	??___fpclassifyf^0,w,c
  9670  004C42  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9671  004C44  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9672  004C46  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9673  004C48  A4D8               	btfss	status,2,c
  9674  004C4A  EF29  F026         	goto	u5281
  9675  004C4E  EF2B  F026         	goto	u5280
  9676  004C52                     u5281:
  9677  004C52  EF31  F026         	goto	l4715
  9678  004C56                     u5280:
  9679  004C56  0E00               	movlw	0
  9680  004C58  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9681  004C5A  0E02               	movlw	2
  9682  004C5C  6E01               	movwf	?___fpclassifyf^0,c
  9683  004C5E  EF66  F026         	goto	l1390
  9684  004C62                     l4715:
  9685  004C62  0E00               	movlw	0
  9686  004C64  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9687  004C66  0E03               	movlw	3
  9688  004C68  6E01               	movwf	?___fpclassifyf^0,c
  9689  004C6A  EF66  F026         	goto	l1390
  9690  004C6E                     l4719:
  9691  004C6E  2809               	incf	___fpclassifyf@e^0,w,c
  9692  004C70  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9693  004C72  A4D8               	btfss	status,2,c
  9694  004C74  EF3E  F026         	goto	u5291
  9695  004C78  EF40  F026         	goto	u5290
  9696  004C7C                     u5291:
  9697  004C7C  EF62  F026         	goto	l4725
  9698  004C80                     u5290:
  9699  004C80  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9700  004C84  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9701  004C88  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9702  004C8C  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9703  004C90  0E09               	movlw	9
  9704  004C92                     u5305:
  9705  004C92  90D8               	bcf	status,0,c
  9706  004C94  3605               	rlcf	??___fpclassifyf^0,f,c
  9707  004C96  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9708  004C98  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9709  004C9A  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9710  004C9C  2EE8               	decfsz	wreg,f,c
  9711  004C9E  EF49  F026         	goto	u5305
  9712  004CA2  5005               	movf	??___fpclassifyf^0,w,c
  9713  004CA4  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9714  004CA6  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9715  004CA8  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9716  004CAA  B4D8               	btfsc	status,2,c
  9717  004CAC  EF5A  F026         	goto	u5311
  9718  004CB0  EF5D  F026         	goto	u5310
  9719  004CB4                     u5311:
  9720  004CB4  0E01               	movlw	1
  9721  004CB6  EF5E  F026         	goto	u5320
  9722  004CBA                     u5310:
  9723  004CBA  0E00               	movlw	0
  9724  004CBC                     u5320:
  9725  004CBC  6E01               	movwf	?___fpclassifyf^0,c
  9726  004CBE  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9727  004CC0  EF66  F026         	goto	l1390
  9728  004CC4                     l4725:
  9729  004CC4  0E00               	movlw	0
  9730  004CC6  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9731  004CC8  0E04               	movlw	4
  9732  004CCA  6E01               	movwf	?___fpclassifyf^0,c
  9733  004CCC                     l1390:
  9734  004CCC  0012               	return		;funcret
  9735  004CCE                     __end_of___fpclassifyf:
  9736                           	callstack 0
  9737                           
  9738 ;; *************** function ___fltol *****************
  9739 ;; Defined at:
  9740 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  9741 ;; Parameters:    Size  Location     Type
  9742 ;;  f1              4   77[COMRAM] int 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  exp1            1   86[COMRAM] unsigned char 
  9745 ;;  sign1           1   85[COMRAM] unsigned char 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  4   77[COMRAM] long 
  9748 ;; Registers used:
  9749 ;;		wreg, status,2, status,0
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9755 ;;      Params:         4       0       0       0       0       0       0
  9756 ;;      Locals:         2       0       0       0       0       0       0
  9757 ;;      Temps:          4       0       0       0       0       0       0
  9758 ;;      Totals:        10       0       0       0       0       0       0
  9759 ;;Total ram usage:       10 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    1
  9762 ;; This function calls:
  9763 ;;		Nothing
  9764 ;; This function is called by:
  9765 ;;		_scanAdcConversion
  9766 ;;		_PWM1_setDC
  9767 ;;		_PWM2_setDC
  9768 ;;		_speedControl
  9769 ;;		_efgtoa
  9770 ;; This function uses a non-reentrant model
  9771 ;;
  9772                           
  9773                           	psect	text29
  9774  0049C6                     __ptext29:
  9775                           	callstack 0
  9776  0049C6                     ___fltol:
  9777                           	callstack 25
  9778  0049C6  3450               	rlcf	(___fltol@f1+2)^0,w,c
  9779  0049C8  3451               	rlcf	(___fltol@f1+3)^0,w,c
  9780  0049CA  6E57               	movwf	___fltol@exp1^0,c
  9781  0049CC  5057               	movf	___fltol@exp1^0,w,c
  9782  0049CE  A4D8               	btfss	status,2,c
  9783  0049D0  EFEC  F024         	goto	u5141
  9784  0049D4  EFEE  F024         	goto	u5140
  9785  0049D8                     u5141:
  9786  0049D8  EFF8  F024         	goto	l4643
  9787  0049DC                     u5140:
  9788  0049DC                     l4639:
  9789  0049DC  0E00               	movlw	0
  9790  0049DE  6E4E               	movwf	?___fltol^0,c
  9791  0049E0  0E00               	movlw	0
  9792  0049E2  6E4F               	movwf	(?___fltol+1)^0,c
  9793  0049E4  0E00               	movlw	0
  9794  0049E6  6E50               	movwf	(?___fltol+2)^0,c
  9795  0049E8  0E00               	movlw	0
  9796  0049EA  6E51               	movwf	(?___fltol+3)^0,c
  9797  0049EC  EF65  F025         	goto	l785
  9798  0049F0                     l4643:
  9799  0049F0  C04E  F052         	movff	___fltol@f1,??___fltol
  9800  0049F4  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  9801  0049F8  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  9802  0049FC  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  9803  004A00  0E20               	movlw	32
  9804  004A02  EF08  F025         	goto	u5150
  9805  004A06                     u5155:
  9806  004A06  90D8               	bcf	status,0,c
  9807  004A08  3255               	rrcf	(??___fltol+3)^0,f,c
  9808  004A0A  3254               	rrcf	(??___fltol+2)^0,f,c
  9809  004A0C  3253               	rrcf	(??___fltol+1)^0,f,c
  9810  004A0E  3252               	rrcf	??___fltol^0,f,c
  9811  004A10                     u5150:
  9812  004A10  2EE8               	decfsz	wreg,f,c
  9813  004A12  EF03  F025         	goto	u5155
  9814  004A16  5052               	movf	??___fltol^0,w,c
  9815  004A18  6E56               	movwf	___fltol@sign1^0,c
  9816  004A1A  8E50               	bsf	(___fltol@f1+2)^0,7,c
  9817  004A1C  0EFF               	movlw	255
  9818  004A1E  164E               	andwf	___fltol@f1^0,f,c
  9819  004A20  0EFF               	movlw	255
  9820  004A22  164F               	andwf	(___fltol@f1+1)^0,f,c
  9821  004A24  0EFF               	movlw	255
  9822  004A26  1650               	andwf	(___fltol@f1+2)^0,f,c
  9823  004A28  0E00               	movlw	0
  9824  004A2A  1651               	andwf	(___fltol@f1+3)^0,f,c
  9825  004A2C  0E96               	movlw	150
  9826  004A2E  5E57               	subwf	___fltol@exp1^0,f,c
  9827  004A30  BE57               	btfsc	___fltol@exp1^0,7,c
  9828  004A32  EF1F  F025         	goto	u5160
  9829  004A36  EF1D  F025         	goto	u5161
  9830  004A3A                     u5161:
  9831  004A3A  EF35  F025         	goto	l4663
  9832  004A3E                     u5160:
  9833  004A3E  5057               	movf	___fltol@exp1^0,w,c
  9834  004A40  0A80               	xorlw	128
  9835  004A42  0F97               	addlw	151
  9836  004A44  B0D8               	btfsc	status,0,c
  9837  004A46  EF27  F025         	goto	u5171
  9838  004A4A  EF29  F025         	goto	u5170
  9839  004A4E                     u5171:
  9840  004A4E  EF2B  F025         	goto	l4659
  9841  004A52                     u5170:
  9842  004A52  EFEE  F024         	goto	l4639
  9843  004A56                     l4659:
  9844  004A56  90D8               	bcf	status,0,c
  9845  004A58  3251               	rrcf	(___fltol@f1+3)^0,f,c
  9846  004A5A  3250               	rrcf	(___fltol@f1+2)^0,f,c
  9847  004A5C  324F               	rrcf	(___fltol@f1+1)^0,f,c
  9848  004A5E  324E               	rrcf	___fltol@f1^0,f,c
  9849  004A60  3E57               	incfsz	___fltol@exp1^0,f,c
  9850  004A62  EF2B  F025         	goto	l4659
  9851  004A66  EF4D  F025         	goto	l4673
  9852  004A6A                     l4663:
  9853  004A6A  0E1F               	movlw	31
  9854  004A6C  6457               	cpfsgt	___fltol@exp1^0,c
  9855  004A6E  EF3B  F025         	goto	u5181
  9856  004A72  EF3D  F025         	goto	u5180
  9857  004A76                     u5181:
  9858  004A76  EF45  F025         	goto	l4671
  9859  004A7A                     u5180:
  9860  004A7A  EFEE  F024         	goto	l4639
  9861  004A7E                     l4669:
  9862  004A7E  90D8               	bcf	status,0,c
  9863  004A80  364E               	rlcf	___fltol@f1^0,f,c
  9864  004A82  364F               	rlcf	(___fltol@f1+1)^0,f,c
  9865  004A84  3650               	rlcf	(___fltol@f1+2)^0,f,c
  9866  004A86  3651               	rlcf	(___fltol@f1+3)^0,f,c
  9867  004A88  0657               	decf	___fltol@exp1^0,f,c
  9868  004A8A                     l4671:
  9869  004A8A  5057               	movf	___fltol@exp1^0,w,c
  9870  004A8C  A4D8               	btfss	status,2,c
  9871  004A8E  EF4B  F025         	goto	u5191
  9872  004A92  EF4D  F025         	goto	u5190
  9873  004A96                     u5191:
  9874  004A96  EF3F  F025         	goto	l4669
  9875  004A9A                     u5190:
  9876  004A9A                     l4673:
  9877  004A9A  5056               	movf	___fltol@sign1^0,w,c
  9878  004A9C  B4D8               	btfsc	status,2,c
  9879  004A9E  EF53  F025         	goto	u5201
  9880  004AA2  EF55  F025         	goto	u5200
  9881  004AA6                     u5201:
  9882  004AA6  EF5D  F025         	goto	l4677
  9883  004AAA                     u5200:
  9884  004AAA  1E51               	comf	(___fltol@f1+3)^0,f,c
  9885  004AAC  1E50               	comf	(___fltol@f1+2)^0,f,c
  9886  004AAE  1E4F               	comf	(___fltol@f1+1)^0,f,c
  9887  004AB0  6C4E               	negf	___fltol@f1^0,c
  9888  004AB2  0E00               	movlw	0
  9889  004AB4  224F               	addwfc	(___fltol@f1+1)^0,f,c
  9890  004AB6  2250               	addwfc	(___fltol@f1+2)^0,f,c
  9891  004AB8  2251               	addwfc	(___fltol@f1+3)^0,f,c
  9892  004ABA                     l4677:
  9893  004ABA  C04E  F04E         	movff	___fltol@f1,?___fltol
  9894  004ABE  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  9895  004AC2  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  9896  004AC6  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  9897  004ACA                     l785:
  9898  004ACA  0012               	return		;funcret
  9899  004ACC                     __end_of___fltol:
  9900                           	callstack 0
  9901                           
  9902 ;; *************** function ___flsub *****************
  9903 ;; Defined at:
  9904 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9905 ;; Parameters:    Size  Location     Type
  9906 ;;  b               4   68[COMRAM] long 
  9907 ;;  a               4   72[COMRAM] long 
  9908 ;; Auto vars:     Size  Location     Type
  9909 ;;		None
  9910 ;; Return value:  Size  Location     Type
  9911 ;;                  4   68[COMRAM] long 
  9912 ;; Registers used:
  9913 ;;		wreg, status,2, status,0, cstack
  9914 ;; Tracked objects:
  9915 ;;		On entry : 0/0
  9916 ;;		On exit  : 0/0
  9917 ;;		Unchanged: 0/0
  9918 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9919 ;;      Params:         8       0       0       0       0       0       0
  9920 ;;      Locals:         0       0       0       0       0       0       0
  9921 ;;      Temps:          0       0       0       0       0       0       0
  9922 ;;      Totals:         8       0       0       0       0       0       0
  9923 ;;Total ram usage:        8 bytes
  9924 ;; Hardware stack levels used:    1
  9925 ;; Hardware stack levels required when called:    2
  9926 ;; This function calls:
  9927 ;;		___fladd
  9928 ;; This function is called by:
  9929 ;;		_stateMachine
  9930 ;;		_efgtoa
  9931 ;; This function uses a non-reentrant model
  9932 ;;
  9933                           
  9934                           	psect	text30
  9935  0058AE                     __ptext30:
  9936                           	callstack 0
  9937  0058AE                     ___flsub:
  9938                           	callstack 22
  9939  0058AE  0E00               	movlw	0
  9940  0058B0  1A49               	xorwf	___flsub@a^0,f,c
  9941  0058B2  0E00               	movlw	0
  9942  0058B4  1A4A               	xorwf	(___flsub@a+1)^0,f,c
  9943  0058B6  0E00               	movlw	0
  9944  0058B8  1A4B               	xorwf	(___flsub@a+2)^0,f,c
  9945  0058BA  0E80               	movlw	128
  9946  0058BC  1A4C               	xorwf	(___flsub@a+3)^0,f,c
  9947  0058BE  C045  F035         	movff	___flsub@b,___fladd@b
  9948  0058C2  C046  F036         	movff	___flsub@b+1,___fladd@b+1
  9949  0058C6  C047  F037         	movff	___flsub@b+2,___fladd@b+2
  9950  0058CA  C048  F038         	movff	___flsub@b+3,___fladd@b+3
  9951  0058CE  C049  F039         	movff	___flsub@a,___fladd@a
  9952  0058D2  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
  9953  0058D6  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
  9954  0058DA  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
  9955  0058DE  EC66  F015         	call	___fladd	;wreg free
  9956  0058E2  C035  F045         	movff	?___fladd,?___flsub
  9957  0058E6  C036  F046         	movff	?___fladd+1,?___flsub+1
  9958  0058EA  C037  F047         	movff	?___fladd+2,?___flsub+2
  9959  0058EE  C038  F048         	movff	?___fladd+3,?___flsub+3
  9960  0058F2  0012               	return		;funcret
  9961  0058F4                     __end_of___flsub:
  9962                           	callstack 0
  9963                           
  9964 ;; *************** function ___fladd *****************
  9965 ;; Defined at:
  9966 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9967 ;; Parameters:    Size  Location     Type
  9968 ;;  b               4   52[COMRAM] long 
  9969 ;;  a               4   56[COMRAM] long 
  9970 ;; Auto vars:     Size  Location     Type
  9971 ;;  grs             1   67[COMRAM] unsigned char 
  9972 ;;  bexp            1   66[COMRAM] unsigned char 
  9973 ;;  aexp            1   65[COMRAM] unsigned char 
  9974 ;;  signs           1   64[COMRAM] unsigned char 
  9975 ;; Return value:  Size  Location     Type
  9976 ;;                  4   52[COMRAM] unsigned char 
  9977 ;; Registers used:
  9978 ;;		wreg, status,2, status,0
  9979 ;; Tracked objects:
  9980 ;;		On entry : 0/0
  9981 ;;		On exit  : 0/0
  9982 ;;		Unchanged: 0/0
  9983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9984 ;;      Params:         8       0       0       0       0       0       0
  9985 ;;      Locals:         4       0       0       0       0       0       0
  9986 ;;      Temps:          4       0       0       0       0       0       0
  9987 ;;      Totals:        16       0       0       0       0       0       0
  9988 ;;Total ram usage:       16 bytes
  9989 ;; Hardware stack levels used:    1
  9990 ;; Hardware stack levels required when called:    1
  9991 ;; This function calls:
  9992 ;;		Nothing
  9993 ;; This function is called by:
  9994 ;;		_stateMachine
  9995 ;;		_speedControl
  9996 ;;		___flsub
  9997 ;;		_efgtoa
  9998 ;; This function uses a non-reentrant model
  9999 ;;
 10000                           
 10001                           	psect	text31
 10002  002ACC                     __ptext31:
 10003                           	callstack 0
 10004  002ACC                     ___fladd:
 10005                           	callstack 25
 10006  002ACC  5038               	movf	(___fladd@b+3)^0,w,c
 10007  002ACE  0B80               	andlw	128
 10008  002AD0  6E41               	movwf	___fladd@signs^0,c
 10009  002AD2  5038               	movf	(___fladd@b+3)^0,w,c
 10010  002AD4  2438               	addwf	(___fladd@b+3)^0,w,c
 10011  002AD6  6E43               	movwf	___fladd@bexp^0,c
 10012  002AD8  AE37               	btfss	(___fladd@b+2)^0,7,c
 10013  002ADA  EF71  F015         	goto	u3951
 10014  002ADE  EF73  F015         	goto	u3950
 10015  002AE2                     u3951:
 10016  002AE2  EF74  F015         	goto	l3933
 10017  002AE6                     u3950:
 10018  002AE6  8043               	bsf	___fladd@bexp^0,0,c
 10019  002AE8                     l3933:
 10020  002AE8  5043               	movf	___fladd@bexp^0,w,c
 10021  002AEA  B4D8               	btfsc	status,2,c
 10022  002AEC  EF7A  F015         	goto	u3961
 10023  002AF0  EF7C  F015         	goto	u3960
 10024  002AF4                     u3961:
 10025  002AF4  EF91  F015         	goto	l3943
 10026  002AF8                     u3960:
 10027  002AF8  2843               	incf	___fladd@bexp^0,w,c
 10028  002AFA  A4D8               	btfss	status,2,c
 10029  002AFC  EF82  F015         	goto	u3971
 10030  002B00  EF84  F015         	goto	u3970
 10031  002B04                     u3971:
 10032  002B04  EF8C  F015         	goto	l3939
 10033  002B08                     u3970:
 10034  002B08  0E00               	movlw	0
 10035  002B0A  6E35               	movwf	___fladd@b^0,c
 10036  002B0C  0E00               	movlw	0
 10037  002B0E  6E36               	movwf	(___fladd@b+1)^0,c
 10038  002B10  0E00               	movlw	0
 10039  002B12  6E37               	movwf	(___fladd@b+2)^0,c
 10040  002B14  0E00               	movlw	0
 10041  002B16  6E38               	movwf	(___fladd@b+3)^0,c
 10042  002B18                     l3939:
 10043  002B18  8E37               	bsf	(___fladd@b+2)^0,7,c
 10044  002B1A  0E00               	movlw	0
 10045  002B1C  6E38               	movwf	(___fladd@b+3)^0,c
 10046  002B1E  EF99  F015         	goto	l3945
 10047  002B22                     l3943:
 10048  002B22  0E00               	movlw	0
 10049  002B24  6E35               	movwf	___fladd@b^0,c
 10050  002B26  0E00               	movlw	0
 10051  002B28  6E36               	movwf	(___fladd@b+1)^0,c
 10052  002B2A  0E00               	movlw	0
 10053  002B2C  6E37               	movwf	(___fladd@b+2)^0,c
 10054  002B2E  0E00               	movlw	0
 10055  002B30  6E38               	movwf	(___fladd@b+3)^0,c
 10056  002B32                     l3945:
 10057  002B32  503C               	movf	(___fladd@a+3)^0,w,c
 10058  002B34  0B80               	andlw	128
 10059  002B36  6E42               	movwf	___fladd@aexp^0,c
 10060  002B38  5041               	movf	___fladd@signs^0,w,c
 10061  002B3A  1842               	xorwf	___fladd@aexp^0,w,c
 10062  002B3C  B4D8               	btfsc	status,2,c
 10063  002B3E  EFA3  F015         	goto	u3981
 10064  002B42  EFA5  F015         	goto	u3980
 10065  002B46                     u3981:
 10066  002B46  EFA6  F015         	goto	l3951
 10067  002B4A                     u3980:
 10068  002B4A  8C41               	bsf	___fladd@signs^0,6,c
 10069  002B4C                     l3951:
 10070  002B4C  503C               	movf	(___fladd@a+3)^0,w,c
 10071  002B4E  243C               	addwf	(___fladd@a+3)^0,w,c
 10072  002B50  6E42               	movwf	___fladd@aexp^0,c
 10073  002B52  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10074  002B54  EFAE  F015         	goto	u3991
 10075  002B58  EFB0  F015         	goto	u3990
 10076  002B5C                     u3991:
 10077  002B5C  EFB1  F015         	goto	l3957
 10078  002B60                     u3990:
 10079  002B60  8042               	bsf	___fladd@aexp^0,0,c
 10080  002B62                     l3957:
 10081  002B62  5042               	movf	___fladd@aexp^0,w,c
 10082  002B64  B4D8               	btfsc	status,2,c
 10083  002B66  EFB7  F015         	goto	u4001
 10084  002B6A  EFB9  F015         	goto	u4000
 10085  002B6E                     u4001:
 10086  002B6E  EFCE  F015         	goto	l3967
 10087  002B72                     u4000:
 10088  002B72  2842               	incf	___fladd@aexp^0,w,c
 10089  002B74  A4D8               	btfss	status,2,c
 10090  002B76  EFBF  F015         	goto	u4011
 10091  002B7A  EFC1  F015         	goto	u4010
 10092  002B7E                     u4011:
 10093  002B7E  EFC9  F015         	goto	l3963
 10094  002B82                     u4010:
 10095  002B82  0E00               	movlw	0
 10096  002B84  6E39               	movwf	___fladd@a^0,c
 10097  002B86  0E00               	movlw	0
 10098  002B88  6E3A               	movwf	(___fladd@a+1)^0,c
 10099  002B8A  0E00               	movlw	0
 10100  002B8C  6E3B               	movwf	(___fladd@a+2)^0,c
 10101  002B8E  0E00               	movlw	0
 10102  002B90  6E3C               	movwf	(___fladd@a+3)^0,c
 10103  002B92                     l3963:
 10104  002B92  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10105  002B94  0E00               	movlw	0
 10106  002B96  6E3C               	movwf	(___fladd@a+3)^0,c
 10107  002B98  EFD6  F015         	goto	l3969
 10108  002B9C                     l3967:
 10109  002B9C  0E00               	movlw	0
 10110  002B9E  6E39               	movwf	___fladd@a^0,c
 10111  002BA0  0E00               	movlw	0
 10112  002BA2  6E3A               	movwf	(___fladd@a+1)^0,c
 10113  002BA4  0E00               	movlw	0
 10114  002BA6  6E3B               	movwf	(___fladd@a+2)^0,c
 10115  002BA8  0E00               	movlw	0
 10116  002BAA  6E3C               	movwf	(___fladd@a+3)^0,c
 10117  002BAC                     l3969:
 10118  002BAC  5043               	movf	___fladd@bexp^0,w,c
 10119  002BAE  5C42               	subwf	___fladd@aexp^0,w,c
 10120  002BB0  B0D8               	btfsc	status,0,c
 10121  002BB2  EFDD  F015         	goto	u4021
 10122  002BB6  EFDF  F015         	goto	u4020
 10123  002BBA                     u4021:
 10124  002BBA  EF06  F016         	goto	l4005
 10125  002BBE                     u4020:
 10126  002BBE  AC41               	btfss	___fladd@signs^0,6,c
 10127  002BC0  EFE4  F015         	goto	u4031
 10128  002BC4  EFE6  F015         	goto	u4030
 10129  002BC8                     u4031:
 10130  002BC8  EFE8  F015         	goto	l3975
 10131  002BCC                     u4030:
 10132  002BCC  0E80               	movlw	128
 10133  002BCE  1A41               	xorwf	___fladd@signs^0,f,c
 10134  002BD0                     l3975:
 10135  002BD0  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10136  002BD4  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10137  002BD8  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10138  002BDC  C035  F044         	movff	___fladd@b,___fladd@grs
 10139  002BE0  C039  F035         	movff	___fladd@a,___fladd@b
 10140  002BE4  C044  F039         	movff	___fladd@grs,___fladd@a
 10141  002BE8  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10142  002BEC  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10143  002BF0  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10144  002BF4  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10145  002BF8  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10146  002BFC  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10147  002C00  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10148  002C04  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10149  002C08  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10150  002C0C                     l4005:
 10151  002C0C  0E00               	movlw	0
 10152  002C0E  6E44               	movwf	___fladd@grs^0,c
 10153  002C10  5043               	movf	___fladd@bexp^0,w,c
 10154  002C12  C042  F03D         	movff	___fladd@aexp,??___fladd
 10155  002C16  6A3E               	clrf	(??___fladd+1)^0,c
 10156  002C18  5E3D               	subwf	??___fladd^0,f,c
 10157  002C1A  0E00               	movlw	0
 10158  002C1C  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10159  002C1E  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10160  002C20  EF1B  F016         	goto	u4041
 10161  002C24  503E               	movf	(??___fladd+1)^0,w,c
 10162  002C26  E109               	bnz	u4040
 10163  002C28  0E1A               	movlw	26
 10164  002C2A  5C3D               	subwf	??___fladd^0,w,c
 10165  002C2C  A0D8               	btfss	status,0,c
 10166  002C2E  EF1B  F016         	goto	u4041
 10167  002C32  EF1D  F016         	goto	u4040
 10168  002C36                     u4041:
 10169  002C36  EF54  F016         	goto	l1017
 10170  002C3A                     u4040:
 10171  002C3A  5035               	movf	___fladd@b^0,w,c
 10172  002C3C  1036               	iorwf	(___fladd@b+1)^0,w,c
 10173  002C3E  1037               	iorwf	(___fladd@b+2)^0,w,c
 10174  002C40  1038               	iorwf	(___fladd@b+3)^0,w,c
 10175  002C42  A4D8               	btfss	status,2,c
 10176  002C44  EF26  F016         	goto	u4051
 10177  002C48  EF29  F016         	goto	u4050
 10178  002C4C                     u4051:
 10179  002C4C  0E01               	movlw	1
 10180  002C4E  EF2A  F016         	goto	u4060
 10181  002C52                     u4050:
 10182  002C52  0E00               	movlw	0
 10183  002C54                     u4060:
 10184  002C54  6E44               	movwf	___fladd@grs^0,c
 10185  002C56  0E00               	movlw	0
 10186  002C58  6E35               	movwf	___fladd@b^0,c
 10187  002C5A  0E00               	movlw	0
 10188  002C5C  6E36               	movwf	(___fladd@b+1)^0,c
 10189  002C5E  0E00               	movlw	0
 10190  002C60  6E37               	movwf	(___fladd@b+2)^0,c
 10191  002C62  0E00               	movlw	0
 10192  002C64  6E38               	movwf	(___fladd@b+3)^0,c
 10193  002C66  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10194  002C6A  EF5D  F016         	goto	l1016
 10195  002C6E                     l1018:
 10196  002C6E  A044               	btfss	___fladd@grs^0,0,c
 10197  002C70  EF3C  F016         	goto	u4071
 10198  002C74  EF3E  F016         	goto	u4070
 10199  002C78                     u4071:
 10200  002C78  EF44  F016         	goto	l4017
 10201  002C7C                     u4070:
 10202  002C7C  90D8               	bcf	status,0,c
 10203  002C7E  3044               	rrcf	___fladd@grs^0,w,c
 10204  002C80  0901               	iorlw	1
 10205  002C82  6E44               	movwf	___fladd@grs^0,c
 10206  002C84  EF46  F016         	goto	l4019
 10207  002C88                     l4017:
 10208  002C88  90D8               	bcf	status,0,c
 10209  002C8A  3244               	rrcf	___fladd@grs^0,f,c
 10210  002C8C                     l4019:
 10211  002C8C  A035               	btfss	___fladd@b^0,0,c
 10212  002C8E  EF4B  F016         	goto	u4081
 10213  002C92  EF4D  F016         	goto	u4080
 10214  002C96                     u4081:
 10215  002C96  EF4E  F016         	goto	l4023
 10216  002C9A                     u4080:
 10217  002C9A  8E44               	bsf	___fladd@grs^0,7,c
 10218  002C9C                     l4023:
 10219  002C9C  3438               	rlcf	(___fladd@b+3)^0,w,c
 10220  002C9E  3238               	rrcf	(___fladd@b+3)^0,f,c
 10221  002CA0  3237               	rrcf	(___fladd@b+2)^0,f,c
 10222  002CA2  3236               	rrcf	(___fladd@b+1)^0,f,c
 10223  002CA4  3235               	rrcf	___fladd@b^0,f,c
 10224  002CA6  2A43               	incf	___fladd@bexp^0,f,c
 10225  002CA8                     l1017:
 10226  002CA8  5042               	movf	___fladd@aexp^0,w,c
 10227  002CAA  5C43               	subwf	___fladd@bexp^0,w,c
 10228  002CAC  A0D8               	btfss	status,0,c
 10229  002CAE  EF5B  F016         	goto	u4091
 10230  002CB2  EF5D  F016         	goto	u4090
 10231  002CB6                     u4091:
 10232  002CB6  EF37  F016         	goto	l1018
 10233  002CBA                     u4090:
 10234  002CBA                     l1016:
 10235  002CBA  BC41               	btfsc	___fladd@signs^0,6,c
 10236  002CBC  EF62  F016         	goto	u4101
 10237  002CC0  EF64  F016         	goto	u4100
 10238  002CC4                     u4101:
 10239  002CC4  EFA4  F016         	goto	l4051
 10240  002CC8                     u4100:
 10241  002CC8  5043               	movf	___fladd@bexp^0,w,c
 10242  002CCA  A4D8               	btfss	status,2,c
 10243  002CCC  EF6A  F016         	goto	u4111
 10244  002CD0  EF6C  F016         	goto	u4110
 10245  002CD4                     u4111:
 10246  002CD4  EF76  F016         	goto	l4033
 10247  002CD8                     u4110:
 10248  002CD8  0E00               	movlw	0
 10249  002CDA  6E35               	movwf	?___fladd^0,c
 10250  002CDC  0E00               	movlw	0
 10251  002CDE  6E36               	movwf	(?___fladd+1)^0,c
 10252  002CE0  0E00               	movlw	0
 10253  002CE2  6E37               	movwf	(?___fladd+2)^0,c
 10254  002CE4  0E00               	movlw	0
 10255  002CE6  6E38               	movwf	(?___fladd+3)^0,c
 10256  002CE8  EFC5  F017         	goto	l1025
 10257  002CEC                     l4033:
 10258  002CEC  5039               	movf	___fladd@a^0,w,c
 10259  002CEE  2635               	addwf	___fladd@b^0,f,c
 10260  002CF0  503A               	movf	(___fladd@a+1)^0,w,c
 10261  002CF2  2236               	addwfc	(___fladd@b+1)^0,f,c
 10262  002CF4  503B               	movf	(___fladd@a+2)^0,w,c
 10263  002CF6  2237               	addwfc	(___fladd@b+2)^0,f,c
 10264  002CF8  503C               	movf	(___fladd@a+3)^0,w,c
 10265  002CFA  2238               	addwfc	(___fladd@b+3)^0,f,c
 10266  002CFC  A038               	btfss	(___fladd@b+3)^0,0,c
 10267  002CFE  EF83  F016         	goto	u4121
 10268  002D02  EF85  F016         	goto	u4120
 10269  002D06                     u4121:
 10270  002D06  EF31  F017         	goto	l4087
 10271  002D0A                     u4120:
 10272  002D0A  A044               	btfss	___fladd@grs^0,0,c
 10273  002D0C  EF8A  F016         	goto	u4131
 10274  002D10  EF8C  F016         	goto	u4130
 10275  002D14                     u4131:
 10276  002D14  EF92  F016         	goto	l4041
 10277  002D18                     u4130:
 10278  002D18  90D8               	bcf	status,0,c
 10279  002D1A  3044               	rrcf	___fladd@grs^0,w,c
 10280  002D1C  0901               	iorlw	1
 10281  002D1E  6E44               	movwf	___fladd@grs^0,c
 10282  002D20  EF94  F016         	goto	l4043
 10283  002D24                     l4041:
 10284  002D24  90D8               	bcf	status,0,c
 10285  002D26  3244               	rrcf	___fladd@grs^0,f,c
 10286  002D28                     l4043:
 10287  002D28  A035               	btfss	___fladd@b^0,0,c
 10288  002D2A  EF99  F016         	goto	u4141
 10289  002D2E  EF9B  F016         	goto	u4140
 10290  002D32                     u4141:
 10291  002D32  EF9C  F016         	goto	l4047
 10292  002D36                     u4140:
 10293  002D36  8E44               	bsf	___fladd@grs^0,7,c
 10294  002D38                     l4047:
 10295  002D38  3438               	rlcf	(___fladd@b+3)^0,w,c
 10296  002D3A  3238               	rrcf	(___fladd@b+3)^0,f,c
 10297  002D3C  3237               	rrcf	(___fladd@b+2)^0,f,c
 10298  002D3E  3236               	rrcf	(___fladd@b+1)^0,f,c
 10299  002D40  3235               	rrcf	___fladd@b^0,f,c
 10300  002D42  2A43               	incf	___fladd@bexp^0,f,c
 10301  002D44  EF31  F017         	goto	l4087
 10302  002D48                     l4051:
 10303  002D48  5039               	movf	___fladd@a^0,w,c
 10304  002D4A  5C35               	subwf	___fladd@b^0,w,c
 10305  002D4C  503A               	movf	(___fladd@a+1)^0,w,c
 10306  002D4E  5836               	subwfb	(___fladd@b+1)^0,w,c
 10307  002D50  503B               	movf	(___fladd@a+2)^0,w,c
 10308  002D52  5837               	subwfb	(___fladd@b+2)^0,w,c
 10309  002D54  5038               	movf	(___fladd@b+3)^0,w,c
 10310  002D56  0A80               	xorlw	128
 10311  002D58  6E3D               	movwf	??___fladd^0,c
 10312  002D5A  503C               	movf	(___fladd@a+3)^0,w,c
 10313  002D5C  0A80               	xorlw	128
 10314  002D5E  583D               	subwfb	??___fladd^0,w,c
 10315  002D60  B0D8               	btfsc	status,0,c
 10316  002D62  EFB5  F016         	goto	u4151
 10317  002D66  EFB7  F016         	goto	u4150
 10318  002D6A                     u4151:
 10319  002D6A  EFE2  F016         	goto	l4061
 10320  002D6E                     u4150:
 10321  002D6E  5035               	movf	___fladd@b^0,w,c
 10322  002D70  5C39               	subwf	___fladd@a^0,w,c
 10323  002D72  6E3D               	movwf	??___fladd^0,c
 10324  002D74  5036               	movf	(___fladd@b+1)^0,w,c
 10325  002D76  583A               	subwfb	(___fladd@a+1)^0,w,c
 10326  002D78  6E3E               	movwf	(??___fladd+1)^0,c
 10327  002D7A  5037               	movf	(___fladd@b+2)^0,w,c
 10328  002D7C  583B               	subwfb	(___fladd@a+2)^0,w,c
 10329  002D7E  6E3F               	movwf	(??___fladd+2)^0,c
 10330  002D80  5038               	movf	(___fladd@b+3)^0,w,c
 10331  002D82  583C               	subwfb	(___fladd@a+3)^0,w,c
 10332  002D84  6E40               	movwf	(??___fladd+3)^0,c
 10333  002D86  0EFF               	movlw	255
 10334  002D88  243D               	addwf	??___fladd^0,w,c
 10335  002D8A  6E35               	movwf	___fladd@b^0,c
 10336  002D8C  0EFF               	movlw	255
 10337  002D8E  203E               	addwfc	(??___fladd+1)^0,w,c
 10338  002D90  6E36               	movwf	(___fladd@b+1)^0,c
 10339  002D92  0EFF               	movlw	255
 10340  002D94  203F               	addwfc	(??___fladd+2)^0,w,c
 10341  002D96  6E37               	movwf	(___fladd@b+2)^0,c
 10342  002D98  0EFF               	movlw	255
 10343  002D9A  2040               	addwfc	(??___fladd+3)^0,w,c
 10344  002D9C  6E38               	movwf	(___fladd@b+3)^0,c
 10345  002D9E  0E80               	movlw	128
 10346  002DA0  1A41               	xorwf	___fladd@signs^0,f,c
 10347  002DA2  6C44               	negf	___fladd@grs^0,c
 10348  002DA4  5044               	movf	___fladd@grs^0,w,c
 10349  002DA6  A4D8               	btfss	status,2,c
 10350  002DA8  EFD8  F016         	goto	u4161
 10351  002DAC  EFDA  F016         	goto	u4160
 10352  002DB0                     u4161:
 10353  002DB0  EFEA  F016         	goto	l1033
 10354  002DB4                     u4160:
 10355  002DB4  0E01               	movlw	1
 10356  002DB6  2635               	addwf	___fladd@b^0,f,c
 10357  002DB8  0E00               	movlw	0
 10358  002DBA  2236               	addwfc	(___fladd@b+1)^0,f,c
 10359  002DBC  2237               	addwfc	(___fladd@b+2)^0,f,c
 10360  002DBE  2238               	addwfc	(___fladd@b+3)^0,f,c
 10361  002DC0  EFEA  F016         	goto	l1033
 10362  002DC4                     l4061:
 10363  002DC4  5039               	movf	___fladd@a^0,w,c
 10364  002DC6  5E35               	subwf	___fladd@b^0,f,c
 10365  002DC8  503A               	movf	(___fladd@a+1)^0,w,c
 10366  002DCA  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10367  002DCC  503B               	movf	(___fladd@a+2)^0,w,c
 10368  002DCE  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10369  002DD0  503C               	movf	(___fladd@a+3)^0,w,c
 10370  002DD2  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10371  002DD4                     l1033:
 10372  002DD4  5035               	movf	___fladd@b^0,w,c
 10373  002DD6  1036               	iorwf	(___fladd@b+1)^0,w,c
 10374  002DD8  1037               	iorwf	(___fladd@b+2)^0,w,c
 10375  002DDA  1038               	iorwf	(___fladd@b+3)^0,w,c
 10376  002DDC  A4D8               	btfss	status,2,c
 10377  002DDE  EFF3  F016         	goto	u4171
 10378  002DE2  EFF5  F016         	goto	u4170
 10379  002DE6                     u4171:
 10380  002DE6  EF2A  F017         	goto	l4085
 10381  002DEA                     u4170:
 10382  002DEA  5044               	movf	___fladd@grs^0,w,c
 10383  002DEC  A4D8               	btfss	status,2,c
 10384  002DEE  EFFB  F016         	goto	u4181
 10385  002DF2  EFFD  F016         	goto	u4180
 10386  002DF6                     u4181:
 10387  002DF6  EF2A  F017         	goto	l4085
 10388  002DFA                     u4180:
 10389  002DFA  0E00               	movlw	0
 10390  002DFC  6E35               	movwf	?___fladd^0,c
 10391  002DFE  0E00               	movlw	0
 10392  002E00  6E36               	movwf	(?___fladd+1)^0,c
 10393  002E02  0E00               	movlw	0
 10394  002E04  6E37               	movwf	(?___fladd+2)^0,c
 10395  002E06  0E00               	movlw	0
 10396  002E08  6E38               	movwf	(?___fladd+3)^0,c
 10397  002E0A  EFC5  F017         	goto	l1025
 10398  002E0E                     l4069:
 10399  002E0E  90D8               	bcf	status,0,c
 10400  002E10  3635               	rlcf	___fladd@b^0,f,c
 10401  002E12  3636               	rlcf	(___fladd@b+1)^0,f,c
 10402  002E14  3637               	rlcf	(___fladd@b+2)^0,f,c
 10403  002E16  3638               	rlcf	(___fladd@b+3)^0,f,c
 10404  002E18  AE44               	btfss	___fladd@grs^0,7,c
 10405  002E1A  EF11  F017         	goto	u4191
 10406  002E1E  EF13  F017         	goto	u4190
 10407  002E22                     u4191:
 10408  002E22  EF14  F017         	goto	l4075
 10409  002E26                     u4190:
 10410  002E26  8035               	bsf	___fladd@b^0,0,c
 10411  002E28                     l4075:
 10412  002E28  A044               	btfss	___fladd@grs^0,0,c
 10413  002E2A  EF19  F017         	goto	u4201
 10414  002E2E  EF1B  F017         	goto	u4200
 10415  002E32                     u4201:
 10416  002E32  EF1F  F017         	goto	l4079
 10417  002E36                     u4200:
 10418  002E36  80D8               	bsf	status,0,c
 10419  002E38  3644               	rlcf	___fladd@grs^0,f,c
 10420  002E3A  EF21  F017         	goto	l4081
 10421  002E3E                     l4079:
 10422  002E3E  90D8               	bcf	status,0,c
 10423  002E40  3644               	rlcf	___fladd@grs^0,f,c
 10424  002E42                     l4081:
 10425  002E42  5043               	movf	___fladd@bexp^0,w,c
 10426  002E44  B4D8               	btfsc	status,2,c
 10427  002E46  EF27  F017         	goto	u4211
 10428  002E4A  EF29  F017         	goto	u4210
 10429  002E4E                     u4211:
 10430  002E4E  EF2A  F017         	goto	l4085
 10431  002E52                     u4210:
 10432  002E52  0643               	decf	___fladd@bexp^0,f,c
 10433  002E54                     l4085:
 10434  002E54  AE37               	btfss	(___fladd@b+2)^0,7,c
 10435  002E56  EF2F  F017         	goto	u4221
 10436  002E5A  EF31  F017         	goto	u4220
 10437  002E5E                     u4221:
 10438  002E5E  EF07  F017         	goto	l4069
 10439  002E62                     u4220:
 10440  002E62                     l4087:
 10441  002E62  0E00               	movlw	0
 10442  002E64  6E42               	movwf	___fladd@aexp^0,c
 10443  002E66  AE44               	btfss	___fladd@grs^0,7,c
 10444  002E68  EF38  F017         	goto	u4231
 10445  002E6C  EF3A  F017         	goto	u4230
 10446  002E70                     u4231:
 10447  002E70  EF52  F017         	goto	l1042
 10448  002E74                     u4230:
 10449  002E74  C044  F03D         	movff	___fladd@grs,??___fladd
 10450  002E78  0E7F               	movlw	127
 10451  002E7A  163D               	andwf	??___fladd^0,f,c
 10452  002E7C  B4D8               	btfsc	status,2,c
 10453  002E7E  EF43  F017         	goto	u4241
 10454  002E82  EF45  F017         	goto	u4240
 10455  002E86                     u4241:
 10456  002E86  EF49  F017         	goto	l1043
 10457  002E8A                     u4240:
 10458  002E8A                     l4093:
 10459  002E8A  0E01               	movlw	1
 10460  002E8C  6E42               	movwf	___fladd@aexp^0,c
 10461  002E8E  EF52  F017         	goto	l1042
 10462  002E92                     l1043:
 10463  002E92  A035               	btfss	___fladd@b^0,0,c
 10464  002E94  EF4E  F017         	goto	u4251
 10465  002E98  EF50  F017         	goto	u4250
 10466  002E9C                     u4251:
 10467  002E9C  EF52  F017         	goto	l1042
 10468  002EA0                     u4250:
 10469  002EA0  EF45  F017         	goto	l4093
 10470  002EA4                     l1042:
 10471  002EA4  5042               	movf	___fladd@aexp^0,w,c
 10472  002EA6  B4D8               	btfsc	status,2,c
 10473  002EA8  EF58  F017         	goto	u4261
 10474  002EAC  EF5A  F017         	goto	u4260
 10475  002EB0                     u4261:
 10476  002EB0  EF85  F017         	goto	l4105
 10477  002EB4                     u4260:
 10478  002EB4  0E01               	movlw	1
 10479  002EB6  2635               	addwf	___fladd@b^0,f,c
 10480  002EB8  0E00               	movlw	0
 10481  002EBA  2236               	addwfc	(___fladd@b+1)^0,f,c
 10482  002EBC  2237               	addwfc	(___fladd@b+2)^0,f,c
 10483  002EBE  2238               	addwfc	(___fladd@b+3)^0,f,c
 10484  002EC0  A038               	btfss	(___fladd@b+3)^0,0,c
 10485  002EC2  EF65  F017         	goto	u4271
 10486  002EC6  EF67  F017         	goto	u4270
 10487  002ECA                     u4271:
 10488  002ECA  EF85  F017         	goto	l4105
 10489  002ECE                     u4270:
 10490  002ECE  C035  F03D         	movff	___fladd@b,??___fladd
 10491  002ED2  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10492  002ED6  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10493  002EDA  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10494  002EDE  3440               	rlcf	(??___fladd+3)^0,w,c
 10495  002EE0  3240               	rrcf	(??___fladd+3)^0,f,c
 10496  002EE2  323F               	rrcf	(??___fladd+2)^0,f,c
 10497  002EE4  323E               	rrcf	(??___fladd+1)^0,f,c
 10498  002EE6  323D               	rrcf	??___fladd^0,f,c
 10499  002EE8  C03D  F035         	movff	??___fladd,___fladd@b
 10500  002EEC  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10501  002EF0  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10502  002EF4  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10503  002EF8  2843               	incf	___fladd@bexp^0,w,c
 10504  002EFA  B4D8               	btfsc	status,2,c
 10505  002EFC  EF82  F017         	goto	u4281
 10506  002F00  EF84  F017         	goto	u4280
 10507  002F04                     u4281:
 10508  002F04  EF85  F017         	goto	l4105
 10509  002F08                     u4280:
 10510  002F08  2A43               	incf	___fladd@bexp^0,f,c
 10511  002F0A                     l4105:
 10512  002F0A  2843               	incf	___fladd@bexp^0,w,c
 10513  002F0C  B4D8               	btfsc	status,2,c
 10514  002F0E  EF8B  F017         	goto	u4291
 10515  002F12  EF8D  F017         	goto	u4290
 10516  002F16                     u4291:
 10517  002F16  EF95  F017         	goto	l4109
 10518  002F1A                     u4290:
 10519  002F1A  5043               	movf	___fladd@bexp^0,w,c
 10520  002F1C  A4D8               	btfss	status,2,c
 10521  002F1E  EF93  F017         	goto	u4301
 10522  002F22  EF95  F017         	goto	u4300
 10523  002F26                     u4301:
 10524  002F26  EFA7  F017         	goto	l4113
 10525  002F2A                     u4300:
 10526  002F2A                     l4109:
 10527  002F2A  0E00               	movlw	0
 10528  002F2C  6E35               	movwf	___fladd@b^0,c
 10529  002F2E  0E00               	movlw	0
 10530  002F30  6E36               	movwf	(___fladd@b+1)^0,c
 10531  002F32  0E00               	movlw	0
 10532  002F34  6E37               	movwf	(___fladd@b+2)^0,c
 10533  002F36  0E00               	movlw	0
 10534  002F38  6E38               	movwf	(___fladd@b+3)^0,c
 10535  002F3A  5043               	movf	___fladd@bexp^0,w,c
 10536  002F3C  A4D8               	btfss	status,2,c
 10537  002F3E  EFA3  F017         	goto	u4311
 10538  002F42  EFA5  F017         	goto	u4310
 10539  002F46                     u4311:
 10540  002F46  EFA7  F017         	goto	l4113
 10541  002F4A                     u4310:
 10542  002F4A  0E00               	movlw	0
 10543  002F4C  6E41               	movwf	___fladd@signs^0,c
 10544  002F4E                     l4113:
 10545  002F4E  A043               	btfss	___fladd@bexp^0,0,c
 10546  002F50  EFAC  F017         	goto	u4321
 10547  002F54  EFAE  F017         	goto	u4320
 10548  002F58                     u4321:
 10549  002F58  EFB1  F017         	goto	l4117
 10550  002F5C                     u4320:
 10551  002F5C  8E37               	bsf	(___fladd@b+2)^0,7,c
 10552  002F5E  EFB2  F017         	goto	l4119
 10553  002F62                     l4117:
 10554  002F62  9E37               	bcf	(___fladd@b+2)^0,7,c
 10555  002F64                     l4119:
 10556  002F64  90D8               	bcf	status,0,c
 10557  002F66  3043               	rrcf	___fladd@bexp^0,w,c
 10558  002F68  6E38               	movwf	(___fladd@b+3)^0,c
 10559  002F6A  AE41               	btfss	___fladd@signs^0,7,c
 10560  002F6C  EFBA  F017         	goto	u4331
 10561  002F70  EFBC  F017         	goto	u4330
 10562  002F74                     u4331:
 10563  002F74  EFBD  F017         	goto	l4125
 10564  002F78                     u4330:
 10565  002F78  8E38               	bsf	(___fladd@b+3)^0,7,c
 10566  002F7A                     l4125:
 10567  002F7A  C035  F035         	movff	___fladd@b,?___fladd
 10568  002F7E  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10569  002F82  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10570  002F86  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10571  002F8A                     l1025:
 10572  002F8A  0012               	return		;funcret
 10573  002F8C                     __end_of___fladd:
 10574                           	callstack 0
 10575                           
 10576 ;; *************** function ___flneg *****************
 10577 ;; Defined at:
 10578 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10579 ;; Parameters:    Size  Location     Type
 10580 ;;  f1              4    0[COMRAM] unsigned char 
 10581 ;; Auto vars:     Size  Location     Type
 10582 ;;		None
 10583 ;; Return value:  Size  Location     Type
 10584 ;;                  4    0[COMRAM] unsigned char 
 10585 ;; Registers used:
 10586 ;;		wreg, status,2, status,0
 10587 ;; Tracked objects:
 10588 ;;		On entry : 0/0
 10589 ;;		On exit  : 0/0
 10590 ;;		Unchanged: 0/0
 10591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10592 ;;      Params:         4       0       0       0       0       0       0
 10593 ;;      Locals:         0       0       0       0       0       0       0
 10594 ;;      Temps:          0       0       0       0       0       0       0
 10595 ;;      Totals:         4       0       0       0       0       0       0
 10596 ;;Total ram usage:        4 bytes
 10597 ;; Hardware stack levels used:    1
 10598 ;; Hardware stack levels required when called:    1
 10599 ;; This function calls:
 10600 ;;		Nothing
 10601 ;; This function is called by:
 10602 ;;		_efgtoa
 10603 ;; This function uses a non-reentrant model
 10604 ;;
 10605                           
 10606                           	psect	text32
 10607  005A6C                     __ptext32:
 10608                           	callstack 0
 10609  005A6C                     ___flneg:
 10610                           	callstack 23
 10611  005A6C  5001               	movf	___flneg@f1^0,w,c
 10612  005A6E  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10613  005A70  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10614  005A72  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10615  005A74  B4D8               	btfsc	status,2,c
 10616  005A76  EF3F  F02D         	goto	u5131
 10617  005A7A  EF41  F02D         	goto	u5130
 10618  005A7E                     u5131:
 10619  005A7E  EF49  F02D         	goto	l4633
 10620  005A82                     u5130:
 10621  005A82  0E00               	movlw	0
 10622  005A84  1A01               	xorwf	___flneg@f1^0,f,c
 10623  005A86  0E00               	movlw	0
 10624  005A88  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10625  005A8A  0E00               	movlw	0
 10626  005A8C  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10627  005A8E  0E80               	movlw	128
 10628  005A90  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10629  005A92                     l4633:
 10630  005A92  C001  F001         	movff	___flneg@f1,?___flneg
 10631  005A96  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10632  005A9A  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10633  005A9E  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10634  005AA2  0012               	return		;funcret
 10635  005AA4                     __end_of___flneg:
 10636                           	callstack 0
 10637                           
 10638 ;; *************** function ___flmul *****************
 10639 ;; Defined at:
 10640 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10641 ;; Parameters:    Size  Location     Type
 10642 ;;  b               4   27[COMRAM] unsigned char 
 10643 ;;  a               4   31[COMRAM] unsigned char 
 10644 ;; Auto vars:     Size  Location     Type
 10645 ;;  prod            4   46[COMRAM] struct .
 10646 ;;  grs             4   40[COMRAM] unsigned long 
 10647 ;;  temp            2   50[COMRAM] struct .
 10648 ;;  bexp            1   45[COMRAM] unsigned char 
 10649 ;;  aexp            1   44[COMRAM] unsigned char 
 10650 ;;  sign            1   39[COMRAM] unsigned char 
 10651 ;; Return value:  Size  Location     Type
 10652 ;;                  4   27[COMRAM] unsigned char 
 10653 ;; Registers used:
 10654 ;;		wreg, status,2, status,0, prodl, prodh
 10655 ;; Tracked objects:
 10656 ;;		On entry : 0/0
 10657 ;;		On exit  : 0/0
 10658 ;;		Unchanged: 0/0
 10659 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10660 ;;      Params:         8       0       0       0       0       0       0
 10661 ;;      Locals:        13       0       0       0       0       0       0
 10662 ;;      Temps:          4       0       0       0       0       0       0
 10663 ;;      Totals:        25       0       0       0       0       0       0
 10664 ;;Total ram usage:       25 bytes
 10665 ;; Hardware stack levels used:    1
 10666 ;; Hardware stack levels required when called:    1
 10667 ;; This function calls:
 10668 ;;		Nothing
 10669 ;; This function is called by:
 10670 ;;		_scanAdcConversion
 10671 ;;		_speedControl
 10672 ;;		_efgtoa
 10673 ;; This function uses a non-reentrant model
 10674 ;;
 10675                           
 10676                           	psect	text33
 10677  002F8C                     __ptext33:
 10678                           	callstack 0
 10679  002F8C                     ___flmul:
 10680                           	callstack 25
 10681  002F8C  501F               	movf	(___flmul@b+3)^0,w,c
 10682  002F8E  0B80               	andlw	128
 10683  002F90  6E28               	movwf	___flmul@sign^0,c
 10684  002F92  501F               	movf	(___flmul@b+3)^0,w,c
 10685  002F94  241F               	addwf	(___flmul@b+3)^0,w,c
 10686  002F96  6E2E               	movwf	___flmul@bexp^0,c
 10687  002F98  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10688  002F9A  EFD1  F017         	goto	u4741
 10689  002F9E  EFD3  F017         	goto	u4740
 10690  002FA2                     u4741:
 10691  002FA2  EFD4  F017         	goto	l4381
 10692  002FA6                     u4740:
 10693  002FA6  802E               	bsf	___flmul@bexp^0,0,c
 10694  002FA8                     l4381:
 10695  002FA8  502E               	movf	___flmul@bexp^0,w,c
 10696  002FAA  B4D8               	btfsc	status,2,c
 10697  002FAC  EFDA  F017         	goto	u4751
 10698  002FB0  EFDC  F017         	goto	u4750
 10699  002FB4                     u4751:
 10700  002FB4  EFEF  F017         	goto	l4389
 10701  002FB8                     u4750:
 10702  002FB8  282E               	incf	___flmul@bexp^0,w,c
 10703  002FBA  A4D8               	btfss	status,2,c
 10704  002FBC  EFE2  F017         	goto	u4761
 10705  002FC0  EFE4  F017         	goto	u4760
 10706  002FC4                     u4761:
 10707  002FC4  EFEC  F017         	goto	l4387
 10708  002FC8                     u4760:
 10709  002FC8  0E00               	movlw	0
 10710  002FCA  6E1C               	movwf	___flmul@b^0,c
 10711  002FCC  0E00               	movlw	0
 10712  002FCE  6E1D               	movwf	(___flmul@b+1)^0,c
 10713  002FD0  0E00               	movlw	0
 10714  002FD2  6E1E               	movwf	(___flmul@b+2)^0,c
 10715  002FD4  0E00               	movlw	0
 10716  002FD6  6E1F               	movwf	(___flmul@b+3)^0,c
 10717  002FD8                     l4387:
 10718  002FD8  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10719  002FDA  EFF7  F017         	goto	l4391
 10720  002FDE                     l4389:
 10721  002FDE  0E00               	movlw	0
 10722  002FE0  6E1C               	movwf	___flmul@b^0,c
 10723  002FE2  0E00               	movlw	0
 10724  002FE4  6E1D               	movwf	(___flmul@b+1)^0,c
 10725  002FE6  0E00               	movlw	0
 10726  002FE8  6E1E               	movwf	(___flmul@b+2)^0,c
 10727  002FEA  0E00               	movlw	0
 10728  002FEC  6E1F               	movwf	(___flmul@b+3)^0,c
 10729  002FEE                     l4391:
 10730  002FEE  5023               	movf	(___flmul@a+3)^0,w,c
 10731  002FF0  0B80               	andlw	128
 10732  002FF2  1A28               	xorwf	___flmul@sign^0,f,c
 10733  002FF4  5023               	movf	(___flmul@a+3)^0,w,c
 10734  002FF6  2423               	addwf	(___flmul@a+3)^0,w,c
 10735  002FF8  6E2D               	movwf	___flmul@aexp^0,c
 10736  002FFA  AE22               	btfss	(___flmul@a+2)^0,7,c
 10737  002FFC  EF02  F018         	goto	u4771
 10738  003000  EF04  F018         	goto	u4770
 10739  003004                     u4771:
 10740  003004  EF05  F018         	goto	l4399
 10741  003008                     u4770:
 10742  003008  802D               	bsf	___flmul@aexp^0,0,c
 10743  00300A                     l4399:
 10744  00300A  502D               	movf	___flmul@aexp^0,w,c
 10745  00300C  B4D8               	btfsc	status,2,c
 10746  00300E  EF0B  F018         	goto	u4781
 10747  003012  EF0D  F018         	goto	u4780
 10748  003016                     u4781:
 10749  003016  EF20  F018         	goto	l4407
 10750  00301A                     u4780:
 10751  00301A  282D               	incf	___flmul@aexp^0,w,c
 10752  00301C  A4D8               	btfss	status,2,c
 10753  00301E  EF13  F018         	goto	u4791
 10754  003022  EF15  F018         	goto	u4790
 10755  003026                     u4791:
 10756  003026  EF1D  F018         	goto	l4405
 10757  00302A                     u4790:
 10758  00302A  0E00               	movlw	0
 10759  00302C  6E20               	movwf	___flmul@a^0,c
 10760  00302E  0E00               	movlw	0
 10761  003030  6E21               	movwf	(___flmul@a+1)^0,c
 10762  003032  0E00               	movlw	0
 10763  003034  6E22               	movwf	(___flmul@a+2)^0,c
 10764  003036  0E00               	movlw	0
 10765  003038  6E23               	movwf	(___flmul@a+3)^0,c
 10766  00303A                     l4405:
 10767  00303A  8E22               	bsf	(___flmul@a+2)^0,7,c
 10768  00303C  EF28  F018         	goto	l1102
 10769  003040                     l4407:
 10770  003040  0E00               	movlw	0
 10771  003042  6E20               	movwf	___flmul@a^0,c
 10772  003044  0E00               	movlw	0
 10773  003046  6E21               	movwf	(___flmul@a+1)^0,c
 10774  003048  0E00               	movlw	0
 10775  00304A  6E22               	movwf	(___flmul@a+2)^0,c
 10776  00304C  0E00               	movlw	0
 10777  00304E  6E23               	movwf	(___flmul@a+3)^0,c
 10778  003050                     l1102:
 10779  003050  502D               	movf	___flmul@aexp^0,w,c
 10780  003052  B4D8               	btfsc	status,2,c
 10781  003054  EF2E  F018         	goto	u4801
 10782  003058  EF30  F018         	goto	u4800
 10783  00305C                     u4801:
 10784  00305C  EF38  F018         	goto	l4411
 10785  003060                     u4800:
 10786  003060  502E               	movf	___flmul@bexp^0,w,c
 10787  003062  A4D8               	btfss	status,2,c
 10788  003064  EF36  F018         	goto	u4811
 10789  003068  EF38  F018         	goto	u4810
 10790  00306C                     u4811:
 10791  00306C  EF42  F018         	goto	l4415
 10792  003070                     u4810:
 10793  003070                     l4411:
 10794  003070  0E00               	movlw	0
 10795  003072  6E1C               	movwf	?___flmul^0,c
 10796  003074  0E00               	movlw	0
 10797  003076  6E1D               	movwf	(?___flmul+1)^0,c
 10798  003078  0E00               	movlw	0
 10799  00307A  6E1E               	movwf	(?___flmul+2)^0,c
 10800  00307C  0E00               	movlw	0
 10801  00307E  6E1F               	movwf	(?___flmul+3)^0,c
 10802  003080  EFDA  F019         	goto	l1106
 10803  003084                     l4415:
 10804  003084  5022               	movf	(___flmul@a+2)^0,w,c
 10805  003086  021C               	mulwf	___flmul@b^0,c
 10806  003088  CFF3 F033          	movff	prodl,___flmul@temp
 10807  00308C  CFF4 F034          	movff	prodh,___flmul@temp+1
 10808  003090  5033               	movf	___flmul@temp^0,w,c
 10809  003092  6E29               	movwf	___flmul@grs^0,c
 10810  003094  6A2A               	clrf	(___flmul@grs+1)^0,c
 10811  003096  6A2B               	clrf	(___flmul@grs+2)^0,c
 10812  003098  6A2C               	clrf	(___flmul@grs+3)^0,c
 10813  00309A  5034               	movf	(___flmul@temp+1)^0,w,c
 10814  00309C  6E2F               	movwf	___flmul@prod^0,c
 10815  00309E  6A30               	clrf	(___flmul@prod+1)^0,c
 10816  0030A0  6A31               	clrf	(___flmul@prod+2)^0,c
 10817  0030A2  6A32               	clrf	(___flmul@prod+3)^0,c
 10818  0030A4  5021               	movf	(___flmul@a+1)^0,w,c
 10819  0030A6  021D               	mulwf	(___flmul@b+1)^0,c
 10820  0030A8  CFF3 F033          	movff	prodl,___flmul@temp
 10821  0030AC  CFF4 F034          	movff	prodh,___flmul@temp+1
 10822  0030B0  5033               	movf	___flmul@temp^0,w,c
 10823  0030B2  2629               	addwf	___flmul@grs^0,f,c
 10824  0030B4  0E00               	movlw	0
 10825  0030B6  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10826  0030B8  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10827  0030BA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10828  0030BC  5034               	movf	(___flmul@temp+1)^0,w,c
 10829  0030BE  262F               	addwf	___flmul@prod^0,f,c
 10830  0030C0  0E00               	movlw	0
 10831  0030C2  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10832  0030C4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10833  0030C6  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10834  0030C8  5020               	movf	___flmul@a^0,w,c
 10835  0030CA  021E               	mulwf	(___flmul@b+2)^0,c
 10836  0030CC  CFF3 F033          	movff	prodl,___flmul@temp
 10837  0030D0  CFF4 F034          	movff	prodh,___flmul@temp+1
 10838  0030D4  5033               	movf	___flmul@temp^0,w,c
 10839  0030D6  2629               	addwf	___flmul@grs^0,f,c
 10840  0030D8  0E00               	movlw	0
 10841  0030DA  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10842  0030DC  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10843  0030DE  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10844  0030E0  5034               	movf	(___flmul@temp+1)^0,w,c
 10845  0030E2  262F               	addwf	___flmul@prod^0,f,c
 10846  0030E4  0E00               	movlw	0
 10847  0030E6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10848  0030E8  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10849  0030EA  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10850  0030EC  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10851  0030F0  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10852  0030F4  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10853  0030F8  6A29               	clrf	___flmul@grs^0,c
 10854  0030FA  5020               	movf	___flmul@a^0,w,c
 10855  0030FC  021D               	mulwf	(___flmul@b+1)^0,c
 10856  0030FE  CFF3 F033          	movff	prodl,___flmul@temp
 10857  003102  CFF4 F034          	movff	prodh,___flmul@temp+1
 10858  003106  5033               	movf	___flmul@temp^0,w,c
 10859  003108  2629               	addwf	___flmul@grs^0,f,c
 10860  00310A  5034               	movf	(___flmul@temp+1)^0,w,c
 10861  00310C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10862  00310E  0E00               	movlw	0
 10863  003110  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10864  003112  0E00               	movlw	0
 10865  003114  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10866  003116  5021               	movf	(___flmul@a+1)^0,w,c
 10867  003118  021C               	mulwf	___flmul@b^0,c
 10868  00311A  CFF3 F033          	movff	prodl,___flmul@temp
 10869  00311E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10870  003122  5033               	movf	___flmul@temp^0,w,c
 10871  003124  2629               	addwf	___flmul@grs^0,f,c
 10872  003126  5034               	movf	(___flmul@temp+1)^0,w,c
 10873  003128  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10874  00312A  0E00               	movlw	0
 10875  00312C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10876  00312E  0E00               	movlw	0
 10877  003130  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10878  003132  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10879  003136  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10880  00313A  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10881  00313E  6A29               	clrf	___flmul@grs^0,c
 10882  003140  5020               	movf	___flmul@a^0,w,c
 10883  003142  021C               	mulwf	___flmul@b^0,c
 10884  003144  CFF3 F033          	movff	prodl,___flmul@temp
 10885  003148  CFF4 F034          	movff	prodh,___flmul@temp+1
 10886  00314C  5033               	movf	___flmul@temp^0,w,c
 10887  00314E  2629               	addwf	___flmul@grs^0,f,c
 10888  003150  5034               	movf	(___flmul@temp+1)^0,w,c
 10889  003152  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10890  003154  0E00               	movlw	0
 10891  003156  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10892  003158  0E00               	movlw	0
 10893  00315A  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10894  00315C  5022               	movf	(___flmul@a+2)^0,w,c
 10895  00315E  021D               	mulwf	(___flmul@b+1)^0,c
 10896  003160  CFF3 F033          	movff	prodl,___flmul@temp
 10897  003164  CFF4 F034          	movff	prodh,___flmul@temp+1
 10898  003168  5033               	movf	___flmul@temp^0,w,c
 10899  00316A  262F               	addwf	___flmul@prod^0,f,c
 10900  00316C  5034               	movf	(___flmul@temp+1)^0,w,c
 10901  00316E  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10902  003170  0E00               	movlw	0
 10903  003172  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10904  003174  0E00               	movlw	0
 10905  003176  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10906  003178  5021               	movf	(___flmul@a+1)^0,w,c
 10907  00317A  021E               	mulwf	(___flmul@b+2)^0,c
 10908  00317C  CFF3 F033          	movff	prodl,___flmul@temp
 10909  003180  CFF4 F034          	movff	prodh,___flmul@temp+1
 10910  003184  5033               	movf	___flmul@temp^0,w,c
 10911  003186  262F               	addwf	___flmul@prod^0,f,c
 10912  003188  5034               	movf	(___flmul@temp+1)^0,w,c
 10913  00318A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10914  00318C  0E00               	movlw	0
 10915  00318E  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10916  003190  0E00               	movlw	0
 10917  003192  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10918  003194  5022               	movf	(___flmul@a+2)^0,w,c
 10919  003196  021E               	mulwf	(___flmul@b+2)^0,c
 10920  003198  CFF3 F033          	movff	prodl,___flmul@temp
 10921  00319C  CFF4 F034          	movff	prodh,___flmul@temp+1
 10922  0031A0  5033               	movf	___flmul@temp^0,w,c
 10923  0031A2  6E24               	movwf	??___flmul^0,c
 10924  0031A4  5034               	movf	(___flmul@temp+1)^0,w,c
 10925  0031A6  6E25               	movwf	(??___flmul+1)^0,c
 10926  0031A8  6A26               	clrf	(??___flmul+2)^0,c
 10927  0031AA  6A27               	clrf	(??___flmul+3)^0,c
 10928  0031AC  C026  F027         	movff	??___flmul+2,??___flmul+3
 10929  0031B0  C025  F026         	movff	??___flmul+1,??___flmul+2
 10930  0031B4  C024  F025         	movff	??___flmul,??___flmul+1
 10931  0031B8  6A24               	clrf	??___flmul^0,c
 10932  0031BA  5024               	movf	??___flmul^0,w,c
 10933  0031BC  262F               	addwf	___flmul@prod^0,f,c
 10934  0031BE  5025               	movf	(??___flmul+1)^0,w,c
 10935  0031C0  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10936  0031C2  5026               	movf	(??___flmul+2)^0,w,c
 10937  0031C4  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10938  0031C6  5027               	movf	(??___flmul+3)^0,w,c
 10939  0031C8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10940  0031CA  C029  F024         	movff	___flmul@grs,??___flmul
 10941  0031CE  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 10942  0031D2  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 10943  0031D6  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 10944  0031DA  0E19               	movlw	25
 10945  0031DC  EFF5  F018         	goto	u4820
 10946  0031E0                     u4825:
 10947  0031E0  90D8               	bcf	status,0,c
 10948  0031E2  3227               	rrcf	(??___flmul+3)^0,f,c
 10949  0031E4  3226               	rrcf	(??___flmul+2)^0,f,c
 10950  0031E6  3225               	rrcf	(??___flmul+1)^0,f,c
 10951  0031E8  3224               	rrcf	??___flmul^0,f,c
 10952  0031EA                     u4820:
 10953  0031EA  2EE8               	decfsz	wreg,f,c
 10954  0031EC  EFF0  F018         	goto	u4825
 10955  0031F0  5024               	movf	??___flmul^0,w,c
 10956  0031F2  262F               	addwf	___flmul@prod^0,f,c
 10957  0031F4  5025               	movf	(??___flmul+1)^0,w,c
 10958  0031F6  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10959  0031F8  5026               	movf	(??___flmul+2)^0,w,c
 10960  0031FA  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10961  0031FC  5027               	movf	(??___flmul+3)^0,w,c
 10962  0031FE  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10963  003200  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10964  003204  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10965  003208  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10966  00320C  6A29               	clrf	___flmul@grs^0,c
 10967  00320E  502D               	movf	___flmul@aexp^0,w,c
 10968  003210  C02E  F024         	movff	___flmul@bexp,??___flmul
 10969  003214  6A25               	clrf	(??___flmul+1)^0,c
 10970  003216  2624               	addwf	??___flmul^0,f,c
 10971  003218  0E00               	movlw	0
 10972  00321A  2225               	addwfc	(??___flmul+1)^0,f,c
 10973  00321C  0E82               	movlw	130
 10974  00321E  2424               	addwf	??___flmul^0,w,c
 10975  003220  6E33               	movwf	___flmul@temp^0,c
 10976  003222  0EFF               	movlw	255
 10977  003224  2025               	addwfc	(??___flmul+1)^0,w,c
 10978  003226  6E34               	movwf	(___flmul@temp+1)^0,c
 10979  003228  EF2B  F019         	goto	l4463
 10980  00322C                     l4457:
 10981  00322C  90D8               	bcf	status,0,c
 10982  00322E  362F               	rlcf	___flmul@prod^0,f,c
 10983  003230  3630               	rlcf	(___flmul@prod+1)^0,f,c
 10984  003232  3631               	rlcf	(___flmul@prod+2)^0,f,c
 10985  003234  3632               	rlcf	(___flmul@prod+3)^0,f,c
 10986  003236  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 10987  003238  EF20  F019         	goto	u4831
 10988  00323C  EF22  F019         	goto	u4830
 10989  003240                     u4831:
 10990  003240  EF23  F019         	goto	l1109
 10991  003244                     u4830:
 10992  003244  802F               	bsf	___flmul@prod^0,0,c
 10993  003246                     l1109:
 10994  003246  90D8               	bcf	status,0,c
 10995  003248  3629               	rlcf	___flmul@grs^0,f,c
 10996  00324A  362A               	rlcf	(___flmul@grs+1)^0,f,c
 10997  00324C  362B               	rlcf	(___flmul@grs+2)^0,f,c
 10998  00324E  362C               	rlcf	(___flmul@grs+3)^0,f,c
 10999  003250  0633               	decf	___flmul@temp^0,f,c
 11000  003252  A0D8               	btfss	status,0,c
 11001  003254  0634               	decf	(___flmul@temp+1)^0,f,c
 11002  003256                     l4463:
 11003  003256  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11004  003258  EF30  F019         	goto	u4841
 11005  00325C  EF32  F019         	goto	u4840
 11006  003260                     u4841:
 11007  003260  EF16  F019         	goto	l4457
 11008  003264                     u4840:
 11009  003264  0E00               	movlw	0
 11010  003266  6E2D               	movwf	___flmul@aexp^0,c
 11011  003268  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11012  00326A  EF39  F019         	goto	u4851
 11013  00326E  EF3B  F019         	goto	u4850
 11014  003272                     u4851:
 11015  003272  EF5F  F019         	goto	l1111
 11016  003276                     u4850:
 11017  003276  0EFF               	movlw	255
 11018  003278  1429               	andwf	___flmul@grs^0,w,c
 11019  00327A  6E24               	movwf	??___flmul^0,c
 11020  00327C  0EFF               	movlw	255
 11021  00327E  142A               	andwf	(___flmul@grs+1)^0,w,c
 11022  003280  6E25               	movwf	(??___flmul+1)^0,c
 11023  003282  0EFF               	movlw	255
 11024  003284  142B               	andwf	(___flmul@grs+2)^0,w,c
 11025  003286  6E26               	movwf	(??___flmul+2)^0,c
 11026  003288  0E7F               	movlw	127
 11027  00328A  142C               	andwf	(___flmul@grs+3)^0,w,c
 11028  00328C  6E27               	movwf	(??___flmul+3)^0,c
 11029  00328E  5024               	movf	??___flmul^0,w,c
 11030  003290  1025               	iorwf	(??___flmul+1)^0,w,c
 11031  003292  1026               	iorwf	(??___flmul+2)^0,w,c
 11032  003294  1027               	iorwf	(??___flmul+3)^0,w,c
 11033  003296  B4D8               	btfsc	status,2,c
 11034  003298  EF50  F019         	goto	u4861
 11035  00329C  EF52  F019         	goto	u4860
 11036  0032A0                     u4861:
 11037  0032A0  EF56  F019         	goto	l1112
 11038  0032A4                     u4860:
 11039  0032A4                     l4471:
 11040  0032A4  0E01               	movlw	1
 11041  0032A6  6E2D               	movwf	___flmul@aexp^0,c
 11042  0032A8  EF5F  F019         	goto	l1111
 11043  0032AC                     l1112:
 11044  0032AC  A02F               	btfss	___flmul@prod^0,0,c
 11045  0032AE  EF5B  F019         	goto	u4871
 11046  0032B2  EF5D  F019         	goto	u4870
 11047  0032B6                     u4871:
 11048  0032B6  EF5F  F019         	goto	l1111
 11049  0032BA                     u4870:
 11050  0032BA  EF52  F019         	goto	l4471
 11051  0032BE                     l1111:
 11052  0032BE  502D               	movf	___flmul@aexp^0,w,c
 11053  0032C0  B4D8               	btfsc	status,2,c
 11054  0032C2  EF65  F019         	goto	u4881
 11055  0032C6  EF67  F019         	goto	u4880
 11056  0032CA                     u4881:
 11057  0032CA  EF8B  F019         	goto	l4483
 11058  0032CE                     u4880:
 11059  0032CE  0E01               	movlw	1
 11060  0032D0  262F               	addwf	___flmul@prod^0,f,c
 11061  0032D2  0E00               	movlw	0
 11062  0032D4  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11063  0032D6  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11064  0032D8  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11065  0032DA  A032               	btfss	(___flmul@prod+3)^0,0,c
 11066  0032DC  EF72  F019         	goto	u4891
 11067  0032E0  EF74  F019         	goto	u4890
 11068  0032E4                     u4891:
 11069  0032E4  EF8B  F019         	goto	l4483
 11070  0032E8                     u4890:
 11071  0032E8  C02F  F024         	movff	___flmul@prod,??___flmul
 11072  0032EC  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11073  0032F0  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11074  0032F4  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11075  0032F8  3427               	rlcf	(??___flmul+3)^0,w,c
 11076  0032FA  3227               	rrcf	(??___flmul+3)^0,f,c
 11077  0032FC  3226               	rrcf	(??___flmul+2)^0,f,c
 11078  0032FE  3225               	rrcf	(??___flmul+1)^0,f,c
 11079  003300  3224               	rrcf	??___flmul^0,f,c
 11080  003302  C024  F02F         	movff	??___flmul,___flmul@prod
 11081  003306  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11082  00330A  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11083  00330E  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11084  003312  4A33               	infsnz	___flmul@temp^0,f,c
 11085  003314  2A34               	incf	(___flmul@temp+1)^0,f,c
 11086  003316                     l4483:
 11087  003316  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11088  003318  EF96  F019         	goto	u4901
 11089  00331C  5034               	movf	(___flmul@temp+1)^0,w,c
 11090  00331E  E108               	bnz	u4900
 11091  003320  2833               	incf	___flmul@temp^0,w,c
 11092  003322  A0D8               	btfss	status,0,c
 11093  003324  EF96  F019         	goto	u4901
 11094  003328  EF98  F019         	goto	u4900
 11095  00332C                     u4901:
 11096  00332C  EFA2  F019         	goto	l4487
 11097  003330                     u4900:
 11098  003330  0E00               	movlw	0
 11099  003332  6E2F               	movwf	___flmul@prod^0,c
 11100  003334  0E00               	movlw	0
 11101  003336  6E30               	movwf	(___flmul@prod+1)^0,c
 11102  003338  0E80               	movlw	128
 11103  00333A  6E31               	movwf	(___flmul@prod+2)^0,c
 11104  00333C  0E7F               	movlw	127
 11105  00333E  6E32               	movwf	(___flmul@prod+3)^0,c
 11106  003340  EFD0  F019         	goto	l4499
 11107  003344                     l4487:
 11108  003344  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11109  003346  EFAF  F019         	goto	u4910
 11110  00334A  5034               	movf	(___flmul@temp+1)^0,w,c
 11111  00334C  E106               	bnz	u4911
 11112  00334E  0433               	decf	___flmul@temp^0,w,c
 11113  003350  B0D8               	btfsc	status,0,c
 11114  003352  EFAD  F019         	goto	u4911
 11115  003356  EFAF  F019         	goto	u4910
 11116  00335A                     u4911:
 11117  00335A  EFBB  F019         	goto	l1119
 11118  00335E                     u4910:
 11119  00335E  0E00               	movlw	0
 11120  003360  6E2F               	movwf	___flmul@prod^0,c
 11121  003362  0E00               	movlw	0
 11122  003364  6E30               	movwf	(___flmul@prod+1)^0,c
 11123  003366  0E00               	movlw	0
 11124  003368  6E31               	movwf	(___flmul@prod+2)^0,c
 11125  00336A  0E00               	movlw	0
 11126  00336C  6E32               	movwf	(___flmul@prod+3)^0,c
 11127  00336E  0E00               	movlw	0
 11128  003370  6E28               	movwf	___flmul@sign^0,c
 11129  003372  EFD0  F019         	goto	l4499
 11130  003376                     l1119:
 11131  003376  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11132  00337A  0EFF               	movlw	255
 11133  00337C  162F               	andwf	___flmul@prod^0,f,c
 11134  00337E  0EFF               	movlw	255
 11135  003380  1630               	andwf	(___flmul@prod+1)^0,f,c
 11136  003382  0E7F               	movlw	127
 11137  003384  1631               	andwf	(___flmul@prod+2)^0,f,c
 11138  003386  0E00               	movlw	0
 11139  003388  1632               	andwf	(___flmul@prod+3)^0,f,c
 11140  00338A  A02E               	btfss	___flmul@bexp^0,0,c
 11141  00338C  EFCA  F019         	goto	u4921
 11142  003390  EFCC  F019         	goto	u4920
 11143  003394                     u4921:
 11144  003394  EFCD  F019         	goto	l4497
 11145  003398                     u4920:
 11146  003398  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11147  00339A                     l4497:
 11148  00339A  90D8               	bcf	status,0,c
 11149  00339C  302E               	rrcf	___flmul@bexp^0,w,c
 11150  00339E  6E32               	movwf	(___flmul@prod+3)^0,c
 11151  0033A0                     l4499:
 11152  0033A0  5028               	movf	___flmul@sign^0,w,c
 11153  0033A2  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11154  0033A4  C02F  F01C         	movff	___flmul@prod,?___flmul
 11155  0033A8  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11156  0033AC  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11157  0033B0  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11158  0033B4                     l1106:
 11159  0033B4  0012               	return		;funcret
 11160  0033B6                     __end_of___flmul:
 11161                           	callstack 0
 11162                           
 11163 ;; *************** function ___flge *****************
 11164 ;; Defined at:
 11165 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11166 ;; Parameters:    Size  Location     Type
 11167 ;;  ff1             4   52[COMRAM] unsigned char 
 11168 ;;  ff2             4   56[COMRAM] unsigned char 
 11169 ;; Auto vars:     Size  Location     Type
 11170 ;;		None
 11171 ;; Return value:  Size  Location     Type
 11172 ;;		None               void
 11173 ;; Registers used:
 11174 ;;		wreg, status,2, status,0
 11175 ;; Tracked objects:
 11176 ;;		On entry : 0/0
 11177 ;;		On exit  : 0/0
 11178 ;;		Unchanged: 0/0
 11179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11180 ;;      Params:         8       0       0       0       0       0       0
 11181 ;;      Locals:         0       0       0       0       0       0       0
 11182 ;;      Temps:          4       0       0       0       0       0       0
 11183 ;;      Totals:        12       0       0       0       0       0       0
 11184 ;;Total ram usage:       12 bytes
 11185 ;; Hardware stack levels used:    1
 11186 ;; Hardware stack levels required when called:    1
 11187 ;; This function calls:
 11188 ;;		Nothing
 11189 ;; This function is called by:
 11190 ;;		_stateMachine
 11191 ;;		_efgtoa
 11192 ;; This function uses a non-reentrant model
 11193 ;;
 11194                           
 11195                           	psect	text34
 11196  004ACC                     __ptext34:
 11197                           	callstack 0
 11198  004ACC                     ___flge:
 11199                           	callstack 23
 11200  004ACC  0E00               	movlw	0
 11201  004ACE  1435               	andwf	___flge@ff1^0,w,c
 11202  004AD0  6E3D               	movwf	??___flge^0,c
 11203  004AD2  0E00               	movlw	0
 11204  004AD4  1436               	andwf	(___flge@ff1+1)^0,w,c
 11205  004AD6  6E3E               	movwf	(??___flge+1)^0,c
 11206  004AD8  0E80               	movlw	128
 11207  004ADA  1437               	andwf	(___flge@ff1+2)^0,w,c
 11208  004ADC  6E3F               	movwf	(??___flge+2)^0,c
 11209  004ADE  0E7F               	movlw	127
 11210  004AE0  1438               	andwf	(___flge@ff1+3)^0,w,c
 11211  004AE2  6E40               	movwf	(??___flge+3)^0,c
 11212  004AE4  503D               	movf	??___flge^0,w,c
 11213  004AE6  103E               	iorwf	(??___flge+1)^0,w,c
 11214  004AE8  103F               	iorwf	(??___flge+2)^0,w,c
 11215  004AEA  1040               	iorwf	(??___flge+3)^0,w,c
 11216  004AEC  A4D8               	btfss	status,2,c
 11217  004AEE  EF7B  F025         	goto	u5081
 11218  004AF2  EF7D  F025         	goto	u5080
 11219  004AF6                     u5081:
 11220  004AF6  EF85  F025         	goto	l4611
 11221  004AFA                     u5080:
 11222  004AFA  0E00               	movlw	0
 11223  004AFC  6E35               	movwf	___flge@ff1^0,c
 11224  004AFE  0E00               	movlw	0
 11225  004B00  6E36               	movwf	(___flge@ff1+1)^0,c
 11226  004B02  0E00               	movlw	0
 11227  004B04  6E37               	movwf	(___flge@ff1+2)^0,c
 11228  004B06  0E00               	movlw	0
 11229  004B08  6E38               	movwf	(___flge@ff1+3)^0,c
 11230  004B0A                     l4611:
 11231  004B0A  0E00               	movlw	0
 11232  004B0C  1439               	andwf	___flge@ff2^0,w,c
 11233  004B0E  6E3D               	movwf	??___flge^0,c
 11234  004B10  0E00               	movlw	0
 11235  004B12  143A               	andwf	(___flge@ff2+1)^0,w,c
 11236  004B14  6E3E               	movwf	(??___flge+1)^0,c
 11237  004B16  0E80               	movlw	128
 11238  004B18  143B               	andwf	(___flge@ff2+2)^0,w,c
 11239  004B1A  6E3F               	movwf	(??___flge+2)^0,c
 11240  004B1C  0E7F               	movlw	127
 11241  004B1E  143C               	andwf	(___flge@ff2+3)^0,w,c
 11242  004B20  6E40               	movwf	(??___flge+3)^0,c
 11243  004B22  503D               	movf	??___flge^0,w,c
 11244  004B24  103E               	iorwf	(??___flge+1)^0,w,c
 11245  004B26  103F               	iorwf	(??___flge+2)^0,w,c
 11246  004B28  1040               	iorwf	(??___flge+3)^0,w,c
 11247  004B2A  A4D8               	btfss	status,2,c
 11248  004B2C  EF9A  F025         	goto	u5091
 11249  004B30  EF9C  F025         	goto	u5090
 11250  004B34                     u5091:
 11251  004B34  EFA4  F025         	goto	l4615
 11252  004B38                     u5090:
 11253  004B38  0E00               	movlw	0
 11254  004B3A  6E39               	movwf	___flge@ff2^0,c
 11255  004B3C  0E00               	movlw	0
 11256  004B3E  6E3A               	movwf	(___flge@ff2+1)^0,c
 11257  004B40  0E00               	movlw	0
 11258  004B42  6E3B               	movwf	(___flge@ff2+2)^0,c
 11259  004B44  0E00               	movlw	0
 11260  004B46  6E3C               	movwf	(___flge@ff2+3)^0,c
 11261  004B48                     l4615:
 11262  004B48  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11263  004B4A  EFA9  F025         	goto	u5101
 11264  004B4E  EFAB  F025         	goto	u5100
 11265  004B52                     u5101:
 11266  004B52  EFB4  F025         	goto	l4619
 11267  004B56                     u5100:
 11268  004B56  6C35               	negf	___flge@ff1^0,c
 11269  004B58  1E36               	comf	(___flge@ff1+1)^0,f,c
 11270  004B5A  B0D8               	btfsc	status,0,c
 11271  004B5C  2A36               	incf	(___flge@ff1+1)^0,f,c
 11272  004B5E  1E37               	comf	(___flge@ff1+2)^0,f,c
 11273  004B60  B0D8               	btfsc	status,0,c
 11274  004B62  2A37               	incf	(___flge@ff1+2)^0,f,c
 11275  004B64  0E80               	movlw	128
 11276  004B66  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11277  004B68                     l4619:
 11278  004B68  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11279  004B6A  EFB9  F025         	goto	u5111
 11280  004B6E  EFBB  F025         	goto	u5110
 11281  004B72                     u5111:
 11282  004B72  EFC4  F025         	goto	l753
 11283  004B76                     u5110:
 11284  004B76  6C39               	negf	___flge@ff2^0,c
 11285  004B78  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11286  004B7A  B0D8               	btfsc	status,0,c
 11287  004B7C  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11288  004B7E  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11289  004B80  B0D8               	btfsc	status,0,c
 11290  004B82  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11291  004B84  0E80               	movlw	128
 11292  004B86  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11293  004B88                     l753:
 11294  004B88  0E00               	movlw	0
 11295  004B8A  1A35               	xorwf	___flge@ff1^0,f,c
 11296  004B8C  0E00               	movlw	0
 11297  004B8E  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11298  004B90  0E00               	movlw	0
 11299  004B92  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11300  004B94  0E80               	movlw	128
 11301  004B96  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11302  004B98  0E00               	movlw	0
 11303  004B9A  1A39               	xorwf	___flge@ff2^0,f,c
 11304  004B9C  0E00               	movlw	0
 11305  004B9E  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11306  004BA0  0E00               	movlw	0
 11307  004BA2  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11308  004BA4  0E80               	movlw	128
 11309  004BA6  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11310  004BA8  5039               	movf	___flge@ff2^0,w,c
 11311  004BAA  5C35               	subwf	___flge@ff1^0,w,c
 11312  004BAC  503A               	movf	(___flge@ff2+1)^0,w,c
 11313  004BAE  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11314  004BB0  503B               	movf	(___flge@ff2+2)^0,w,c
 11315  004BB2  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11316  004BB4  503C               	movf	(___flge@ff2+3)^0,w,c
 11317  004BB6  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11318  004BB8  B0D8               	btfsc	status,0,c
 11319  004BBA  EFE1  F025         	goto	u5121
 11320  004BBE  EFE3  F025         	goto	u5120
 11321  004BC2                     u5121:
 11322  004BC2  EFE6  F025         	goto	l4625
 11323  004BC6                     u5120:
 11324  004BC6  90D8               	bcf	status,0,c
 11325  004BC8  EFE7  F025         	goto	l758
 11326  004BCC                     l4625:
 11327  004BCC  80D8               	bsf	status,0,c
 11328  004BCE                     l758:
 11329  004BCE  0012               	return		;funcret
 11330  004BD0                     __end_of___flge:
 11331                           	callstack 0
 11332                           
 11333 ;; *************** function ___fleq *****************
 11334 ;; Defined at:
 11335 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11336 ;; Parameters:    Size  Location     Type
 11337 ;;  ff1             4    0[COMRAM] unsigned char 
 11338 ;;  ff2             4    4[COMRAM] unsigned char 
 11339 ;; Auto vars:     Size  Location     Type
 11340 ;;		None
 11341 ;; Return value:  Size  Location     Type
 11342 ;;		None               void
 11343 ;; Registers used:
 11344 ;;		wreg, status,2, status,0
 11345 ;; Tracked objects:
 11346 ;;		On entry : 0/0
 11347 ;;		On exit  : 0/0
 11348 ;;		Unchanged: 0/0
 11349 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11350 ;;      Params:         8       0       0       0       0       0       0
 11351 ;;      Locals:         0       0       0       0       0       0       0
 11352 ;;      Temps:          4       0       0       0       0       0       0
 11353 ;;      Totals:        12       0       0       0       0       0       0
 11354 ;;Total ram usage:       12 bytes
 11355 ;; Hardware stack levels used:    1
 11356 ;; Hardware stack levels required when called:    1
 11357 ;; This function calls:
 11358 ;;		Nothing
 11359 ;; This function is called by:
 11360 ;;		_efgtoa
 11361 ;; This function uses a non-reentrant model
 11362 ;;
 11363                           
 11364                           	psect	text35
 11365  0051A2                     __ptext35:
 11366                           	callstack 0
 11367  0051A2                     ___fleq:
 11368                           	callstack 23
 11369  0051A2  0E00               	movlw	0
 11370  0051A4  1401               	andwf	___fleq@ff1^0,w,c
 11371  0051A6  6E09               	movwf	??___fleq^0,c
 11372  0051A8  0E00               	movlw	0
 11373  0051AA  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11374  0051AC  6E0A               	movwf	(??___fleq+1)^0,c
 11375  0051AE  0E80               	movlw	128
 11376  0051B0  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11377  0051B2  6E0B               	movwf	(??___fleq+2)^0,c
 11378  0051B4  0E7F               	movlw	127
 11379  0051B6  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11380  0051B8  6E0C               	movwf	(??___fleq+3)^0,c
 11381  0051BA  5009               	movf	??___fleq^0,w,c
 11382  0051BC  100A               	iorwf	(??___fleq+1)^0,w,c
 11383  0051BE  100B               	iorwf	(??___fleq+2)^0,w,c
 11384  0051C0  100C               	iorwf	(??___fleq+3)^0,w,c
 11385  0051C2  A4D8               	btfss	status,2,c
 11386  0051C4  EFE6  F028         	goto	u5051
 11387  0051C8  EFE8  F028         	goto	u5050
 11388  0051CC                     u5051:
 11389  0051CC  EFF0  F028         	goto	l4595
 11390  0051D0                     u5050:
 11391  0051D0  0E00               	movlw	0
 11392  0051D2  6E01               	movwf	___fleq@ff1^0,c
 11393  0051D4  0E00               	movlw	0
 11394  0051D6  6E02               	movwf	(___fleq@ff1+1)^0,c
 11395  0051D8  0E00               	movlw	0
 11396  0051DA  6E03               	movwf	(___fleq@ff1+2)^0,c
 11397  0051DC  0E00               	movlw	0
 11398  0051DE  6E04               	movwf	(___fleq@ff1+3)^0,c
 11399  0051E0                     l4595:
 11400  0051E0  0E00               	movlw	0
 11401  0051E2  1405               	andwf	___fleq@ff2^0,w,c
 11402  0051E4  6E09               	movwf	??___fleq^0,c
 11403  0051E6  0E00               	movlw	0
 11404  0051E8  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11405  0051EA  6E0A               	movwf	(??___fleq+1)^0,c
 11406  0051EC  0E80               	movlw	128
 11407  0051EE  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11408  0051F0  6E0B               	movwf	(??___fleq+2)^0,c
 11409  0051F2  0E7F               	movlw	127
 11410  0051F4  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11411  0051F6  6E0C               	movwf	(??___fleq+3)^0,c
 11412  0051F8  5009               	movf	??___fleq^0,w,c
 11413  0051FA  100A               	iorwf	(??___fleq+1)^0,w,c
 11414  0051FC  100B               	iorwf	(??___fleq+2)^0,w,c
 11415  0051FE  100C               	iorwf	(??___fleq+3)^0,w,c
 11416  005200  A4D8               	btfss	status,2,c
 11417  005202  EF05  F029         	goto	u5061
 11418  005206  EF07  F029         	goto	u5060
 11419  00520A                     u5061:
 11420  00520A  EF0F  F029         	goto	l4599
 11421  00520E                     u5060:
 11422  00520E  0E00               	movlw	0
 11423  005210  6E05               	movwf	___fleq@ff2^0,c
 11424  005212  0E00               	movlw	0
 11425  005214  6E06               	movwf	(___fleq@ff2+1)^0,c
 11426  005216  0E00               	movlw	0
 11427  005218  6E07               	movwf	(___fleq@ff2+2)^0,c
 11428  00521A  0E00               	movlw	0
 11429  00521C  6E08               	movwf	(___fleq@ff2+3)^0,c
 11430  00521E                     l4599:
 11431  00521E  5005               	movf	___fleq@ff2^0,w,c
 11432  005220  1801               	xorwf	___fleq@ff1^0,w,c
 11433  005222  E10F               	bnz	u5070
 11434  005224  5006               	movf	(___fleq@ff2+1)^0,w,c
 11435  005226  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11436  005228  E10C               	bnz	u5070
 11437  00522A  5007               	movf	(___fleq@ff2+2)^0,w,c
 11438  00522C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11439  00522E  E109               	bnz	u5070
 11440  005230  5008               	movf	(___fleq@ff2+3)^0,w,c
 11441  005232  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11442  005234  B4D8               	btfsc	status,2,c
 11443  005236  EF1F  F029         	goto	u5071
 11444  00523A  EF21  F029         	goto	u5070
 11445  00523E                     u5071:
 11446  00523E  EF24  F029         	goto	l4603
 11447  005242                     u5070:
 11448  005242  90D8               	bcf	status,0,c
 11449  005244  EF25  F029         	goto	l747
 11450  005248                     l4603:
 11451  005248  80D8               	bsf	status,0,c
 11452  00524A                     l747:
 11453  00524A  0012               	return		;funcret
 11454  00524C                     __end_of___fleq:
 11455                           	callstack 0
 11456                           
 11457 ;; *************** function ___fldiv *****************
 11458 ;; Defined at:
 11459 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11460 ;; Parameters:    Size  Location     Type
 11461 ;;  b               4   52[COMRAM] unsigned char 
 11462 ;;  a               4   56[COMRAM] unsigned char 
 11463 ;; Auto vars:     Size  Location     Type
 11464 ;;  grs             4   71[COMRAM] unsigned long 
 11465 ;;  rem             4   64[COMRAM] unsigned long 
 11466 ;;  new_exp         2   69[COMRAM] short 
 11467 ;;  aexp            1   76[COMRAM] unsigned char 
 11468 ;;  bexp            1   75[COMRAM] unsigned char 
 11469 ;;  sign            1   68[COMRAM] unsigned char 
 11470 ;; Return value:  Size  Location     Type
 11471 ;;                  4   52[COMRAM] unsigned char 
 11472 ;; Registers used:
 11473 ;;		wreg, status,2, status,0
 11474 ;; Tracked objects:
 11475 ;;		On entry : 0/0
 11476 ;;		On exit  : 0/0
 11477 ;;		Unchanged: 0/0
 11478 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11479 ;;      Params:         8       0       0       0       0       0       0
 11480 ;;      Locals:        13       0       0       0       0       0       0
 11481 ;;      Temps:          4       0       0       0       0       0       0
 11482 ;;      Totals:        25       0       0       0       0       0       0
 11483 ;;Total ram usage:       25 bytes
 11484 ;; Hardware stack levels used:    1
 11485 ;; Hardware stack levels required when called:    1
 11486 ;; This function calls:
 11487 ;;		Nothing
 11488 ;; This function is called by:
 11489 ;;		_scanAdcConversion
 11490 ;;		_efgtoa
 11491 ;; This function uses a non-reentrant model
 11492 ;;
 11493                           
 11494                           	psect	text36
 11495  0033B6                     __ptext36:
 11496                           	callstack 0
 11497  0033B6                     ___fldiv:
 11498                           	callstack 25
 11499  0033B6  5038               	movf	(___fldiv@b+3)^0,w,c
 11500  0033B8  0B80               	andlw	128
 11501  0033BA  6E45               	movwf	___fldiv@sign^0,c
 11502  0033BC  5038               	movf	(___fldiv@b+3)^0,w,c
 11503  0033BE  2438               	addwf	(___fldiv@b+3)^0,w,c
 11504  0033C0  6E4C               	movwf	___fldiv@bexp^0,c
 11505  0033C2  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11506  0033C4  EFE6  F019         	goto	u4511
 11507  0033C8  EFE8  F019         	goto	u4510
 11508  0033CC                     u4511:
 11509  0033CC  EFE9  F019         	goto	l4243
 11510  0033D0                     u4510:
 11511  0033D0  804C               	bsf	___fldiv@bexp^0,0,c
 11512  0033D2                     l4243:
 11513  0033D2  504C               	movf	___fldiv@bexp^0,w,c
 11514  0033D4  B4D8               	btfsc	status,2,c
 11515  0033D6  EFEF  F019         	goto	u4521
 11516  0033DA  EFF1  F019         	goto	u4520
 11517  0033DE                     u4521:
 11518  0033DE  EF06  F01A         	goto	l4253
 11519  0033E2                     u4520:
 11520  0033E2  284C               	incf	___fldiv@bexp^0,w,c
 11521  0033E4  A4D8               	btfss	status,2,c
 11522  0033E6  EFF7  F019         	goto	u4531
 11523  0033EA  EFF9  F019         	goto	u4530
 11524  0033EE                     u4531:
 11525  0033EE  EF01  F01A         	goto	l4249
 11526  0033F2                     u4530:
 11527  0033F2  0E00               	movlw	0
 11528  0033F4  6E35               	movwf	___fldiv@b^0,c
 11529  0033F6  0E00               	movlw	0
 11530  0033F8  6E36               	movwf	(___fldiv@b+1)^0,c
 11531  0033FA  0E00               	movlw	0
 11532  0033FC  6E37               	movwf	(___fldiv@b+2)^0,c
 11533  0033FE  0E00               	movlw	0
 11534  003400  6E38               	movwf	(___fldiv@b+3)^0,c
 11535  003402                     l4249:
 11536  003402  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11537  003404  0E00               	movlw	0
 11538  003406  6E38               	movwf	(___fldiv@b+3)^0,c
 11539  003408  EF0E  F01A         	goto	l4255
 11540  00340C                     l4253:
 11541  00340C  0E00               	movlw	0
 11542  00340E  6E35               	movwf	___fldiv@b^0,c
 11543  003410  0E00               	movlw	0
 11544  003412  6E36               	movwf	(___fldiv@b+1)^0,c
 11545  003414  0E00               	movlw	0
 11546  003416  6E37               	movwf	(___fldiv@b+2)^0,c
 11547  003418  0E00               	movlw	0
 11548  00341A  6E38               	movwf	(___fldiv@b+3)^0,c
 11549  00341C                     l4255:
 11550  00341C  503C               	movf	(___fldiv@a+3)^0,w,c
 11551  00341E  0B80               	andlw	128
 11552  003420  1A45               	xorwf	___fldiv@sign^0,f,c
 11553  003422  503C               	movf	(___fldiv@a+3)^0,w,c
 11554  003424  243C               	addwf	(___fldiv@a+3)^0,w,c
 11555  003426  6E4D               	movwf	___fldiv@aexp^0,c
 11556  003428  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11557  00342A  EF19  F01A         	goto	u4541
 11558  00342E  EF1B  F01A         	goto	u4540
 11559  003432                     u4541:
 11560  003432  EF1C  F01A         	goto	l4263
 11561  003436                     u4540:
 11562  003436  804D               	bsf	___fldiv@aexp^0,0,c
 11563  003438                     l4263:
 11564  003438  504D               	movf	___fldiv@aexp^0,w,c
 11565  00343A  B4D8               	btfsc	status,2,c
 11566  00343C  EF22  F01A         	goto	u4551
 11567  003440  EF24  F01A         	goto	u4550
 11568  003444                     u4551:
 11569  003444  EF39  F01A         	goto	l4273
 11570  003448                     u4550:
 11571  003448  284D               	incf	___fldiv@aexp^0,w,c
 11572  00344A  A4D8               	btfss	status,2,c
 11573  00344C  EF2A  F01A         	goto	u4561
 11574  003450  EF2C  F01A         	goto	u4560
 11575  003454                     u4561:
 11576  003454  EF34  F01A         	goto	l4269
 11577  003458                     u4560:
 11578  003458  0E00               	movlw	0
 11579  00345A  6E39               	movwf	___fldiv@a^0,c
 11580  00345C  0E00               	movlw	0
 11581  00345E  6E3A               	movwf	(___fldiv@a+1)^0,c
 11582  003460  0E00               	movlw	0
 11583  003462  6E3B               	movwf	(___fldiv@a+2)^0,c
 11584  003464  0E00               	movlw	0
 11585  003466  6E3C               	movwf	(___fldiv@a+3)^0,c
 11586  003468                     l4269:
 11587  003468  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11588  00346A  0E00               	movlw	0
 11589  00346C  6E3C               	movwf	(___fldiv@a+3)^0,c
 11590  00346E  EF41  F01A         	goto	l4275
 11591  003472                     l4273:
 11592  003472  0E00               	movlw	0
 11593  003474  6E39               	movwf	___fldiv@a^0,c
 11594  003476  0E00               	movlw	0
 11595  003478  6E3A               	movwf	(___fldiv@a+1)^0,c
 11596  00347A  0E00               	movlw	0
 11597  00347C  6E3B               	movwf	(___fldiv@a+2)^0,c
 11598  00347E  0E00               	movlw	0
 11599  003480  6E3C               	movwf	(___fldiv@a+3)^0,c
 11600  003482                     l4275:
 11601  003482  5039               	movf	___fldiv@a^0,w,c
 11602  003484  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11603  003486  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11604  003488  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11605  00348A  A4D8               	btfss	status,2,c
 11606  00348C  EF4A  F01A         	goto	u4571
 11607  003490  EF4C  F01A         	goto	u4570
 11608  003494                     u4571:
 11609  003494  EF64  F01A         	goto	l4287
 11610  003498                     u4570:
 11611  003498  0E00               	movlw	0
 11612  00349A  6E35               	movwf	___fldiv@b^0,c
 11613  00349C  0E00               	movlw	0
 11614  00349E  6E36               	movwf	(___fldiv@b+1)^0,c
 11615  0034A0  0E00               	movlw	0
 11616  0034A2  6E37               	movwf	(___fldiv@b+2)^0,c
 11617  0034A4  0E00               	movlw	0
 11618  0034A6  6E38               	movwf	(___fldiv@b+3)^0,c
 11619  0034A8  0E80               	movlw	128
 11620  0034AA  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11621  0034AC  0E7F               	movlw	127
 11622  0034AE  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11623  0034B0                     l4281:
 11624  0034B0  5045               	movf	___fldiv@sign^0,w,c
 11625  0034B2  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11626  0034B4  C035  F035         	movff	___fldiv@b,?___fldiv
 11627  0034B8  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11628  0034BC  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11629  0034C0  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11630  0034C4  EFA7  F01B         	goto	l1070
 11631  0034C8                     l4287:
 11632  0034C8  504C               	movf	___fldiv@bexp^0,w,c
 11633  0034CA  A4D8               	btfss	status,2,c
 11634  0034CC  EF6A  F01A         	goto	u4581
 11635  0034D0  EF6C  F01A         	goto	u4580
 11636  0034D4                     u4581:
 11637  0034D4  EF76  F01A         	goto	l4295
 11638  0034D8                     u4580:
 11639  0034D8  0E00               	movlw	0
 11640  0034DA  6E35               	movwf	?___fldiv^0,c
 11641  0034DC  0E00               	movlw	0
 11642  0034DE  6E36               	movwf	(?___fldiv+1)^0,c
 11643  0034E0  0E00               	movlw	0
 11644  0034E2  6E37               	movwf	(?___fldiv+2)^0,c
 11645  0034E4  0E00               	movlw	0
 11646  0034E6  6E38               	movwf	(?___fldiv+3)^0,c
 11647  0034E8  EFA7  F01B         	goto	l1070
 11648  0034EC                     l4295:
 11649  0034EC  504D               	movf	___fldiv@aexp^0,w,c
 11650  0034EE  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11651  0034F2  6A3E               	clrf	(??___fldiv+1)^0,c
 11652  0034F4  5E3D               	subwf	??___fldiv^0,f,c
 11653  0034F6  0E00               	movlw	0
 11654  0034F8  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11655  0034FA  0E7F               	movlw	127
 11656  0034FC  243D               	addwf	??___fldiv^0,w,c
 11657  0034FE  6E46               	movwf	___fldiv@new_exp^0,c
 11658  003500  0E00               	movlw	0
 11659  003502  203E               	addwfc	(??___fldiv+1)^0,w,c
 11660  003504  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11661  003506  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11662  00350A  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11663  00350E  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11664  003512  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11665  003516  0E00               	movlw	0
 11666  003518  6E35               	movwf	___fldiv@b^0,c
 11667  00351A  0E00               	movlw	0
 11668  00351C  6E36               	movwf	(___fldiv@b+1)^0,c
 11669  00351E  0E00               	movlw	0
 11670  003520  6E37               	movwf	(___fldiv@b+2)^0,c
 11671  003522  0E00               	movlw	0
 11672  003524  6E38               	movwf	(___fldiv@b+3)^0,c
 11673  003526  0E00               	movlw	0
 11674  003528  6E48               	movwf	___fldiv@grs^0,c
 11675  00352A  0E00               	movlw	0
 11676  00352C  6E49               	movwf	(___fldiv@grs+1)^0,c
 11677  00352E  0E00               	movlw	0
 11678  003530  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11679  003532  0E00               	movlw	0
 11680  003534  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11681  003536  0E00               	movlw	0
 11682  003538  6E4D               	movwf	___fldiv@aexp^0,c
 11683  00353A  EFD7  F01A         	goto	l1072
 11684  00353E                     l4305:
 11685  00353E  504D               	movf	___fldiv@aexp^0,w,c
 11686  003540  B4D8               	btfsc	status,2,c
 11687  003542  EFA5  F01A         	goto	u4591
 11688  003546  EFA7  F01A         	goto	u4590
 11689  00354A                     u4591:
 11690  00354A  EFBE  F01A         	goto	l4313
 11691  00354E                     u4590:
 11692  00354E  90D8               	bcf	status,0,c
 11693  003550  3641               	rlcf	___fldiv@rem^0,f,c
 11694  003552  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11695  003554  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11696  003556  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11697  003558  90D8               	bcf	status,0,c
 11698  00355A  3635               	rlcf	___fldiv@b^0,f,c
 11699  00355C  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11700  00355E  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11701  003560  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11702  003562  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11703  003564  EFB6  F01A         	goto	u4601
 11704  003568  EFB8  F01A         	goto	u4600
 11705  00356C                     u4601:
 11706  00356C  EFB9  F01A         	goto	l1075
 11707  003570                     u4600:
 11708  003570  8035               	bsf	___fldiv@b^0,0,c
 11709  003572                     l1075:
 11710  003572  90D8               	bcf	status,0,c
 11711  003574  3648               	rlcf	___fldiv@grs^0,f,c
 11712  003576  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11713  003578  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11714  00357A  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11715  00357C                     l4313:
 11716  00357C  5039               	movf	___fldiv@a^0,w,c
 11717  00357E  5C41               	subwf	___fldiv@rem^0,w,c
 11718  003580  503A               	movf	(___fldiv@a+1)^0,w,c
 11719  003582  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11720  003584  503B               	movf	(___fldiv@a+2)^0,w,c
 11721  003586  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11722  003588  503C               	movf	(___fldiv@a+3)^0,w,c
 11723  00358A  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11724  00358C  A0D8               	btfss	status,0,c
 11725  00358E  EFCB  F01A         	goto	u4611
 11726  003592  EFCD  F01A         	goto	u4610
 11727  003596                     u4611:
 11728  003596  EFD6  F01A         	goto	l4319
 11729  00359A                     u4610:
 11730  00359A  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11731  00359C  5039               	movf	___fldiv@a^0,w,c
 11732  00359E  5E41               	subwf	___fldiv@rem^0,f,c
 11733  0035A0  503A               	movf	(___fldiv@a+1)^0,w,c
 11734  0035A2  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11735  0035A4  503B               	movf	(___fldiv@a+2)^0,w,c
 11736  0035A6  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11737  0035A8  503C               	movf	(___fldiv@a+3)^0,w,c
 11738  0035AA  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11739  0035AC                     l4319:
 11740  0035AC  2A4D               	incf	___fldiv@aexp^0,f,c
 11741  0035AE                     l1072:
 11742  0035AE  0E19               	movlw	25
 11743  0035B0  644D               	cpfsgt	___fldiv@aexp^0,c
 11744  0035B2  EFDD  F01A         	goto	u4621
 11745  0035B6  EFDF  F01A         	goto	u4620
 11746  0035BA                     u4621:
 11747  0035BA  EF9F  F01A         	goto	l4305
 11748  0035BE                     u4620:
 11749  0035BE  5041               	movf	___fldiv@rem^0,w,c
 11750  0035C0  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11751  0035C2  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11752  0035C4  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11753  0035C6  B4D8               	btfsc	status,2,c
 11754  0035C8  EFE8  F01A         	goto	u4631
 11755  0035CC  EFEA  F01A         	goto	u4630
 11756  0035D0                     u4631:
 11757  0035D0  EF02  F01B         	goto	l4331
 11758  0035D4                     u4630:
 11759  0035D4  8048               	bsf	___fldiv@grs^0,0,c
 11760  0035D6  EF02  F01B         	goto	l4331
 11761  0035DA                     l4325:
 11762  0035DA  90D8               	bcf	status,0,c
 11763  0035DC  3635               	rlcf	___fldiv@b^0,f,c
 11764  0035DE  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11765  0035E0  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11766  0035E2  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11767  0035E4  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11768  0035E6  EFF7  F01A         	goto	u4641
 11769  0035EA  EFF9  F01A         	goto	u4640
 11770  0035EE                     u4641:
 11771  0035EE  EFFA  F01A         	goto	l1081
 11772  0035F2                     u4640:
 11773  0035F2  8035               	bsf	___fldiv@b^0,0,c
 11774  0035F4                     l1081:
 11775  0035F4  90D8               	bcf	status,0,c
 11776  0035F6  3648               	rlcf	___fldiv@grs^0,f,c
 11777  0035F8  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11778  0035FA  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11779  0035FC  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11780  0035FE  0646               	decf	___fldiv@new_exp^0,f,c
 11781  003600  A0D8               	btfss	status,0,c
 11782  003602  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11783  003604                     l4331:
 11784  003604  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11785  003606  EF07  F01B         	goto	u4651
 11786  00360A  EF09  F01B         	goto	u4650
 11787  00360E                     u4651:
 11788  00360E  EFED  F01A         	goto	l4325
 11789  003612                     u4650:
 11790  003612  0E00               	movlw	0
 11791  003614  6E4D               	movwf	___fldiv@aexp^0,c
 11792  003616  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11793  003618  EF10  F01B         	goto	u4661
 11794  00361C  EF12  F01B         	goto	u4660
 11795  003620                     u4661:
 11796  003620  EF36  F01B         	goto	l1083
 11797  003624                     u4660:
 11798  003624  0EFF               	movlw	255
 11799  003626  1448               	andwf	___fldiv@grs^0,w,c
 11800  003628  6E3D               	movwf	??___fldiv^0,c
 11801  00362A  0EFF               	movlw	255
 11802  00362C  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11803  00362E  6E3E               	movwf	(??___fldiv+1)^0,c
 11804  003630  0EFF               	movlw	255
 11805  003632  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11806  003634  6E3F               	movwf	(??___fldiv+2)^0,c
 11807  003636  0E7F               	movlw	127
 11808  003638  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11809  00363A  6E40               	movwf	(??___fldiv+3)^0,c
 11810  00363C  503D               	movf	??___fldiv^0,w,c
 11811  00363E  103E               	iorwf	(??___fldiv+1)^0,w,c
 11812  003640  103F               	iorwf	(??___fldiv+2)^0,w,c
 11813  003642  1040               	iorwf	(??___fldiv+3)^0,w,c
 11814  003644  B4D8               	btfsc	status,2,c
 11815  003646  EF27  F01B         	goto	u4671
 11816  00364A  EF29  F01B         	goto	u4670
 11817  00364E                     u4671:
 11818  00364E  EF2D  F01B         	goto	l1084
 11819  003652                     u4670:
 11820  003652                     l4339:
 11821  003652  0E01               	movlw	1
 11822  003654  6E4D               	movwf	___fldiv@aexp^0,c
 11823  003656  EF36  F01B         	goto	l1083
 11824  00365A                     l1084:
 11825  00365A  A035               	btfss	___fldiv@b^0,0,c
 11826  00365C  EF32  F01B         	goto	u4681
 11827  003660  EF34  F01B         	goto	u4680
 11828  003664                     u4681:
 11829  003664  EF36  F01B         	goto	l1083
 11830  003668                     u4680:
 11831  003668  EF29  F01B         	goto	l4339
 11832  00366C                     l1083:
 11833  00366C  504D               	movf	___fldiv@aexp^0,w,c
 11834  00366E  B4D8               	btfsc	status,2,c
 11835  003670  EF3C  F01B         	goto	u4691
 11836  003674  EF3E  F01B         	goto	u4690
 11837  003678                     u4691:
 11838  003678  EF62  F01B         	goto	l4351
 11839  00367C                     u4690:
 11840  00367C  0E01               	movlw	1
 11841  00367E  2635               	addwf	___fldiv@b^0,f,c
 11842  003680  0E00               	movlw	0
 11843  003682  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11844  003684  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11845  003686  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11846  003688  A038               	btfss	(___fldiv@b+3)^0,0,c
 11847  00368A  EF49  F01B         	goto	u4701
 11848  00368E  EF4B  F01B         	goto	u4700
 11849  003692                     u4701:
 11850  003692  EF62  F01B         	goto	l4351
 11851  003696                     u4700:
 11852  003696  C035  F03D         	movff	___fldiv@b,??___fldiv
 11853  00369A  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11854  00369E  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11855  0036A2  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11856  0036A6  3440               	rlcf	(??___fldiv+3)^0,w,c
 11857  0036A8  3240               	rrcf	(??___fldiv+3)^0,f,c
 11858  0036AA  323F               	rrcf	(??___fldiv+2)^0,f,c
 11859  0036AC  323E               	rrcf	(??___fldiv+1)^0,f,c
 11860  0036AE  323D               	rrcf	??___fldiv^0,f,c
 11861  0036B0  C03D  F035         	movff	??___fldiv,___fldiv@b
 11862  0036B4  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11863  0036B8  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11864  0036BC  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11865  0036C0  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11866  0036C2  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11867  0036C4                     l4351:
 11868  0036C4  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11869  0036C6  EF6D  F01B         	goto	u4711
 11870  0036CA  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11871  0036CC  E108               	bnz	u4710
 11872  0036CE  2846               	incf	___fldiv@new_exp^0,w,c
 11873  0036D0  A0D8               	btfss	status,0,c
 11874  0036D2  EF6D  F01B         	goto	u4711
 11875  0036D6  EF6F  F01B         	goto	u4710
 11876  0036DA                     u4711:
 11877  0036DA  EF7A  F01B         	goto	l4355
 11878  0036DE                     u4710:
 11879  0036DE  0E00               	movlw	0
 11880  0036E0  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11881  0036E2  6846               	setf	___fldiv@new_exp^0,c
 11882  0036E4  0E00               	movlw	0
 11883  0036E6  6E35               	movwf	___fldiv@b^0,c
 11884  0036E8  0E00               	movlw	0
 11885  0036EA  6E36               	movwf	(___fldiv@b+1)^0,c
 11886  0036EC  0E00               	movlw	0
 11887  0036EE  6E37               	movwf	(___fldiv@b+2)^0,c
 11888  0036F0  0E00               	movlw	0
 11889  0036F2  6E38               	movwf	(___fldiv@b+3)^0,c
 11890  0036F4                     l4355:
 11891  0036F4  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11892  0036F6  EF87  F01B         	goto	u4720
 11893  0036FA  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11894  0036FC  E106               	bnz	u4721
 11895  0036FE  0446               	decf	___fldiv@new_exp^0,w,c
 11896  003700  B0D8               	btfsc	status,0,c
 11897  003702  EF85  F01B         	goto	u4721
 11898  003706  EF87  F01B         	goto	u4720
 11899  00370A                     u4721:
 11900  00370A  EF95  F01B         	goto	l4359
 11901  00370E                     u4720:
 11902  00370E  0E00               	movlw	0
 11903  003710  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11904  003712  0E00               	movlw	0
 11905  003714  6E46               	movwf	___fldiv@new_exp^0,c
 11906  003716  0E00               	movlw	0
 11907  003718  6E35               	movwf	___fldiv@b^0,c
 11908  00371A  0E00               	movlw	0
 11909  00371C  6E36               	movwf	(___fldiv@b+1)^0,c
 11910  00371E  0E00               	movlw	0
 11911  003720  6E37               	movwf	(___fldiv@b+2)^0,c
 11912  003722  0E00               	movlw	0
 11913  003724  6E38               	movwf	(___fldiv@b+3)^0,c
 11914  003726  0E00               	movlw	0
 11915  003728  6E45               	movwf	___fldiv@sign^0,c
 11916  00372A                     l4359:
 11917  00372A  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11918  00372E  A04C               	btfss	___fldiv@bexp^0,0,c
 11919  003730  EF9C  F01B         	goto	u4731
 11920  003734  EF9E  F01B         	goto	u4730
 11921  003738                     u4731:
 11922  003738  EFA1  F01B         	goto	l4365
 11923  00373C                     u4730:
 11924  00373C  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11925  00373E  EFA2  F01B         	goto	l4367
 11926  003742                     l4365:
 11927  003742  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11928  003744                     l4367:
 11929  003744  90D8               	bcf	status,0,c
 11930  003746  304C               	rrcf	___fldiv@bexp^0,w,c
 11931  003748  6E38               	movwf	(___fldiv@b+3)^0,c
 11932  00374A  EF58  F01A         	goto	l4281
 11933  00374E                     l1070:
 11934  00374E  0012               	return		;funcret
 11935  003750                     __end_of___fldiv:
 11936                           	callstack 0
 11937                           
 11938 ;; *************** function ___awmod *****************
 11939 ;; Defined at:
 11940 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 11941 ;; Parameters:    Size  Location     Type
 11942 ;;  dividend        2    0[COMRAM] int 
 11943 ;;  divisor         2    2[COMRAM] int 
 11944 ;; Auto vars:     Size  Location     Type
 11945 ;;  sign            1    5[COMRAM] unsigned char 
 11946 ;;  counter         1    4[COMRAM] unsigned char 
 11947 ;; Return value:  Size  Location     Type
 11948 ;;                  2    0[COMRAM] int 
 11949 ;; Registers used:
 11950 ;;		wreg, status,2, status,0
 11951 ;; Tracked objects:
 11952 ;;		On entry : 0/0
 11953 ;;		On exit  : 0/0
 11954 ;;		Unchanged: 0/0
 11955 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11956 ;;      Params:         4       0       0       0       0       0       0
 11957 ;;      Locals:         2       0       0       0       0       0       0
 11958 ;;      Temps:          0       0       0       0       0       0       0
 11959 ;;      Totals:         6       0       0       0       0       0       0
 11960 ;;Total ram usage:        6 bytes
 11961 ;; Hardware stack levels used:    1
 11962 ;; Hardware stack levels required when called:    1
 11963 ;; This function calls:
 11964 ;;		Nothing
 11965 ;; This function is called by:
 11966 ;;		_efgtoa
 11967 ;; This function uses a non-reentrant model
 11968 ;;
 11969                           
 11970                           	psect	text37
 11971  0050F2                     __ptext37:
 11972                           	callstack 0
 11973  0050F2                     ___awmod:
 11974                           	callstack 23
 11975  0050F2  0E00               	movlw	0
 11976  0050F4  6E06               	movwf	___awmod@sign^0,c
 11977  0050F6  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 11978  0050F8  EF82  F028         	goto	u4990
 11979  0050FC  EF80  F028         	goto	u4991
 11980  005100                     u4991:
 11981  005100  EF88  F028         	goto	l4563
 11982  005104                     u4990:
 11983  005104  6C01               	negf	___awmod@dividend^0,c
 11984  005106  1E02               	comf	(___awmod@dividend+1)^0,f,c
 11985  005108  B0D8               	btfsc	status,0,c
 11986  00510A  2A02               	incf	(___awmod@dividend+1)^0,f,c
 11987  00510C  0E01               	movlw	1
 11988  00510E  6E06               	movwf	___awmod@sign^0,c
 11989  005110                     l4563:
 11990  005110  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 11991  005112  EF8F  F028         	goto	u5000
 11992  005116  EF8D  F028         	goto	u5001
 11993  00511A                     u5001:
 11994  00511A  EF93  F028         	goto	l4567
 11995  00511E                     u5000:
 11996  00511E  6C03               	negf	___awmod@divisor^0,c
 11997  005120  1E04               	comf	(___awmod@divisor+1)^0,f,c
 11998  005122  B0D8               	btfsc	status,0,c
 11999  005124  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12000  005126                     l4567:
 12001  005126  5003               	movf	___awmod@divisor^0,w,c
 12002  005128  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12003  00512A  B4D8               	btfsc	status,2,c
 12004  00512C  EF9A  F028         	goto	u5011
 12005  005130  EF9C  F028         	goto	u5010
 12006  005134                     u5011:
 12007  005134  EFC0  F028         	goto	l4583
 12008  005138                     u5010:
 12009  005138  0E01               	movlw	1
 12010  00513A  6E05               	movwf	___awmod@counter^0,c
 12011  00513C  EFA4  F028         	goto	l4573
 12012  005140                     l4571:
 12013  005140  90D8               	bcf	status,0,c
 12014  005142  3603               	rlcf	___awmod@divisor^0,f,c
 12015  005144  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12016  005146  2A05               	incf	___awmod@counter^0,f,c
 12017  005148                     l4573:
 12018  005148  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12019  00514A  EFA9  F028         	goto	u5021
 12020  00514E  EFAB  F028         	goto	u5020
 12021  005152                     u5021:
 12022  005152  EFA0  F028         	goto	l4571
 12023  005156                     u5020:
 12024  005156                     l4575:
 12025  005156  5003               	movf	___awmod@divisor^0,w,c
 12026  005158  5C01               	subwf	___awmod@dividend^0,w,c
 12027  00515A  5004               	movf	(___awmod@divisor+1)^0,w,c
 12028  00515C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12029  00515E  A0D8               	btfss	status,0,c
 12030  005160  EFB4  F028         	goto	u5031
 12031  005164  EFB6  F028         	goto	u5030
 12032  005168                     u5031:
 12033  005168  EFBA  F028         	goto	l4579
 12034  00516C                     u5030:
 12035  00516C  5003               	movf	___awmod@divisor^0,w,c
 12036  00516E  5E01               	subwf	___awmod@dividend^0,f,c
 12037  005170  5004               	movf	(___awmod@divisor+1)^0,w,c
 12038  005172  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12039  005174                     l4579:
 12040  005174  90D8               	bcf	status,0,c
 12041  005176  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12042  005178  3203               	rrcf	___awmod@divisor^0,f,c
 12043  00517A  2E05               	decfsz	___awmod@counter^0,f,c
 12044  00517C  EFAB  F028         	goto	l4575
 12045  005180                     l4583:
 12046  005180  5006               	movf	___awmod@sign^0,w,c
 12047  005182  B4D8               	btfsc	status,2,c
 12048  005184  EFC6  F028         	goto	u5041
 12049  005188  EFC8  F028         	goto	u5040
 12050  00518C                     u5041:
 12051  00518C  EFCC  F028         	goto	l4587
 12052  005190                     u5040:
 12053  005190  6C01               	negf	___awmod@dividend^0,c
 12054  005192  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12055  005194  B0D8               	btfsc	status,0,c
 12056  005196  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12057  005198                     l4587:
 12058  005198  C001  F001         	movff	___awmod@dividend,?___awmod
 12059  00519C  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12060  0051A0  0012               	return		;funcret
 12061  0051A2                     __end_of___awmod:
 12062                           	callstack 0
 12063                           
 12064 ;; *************** function ___awdiv *****************
 12065 ;; Defined at:
 12066 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12067 ;; Parameters:    Size  Location     Type
 12068 ;;  dividend        2    0[COMRAM] int 
 12069 ;;  divisor         2    2[COMRAM] int 
 12070 ;; Auto vars:     Size  Location     Type
 12071 ;;  quotient        2    6[COMRAM] int 
 12072 ;;  sign            1    5[COMRAM] unsigned char 
 12073 ;;  counter         1    4[COMRAM] unsigned char 
 12074 ;; Return value:  Size  Location     Type
 12075 ;;                  2    0[COMRAM] int 
 12076 ;; Registers used:
 12077 ;;		wreg, status,2, status,0
 12078 ;; Tracked objects:
 12079 ;;		On entry : 0/0
 12080 ;;		On exit  : 0/0
 12081 ;;		Unchanged: 0/0
 12082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12083 ;;      Params:         4       0       0       0       0       0       0
 12084 ;;      Locals:         4       0       0       0       0       0       0
 12085 ;;      Temps:          0       0       0       0       0       0       0
 12086 ;;      Totals:         8       0       0       0       0       0       0
 12087 ;;Total ram usage:        8 bytes
 12088 ;; Hardware stack levels used:    1
 12089 ;; Hardware stack levels required when called:    1
 12090 ;; This function calls:
 12091 ;;		Nothing
 12092 ;; This function is called by:
 12093 ;;		_efgtoa
 12094 ;; This function uses a non-reentrant model
 12095 ;;
 12096                           
 12097                           	psect	text38
 12098  00502E                     __ptext38:
 12099                           	callstack 0
 12100  00502E                     ___awdiv:
 12101                           	callstack 23
 12102  00502E  0E00               	movlw	0
 12103  005030  6E06               	movwf	___awdiv@sign^0,c
 12104  005032  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12105  005034  EF20  F028         	goto	u4930
 12106  005038  EF1E  F028         	goto	u4931
 12107  00503C                     u4931:
 12108  00503C  EF26  F028         	goto	l4519
 12109  005040                     u4930:
 12110  005040  6C03               	negf	___awdiv@divisor^0,c
 12111  005042  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12112  005044  B0D8               	btfsc	status,0,c
 12113  005046  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12114  005048  0E01               	movlw	1
 12115  00504A  6E06               	movwf	___awdiv@sign^0,c
 12116  00504C                     l4519:
 12117  00504C  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12118  00504E  EF2D  F028         	goto	u4940
 12119  005052  EF2B  F028         	goto	u4941
 12120  005056                     u4941:
 12121  005056  EF33  F028         	goto	l4525
 12122  00505A                     u4940:
 12123  00505A  6C01               	negf	___awdiv@dividend^0,c
 12124  00505C  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12125  00505E  B0D8               	btfsc	status,0,c
 12126  005060  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12127  005062  0E01               	movlw	1
 12128  005064  1A06               	xorwf	___awdiv@sign^0,f,c
 12129  005066                     l4525:
 12130  005066  0E00               	movlw	0
 12131  005068  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12132  00506A  0E00               	movlw	0
 12133  00506C  6E07               	movwf	___awdiv@quotient^0,c
 12134  00506E  5003               	movf	___awdiv@divisor^0,w,c
 12135  005070  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12136  005072  B4D8               	btfsc	status,2,c
 12137  005074  EF3E  F028         	goto	u4951
 12138  005078  EF40  F028         	goto	u4950
 12139  00507C                     u4951:
 12140  00507C  EF68  F028         	goto	l4547
 12141  005080                     u4950:
 12142  005080  0E01               	movlw	1
 12143  005082  6E05               	movwf	___awdiv@counter^0,c
 12144  005084  EF48  F028         	goto	l4533
 12145  005088                     l4531:
 12146  005088  90D8               	bcf	status,0,c
 12147  00508A  3603               	rlcf	___awdiv@divisor^0,f,c
 12148  00508C  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12149  00508E  2A05               	incf	___awdiv@counter^0,f,c
 12150  005090                     l4533:
 12151  005090  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12152  005092  EF4D  F028         	goto	u4961
 12153  005096  EF4F  F028         	goto	u4960
 12154  00509A                     u4961:
 12155  00509A  EF44  F028         	goto	l4531
 12156  00509E                     u4960:
 12157  00509E                     l4535:
 12158  00509E  90D8               	bcf	status,0,c
 12159  0050A0  3607               	rlcf	___awdiv@quotient^0,f,c
 12160  0050A2  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12161  0050A4  5003               	movf	___awdiv@divisor^0,w,c
 12162  0050A6  5C01               	subwf	___awdiv@dividend^0,w,c
 12163  0050A8  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12164  0050AA  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12165  0050AC  A0D8               	btfss	status,0,c
 12166  0050AE  EF5B  F028         	goto	u4971
 12167  0050B2  EF5D  F028         	goto	u4970
 12168  0050B6                     u4971:
 12169  0050B6  EF62  F028         	goto	l4543
 12170  0050BA                     u4970:
 12171  0050BA  5003               	movf	___awdiv@divisor^0,w,c
 12172  0050BC  5E01               	subwf	___awdiv@dividend^0,f,c
 12173  0050BE  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12174  0050C0  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12175  0050C2  8007               	bsf	___awdiv@quotient^0,0,c
 12176  0050C4                     l4543:
 12177  0050C4  90D8               	bcf	status,0,c
 12178  0050C6  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12179  0050C8  3203               	rrcf	___awdiv@divisor^0,f,c
 12180  0050CA  2E05               	decfsz	___awdiv@counter^0,f,c
 12181  0050CC  EF4F  F028         	goto	l4535
 12182  0050D0                     l4547:
 12183  0050D0  5006               	movf	___awdiv@sign^0,w,c
 12184  0050D2  B4D8               	btfsc	status,2,c
 12185  0050D4  EF6E  F028         	goto	u4981
 12186  0050D8  EF70  F028         	goto	u4980
 12187  0050DC                     u4981:
 12188  0050DC  EF74  F028         	goto	l4551
 12189  0050E0                     u4980:
 12190  0050E0  6C07               	negf	___awdiv@quotient^0,c
 12191  0050E2  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12192  0050E4  B0D8               	btfsc	status,0,c
 12193  0050E6  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12194  0050E8                     l4551:
 12195  0050E8  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12196  0050EC  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12197  0050F0  0012               	return		;funcret
 12198  0050F2                     __end_of___awdiv:
 12199                           	callstack 0
 12200                           
 12201 ;; *************** function _dtoa *****************
 12202 ;; Defined at:
 12203 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12204 ;; Parameters:    Size  Location     Type
 12205 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12206 ;;		 -> sprintf@f(6), 
 12207 ;;  d               8   29[COMRAM] long long 
 12208 ;; Auto vars:     Size  Location     Type
 12209 ;;  n               8   53[COMRAM] long long 
 12210 ;;  i               2   61[COMRAM] int 
 12211 ;;  s               2   51[COMRAM] int 
 12212 ;;  w               2   49[COMRAM] int 
 12213 ;;  p               2   47[COMRAM] int 
 12214 ;; Return value:  Size  Location     Type
 12215 ;;                  2   27[COMRAM] int 
 12216 ;; Registers used:
 12217 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12218 ;; Tracked objects:
 12219 ;;		On entry : 0/0
 12220 ;;		On exit  : 0/0
 12221 ;;		Unchanged: 0/0
 12222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12223 ;;      Params:        10       0       0       0       0       0       0
 12224 ;;      Locals:        18       0       0       0       0       0       0
 12225 ;;      Temps:          8       0       0       0       0       0       0
 12226 ;;      Totals:        36       0       0       0       0       0       0
 12227 ;;Total ram usage:       36 bytes
 12228 ;; Hardware stack levels used:    1
 12229 ;; Hardware stack levels required when called:    5
 12230 ;; This function calls:
 12231 ;;		___aodiv
 12232 ;;		___aomod
 12233 ;;		_abs
 12234 ;;		_pad
 12235 ;; This function is called by:
 12236 ;;		_vfpfcnvrt
 12237 ;; This function uses a non-reentrant model
 12238 ;;
 12239                           
 12240                           	psect	text39
 12241  003A36                     __ptext39:
 12242                           	callstack 0
 12243  003A36                     _dtoa:
 12244                           	callstack 20
 12245  003A36                     
 12246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12247  003A36  C01E  F036         	movff	dtoa@d,dtoa@n
 12248  003A3A  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12249  003A3E  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12250  003A42  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12251  003A46  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12252  003A4A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12253  003A4E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12254  003A52  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12255  003A56                     
 12256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12257  003A56  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12258  003A58  EF30  F01D         	goto	u5521
 12259  003A5C  EF33  F01D         	goto	u5520
 12260  003A60                     u5521:
 12261  003A60  0E01               	movlw	1
 12262  003A62  EF34  F01D         	goto	u5530
 12263  003A66                     u5520:
 12264  003A66  0E00               	movlw	0
 12265  003A68                     u5530:
 12266  003A68  6E34               	movwf	dtoa@s^0,c
 12267  003A6A  6A35               	clrf	(dtoa@s+1)^0,c
 12268                           
 12269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12270  003A6C  5034               	movf	dtoa@s^0,w,c
 12271  003A6E  1035               	iorwf	(dtoa@s+1)^0,w,c
 12272  003A70  B4D8               	btfsc	status,2,c
 12273  003A72  EF3D  F01D         	goto	u5541
 12274  003A76  EF3F  F01D         	goto	u5540
 12275  003A7A                     u5541:
 12276  003A7A  EF4F  F01D         	goto	l4793
 12277  003A7E                     u5540:
 12278  003A7E                     
 12279                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12280  003A7E  1E3D               	comf	(dtoa@n+7)^0,f,c
 12281  003A80  1E3C               	comf	(dtoa@n+6)^0,f,c
 12282  003A82  1E3B               	comf	(dtoa@n+5)^0,f,c
 12283  003A84  1E3A               	comf	(dtoa@n+4)^0,f,c
 12284  003A86  1E39               	comf	(dtoa@n+3)^0,f,c
 12285  003A88  1E38               	comf	(dtoa@n+2)^0,f,c
 12286  003A8A  1E37               	comf	(dtoa@n+1)^0,f,c
 12287  003A8C  6C36               	negf	dtoa@n^0,c
 12288  003A8E  0E00               	movlw	0
 12289  003A90  2237               	addwfc	(dtoa@n+1)^0,f,c
 12290  003A92  2238               	addwfc	(dtoa@n+2)^0,f,c
 12291  003A94  2239               	addwfc	(dtoa@n+3)^0,f,c
 12292  003A96  223A               	addwfc	(dtoa@n+4)^0,f,c
 12293  003A98  223B               	addwfc	(dtoa@n+5)^0,f,c
 12294  003A9A  223C               	addwfc	(dtoa@n+6)^0,f,c
 12295  003A9C  223D               	addwfc	(dtoa@n+7)^0,f,c
 12296  003A9E                     l4793:
 12297                           
 12298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12299  003A9E  0101               	movlb	1	; () banked
 12300  003AA0  BFB7               	btfsc	(_prec+1)& (0+255),7,b
 12301  003AA2  EF55  F01D         	goto	u5551
 12302  003AA6  EF57  F01D         	goto	u5550
 12303  003AAA                     u5551:
 12304  003AAA  EF58  F01D         	goto	l4797
 12305  003AAE                     u5550:
 12306  003AAE                     
 12307                           ; BSR set to: 1
 12308                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12309  003AAE  93B8               	bcf	_flags& (0+255),1,b
 12310  003AB0                     l4797:
 12311                           
 12312                           ; BSR set to: 1
 12313                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12314  003AB0  BFB7               	btfsc	(_prec+1)& (0+255),7,b
 12315  003AB2  EF65  F01D         	goto	u5560
 12316  003AB6  51B7               	movf	(_prec+1)& (0+255),w,b
 12317  003AB8  E106               	bnz	u5561
 12318  003ABA  05B6               	decf	_prec& (0+255),w,b
 12319  003ABC  B0D8               	btfsc	status,0,c
 12320  003ABE  EF63  F01D         	goto	u5561
 12321  003AC2  EF65  F01D         	goto	u5560
 12322  003AC6                     u5561:
 12323  003AC6  EF6B  F01D         	goto	l1225
 12324  003ACA                     u5560:
 12325  003ACA                     
 12326                           ; BSR set to: 1
 12327  003ACA  0E00               	movlw	0
 12328  003ACC  6E31               	movwf	(dtoa@p+1)^0,c
 12329  003ACE  0E01               	movlw	1
 12330  003AD0  6E30               	movwf	dtoa@p^0,c
 12331  003AD2  EF6F  F01D         	goto	l1227
 12332  003AD6                     l1225:
 12333                           
 12334                           ; BSR set to: 1
 12335  003AD6  C1B6  F030         	movff	_prec,dtoa@p
 12336  003ADA  C1B7  F031         	movff	_prec+1,dtoa@p+1
 12337  003ADE                     l1227:
 12338                           
 12339                           ; BSR set to: 1
 12340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12341  003ADE  C1B4  F032         	movff	_width,dtoa@w
 12342  003AE2  C1B5  F033         	movff	_width+1,dtoa@w+1
 12343  003AE6                     
 12344                           ; BSR set to: 1
 12345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12346  003AE6  5034               	movf	dtoa@s^0,w,c
 12347  003AE8  1035               	iorwf	(dtoa@s+1)^0,w,c
 12348  003AEA  A4D8               	btfss	status,2,c
 12349  003AEC  EF7A  F01D         	goto	u5571
 12350  003AF0  EF7C  F01D         	goto	u5570
 12351  003AF4                     u5571:
 12352  003AF4  EF83  F01D         	goto	l4805
 12353  003AF8                     u5570:
 12354  003AF8                     
 12355                           ; BSR set to: 1
 12356  003AF8  A5B8               	btfss	_flags& (0+255),2,b
 12357  003AFA  EF81  F01D         	goto	u5581
 12358  003AFE  EF83  F01D         	goto	u5580
 12359  003B02                     u5581:
 12360  003B02  EF86  F01D         	goto	l4807
 12361  003B06                     u5580:
 12362  003B06                     l4805:
 12363                           
 12364                           ; BSR set to: 1
 12365                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12366  003B06  0632               	decf	dtoa@w^0,f,c
 12367  003B08  A0D8               	btfss	status,0,c
 12368  003B0A  0633               	decf	(dtoa@w+1)^0,f,c
 12369  003B0C                     l4807:
 12370                           
 12371                           ; BSR set to: 1
 12372                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12373  003B0C  0E00               	movlw	0
 12374  003B0E  6E3F               	movwf	(dtoa@i+1)^0,c
 12375  003B10  0E4F               	movlw	79
 12376  003B12  6E3E               	movwf	dtoa@i^0,c
 12377  003B14                     
 12378                           ; BSR set to: 1
 12379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12380  003B14  0E00               	movlw	0
 12381  003B16  0102               	movlb	2	; () banked
 12382  003B18  6F4F               	movwf	(_dbuf+79)& (0+255),b
 12383                           
 12384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12385  003B1A  EF0B  F01E         	goto	l4821
 12386  003B1E                     l4811:
 12387                           
 12388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12389  003B1E  063E               	decf	dtoa@i^0,f,c
 12390  003B20  A0D8               	btfss	status,0,c
 12391  003B22  063F               	decf	(dtoa@i+1)^0,f,c
 12392  003B24                     
 12393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12394  003B24  0E00               	movlw	low _dbuf
 12395  003B26  243E               	addwf	dtoa@i^0,w,c
 12396  003B28  6ED9               	movwf	fsr2l,c
 12397  003B2A  0E02               	movlw	high _dbuf
 12398  003B2C  203F               	addwfc	(dtoa@i+1)^0,w,c
 12399  003B2E  6EDA               	movwf	fsr2h,c
 12400  003B30  C036  F001         	movff	dtoa@n,___aomod@dividend
 12401  003B34  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12402  003B38  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12403  003B3C  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12404  003B40  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12405  003B44  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12406  003B48  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12407  003B4C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12408  003B50  0E0A               	movlw	10
 12409  003B52  6E09               	movwf	___aomod@divisor^0,c
 12410  003B54  0E00               	movlw	0
 12411  003B56  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12412  003B58  0E00               	movlw	0
 12413  003B5A  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12414  003B5C  0E00               	movlw	0
 12415  003B5E  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12416  003B60  0E00               	movlw	0
 12417  003B62  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12418  003B64  0E00               	movlw	0
 12419  003B66  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12420  003B68  0E00               	movlw	0
 12421  003B6A  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12422  003B6C  0E00               	movlw	0
 12423  003B6E  6E10               	movwf	(___aomod@divisor+7)^0,c
 12424  003B70  EC9F  F023         	call	___aomod	;wreg free
 12425  003B74  C001  F026         	movff	?___aomod,??_dtoa
 12426  003B78  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12427  003B7C  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12428  003B80  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12429  003B84  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12430  003B88  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12431  003B8C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12432  003B90  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12433  003B94  C026  F013         	movff	??_dtoa,abs@a
 12434  003B98  C028  F014         	movff	??_dtoa+2,abs@a+1
 12435  003B9C  ECBD  F02C         	call	_abs	;wreg free
 12436  003BA0  5013               	movf	?_abs^0,w,c
 12437  003BA2  0F30               	addlw	48
 12438  003BA4  6EDF               	movwf	indf2,c
 12439  003BA6                     
 12440                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12441  003BA6  0630               	decf	dtoa@p^0,f,c
 12442  003BA8  A0D8               	btfss	status,0,c
 12443  003BAA  0631               	decf	(dtoa@p+1)^0,f,c
 12444  003BAC                     
 12445                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12446  003BAC  0632               	decf	dtoa@w^0,f,c
 12447  003BAE  A0D8               	btfss	status,0,c
 12448  003BB0  0633               	decf	(dtoa@w+1)^0,f,c
 12449  003BB2                     
 12450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12451  003BB2  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12452  003BB6  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12453  003BBA  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12454  003BBE  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12455  003BC2  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12456  003BC6  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12457  003BCA  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12458  003BCE  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12459  003BD2  0E0A               	movlw	10
 12460  003BD4  6E09               	movwf	___aodiv@divisor^0,c
 12461  003BD6  0E00               	movlw	0
 12462  003BD8  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12463  003BDA  0E00               	movlw	0
 12464  003BDC  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12465  003BDE  0E00               	movlw	0
 12466  003BE0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12467  003BE2  0E00               	movlw	0
 12468  003BE4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12469  003BE6  0E00               	movlw	0
 12470  003BE8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12471  003BEA  0E00               	movlw	0
 12472  003BEC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12473  003BEE  0E00               	movlw	0
 12474  003BF0  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12475  003BF2  EC19  F022         	call	___aodiv	;wreg free
 12476  003BF6  C001  F036         	movff	?___aodiv,dtoa@n
 12477  003BFA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12478  003BFE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12479  003C02  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12480  003C06  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12481  003C0A  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12482  003C0E  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12483  003C12  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12484  003C16                     l4821:
 12485                           
 12486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12487  003C16  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12488  003C18  EF16  F01E         	goto	u5591
 12489  003C1C  503F               	movf	(dtoa@i+1)^0,w,c
 12490  003C1E  E108               	bnz	u5590
 12491  003C20  043E               	decf	dtoa@i^0,w,c
 12492  003C22  A0D8               	btfss	status,0,c
 12493  003C24  EF16  F01E         	goto	u5591
 12494  003C28  EF18  F01E         	goto	u5590
 12495  003C2C                     u5591:
 12496  003C2C  EF49  F01E         	goto	l4831
 12497  003C30                     u5590:
 12498  003C30  5036               	movf	dtoa@n^0,w,c
 12499  003C32  1037               	iorwf	(dtoa@n+1)^0,w,c
 12500  003C34  1038               	iorwf	(dtoa@n+2)^0,w,c
 12501  003C36  1039               	iorwf	(dtoa@n+3)^0,w,c
 12502  003C38  103A               	iorwf	(dtoa@n+4)^0,w,c
 12503  003C3A  103B               	iorwf	(dtoa@n+5)^0,w,c
 12504  003C3C  103C               	iorwf	(dtoa@n+6)^0,w,c
 12505  003C3E  103D               	iorwf	(dtoa@n+7)^0,w,c
 12506  003C40  A4D8               	btfss	status,2,c
 12507  003C42  EF25  F01E         	goto	u5601
 12508  003C46  EF27  F01E         	goto	u5600
 12509  003C4A                     u5601:
 12510  003C4A  EF8F  F01D         	goto	l4811
 12511  003C4E                     u5600:
 12512  003C4E  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12513  003C50  EF34  F01E         	goto	u5610
 12514  003C54  5031               	movf	(dtoa@p+1)^0,w,c
 12515  003C56  E106               	bnz	u5611
 12516  003C58  0430               	decf	dtoa@p^0,w,c
 12517  003C5A  B0D8               	btfsc	status,0,c
 12518  003C5C  EF32  F01E         	goto	u5611
 12519  003C60  EF34  F01E         	goto	u5610
 12520  003C64                     u5611:
 12521  003C64  EF8F  F01D         	goto	l4811
 12522  003C68                     u5610:
 12523  003C68  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12524  003C6A  EF3F  F01E         	goto	u5621
 12525  003C6E  5033               	movf	(dtoa@w+1)^0,w,c
 12526  003C70  E108               	bnz	u5620
 12527  003C72  0432               	decf	dtoa@w^0,w,c
 12528  003C74  A0D8               	btfss	status,0,c
 12529  003C76  EF3F  F01E         	goto	u5621
 12530  003C7A  EF41  F01E         	goto	u5620
 12531  003C7E                     u5621:
 12532  003C7E  EF49  F01E         	goto	l4831
 12533  003C82                     u5620:
 12534  003C82  0101               	movlb	1	; () banked
 12535  003C84  B3B8               	btfsc	_flags& (0+255),1,b
 12536  003C86  EF47  F01E         	goto	u5631
 12537  003C8A  EF49  F01E         	goto	u5630
 12538  003C8E                     u5631:
 12539  003C8E  EF8F  F01D         	goto	l4811
 12540  003C92                     u5630:
 12541  003C92                     l4831:
 12542                           
 12543                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12544  003C92  5034               	movf	dtoa@s^0,w,c
 12545  003C94  1035               	iorwf	(dtoa@s+1)^0,w,c
 12546  003C96  A4D8               	btfss	status,2,c
 12547  003C98  EF50  F01E         	goto	u5641
 12548  003C9C  EF52  F01E         	goto	u5640
 12549  003CA0                     u5641:
 12550  003CA0  EF5A  F01E         	goto	l4835
 12551  003CA4                     u5640:
 12552  003CA4  0101               	movlb	1	; () banked
 12553  003CA6  A5B8               	btfss	_flags& (0+255),2,b
 12554  003CA8  EF58  F01E         	goto	u5651
 12555  003CAC  EF5A  F01E         	goto	u5650
 12556  003CB0                     u5651:
 12557  003CB0  EF78  F01E         	goto	l4845
 12558  003CB4                     u5650:
 12559  003CB4                     l4835:
 12560                           
 12561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12562  003CB4  063E               	decf	dtoa@i^0,f,c
 12563  003CB6  A0D8               	btfss	status,0,c
 12564  003CB8  063F               	decf	(dtoa@i+1)^0,f,c
 12565  003CBA                     
 12566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12567  003CBA  5034               	movf	dtoa@s^0,w,c
 12568  003CBC  1035               	iorwf	(dtoa@s+1)^0,w,c
 12569  003CBE  A4D8               	btfss	status,2,c
 12570  003CC0  EF64  F01E         	goto	u5661
 12571  003CC4  EF66  F01E         	goto	u5660
 12572  003CC8                     u5661:
 12573  003CC8  EF6C  F01E         	goto	l4841
 12574  003CCC                     u5660:
 12575  003CCC  0E00               	movlw	0
 12576  003CCE  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12577  003CD0  0E2B               	movlw	43
 12578  003CD2  6E2E               	movwf	_dtoa$2481^0,c
 12579  003CD4  EF70  F01E         	goto	l4843
 12580  003CD8                     l4841:
 12581  003CD8  0E00               	movlw	0
 12582  003CDA  6E2F               	movwf	(_dtoa$2481+1)^0,c
 12583  003CDC  0E2D               	movlw	45
 12584  003CDE  6E2E               	movwf	_dtoa$2481^0,c
 12585  003CE0                     l4843:
 12586  003CE0  0E00               	movlw	low _dbuf
 12587  003CE2  243E               	addwf	dtoa@i^0,w,c
 12588  003CE4  6ED9               	movwf	fsr2l,c
 12589  003CE6  0E02               	movlw	high _dbuf
 12590  003CE8  203F               	addwfc	(dtoa@i+1)^0,w,c
 12591  003CEA  6EDA               	movwf	fsr2h,c
 12592  003CEC  C02E  FFDF         	movff	_dtoa$2481,indf2
 12593  003CF0                     l4845:
 12594                           
 12595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12596  003CF0  C01C  F011         	movff	dtoa@fp,pad@fp
 12597  003CF4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12598  003CF8  0E00               	movlw	low _dbuf
 12599  003CFA  243E               	addwf	dtoa@i^0,w,c
 12600  003CFC  6E13               	movwf	pad@buf^0,c
 12601  003CFE  0E02               	movlw	high _dbuf
 12602  003D00  203F               	addwfc	(dtoa@i+1)^0,w,c
 12603  003D02  6E14               	movwf	(pad@buf+1)^0,c
 12604  003D04  C032  F015         	movff	dtoa@w,pad@p
 12605  003D08  C033  F016         	movff	dtoa@w+1,pad@p+1
 12606  003D0C  ECB4  F027         	call	_pad	;wreg free
 12607  003D10  C011  F01C         	movff	?_pad,?_dtoa
 12608  003D14  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12609  003D18  0012               	return		;funcret
 12610  003D1A                     __end_of_dtoa:
 12611                           	callstack 0
 12612                           
 12613 ;; *************** function _pad *****************
 12614 ;; Defined at:
 12615 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12616 ;; Parameters:    Size  Location     Type
 12617 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12618 ;;		 -> sprintf@f(6), 
 12619 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12620 ;;		 -> dbuf(80), 
 12621 ;;  p               2   20[COMRAM] int 
 12622 ;; Auto vars:     Size  Location     Type
 12623 ;;  w               2   25[COMRAM] int 
 12624 ;;  i               2   23[COMRAM] int 
 12625 ;; Return value:  Size  Location     Type
 12626 ;;                  2   16[COMRAM] int 
 12627 ;; Registers used:
 12628 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12629 ;; Tracked objects:
 12630 ;;		On entry : 0/0
 12631 ;;		On exit  : 0/0
 12632 ;;		Unchanged: 0/0
 12633 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12634 ;;      Params:         6       0       0       0       0       0       0
 12635 ;;      Locals:         4       0       0       0       0       0       0
 12636 ;;      Temps:          1       0       0       0       0       0       0
 12637 ;;      Totals:        11       0       0       0       0       0       0
 12638 ;;Total ram usage:       11 bytes
 12639 ;; Hardware stack levels used:    1
 12640 ;; Hardware stack levels required when called:    4
 12641 ;; This function calls:
 12642 ;;		_fputc
 12643 ;;		_fputs
 12644 ;;		_strlen
 12645 ;; This function is called by:
 12646 ;;		_dtoa
 12647 ;;		_efgtoa
 12648 ;; This function uses a non-reentrant model
 12649 ;;
 12650                           
 12651                           	psect	text40
 12652  004F68                     __ptext40:
 12653                           	callstack 0
 12654  004F68                     _pad:
 12655                           	callstack 20
 12656  004F68                     
 12657                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12658  004F68  0101               	movlb	1	; () banked
 12659  004F6A  A1B8               	btfss	_flags& (0+255),0,b
 12660  004F6C  EFBA  F027         	goto	u5211
 12661  004F70  EFBC  F027         	goto	u5210
 12662  004F74                     u5211:
 12663  004F74  EFC6  F027         	goto	l4685
 12664  004F78                     u5210:
 12665  004F78                     
 12666                           ; BSR set to: 1
 12667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12668  004F78  C013  F00A         	movff	pad@buf,fputs@s
 12669  004F7C  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12670  004F80  C011  F00C         	movff	pad@fp,fputs@fp
 12671  004F84  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12672  004F88  EC7A  F02C         	call	_fputs	;wreg free
 12673  004F8C                     l4685:
 12674                           
 12675                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12676  004F8C  BE16               	btfsc	(pad@p+1)^0,7,c
 12677  004F8E  EFCB  F027         	goto	u5221
 12678  004F92  EFCD  F027         	goto	u5220
 12679  004F96                     u5221:
 12680  004F96  EFD3  F027         	goto	l4689
 12681  004F9A                     u5220:
 12682  004F9A  C015  F01A         	movff	pad@p,pad@w
 12683  004F9E  C016  F01B         	movff	pad@p+1,pad@w+1
 12684  004FA2  EFD7  F027         	goto	l1214
 12685  004FA6                     l4689:
 12686  004FA6  0E00               	movlw	0
 12687  004FA8  6E1B               	movwf	(pad@w+1)^0,c
 12688  004FAA  0E00               	movlw	0
 12689  004FAC  6E1A               	movwf	pad@w^0,c
 12690  004FAE                     l1214:
 12691                           
 12692                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12693  004FAE  0E00               	movlw	0
 12694  004FB0  6E19               	movwf	(pad@i+1)^0,c
 12695  004FB2  0E00               	movlw	0
 12696  004FB4  6E18               	movwf	pad@i^0,c
 12697                           
 12698                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12699  004FB6  EFE9  F027         	goto	l4695
 12700  004FBA                     l4691:
 12701                           
 12702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12703  004FBA  0E00               	movlw	0
 12704  004FBC  6E02               	movwf	(fputc@c+1)^0,c
 12705  004FBE  0E20               	movlw	32
 12706  004FC0  6E01               	movwf	fputc@c^0,c
 12707  004FC2  C011  F003         	movff	pad@fp,fputc@fp
 12708  004FC6  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12709  004FCA  EC4F  F027         	call	_fputc	;wreg free
 12710  004FCE                     
 12711                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12712  004FCE  4A18               	infsnz	pad@i^0,f,c
 12713  004FD0  2A19               	incf	(pad@i+1)^0,f,c
 12714  004FD2                     l4695:
 12715                           
 12716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12717  004FD2  501A               	movf	pad@w^0,w,c
 12718  004FD4  5C18               	subwf	pad@i^0,w,c
 12719  004FD6  5019               	movf	(pad@i+1)^0,w,c
 12720  004FD8  0A80               	xorlw	128
 12721  004FDA  6E17               	movwf	??_pad^0,c
 12722  004FDC  501B               	movf	(pad@w+1)^0,w,c
 12723  004FDE  0A80               	xorlw	128
 12724  004FE0  5817               	subwfb	??_pad^0,w,c
 12725  004FE2  A0D8               	btfss	status,0,c
 12726  004FE4  EFF6  F027         	goto	u5231
 12727  004FE8  EFF8  F027         	goto	u5230
 12728  004FEC                     u5231:
 12729  004FEC  EFDD  F027         	goto	l4691
 12730  004FF0                     u5230:
 12731  004FF0                     
 12732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12733  004FF0  0101               	movlb	1	; () banked
 12734  004FF2  B1B8               	btfsc	_flags& (0+255),0,b
 12735  004FF4  EFFE  F027         	goto	u5241
 12736  004FF8  EF00  F028         	goto	u5240
 12737  004FFC                     u5241:
 12738  004FFC  EF0A  F028         	goto	l4699
 12739  005000                     u5240:
 12740  005000                     
 12741                           ; BSR set to: 1
 12742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12743  005000  C013  F00A         	movff	pad@buf,fputs@s
 12744  005004  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12745  005008  C011  F00C         	movff	pad@fp,fputs@fp
 12746  00500C  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12747  005010  EC7A  F02C         	call	_fputs	;wreg free
 12748  005014                     l4699:
 12749                           
 12750                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12751  005014  C013  F001         	movff	pad@buf,strlen@s
 12752  005018  C014  F002         	movff	pad@buf+1,strlen@s+1
 12753  00501C  EC89  F02D         	call	_strlen	;wreg free
 12754  005020  501A               	movf	pad@w^0,w,c
 12755  005022  2401               	addwf	?_strlen^0,w,c
 12756  005024  6E11               	movwf	?_pad^0,c
 12757  005026  501B               	movf	(pad@w+1)^0,w,c
 12758  005028  2002               	addwfc	(?_strlen+1)^0,w,c
 12759  00502A  6E12               	movwf	(?_pad+1)^0,c
 12760  00502C  0012               	return		;funcret
 12761  00502E                     __end_of_pad:
 12762                           	callstack 0
 12763                           
 12764 ;; *************** function _strlen *****************
 12765 ;; Defined at:
 12766 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12767 ;; Parameters:    Size  Location     Type
 12768 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12769 ;;		 -> dbuf(80), 
 12770 ;; Auto vars:     Size  Location     Type
 12771 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12772 ;;		 -> dbuf(80), 
 12773 ;; Return value:  Size  Location     Type
 12774 ;;                  2    0[COMRAM] unsigned int 
 12775 ;; Registers used:
 12776 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12777 ;; Tracked objects:
 12778 ;;		On entry : 0/0
 12779 ;;		On exit  : 0/0
 12780 ;;		Unchanged: 0/0
 12781 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12782 ;;      Params:         2       0       0       0       0       0       0
 12783 ;;      Locals:         2       0       0       0       0       0       0
 12784 ;;      Temps:          0       0       0       0       0       0       0
 12785 ;;      Totals:         4       0       0       0       0       0       0
 12786 ;;Total ram usage:        4 bytes
 12787 ;; Hardware stack levels used:    1
 12788 ;; Hardware stack levels required when called:    1
 12789 ;; This function calls:
 12790 ;;		Nothing
 12791 ;; This function is called by:
 12792 ;;		_pad
 12793 ;; This function uses a non-reentrant model
 12794 ;;
 12795                           
 12796                           	psect	text41
 12797  005B12                     __ptext41:
 12798                           	callstack 0
 12799  005B12                     _strlen:
 12800                           	callstack 22
 12801  005B12  C001  F003         	movff	strlen@s,strlen@a
 12802  005B16  C002  F004         	movff	strlen@s+1,strlen@a+1
 12803  005B1A  EF91  F02D         	goto	l4141
 12804  005B1E                     l4139:
 12805  005B1E  4A01               	infsnz	strlen@s^0,f,c
 12806  005B20  2A02               	incf	(strlen@s+1)^0,f,c
 12807  005B22                     l4141:
 12808  005B22  C001  FFD9         	movff	strlen@s,fsr2l
 12809  005B26  C002  FFDA         	movff	strlen@s+1,fsr2h
 12810  005B2A  50DF               	movf	indf2,w,c
 12811  005B2C  A4D8               	btfss	status,2,c
 12812  005B2E  EF9B  F02D         	goto	u4351
 12813  005B32  EF9D  F02D         	goto	u4350
 12814  005B36                     u4351:
 12815  005B36  EF8F  F02D         	goto	l4139
 12816  005B3A                     u4350:
 12817  005B3A  5003               	movf	strlen@a^0,w,c
 12818  005B3C  5C01               	subwf	strlen@s^0,w,c
 12819  005B3E  6E01               	movwf	?_strlen^0,c
 12820  005B40  5004               	movf	(strlen@a+1)^0,w,c
 12821  005B42  5802               	subwfb	(strlen@s+1)^0,w,c
 12822  005B44  6E02               	movwf	(?_strlen+1)^0,c
 12823  005B46  0012               	return		;funcret
 12824  005B48                     __end_of_strlen:
 12825                           	callstack 0
 12826                           
 12827 ;; *************** function _fputs *****************
 12828 ;; Defined at:
 12829 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12830 ;; Parameters:    Size  Location     Type
 12831 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12832 ;;		 -> dbuf(80), 
 12833 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12834 ;;		 -> sprintf@f(6), 
 12835 ;; Auto vars:     Size  Location     Type
 12836 ;;  i               2   14[COMRAM] int 
 12837 ;;  c               1   13[COMRAM] unsigned char 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  2    9[COMRAM] int 
 12840 ;; Registers used:
 12841 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12847 ;;      Params:         4       0       0       0       0       0       0
 12848 ;;      Locals:         3       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0
 12850 ;;      Totals:         7       0       0       0       0       0       0
 12851 ;;Total ram usage:        7 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:    3
 12854 ;; This function calls:
 12855 ;;		_fputc
 12856 ;; This function is called by:
 12857 ;;		_pad
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861                           	psect	text42
 12862  0058F4                     __ptext42:
 12863                           	callstack 0
 12864  0058F4                     _fputs:
 12865                           	callstack 20
 12866  0058F4  0E00               	movlw	0
 12867  0058F6  6E10               	movwf	(fputs@i+1)^0,c
 12868  0058F8  0E00               	movlw	0
 12869  0058FA  6E0F               	movwf	fputs@i^0,c
 12870  0058FC  EF8B  F02C         	goto	l4135
 12871  005900                     l4131:
 12872  005900  C00E  F001         	movff	fputs@c,fputc@c
 12873  005904  6A02               	clrf	(fputc@c+1)^0,c
 12874  005906  C00C  F003         	movff	fputs@fp,fputc@fp
 12875  00590A  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12876  00590E  EC4F  F027         	call	_fputc	;wreg free
 12877  005912  4A0F               	infsnz	fputs@i^0,f,c
 12878  005914  2A10               	incf	(fputs@i+1)^0,f,c
 12879  005916                     l4135:
 12880  005916  500F               	movf	fputs@i^0,w,c
 12881  005918  240A               	addwf	fputs@s^0,w,c
 12882  00591A  6ED9               	movwf	fsr2l,c
 12883  00591C  5010               	movf	(fputs@i+1)^0,w,c
 12884  00591E  200B               	addwfc	(fputs@s+1)^0,w,c
 12885  005920  6EDA               	movwf	fsr2h,c
 12886  005922  50DF               	movf	indf2,w,c
 12887  005924  6E0E               	movwf	fputs@c^0,c
 12888  005926  500E               	movf	fputs@c^0,w,c
 12889  005928  A4D8               	btfss	status,2,c
 12890  00592A  EF99  F02C         	goto	u4341
 12891  00592E  EF9B  F02C         	goto	u4340
 12892  005932                     u4341:
 12893  005932  EF80  F02C         	goto	l4131
 12894  005936                     u4340:
 12895  005936  0012               	return		;funcret
 12896  005938                     __end_of_fputs:
 12897                           	callstack 0
 12898                           
 12899 ;; *************** function _fputc *****************
 12900 ;; Defined at:
 12901 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12902 ;; Parameters:    Size  Location     Type
 12903 ;;  c               2    0[COMRAM] int 
 12904 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12905 ;;		 -> sprintf@f(6), 
 12906 ;; Auto vars:     Size  Location     Type
 12907 ;;		None
 12908 ;; Return value:  Size  Location     Type
 12909 ;;                  2    0[COMRAM] int 
 12910 ;; Registers used:
 12911 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12912 ;; Tracked objects:
 12913 ;;		On entry : 0/0
 12914 ;;		On exit  : 0/0
 12915 ;;		Unchanged: 0/0
 12916 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12917 ;;      Params:         4       0       0       0       0       0       0
 12918 ;;      Locals:         0       0       0       0       0       0       0
 12919 ;;      Temps:          5       0       0       0       0       0       0
 12920 ;;      Totals:         9       0       0       0       0       0       0
 12921 ;;Total ram usage:        9 bytes
 12922 ;; Hardware stack levels used:    1
 12923 ;; Hardware stack levels required when called:    2
 12924 ;; This function calls:
 12925 ;;		_putch
 12926 ;; This function is called by:
 12927 ;;		_pad
 12928 ;;		_vfpfcnvrt
 12929 ;;		_fputs
 12930 ;; This function uses a non-reentrant model
 12931 ;;
 12932                           
 12933                           	psect	text43
 12934  004E9E                     __ptext43:
 12935                           	callstack 0
 12936  004E9E                     _fputc:
 12937                           	callstack 23
 12938  004E9E  5003               	movf	fputc@fp^0,w,c
 12939  004EA0  1004               	iorwf	(fputc@fp+1)^0,w,c
 12940  004EA2  B4D8               	btfsc	status,2,c
 12941  004EA4  EF56  F027         	goto	u3911
 12942  004EA8  EF58  F027         	goto	u3910
 12943  004EAC                     u3911:
 12944  004EAC  EF61  F027         	goto	l3917
 12945  004EB0                     u3910:
 12946  004EB0  5003               	movf	fputc@fp^0,w,c
 12947  004EB2  1004               	iorwf	(fputc@fp+1)^0,w,c
 12948  004EB4  A4D8               	btfss	status,2,c
 12949  004EB6  EF5F  F027         	goto	u3921
 12950  004EBA  EF61  F027         	goto	u3920
 12951  004EBE                     u3921:
 12952  004EBE  EF66  F027         	goto	l3919
 12953  004EC2                     u3920:
 12954  004EC2                     l3917:
 12955  004EC2  5001               	movf	fputc@c^0,w,c
 12956  004EC4  EC74  F02E         	call	_putch
 12957  004EC8  EFB3  F027         	goto	l1474
 12958  004ECC                     l3919:
 12959  004ECC  EE20 F004          	lfsr	2,4
 12960  004ED0  5003               	movf	fputc@fp^0,w,c
 12961  004ED2  26D9               	addwf	fsr2l,f,c
 12962  004ED4  5004               	movf	(fputc@fp+1)^0,w,c
 12963  004ED6  22DA               	addwfc	fsr2h,f,c
 12964  004ED8  50DE               	movf	postinc2,w,c
 12965  004EDA  10DE               	iorwf	postinc2,w,c
 12966  004EDC  B4D8               	btfsc	status,2,c
 12967  004EDE  EF73  F027         	goto	u3931
 12968  004EE2  EF75  F027         	goto	u3930
 12969  004EE6                     u3931:
 12970  004EE6  EF90  F027         	goto	l3923
 12971  004EEA                     u3930:
 12972  004EEA  EE20 F004          	lfsr	2,4
 12973  004EEE  5003               	movf	fputc@fp^0,w,c
 12974  004EF0  26D9               	addwf	fsr2l,f,c
 12975  004EF2  5004               	movf	(fputc@fp+1)^0,w,c
 12976  004EF4  22DA               	addwfc	fsr2h,f,c
 12977  004EF6  EE10 F002          	lfsr	1,2
 12978  004EFA  5003               	movf	fputc@fp^0,w,c
 12979  004EFC  26E1               	addwf	fsr1l,f,c
 12980  004EFE  5004               	movf	(fputc@fp+1)^0,w,c
 12981  004F00  22E2               	addwfc	fsr1h,f,c
 12982  004F02  50DE               	movf	postinc2,w,c
 12983  004F04  5CE6               	subwf	postinc1,w,c
 12984  004F06  50E6               	movf	postinc1,w,c
 12985  004F08  0A80               	xorlw	128
 12986  004F0A  6E09               	movwf	(??_fputc+4)^0,c
 12987  004F0C  50DE               	movf	postinc2,w,c
 12988  004F0E  0A80               	xorlw	128
 12989  004F10  5809               	subwfb	(??_fputc+4)^0,w,c
 12990  004F12  B0D8               	btfsc	status,0,c
 12991  004F14  EF8E  F027         	goto	u3941
 12992  004F18  EF90  F027         	goto	u3940
 12993  004F1C                     u3941:
 12994  004F1C  EFB3  F027         	goto	l1474
 12995  004F20                     u3940:
 12996  004F20                     l3923:
 12997  004F20  EE20 F002          	lfsr	2,2
 12998  004F24  5003               	movf	fputc@fp^0,w,c
 12999  004F26  26D9               	addwf	fsr2l,f,c
 13000  004F28  5004               	movf	(fputc@fp+1)^0,w,c
 13001  004F2A  22DA               	addwfc	fsr2h,f,c
 13002  004F2C  CFDE F005          	movff	postinc2,??_fputc
 13003  004F30  CFDD F006          	movff	postdec2,??_fputc+1
 13004  004F34  C003  FFD9         	movff	fputc@fp,fsr2l
 13005  004F38  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13006  004F3C  CFDE F007          	movff	postinc2,??_fputc+2
 13007  004F40  CFDD F008          	movff	postdec2,??_fputc+3
 13008  004F44  5005               	movf	??_fputc^0,w,c
 13009  004F46  2407               	addwf	(??_fputc+2)^0,w,c
 13010  004F48  6ED9               	movwf	fsr2l,c
 13011  004F4A  5006               	movf	(??_fputc+1)^0,w,c
 13012  004F4C  2008               	addwfc	(??_fputc+3)^0,w,c
 13013  004F4E  6EDA               	movwf	fsr2h,c
 13014  004F50  C001  FFDF         	movff	fputc@c,indf2
 13015  004F54  EE20 F002          	lfsr	2,2
 13016  004F58  5003               	movf	fputc@fp^0,w,c
 13017  004F5A  26D9               	addwf	fsr2l,f,c
 13018  004F5C  5004               	movf	(fputc@fp+1)^0,w,c
 13019  004F5E  22DA               	addwfc	fsr2h,f,c
 13020  004F60  2ADE               	incf	postinc2,f,c
 13021  004F62  0E00               	movlw	0
 13022  004F64  22DD               	addwfc	postdec2,f,c
 13023  004F66                     l1474:
 13024  004F66  0012               	return		;funcret
 13025  004F68                     __end_of_fputc:
 13026                           	callstack 0
 13027                           
 13028 ;; *************** function _putch *****************
 13029 ;; Defined at:
 13030 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13031 ;; Parameters:    Size  Location     Type
 13032 ;;  c               1    wreg     unsigned char 
 13033 ;; Auto vars:     Size  Location     Type
 13034 ;;  c               1    0[COMRAM] unsigned char 
 13035 ;; Return value:  Size  Location     Type
 13036 ;;                  1    wreg      void 
 13037 ;; Registers used:
 13038 ;;		wreg
 13039 ;; Tracked objects:
 13040 ;;		On entry : 0/0
 13041 ;;		On exit  : 0/0
 13042 ;;		Unchanged: 0/0
 13043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13044 ;;      Params:         0       0       0       0       0       0       0
 13045 ;;      Locals:         0       0       0       0       0       0       0
 13046 ;;      Temps:          0       0       0       0       0       0       0
 13047 ;;      Totals:         0       0       0       0       0       0       0
 13048 ;;Total ram usage:        0 bytes
 13049 ;; Hardware stack levels used:    1
 13050 ;; Hardware stack levels required when called:    1
 13051 ;; This function calls:
 13052 ;;		Nothing
 13053 ;; This function is called by:
 13054 ;;		_fputc
 13055 ;; This function uses a non-reentrant model
 13056 ;;
 13057                           
 13058                           	psect	text44
 13059  005CE8                     __ptext44:
 13060                           	callstack 0
 13061  005CE8                     _putch:
 13062                           	callstack 23
 13063  005CE8  0012               	return		;funcret
 13064  005CEA                     __end_of_putch:
 13065                           	callstack 0
 13066                           
 13067 ;; *************** function _abs *****************
 13068 ;; Defined at:
 13069 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13070 ;; Parameters:    Size  Location     Type
 13071 ;;  a               2   18[COMRAM] int 
 13072 ;; Auto vars:     Size  Location     Type
 13073 ;;		None
 13074 ;; Return value:  Size  Location     Type
 13075 ;;                  2   18[COMRAM] int 
 13076 ;; Registers used:
 13077 ;;		wreg, status,2, status,0
 13078 ;; Tracked objects:
 13079 ;;		On entry : 0/0
 13080 ;;		On exit  : 0/0
 13081 ;;		Unchanged: 0/0
 13082 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13083 ;;      Params:         2       0       0       0       0       0       0
 13084 ;;      Locals:         0       0       0       0       0       0       0
 13085 ;;      Temps:          2       0       0       0       0       0       0
 13086 ;;      Totals:         4       0       0       0       0       0       0
 13087 ;;Total ram usage:        4 bytes
 13088 ;; Hardware stack levels used:    1
 13089 ;; Hardware stack levels required when called:    1
 13090 ;; This function calls:
 13091 ;;		Nothing
 13092 ;; This function is called by:
 13093 ;;		_dtoa
 13094 ;; This function uses a non-reentrant model
 13095 ;;
 13096                           
 13097                           	psect	text45
 13098  00597A                     __ptext45:
 13099                           	callstack 0
 13100  00597A                     _abs:
 13101                           	callstack 23
 13102  00597A  BE14               	btfsc	(abs@a+1)^0,7,c
 13103  00597C  EFCA  F02C         	goto	u5250
 13104  005980  5014               	movf	(abs@a+1)^0,w,c
 13105  005982  E106               	bnz	u5251
 13106  005984  0413               	decf	abs@a^0,w,c
 13107  005986  B0D8               	btfsc	status,0,c
 13108  005988  EFC8  F02C         	goto	u5251
 13109  00598C  EFCA  F02C         	goto	u5250
 13110  005990                     u5251:
 13111  005990  EFD8  F02C         	goto	l1395
 13112  005994                     u5250:
 13113  005994  C013  F015         	movff	abs@a,??_abs
 13114  005998  C014  F016         	movff	abs@a+1,??_abs+1
 13115  00599C  1E15               	comf	??_abs^0,f,c
 13116  00599E  1E16               	comf	(??_abs+1)^0,f,c
 13117  0059A0  4A15               	infsnz	??_abs^0,f,c
 13118  0059A2  2A16               	incf	(??_abs+1)^0,f,c
 13119  0059A4  C015  F013         	movff	??_abs,?_abs
 13120  0059A8  C016  F014         	movff	??_abs+1,?_abs+1
 13121  0059AC  EFDC  F02C         	goto	l1398
 13122  0059B0                     l1395:
 13123  0059B0  C013  F013         	movff	abs@a,?_abs
 13124  0059B4  C014  F014         	movff	abs@a+1,?_abs+1
 13125  0059B8                     l1398:
 13126  0059B8  0012               	return		;funcret
 13127  0059BA                     __end_of_abs:
 13128                           	callstack 0
 13129                           
 13130 ;; *************** function ___aomod *****************
 13131 ;; Defined at:
 13132 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13133 ;; Parameters:    Size  Location     Type
 13134 ;;  dividend        8    0[COMRAM] long long 
 13135 ;;  divisor         8    8[COMRAM] long long 
 13136 ;; Auto vars:     Size  Location     Type
 13137 ;;  sign            1   17[COMRAM] unsigned char 
 13138 ;;  counter         1   16[COMRAM] unsigned char 
 13139 ;; Return value:  Size  Location     Type
 13140 ;;                  8    0[COMRAM] long long 
 13141 ;; Registers used:
 13142 ;;		wreg, status,2, status,0
 13143 ;; Tracked objects:
 13144 ;;		On entry : 0/0
 13145 ;;		On exit  : 0/0
 13146 ;;		Unchanged: 0/0
 13147 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13148 ;;      Params:        16       0       0       0       0       0       0
 13149 ;;      Locals:         2       0       0       0       0       0       0
 13150 ;;      Temps:          0       0       0       0       0       0       0
 13151 ;;      Totals:        18       0       0       0       0       0       0
 13152 ;;Total ram usage:       18 bytes
 13153 ;; Hardware stack levels used:    1
 13154 ;; Hardware stack levels required when called:    1
 13155 ;; This function calls:
 13156 ;;		Nothing
 13157 ;; This function is called by:
 13158 ;;		_dtoa
 13159 ;; This function uses a non-reentrant model
 13160 ;;
 13161                           
 13162                           	psect	text46
 13163  00473E                     __ptext46:
 13164                           	callstack 0
 13165  00473E                     ___aomod:
 13166                           	callstack 23
 13167  00473E  0E00               	movlw	0
 13168  004740  6E12               	movwf	___aomod@sign^0,c
 13169  004742  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13170  004744  EFA8  F023         	goto	u4450
 13171  004748  EFA6  F023         	goto	u4451
 13172  00474C                     u4451:
 13173  00474C  EFBA  F023         	goto	l4209
 13174  004750                     u4450:
 13175  004750  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13176  004752  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13177  004754  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13178  004756  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13179  004758  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13180  00475A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13181  00475C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13182  00475E  6C01               	negf	___aomod@dividend^0,c
 13183  004760  0E00               	movlw	0
 13184  004762  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13185  004764  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13186  004766  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13187  004768  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13188  00476A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13189  00476C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13190  00476E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13191  004770  0E01               	movlw	1
 13192  004772  6E12               	movwf	___aomod@sign^0,c
 13193  004774                     l4209:
 13194  004774  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13195  004776  EFC1  F023         	goto	u4460
 13196  00477A  EFBF  F023         	goto	u4461
 13197  00477E                     u4461:
 13198  00477E  EFD1  F023         	goto	l4213
 13199  004782                     u4460:
 13200  004782  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13201  004784  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13202  004786  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13203  004788  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13204  00478A  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13205  00478C  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13206  00478E  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13207  004790  6C09               	negf	___aomod@divisor^0,c
 13208  004792  0E00               	movlw	0
 13209  004794  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13210  004796  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13211  004798  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13212  00479A  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13213  00479C  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13214  00479E  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13215  0047A0  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13216  0047A2                     l4213:
 13217  0047A2  5009               	movf	___aomod@divisor^0,w,c
 13218  0047A4  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13219  0047A6  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13220  0047A8  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13221  0047AA  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13222  0047AC  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13223  0047AE  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13224  0047B0  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13225  0047B2  B4D8               	btfsc	status,2,c
 13226  0047B4  EFDE  F023         	goto	u4471
 13227  0047B8  EFE0  F023         	goto	u4470
 13228  0047BC                     u4471:
 13229  0047BC  EF28  F024         	goto	l4229
 13230  0047C0                     u4470:
 13231  0047C0  0E01               	movlw	1
 13232  0047C2  6E11               	movwf	___aomod@counter^0,c
 13233  0047C4  EFEE  F023         	goto	l4219
 13234  0047C8                     l4217:
 13235  0047C8  90D8               	bcf	status,0,c
 13236  0047CA  3609               	rlcf	___aomod@divisor^0,f,c
 13237  0047CC  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13238  0047CE  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13239  0047D0  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13240  0047D2  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13241  0047D4  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13242  0047D6  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13243  0047D8  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13244  0047DA  2A11               	incf	___aomod@counter^0,f,c
 13245  0047DC                     l4219:
 13246  0047DC  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13247  0047DE  EFF3  F023         	goto	u4481
 13248  0047E2  EFF5  F023         	goto	u4480
 13249  0047E6                     u4481:
 13250  0047E6  EFE4  F023         	goto	l4217
 13251  0047EA                     u4480:
 13252  0047EA                     l4221:
 13253  0047EA  5009               	movf	___aomod@divisor^0,w,c
 13254  0047EC  5C01               	subwf	___aomod@dividend^0,w,c
 13255  0047EE  500A               	movf	(___aomod@divisor+1)^0,w,c
 13256  0047F0  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13257  0047F2  500B               	movf	(___aomod@divisor+2)^0,w,c
 13258  0047F4  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13259  0047F6  500C               	movf	(___aomod@divisor+3)^0,w,c
 13260  0047F8  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13261  0047FA  500D               	movf	(___aomod@divisor+4)^0,w,c
 13262  0047FC  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13263  0047FE  500E               	movf	(___aomod@divisor+5)^0,w,c
 13264  004800  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13265  004802  500F               	movf	(___aomod@divisor+6)^0,w,c
 13266  004804  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13267  004806  5010               	movf	(___aomod@divisor+7)^0,w,c
 13268  004808  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13269  00480A  A0D8               	btfss	status,0,c
 13270  00480C  EF0A  F024         	goto	u4491
 13271  004810  EF0C  F024         	goto	u4490
 13272  004814                     u4491:
 13273  004814  EF1C  F024         	goto	l4225
 13274  004818                     u4490:
 13275  004818  5009               	movf	___aomod@divisor^0,w,c
 13276  00481A  5E01               	subwf	___aomod@dividend^0,f,c
 13277  00481C  500A               	movf	(___aomod@divisor+1)^0,w,c
 13278  00481E  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13279  004820  500B               	movf	(___aomod@divisor+2)^0,w,c
 13280  004822  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13281  004824  500C               	movf	(___aomod@divisor+3)^0,w,c
 13282  004826  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13283  004828  500D               	movf	(___aomod@divisor+4)^0,w,c
 13284  00482A  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13285  00482C  500E               	movf	(___aomod@divisor+5)^0,w,c
 13286  00482E  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13287  004830  500F               	movf	(___aomod@divisor+6)^0,w,c
 13288  004832  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13289  004834  5010               	movf	(___aomod@divisor+7)^0,w,c
 13290  004836  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13291  004838                     l4225:
 13292  004838  90D8               	bcf	status,0,c
 13293  00483A  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13294  00483C  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13295  00483E  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13296  004840  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13297  004842  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13298  004844  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13299  004846  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13300  004848  3209               	rrcf	___aomod@divisor^0,f,c
 13301  00484A  2E11               	decfsz	___aomod@counter^0,f,c
 13302  00484C  EFF5  F023         	goto	l4221
 13303  004850                     l4229:
 13304  004850  5012               	movf	___aomod@sign^0,w,c
 13305  004852  B4D8               	btfsc	status,2,c
 13306  004854  EF2E  F024         	goto	u4501
 13307  004858  EF30  F024         	goto	u4500
 13308  00485C                     u4501:
 13309  00485C  EF40  F024         	goto	l4233
 13310  004860                     u4500:
 13311  004860  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13312  004862  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13313  004864  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13314  004866  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13315  004868  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13316  00486A  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13317  00486C  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13318  00486E  6C01               	negf	___aomod@dividend^0,c
 13319  004870  0E00               	movlw	0
 13320  004872  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13321  004874  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13322  004876  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13323  004878  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13324  00487A  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13325  00487C  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13326  00487E  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13327  004880                     l4233:
 13328  004880  C001  F001         	movff	___aomod@dividend,?___aomod
 13329  004884  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13330  004888  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13331  00488C  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13332  004890  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13333  004894  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13334  004898  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13335  00489C  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13336  0048A0  0012               	return		;funcret
 13337  0048A2                     __end_of___aomod:
 13338                           	callstack 0
 13339                           
 13340 ;; *************** function ___aodiv *****************
 13341 ;; Defined at:
 13342 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13343 ;; Parameters:    Size  Location     Type
 13344 ;;  dividend        8    0[COMRAM] long long 
 13345 ;;  divisor         8    8[COMRAM] long long 
 13346 ;; Auto vars:     Size  Location     Type
 13347 ;;  quotient        8   18[COMRAM] long long 
 13348 ;;  sign            1   17[COMRAM] unsigned char 
 13349 ;;  counter         1   16[COMRAM] unsigned char 
 13350 ;; Return value:  Size  Location     Type
 13351 ;;                  8    0[COMRAM] long long 
 13352 ;; Registers used:
 13353 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13354 ;; Tracked objects:
 13355 ;;		On entry : 0/0
 13356 ;;		On exit  : 0/0
 13357 ;;		Unchanged: 0/0
 13358 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13359 ;;      Params:        16       0       0       0       0       0       0
 13360 ;;      Locals:        10       0       0       0       0       0       0
 13361 ;;      Temps:          0       0       0       0       0       0       0
 13362 ;;      Totals:        26       0       0       0       0       0       0
 13363 ;;Total ram usage:       26 bytes
 13364 ;; Hardware stack levels used:    1
 13365 ;; Hardware stack levels required when called:    1
 13366 ;; This function calls:
 13367 ;;		Nothing
 13368 ;; This function is called by:
 13369 ;;		_dtoa
 13370 ;; This function uses a non-reentrant model
 13371 ;;
 13372                           
 13373                           	psect	text47
 13374  004432                     __ptext47:
 13375                           	callstack 0
 13376  004432                     ___aodiv:
 13377                           	callstack 23
 13378  004432  0E00               	movlw	0
 13379  004434  6E12               	movwf	___aodiv@sign^0,c
 13380  004436  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13381  004438  EF22  F022         	goto	u4380
 13382  00443C  EF20  F022         	goto	u4381
 13383  004440                     u4381:
 13384  004440  EF34  F022         	goto	l4165
 13385  004444                     u4380:
 13386  004444  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13387  004446  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13388  004448  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13389  00444A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13390  00444C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13391  00444E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13392  004450  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13393  004452  6C09               	negf	___aodiv@divisor^0,c
 13394  004454  0E00               	movlw	0
 13395  004456  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13396  004458  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13397  00445A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13398  00445C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13399  00445E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13400  004460  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13401  004462  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13402  004464  0E01               	movlw	1
 13403  004466  6E12               	movwf	___aodiv@sign^0,c
 13404  004468                     l4165:
 13405  004468  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13406  00446A  EF3B  F022         	goto	u4390
 13407  00446E  EF39  F022         	goto	u4391
 13408  004472                     u4391:
 13409  004472  EF4D  F022         	goto	l4171
 13410  004476                     u4390:
 13411  004476  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13412  004478  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13413  00447A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13414  00447C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13415  00447E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13416  004480  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13417  004482  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13418  004484  6C01               	negf	___aodiv@dividend^0,c
 13419  004486  0E00               	movlw	0
 13420  004488  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13421  00448A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13422  00448C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13423  00448E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13424  004490  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13425  004492  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13426  004494  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13427  004496  0E01               	movlw	1
 13428  004498  1A12               	xorwf	___aodiv@sign^0,f,c
 13429  00449A                     l4171:
 13430  00449A  EE20  F013         	lfsr	2,___aodiv@quotient
 13431  00449E  0E07               	movlw	7
 13432  0044A0                     u4401:
 13433  0044A0  6ADE               	clrf	postinc2,c
 13434  0044A2  06E8               	decf	wreg,f,c
 13435  0044A4  E2FD               	bc	u4401
 13436  0044A6  5009               	movf	___aodiv@divisor^0,w,c
 13437  0044A8  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13438  0044AA  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13439  0044AC  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13440  0044AE  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13441  0044B0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13442  0044B2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13443  0044B4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13444  0044B6  B4D8               	btfsc	status,2,c
 13445  0044B8  EF60  F022         	goto	u4411
 13446  0044BC  EF62  F022         	goto	u4410
 13447  0044C0                     u4411:
 13448  0044C0  EFB4  F022         	goto	l4193
 13449  0044C4                     u4410:
 13450  0044C4  0E01               	movlw	1
 13451  0044C6  6E11               	movwf	___aodiv@counter^0,c
 13452  0044C8  EF70  F022         	goto	l4179
 13453  0044CC                     l4177:
 13454  0044CC  90D8               	bcf	status,0,c
 13455  0044CE  3609               	rlcf	___aodiv@divisor^0,f,c
 13456  0044D0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13457  0044D2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13458  0044D4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13459  0044D6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13460  0044D8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13461  0044DA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13462  0044DC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13463  0044DE  2A11               	incf	___aodiv@counter^0,f,c
 13464  0044E0                     l4179:
 13465  0044E0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13466  0044E2  EF75  F022         	goto	u4421
 13467  0044E6  EF77  F022         	goto	u4420
 13468  0044EA                     u4421:
 13469  0044EA  EF66  F022         	goto	l4177
 13470  0044EE                     u4420:
 13471  0044EE                     l4181:
 13472  0044EE  90D8               	bcf	status,0,c
 13473  0044F0  3613               	rlcf	___aodiv@quotient^0,f,c
 13474  0044F2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13475  0044F4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13476  0044F6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13477  0044F8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13478  0044FA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13479  0044FC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13480  0044FE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13481  004500  5009               	movf	___aodiv@divisor^0,w,c
 13482  004502  5C01               	subwf	___aodiv@dividend^0,w,c
 13483  004504  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13484  004506  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13485  004508  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13486  00450A  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13487  00450C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13488  00450E  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13489  004510  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13490  004512  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13491  004514  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13492  004516  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13493  004518  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13494  00451A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13495  00451C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13496  00451E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13497  004520  A0D8               	btfss	status,0,c
 13498  004522  EF95  F022         	goto	u4431
 13499  004526  EF97  F022         	goto	u4430
 13500  00452A                     u4431:
 13501  00452A  EFA8  F022         	goto	l4189
 13502  00452E                     u4430:
 13503  00452E  5009               	movf	___aodiv@divisor^0,w,c
 13504  004530  5E01               	subwf	___aodiv@dividend^0,f,c
 13505  004532  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13506  004534  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13507  004536  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13508  004538  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13509  00453A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13510  00453C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13511  00453E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13512  004540  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13513  004542  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13514  004544  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13515  004546  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13516  004548  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13517  00454A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13518  00454C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13519  00454E  8013               	bsf	___aodiv@quotient^0,0,c
 13520  004550                     l4189:
 13521  004550  90D8               	bcf	status,0,c
 13522  004552  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13523  004554  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13524  004556  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13525  004558  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13526  00455A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13527  00455C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13528  00455E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13529  004560  3209               	rrcf	___aodiv@divisor^0,f,c
 13530  004562  2E11               	decfsz	___aodiv@counter^0,f,c
 13531  004564  EF77  F022         	goto	l4181
 13532  004568                     l4193:
 13533  004568  5012               	movf	___aodiv@sign^0,w,c
 13534  00456A  B4D8               	btfsc	status,2,c
 13535  00456C  EFBA  F022         	goto	u4441
 13536  004570  EFBC  F022         	goto	u4440
 13537  004574                     u4441:
 13538  004574  EFCC  F022         	goto	l4197
 13539  004578                     u4440:
 13540  004578  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13541  00457A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13542  00457C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13543  00457E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13544  004580  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13545  004582  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13546  004584  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13547  004586  6C13               	negf	___aodiv@quotient^0,c
 13548  004588  0E00               	movlw	0
 13549  00458A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13550  00458C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13551  00458E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13552  004590  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13553  004592  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13554  004594  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13555  004596  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13556  004598                     l4197:
 13557  004598  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13558  00459C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13559  0045A0  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13560  0045A4  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13561  0045A8  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13562  0045AC  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13563  0045B0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13564  0045B4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13565  0045B8  0012               	return		;funcret
 13566  0045BA                     __end_of___aodiv:
 13567                           	callstack 0
 13568                           
 13569 ;; *************** function _atoi *****************
 13570 ;; Defined at:
 13571 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13572 ;; Parameters:    Size  Location     Type
 13573 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13574 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 13575 ;;		 -> STR_8(18), STR_6(18), STR_4(18), STR_2(15), 
 13576 ;; Auto vars:     Size  Location     Type
 13577 ;;  n               2   20[COMRAM] int 
 13578 ;;  neg             2   13[COMRAM] int 
 13579 ;; Return value:  Size  Location     Type
 13580 ;;                  2    7[COMRAM] int 
 13581 ;; Registers used:
 13582 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13583 ;; Tracked objects:
 13584 ;;		On entry : 0/0
 13585 ;;		On exit  : 0/0
 13586 ;;		Unchanged: 0/0
 13587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13588 ;;      Params:         2       0       0       0       0       0       0
 13589 ;;      Locals:         9       0       0       0       0       0       0
 13590 ;;      Temps:          4       0       0       0       0       0       0
 13591 ;;      Totals:        15       0       0       0       0       0       0
 13592 ;;Total ram usage:       15 bytes
 13593 ;; Hardware stack levels used:    1
 13594 ;; Hardware stack levels required when called:    2
 13595 ;; This function calls:
 13596 ;;		___wmul
 13597 ;;		_isdigit
 13598 ;;		_isspace
 13599 ;; This function is called by:
 13600 ;;		_vfpfcnvrt
 13601 ;; This function uses a non-reentrant model
 13602 ;;
 13603                           
 13604                           	psect	text48
 13605  0042A2                     __ptext48:
 13606                           	callstack 0
 13607  0042A2                     _atoi:
 13608                           	callstack 23
 13609  0042A2  0E00               	movlw	0
 13610  0042A4  6E16               	movwf	(atoi@n+1)^0,c
 13611  0042A6  0E00               	movlw	0
 13612  0042A8  6E15               	movwf	atoi@n^0,c
 13613  0042AA  0E00               	movlw	0
 13614  0042AC  6E0F               	movwf	(atoi@neg+1)^0,c
 13615  0042AE  0E00               	movlw	0
 13616  0042B0  6E0E               	movwf	atoi@neg^0,c
 13617  0042B2  EF5D  F021         	goto	l5151
 13618  0042B6                     l5149:
 13619  0042B6  4A08               	infsnz	atoi@s^0,f,c
 13620  0042B8  2A09               	incf	(atoi@s+1)^0,f,c
 13621  0042BA                     l5151:
 13622  0042BA  0E01               	movlw	1
 13623  0042BC  6E14               	movwf	_atoi$2573^0,c
 13624  0042BE  C008  FFF6         	movff	atoi@s,tblptrl
 13625  0042C2  C009  FFF7         	movff	atoi@s+1,tblptrh
 13626  0042C6                     	if	0	;tblptru may be non-zero
 13627  0042C6                     	endif
 13628  0042C6                     	if	0	;tblptru may be non-zero
 13629  0042C6                     	endif
 13630  0042C6  0008               	tblrd		*
 13631  0042C8  50F5               	movf	tablat,w,c
 13632  0042CA  0A20               	xorlw	32
 13633  0042CC  B4D8               	btfsc	status,2,c
 13634  0042CE  EF6B  F021         	goto	u6191
 13635  0042D2  EF6D  F021         	goto	u6190
 13636  0042D6                     u6191:
 13637  0042D6  EF8A  F021         	goto	l5159
 13638  0042DA                     u6190:
 13639  0042DA  0EF7               	movlw	247
 13640  0042DC  6E0A               	movwf	??_atoi^0,c
 13641  0042DE  0EFF               	movlw	255
 13642  0042E0  6E0B               	movwf	(??_atoi+1)^0,c
 13643  0042E2  C008  FFF6         	movff	atoi@s,tblptrl
 13644  0042E6  C009  FFF7         	movff	atoi@s+1,tblptrh
 13645  0042EA                     	if	0	;tblptru may be non-zero
 13646  0042EA                     	endif
 13647  0042EA                     	if	0	;tblptru may be non-zero
 13648  0042EA                     	endif
 13649  0042EA  0008               	tblrd		*
 13650  0042EC  50F5               	movf	tablat,w,c
 13651  0042EE  6E0C               	movwf	(??_atoi+2)^0,c
 13652  0042F0  6A0D               	clrf	(??_atoi+3)^0,c
 13653  0042F2  500A               	movf	??_atoi^0,w,c
 13654  0042F4  260C               	addwf	(??_atoi+2)^0,f,c
 13655  0042F6  500B               	movf	(??_atoi+1)^0,w,c
 13656  0042F8  220D               	addwfc	(??_atoi+3)^0,f,c
 13657  0042FA  500D               	movf	(??_atoi+3)^0,w,c
 13658  0042FC  E109               	bnz	u6200
 13659  0042FE  0E05               	movlw	5
 13660  004300  5C0C               	subwf	(??_atoi+2)^0,w,c
 13661  004302  A0D8               	btfss	status,0,c
 13662  004304  EF86  F021         	goto	u6201
 13663  004308  EF88  F021         	goto	u6200
 13664  00430C                     u6201:
 13665  00430C  EF8A  F021         	goto	l5159
 13666  004310                     u6200:
 13667  004310  0E00               	movlw	0
 13668  004312  6E14               	movwf	_atoi$2573^0,c
 13669  004314                     l5159:
 13670  004314  C014  F010         	movff	_atoi$2573,_atoi$2572
 13671  004318  6A11               	clrf	(_atoi$2572+1)^0,c
 13672  00431A  5010               	movf	_atoi$2572^0,w,c
 13673  00431C  1011               	iorwf	(_atoi$2572+1)^0,w,c
 13674  00431E  A4D8               	btfss	status,2,c
 13675  004320  EF94  F021         	goto	u6211
 13676  004324  EF96  F021         	goto	u6210
 13677  004328                     u6211:
 13678  004328  EF5B  F021         	goto	l5149
 13679  00432C                     u6210:
 13680  00432C  EFA0  F021         	goto	l5169
 13681  004330                     l5165:
 13682  004330  0E00               	movlw	0
 13683  004332  6E0F               	movwf	(atoi@neg+1)^0,c
 13684  004334  0E01               	movlw	1
 13685  004336  6E0E               	movwf	atoi@neg^0,c
 13686  004338                     l5167:
 13687  004338  4A08               	infsnz	atoi@s^0,f,c
 13688  00433A  2A09               	incf	(atoi@s+1)^0,f,c
 13689  00433C  EFD5  F021         	goto	l5175
 13690  004340                     l5169:
 13691  004340  C008  FFF6         	movff	atoi@s,tblptrl
 13692  004344  C009  FFF7         	movff	atoi@s+1,tblptrh
 13693  004348                     	if	0	;tblptru may be non-zero
 13694  004348                     	endif
 13695  004348                     	if	0	;tblptru may be non-zero
 13696  004348                     	endif
 13697  004348  0008               	tblrd		*
 13698  00434A  50F5               	movf	tablat,w,c
 13699  00434C  6E0A               	movwf	??_atoi^0,c
 13700  00434E  6A0B               	clrf	(??_atoi+1)^0,c
 13701                           
 13702                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13703                           ; Switch size 1, requested type "simple"
 13704                           ; Number of cases is 1, Range of values is 0 to 0
 13705                           ; switch strategies available:
 13706                           ; Name         Instructions Cycles
 13707                           ; simple_byte            4     3 (average)
 13708                           ;	Chosen strategy is simple_byte
 13709  004350  500B               	movf	(??_atoi+1)^0,w,c
 13710  004352  0A00               	xorlw	0	; case 0
 13711  004354  B4D8               	btfsc	status,2,c
 13712  004356  EFAF  F021         	goto	l6309
 13713  00435A  EFD5  F021         	goto	l5175
 13714  00435E                     l6309:
 13715                           
 13716                           ; Switch size 1, requested type "simple"
 13717                           ; Number of cases is 2, Range of values is 43 to 45
 13718                           ; switch strategies available:
 13719                           ; Name         Instructions Cycles
 13720                           ; simple_byte            7     4 (average)
 13721                           ;	Chosen strategy is simple_byte
 13722  00435E  500A               	movf	??_atoi^0,w,c
 13723  004360  0A2B               	xorlw	43	; case 43
 13724  004362  B4D8               	btfsc	status,2,c
 13725  004364  EF9C  F021         	goto	l5167
 13726  004368  0A06               	xorlw	6	; case 45
 13727  00436A  B4D8               	btfsc	status,2,c
 13728  00436C  EF98  F021         	goto	l5165
 13729  004370  EFD5  F021         	goto	l5175
 13730  004374                     l5171:
 13731  004374  C015  F001         	movff	atoi@n,___wmul@multiplier
 13732  004378  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13733  00437C  0E00               	movlw	0
 13734  00437E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13735  004380  0E0A               	movlw	10
 13736  004382  6E03               	movwf	___wmul@multiplicand^0,c
 13737  004384  EC18  F02E         	call	___wmul	;wreg free
 13738  004388  C008  FFF6         	movff	atoi@s,tblptrl
 13739  00438C  C009  FFF7         	movff	atoi@s+1,tblptrh
 13740  004390                     	if	0	;tblptru may be non-zero
 13741  004390                     	endif
 13742  004390                     	if	0	;tblptru may be non-zero
 13743  004390                     	endif
 13744  004390  0008               	tblrd		*
 13745  004392  50F5               	movf	tablat,w,c
 13746  004394  5E01               	subwf	?___wmul^0,f,c
 13747  004396  0E00               	movlw	0
 13748  004398  5A02               	subwfb	(?___wmul+1)^0,f,c
 13749  00439A  0E30               	movlw	48
 13750  00439C  2401               	addwf	?___wmul^0,w,c
 13751  00439E  6E15               	movwf	atoi@n^0,c
 13752  0043A0  0E00               	movlw	0
 13753  0043A2  2002               	addwfc	(?___wmul+1)^0,w,c
 13754  0043A4  6E16               	movwf	(atoi@n+1)^0,c
 13755  0043A6  EF9C  F021         	goto	l5167
 13756  0043AA                     l5175:
 13757  0043AA  0ED0               	movlw	208
 13758  0043AC  6E0A               	movwf	??_atoi^0,c
 13759  0043AE  0EFF               	movlw	255
 13760  0043B0  6E0B               	movwf	(??_atoi+1)^0,c
 13761  0043B2  C008  FFF6         	movff	atoi@s,tblptrl
 13762  0043B6  C009  FFF7         	movff	atoi@s+1,tblptrh
 13763  0043BA                     	if	0	;tblptru may be non-zero
 13764  0043BA                     	endif
 13765  0043BA                     	if	0	;tblptru may be non-zero
 13766  0043BA                     	endif
 13767  0043BA  0008               	tblrd		*
 13768  0043BC  50F5               	movf	tablat,w,c
 13769  0043BE  6E0C               	movwf	(??_atoi+2)^0,c
 13770  0043C0  6A0D               	clrf	(??_atoi+3)^0,c
 13771  0043C2  500A               	movf	??_atoi^0,w,c
 13772  0043C4  260C               	addwf	(??_atoi+2)^0,f,c
 13773  0043C6  500B               	movf	(??_atoi+1)^0,w,c
 13774  0043C8  220D               	addwfc	(??_atoi+3)^0,f,c
 13775  0043CA  500D               	movf	(??_atoi+3)^0,w,c
 13776  0043CC  E10A               	bnz	u6220
 13777  0043CE  0E0A               	movlw	10
 13778  0043D0  5C0C               	subwf	(??_atoi+2)^0,w,c
 13779  0043D2  A0D8               	btfss	status,0,c
 13780  0043D4  EFEE  F021         	goto	u6221
 13781  0043D8  EFF1  F021         	goto	u6220
 13782  0043DC                     u6221:
 13783  0043DC  0E01               	movlw	1
 13784  0043DE  EFF2  F021         	goto	u6230
 13785  0043E2                     u6220:
 13786  0043E2  0E00               	movlw	0
 13787  0043E4                     u6230:
 13788  0043E4  6E12               	movwf	_atoi$2574^0,c
 13789  0043E6  6A13               	clrf	(_atoi$2574+1)^0,c
 13790  0043E8  5012               	movf	_atoi$2574^0,w,c
 13791  0043EA  1013               	iorwf	(_atoi$2574+1)^0,w,c
 13792  0043EC  A4D8               	btfss	status,2,c
 13793  0043EE  EFFB  F021         	goto	u6241
 13794  0043F2  EFFD  F021         	goto	u6240
 13795  0043F6                     u6241:
 13796  0043F6  EFBA  F021         	goto	l5171
 13797  0043FA                     u6240:
 13798  0043FA  500E               	movf	atoi@neg^0,w,c
 13799  0043FC  100F               	iorwf	(atoi@neg+1)^0,w,c
 13800  0043FE  A4D8               	btfss	status,2,c
 13801  004400  EF04  F022         	goto	u6251
 13802  004404  EF06  F022         	goto	u6250
 13803  004408                     u6251:
 13804  004408  EF14  F022         	goto	l1426
 13805  00440C                     u6250:
 13806  00440C  C015  F00A         	movff	atoi@n,??_atoi
 13807  004410  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13808  004414  1E0A               	comf	??_atoi^0,f,c
 13809  004416  1E0B               	comf	(??_atoi+1)^0,f,c
 13810  004418  4A0A               	infsnz	??_atoi^0,f,c
 13811  00441A  2A0B               	incf	(??_atoi+1)^0,f,c
 13812  00441C  C00A  F008         	movff	??_atoi,?_atoi
 13813  004420  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13814  004424  EF18  F022         	goto	l1429
 13815  004428                     l1426:
 13816  004428  C015  F008         	movff	atoi@n,?_atoi
 13817  00442C  C016  F009         	movff	atoi@n+1,?_atoi+1
 13818  004430                     l1429:
 13819  004430  0012               	return		;funcret
 13820  004432                     __end_of_atoi:
 13821                           	callstack 0
 13822                           
 13823 ;; *************** function _isspace *****************
 13824 ;; Defined at:
 13825 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13826 ;; Parameters:    Size  Location     Type
 13827 ;;  c               2    0[COMRAM] int 
 13828 ;; Auto vars:     Size  Location     Type
 13829 ;;		None
 13830 ;; Return value:  Size  Location     Type
 13831 ;;                  2    0[COMRAM] int 
 13832 ;; Registers used:
 13833 ;;		wreg, status,2, status,0
 13834 ;; Tracked objects:
 13835 ;;		On entry : 0/0
 13836 ;;		On exit  : 0/0
 13837 ;;		Unchanged: 0/0
 13838 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13839 ;;      Params:         2       0       0       0       0       0       0
 13840 ;;      Locals:         1       0       0       0       0       0       0
 13841 ;;      Temps:          4       0       0       0       0       0       0
 13842 ;;      Totals:         7       0       0       0       0       0       0
 13843 ;;Total ram usage:        7 bytes
 13844 ;; Hardware stack levels used:    1
 13845 ;; Hardware stack levels required when called:    1
 13846 ;; This function calls:
 13847 ;;		Nothing
 13848 ;; This function is called by:
 13849 ;;		_atoi
 13850 ;; This function uses a non-reentrant model
 13851 ;;
 13852                           
 13853                           	psect	text49
 13854  00585C                     __ptext49:
 13855                           	callstack 0
 13856  00585C                     _isspace:
 13857                           	callstack 23
 13858  00585C  0E01               	movlw	1
 13859  00585E  6E07               	movwf	_isspace$2603^0,c
 13860  005860  0E20               	movlw	32
 13861  005862  1801               	xorwf	isspace@c^0,w,c
 13862  005864  1002               	iorwf	(isspace@c+1)^0,w,c
 13863  005866  B4D8               	btfsc	status,2,c
 13864  005868  EF38  F02C         	goto	u5501
 13865  00586C  EF3A  F02C         	goto	u5500
 13866  005870                     u5501:
 13867  005870  EF53  F02C         	goto	l4783
 13868  005874                     u5500:
 13869  005874  0EF7               	movlw	247
 13870  005876  6E03               	movwf	??_isspace^0,c
 13871  005878  0EFF               	movlw	255
 13872  00587A  6E04               	movwf	(??_isspace+1)^0,c
 13873  00587C  C001  F005         	movff	isspace@c,??_isspace+2
 13874  005880  C002  F006         	movff	isspace@c+1,??_isspace+3
 13875  005884  5003               	movf	??_isspace^0,w,c
 13876  005886  2605               	addwf	(??_isspace+2)^0,f,c
 13877  005888  5004               	movf	(??_isspace+1)^0,w,c
 13878  00588A  2206               	addwfc	(??_isspace+3)^0,f,c
 13879  00588C  5006               	movf	(??_isspace+3)^0,w,c
 13880  00588E  E109               	bnz	u5510
 13881  005890  0E05               	movlw	5
 13882  005892  5C05               	subwf	(??_isspace+2)^0,w,c
 13883  005894  A0D8               	btfss	status,0,c
 13884  005896  EF4F  F02C         	goto	u5511
 13885  00589A  EF51  F02C         	goto	u5510
 13886  00589E                     u5511:
 13887  00589E  EF53  F02C         	goto	l4783
 13888  0058A2                     u5510:
 13889  0058A2  0E00               	movlw	0
 13890  0058A4  6E07               	movwf	_isspace$2603^0,c
 13891  0058A6                     l4783:
 13892  0058A6  C007  F001         	movff	_isspace$2603,?_isspace
 13893  0058AA  6A02               	clrf	(?_isspace+1)^0,c
 13894  0058AC  0012               	return		;funcret
 13895  0058AE                     __end_of_isspace:
 13896                           	callstack 0
 13897                           
 13898 ;; *************** function _isdigit *****************
 13899 ;; Defined at:
 13900 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13901 ;; Parameters:    Size  Location     Type
 13902 ;;  c               2    0[COMRAM] int 
 13903 ;; Auto vars:     Size  Location     Type
 13904 ;;		None
 13905 ;; Return value:  Size  Location     Type
 13906 ;;                  2    0[COMRAM] int 
 13907 ;; Registers used:
 13908 ;;		wreg, status,2, status,0
 13909 ;; Tracked objects:
 13910 ;;		On entry : 0/0
 13911 ;;		On exit  : 0/0
 13912 ;;		Unchanged: 0/0
 13913 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13914 ;;      Params:         2       0       0       0       0       0       0
 13915 ;;      Locals:         0       0       0       0       0       0       0
 13916 ;;      Temps:          4       0       0       0       0       0       0
 13917 ;;      Totals:         6       0       0       0       0       0       0
 13918 ;;Total ram usage:        6 bytes
 13919 ;; Hardware stack levels used:    1
 13920 ;; Hardware stack levels required when called:    1
 13921 ;; This function calls:
 13922 ;;		Nothing
 13923 ;; This function is called by:
 13924 ;;		_vfpfcnvrt
 13925 ;;		_atoi
 13926 ;; This function uses a non-reentrant model
 13927 ;;
 13928                           
 13929                           	psect	text50
 13930  005AA4                     __ptext50:
 13931                           	callstack 0
 13932  005AA4                     _isdigit:
 13933                           	callstack 24
 13934  005AA4  0ED0               	movlw	208
 13935  005AA6  6E03               	movwf	??_isdigit^0,c
 13936  005AA8  0EFF               	movlw	255
 13937  005AAA  6E04               	movwf	(??_isdigit+1)^0,c
 13938  005AAC  C001  F005         	movff	isdigit@c,??_isdigit+2
 13939  005AB0  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 13940  005AB4  5003               	movf	??_isdigit^0,w,c
 13941  005AB6  2605               	addwf	(??_isdigit+2)^0,f,c
 13942  005AB8  5004               	movf	(??_isdigit+1)^0,w,c
 13943  005ABA  2206               	addwfc	(??_isdigit+3)^0,f,c
 13944  005ABC  5006               	movf	(??_isdigit+3)^0,w,c
 13945  005ABE  E10A               	bnz	u5480
 13946  005AC0  0E0A               	movlw	10
 13947  005AC2  5C05               	subwf	(??_isdigit+2)^0,w,c
 13948  005AC4  A0D8               	btfss	status,0,c
 13949  005AC6  EF67  F02D         	goto	u5481
 13950  005ACA  EF6A  F02D         	goto	u5480
 13951  005ACE                     u5481:
 13952  005ACE  0E01               	movlw	1
 13953  005AD0  EF6B  F02D         	goto	u5490
 13954  005AD4                     u5480:
 13955  005AD4  0E00               	movlw	0
 13956  005AD6                     u5490:
 13957  005AD6  6E01               	movwf	?_isdigit^0,c
 13958  005AD8  6A02               	clrf	(?_isdigit+1)^0,c
 13959  005ADA  0012               	return		;funcret
 13960  005ADC                     __end_of_isdigit:
 13961                           	callstack 0
 13962                           
 13963 ;; *************** function ___wmul *****************
 13964 ;; Defined at:
 13965 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 13966 ;; Parameters:    Size  Location     Type
 13967 ;;  multiplier      2    0[COMRAM] unsigned int 
 13968 ;;  multiplicand    2    2[COMRAM] unsigned int 
 13969 ;; Auto vars:     Size  Location     Type
 13970 ;;  product         2    4[COMRAM] unsigned int 
 13971 ;; Return value:  Size  Location     Type
 13972 ;;                  2    0[COMRAM] unsigned int 
 13973 ;; Registers used:
 13974 ;;		wreg, status,2, status,0, prodl, prodh
 13975 ;; Tracked objects:
 13976 ;;		On entry : 0/0
 13977 ;;		On exit  : 0/0
 13978 ;;		Unchanged: 0/0
 13979 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13980 ;;      Params:         4       0       0       0       0       0       0
 13981 ;;      Locals:         2       0       0       0       0       0       0
 13982 ;;      Temps:          0       0       0       0       0       0       0
 13983 ;;      Totals:         6       0       0       0       0       0       0
 13984 ;;Total ram usage:        6 bytes
 13985 ;; Hardware stack levels used:    1
 13986 ;; Hardware stack levels required when called:    1
 13987 ;; This function calls:
 13988 ;;		Nothing
 13989 ;; This function is called by:
 13990 ;;		_atoi
 13991 ;; This function uses a non-reentrant model
 13992 ;;
 13993                           
 13994                           	psect	text51
 13995  005C30                     __ptext51:
 13996                           	callstack 0
 13997  005C30                     ___wmul:
 13998                           	callstack 23
 13999  005C30  5001               	movf	___wmul@multiplier^0,w,c
 14000  005C32  0203               	mulwf	___wmul@multiplicand^0,c
 14001  005C34  CFF3 F005          	movff	prodl,___wmul@product
 14002  005C38  CFF4 F006          	movff	prodh,___wmul@product+1
 14003  005C3C  5001               	movf	___wmul@multiplier^0,w,c
 14004  005C3E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14005  005C40  50F3               	movf	243,w,c
 14006  005C42  2606               	addwf	(___wmul@product+1)^0,f,c
 14007  005C44  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14008  005C46  0203               	mulwf	___wmul@multiplicand^0,c
 14009  005C48  50F3               	movf	243,w,c
 14010  005C4A  2606               	addwf	(___wmul@product+1)^0,f,c
 14011  005C4C  C005  F001         	movff	___wmul@product,?___wmul
 14012  005C50  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14013  005C54  0012               	return		;funcret
 14014  005C56                     __end_of___wmul:
 14015                           	callstack 0
 14016                           
 14017 ;; *************** function _eepromWrite *****************
 14018 ;; Defined at:
 14019 ;;		line 62 in file "fs_eeprom.c"
 14020 ;; Parameters:    Size  Location     Type
 14021 ;;  address         1    wreg     unsigned char 
 14022 ;;  data            1    0[COMRAM] unsigned char 
 14023 ;; Auto vars:     Size  Location     Type
 14024 ;;  address         1    1[COMRAM] unsigned char 
 14025 ;; Return value:  Size  Location     Type
 14026 ;;                  1    wreg      void 
 14027 ;; Registers used:
 14028 ;;		wreg, status,2
 14029 ;; Tracked objects:
 14030 ;;		On entry : 0/0
 14031 ;;		On exit  : 0/0
 14032 ;;		Unchanged: 0/0
 14033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14034 ;;      Params:         1       0       0       0       0       0       0
 14035 ;;      Locals:         1       0       0       0       0       0       0
 14036 ;;      Temps:          0       0       0       0       0       0       0
 14037 ;;      Totals:         2       0       0       0       0       0       0
 14038 ;;Total ram usage:        2 bytes
 14039 ;; Hardware stack levels used:    1
 14040 ;; Hardware stack levels required when called:    1
 14041 ;; This function calls:
 14042 ;;		Nothing
 14043 ;; This function is called by:
 14044 ;;		_stateMachine
 14045 ;; This function uses a non-reentrant model
 14046 ;;
 14047                           
 14048                           	psect	text52
 14049  005BB2                     __ptext52:
 14050                           	callstack 0
 14051  005BB2                     _eepromWrite:
 14052                           	callstack 27
 14053                           
 14054                           ;incstack = 0
 14055                           ;eepromWrite@address stored from wreg
 14056  005BB2  6E02               	movwf	eepromWrite@address^0,c
 14057  005BB4                     
 14058                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 14059  005BB4  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14060  005BB8                     
 14061                           ;fs_eeprom.c: 68:     EEDATA = data;
 14062  005BB8  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14063  005BBC                     
 14064                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14065  005BBC  9EA6               	bcf	166,7,c	;volsfr
 14066  005BBE                     
 14067                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14068  005BBE  9CA6               	bcf	166,6,c	;volsfr
 14069  005BC0                     
 14070                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14071  005BC0  84A6               	bsf	166,2,c	;volsfr
 14072  005BC2                     
 14073                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14074  005BC2  0E55               	movlw	85
 14075  005BC4  6EA7               	movwf	167,c	;volsfr
 14076  005BC6                     
 14077                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14078  005BC6  0EAA               	movlw	170
 14079  005BC8  6EA7               	movwf	167,c	;volsfr
 14080  005BCA                     
 14081                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14082  005BCA  82A6               	bsf	166,1,c	;volsfr
 14083  005BCC                     l76:
 14084                           
 14085                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14086  005BCC  A8A1               	btfss	161,4,c	;volatile
 14087  005BCE  EFEB  F02D         	goto	u6791
 14088  005BD2  EFED  F02D         	goto	u6790
 14089  005BD6                     u6791:
 14090  005BD6  EFE6  F02D         	goto	l76
 14091  005BDA                     u6790:
 14092  005BDA                     
 14093                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14094  005BDA  98A1               	bcf	161,4,c	;volatile
 14095                           
 14096                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14097  005BDC  94A6               	bcf	166,2,c	;volsfr
 14098  005BDE  0012               	return		;funcret
 14099  005BE0                     __end_of_eepromWrite:
 14100                           	callstack 0
 14101                           
 14102 ;; *************** function _Lcd_Write_String *****************
 14103 ;; Defined at:
 14104 ;;		line 155 in file "fs_lcd.c"
 14105 ;; Parameters:    Size  Location     Type
 14106 ;;  a               2    4[COMRAM] PTR unsigned char 
 14107 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 14108 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 14109 ;;		 -> stateMachine@textCursor2(16), 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;  i               2    8[COMRAM] int 
 14112 ;; Return value:  Size  Location     Type
 14113 ;;                  1    wreg      void 
 14114 ;; Registers used:
 14115 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14116 ;; Tracked objects:
 14117 ;;		On entry : 0/0
 14118 ;;		On exit  : 0/0
 14119 ;;		Unchanged: 0/0
 14120 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14121 ;;      Params:         2       0       0       0       0       0       0
 14122 ;;      Locals:         2       0       0       0       0       0       0
 14123 ;;      Temps:          2       0       0       0       0       0       0
 14124 ;;      Totals:         6       0       0       0       0       0       0
 14125 ;;Total ram usage:        6 bytes
 14126 ;; Hardware stack levels used:    1
 14127 ;; Hardware stack levels required when called:    3
 14128 ;; This function calls:
 14129 ;;		_Lcd_Write_Char
 14130 ;; This function is called by:
 14131 ;;		_stateMachine
 14132 ;; This function uses a non-reentrant model
 14133 ;;
 14134                           
 14135                           	psect	text53
 14136  005386                     __ptext53:
 14137                           	callstack 0
 14138  005386                     _Lcd_Write_String:
 14139                           	callstack 25
 14140  005386                     
 14141                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14142  005386  0E00               	movlw	0
 14143  005388  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14144  00538A  0E00               	movlw	0
 14145  00538C  6E09               	movwf	Lcd_Write_String@i^0,c
 14146  00538E  EFE3  F029         	goto	l5635
 14147  005392                     l5631:
 14148                           
 14149                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14150  005392  5009               	movf	Lcd_Write_String@i^0,w,c
 14151  005394  2405               	addwf	Lcd_Write_String@a^0,w,c
 14152  005396  6E07               	movwf	??_Lcd_Write_String^0,c
 14153  005398  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14154  00539A  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14155  00539C  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14156  00539E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14157  0053A2  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14158  0053A6  6AF8               	clrf	tblptru,c
 14159  0053A8  0E05               	movlw	(high __ramtop+-1)
 14160  0053AA  64F7               	cpfsgt	tblptrh,c
 14161  0053AC  D003               	bra	u6827
 14162  0053AE  0008               	tblrd		*
 14163  0053B0  50F5               	movf	tablat,w,c
 14164  0053B2  D005               	bra	u6820
 14165  0053B4                     u6827:
 14166  0053B4  CFF6 FFE1          	movff	tblptrl,fsr1l
 14167  0053B8  CFF7 FFE2          	movff	tblptrh,fsr1h
 14168  0053BC  50E7               	movf	indf1,w,c
 14169  0053BE                     u6820:
 14170  0053BE  ECA4  F02D         	call	_Lcd_Write_Char
 14171  0053C2  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14172  0053C4  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14173  0053C6                     l5635:
 14174  0053C6  5009               	movf	Lcd_Write_String@i^0,w,c
 14175  0053C8  2405               	addwf	Lcd_Write_String@a^0,w,c
 14176  0053CA  6E07               	movwf	??_Lcd_Write_String^0,c
 14177  0053CC  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14178  0053CE  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14179  0053D0  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14180  0053D2  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14181  0053D6  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14182  0053DA  6AF8               	clrf	tblptru,c
 14183  0053DC  0E05               	movlw	(high __ramtop+-1)
 14184  0053DE  64F7               	cpfsgt	tblptrh,c
 14185  0053E0  D003               	bra	u6837
 14186  0053E2  0008               	tblrd		*
 14187  0053E4  50F5               	movf	tablat,w,c
 14188  0053E6  D005               	bra	u6830
 14189  0053E8                     u6837:
 14190  0053E8  CFF6 FFE1          	movff	tblptrl,fsr1l
 14191  0053EC  CFF7 FFE2          	movff	tblptrh,fsr1h
 14192  0053F0  50E7               	movf	indf1,w,c
 14193  0053F2                     u6830:
 14194  0053F2  0900               	iorlw	0
 14195  0053F4  A4D8               	btfss	status,2,c
 14196  0053F6  EFFF  F029         	goto	u6841
 14197  0053FA  EF01  F02A         	goto	u6840
 14198  0053FE                     u6841:
 14199  0053FE  EFC9  F029         	goto	l5631
 14200  005402                     u6840:
 14201  005402  0012               	return		;funcret
 14202  005404                     __end_of_Lcd_Write_String:
 14203                           	callstack 0
 14204                           
 14205 ;; *************** function _Lcd_Write_Char *****************
 14206 ;; Defined at:
 14207 ;;		line 132 in file "fs_lcd.c"
 14208 ;; Parameters:    Size  Location     Type
 14209 ;;  a               1    wreg     unsigned char 
 14210 ;; Auto vars:     Size  Location     Type
 14211 ;;  a               1    3[COMRAM] unsigned char 
 14212 ;;  y               1    2[COMRAM] unsigned char 
 14213 ;;  temp            1    1[COMRAM] unsigned char 
 14214 ;; Return value:  Size  Location     Type
 14215 ;;                  1    wreg      void 
 14216 ;; Registers used:
 14217 ;;		wreg, status,2, status,0, cstack
 14218 ;; Tracked objects:
 14219 ;;		On entry : 0/0
 14220 ;;		On exit  : 0/0
 14221 ;;		Unchanged: 0/0
 14222 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14223 ;;      Params:         0       0       0       0       0       0       0
 14224 ;;      Locals:         3       0       0       0       0       0       0
 14225 ;;      Temps:          0       0       0       0       0       0       0
 14226 ;;      Totals:         3       0       0       0       0       0       0
 14227 ;;Total ram usage:        3 bytes
 14228 ;; Hardware stack levels used:    1
 14229 ;; Hardware stack levels required when called:    2
 14230 ;; This function calls:
 14231 ;;		_Lcd_Port
 14232 ;; This function is called by:
 14233 ;;		_Lcd_Write_String
 14234 ;; This function uses a non-reentrant model
 14235 ;;
 14236                           
 14237                           	psect	text54
 14238  005B48                     __ptext54:
 14239                           	callstack 0
 14240  005B48                     _Lcd_Write_Char:
 14241                           	callstack 25
 14242                           
 14243                           ;incstack = 0
 14244                           ;Lcd_Write_Char@a stored from wreg
 14245  005B48  6E04               	movwf	Lcd_Write_Char@a^0,c
 14246  005B4A                     
 14247                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14248  005B4A  5004               	movf	Lcd_Write_Char@a^0,w,c
 14249  005B4C  0B0F               	andlw	15
 14250  005B4E  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14251                           
 14252                           ;fs_lcd.c: 136:    y = a&0xF0;
 14253  005B50  5004               	movf	Lcd_Write_Char@a^0,w,c
 14254  005B52  0BF0               	andlw	240
 14255  005B54  6E03               	movwf	Lcd_Write_Char@y^0,c
 14256  005B56                     
 14257                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14258  005B56  8C83               	bsf	131,6,c	;volatile
 14259  005B58                     
 14260                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14261  005B58  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14262  005B5A  0B0F               	andlw	15
 14263  005B5C  ECAE  F02B         	call	_Lcd_Port
 14264  005B60                     
 14265                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14266  005B60  8E83               	bsf	131,7,c	;volatile
 14267  005B62                     
 14268                           ;fs_lcd.c: 140:    _delay((unsigned long)((30)*(64000000UL/4000000.0)));
 14269  005B62  0EA0               	movlw	160
 14270  005B64                     u7827:
 14271  005B64  2EE8               	decfsz	wreg,f,c
 14272  005B66  D7FE               	bra	u7827
 14273  005B68                     
 14274                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14275  005B68  9E83               	bcf	131,7,c	;volatile
 14276  005B6A                     
 14277                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14278  005B6A  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14279  005B6C  ECAE  F02B         	call	_Lcd_Port
 14280  005B70                     
 14281                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14282  005B70  8E83               	bsf	131,7,c	;volatile
 14283  005B72                     
 14284                           ;fs_lcd.c: 144:    _delay((unsigned long)((25)*(64000000UL/4000000.0)));
 14285  005B72  0E85               	movlw	133
 14286  005B74                     u7837:
 14287  005B74  2EE8               	decfsz	wreg,f,c
 14288  005B76  D7FE               	bra	u7837
 14289  005B78  F000               	nop	
 14290  005B7A                     
 14291                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14292  005B7A  9E83               	bcf	131,7,c	;volatile
 14293  005B7C  0012               	return		;funcret
 14294  005B7E                     __end_of_Lcd_Write_Char:
 14295                           	callstack 0
 14296                           
 14297 ;; *************** function _Lcd_Set_Cursor *****************
 14298 ;; Defined at:
 14299 ;;		line 62 in file "fs_lcd.c"
 14300 ;; Parameters:    Size  Location     Type
 14301 ;;  a               1    wreg     unsigned char 
 14302 ;;  b               1    3[COMRAM] unsigned char 
 14303 ;; Auto vars:     Size  Location     Type
 14304 ;;  a               1    4[COMRAM] unsigned char 
 14305 ;;  temp            1    7[COMRAM] unsigned char 
 14306 ;;  y               1    6[COMRAM] unsigned char 
 14307 ;;  z               1    5[COMRAM] unsigned char 
 14308 ;; Return value:  Size  Location     Type
 14309 ;;                  1    wreg      void 
 14310 ;; Registers used:
 14311 ;;		wreg, status,2, status,0, cstack
 14312 ;; Tracked objects:
 14313 ;;		On entry : 0/0
 14314 ;;		On exit  : 0/0
 14315 ;;		Unchanged: 0/0
 14316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14317 ;;      Params:         1       0       0       0       0       0       0
 14318 ;;      Locals:         4       0       0       0       0       0       0
 14319 ;;      Temps:          0       0       0       0       0       0       0
 14320 ;;      Totals:         5       0       0       0       0       0       0
 14321 ;;Total ram usage:        5 bytes
 14322 ;; Hardware stack levels used:    1
 14323 ;; Hardware stack levels required when called:    3
 14324 ;; This function calls:
 14325 ;;		_Lcd_Cmd
 14326 ;; This function is called by:
 14327 ;;		_stateMachine
 14328 ;; This function uses a non-reentrant model
 14329 ;;
 14330                           
 14331                           	psect	text55
 14332  00563A                     __ptext55:
 14333                           	callstack 0
 14334  00563A                     _Lcd_Set_Cursor:
 14335                           	callstack 25
 14336                           
 14337                           ;incstack = 0
 14338                           ;Lcd_Set_Cursor@a stored from wreg
 14339  00563A  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14340  00563C                     
 14341                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14342  00563C  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14343  00563E  A4D8               	btfss	status,2,c
 14344  005640  EF24  F02B         	goto	u6801
 14345  005644  EF26  F02B         	goto	u6800
 14346  005648                     u6801:
 14347  005648  EF37  F02B         	goto	l5621
 14348  00564C                     u6800:
 14349  00564C                     
 14350                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14351  00564C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14352  00564E  0F7F               	addlw	127
 14353  005650  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14354                           
 14355                           ;fs_lcd.c: 68:       z = temp>>4;
 14356  005652  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14357  005654  0B0F               	andlw	15
 14358  005656  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14359                           
 14360                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14361  005658  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14362  00565A  0B0F               	andlw	15
 14363  00565C  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14364  00565E                     
 14365                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14366  00565E  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14367  005660  EC4A  F02E         	call	_Lcd_Cmd
 14368  005664                     
 14369                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14370  005664  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14371  005666  EC4A  F02E         	call	_Lcd_Cmd
 14372                           
 14373                           ;fs_lcd.c: 72:    }
 14374  00566A  EF4F  F02B         	goto	l116
 14375  00566E                     l5621:
 14376  00566E  0E02               	movlw	2
 14377  005670  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14378  005672  A4D8               	btfss	status,2,c
 14379  005674  EF3E  F02B         	goto	u6811
 14380  005678  EF40  F02B         	goto	u6810
 14381  00567C                     u6811:
 14382  00567C  EF4F  F02B         	goto	l116
 14383  005680                     u6810:
 14384  005680                     
 14385                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14386  005680  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14387  005682  0FBF               	addlw	191
 14388  005684  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14389                           
 14390                           ;fs_lcd.c: 76:       z = temp>>4;
 14391  005686  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14392  005688  0B0F               	andlw	15
 14393  00568A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14394                           
 14395                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14396  00568C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14397  00568E  0B0F               	andlw	15
 14398  005690  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14399  005692                     
 14400                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14401  005692  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14402  005694  EC4A  F02E         	call	_Lcd_Cmd
 14403  005698                     
 14404                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14405  005698  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14406  00569A  EC4A  F02E         	call	_Lcd_Cmd
 14407  00569E                     l116:
 14408  00569E  0012               	return		;funcret
 14409  0056A0                     __end_of_Lcd_Set_Cursor:
 14410                           	callstack 0
 14411                           
 14412 ;; *************** function _buttonControlFlags *****************
 14413 ;; Defined at:
 14414 ;;		line 79 in file "fs_menu_controller.c"
 14415 ;; Parameters:    Size  Location     Type
 14416 ;;		None
 14417 ;; Auto vars:     Size  Location     Type
 14418 ;;		None
 14419 ;; Return value:  Size  Location     Type
 14420 ;;                  1    wreg      void 
 14421 ;; Registers used:
 14422 ;;		None
 14423 ;; Tracked objects:
 14424 ;;		On entry : 0/0
 14425 ;;		On exit  : 0/0
 14426 ;;		Unchanged: 0/0
 14427 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14428 ;;      Params:         0       0       0       0       0       0       0
 14429 ;;      Locals:         0       0       0       0       0       0       0
 14430 ;;      Temps:          0       0       0       0       0       0       0
 14431 ;;      Totals:         0       0       0       0       0       0       0
 14432 ;;Total ram usage:        0 bytes
 14433 ;; Hardware stack levels used:    1
 14434 ;; Hardware stack levels required when called:    1
 14435 ;; This function calls:
 14436 ;;		Nothing
 14437 ;; This function is called by:
 14438 ;;		_menuControl
 14439 ;; This function uses a non-reentrant model
 14440 ;;
 14441                           
 14442                           	psect	text56
 14443  0045BA                     __ptext56:
 14444                           	callstack 0
 14445  0045BA                     _buttonControlFlags:
 14446                           	callstack 28
 14447  0045BA                     
 14448                           ;fs_menu_controller.c: 82:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14449  0045BA  0100               	movlb	0	; () banked
 14450  0045BC  B1FE               	btfsc	_button_bounce_controller& (0+255),0,b
 14451  0045BE  EFE3  F022         	goto	u6861
 14452  0045C2  EFE5  F022         	goto	u6860
 14453  0045C6                     u6861:
 14454  0045C6  EFEE  F022         	goto	l315
 14455  0045CA                     u6860:
 14456  0045CA                     
 14457                           ; BSR set to: 0
 14458  0045CA  BE81               	btfsc	129,7,c	;volatile
 14459  0045CC  EFEA  F022         	goto	u6871
 14460  0045D0  EFEC  F022         	goto	u6870
 14461  0045D4                     u6871:
 14462  0045D4  EFEE  F022         	goto	l315
 14463  0045D8                     u6870:
 14464  0045D8                     
 14465                           ; BSR set to: 0
 14466                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 1;
 14467  0045D8  81FE               	bsf	_button_bounce_controller& (0+255),0,b
 14468                           
 14469                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 1;
 14470  0045DA  81FD               	bsf	_menu_flags& (0+255),0,b
 14471  0045DC                     l315:
 14472                           
 14473                           ; BSR set to: 0
 14474                           ;fs_menu_controller.c: 88:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 14475  0045DC  AE81               	btfss	129,7,c	;volatile
 14476  0045DE  EFF3  F022         	goto	u6881
 14477  0045E2  EFF5  F022         	goto	u6880
 14478  0045E6                     u6881:
 14479  0045E6  EFFE  F022         	goto	l316
 14480  0045EA                     u6880:
 14481  0045EA                     
 14482                           ; BSR set to: 0
 14483  0045EA  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 14484  0045EC  EFFA  F022         	goto	u6891
 14485  0045F0  EFFC  F022         	goto	u6890
 14486  0045F4                     u6891:
 14487  0045F4  EFFE  F022         	goto	l316
 14488  0045F8                     u6890:
 14489  0045F8                     
 14490                           ; BSR set to: 0
 14491                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.menu = 0;
 14492  0045F8  91FE               	bcf	_button_bounce_controller& (0+255),0,b
 14493                           
 14494                           ;fs_menu_controller.c: 91:         menu_flags.menu_input_flag = 0;
 14495  0045FA  91FD               	bcf	_menu_flags& (0+255),0,b
 14496  0045FC                     l316:
 14497                           
 14498                           ; BSR set to: 0
 14499                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 1))
 14500  0045FC  B7FE               	btfsc	_button_bounce_controller& (0+255),3,b
 14501  0045FE  EF03  F023         	goto	u6901
 14502  004602  EF05  F023         	goto	u6900
 14503  004606                     u6901:
 14504  004606  EF0E  F023         	goto	l317
 14505  00460A                     u6900:
 14506  00460A                     
 14507                           ; BSR set to: 0
 14508  00460A  A483               	btfss	131,2,c	;volatile
 14509  00460C  EF0A  F023         	goto	u6911
 14510  004610  EF0C  F023         	goto	u6910
 14511  004614                     u6911:
 14512  004614  EF0E  F023         	goto	l317
 14513  004618                     u6910:
 14514  004618                     
 14515                           ; BSR set to: 0
 14516                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 14517  004618  87FE               	bsf	_button_bounce_controller& (0+255),3,b
 14518                           
 14519                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 14520  00461A  87FD               	bsf	_menu_flags& (0+255),3,b
 14521  00461C                     l317:
 14522                           
 14523                           ; BSR set to: 0
 14524                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 0) && (button_bounce_controller.pa
      +                          use == 1))
 14525  00461C  B483               	btfsc	131,2,c	;volatile
 14526  00461E  EF13  F023         	goto	u6921
 14527  004622  EF15  F023         	goto	u6920
 14528  004626                     u6921:
 14529  004626  EF1E  F023         	goto	l318
 14530  00462A                     u6920:
 14531  00462A                     
 14532                           ; BSR set to: 0
 14533  00462A  A7FE               	btfss	_button_bounce_controller& (0+255),3,b
 14534  00462C  EF1A  F023         	goto	u6931
 14535  004630  EF1C  F023         	goto	u6930
 14536  004634                     u6931:
 14537  004634  EF1E  F023         	goto	l318
 14538  004638                     u6930:
 14539  004638                     
 14540                           ; BSR set to: 0
 14541                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 14542  004638  97FE               	bcf	_button_bounce_controller& (0+255),3,b
 14543                           
 14544                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 14545  00463A  97FD               	bcf	_menu_flags& (0+255),3,b
 14546  00463C                     l318:
 14547                           
 14548                           ; BSR set to: 0
 14549                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 1))
 14550  00463C  B3FE               	btfsc	_button_bounce_controller& (0+255),1,b
 14551  00463E  EF23  F023         	goto	u6941
 14552  004642  EF25  F023         	goto	u6940
 14553  004646                     u6941:
 14554  004646  EF2E  F023         	goto	l319
 14555  00464A                     u6940:
 14556  00464A                     
 14557                           ; BSR set to: 0
 14558  00464A  A083               	btfss	131,0,c	;volatile
 14559  00464C  EF2A  F023         	goto	u6951
 14560  004650  EF2C  F023         	goto	u6950
 14561  004654                     u6951:
 14562  004654  EF2E  F023         	goto	l319
 14563  004658                     u6950:
 14564  004658                     
 14565                           ; BSR set to: 0
 14566                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 14567  004658  83FE               	bsf	_button_bounce_controller& (0+255),1,b
 14568                           
 14569                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 14570  00465A  83FD               	bsf	_menu_flags& (0+255),1,b
 14571  00465C                     l319:
 14572                           
 14573                           ; BSR set to: 0
 14574                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 0) && (button_bounce_controller.st
      +                          art == 1))
 14575  00465C  B083               	btfsc	131,0,c	;volatile
 14576  00465E  EF33  F023         	goto	u6961
 14577  004662  EF35  F023         	goto	u6960
 14578  004666                     u6961:
 14579  004666  EF3E  F023         	goto	l320
 14580  00466A                     u6960:
 14581  00466A                     
 14582                           ; BSR set to: 0
 14583  00466A  A3FE               	btfss	_button_bounce_controller& (0+255),1,b
 14584  00466C  EF3A  F023         	goto	u6971
 14585  004670  EF3C  F023         	goto	u6970
 14586  004674                     u6971:
 14587  004674  EF3E  F023         	goto	l320
 14588  004678                     u6970:
 14589  004678                     
 14590                           ; BSR set to: 0
 14591                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 14592  004678  93FE               	bcf	_button_bounce_controller& (0+255),1,b
 14593                           
 14594                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 14595  00467A  93FD               	bcf	_menu_flags& (0+255),1,b
 14596  00467C                     l320:
 14597                           
 14598                           ; BSR set to: 0
 14599                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 1))
 14600  00467C  B5FE               	btfsc	_button_bounce_controller& (0+255),2,b
 14601  00467E  EF43  F023         	goto	u6981
 14602  004682  EF45  F023         	goto	u6980
 14603  004686                     u6981:
 14604  004686  EF4E  F023         	goto	l321
 14605  00468A                     u6980:
 14606  00468A                     
 14607                           ; BSR set to: 0
 14608  00468A  A283               	btfss	131,1,c	;volatile
 14609  00468C  EF4A  F023         	goto	u6991
 14610  004690  EF4C  F023         	goto	u6990
 14611  004694                     u6991:
 14612  004694  EF4E  F023         	goto	l321
 14613  004698                     u6990:
 14614  004698                     
 14615                           ; BSR set to: 0
 14616                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 14617  004698  85FE               	bsf	_button_bounce_controller& (0+255),2,b
 14618                           
 14619                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 14620  00469A  85FD               	bsf	_menu_flags& (0+255),2,b
 14621  00469C                     l321:
 14622                           
 14623                           ; BSR set to: 0
 14624                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 0) && (button_bounce_controller.st
      +                          op == 1))
 14625  00469C  B283               	btfsc	131,1,c	;volatile
 14626  00469E  EF53  F023         	goto	u7001
 14627  0046A2  EF55  F023         	goto	u7000
 14628  0046A6                     u7001:
 14629  0046A6  EF5E  F023         	goto	l322
 14630  0046AA                     u7000:
 14631  0046AA                     
 14632                           ; BSR set to: 0
 14633  0046AA  A5FE               	btfss	_button_bounce_controller& (0+255),2,b
 14634  0046AC  EF5A  F023         	goto	u7011
 14635  0046B0  EF5C  F023         	goto	u7010
 14636  0046B4                     u7011:
 14637  0046B4  EF5E  F023         	goto	l322
 14638  0046B8                     u7010:
 14639  0046B8                     
 14640                           ; BSR set to: 0
 14641                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 14642  0046B8  95FE               	bcf	_button_bounce_controller& (0+255),2,b
 14643                           
 14644                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 14645  0046BA  95FD               	bcf	_menu_flags& (0+255),2,b
 14646  0046BC                     l322:
 14647                           
 14648                           ; BSR set to: 0
 14649                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 14650  0046BC  BBFE               	btfsc	_button_bounce_controller& (0+255),5,b
 14651  0046BE  EF63  F023         	goto	u7021
 14652  0046C2  EF65  F023         	goto	u7020
 14653  0046C6                     u7021:
 14654  0046C6  EF6E  F023         	goto	l323
 14655  0046CA                     u7020:
 14656  0046CA                     
 14657                           ; BSR set to: 0
 14658  0046CA  BC81               	btfsc	129,6,c	;volatile
 14659  0046CC  EF6A  F023         	goto	u7031
 14660  0046D0  EF6C  F023         	goto	u7030
 14661  0046D4                     u7031:
 14662  0046D4  EF6E  F023         	goto	l323
 14663  0046D8                     u7030:
 14664  0046D8                     
 14665                           ; BSR set to: 0
 14666                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 14667  0046D8  8BFE               	bsf	_button_bounce_controller& (0+255),5,b
 14668                           
 14669                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 14670  0046DA  89FD               	bsf	_menu_flags& (0+255),4,b
 14671  0046DC                     l323:
 14672                           
 14673                           ; BSR set to: 0
 14674                           ;fs_menu_controller.c: 136:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 14675  0046DC  AC81               	btfss	129,6,c	;volatile
 14676  0046DE  EF73  F023         	goto	u7041
 14677  0046E2  EF75  F023         	goto	u7040
 14678  0046E6                     u7041:
 14679  0046E6  EF7E  F023         	goto	l324
 14680  0046EA                     u7040:
 14681  0046EA                     
 14682                           ; BSR set to: 0
 14683  0046EA  ABFE               	btfss	_button_bounce_controller& (0+255),5,b
 14684  0046EC  EF7A  F023         	goto	u7051
 14685  0046F0  EF7C  F023         	goto	u7050
 14686  0046F4                     u7051:
 14687  0046F4  EF7E  F023         	goto	l324
 14688  0046F8                     u7050:
 14689  0046F8                     
 14690                           ; BSR set to: 0
 14691                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 14692  0046F8  9BFE               	bcf	_button_bounce_controller& (0+255),5,b
 14693                           
 14694                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 14695  0046FA  99FD               	bcf	_menu_flags& (0+255),4,b
 14696  0046FC                     l324:
 14697                           
 14698                           ; BSR set to: 0
 14699                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 14700  0046FC  B9FE               	btfsc	_button_bounce_controller& (0+255),4,b
 14701  0046FE  EF83  F023         	goto	u7061
 14702  004702  EF85  F023         	goto	u7060
 14703  004706                     u7061:
 14704  004706  EF8E  F023         	goto	l325
 14705  00470A                     u7060:
 14706  00470A                     
 14707                           ; BSR set to: 0
 14708  00470A  B883               	btfsc	131,4,c	;volatile
 14709  00470C  EF8A  F023         	goto	u7071
 14710  004710  EF8C  F023         	goto	u7070
 14711  004714                     u7071:
 14712  004714  EF8E  F023         	goto	l325
 14713  004718                     u7070:
 14714  004718                     
 14715                           ; BSR set to: 0
 14716                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 14717  004718  89FE               	bsf	_button_bounce_controller& (0+255),4,b
 14718                           
 14719                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 14720  00471A  8BFD               	bsf	_menu_flags& (0+255),5,b
 14721  00471C                     l325:
 14722                           
 14723                           ; BSR set to: 0
 14724                           ;fs_menu_controller.c: 148:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 14725  00471C  A883               	btfss	131,4,c	;volatile
 14726  00471E  EF93  F023         	goto	u7081
 14727  004722  EF95  F023         	goto	u7080
 14728  004726                     u7081:
 14729  004726  EF9E  F023         	goto	l327
 14730  00472A                     u7080:
 14731  00472A                     
 14732                           ; BSR set to: 0
 14733  00472A  A9FE               	btfss	_button_bounce_controller& (0+255),4,b
 14734  00472C  EF9A  F023         	goto	u7091
 14735  004730  EF9C  F023         	goto	u7090
 14736  004734                     u7091:
 14737  004734  EF9E  F023         	goto	l327
 14738  004738                     u7090:
 14739  004738                     
 14740                           ; BSR set to: 0
 14741                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 14742  004738  99FE               	bcf	_button_bounce_controller& (0+255),4,b
 14743                           
 14744                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 14745  00473A  9BFD               	bcf	_menu_flags& (0+255),5,b
 14746  00473C                     l327:
 14747                           
 14748                           ; BSR set to: 0
 14749  00473C  0012               	return		;funcret
 14750  00473E                     __end_of_buttonControlFlags:
 14751                           	callstack 0
 14752                           
 14753 ;; *************** function _mcu_init *****************
 14754 ;; Defined at:
 14755 ;;		line 42 in file "fs_mcu.c"
 14756 ;; Parameters:    Size  Location     Type
 14757 ;;		None
 14758 ;; Auto vars:     Size  Location     Type
 14759 ;;		None
 14760 ;; Return value:  Size  Location     Type
 14761 ;;                  1    wreg      void 
 14762 ;; Registers used:
 14763 ;;		wreg, status,2
 14764 ;; Tracked objects:
 14765 ;;		On entry : 0/0
 14766 ;;		On exit  : 0/0
 14767 ;;		Unchanged: 0/0
 14768 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14769 ;;      Params:         0       0       0       0       0       0       0
 14770 ;;      Locals:         0       0       0       0       0       0       0
 14771 ;;      Temps:          0       0       0       0       0       0       0
 14772 ;;      Totals:         0       0       0       0       0       0       0
 14773 ;;Total ram usage:        0 bytes
 14774 ;; Hardware stack levels used:    1
 14775 ;; Hardware stack levels required when called:    1
 14776 ;; This function calls:
 14777 ;;		Nothing
 14778 ;; This function is called by:
 14779 ;;		_main
 14780 ;; This function uses a non-reentrant model
 14781 ;;
 14782                           
 14783                           	psect	text57
 14784  005CB2                     __ptext57:
 14785                           	callstack 0
 14786  005CB2                     _mcu_init:
 14787                           	callstack 29
 14788  005CB2                     
 14789                           ;fs_mcu.c: 44:    OSCCONbits.IRCF = 0b111;
 14790  005CB2  0E70               	movlw	112
 14791  005CB4  12D3               	iorwf	211,f,c	;volatile
 14792  005CB6                     
 14793                           ;fs_mcu.c: 45:    OSCTUNEbits.PLLEN = 0b1;
 14794  005CB6  8C9B               	bsf	155,6,c	;volatile
 14795  005CB8                     l247:
 14796  005CB8  A4D3               	btfss	211,2,c	;volatile
 14797  005CBA  EF61  F02E         	goto	u7661
 14798  005CBE  EF63  F02E         	goto	u7660
 14799  005CC2                     u7661:
 14800  005CC2  EF5C  F02E         	goto	l247
 14801  005CC6                     u7660:
 14802  005CC6  0012               	return		;funcret
 14803  005CC8                     __end_of_mcu_init:
 14804                           	callstack 0
 14805                           
 14806 ;; *************** function _lcd_init *****************
 14807 ;; Defined at:
 14808 ;;		line 88 in file "fs_lcd.c"
 14809 ;; Parameters:    Size  Location     Type
 14810 ;;		None
 14811 ;; Auto vars:     Size  Location     Type
 14812 ;;		None
 14813 ;; Return value:  Size  Location     Type
 14814 ;;                  1    wreg      void 
 14815 ;; Registers used:
 14816 ;;		wreg, status,2, cstack
 14817 ;; Tracked objects:
 14818 ;;		On entry : 0/0
 14819 ;;		On exit  : 0/0
 14820 ;;		Unchanged: 0/0
 14821 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14822 ;;      Params:         0       0       0       0       0       0       0
 14823 ;;      Locals:         0       0       0       0       0       0       0
 14824 ;;      Temps:          2       0       0       0       0       0       0
 14825 ;;      Totals:         2       0       0       0       0       0       0
 14826 ;;Total ram usage:        2 bytes
 14827 ;; Hardware stack levels used:    1
 14828 ;; Hardware stack levels required when called:    3
 14829 ;; This function calls:
 14830 ;;		_Lcd_Cmd
 14831 ;;		_Lcd_Port
 14832 ;; This function is called by:
 14833 ;;		_main
 14834 ;; This function uses a non-reentrant model
 14835 ;;
 14836                           
 14837                           	psect	text58
 14838  0052F0                     __ptext58:
 14839                           	callstack 0
 14840  0052F0                     _lcd_init:
 14841                           	callstack 27
 14842  0052F0                     
 14843                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 14844  0052F0  9C95               	bcf	149,6,c	;volatile
 14845                           
 14846                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 14847  0052F2  010F               	movlb	15	; () banked
 14848  0052F4  9D3B               	bcf	59,6,b	;volatile
 14849                           
 14850                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 14851  0052F6  9E95               	bcf	149,7,c	;volatile
 14852                           
 14853                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 14854  0052F8  9F3B               	bcf	59,7,b	;volatile
 14855                           
 14856                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 14857  0052FA  9093               	bcf	147,0,c	;volatile
 14858                           
 14859                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 14860  0052FC  9139               	bcf	57,0,b	;volatile
 14861                           
 14862                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 14863  0052FE  9293               	bcf	147,1,c	;volatile
 14864                           
 14865                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 14866  005300  9339               	bcf	57,1,b	;volatile
 14867                           
 14868                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 14869  005302  9493               	bcf	147,2,c	;volatile
 14870                           
 14871                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 14872  005304  9539               	bcf	57,2,b	;volatile
 14873                           
 14874                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 14875  005306  9693               	bcf	147,3,c	;volatile
 14876                           
 14877                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 14878  005308  9739               	bcf	57,3,b	;volatile
 14879  00530A                     
 14880                           ; BSR set to: 15
 14881                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 14882  00530A  0E00               	movlw	0
 14883  00530C  ECAE  F02B         	call	_Lcd_Port
 14884  005310                     
 14885                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14886  005310  0E02               	movlw	2
 14887  005312  6E05               	movwf	(??_lcd_init+1)^0,c
 14888  005314  0EA0               	movlw	160
 14889  005316  6E04               	movwf	??_lcd_init^0,c
 14890  005318  0E92               	movlw	146
 14891  00531A                     u7847:
 14892  00531A  2EE8               	decfsz	wreg,f,c
 14893  00531C  D7FE               	bra	u7847
 14894  00531E  2E04               	decfsz	??_lcd_init^0,f,c
 14895  005320  D7FC               	bra	u7847
 14896  005322  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 14897  005324  D7FA               	bra	u7847
 14898  005326  D000               	nop2	
 14899  005328                     
 14900                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 14901  005328  0E03               	movlw	3
 14902  00532A  EC4A  F02E         	call	_Lcd_Cmd
 14903  00532E                     
 14904                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14905  00532E  0E68               	movlw	104
 14906  005330  6E04               	movwf	??_lcd_init^0,c
 14907  005332  0EE4               	movlw	228
 14908  005334                     u7857:
 14909  005334  2EE8               	decfsz	wreg,f,c
 14910  005336  D7FE               	bra	u7857
 14911  005338  2E04               	decfsz	??_lcd_init^0,f,c
 14912  00533A  D7FC               	bra	u7857
 14913  00533C  D000               	nop2	
 14914  00533E                     
 14915                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 14916  00533E  0E03               	movlw	3
 14917  005340  EC4A  F02E         	call	_Lcd_Cmd
 14918  005344                     
 14919                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14920  005344  0EE5               	movlw	229
 14921  005346  6E04               	movwf	??_lcd_init^0,c
 14922  005348  0E91               	movlw	145
 14923  00534A                     u7867:
 14924  00534A  2EE8               	decfsz	wreg,f,c
 14925  00534C  D7FE               	bra	u7867
 14926  00534E  2E04               	decfsz	??_lcd_init^0,f,c
 14927  005350  D7FC               	bra	u7867
 14928  005352  F000               	nop	
 14929  005354                     
 14930                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 14931  005354  0E03               	movlw	3
 14932  005356  EC4A  F02E         	call	_Lcd_Cmd
 14933  00535A                     
 14934                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 14935  00535A  0E02               	movlw	2
 14936  00535C  EC4A  F02E         	call	_Lcd_Cmd
 14937  005360                     
 14938                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 14939  005360  0E02               	movlw	2
 14940  005362  EC4A  F02E         	call	_Lcd_Cmd
 14941  005366                     
 14942                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 14943  005366  0E08               	movlw	8
 14944  005368  EC4A  F02E         	call	_Lcd_Cmd
 14945  00536C                     
 14946                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 14947  00536C  0E00               	movlw	0
 14948  00536E  EC4A  F02E         	call	_Lcd_Cmd
 14949  005372                     
 14950                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 14951  005372  0E0C               	movlw	12
 14952  005374  EC4A  F02E         	call	_Lcd_Cmd
 14953  005378                     
 14954                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 14955  005378  0E00               	movlw	0
 14956  00537A  EC4A  F02E         	call	_Lcd_Cmd
 14957  00537E                     
 14958                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 14959  00537E  0E06               	movlw	6
 14960  005380  EC4A  F02E         	call	_Lcd_Cmd
 14961  005384  0012               	return		;funcret
 14962  005386                     __end_of_lcd_init:
 14963                           	callstack 0
 14964                           
 14965 ;; *************** function _adcInit *****************
 14966 ;; Defined at:
 14967 ;;		line 53 in file "fs_adc.c"
 14968 ;; Parameters:    Size  Location     Type
 14969 ;;		None
 14970 ;; Auto vars:     Size  Location     Type
 14971 ;;		None
 14972 ;; Return value:  Size  Location     Type
 14973 ;;                  1    wreg      void 
 14974 ;; Registers used:
 14975 ;;		wreg, status,2
 14976 ;; Tracked objects:
 14977 ;;		On entry : 0/0
 14978 ;;		On exit  : 0/0
 14979 ;;		Unchanged: 0/0
 14980 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14981 ;;      Params:         0       0       0       0       0       0       0
 14982 ;;      Locals:         0       0       0       0       0       0       0
 14983 ;;      Temps:          0       0       0       0       0       0       0
 14984 ;;      Totals:         0       0       0       0       0       0       0
 14985 ;;Total ram usage:        0 bytes
 14986 ;; Hardware stack levels used:    1
 14987 ;; Hardware stack levels required when called:    1
 14988 ;; This function calls:
 14989 ;;		Nothing
 14990 ;; This function is called by:
 14991 ;;		_main
 14992 ;; This function uses a non-reentrant model
 14993 ;;
 14994                           
 14995                           	psect	text59
 14996  0059BA                     __ptext59:
 14997                           	callstack 0
 14998  0059BA                     _adcInit:
 14999                           	callstack 29
 15000  0059BA                     
 15001                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15002  0059BA  8092               	bsf	146,0,c	;volatile
 15003                           
 15004                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15005  0059BC  010F               	movlb	15	; () banked
 15006  0059BE  8138               	bsf	56,0,b	;volatile
 15007                           
 15008                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15009  0059C0  8292               	bsf	146,1,c	;volatile
 15010                           
 15011                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15012  0059C2  8338               	bsf	56,1,b	;volatile
 15013                           
 15014                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15015  0059C4  8492               	bsf	146,2,c	;volatile
 15016                           
 15017                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15018  0059C6  8538               	bsf	56,2,b	;volatile
 15019                           
 15020                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15021  0059C8  8692               	bsf	146,3,c	;volatile
 15022                           
 15023                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15024  0059CA  8738               	bsf	56,3,b	;volatile
 15025                           
 15026                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15027  0059CC  8A92               	bsf	146,5,c	;volatile
 15028                           
 15029                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15030  0059CE  8B38               	bsf	56,5,b	;volatile
 15031                           
 15032                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15033  0059D0  8096               	bsf	150,0,c	;volatile
 15034                           
 15035                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15036  0059D2  813C               	bsf	60,0,b	;volatile
 15037                           
 15038                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15039  0059D4  8296               	bsf	150,1,c	;volatile
 15040                           
 15041                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15042  0059D6  833C               	bsf	60,1,b	;volatile
 15043                           
 15044                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15045  0059D8  8496               	bsf	150,2,c	;volatile
 15046                           
 15047                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15048  0059DA  853C               	bsf	60,2,b	;volatile
 15049  0059DC                     
 15050                           ; BSR set to: 15
 15051                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15052  0059DC  0E01               	movlw	1
 15053  0059DE  6EC2               	movwf	194,c	;volatile
 15054                           
 15055                           ;fs_adc.c: 80:     ADCON1=0x00;
 15056  0059E0  0E00               	movlw	0
 15057  0059E2  6EC1               	movwf	193,c	;volatile
 15058  0059E4                     
 15059                           ; BSR set to: 15
 15060                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15061  0059E4  8EC0               	bsf	192,7,c	;volatile
 15062                           
 15063                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15064  0059E6  50C0               	movf	192,w,c	;volatile
 15065  0059E8  0BC7               	andlw	-57
 15066  0059EA  0910               	iorlw	16
 15067  0059EC  6EC0               	movwf	192,c	;volatile
 15068                           
 15069                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15070  0059EE  50C0               	movf	192,w,c	;volatile
 15071  0059F0  0BF8               	andlw	-8
 15072  0059F2  0906               	iorlw	6
 15073  0059F4  6EC0               	movwf	192,c	;volatile
 15074  0059F6                     
 15075                           ; BSR set to: 15
 15076  0059F6  0012               	return		;funcret
 15077  0059F8                     __end_of_adcInit:
 15078                           	callstack 0
 15079                           
 15080 ;; *************** function _PWM_Init *****************
 15081 ;; Defined at:
 15082 ;;		line 17 in file "fs_pwm.c"
 15083 ;; Parameters:    Size  Location     Type
 15084 ;;		None
 15085 ;; Auto vars:     Size  Location     Type
 15086 ;;		None
 15087 ;; Return value:  Size  Location     Type
 15088 ;;                  1    wreg      void 
 15089 ;; Registers used:
 15090 ;;		wreg, status,2
 15091 ;; Tracked objects:
 15092 ;;		On entry : 0/0
 15093 ;;		On exit  : 0/0
 15094 ;;		Unchanged: 0/0
 15095 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15096 ;;      Params:         0       0       0       0       0       0       0
 15097 ;;      Locals:         0       0       0       0       0       0       0
 15098 ;;      Temps:          0       0       0       0       0       0       0
 15099 ;;      Totals:         0       0       0       0       0       0       0
 15100 ;;Total ram usage:        0 bytes
 15101 ;; Hardware stack levels used:    1
 15102 ;; Hardware stack levels required when called:    1
 15103 ;; This function calls:
 15104 ;;		Nothing
 15105 ;; This function is called by:
 15106 ;;		_main
 15107 ;; This function uses a non-reentrant model
 15108 ;;
 15109                           
 15110                           	psect	text60
 15111  005C08                     __ptext60:
 15112                           	callstack 0
 15113  005C08                     _PWM_Init:
 15114                           	callstack 29
 15115  005C08                     
 15116                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15117  005C08  9494               	bcf	148,2,c	;volatile
 15118                           
 15119                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15120  005C0A  9294               	bcf	148,1,c	;volatile
 15121  005C0C                     
 15122                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15123  005C0C  0E0C               	movlw	12
 15124  005C0E  6EBD               	movwf	189,c	;volatile
 15125                           
 15126                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15127  005C10  0E0C               	movlw	12
 15128  005C12  6E66               	movwf	102,c	;volatile
 15129                           
 15130                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15131  005C14  50BA               	movf	186,w,c	;volatile
 15132  005C16  0BFC               	andlw	-4
 15133  005C18  0901               	iorlw	1
 15134  005C1A  6EBA               	movwf	186,c	;volatile
 15135  005C1C                     
 15136                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15137  005C1C  84BA               	bsf	186,2,c	;volatile
 15138                           
 15139                           ;fs_pwm.c: 32:     TMR2 = 0;
 15140  005C1E  0E00               	movlw	0
 15141  005C20  6EBC               	movwf	188,c	;volatile
 15142                           
 15143                           ;fs_pwm.c: 33:     PR2 = 199;
 15144  005C22  0EC7               	movlw	199
 15145  005C24  6EBB               	movwf	187,c	;volatile
 15146                           
 15147                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15148  005C26  0E00               	movlw	0
 15149  005C28  6EBE               	movwf	190,c	;volatile
 15150                           
 15151                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15152  005C2A  0E00               	movlw	0
 15153  005C2C  6E67               	movwf	103,c	;volatile
 15154  005C2E  0012               	return		;funcret
 15155  005C30                     __end_of_PWM_Init:
 15156                           	callstack 0
 15157                           
 15158 ;; *************** function _Lcd_Clear *****************
 15159 ;; Defined at:
 15160 ;;		line 51 in file "fs_lcd.c"
 15161 ;; Parameters:    Size  Location     Type
 15162 ;;		None
 15163 ;; Auto vars:     Size  Location     Type
 15164 ;;		None
 15165 ;; Return value:  Size  Location     Type
 15166 ;;                  1    wreg      void 
 15167 ;; Registers used:
 15168 ;;		wreg, status,2, cstack
 15169 ;; Tracked objects:
 15170 ;;		On entry : 0/0
 15171 ;;		On exit  : 0/0
 15172 ;;		Unchanged: 0/0
 15173 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15174 ;;      Params:         0       0       0       0       0       0       0
 15175 ;;      Locals:         0       0       0       0       0       0       0
 15176 ;;      Temps:          0       0       0       0       0       0       0
 15177 ;;      Totals:         0       0       0       0       0       0       0
 15178 ;;Total ram usage:        0 bytes
 15179 ;; Hardware stack levels used:    1
 15180 ;; Hardware stack levels required when called:    3
 15181 ;; This function calls:
 15182 ;;		_Lcd_Cmd
 15183 ;; This function is called by:
 15184 ;;		_main
 15185 ;; This function uses a non-reentrant model
 15186 ;;
 15187                           
 15188                           	psect	text61
 15189  005CDA                     __ptext61:
 15190                           	callstack 0
 15191  005CDA                     _Lcd_Clear:
 15192                           	callstack 27
 15193  005CDA                     
 15194                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15195  005CDA  0E00               	movlw	0
 15196  005CDC  EC4A  F02E         	call	_Lcd_Cmd
 15197                           
 15198                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15199  005CE0  0E01               	movlw	1
 15200  005CE2  EC4A  F02E         	call	_Lcd_Cmd
 15201  005CE6  0012               	return		;funcret
 15202  005CE8                     __end_of_Lcd_Clear:
 15203                           	callstack 0
 15204                           
 15205 ;; *************** function _Lcd_Cmd *****************
 15206 ;; Defined at:
 15207 ;;		line 35 in file "fs_lcd.c"
 15208 ;; Parameters:    Size  Location     Type
 15209 ;;  a               1    wreg     unsigned char 
 15210 ;; Auto vars:     Size  Location     Type
 15211 ;;  a               1    2[COMRAM] unsigned char 
 15212 ;; Return value:  Size  Location     Type
 15213 ;;                  1    wreg      void 
 15214 ;; Registers used:
 15215 ;;		wreg, status,2, cstack
 15216 ;; Tracked objects:
 15217 ;;		On entry : 0/0
 15218 ;;		On exit  : 0/0
 15219 ;;		Unchanged: 0/0
 15220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15221 ;;      Params:         0       0       0       0       0       0       0
 15222 ;;      Locals:         1       0       0       0       0       0       0
 15223 ;;      Temps:          1       0       0       0       0       0       0
 15224 ;;      Totals:         2       0       0       0       0       0       0
 15225 ;;Total ram usage:        2 bytes
 15226 ;; Hardware stack levels used:    1
 15227 ;; Hardware stack levels required when called:    2
 15228 ;; This function calls:
 15229 ;;		_Lcd_Port
 15230 ;; This function is called by:
 15231 ;;		_Lcd_Clear
 15232 ;;		_Lcd_Set_Cursor
 15233 ;;		_lcd_init
 15234 ;;		_Lcd_Shift_Right
 15235 ;;		_Lcd_Shift_Left
 15236 ;; This function uses a non-reentrant model
 15237 ;;
 15238                           
 15239                           	psect	text62
 15240  005C94                     __ptext62:
 15241                           	callstack 0
 15242  005C94                     _Lcd_Cmd:
 15243                           	callstack 25
 15244                           
 15245                           ;incstack = 0
 15246                           ;Lcd_Cmd@a stored from wreg
 15247  005C94  6E03               	movwf	Lcd_Cmd@a^0,c
 15248  005C96                     
 15249                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15250  005C96  9C83               	bcf	131,6,c	;volatile
 15251  005C98                     
 15252                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15253  005C98  5003               	movf	Lcd_Cmd@a^0,w,c
 15254  005C9A  ECAE  F02B         	call	_Lcd_Port
 15255  005C9E                     
 15256                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15257  005C9E  8E83               	bsf	131,7,c	;volatile
 15258  005CA0                     
 15259                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15260  005CA0  0E2A               	movlw	42
 15261  005CA2  6E02               	movwf	??_Lcd_Cmd^0,c
 15262  005CA4  0E8E               	movlw	142
 15263  005CA6                     u7877:
 15264  005CA6  2EE8               	decfsz	wreg,f,c
 15265  005CA8  D7FE               	bra	u7877
 15266  005CAA  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15267  005CAC  D7FC               	bra	u7877
 15268  005CAE                     
 15269                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15270  005CAE  9E83               	bcf	131,7,c	;volatile
 15271  005CB0  0012               	return		;funcret
 15272  005CB2                     __end_of_Lcd_Cmd:
 15273                           	callstack 0
 15274                           
 15275 ;; *************** function _Lcd_Port *****************
 15276 ;; Defined at:
 15277 ;;		line 12 in file "fs_lcd.c"
 15278 ;; Parameters:    Size  Location     Type
 15279 ;;  a               1    wreg     unsigned char 
 15280 ;; Auto vars:     Size  Location     Type
 15281 ;;  a               1    0[COMRAM] unsigned char 
 15282 ;; Return value:  Size  Location     Type
 15283 ;;                  1    wreg      void 
 15284 ;; Registers used:
 15285 ;;		wreg
 15286 ;; Tracked objects:
 15287 ;;		On entry : 0/0
 15288 ;;		On exit  : 0/0
 15289 ;;		Unchanged: 0/0
 15290 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15291 ;;      Params:         0       0       0       0       0       0       0
 15292 ;;      Locals:         1       0       0       0       0       0       0
 15293 ;;      Temps:          0       0       0       0       0       0       0
 15294 ;;      Totals:         1       0       0       0       0       0       0
 15295 ;;Total ram usage:        1 bytes
 15296 ;; Hardware stack levels used:    1
 15297 ;; Hardware stack levels required when called:    1
 15298 ;; This function calls:
 15299 ;;		Nothing
 15300 ;; This function is called by:
 15301 ;;		_Lcd_Cmd
 15302 ;;		_lcd_init
 15303 ;;		_Lcd_Write_Char
 15304 ;; This function uses a non-reentrant model
 15305 ;;
 15306                           
 15307                           	psect	text63
 15308  00575C                     __ptext63:
 15309                           	callstack 0
 15310  00575C                     _Lcd_Port:
 15311                           	callstack 25
 15312                           
 15313                           ;incstack = 0
 15314                           ;Lcd_Port@a stored from wreg
 15315  00575C  6E01               	movwf	Lcd_Port@a^0,c
 15316  00575E                     
 15317                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15318  00575E  A001               	btfss	Lcd_Port@a^0,0,c
 15319  005760  EFB4  F02B         	goto	u6321
 15320  005764  EFB6  F02B         	goto	u6320
 15321  005768                     u6321:
 15322  005768  EFB9  F02B         	goto	l96
 15323  00576C                     u6320:
 15324  00576C  8081               	bsf	129,0,c	;volatile
 15325  00576E  EFBA  F02B         	goto	l5227
 15326  005772                     l96:
 15327  005772  9081               	bcf	129,0,c	;volatile
 15328  005774                     l5227:
 15329                           
 15330                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15331  005774  A201               	btfss	Lcd_Port@a^0,1,c
 15332  005776  EFBF  F02B         	goto	u6331
 15333  00577A  EFC1  F02B         	goto	u6330
 15334  00577E                     u6331:
 15335  00577E  EFC4  F02B         	goto	l98
 15336  005782                     u6330:
 15337  005782  8281               	bsf	129,1,c	;volatile
 15338  005784  EFC5  F02B         	goto	l5231
 15339  005788                     l98:
 15340  005788  9281               	bcf	129,1,c	;volatile
 15341  00578A                     l5231:
 15342                           
 15343                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15344  00578A  A401               	btfss	Lcd_Port@a^0,2,c
 15345  00578C  EFCA  F02B         	goto	u6341
 15346  005790  EFCC  F02B         	goto	u6340
 15347  005794                     u6341:
 15348  005794  EFCF  F02B         	goto	l100
 15349  005798                     u6340:
 15350  005798  8481               	bsf	129,2,c	;volatile
 15351  00579A  EFD0  F02B         	goto	l5235
 15352  00579E                     l100:
 15353  00579E  9481               	bcf	129,2,c	;volatile
 15354  0057A0                     l5235:
 15355                           
 15356                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15357  0057A0  A601               	btfss	Lcd_Port@a^0,3,c
 15358  0057A2  EFD5  F02B         	goto	u6351
 15359  0057A6  EFD7  F02B         	goto	u6350
 15360  0057AA                     u6351:
 15361  0057AA  EFDA  F02B         	goto	l102
 15362  0057AE                     u6350:
 15363  0057AE  8681               	bsf	129,3,c	;volatile
 15364  0057B0  EFDB  F02B         	goto	l104
 15365  0057B4                     l102:
 15366  0057B4  9681               	bcf	129,3,c	;volatile
 15367  0057B6                     l104:
 15368  0057B6  0012               	return		;funcret
 15369  0057B8                     __end_of_Lcd_Port:
 15370                           	callstack 0
 15371                           
 15372 ;; *************** function _TIMER0 *****************
 15373 ;; Defined at:
 15374 ;;		line 33 in file "fs_timer.c"
 15375 ;; Parameters:    Size  Location     Type
 15376 ;;		None
 15377 ;; Auto vars:     Size  Location     Type
 15378 ;;		None
 15379 ;; Return value:  Size  Location     Type
 15380 ;;                  1    wreg      void 
 15381 ;; Registers used:
 15382 ;;		wreg, status,2, status,0
 15383 ;; Tracked objects:
 15384 ;;		On entry : 0/0
 15385 ;;		On exit  : 0/0
 15386 ;;		Unchanged: 0/0
 15387 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15388 ;;      Params:         0       0       0       0       0       0       0
 15389 ;;      Locals:         0       0       0       0       0       0       0
 15390 ;;      Temps:          0       0       0       0       0       0       0
 15391 ;;      Totals:         0       0       0       0       0       0       0
 15392 ;;Total ram usage:        0 bytes
 15393 ;; Hardware stack levels used:    1
 15394 ;; This function calls:
 15395 ;;		Nothing
 15396 ;; This function is called by:
 15397 ;;		Interrupt level 2
 15398 ;; This function uses a non-reentrant model
 15399 ;;
 15400                           
 15401                           	psect	intcode
 15402  000008                     __pintcode:
 15403                           	callstack 0
 15404  000008                     _TIMER0:
 15405                           	callstack 20
 15406                           
 15407                           ;incstack = 0
 15408  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15409  00000A                     
 15410                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15411  00000A  A4F2               	btfss	242,2,c	;volatile
 15412  00000C  EF0A  F000         	goto	i2u777_41
 15413  000010  EF0C  F000         	goto	i2u777_40
 15414  000014                     i2u777_41:
 15415  000014  EF32  F000         	goto	i2l482
 15416  000018                     i2u777_40:
 15417  000018  AAF2               	btfss	242,5,c	;volatile
 15418  00001A  EF11  F000         	goto	i2u778_41
 15419  00001E  EF13  F000         	goto	i2u778_40
 15420  000022                     i2u778_41:
 15421  000022  EF32  F000         	goto	i2l482
 15422  000026                     i2u778_40:
 15423  000026                     
 15424                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15425  000026  94F2               	bcf	242,2,c	;volatile
 15426  000028                     
 15427                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15428  000028  0E63               	movlw	99
 15429  00002A  6ED7               	movwf	215,c	;volatile
 15430                           
 15431                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15432  00002C  0EC0               	movlw	192
 15433  00002E  6ED6               	movwf	214,c	;volatile
 15434  000030                     
 15435                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15436  000030  0100               	movlb	0	; () banked
 15437  000032  2BFC               	incf	(_timer_value+9)& (0+255),f,b
 15438  000034                     
 15439                           ; BSR set to: 0
 15440                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 15441  000034  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 15442  000036  EF1F  F000         	goto	i2u779_41
 15443  00003A  EF21  F000         	goto	i2u779_40
 15444  00003E                     i2u779_41:
 15445  00003E  EF24  F000         	goto	i2l6237
 15446  000042                     i2u779_40:
 15447  000042                     
 15448                           ; BSR set to: 0
 15449                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 15450  000042  2BFB               	incf	(_timer_value+8)& (0+255),f,b
 15451                           
 15452                           ;fs_timer.c: 46:         }
 15453  000044  EF26  F000         	goto	i2l6239
 15454  000048                     i2l6237:
 15455                           
 15456                           ; BSR set to: 0
 15457                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 15458  000048  0E00               	movlw	0
 15459  00004A  6FFB               	movwf	(_timer_value+8)& (0+255),b
 15460  00004C                     i2l6239:
 15461                           
 15462                           ; BSR set to: 0
 15463                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 15464  00004C  0E63               	movlw	99
 15465  00004E  65FC               	cpfsgt	(_timer_value+9)& (0+255),b
 15466  000050  EF2C  F000         	goto	i2u780_41
 15467  000054  EF2E  F000         	goto	i2u780_40
 15468  000058                     i2u780_41:
 15469  000058  EF32  F000         	goto	i2l482
 15470  00005C                     i2u780_40:
 15471  00005C                     
 15472                           ; BSR set to: 0
 15473                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 15474  00005C  0E00               	movlw	0
 15475  00005E  6FFC               	movwf	(_timer_value+9)& (0+255),b
 15476  000060                     
 15477                           ; BSR set to: 0
 15478                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 15479  000060  0101               	movlb	1	; () banked
 15480  000062  81BE               	bsf	_timer_counter_flag& (0+255),0,b
 15481  000064                     i2l482:
 15482  000064  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15483  000066  0011               	retfie		f
 15484  000068                     __end_of_TIMER0:
 15485                           	callstack 0
 15486                           
 15487                           	psect	rparam
 15488  0000                     
 15489                           	psect	temp
 15490  00005F                     btemp:
 15491                           	callstack 0
 15492  00005F                     	ds	1
 15493  0000                     int$flags	set	btemp
 15494  0000                     wtemp8	set	btemp+1
 15495  0000                     ttemp5	set	btemp+1
 15496  0000                     ttemp6	set	btemp+4
 15497  0000                     ttemp7	set	btemp+8
 15498                           
 15499                           	psect	idloc
 15500                           
 15501                           ;Config register IDLOC0 @ 0x200000
 15502                           ;	unspecified, using default values
 15503  200000                     	org	2097152
 15504  200000  FF                 	db	255
 15505                           
 15506                           ;Config register IDLOC1 @ 0x200001
 15507                           ;	unspecified, using default values
 15508  200001                     	org	2097153
 15509  200001  FF                 	db	255
 15510                           
 15511                           ;Config register IDLOC2 @ 0x200002
 15512                           ;	unspecified, using default values
 15513  200002                     	org	2097154
 15514  200002  FF                 	db	255
 15515                           
 15516                           ;Config register IDLOC3 @ 0x200003
 15517                           ;	unspecified, using default values
 15518  200003                     	org	2097155
 15519  200003  FF                 	db	255
 15520                           
 15521                           ;Config register IDLOC4 @ 0x200004
 15522                           ;	unspecified, using default values
 15523  200004                     	org	2097156
 15524  200004  FF                 	db	255
 15525                           
 15526                           ;Config register IDLOC5 @ 0x200005
 15527                           ;	unspecified, using default values
 15528  200005                     	org	2097157
 15529  200005  FF                 	db	255
 15530                           
 15531                           ;Config register IDLOC6 @ 0x200006
 15532                           ;	unspecified, using default values
 15533  200006                     	org	2097158
 15534  200006  FF                 	db	255
 15535                           
 15536                           ;Config register IDLOC7 @ 0x200007
 15537                           ;	unspecified, using default values
 15538  200007                     	org	2097159
 15539  200007  FF                 	db	255
 15540                           
 15541                           	psect	config
 15542                           
 15543                           ; Padding undefined space
 15544  300000                     	org	3145728
 15545  300000  FF                 	db	255
 15546                           
 15547                           ;Config register CONFIG1H @ 0x300001
 15548                           ;	Oscillator Selection bits
 15549                           ;	FOSC = INTIO67, Internal oscillator block
 15550                           ;	4X PLL Enable
 15551                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15552                           ;	Primary clock enable bit
 15553                           ;	PRICLKEN = ON, Primary clock is always enabled
 15554                           ;	Fail-Safe Clock Monitor Enable bit
 15555                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15556                           ;	Internal/External Oscillator Switchover bit
 15557                           ;	IESO = ON, Oscillator Switchover mode enabled
 15558  300001                     	org	3145729
 15559  300001  B8                 	db	184
 15560                           
 15561                           ;Config register CONFIG2L @ 0x300002
 15562                           ;	Power-up Timer Enable bit
 15563                           ;	PWRTEN = OFF, Power up timer disabled
 15564                           ;	Brown-out Reset Enable bits
 15565                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15566                           ;	Brown Out Reset Voltage bits
 15567                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15568  300002                     	org	3145730
 15569  300002  1F                 	db	31
 15570                           
 15571                           ;Config register CONFIG2H @ 0x300003
 15572                           ;	Watchdog Timer Enable bits
 15573                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15574                           ;	Watchdog Timer Postscale Select bits
 15575                           ;	WDTPS = 32768, 1:32768
 15576  300003                     	org	3145731
 15577  300003  3C                 	db	60
 15578                           
 15579                           ; Padding undefined space
 15580  300004                     	org	3145732
 15581  300004  FF                 	db	255
 15582                           
 15583                           ;Config register CONFIG3H @ 0x300005
 15584                           ;	CCP2 MUX bit
 15585                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15586                           ;	PORTB A/D Enable bit
 15587                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15588                           ;	P3A/CCP3 Mux bit
 15589                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15590                           ;	HFINTOSC Fast Start-up
 15591                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15592                           ;	Timer3 Clock input mux bit
 15593                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15594                           ;	ECCP2 B output mux bit
 15595                           ;	P2BMX = PORTD2, P2B is on RD2
 15596                           ;	MCLR Pin Enable bit
 15597                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 15598  300005                     	org	3145733
 15599  300005  BD                 	db	189
 15600                           
 15601                           ;Config register CONFIG4L @ 0x300006
 15602                           ;	Stack Full/Underflow Reset Enable bit
 15603                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15604                           ;	Single-Supply ICSP Enable bit
 15605                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15606                           ;	Extended Instruction Set Enable bit
 15607                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15608                           ;	Background Debug
 15609                           ;	DEBUG = 0x1, unprogrammed default
 15610  300006                     	org	3145734
 15611  300006  84                 	db	132
 15612                           
 15613                           ; Padding undefined space
 15614  300007                     	org	3145735
 15615  300007  FF                 	db	255
 15616                           
 15617                           ;Config register CONFIG5L @ 0x300008
 15618                           ;	Code Protection Block 0
 15619                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 15620                           ;	Code Protection Block 1
 15621                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 15622                           ;	Code Protection Block 2
 15623                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 15624                           ;	Code Protection Block 3
 15625                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 15626  300008                     	org	3145736
 15627  300008  0F                 	db	15
 15628                           
 15629                           ;Config register CONFIG5H @ 0x300009
 15630                           ;	Boot Block Code Protection bit
 15631                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15632                           ;	Data EEPROM Code Protection bit
 15633                           ;	CPD = OFF, Data EEPROM not code-protected
 15634  300009                     	org	3145737
 15635  300009  C0                 	db	192
 15636                           
 15637                           ;Config register CONFIG6L @ 0x30000A
 15638                           ;	Write Protection Block 0
 15639                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 15640                           ;	Write Protection Block 1
 15641                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 15642                           ;	Write Protection Block 2
 15643                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 15644                           ;	Write Protection Block 3
 15645                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 15646  30000A                     	org	3145738
 15647  30000A  0F                 	db	15
 15648                           
 15649                           ;Config register CONFIG6H @ 0x30000B
 15650                           ;	Configuration Register Write Protection bit
 15651                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15652                           ;	Boot Block Write Protection bit
 15653                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15654                           ;	Data EEPROM Write Protection bit
 15655                           ;	WRTD = OFF, Data EEPROM not write-protected
 15656  30000B                     	org	3145739
 15657  30000B  E0                 	db	224
 15658                           
 15659                           ;Config register CONFIG7L @ 0x30000C
 15660                           ;	Table Read Protection Block 0
 15661                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 15662                           ;	Table Read Protection Block 1
 15663                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 15664                           ;	Table Read Protection Block 2
 15665                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 15666                           ;	Table Read Protection Block 3
 15667                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15668  30000C                     	org	3145740
 15669  30000C  0F                 	db	15
 15670                           
 15671                           ;Config register CONFIG7H @ 0x30000D
 15672                           ;	Boot Block Table Read Protection bit
 15673                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15674  30000D                     	org	3145741
 15675  30000D  40                 	db	64
 15676                           tosu	equ	0xFFF
 15677                           tosh	equ	0xFFE
 15678                           tosl	equ	0xFFD
 15679                           stkptr	equ	0xFFC
 15680                           pclatu	equ	0xFFB
 15681                           pclath	equ	0xFFA
 15682                           pcl	equ	0xFF9
 15683                           tblptru	equ	0xFF8
 15684                           tblptrh	equ	0xFF7
 15685                           tblptrl	equ	0xFF6
 15686                           tablat	equ	0xFF5
 15687                           prodh	equ	0xFF4
 15688                           prodl	equ	0xFF3
 15689                           indf0	equ	0xFEF
 15690                           postinc0	equ	0xFEE
 15691                           postdec0	equ	0xFED
 15692                           preinc0	equ	0xFEC
 15693                           plusw0	equ	0xFEB
 15694                           fsr0h	equ	0xFEA
 15695                           fsr0l	equ	0xFE9
 15696                           wreg	equ	0xFE8
 15697                           indf1	equ	0xFE7
 15698                           postinc1	equ	0xFE6
 15699                           postdec1	equ	0xFE5
 15700                           preinc1	equ	0xFE4
 15701                           plusw1	equ	0xFE3
 15702                           fsr1h	equ	0xFE2
 15703                           fsr1l	equ	0xFE1
 15704                           bsr	equ	0xFE0
 15705                           indf2	equ	0xFDF
 15706                           postinc2	equ	0xFDE
 15707                           postdec2	equ	0xFDD
 15708                           preinc2	equ	0xFDC
 15709                           plusw2	equ	0xFDB
 15710                           fsr2h	equ	0xFDA
 15711                           fsr2l	equ	0xFD9
 15712                           status	equ	0xFD8

Data Sizes:
    Strings     214
    Constant    0
    Data        32
    BSS         284
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     223
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2365_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _startMotor->_speedControl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  100437
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   93759
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   93759
                                            129 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (4) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (5) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
                 _fabsf (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _startMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _calculatedAverageValue
           ___lldiv
           ___lmul
           ___xxtofl
             ___lldiv (ARG)
         _scanAdcConversion
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _readAdcValue
         _speedControl
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
       _stopMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      50       8       31.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      DF       6       87.1%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     22D       9        0.0%
DATA                 0      0     22D      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Thu Aug 13 20:08:41 2020

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C  
                   ___fldiv@sign 0045                               l41 59F6  
                             l35 5950                               l38 5978  
                             l54 2494                               l70 5C82  
                             l72 5C90                               l57 3A34  
                             l73 5C92                               l76 5BCC  
                             l78 5BDA                               _KD 01D7  
                             l79 5BDE                               l96 5772  
                             l98 5788                               _KP 01DB  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
            __end_of_system_init 49C6                              l100 579E  
                            l102 57B4                              l110 5CE6  
                            l104 57B6         ??_calculatedAverageValue 001C  
                            l122 5B7C                              l107 5CB0  
                            l116 569E                              l119 5384  
                            l320 467C                              l128 5402  
                            l312 5C06                              l321 469C  
                            l250 5CC6                              l322 46BC  
                            l323 46DC                              l315 45DC  
                            l404 5C2E                              l324 46FC  
                            l316 45FC                              l412 547C  
                            l500 55CE                              l325 471C  
                            l317 461C                              l333 5564  
                            l253 49C4                              l318 463C  
                            l247 5CB8                              l327 473C  
                            l319 465C                              l343 135C  
                            l408 54F6                              l344 13AC  
                            l441 40EC                              l602 45B8  
                            l522 52EE                              l515 52DE  
                            l444 5A32                              l348 145C  
                            l366 1828                              l358 167A  
                            l615 48A0                              l447 5B10  
                            l383 1C8E                     _startIsClick 01BD  
                            l368 18C2                              l732 51A0  
                            l485 5CD8                              l719 50F0  
                            l488 5C54                              l753 4B88  
                            l762 5AA2                              l747 524A  
                            l499 55BE                              l758 4BCE  
                            l785 4ACA                              _PR2 000FBB  
                            _abs 597A                              _pad 4F68  
                   ___awmod@sign 0006                              wreg 000FE8  
                   ___flmul@aexp 002D                     ___flmul@bexp 002E  
                   ___flmul@sign 0028                     ___flmul@temp 0033  
                   ___flmul@prod 002F                      _stopIsClick 01BC  
                   ___fltol@exp1 0057                             l1102 3050  
                           l1111 32BE                             l1112 32AC  
                           l1016 2CBA                             l1033 2DD4  
                           l1025 2F8A                             l1017 2CA8  
                           l1106 33B4                             l1042 2EA4  
                           l1018 2C6E                             l1043 2E92  
                           ?_abs 0013                             l1109 3246  
                           l1214 4FAE                             l1070 374E  
                           l1150 41DC                             l1119 3376  
                           l1143 4144                             l1072 35AE  
                           l1217 4FF0                             l1225 3AD6  
                           l1081 35F4                             l1058 58F2  
                           l1146 42A0                             l1219 502C  
                           l1227 3ADE                             l1083 366C  
                           l1075 3572                             l1307 0E68  
                           l1171 585A                             l1084 365A  
                           l1164 5BB0                             l1245 3D18  
                           l1501 4E9C                             l1157 4238  
                           l1511 56F6                             l1263 129C  
                           l4001 2C04                             l1281 0ACC  
                           l1426 4428                             l4011 2C56  
                           l4003 2C08                             l1435 3F2E  
                           l1516 56FE                             l1380 5638  
                           l1445 5ADA                             l1453 58AC  
                           l1429 4430                             l4101 2ECE  
                           l4021 2C9A                             l4013 2C66  
                           l4005 2C0C                             l1373 2A10  
                           l1365 2ACA                             l1390 4CCC  
                           l1438 3E72                             l4111 2F4A  
                           l4103 2F08                             l4023 2C9C  
                           l4015 2C7C                             l4007 2C10  
                           l4201 473E                             l4121 2F6A  
                           l4113 2F4E                             l4105 2F0A  
                           l4041 2D24                             l4033 2CEC  
                           l4025 2CA6                             l4017 2C88  
                           l4009 2C3A                             l5001 0D62  
                           l1474 4F66                             l1482 5936  
                           l4211 4782                             l4203 4742  
                           l1395 59B0                             l4131 5900  
                           l4123 2F78                             l4115 2F5C  
                           l4107 2F1A                             l4043 2D28  
                           l4035 2CFC                             l4027 2CC8  
                           l4051 2D48                             l4019 2C8C  
                           l1491 575A                             l1459 5A6A  
                           l5011 0DFC                             l5003 0D94  
                           l1379 5630                             l4221 47EA  
                           l4213 47A2                             l4205 4750  
                           l1485 5CE8                             l4133 5912  
                           l4141 5B22                             l4301 3526  
                           l4125 2F7A                             l4117 2F62  
                           l4109 2F2A                             l4053 2D6E  
                           l4061 2DC4                             l4045 2D36  
                           l4037 2D0A                             l4029 2CD8  
                           l5101 1148                             l5021 0E84  
                           l5013 0E30                             l5005 0DAA  
                           l1398 59B8                             l4151 5C30  
                           l4231 4860                             l4223 4818  
                           l4215 47C0                             l4207 4770  
                           l4135 5916                             l4143 5B3A  
                           l4311 3570                             l4303 3536  
                           l4119 2F64                             l4071 2E18  
                           l4063 2DEA                             l4055 2DA2  
                           l4047 2D38                             l4039 2D18  
                           l5111 11AA                             l5103 116E  
                           l5031 0F2C                             l5023 0EE8  
                           l5015 0E40                             l5007 0DDC  
                           l4153 5C4C                             l4161 4444  
                           l4233 4880                             l4225 4838  
                           l4217 47C8                             l4209 4774  
                           l4129 58F4                             l1497 5B46  
                           l4137 5B12                             l4321 35BE  
                           l4313 357C                             l4305 353E  
                           l4241 33D0                             l4401 301A  
                           l4081 2E42                             l4073 2E26  
                           l4065 2DFA                             l4057 2DA4  
                           l4049 2D42                             l5121 11F0  
                           l5113 11C4                             l5105 118A  
                           l5041 0F6A                             l5025 0EF8  
                           l5033 0F34                             l5017 0E54  
                           l5009 0DEC                             l5201 4E40  
                           l6001 199E                             l4171 449A  
                           l4163 4464                             l4227 484A  
                           l4219 47DC                             l4139 5B1E  
                           l4323 35D4                             l4331 3604  
                           l4315 359A                             l4307 354E  
                           l4251 3404                             l4243 33D2  
                           l4411 3070                             l4403 302A  
                           l4091 2E74                             l4083 2E52  
                           l4075 2E28                             l4059 2DB4  
                           l4147 5A34                             l5131 1240  
                           l5123 1200                             l5115 11CA  
                           l5107 1192                             l5051 0F96  
                           l5043 0F70                             l5035 0F48  
                           l5027 0F0C                             l5019 0E60  
                           l5203 4E52                             l5211 593A  
                           l6011 19D4                             l6003 19A2  
                           l6101 536C                             l4181 44EE  
                           l4173 44A6                             l4165 4468  
                           l4157 4432                             l4229 4850  
                           l4333 3612                             l4325 35DA  
                           l4317 359C                             l4309 3562  
                           l4261 3436                             l4245 33E2  
                           l4253 340C                             l4237 33B6  
                           l4501 33A4                             l4421 30B0  
                           l4405 303A                             l4093 2E8A  
                           l4077 2E36                             l4069 2E0E  
                           l4085 2E54                             l5141 127C  
                           l5133 1252                             l5125 1206  
                           l5117 11DC                             l5109 1198  
                           l5045 0F7C                             l5037 0F56  
                           l5053 0F9C                             l5061 0FCA  
                           l5029 0F1E                             l5205 4E7A  
                           l5301 41D2                             l5213 594C  
                           l6021 1A4C                             l6013 19FA  
                           l6005 19B4                             l5231 578A  
                           l5223 575E                             l6103 5372  
                           l6111 5CB6                             l5151 42BA  
                           l4191 4562                             l4183 4500  
                           l4175 44C4                             l4167 4476  
                           l4159 4436                             l4511 502E  
                           l4343 367C                             l4351 36C4  
                           l4335 3616                             l4327 35E4  
                           l4319 35AC                             l4271 346A  
                           l4263 3438                             l4255 341C  
                           l4247 33F2                             l4239 33C2  
                           l4431 30FA                             l4423 30BC  
                           l4415 3084                             l4407 3040  
                           l4079 2E3E                             l4087 2E62  
                           l5135 125E                             l5127 120C  
                           l5119 11E8                             l5071 1080  
                           l5063 1022                             l5055 0FAE  
                           l5047 0F8C                             l5039 0F66  
                           l5311 4248                             l5303 420E  
                           l5215 594E                             l6023 1A80  
                           l6015 1A06                             l6007 19BE  
                           l6031 1AD8                             l5233 5798  
                           l5225 576C                             l6105 5378  
                           l5153 42BE                             l4185 452E  
                           l4177 44CC                             l4193 4568  
                           l4169 4496                             l4521 505A  
                           l4513 5032                             l4361 372E  
                           l4353 36DE                             l4345 3688  
                           l4337 3624                             l4329 35F2  
                           l4281 34B0                             l4265 3448  
                           l4273 3472                             l4257 3422  
                           l4249 3402                             l4601 5242  
                           l4441 314C                             l4433 3106  
                           l4425 30D4                             l4417 3090  
                           l4409 3060                             l4097 2EB4  
                           l4089 2E66                             l4505 58AE  
                           l5137 1266                             l5081 10D4  
                           l5073 109C                             l5065 1056  
                           l5057 0FC0                             l5049 0F90  
                           l5321 4290                             l5313 424C  
                           l5305 421A                             l5241 5B9E  
                           l5217 595E                             l5209 593A  
                           l6041 1B32                             l6033 1AEC  
                           l6025 1A90                             l6017 1A16  
                           l6009 19CA                             l6113 5BE0  
                           l6121 48A2                             l6201 4D28  
                           l5235 57A0                             l5227 5774  
                           l6107 537E                             l5171 4374  
                           l5163 431A                             l5155 42DA  
                           l5147 42A2                             l4195 4578  
                           l4187 454E                             l4179 44E0  
                           l4531 5088                             l4523 5062  
                           l4515 5040                             l4363 373C  
                           l4355 36F4                             l4347 3696  
                           l4339 3652                             l4291 34D8  
                           l4283 34B4                             l4275 3482  
                           l4267 3458                             l4259 3428  
                           l4603 5248                             l4611 4B0A  
                           l4451 31CA                             l4443 315C  
                           l4435 3116                             l4427 30E0  
                           l4419 309A                             l4099 2EC0  
                           l4507 58BE                             l5139 1276  
                           l5091 1118                             l5083 10E6  
                           l5075 10AE                             l5067 105E  
                           l5059 0FC4                             l5411 29AC  
                           l5403 28FE                             l5331 24DA  
                           l5315 4270                             l5307 4228  
                           l5243 5BA0                             l5251 5584  
                           l5219 5970                             l6051 1BB8  
                           l6043 1B3E                             l6035 1AF6  
                           l6027 1AA0                             l6019 1A48  
                           l6131 497E                             l6123 4974  
                           l6115 5CC8                             l6211 4D72  
                           l6203 4D3A                             l5237 57AE  
                           l5229 5782                             l6109 5CB2  
                           l5181 43FA                             l5165 4330  
                           l5157 4310                             l5149 42B6  
                           l4197 4598                             l4189 4550  
                           l4541 50C2                             l4533 5090  
                           l4525 5066                             l4517 5048  
                           l4365 3742                             l4357 370E  
                           l4349 36C0                             l4277 3498  
                           l4269 3468                             l4621 4B76  
                           l4613 4B38                             l4461 3244  
                           l4453 3200                             l4445 3178  
                           l4437 3122                             l4429 30EC  
                           l4381 2FA8                             l5093 1126  
                           l5085 10F8                             l5077 10BE  
                           l5069 1062                             l5421 2A48  
                           l5413 29E0                             l5405 292C  
                           l5341 2554                             l5333 24DE  
                           l5325 2496                             l5317 4280  
                           l5309 4246                             l5261 5272  
                           l5253 5594                             l6053 1BC8  
                           l6045 1B4E                             l6037 1B02  
                           l6029 1AA4                             l6141 49BC  
                           l6133 4988                             l6125 4978  
                           l6117 5CD4                             l6213 4D86  
                           l6205 4D4C                             l6221 4DBC  
                           ?_pad 0011                             l6143 5C08  
                           l6071 59BA                             l5183 440C  
                           l5175 43AA                             l5167 4338  
                           l5159 4314                             l4703 597A  
                           l4551 50E8                             l4543 50C4  
                           l4535 509E                             l4527 506E  
                           l4519 504C                             l4367 3744  
                           l4359 372A                             l4295 34EC  
                           l4279 34A8                             l4287 34C8  
                           l4623 4BC6                             l4615 4B48  
                           l4607 4ACC                             l4471 32A4  
                           l4463 3256                             l4455 320E  
                           l4447 3184                             l4439 3132  
                           l4391 2FEE                             l4383 2FB8  
                           l4375 2F8C                             l4631 5A82  
                           l4711 4C2E                             l5095 112E  
                           l5087 1100                             l5079 10D0  
                           l5191 4DF2                             l5431 2A86  
                           l5423 2A56                             l5343 2574  
                           l5351 25DC                             l5335 2502  
                           l5327 24BA                             l5319 428E  
                           l5239 5B7E                             l5271 52BC  
                           l5263 527A                             l5255 559E  
                           l5247 5566                             l5511 39EA  
                           l5503 3750                             l6055 1BD8  
                           l6047 1B80                             l6039 1B0C  
                           l6151 54FC                             l6135 4992  
                           l6127 497A                             l6119 5CD6  
                           l6215 4D8A                             l6207 4D5C  
                           l5521 5CAE                             l5513 5C96  
                           l6145 5C0C                             l6073 59DC  
                           l6081 530A                             l5601 5BBC  
                           l5169 4340                             l4705 5994  
                           l3921 4EEA                             l3913 4E9E  
                           l4801 3AE6                             l4545 50CA  
                           l4537 50A4                             l4529 5080  
                           l4561 510C                             l4297 3506  
                           l4289 34D8                             l4625 4BCC  
                           l4617 4B56                             l4609 4AFA  
                           l4481 3312                             l4465 3264  
                           l4457 322C                             l4449 31A0  
                           l4393 2FF4                             l4385 2FC8  
                           l4377 2F98                             l4633 5A92  
                           l4721 4C80                             l4713 4C56  
                           l5097 1136                             l5089 1110  
                           l5425 2A6A                             l5409 299A  
                           l5361 2676                             l5353 2600  
                           l5345 2582                             l5337 2538  
                           l5329 24C8                             l5281 4100  
                           l5273 52CC                             l5265 5286  
                           l5257 524C                             l5249 5576  
                           l5505 3782                             l6305 1C40  
                           l6057 1BDC                             l6049 1B84  
                           l6065 1C28                             l6161 5534  
                           l6153 5500                             l6137 499C  
                           l6129 497C                             l6217 4D9E  
                           l6209 4D62                             l5515 5C98  
                           l6147 5C1C                             l6075 59E4  
                           l6091 5344                             l6083 5310  
                           l5531 5B62                             l5523 5B4A  
                           l5611 5BCA                             l5603 5BBE  
                           l5179 43E8                             l3923 4F20  
                           l3915 4EB0                             l4811 3B1E  
                           l4803 3AF8                             l4539 50BA  
                           l4547 50D0                             l4571 5140  
                           l4563 5110                             l4555 50F2  
                           l4299 3516                             l4619 4B68  
                           l4491 337A                             l4475 32CE  
                           l4483 3316                             l4467 3268  
                           l4459 3236                             l4395 2FFA  
                           l4387 2FD8                             l4379 2FA6  
                           l3931 2AE6                             l4651 4A30  
                           l4643 49F0                             l4715 4C62  
                           l4707 4BD0                             l4731 5710  
                           l5099 1142                             l5195 4DFE  
                           l5419 2A24                             l5363 2696  
                           l5355 260A                             l5371 26FE  
                           l5339 2546                             l5435 2A94  
                           l5291 417E                             l5283 410E  
                           l5275 52CE                             l5267 5294  
                           l5259 525C                             l5507 3848  
                           l6307 244E                             l5451 1D7C  
                           l5443 1C90                             l6059 1C10  
                           l6163 5536                             l6155 5510  
                           l6139 49B4                             l6219 4DB4  
                           l5517 5C9E                             l6077 5CDA  
                           l6093 5354                             l6085 5328  
                           l5701 46B8                             l5621 566E  
                           l5613 563C                             l5541 5B7A  
                           l5533 5B68                             l5525 5B56  
                           l5605 5BC0                             l6309 435E  
                           l3917 4EC2                             l4813 3B24  
                           l4821 3C16                             l4805 3B06  
                           l4549 50E0                             l4581 517A  
                           l4573 5148                             l4565 511E  
                           l4557 50F6                             l4493 338A  
                           l4485 3330                             l4477 32DA  
                           l4469 3276                             l4397 3008  
                           l4389 2FDE                             l4629 5A6C  
                           l3941 2B1A                             l3933 2AE8  
                           l4661 4A60                             l4653 4A3E  
                           l4645 4A1A                             l4637 49C6  
                           l4725 4CC4                             l4709 4BF0  
                           l4733 56A0                             l5197 4E0C  
                           l5189 4DC8                             l5437 2AB8  
                           l5429 2A78                             l5381 27A4  
                           l5373 2720                             l5365 26A4  
                           l5357 2618                             l5349 25CA  
                           l5293 4186                             l5285 4154  
                           l5277 52D8                             l5269 529E  
                           l5509 3942                             l5461 1EDC  
                           l5453 1D8A                             l5445 1C94  
                           l6165 5544                             l6157 5512  
                           l6149 54F8                             l6181 4CDA  
                           l5519 5CA0                             l6095 535A  
                           l6087 532E                             l6079 52F0  
                           l5711 470A                             l5703 46CA  
                           l5623 5680                             l5615 564C  
                           l5535 5B6A                             l5527 5B58  
                           l5631 5392                             l5607 5BC2  
                           l3919 4ECC                             l4823 3C30  
                           l4831 3C92                             l4815 3BA6  
                           l4807 3B0C                             l4575 5156  
                           l4583 5180                             l4567 5126  
                           l4559 5104                             l4591 51A2  
                           l4495 3398                             l4487 3344  
                           l4479 32E8                             l4399 300A  
                           l3951 2B4C                             l3935 2AF8  
                           l3943 2B22                             l3927 2ACC  
                           l4671 4A8A                             l4663 4A6A  
                           l4647 4A1C                             l4639 49DC  
                           l4719 4C6E                             l4751 3DB4  
                           l4743 3D1A                             l4903 08C6  
                           l5199 4E24                             l5391 286C  
                           l5383 27C8                             l5375 2730  
                           l5359 263C                             l5295 4192  
                           l5287 416A                             l5279 40F0  
                           l5543 547E                             l5551 5404  
                           l5471 2098                             l5463 1F48  
                           l5455 1DF4                             l5447 1CA2  
                           l6167 5554                             l6159 5524  
                           l6191 4CEE                             l6183 4CDE  
                           l6175 4CCE                             l6097 5360  
                           l6089 533E                             l5713 4718  
                           l5705 46D8                             l5625 5692  
                           l5617 565E                             l5537 5B70  
                           l5529 5B60                             l5633 53C2  
                           l5609 5BC6                             l4681 4F68  
                           l4841 3CD8                             l4833 3CA4  
                           l4825 3C4E                             l4817 3BAC  
                           l4809 3B14                             l4585 5190  
                           l4577 516C                             l4569 5138  
                           l4593 51D0                             l4497 339A  
                           l4489 335E                             l3961 2B82  
                           l3953 2B52                             l3945 2B32  
                           l3937 2B08                             l3929 2AD8  
                           l4673 4A9A                             l4649 4A2C  
                           l4761 3ED2                             l4745 3D3A  
                           l4729 5700                             l4737 56D6  
                           l4921 0960                             l4905 08D8  
                           l5393 287E                             l5385 27EC  
                           l5377 2762                             l5369 26EC  
                           l5641 5824                             l5297 41C4  
                           l5545 547E                             l5553 5404  
                           l5481 21F8                             l5473 20A6  
                           l5465 1FB0                             l5457 1E64  
                           l5449 1D0C                             l5561 3F30  
                           l5801 14B0                             l5721 12AE  
                           l6169 5556                             l6193 4CFA  
                           l6185 4CE2                             l6177 4CD2  
                           l6099 5366                             l5715 472A  
                           l5707 46EA                             l5627 5698  
                           l5619 5664                             l5539 5B72  
                           l5635 53C6                             l4771 5AA4  
                           l4691 4FBA                             l4683 4F78  
                           l4843 3CE0                             l4835 3CB4  
                           l4827 3C68                             l4819 3BB2  
                           l4587 5198                             l4579 5174  
                           l4595 51E0                             l4499 33A0  
                           l3971 2BBE                             l3963 2B92  
                           l3955 2B60                             l3947 2B38  
                           l3939 2B18                             l4675 4AAA  
                           l4659 4A56                             l4763 3EE6  
                           l4755 3E26                             l4747 3D92  
                           l4739 56E8                             l4931 0A30  
                           l4923 0994                             l4907 08F4  
                           l4915 0910                             l4851 06E2  
                           l5395 2894                             l5387 2834  
                           l5379 2772                             l5643 582C  
                           l5299 41C6                             l5547 5496  
                           l5555 541C                             l5491 235E  
                           l5483 2268                             l5475 2110  
                           l5467 1FBE                             l5459 1E72  
                           l5571 404C                             l5563 3F30  
                           l5651 5AE0                             l5811 14E8  
                           l5803 14B8                             l5731 1300  
                           l5723 12B8                             l6195 4D06  
                           l6187 4CE6                             l6179 4CD6  
                           l5717 4738                             l5709 46F8  
                           l5629 5386                             l4781 58A2  
                           l4693 4FCE                             l4685 4F8C  
                           l4837 3CBA                             l4845 3CF0  
                           l4829 3C82                             l4597 520E  
                           l3981 2BDC                             l3973 2BCC  
                           l3965 2B94                             l3957 2B62  
                           l3949 2B4A                             l4677 4ABA  
                           l4669 4A7E                             l4765 3F0E  
                           l4757 3E62                             l4749 3DA6  
                           l4941 0A9C                             l4925 099A  
                           l4933 0A62                             l4917 092A  
                           l4861 0736                             l4853 06F2  
                           l5397 28A2                             l5645 5848  
                           l5637 580A                             l5549 54DE  
                           l5557 5464                             l5493 23C8  
                           l5485 2276                             l5477 2180  
                           l5469 2028                             l5581 40A4  
                           l5573 405C                             l5565 3F70  
                           l5653 5AE4                             l5901 16E6  
                           l5821 150C                             l5813 14EC  
                           l5805 14C0                             l5741 136E  
                           l5733 1314                             l5725 12C4  
                           l5661 5C78                             l6197 4D16  
                           l6189 4CEA                             l5671 45CA  
                           l4783 58A6                             l4775 585C  
                           l4695 4FD2                             l4687 4F9A  
                           l4839 3CCC                             l4791 3A7E  
                           l4599 521E                             l3991 2BF0  
                           l3983 2BE0                             l3975 2BD0  
                           l3959 2B72                             l3967 2B9C  
                           l4767 3F1E                             l4759 3E96  
                           l4943 0AA4                             l4935 0A72  
                           l4927 09F4                             l4871 0780  
                           l4863 073E                             l4855 0700  
                           l5399 28D2                             l5591 55D8  
                           l5639 581C                             l5487 22E0  
                           l5479 218E                             l5583 40C0  
                           l5575 4078                             l5567 4036  
                           l5559 3F30                             l5655 59F8  
                           l5911 170E                             l5903 16EA  
                           l5831 153A                             l5823 1514  
                           l5815 14F0                             l5807 14C6  
                           l5751 13A8                             l5743 1380  
                           l5735 131E                             l5727 12CE  
                           l5719 129E                             l5663 5C7C  
                           l6199 4D18                             l5681 4618  
                           l5673 45D8                             l4777 5860  
                           l4697 5000                             l4689 4FA6  
                           l4793 3A9E                             l3993 2BF4  
                           l3985 2BE4                             l3977 2BD4  
                           l3969 2BAC                             l4961 0B5A  
                           l4953 0AEC                             l4945 0ABE  
                           l4937 0A76                             l4929 0A28  
                           l4881 07BC                             l4873 0788  
                           l4865 0750                             l4857 0708  
                           l4849 06D8                             l5593 55E6  
                           l5489 2350                             l5497 2438  
                           l5585 40C8                             l5577 4080  
                           l5569 403E                             l5649 5ADC  
                           l5657 5A1A                             l5913 1718  
                           l5905 16EE                             l5841 1588  
                           l5833 1556                             l5817 14FA  
                           l5809 14D6                             l5825 151A  
                           l5761 13F2                             l5753 13AA  
                           l5745 1392                             l5737 133A  
                           l5729 12F4                             l5665 5C7E  
                           l5691 466A                             l5683 462A  
                           l5675 45EA                             l4779 5874  
                           l4699 5014                             l4795 3AAE  
                           l4787 3A36                             l3995 2BF8  
                           l3987 2BE8                             l3979 2BD8  
                           l4971 0B98                             l4955 0B00  
                           l4963 0B5E                             l4939 0A88  
                           l4947 0AD8                             l4891 0838  
                           l4875 078C                             l4867 0760  
                           l4859 072C                             l5595 5614  
                           l5587 40E4                             l5579 409C  
                           l5659 5A26                             l5931 178A  
                           l5923 1758                             l5915 1734  
                           l5907 16F8                             l5851 15B4  
                           l5843 158C                             l5835 1562  
                           l5827 1524                             l5819 1504  
                           l5763 13FA                             l5755 13BE  
                           l5771 1418                             l5747 13A2  
                           l5739 134C                             l5667 5C80  
                           l5693 4678                             l5685 4638  
                           l5677 45F8                             l5669 45BA  
                           l5597 5BB4                             l4797 3AB0  
                           l4789 3A56                             l3997 2BFC  
                           l3989 2BEC                             l4981 0BE6  
                           l4973 0B9C                             l4965 0B66  
                           l4957 0B1C                             l4893 0842  
                           l4885 07F2                             l4877 0790  
                           l4869 0774                             l5589 55D0  
                           l5941 17DE                             l5933 1792  
                           l5925 176A                             l5917 1740  
                           l5909 1702                             l5861 15EA  
                           l5853 15C6                             l5845 159C  
                           l5837 1576                             l5829 1530  
                           l5781 1454                             l5773 142A  
                           l5765 1412                             l5757 13D0  
                           l5749 13A6                             l5695 468A  
                           l5687 464A                             l5679 460A  
                           l5599 5BB8                             l4799 3ACA  
                           l3999 2C00                             l4991 0C7E  
                           l4975 0BAE                             l4983 0BEE  
                           l4967 0B78                             l4959 0B52  
                           l4887 0804                             l4879 0796  
                           l5951 182E                             l5943 17E0  
                           l5935 179C                             l5927 1774  
                           l5871 161A                             l5863 15FC  
                           l5855 15CA                             l5847 159E  
                           l5839 1580                             l5791 1482  
                           l5783 1456                             l5775 143C  
                           l5767 1414                             l5759 13E2  
                           l5697 4698                             l5689 4658  
                           l4993 0CD6                             l4985 0BF6  
                           l4977 0BBC                             l4969 0B8A  
                           l4889 0820                             l4897 086A  
                           l5961 188E                             l5953 1848  
                           l5945 1808                             l5937 17C2  
                           l5929 1780                             l5881 166C  
                           l5873 1626                             l5865 1600  
                           l5857 15D0                             l5849 15A4  
                           l5793 1494                             l5785 146A  
                           l5777 144E                             l5769 1416  
                           l5699 46AA                             l4995 0D0A  
                           l4987 0C06                             l4979 0BD4  
                           l4899 0890                             l5971 18E6  
                           l5963 189A                             l5955 1852  
                           l5947 181A                             l5939 17CE  
                           l5891 16B2                             l5883 1688  
                           l5875 1630                             l5867 1606  
                           l5859 15DA                             l5795 1498  
                           l5787 146C                             l5779 1452  
                           l4989 0C1A                             l4997 0D10  
                           l5981 193E                             l5973 18F8  
                           l5965 18AA                             l5957 185E  
                           l5893 16B6                             l5885 168A  
                           l5877 164C                             l5869 1610  
                           l5797 149C                             l5789 1472  
                           l4999 0D2E                             l5991 1974  
                           l5983 1948                             l5975 190A  
                           l5967 18AC                             l5959 1868  
                           l5895 16BA                             l5887 1690  
                           l5879 1658                             l5799 14A6  
                           l5993 1978                             l5985 1958  
                           l5977 1912                             l5969 18D4  
                           l5889 16A0                             l5897 16C4  
                           l5995 1988                             l5987 1966  
                           l5979 192A                             l5899 16D4  
                           l5997 198A                             l5999 198E  
                           STR_1 0635                             STR_2 069A  
                           STR_3 0668                             STR_4 0601  
                           STR_5 0679                             STR_6 0601  
                           STR_7 0624                             STR_8 0601  
                           STR_9 0646                             u4000 2B72  
                           u4001 2B6E                             u4010 2B82  
                           u4011 2B7E                             u4100 2CC8  
                           u4020 2BBE                             u4101 2CC4  
                           u4021 2BBA                             u4110 2CD8  
                           u4030 2BCC                             u4111 2CD4  
                           u4031 2BC8                             u5000 511E  
                           u4200 2E36                             u4120 2D0A  
                           u4040 2C3A                             u5001 511A  
                           u4201 2E32                             u4121 2D06  
                           u4041 2C36                             u5010 5138  
                           u4210 2E52                             u4130 2D18  
                           u4050 2C52                             u5011 5134  
                           u4211 2E4E                             u4131 2D14  
                           u4051 2C4C                             u5020 5156  
                           u5100 4B56                             u4300 2F2A  
                           u4220 2E62                             u4140 2D36  
                           u4060 2C54                             u5021 5152  
                           u5101 4B52                             u4301 2F26  
                           u4221 2E5E                             u4141 2D32  
                           u5030 516C                             u5110 4B76  
                           u4310 2F4A                             u4230 2E74  
                           u4150 2D6E                             u4070 2C7C  
                           u5031 5168                             u5111 4B72  
                           u4311 2F46                             u4231 2E70  
                           u4151 2D6A                             u4071 2C78  
                           u5040 5190                             u5120 4BC6  
                           u4320 2F5C                             u4240 2E8A  
                           u4160 2DB4                             u4080 2C9A  
                           u5200 4AAA                             u6000 0EF8  
                           u4401 44A0                             u5041 518C  
                           u5121 4BC2                             u4321 2F58  
                           u4241 2E86                             u4161 2DB0  
                           u4081 2C96                             u5201 4AA6  
                           u6001 0EF4                             u4410 44C4  
                           u5210 4F78                             u5050 51D0  
                           u5130 5A82                             u4330 2F78  
                           u4250 2EA0                             u4170 2DEA  
                           u4090 2CBA                             u6010 0F0C  
                           u4411 44C0                             u5211 4F74  
                           u5051 51CC                             u5131 5A7E  
                           u4331 2F74                             u4251 2E9C  
                           u4171 2DE6                             u4091 2CB6  
                           u6011 0F08                             u4420 44EE  
                           u4500 4860                             u4340 5936  
                           u5220 4F9A                             u5060 520E  
                           u4260 2EB4                             u4180 2DFA  
                           u5140 49DC                             u6100 10BE  
                           u6020 0F1E                             u4421 44EA  
                           u4501 485C                             u4341 5932  
                           u5221 4F96                             u5061 520A  
                           u4261 2EB0                             u4181 2DF6  
                           u5141 49D8                             u6101 10BA  
                           u6021 0F1A                             u4430 452E  
                           u4350 5B3A                             u5230 4FF0  
                           u4510 33D0                             u5070 5242  
                           u4270 2ECE                             u4190 2E26  
                           u5150 4A10                             u5310 4CBA  
                           u6110 10F8                             u6030 0F2C  
                           u4431 452A                             u4351 5B36  
                           u5231 4FEC                             u4511 33CC  
                           u5071 523E                             u4271 2ECA  
                           u4191 2E22                             u5311 4CB4  
                           u6111 10F4                             u6031 0F28  
                           u7000 46AA                             u6200 4310  
                           u4440 4578                             u5240 5000  
                           u4600 3570                             u4520 33E2  
                           u5080 4AFA                             u4280 2F08  
                           u5160 4A3E                             u5320 4CBC  
                           u5400 3DB4                             u4360 5A64  
                           u6120 1126                             u6040 0F48  
                           u7001 46A6                             u6201 430C  
                           u4441 4574                             u5241 4FFC  
                           u4601 356C                             u4521 33DE  
                           u5081 4AF6                             u4281 2F04  
                           u5161 4A3A                             u5305 4C92  
                           u5401 3DB0                             u4361 5A5E  
                           u6121 1122                             u6041 0F44  
                           u7010 46B8                             u6210 432C  
                           u4450 4750                             u5250 5994  
                           u4610 359A                             u4530 33F2  
                           u5090 4B38                             u4290 2F1A  
                           u5170 4A52                             u5330 5748  
                           u4370 5A66                             u6130 11AA  
                           u6050 0F56                             u7011 46B4  
                           u6211 4328                             u4451 474C  
                           u5251 5990                             u4611 3596  
                           u4531 33EE                             u5091 4B34  
                           u4291 2F16                             u5171 4A4E  
                           u5155 4A06                             u6131 11A6  
                           u6051 0F52                             u7020 46CA  
                           u5500 5874                             u6220 43E2  
                           u4380 4444                             u4460 4782  
                           u4700 3696                             u4620 35BE  
                           u4540 3436                             u5180 4A7A  
                           u5260 4C10                             u5420 3E22  
                           u5340 575A                             u6140 11C4  
                           u6060 0FAE                             u6300 4E7A  
                           u7021 46C6                             u5501 5870  
                           u6221 43DC                             u4381 4440  
                           u4461 477E                             u4701 3692  
                           u4621 35BA                             u4541 3432  
                           u5181 4A76                             u5421 3E1E  
                           u5341 5756                             u6141 11C0  
                           u6061 0FAA                             u6301 4E76  
                           u7101 12A4                             u7030 46D8  
                           u5510 58A2                             u6230 43E4  
                           u4390 4476                             u4470 47C0  
                           u3910 4EB0                             u4710 36DE  
                           u4630 35D4                             u4550 3448  
                           u5190 4A9A                             u5270 4C2E  
                           u5430 3E46                             u5350 56D0  
                           u6150 11DC                             u6070 1080  
                           u6310 595E                             u7110 1314  
                           u7031 46D4                             u5511 589E  
                           u4391 4472                             u4471 47BC  
                           u3911 4EAC                             u4711 36DA  
                           u4631 35D0                             u4551 3444  
                           u5191 4A96                             u5271 4C2A  
                           u5415 3DC8                             u5351 56CA  
                           u6151 11D8                             u6071 107C  
                           u6311 595A                             u7111 1310  
                           u6320 576C                             u7040 46EA  
                           u6240 43FA                             u4480 47EA  
                           u3920 4EC2                             u5600 3C4E  
                           u5520 3A66                             u4720 370E  
                           u4640 35F2                             u4560 3458  
                           u4800 3060                             u5280 4C56  
                           u5440 3E62                             u5416 3DD2  
                           u5360 56D2                             u6160 123A  
                           u6080 109C                             u6400 52BC  
                           u7200 13E2                             u7120 133A  
                           u6321 5768                             u7041 46E6  
                           u6241 43F6                             u4481 47E6  
                           u3921 4EBE                             u5601 3C4A  
                           u5521 3A60                             u4721 370A  
                           u4641 35EE                             u4561 3454  
                           u4801 305C                             u5281 4C52  
                           u5265 4C06                             u5441 3E5E  
                           u5417 3DE2                             u5337 573E  
                           u6161 1234                             u6081 1098  
                           u6401 52B8                             u7201 13DE  
                           u7121 1336                             u6330 5782  
                           u7050 46F8                             u6250 440C  
                           u4490 4818                             u3930 4EEA  
                           u5610 3C68                             u5530 3A68  
                           u4730 373C                             u4650 3612  
                           u4570 3498                             u4810 3070  
                           u5290 4C80                             u5450 3EB6  
                           u5370 56E8                             u6170 123C  
                           u6090 10AE                             u6410 4100  
                           u7210 13F2                             u7130 134C  
                           u6331 577E                             u7051 46F4  
                           u6251 4408                             u4491 4814  
                           u3931 4EE6                             u5611 3C64  
                           u4731 3738                             u4651 360E  
                           u4571 3494                             u4811 306C  
                           u5291 4C7C                             u5435 3E3C  
                           u5371 56E4                             u6091 10AA  
                           u6411 40FC                             u7211 13EE  
                           u7131 1348                             u6340 5798  
                           u7060 470A                             u3940 4F20  
                           u5620 3C82                             u5540 3A7E  
                           u4660 3624                             u4580 34D8  
                           u4900 3330                             u4820 31EA  
                           u4740 2FA6                             u5460 3ED2  
                           u5380 3D62                             u6180 1252  
                           u5700 0774                             u6260 4DF2  
                           u6500 428E                             u6420 410E  
                           u7300 1576                             u7220 142A  
                           u7140 136E                             u6341 5794  
                           u7061 4706                             u3941 4F1C  
                           u5621 3C7E                             u5541 3A7A  
                           u4661 3620                             u4581 34D4  
                           u4901 332C                             u4741 2FA2  
                           u5461 3ECE                             u6181 124E  
                           u5701 0770                             u6261 4DEE  
                           u6501 428A                             u6421 410A  
                           u7301 1572                             u7221 1426  
                           u7141 136A                             u6350 57AE  
                           u7070 4718                             u6190 42DA  
                           u5630 3C92                             u5550 3AAE  
                           u4670 3652                             u4590 354E  
                           u4910 335E                             u4830 3244  
                           u4750 2FB8                             u3950 2AE6  
                           u5470 3F0E                             u5390 3D92  
                           u5710 07BC                             u6270 4E24  
                           u6510 24BA                             u6430 416A  
                           u7310 159C                             u7230 143C  
                           u7150 1380                             u6351 57AA  
                           u7071 4714                             u6191 42D6  
                           u5631 3C8E                             u5551 3AAA  
                           u4671 364E                             u4591 354A  
                           u4911 335A                             u4831 3240  
                           u4751 2FB4                             u3951 2AE2  
                           u5471 3F0A                             u5455 3EAC  
                           u5391 3D8E                             u5711 07B8  
                           u6271 4E20                             u6511 24B6  
                           u6431 4166                             u7311 1598  
                           u7231 1438                             u7151 137C  
                           u7080 472A                             u5480 5AD4  
                           u5640 3CA4                             u5560 3ACA  
                           u4680 3668                             u4920 3398  
                           u4840 3264                             u4760 2FC8  
                           u3960 2AF8                             u5800 09F0  
                           u5720 07EC                             u6280 4E40  
                           u6600 26E8                             u6520 2502  
                           u6440 41C0                             u6360 5584  
                           u7400 16D4                             u7320 15B4  
                           u7240 144E                             u7160 1392  
                           u7081 4726                             u5481 5ACE  
                           u5641 3CA0                             u5561 3AC6  
                           u4681 3664                             u4921 3394  
                           u4841 3260                             u4825 31E0  
                           u4761 2FC4                             u3961 2AF4  
                           u5385 3D58                             u5801 09EC  
                           u5721 07E6                             u6281 4E3C  
                           u6521 24FE                             u6441 41BC  
                           u6361 5580                             u7401 16D0  
                           u7321 15B0                             u7241 144A  
                           u7161 138E                             u7090 4738  
                           u5490 5AD6                             u5650 3CB4  
                           u5570 3AF8                             u4930 5040  
                           u4690 367C                             u4850 3276  
                           u4770 3008                             u3970 2B08  
                           u5810 0A62                             u5730 07EE  
                           u6290 4E52                             u6610 26FE  
                           u6530 2546                             u6450 420A  
                           u6370 55BE                             u7410 16E6  
                           u7330 15C6                             u7250 146A  
                           u7170 13A2                             u7091 4734  
                           u5651 3CB0                             u5571 3AF4  
                           u4931 503C                             u4691 3678  
                           u4851 3272                             u4771 3004  
                           u3971 2B04                             u5811 0A5E  
                           u6291 4E4E                             u6611 26FA  
                           u6531 2542                             u6451 4206  
                           u6371 55BA                             u7411 16E2  
                           u7331 15C2                             u7251 1466  
                           u7171 139E                             u5660 3CCC  
                           u5580 3B06                             u4940 505A  
                           u4860 32A4                             u4780 301A  
                           u3980 2B4A                             u5900 0B8A  
                           u5820 0A88                             u5740 0804  
                           u6700 29AC                             u6620 2730  
                           u6540 25C4                             u6460 4228  
                           u6380 5272                             u7500 193E  
                           u7420 1754                             u7340 15EA  
                           u7260 1482                             u7180 13BE  
                           u5661 3CC8                             u5581 3B02  
                           u4941 5056                             u4861 32A0  
                           u4781 3016                             u3981 2B46  
                           u5901 0B86                             u5821 0A84  
                           u5741 0800                             u6701 29A8  
                           u6621 272C                             u6541 25BE  
                           u6461 4224                             u6381 526E  
                           u7501 193A                             u7421 1750  
                           u7341 15E6                             u7261 147E  
                           u7181 13BA                             u5590 3C30  
                           u4950 5080                             u4870 32BA  
                           u4790 302A                             u3990 2B60  
                           u5910 0B98                             u5830 0A9C  
                           u5750 0890                             u5670 0700  
                           u6710 2A48                             u6630 2772  
                           u6550 25C6                             u6470 4238  
                           u6390 5294                             u7510 1958  
                           u7430 17DE                             u7350 15FC  
                           u7270 1494                             u7190 13D0  
                           u5591 3C2C                             u4951 507C  
                           u4871 32B6                             u4791 3026  
                           u3991 2B5C                             u5911 0B94  
                           u5831 0A98                             u5751 088C  
                           u5671 06FC                             u6711 2A44  
                           u6631 276E                             u6471 4234  
                           u6391 5290                             u7511 1954  
                           u7431 17DA                             u7351 15F8  
                           u7271 1490                             u7191 13CC  
                           u6800 564C                             u4960 509E  
                           u4880 32CE                             u5920 0BAE  
                           u5840 0ABE                             u5760 08C0  
                           u5680 0750                             u6640 27C8  
                           u6560 25DC                             u6480 4246  
                           u6720 5496                             u7600 1AEC  
                           u7520 1966                             u7440 181A  
                           u7360 166C                             u7280 14D6  
                           u6801 5648                             u4961 509A  
                           u4881 32CA                             u5921 0BAA  
                           u5841 0ABA                             u5761 08BA  
                           u5681 074C                             u6641 27C4  
                           u6561 25D8                             u6481 4242  
                           u6721 5492                             u7601 1AE8  
                           u7521 1962                             u7441 1816  
                           u7361 1668                             u7281 14D2  
                           u6810 5680                             u4970 50BA  
                           u4890 32E8                             u5930 0BBC  
                           u5850 0AE8                             u5770 08C2  
                           u5690 0760                             u6650 27EC  
                           u6570 2600                             u6490 4280  
                           u6730 541C                             u7610 1B4E  
                           u7530 1988                             u7450 18AA  
                           u7370 1688                             u7290 14E8  
                           u6811 567C                             u4971 50B6  
                           u4891 32E4                             u5931 0BB8  
                           u5851 0AE4                             u5691 075C  
                           u6651 27E8                             u6571 25FC  
                           u6491 427C                             u6731 5418  
                           u7611 1B4A                             u7531 1984  
                           u7451 18A6                             u7371 1684  
                           u7291 14E4                             u6900 460A  
                           u6820 53BE                             u4980 50E0  
                           u5940 0BE6                             u5860 0B00  
                           u5780 08D8                             u6660 287E  
                           u6580 263C                             u6740 4078  
                           u7620 1B80                             u7540 199E  
                           u7460 18D4                             u7380 16A0  
                           u7700 4D16                             u6901 4606  
                           u4981 50DC                             u5941 0BE2  
                           u5861 0AFC                             u5781 08D4  
                           u6661 287A                             u6581 2638  
                           u6741 4074                             u7621 1B7C  
                           u7541 199A                             u7461 18D0  
                           u7381 169C                             u7701 4D12  
                           u6910 4618                             u6830 53F2  
                           u4990 5104                             u5950 0D2E  
                           u5870 0B1C                             u5790 095C  
                           u6670 292C                             u6590 26E6  
                           u6750 409C                             u7630 1BC8  
                           u7550 19B4                             u7470 18E6  
                           u7390 16B2                             u7710 4D28  
                           u6911 4614                             u4991 5100  
                           u5951 0D2A                             u5871 0B18  
                           u5791 0958                             u6671 2928  
                           u6591 26E0                             u6751 4098  
                           u7631 1BC4                             u7551 19B0  
                           u7471 18E2                             u7391 16AE  
                           u7711 4D24                             u6920 462A  
                           u6840 5402                             u5960 0D94  
                           u5880 0B52                             u6680 2994  
                           u6760 40C0                             u7640 1BD8  
                           u7560 1A16                             u7480 18F8  
                           u7720 4D3A                             u6921 4626  
                           u6841 53FE                             u5961 0D90  
                           u5881 0B4E                             u6681 298E  
                           u6761 40BC                             u7641 1BD4  
                           u7561 1A12                             u7481 18F4  
                           u7721 4D36                             u6930 4638  
                           u5970 0DDC                             u5890 0B78  
                           u6690 2996                             u6770 40E4  
                           u7650 1C24                             u7570 1A48  
                           u7490 190A                             u6850 5C90  
                           u7730 4D4C                             u6931 4634  
                           u6827 53B4                             u5971 0DD8  
                           u5891 0B74                             u6771 40E0  
                           u7651 1C20                             u7571 1A44  
                           u7491 1906                             u6851 5C8C  
                           u7731 4D48                             u7660 5CC6  
                           u6940 464A                             u6860 45CA  
                           u5980 0DEC                             u6780 5630  
                           u7580 1A90                             u7740 4D5C  
                           u7661 5CC2                             u6941 4646  
                           u6861 45C6                             u6837 53E8  
                           u5981 0DE8                             u6781 562C  
                           u7581 1A8C                             u7741 4D58  
                           u6950 4658                             u6870 45D8  
                           u6790 5BDA                             u5990 0E54  
                           u7590 1AA0                             u7670 5510  
                           u7750 4D86                             u6951 4654  
                           u6871 45D4                             u6791 5BD6  
                           u5991 0E50                             u7591 1A9C  
                           u7671 550C                             u7751 4D82  
                           u6960 466A                             u6880 45EA  
                           u7680 5534                             u7760 4DB4  
                           u6961 4666                             u6881 45E6  
                           u7681 5530                             u7817 49A6  
                           u7761 4DB0                             u6970 4678  
                           u6890 45F8                             u7690 5554  
                           u6971 4674                             u6891 45F4  
                           u7827 5B64                             u7691 5550  
                           u6980 468A                             u6981 4686  
                           u7837 5B74                             u6990 4698  
                           u7847 531A                             u6991 4694  
                           u7857 5334                             u7867 534A  
                           u7877 5CA6                             _TMR2 000FBC  
                           abs@a 0013                ?_Lcd_Write_String 0005  
                           _dbuf 0200                             _atoi 42A2  
                           _main 4CCE                             _dtoa 3A36  
                           _prec 01B6                             _nout 01B2  
                           pad@i 0018                             pad@p 0015  
                           fsr1h 000FE2                             fsr2h 000FDA  
                           indf1 000FE7                             indf2 000FDF  
                           fsr1l 000FE1                             pad@w 001A  
                           fsr2l 000FD9                             btemp 005F  
                  ___fpclassifyf 4BD0                             prodh 000FF4  
                           prodl 000FF3                             start 0068  
             ??_Lcd_Write_String 0007                  ___fldiv@new_exp 0046  
                __end_of_Lcd_Cmd 5CB2                     _tolower$2667 000D  
                   ___param_bank 000000                            ??_abs 0015  
                          ??_pad 0017                     ?_menuControl 0001  
                  ___fltol@sign1 0056                  __end_of___aodiv 45BA  
                          ?_atoi 0008                  __end_of___fladd 2F8C  
                          ?_main 0001                            ?_dtoa 001C  
                __end_of___aomod 48A2                  __end_of_adcInit 59F8  
                __end_of___fldiv 3750                  __end_of___awdiv 50F2  
                __end_of___flneg 5AA4                            _EEADR 000FA9  
                          STR_10 068A                            STR_11 0657  
                          STR_12 068A                            STR_21 06C8  
                          STR_13 0613                            STR_22 06D0  
                          STR_14 06A9                            STR_15 0613  
                          STR_16 06B7                            STR_25 06D4  
                          STR_17 06C4                            STR_18 06CC  
                          STR_27 06D4                  __end_of___awmod 51A2  
                __end_of___flmul 33B6                  __end_of___flsub 58F4  
                __end_of___fltol 4ACC                  __end_of___lldiv 52F0  
                          _T0CON 000FD5                  ___awdiv@divisor 0003  
                          i2l482 0064                  ___awdiv@counter 0005  
                   vfpfcnvrt@fmt 00A9                            _TMR0H 000FD7  
                          _TMR0L 000FD6          __size_of_Lcd_Set_Cursor 0066  
            ___lmul@multiplicand 0005                            _fabsf 5B7E  
                          _flags 01B8                            _fputc 4E9E  
                          _fputs 58F4                  __end_of_isdigit 5ADC  
                    ?_PWM1_setDC 0058                     _adc_raw_data 0183  
                    ?_PWM2_setDC 0058                            atoi@n 0015  
                          pad@fp 0011                            atoi@s 0008  
                          _width 01B4                            _putch 5CE8  
                          dtoa@d 001E                            dtoa@i 003E  
                          dtoa@n 0036                            dtoa@p 0030  
                          dtoa@s 0034                            dtoa@w 0032  
                __end_of_isspace 58AE                  __end_of_isupper 5A6C  
               __end_of_PWM_Init 5C30                            tablat 000FF5  
                          ttemp5 0060                            ttemp6 0063  
                          ttemp7 0067                            status 000FD8  
                          wtemp8 0060                  __end_of_sprintf 585C  
                 ?___fpclassifyf 0001                  __end_of_tolower 5700  
                __end_of_strncmp 4E9E                    ?_readAdcValue 0001  
               __end_of_Lcd_Port 57B8                  __initialization 57B8  
                    _system_init 48A2                     __end_of_atoi 4432  
                   __end_of_main 4DC8                     __end_of_dtoa 3D1A  
                         ??_atoi 000A                           ??_main 005F  
                         ??_dtoa 0026               __size_of_Lcd_Clear 000E  
                  __activetblptr 000002  __size_of_calculatedAverageValue 02E6  
                         ?_fabsf 001C                           _ADCON0 000FC2  
                         _ADCON1 000FC1                           ?_fputc 0001  
                         ?_fputs 000A                           _ADRESH 000FC4  
                         _ADRESL 000FC3                           _EEDATA 000FA8  
                         _CCPR1L 000FBE                           _CCPR2L 000F67  
                         _EECON2 000FA7                 ___awdiv@dividend 0001  
                         ?_putch 0001                           i2l6231 0030  
                         i2l6223 000A                           i2l6241 005C  
                         i2l6233 0034                           i2l6225 0018  
                         i2l6243 0060                           i2l6235 0042  
                         i2l6227 0026                           i2l6237 0048  
                         i2l6229 0028                           i2l6239 004C  
                      ??_Lcd_Cmd 0002                           _TIMER0 0008  
                 ??_readAdcValue 0003          __size_of_Lcd_Write_Char 0036  
               __end_of___xxtofl 42A2                _scanAdcConversion 1C90  
             _timer_counter_flag 01BE               ?_scanAdcConversion 0001  
           __size_of_eepromWrite 002E                     vfprintf@cfmt 00CD  
               __end_of_lcd_init 5386                           ___flge 4ACC  
                         ___fleq 51A2                           ___lmul 5566  
                      ??___aodiv 0011                        ??___fladd 003D  
                      ??___aomod 0011                           ___wmul 5C30  
                      ??_adcInit 0001                        ??___fldiv 003D  
                      ??___awdiv 0005                        ??___flneg 0005  
                      ??___awmod 0005                        ??___flmul 0024  
                      ??___flsub 004D                        ??___fltol 0052  
                      ??___lldiv 0009                           _efgtoa 06D8  
                         _floorf 3D1A              __size_of_PWM1_setDC 007A  
                         fabsf@u 0020                           fabsf@x 001C  
               __end_of_mcu_init 5CC8              __size_of_PWM2_setDC 007A  
            ??_scanAdcConversion 0058                           clear_0 57DE  
                         clear_1 57EA                           clear_2 57F6  
                eepromWrite@data 0001                 ___awdiv@quotient 0007  
                ___awmod@divisor 0003                  ___awmod@counter 0005  
                         pad@buf 0013                           dtoa@fp 001C  
                         _strcpy 5700                           _strlen 5B12  
                         fputc@c 0001             readAdcValue@adcValue 0006  
                         fputs@c 000E                           fputs@i 000F  
                         fputs@s 000A                        ??_isdigit 0003  
                ___fpclassifyf@e 0009                  ___fpclassifyf@u 000B  
                ___fpclassifyf@x 0001                     __mediumconst 0000  
                      ??_isspace 0003                           tblptrh 000FF7  
                      ??_isupper 0003                           tblptrl 000FF6  
                         tblptru 000FF8                           putch@c 0001  
               __end_of_vfprintf 563A                        ??_sprintf 005F  
                      ??_tolower 0009                        ??_strncmp 0007  
     __end_of_buttonControlFlags 473E                  Lcd_Set_Cursor@a 0005  
                Lcd_Set_Cursor@b 0004                  Lcd_Set_Cursor@y 0007  
                Lcd_Set_Cursor@z 0006                       ___flge@ff1 0035  
                     ___flge@ff2 0039                  ??___fpclassifyf 0005  
                   ___xxtofl@arg 0018                     ___xxtofl@exp 0017  
                   ___xxtofl@val 000E                       ___fleq@ff1 0001  
                     ___fleq@ff2 0005        __end_of_scanAdcConversion 2496  
                     __accesstop 0060          __end_of__initialization 57FC  
                     ___flneg@f1 0001           _calculatedAverageValue 3750  
              __end_of_Lcd_Clear 5CE8                    ___rparam_used 000001  
                     ___fltol@f1 004E                   __pcstackCOMRAM 0001  
                   __pidataBANK1 5C56                    __end_of_fabsf 5BB2  
                  __end_of_fputc 4F68                    __end_of_fputs 5938  
                  __end_of_putch 5CEA                        ?_PWM_Init 0001  
                 _Lcd_Set_Cursor 563A     _KP@fs_speed_controller$F1181 01D3  
   _KP@fs_speed_controller$F1782 01C3     _KP@fs_speed_controller$F1598 01CB  
              eepromRead@address 0001             __size_of_menuControl 006E  
                        ??_fabsf 0020                        ?_Lcd_Port 0001  
                        ??_fputc 0005                          ??_fputs 000E  
                        ??_putch 0001                       __pbssBANK0 00F3  
                     __pbssBANK1 0100                       __pbssBANK2 0200  
            PWM1_setDC@dutycycle 0058                          ?_TIMER0 0001  
                        ?___flge 0035                          ?___fleq 0001  
                        ?___lmul 0001                          ?___wmul 0001  
                        ?_efgtoa 0058                          _CCP1CON 000FBD  
                        _CCP2CON 000F66                          ?_floorf 004E  
                 ___lmul@product 0009        __size_of_Lcd_Write_String 007E  
         __end_of_Lcd_Set_Cursor 56A0                       ??_PWM_Init 0001  
                        ?_strcpy 0001                          ?_strlen 0001  
           __end_of_readAdcValue 597A                       _eepromRead 5C76  
                      ?___xxtofl 000E               __size_of_vfpfcnvrt 0636  
                     ??_Lcd_Port 0001                     ??_PWM1_setDC 005A  
                   ??_PWM2_setDC 005A                        ?_lcd_init 0001  
        __size_of_menuInitialize 0028                    _menu_selected 01BB  
             __size_of_stopMotor 003C       __size_of_scanAdcConversion 0806  
                 _Lcd_Write_Char 5B48                          _Lcd_Cmd 5C94  
                      ?_mcu_init 0001                  __size_of_TIMER0 0060  
              stateMachine@F6401 0163                       _controller 0150  
                        __Hparam 0000                          __Lparam 0000  
            PWM2_setDC@dutycycle 0058                     ?_system_init 0001  
                __size_of___flge 0104                  __size_of___fleq 00AA  
                        ___aodiv 4432                          ___fladd 2ACC  
                        ___aomod 473E                          _adcInit 59BA  
                        ___fldiv 33B6                          ___awdiv 502E  
                        ___flneg 5A6C                  __size_of___lmul 006A  
                        ___awmod 50F2                          ___flmul 2F8C  
                        ___flsub 58AE                          ___fltol 49C6  
                        ___lldiv 524C                  __size_of___wmul 0026  
                      ?_vfprintf 00C7                     __psmallconst 0600  
                __size_of_efgtoa 0BC6                  __size_of_floorf 0216  
                        __pcinit 57B8               __end_of_PWM1_setDC 54F8  
                        __ramtop 0600                  ?_Lcd_Set_Cursor 0004  
             __end_of_PWM2_setDC 547E                          __ptext0 4CCE  
                        __ptext1 5CC8                          __ptext2 48A2  
                        __ptext3 5C76                          __ptext4 5BE0  
                        __ptext5 54F8                          __ptext6 129E  
                        __ptext7 59F8                          __ptext8 5ADC  
                        __ptext9 3F30                       _menu_flags 00FD  
                     _menu_value 01AF                  __size_of_strcpy 005C  
                __size_of_strlen 0036                          _counter 01AB  
        stateMachine@textCursor2 00E3                        _T2CONbits 000FBA  
                   __size_of_abs 0040                     __size_of_pad 00C6  
                        _isdigit 5AA4                       ??___xxtofl 0012  
               ___awmod@dividend 0001                          _isspace 585C  
                        _isupper 5A34                          efgtoa@c 005E  
                        efgtoa@d 0087                          efgtoa@e 009F  
                        efgtoa@f 005A                          efgtoa@g 009B  
                        efgtoa@h 0091                          efgtoa@i 0099  
                        efgtoa@l 0095                          efgtoa@m 0083  
                        efgtoa@n 00A1                          efgtoa@p 008B  
                        efgtoa@t 007F                          efgtoa@u 00A3  
                        efgtoa@w 008E                    ?_speedControl 0058  
                        atoi@neg 000E                    ?_timer_0_init 0001  
                        _sprintf 580A                          _tolower 56A0  
                     ??_lcd_init 0004           __end_of_Lcd_Write_Char 5B7E  
                        _strncmp 4DC8             end_of_initialization 57FC  
           speedControl@position 0058                          floorf@e 0064  
                        floorf@m 0060                          floorf@u 0066  
                        floorf@x 004E                          fputc@fp 0003  
                     ??_mcu_init 0001                    __Lmediumconst 0000  
                        fputs@fp 000C                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 2ACC  
                     efgtoa@mode 0090                       efgtoa@sign 0089  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                        Lcd_Port@a 0001  
                     ??_vfprintf 005F                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                __end_of_stopMotor 5A34  
                      _PORTBbits 000F81                        _PORTDbits 000F83  
                    ?_eepromRead 0001                      ___fladd@grs 0044  
                  ___xxtofl@sign 0016                        _TRISAbits 000F92  
                 ??_speedControl 005C                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _TRISEbits 000F96                   ??_timer_0_init 0001  
                    ___fldiv@grs 0048                      ___fldiv@rem 0041  
                     _startMotor 5ADC                  ?_Lcd_Write_Char 0001  
        ?_calculatedAverageValue 0001                Lcd_Write_String@a 0005  
              Lcd_Write_String@i 0009                      ___flmul@grs 0029  
                  ??_eepromWrite 0002         _button_bounce_controller 00FE  
                 __end_of_TIMER0 0068                    ?_stateMachine 0001  
             _buttonControlFlags 45BA                        _Lcd_Clear 5CDA  
                   _convert_data 0100            __size_of_readAdcValue 0042  
                 __end_of___flge 4BD0                   __end_of___fleq 524C  
                 __end_of___lmul 55D0                      vfpfcnvrt@ap 00AB  
                    vfpfcnvrt@ct 00C3                      vfpfcnvrt@fp 00A7  
                    vfpfcnvrt@ll 00B1                   __end_of___wmul 5C56  
               _Lcd_Write_String 5386                   __end_of_efgtoa 129E  
            ?_buttonControlFlags 0001                   __end_of_floorf 3F30  
                     floorf@F524 019F                   __end_of_strcpy 575C  
                 __end_of_strlen 5B48                __size_of_PWM_Init 0028  
            start_initialization 57B8                      __end_of_abs 59BA  
                    __end_of_pad 502E   __end_of_calculatedAverageValue 3A36  
                 _menuInitialize 5BE0                     _driver_limit 0193  
              __size_of_Lcd_Port 005C             ??_buttonControlFlags 0001  
                       ??_TIMER0 0001            __end_of___fpclassifyf 4CCE  
                   _readAdcValue 5938                   ??_stateMachine 00E1  
            __size_of_eepromRead 001E                      vfprintf@fmt 00C9  
                     ?_Lcd_Clear 0001                         ??___flge 003D  
                       ??___fleq 0009                         ??___lmul 0009  
            __end_of_eepromWrite 5BE0                         ??___wmul 0005  
                       ??_efgtoa 006A                      __pdataBANK1 01BF  
                       ??_floorf 0052             __size_of_system_init 0124  
                Lcd_Write_Char@a 0004                  Lcd_Write_Char@y 0003  
                  ??_menuControl 005F                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0039  
                      ___fladd@b 0035                        ___fldiv@a 0039  
                      ___fldiv@b 0035                        ___flmul@a 0020  
                      ___flmul@b 001C                        ___flsub@a 0049  
                      ___flsub@b 0045           __end_of_menuInitialize 5C08  
                  __pcstackBANK0 0060                 ___aodiv@dividend 0001  
              __size_of___xxtofl 01B4                      ?_startMotor 0001  
                       ?_Lcd_Cmd 0001                __size_of_lcd_init 0096  
                      _atoi$2572 0010                        _atoi$2573 0014  
                      _atoi$2574 0012                __size_of_mcu_init 0016  
                    _efgtoa$2510 0077                      _efgtoa$2505 0073  
                    _efgtoa$2514 0079                      _efgtoa$2506 0075  
                    _efgtoa$2515 007B                      _efgtoa$2516 007D  
                      _dtoa$2481 002E    stateMachine@secretMenuCounter 01BA  
           __end_of_speedControl 40EE                 ??_Lcd_Set_Cursor 0005  
                      __pintcode 0008             __end_of_timer_0_init 5CDA  
                       ?___aodiv 0001                         ?___fladd 0035  
                       ?___aomod 0001                         ?_adcInit 0001  
                       ?___fldiv 0035                         ?___awdiv 0001  
               ___aodiv@quotient 0013                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 001C  
                       ?___flsub 0045                         ?___fltol 004E  
                       ?___lldiv 0001                __size_of_vfprintf 006A  
                      fabsf@F463 01A7                      __smallconst 0600  
                       ?_isdigit 0001                         ?_isspace 0001  
                ?_menuInitialize 0001                         ?_isupper 0001  
            __end_of_menuControl 5566                   __size_of_fabsf 0034  
                       ?_sprintf 00CF                         ?_tolower 0007  
                 __size_of_fputc 00CA                   __size_of_fputs 0044  
                       ?_strncmp 0001                   __size_of_putch 0002  
             eepromWrite@address 0002                   ___wmul@product 0005  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                    _eepromWrite 5BB2                   PWM1_setDC@duty 005C  
                       Lcd_Cmd@a 0003                         _PIR2bits 000FA1  
                       i2u780_40 005C                         i2u780_41 0058  
                       i2u777_40 0018                         i2u777_41 0014  
                       i2u778_40 0026                         i2u778_41 0022  
                       i2u779_40 0042                         i2u779_41 003E  
                    ??_Lcd_Clear 0004                     _pauseIsClick 00FF  
            __size_of_startMotor 0036                        _vfpfcnvrt 2496  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
                       _PWM_Init 5C08                ___wmul@multiplier 0001  
                   ??_eepromRead 0001                 ??_Lcd_Write_Char 0002  
                 PWM2_setDC@duty 005C                        _stopMotor 59F8  
           __end_of_stateMachine 1C90                     _isspace$2603 0007  
                       _Lcd_Port 575C                       vfpfcnvrt@c 00C6  
                     vfpfcnvrt@f 00BF                ___lmul@multiplier 0001  
                      copy_data0 57CC         __end_of_Lcd_Write_String 5404  
               __size_of_Lcd_Cmd 001E                       _EECON1bits 000FA6  
                       __Hrparam 0000                       vfprintf@ap 00CB  
                       __Lrparam 0000                       vfprintf@fp 00C7  
             __end_of_eepromRead 5C94                 __size_of___aodiv 0188  
               __size_of___fladd 04C0                 __size_of___aomod 0164  
               __size_of_adcInit 003E                 __size_of___fldiv 039A  
               __size_of___awdiv 00C4                 __size_of___flneg 0038  
               __size_of___awmod 00B0                 __size_of___flmul 042A  
               __size_of___flsub 0046                 __size_of___fltol 0106  
               __size_of___lldiv 00A4                       ?_vfpfcnvrt 00A7  
                    _menuControl 54F8                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELAbits 000F38  
                     _ANSELBbits 000F39                       _ANSELCbits 000F3A  
                     _ANSELDbits 000F3B                       _ANSELEbits 000F3C  
             ___fpclassifyf@F463 01A3                       sprintf@fmt 00D1  
                       ___xxtofl 40EE                       ?_stopMotor 0001  
               __size_of_isdigit 0038                 __size_of_isspace 0052  
                       __ptext10 1C90                         __ptext11 5938  
                       __ptext20 55D0                         __ptext12 3750  
                       __ptext21 2496                         __ptext13 5566  
                       __ptext30 58AE                         __ptext22 4DC8  
                       __ptext14 524C                         __ptext31 2ACC  
                       __ptext23 06D8                         __ptext15 5404  
                       __ptext40 4F68                         __ptext32 5A6C  
                       __ptext24 56A0                         __ptext16 547E  
                       __ptext41 5B12                         __ptext33 2F8C  
                       __ptext25 5A34                         __ptext17 5B7E  
                       __ptext50 5AA4                         __ptext42 58F4  
                       __ptext34 4ACC                         __ptext26 5700  
                       __ptext18 40EE                         __ptext51 5C30  
                       __ptext43 4E9E                         __ptext35 51A2  
                       __ptext27 3D1A                         __ptext19 580A  
                       __ptext60 5C08                         __ptext52 5BB2  
                       __ptext44 5CE8                         __ptext36 33B6  
                       __ptext28 4BD0                         __ptext61 5CDA  
                       __ptext53 5386                         __ptext45 597A  
                       __ptext37 50F2                         __ptext29 49C6  
                       __ptext62 5C94                         __ptext54 5B48  
                       __ptext46 473E                         __ptext38 502E  
                       __ptext63 575C                         __ptext55 563A  
                       __ptext47 4432                         __ptext39 3A36  
                       __ptext56 45BA                         __ptext48 42A2  
                       __ptext57 5CB2                         __ptext49 585C  
                       __ptext58 52F0                         __ptext59 59BA  
               __size_of_isupper 0038                         _lcd_init 52F0  
               __size_of_sprintf 0052                 __size_of_tolower 0060  
                     strcpy@dest 0001                 __size_of_strncmp 00D6  
                       _mcu_init 5CB2                    __size_of_atoi 0190  
                  __size_of_main 00FA                    __size_of_dtoa 02E4  
          __size_of_speedControl 01BE            __size_of_timer_0_init 0012  
                       efgtoa@fp 0058                         efgtoa@ne 0085  
                       efgtoa@pp 0081                         efgtoa@ou 006F  
                       int$flags 005F                         _vfprintf 55D0  
         readAdcValue@adcChannel 0005                 ___aomod@dividend 0001  
                 _vfpfcnvrt$2530 00B9                   _vfpfcnvrt$2531 00BB  
                 _vfpfcnvrt$2536 00BD                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2     _KD@fs_speed_controller$F1182 01CF  
   _KD@fs_speed_controller$F1783 01BF     _KD@fs_speed_controller$F1599 01C7  
                       isdigit@c 0001                     _speedControl 3F30  
                   _timer_0_init 5CC8                     ??_startMotor 005E  
             Lcd_Write_Char@temp 0002                         intlevel2 0000  
                      sprintf@ap 00D9      __size_of_buttonControlFlags 0184  
                       isspace@c 0001                 ___lldiv@dividend 0001  
                      strcpy@src 0003                         isupper@c 0001  
                      strncmp@_l 0001                        strncmp@_r 0003  
                     _OSCCONbits 000FD3                    ??_system_init 0002  
                    efgtoa@nmode 008D                     _procces_data 0130  
                ___aomod@divisor 0009                      ??_vfpfcnvrt 00AD  
                ___aomod@counter 0011               Lcd_Set_Cursor@temp 0008  
               ??_menuInitialize 0001               __end_of_startMotor 5B12  
          __size_of_stateMachine 09F2                         sprintf@f 00DB  
                       tolower@c 0007                         sprintf@s 00CF  
         __size_of___fpclassifyf 00FE                 ___lldiv@quotient 0009  
                    ??_stopMotor 005E                         strncmp@l 0008  
                       strncmp@n 0005                         strncmp@r 000A  
                    _timer_value 00F3                    ___fladd@signs 0041  
                     _PWM1_setDC 547E                       _PWM2_setDC 5404  
                   ___aodiv@sign 0012                      _textCursor2 0173  
                   ___fladd@aexp 0042                     ___fladd@bexp 0043  
                   ?_eepromWrite 0001                     ___aomod@sign 0012  
                   _stateMachine 129E  
