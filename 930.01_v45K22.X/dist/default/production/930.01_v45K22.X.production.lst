

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 16 02:02:57 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95  0000                     
    96                           ; Version 2.20
    97                           ; Generated 05/05/2020 GMT
    98                           ; 
    99                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F45K22 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	eeprom_data
   132  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   133  0000                     
   134                           	psect	idataBANK1
   135  005424                     __pidataBANK1:
   136                           	callstack 0
   137                           
   138                           ;initializer for _KD@fs_speed_controller$F2357
   139  005424  0000               	dw	0
   140  005426  3F80               	dw	16256
   141                           
   142                           ;initializer for _KP@fs_speed_controller$F2356
   143  005428  CCCD               	dw	52429
   144  00542A  3E4C               	dw	15948
   145                           
   146                           ;initializer for _KD@fs_speed_controller$F2204
   147  00542C  0000               	dw	0
   148  00542E  3F80               	dw	16256
   149                           
   150                           ;initializer for _KP@fs_speed_controller$F2203
   151  005430  CCCD               	dw	52429
   152  005432  3E4C               	dw	15948
   153                           
   154                           ;initializer for _KD@fs_speed_controller$F2073
   155  005434  0000               	dw	0
   156  005436  3F80               	dw	16256
   157                           
   158                           ;initializer for _KP@fs_speed_controller$F2072
   159  005438  CCCD               	dw	52429
   160  00543A  3E4C               	dw	15948
   161                           
   162                           ;initializer for _KD@fs_speed_controller$F1839
   163  00543C  0000               	dw	0
   164  00543E  3F80               	dw	16256
   165                           
   166                           ;initializer for _KP@fs_speed_controller$F1838
   167  005440  CCCD               	dw	52429
   168  005442  3E4C               	dw	15948
   169                           
   170                           ;initializer for _KD@fs_speed_controller$F1339
   171  005444  0000               	dw	0
   172  005446  3F80               	dw	16256
   173                           
   174                           ;initializer for _KP@fs_speed_controller$F1338
   175  005448  CCCD               	dw	52429
   176  00544A  3E4C               	dw	15948
   177                           
   178                           ;initializer for _KD@fs_speed_controller$F1164
   179  00544C  0000               	dw	0
   180  00544E  3F80               	dw	16256
   181                           
   182                           ;initializer for _KP@fs_speed_controller$F1163
   183  005450  CCCD               	dw	52429
   184  005452  3E4C               	dw	15948
   185                           
   186                           ;initializer for _KD@fs_speed_controller$F950
   187  005454  0000               	dw	0
   188  005456  3F80               	dw	16256
   189                           
   190                           ;initializer for _KP@fs_speed_controller$F949
   191  005458  CCCD               	dw	52429
   192  00545A  3E4C               	dw	15948
   193                           
   194                           ;initializer for _KD
   195  00545C  0000               	dw	0
   196  00545E  3F80               	dw	16256
   197                           
   198                           ;initializer for _KP
   199  005460  CCCD               	dw	52429
   200  005462  3E4C               	dw	15948
   201  0000                     _ANSELCbits	set	3898
   202  0000                     _ANSELBbits	set	3897
   203  0000                     _ANSELDbits	set	3899
   204  0000                     _ANSELEbits	set	3900
   205  0000                     _ANSELAbits	set	3896
   206  0000                     _T0CON	set	4053
   207  0000                     _TMR0L	set	4054
   208  0000                     _TMR0H	set	4055
   209  0000                     _INTCONbits	set	4082
   210  0000                     _CCPR2L	set	3943
   211  0000                     _CCPR1L	set	4030
   212  0000                     _PR2	set	4027
   213  0000                     _TMR2	set	4028
   214  0000                     _T2CONbits	set	4026
   215  0000                     _CCP2CON	set	3942
   216  0000                     _CCP1CON	set	4029
   217  0000                     _LATCbits	set	3979
   218  0000                     _LATDbits	set	3980
   219  0000                     _TRISCbits	set	3988
   220  0000                     _OSCTUNEbits	set	3995
   221  0000                     _OSCCONbits	set	4051
   222  0000                     _TRISBbits	set	3987
   223  0000                     _TRISDbits	set	3989
   224  0000                     _PORTDbits	set	3971
   225  0000                     _PORTBbits	set	3969
   226  0000                     _PIR2bits	set	4001
   227  0000                     _EECON2	set	4007
   228  0000                     _EEDATA	set	4008
   229  0000                     _EECON1bits	set	4006
   230  0000                     _EEADR	set	4009
   231  0000                     _ADCON2bits	set	4032
   232  0000                     _ADCON1	set	4033
   233  0000                     _ADCON0	set	4034
   234  0000                     _TRISEbits	set	3990
   235  0000                     _TRISAbits	set	3986
   236  0000                     _ADRESL	set	4035
   237  0000                     _ADRESH	set	4036
   238  0000                     _ADCON0bits	set	4034
   239                           
   240                           	psect	mediumconst
   241  007EF6                     __pmediumconst:
   242                           	callstack 0
   243  007EF6  00                 	db	0
   244  007EF7                     STR_14:
   245  007EF7  25                 	db	37
   246  007EF8  64                 	db	100	;'d'
   247  007EF9  20                 	db	32
   248  007EFA  20                 	db	32
   249  007EFB  20                 	db	32
   250  007EFC  20                 	db	32
   251  007EFD  20                 	db	32
   252  007EFE  20                 	db	32
   253  007EFF  20                 	db	32
   254  007F00  20                 	db	32
   255  007F01  20                 	db	32
   256  007F02  20                 	db	32
   257  007F03  20                 	db	32
   258  007F04  20                 	db	32
   259  007F05  20                 	db	32
   260  007F06  20                 	db	32
   261  007F07  20                 	db	32
   262  007F08  00                 	db	0
   263  007F09                     STR_9:
   264  007F09  50                 	db	80	;'P'
   265  007F0A  49                 	db	73	;'I'
   266  007F0B  44                 	db	68	;'D'
   267  007F0C  20                 	db	32
   268  007F0D  50                 	db	80	;'P'
   269  007F0E  41                 	db	65	;'A'
   270  007F0F  52                 	db	82	;'R'
   271  007F10  41                 	db	65	;'A'
   272  007F11  4D                 	db	77	;'M'
   273  007F12  20                 	db	32
   274  007F13  20                 	db	32
   275  007F14  20                 	db	32
   276  007F15  20                 	db	32
   277  007F16  20                 	db	32
   278  007F17  20                 	db	32
   279  007F18  20                 	db	32
   280  007F19  00                 	db	0
   281  007F1A                     STR_13:
   282  007F1A  48                 	db	72	;'H'
   283  007F1B  49                 	db	73	;'I'
   284  007F1C  5A                 	db	90	;'Z'
   285  007F1D  20                 	db	32
   286  007F1E  4C                 	db	76	;'L'
   287  007F1F  69                 	db	105	;'i'
   288  007F20  4D                 	db	77	;'M'
   289  007F21  69                 	db	105	;'i'
   290  007F22  54                 	db	84	;'T'
   291  007F23  69                 	db	105	;'i'
   292  007F24  20                 	db	32
   293  007F25  20                 	db	32
   294  007F26  20                 	db	32
   295  007F27  20                 	db	32
   296  007F28  20                 	db	32
   297  007F29  20                 	db	32
   298  007F2A  00                 	db	0
   299  007F2B                     STR_3:
   300  007F2B  4B                 	db	75	;'K'
   301  007F2C  41                 	db	65	;'A'
   302  007F2D  4C                 	db	76	;'L'
   303  007F2E  41                 	db	65	;'A'
   304  007F2F  4E                 	db	78	;'N'
   305  007F30  20                 	db	32
   306  007F31  5A                 	db	90	;'Z'
   307  007F32  41                 	db	65	;'A'
   308  007F33  4D                 	db	77	;'M'
   309  007F34  41                 	db	65	;'A'
   310  007F35  4E                 	db	78	;'N'
   311  007F36  20                 	db	32
   312  007F37  20                 	db	32
   313  007F38  20                 	db	32
   314  007F39  20                 	db	32
   315  007F3A  20                 	db	32
   316  007F3B  00                 	db	0
   317  007F3C                     STR_5:
   318  007F3C  5A                 	db	90	;'Z'
   319  007F3D  41                 	db	65	;'A'
   320  007F3E  4D                 	db	77	;'M'
   321  007F3F  41                 	db	65	;'A'
   322  007F40  4E                 	db	78	;'N'
   323  007F41  20                 	db	32
   324  007F42  44                 	db	68	;'D'
   325  007F43  4F                 	db	79	;'O'
   326  007F44  4C                 	db	76	;'L'
   327  007F45  44                 	db	68	;'D'
   328  007F46  55                 	db	85	;'U'
   329  007F47  20                 	db	32
   330  007F48  20                 	db	32
   331  007F49  20                 	db	32
   332  007F4A  20                 	db	32
   333  007F4B  20                 	db	32
   334  007F4C  00                 	db	0
   335  007F4D                     STR_7:
   336  007F4D  48                 	db	72	;'H'
   337  007F4E  41                 	db	65	;'A'
   338  007F4F  52                 	db	82	;'R'
   339  007F50  45                 	db	69	;'E'
   340  007F51  4B                 	db	75	;'K'
   341  007F52  45                 	db	69	;'E'
   342  007F53  54                 	db	84	;'T'
   343  007F54  20                 	db	32
   344  007F55  44                 	db	68	;'D'
   345  007F56  55                 	db	85	;'U'
   346  007F57  52                 	db	82	;'R'
   347  007F58  44                 	db	68	;'D'
   348  007F59  55                 	db	85	;'U'
   349  007F5A  20                 	db	32
   350  007F5B  20                 	db	32
   351  007F5C  20                 	db	32
   352  007F5D  00                 	db	0
   353  007F5E                     STR_17:
   354  007F5E  48                 	db	72	;'H'
   355  007F5F  41                 	db	65	;'A'
   356  007F60  52                 	db	82	;'R'
   357  007F61  45                 	db	69	;'E'
   358  007F62  4B                 	db	75	;'K'
   359  007F63  54                 	db	84	;'T'
   360  007F64  20                 	db	32
   361  007F65  5A                 	db	90	;'Z'
   362  007F66  41                 	db	65	;'A'
   363  007F67  4D                 	db	77	;'M'
   364  007F68  41                 	db	65	;'A'
   365  007F69  4E                 	db	78	;'N'
   366  007F6A  49                 	db	73	;'I'
   367  007F6B  20                 	db	32
   368  007F6C  64                 	db	100	;'d'
   369  007F6D  6B                 	db	107	;'k'
   370  007F6E  00                 	db	0
   371  007F6F                     STR_15:
   372  007F6F  44                 	db	68	;'D'
   373  007F70  55                 	db	85	;'U'
   374  007F71  52                 	db	82	;'R'
   375  007F72  4D                 	db	77	;'M'
   376  007F73  41                 	db	65	;'A'
   377  007F74  20                 	db	32
   378  007F75  5A                 	db	90	;'Z'
   379  007F76  41                 	db	65	;'A'
   380  007F77  4D                 	db	77	;'M'
   381  007F78  41                 	db	65	;'A'
   382  007F79  4E                 	db	78	;'N'
   383  007F7A  49                 	db	73	;'I'
   384  007F7B  20                 	db	32
   385  007F7C  20                 	db	32
   386  007F7D  6D                 	db	109	;'m'
   387  007F7E  73                 	db	115	;'s'
   388  007F7F  00                 	db	0
   389  007F80                     STR_2:
   390  007F80  20                 	db	32
   391  007F81  69                 	db	105	;'i'
   392  007F82  59                 	db	89	;'Y'
   393  007F83  69                 	db	105	;'i'
   394  007F84  20                 	db	32
   395  007F85  45                 	db	69	;'E'
   396  007F86  67                 	db	103	;'g'
   397  007F87  6C                 	db	108	;'l'
   398  007F88  65                 	db	101	;'e'
   399  007F89  6E                 	db	110	;'n'
   400  007F8A  63                 	db	99	;'c'
   401  007F8B  65                 	db	101	;'e'
   402  007F8C  6C                 	db	108	;'l'
   403  007F8D  65                 	db	101	;'e'
   404  007F8E  72                 	db	114	;'r'
   405  007F8F  20                 	db	32
   406  007F90  00                 	db	0
   407  007F91                     STR_16:
   408  007F91  25                 	db	37
   409  007F92  64                 	db	100	;'d'
   410  007F93  20                 	db	32
   411  007F94  20                 	db	32
   412  007F95  20                 	db	32
   413  007F96  20                 	db	32
   414  007F97  20                 	db	32
   415  007F98  20                 	db	32
   416  007F99  20                 	db	32
   417  007F9A  20                 	db	32
   418  007F9B  20                 	db	32
   419  007F9C  20                 	db	32
   420  007F9D  20                 	db	32
   421  007F9E  20                 	db	32
   422  007F9F  20                 	db	32
   423  007FA0  00                 	db	0
   424  007FA1                     STR_6:
   425  007FA1  20                 	db	32
   426  007FA2  20                 	db	32
   427  007FA3  20                 	db	32
   428  007FA4  20                 	db	32
   429  007FA5  20                 	db	32
   430  007FA6  20                 	db	32
   431  007FA7  25                 	db	37
   432  007FA8  64                 	db	100	;'d'
   433  007FA9  3A                 	db	58	;':'
   434  007FAA  25                 	db	37
   435  007FAB  64                 	db	100	;'d'
   436  007FAC  20                 	db	32
   437  007FAD  20                 	db	32
   438  007FAE  20                 	db	32
   439  007FAF  20                 	db	32
   440  007FB0  00                 	db	0
   441  007FB1                     STR_1:
   442  007FB1  20                 	db	32
   443  007FB2  20                 	db	32
   444  007FB3  20                 	db	32
   445  007FB4  45                 	db	69	;'E'
   446  007FB5  72                 	db	114	;'r'
   447  007FB6  67                 	db	103	;'g'
   448  007FB7  69                 	db	105	;'i'
   449  007FB8  6E                 	db	110	;'n'
   450  007FB9  20                 	db	32
   451  007FBA  4F                 	db	79	;'O'
   452  007FBB  79                 	db	121	;'y'
   453  007FBC  75                 	db	117	;'u'
   454  007FBD  6E                 	db	110	;'n'
   455  007FBE  20                 	db	32
   456  007FBF  20                 	db	32
   457  007FC0  00                 	db	0
   458  007FC1                     STR_4:
   459  007FC1  20                 	db	32
   460  007FC2  20                 	db	32
   461  007FC3  20                 	db	32
   462  007FC4  20                 	db	32
   463  007FC5  20                 	db	32
   464  007FC6  20                 	db	32
   465  007FC7  25                 	db	37
   466  007FC8  64                 	db	100	;'d'
   467  007FC9  3A                 	db	58	;':'
   468  007FCA  25                 	db	37
   469  007FCB  64                 	db	100	;'d'
   470  007FCC  20                 	db	32
   471  007FCD  20                 	db	32
   472  007FCE  20                 	db	32
   473  007FCF  00                 	db	0
   474  007FD0                     STR_10:
   475  007FD0  4B                 	db	75	;'K'
   476  007FD1  70                 	db	112	;'p'
   477  007FD2  3A                 	db	58	;':'
   478  007FD3  25                 	db	37
   479  007FD4  35                 	db	53	;'5'
   480  007FD5  2E                 	db	46
   481  007FD6  31                 	db	49	;'1'
   482  007FD7  66                 	db	102	;'f'
   483  007FD8  20                 	db	32
   484  007FD9  20                 	db	32
   485  007FDA  20                 	db	32
   486  007FDB  20                 	db	32
   487  007FDC  20                 	db	32
   488  007FDD  00                 	db	0
   489  007FDE                     STR_12:
   490  007FDE  4B                 	db	75	;'K'
   491  007FDF  64                 	db	100	;'d'
   492  007FE0  3A                 	db	58	;':'
   493  007FE1  25                 	db	37
   494  007FE2  35                 	db	53	;'5'
   495  007FE3  2E                 	db	46
   496  007FE4  31                 	db	49	;'1'
   497  007FE5  66                 	db	102	;'f'
   498  007FE6  20                 	db	32
   499  007FE7  20                 	db	32
   500  007FE8  20                 	db	32
   501  007FE9  20                 	db	32
   502  007FEA  00                 	db	0
   503  007FEB                     STR_19:
   504  007FEB  49                 	db	73	;'I'
   505  007FEC  4E                 	db	78	;'N'
   506  007FED  46                 	db	70	;'F'
   507  007FEE  00                 	db	0
   508  007FEF                     STR_23:
   509  007FEF  4E                 	db	78	;'N'
   510  007FF0  41                 	db	65	;'A'
   511  007FF1  4E                 	db	78	;'N'
   512  007FF2  00                 	db	0
   513  007FF3                     STR_20:
   514  007FF3  69                 	db	105	;'i'
   515  007FF4  6E                 	db	110	;'n'
   516  007FF5  66                 	db	102	;'f'
   517  007FF6  00                 	db	0
   518  007FF7                     STR_24:
   519  007FF7  6E                 	db	110	;'n'
   520  007FF8  61                 	db	97	;'a'
   521  007FF9  6E                 	db	110	;'n'
   522  007FFA  00                 	db	0
   523  007FFB                     STR_27:
   524  007FFB  6C                 	db	108	;'l'
   525  007FFC  66                 	db	102	;'f'
   526  007FFD  00                 	db	0
   527  007FFE  00                 	db	0	; dummy byte at the end
   528  0000                     
   529                           ; #config settings
   530                           
   531                           	psect	cinit
   532  005218                     __pcinit:
   533                           	callstack 0
   534  005218                     start_initialization:
   535                           	callstack 0
   536  005218                     __initialization:
   537                           	callstack 0
   538                           
   539                           ; Initialize objects allocated to BANK1 (64 bytes)
   540                           ; load TBLPTR registers with __pidataBANK1
   541  005218  0E24               	movlw	low __pidataBANK1
   542  00521A  6EF6               	movwf	tblptrl,c
   543  00521C  0E54               	movlw	high __pidataBANK1
   544  00521E  6EF7               	movwf	tblptrh,c
   545  005220  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   546  005222  6EF8               	movwf	tblptru,c
   547  005224  EE01  F0B3         	lfsr	0,__pdataBANK1
   548  005228  EE10 F040          	lfsr	1,64
   549  00522C                     copy_data0:
   550  00522C  0009               	tblrd		*+
   551  00522E  CFF5 FFEE          	movff	tablat,postinc0
   552  005232  50E5               	movf	postdec1,w,c
   553  005234  50E1               	movf	fsr1l,w,c
   554  005236  E1FA               	bnz	copy_data0
   555                           
   556                           ; Clear objects allocated to BANK2 (176 bytes)
   557  005238  EE02  F000         	lfsr	0,__pbssBANK2
   558  00523C  0EB0               	movlw	176
   559  00523E                     clear_0:
   560  00523E  6AEE               	clrf	postinc0,c
   561  005240  06E8               	decf	wreg,f,c
   562  005242  E1FD               	bnz	clear_0
   563                           
   564                           ; Clear objects allocated to BANK1 (179 bytes)
   565  005244  EE01  F000         	lfsr	0,__pbssBANK1
   566  005248  0EB3               	movlw	179
   567  00524A                     clear_1:
   568  00524A  6AEE               	clrf	postinc0,c
   569  00524C  06E8               	decf	wreg,f,c
   570  00524E  E1FD               	bnz	clear_1
   571                           
   572                           ; Clear objects allocated to BANK0 (13 bytes)
   573  005250  EE00  F0F3         	lfsr	0,__pbssBANK0
   574  005254  0E0D               	movlw	13
   575  005256                     clear_2:
   576  005256  6AEE               	clrf	postinc0,c
   577  005258  06E8               	decf	wreg,f,c
   578  00525A  E1FD               	bnz	clear_2
   579  00525C                     end_of_initialization:
   580                           	callstack 0
   581  00525C                     __end_of__initialization:
   582                           	callstack 0
   583  00525C  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   584  00525E  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   585  005260  0E00               	movlw	low (__Lmediumconst shr (0+16))
   586  005262  6EF8               	movwf	tblptru,c
   587  005264  0100               	movlb	0
   588  005266  EFE3  F022         	goto	_main	;jump to C main() function
   589                           
   590                           	psect	bssBANK0
   591  0000F3                     __pbssBANK0:
   592                           	callstack 0
   593  0000F3                     _menu_value:
   594                           	callstack 0
   595  0000F3                     	ds	3
   596  0000F6                     _prec:
   597                           	callstack 0
   598  0000F6                     	ds	2
   599  0000F8                     _flags:
   600                           	callstack 0
   601  0000F8                     	ds	2
   602  0000FA                     _timer_counter_flag:
   603                           	callstack 0
   604  0000FA                     	ds	1
   605  0000FB                     _menu_selected:
   606                           	callstack 0
   607  0000FB                     	ds	1
   608  0000FC                     _secretMenuCounter:
   609                           	callstack 0
   610  0000FC                     	ds	1
   611  0000FD                     _stopIsClick:
   612                           	callstack 0
   613  0000FD                     	ds	1
   614  0000FE                     _startIsClick:
   615                           	callstack 0
   616  0000FE                     	ds	1
   617  0000FF                     _pauseIsClick:
   618                           	callstack 0
   619  0000FF                     	ds	1
   620                           
   621                           	psect	bssBANK1
   622  000100                     __pbssBANK1:
   623                           	callstack 0
   624  000100                     _convert_data:
   625                           	callstack 0
   626  000100                     	ds	48
   627  000130                     _procces_data:
   628                           	callstack 0
   629  000130                     	ds	32
   630  000150                     _controller:
   631                           	callstack 0
   632  000150                     	ds	19
   633  000163                     	ds	16
   634  000173                     _adc_raw_data:
   635                           	callstack 0
   636  000173                     	ds	16
   637  000183                     _driver_limit:
   638                           	callstack 0
   639  000183                     	ds	12
   640  00018F                     _timer_value:
   641                           	callstack 0
   642  00018F                     	ds	8
   643  000197                     _menu_flags:
   644                           	callstack 0
   645  000197                     	ds	6
   646  00019D                     _button_bounce_controller:
   647                           	callstack 0
   648  00019D                     	ds	6
   649  0001A3                     floorf@F524:
   650                           	callstack 0
   651  0001A3                     	ds	4
   652  0001A7                     ___fpclassifyf@F463:
   653                           	callstack 0
   654  0001A7                     	ds	4
   655  0001AB                     fabsf@F463:
   656                           	callstack 0
   657  0001AB                     	ds	4
   658  0001AF                     _nout:
   659                           	callstack 0
   660  0001AF                     	ds	2
   661  0001B1                     _width:
   662                           	callstack 0
   663  0001B1                     	ds	2
   664                           
   665                           	psect	dataBANK1
   666  0001B3                     __pdataBANK1:
   667                           	callstack 0
   668  0001B3                     	ds	4
   669  0001B7                     	ds	4
   670  0001BB                     	ds	4
   671  0001BF                     	ds	4
   672  0001C3                     	ds	4
   673  0001C7                     	ds	4
   674  0001CB                     _KD@fs_speed_controller$F1839:
   675                           	callstack 0
   676  0001CB                     	ds	4
   677  0001CF                     _KP@fs_speed_controller$F1838:
   678                           	callstack 0
   679  0001CF                     	ds	4
   680  0001D3                     	ds	4
   681  0001D7                     	ds	4
   682  0001DB                     	ds	4
   683  0001DF                     	ds	4
   684  0001E3                     	ds	4
   685  0001E7                     	ds	4
   686  0001EB                     	ds	4
   687  0001EF                     	ds	4
   688                           
   689                           	psect	bssBANK2
   690  000200                     __pbssBANK2:
   691                           	callstack 0
   692  000200                     	ds	16
   693  000210                     	ds	16
   694  000220                     	ds	16
   695  000230                     	ds	16
   696  000240                     	ds	16
   697  000250                     	ds	16
   698  000260                     _dbuf:
   699                           	callstack 0
   700  000260                     	ds	80
   701                           
   702                           	psect	cstackBANK0
   703  000060                     __pcstackBANK0:
   704                           	callstack 0
   705  000060                     floorf@m:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x0
   709  000060                     	ds	4
   710  000064                     floorf@e:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x4
   714  000064                     	ds	2
   715  000066                     floorf@u:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x6
   719  000066                     	ds	4
   720  00006A                     ??_efgtoa:
   721                           
   722                           ; 1 bytes @ 0xA
   723  00006A                     	ds	5
   724  00006F                     efgtoa@ou:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0xF
   728  00006F                     	ds	4
   729  000073                     _efgtoa$2979:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x13
   733  000073                     	ds	2
   734  000075                     _efgtoa$2980:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x15
   738  000075                     	ds	2
   739  000077                     _efgtoa$2984:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x17
   743  000077                     	ds	2
   744  000079                     _efgtoa$2988:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x19
   748  000079                     	ds	2
   749  00007B                     _efgtoa$2989:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x1B
   753  00007B                     	ds	2
   754  00007D                     _efgtoa$2990:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1D
   758  00007D                     	ds	2
   759  00007F                     efgtoa@t:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1F
   763  00007F                     	ds	2
   764  000081                     efgtoa@pp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x21
   768  000081                     	ds	2
   769  000083                     efgtoa@m:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x23
   773  000083                     	ds	2
   774  000085                     efgtoa@ne:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x25
   778  000085                     	ds	2
   779  000087                     efgtoa@d:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x27
   783  000087                     	ds	2
   784  000089                     efgtoa@sign:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x29
   788  000089                     	ds	2
   789  00008B                     efgtoa@p:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x2B
   793  00008B                     	ds	2
   794  00008D                     efgtoa@nmode:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x2D
   798  00008D                     	ds	1
   799  00008E                     efgtoa@w:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x2E
   803  00008E                     	ds	2
   804  000090                     efgtoa@mode:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x30
   808  000090                     	ds	1
   809  000091                     efgtoa@h:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x31
   813  000091                     	ds	4
   814  000095                     efgtoa@l:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x35
   818  000095                     	ds	4
   819  000099                     efgtoa@i:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x39
   823  000099                     	ds	2
   824  00009B                     efgtoa@g:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x3B
   828  00009B                     	ds	4
   829  00009F                     efgtoa@e:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x3F
   833  00009F                     	ds	2
   834  0000A1                     efgtoa@n:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x41
   838  0000A1                     	ds	2
   839  0000A3                     efgtoa@u:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x43
   843  0000A3                     	ds	4
   844  0000A7                     ?_vfpfcnvrt:
   845                           	callstack 0
   846  0000A7                     vfpfcnvrt@fp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x47
   850  0000A7                     	ds	2
   851  0000A9                     vfpfcnvrt@fmt:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x49
   855  0000A9                     	ds	2
   856  0000AB                     vfpfcnvrt@ap:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x4B
   860  0000AB                     	ds	2
   861  0000AD                     ??_vfpfcnvrt:
   862                           
   863                           ; 1 bytes @ 0x4D
   864  0000AD                     	ds	4
   865  0000B1                     vfpfcnvrt@ll:
   866                           	callstack 0
   867                           
   868                           ; 8 bytes @ 0x51
   869  0000B1                     	ds	8
   870  0000B9                     _vfpfcnvrt$3004:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x59
   874  0000B9                     	ds	2
   875  0000BB                     _vfpfcnvrt$3005:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x5B
   879  0000BB                     	ds	2
   880  0000BD                     _vfpfcnvrt$3010:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x5D
   884  0000BD                     	ds	2
   885  0000BF                     vfpfcnvrt@f:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x5F
   889  0000BF                     	ds	4
   890  0000C3                     vfpfcnvrt@ct:
   891                           	callstack 0
   892                           
   893                           ; 3 bytes @ 0x63
   894  0000C3                     	ds	3
   895  0000C6                     vfpfcnvrt@c:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x66
   899  0000C6                     	ds	1
   900  0000C7                     ?_vfprintf:
   901                           	callstack 0
   902  0000C7                     vfprintf@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x67
   906  0000C7                     	ds	2
   907  0000C9                     vfprintf@fmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x69
   911  0000C9                     	ds	2
   912  0000CB                     vfprintf@ap:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x6B
   916  0000CB                     	ds	2
   917  0000CD                     vfprintf@cfmt:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x6D
   921  0000CD                     	ds	2
   922  0000CF                     ?_sprintf:
   923                           	callstack 0
   924  0000CF                     sprintf@s:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x6F
   928  0000CF                     	ds	2
   929  0000D1                     sprintf@fmt:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x71
   933  0000D1                     	ds	8
   934  0000D9                     sprintf@ap:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x79
   938  0000D9                     	ds	2
   939  0000DB                     sprintf@f:
   940                           	callstack 0
   941                           
   942                           ; 6 bytes @ 0x7B
   943  0000DB                     	ds	6
   944  0000E1                     mainMenu@textCursor2:
   945                           	callstack 0
   946  0000E1                     stopMenu@textCursor2:
   947                           	callstack 0
   948  0000E1                     pauseMenu@textCursor2:
   949                           	callstack 0
   950  0000E1                     secretMenu@textCursor2:
   951                           	callstack 0
   952  0000E1                     speedLimitSettingMenu@textCursor2:
   953                           	callstack 0
   954  0000E1                     stopTimeSettingMenu@textCursor2:
   955                           	callstack 0
   956  0000E1                     driverTimeSettingMenu@textCursor2:
   957                           	callstack 0
   958                           
   959                           ; 16 bytes @ 0x81
   960  0000E1                     	ds	16
   961  0000F1                     ??_stateMachine:
   962                           
   963                           ; 1 bytes @ 0x91
   964  0000F1                     	ds	2
   965                           
   966                           	psect	cstackCOMRAM
   967  000001                     __pcstackCOMRAM:
   968                           	callstack 0
   969  000001                     ?_strlen:
   970                           	callstack 0
   971  000001                     ?___fpclassifyf:
   972                           	callstack 0
   973  000001                     ?_isupper:
   974                           	callstack 0
   975  000001                     ?_isdigit:
   976                           	callstack 0
   977  000001                     ?_strncmp:
   978                           	callstack 0
   979  000001                     ?_isspace:
   980                           	callstack 0
   981  000001                     ?_readAdcValue:
   982                           	callstack 0
   983  000001                     ?___wmul:
   984                           	callstack 0
   985  000001                     ?___awdiv:
   986                           	callstack 0
   987  000001                     ?___awmod:
   988                           	callstack 0
   989  000001                     ?___lmul:
   990                           	callstack 0
   991  000001                     ?___lldiv:
   992                           	callstack 0
   993  000001                     ?___flneg:
   994                           	callstack 0
   995  000001                     ?___aodiv:
   996                           	callstack 0
   997  000001                     ?___aomod:
   998                           	callstack 0
   999  000001                     eepromRead@address:
  1000                           	callstack 0
  1001  000001                     eepromWrite@data:
  1002                           	callstack 0
  1003  000001                     Lcd_Port@a:
  1004                           	callstack 0
  1005  000001                     ___wmul@multiplier:
  1006                           	callstack 0
  1007  000001                     ___awdiv@dividend:
  1008                           	callstack 0
  1009  000001                     ___awmod@dividend:
  1010                           	callstack 0
  1011  000001                     isdigit@c:
  1012                           	callstack 0
  1013  000001                     isspace@c:
  1014                           	callstack 0
  1015  000001                     isupper@c:
  1016                           	callstack 0
  1017  000001                     fputc@c:
  1018                           	callstack 0
  1019  000001                     strcpy@dest:
  1020                           	callstack 0
  1021  000001                     strlen@s:
  1022                           	callstack 0
  1023  000001                     strncmp@_l:
  1024                           	callstack 0
  1025  000001                     ___lmul@multiplier:
  1026                           	callstack 0
  1027  000001                     ___lldiv@dividend:
  1028                           	callstack 0
  1029  000001                     ___fleq@ff1:
  1030                           	callstack 0
  1031  000001                     ___flneg@f1:
  1032                           	callstack 0
  1033  000001                     ___fpclassifyf@x:
  1034                           	callstack 0
  1035  000001                     ___aodiv@dividend:
  1036                           	callstack 0
  1037  000001                     ___aomod@dividend:
  1038                           	callstack 0
  1039                           
  1040                           ; 8 bytes @ 0x0
  1041  000001                     	ds	1
  1042  000002                     ??_system_init:
  1043  000002                     ??_Lcd_Cmd:
  1044  000002                     eepromWrite@address:
  1045                           	callstack 0
  1046  000002                     Lcd_Write_Char@temp:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x1
  1050  000002                     	ds	1
  1051  000003                     ??_isupper:
  1052  000003                     ??_isdigit:
  1053  000003                     ??_isspace:
  1054  000003                     ??_readAdcValue:
  1055  000003                     Lcd_Cmd@a:
  1056                           	callstack 0
  1057  000003                     Lcd_Write_Char@y:
  1058                           	callstack 0
  1059  000003                     ___wmul@multiplicand:
  1060                           	callstack 0
  1061  000003                     ___awdiv@divisor:
  1062                           	callstack 0
  1063  000003                     ___awmod@divisor:
  1064                           	callstack 0
  1065  000003                     fputc@fp:
  1066                           	callstack 0
  1067  000003                     strcpy@src:
  1068                           	callstack 0
  1069  000003                     strlen@a:
  1070                           	callstack 0
  1071  000003                     strncmp@_r:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x2
  1075  000003                     	ds	1
  1076  000004                     ??_lcd_init:
  1077  000004                     Lcd_Set_Cursor@b:
  1078                           	callstack 0
  1079  000004                     Lcd_Write_Char@a:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x3
  1083  000004                     	ds	1
  1084  000005                     ??_fputc:
  1085  000005                     ??___fpclassifyf:
  1086  000005                     ??_strcpy:
  1087  000005                     readAdcValue@adcChannel:
  1088                           	callstack 0
  1089  000005                     Lcd_Set_Cursor@a:
  1090                           	callstack 0
  1091  000005                     ___awdiv@counter:
  1092                           	callstack 0
  1093  000005                     ___awmod@counter:
  1094                           	callstack 0
  1095  000005                     Lcd_Write_String@a:
  1096                           	callstack 0
  1097  000005                     ___wmul@product:
  1098                           	callstack 0
  1099  000005                     strncmp@n:
  1100                           	callstack 0
  1101  000005                     ___lmul@multiplicand:
  1102                           	callstack 0
  1103  000005                     ___lldiv@divisor:
  1104                           	callstack 0
  1105  000005                     ___fleq@ff2:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x4
  1109  000005                     	ds	1
  1110  000006                     Lcd_Set_Cursor@z:
  1111                           	callstack 0
  1112  000006                     ___awdiv@sign:
  1113                           	callstack 0
  1114  000006                     ___awmod@sign:
  1115                           	callstack 0
  1116  000006                     readAdcValue@adcValue:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x5
  1120  000006                     	ds	1
  1121  000007                     ??_strncmp:
  1122  000007                     ??_Lcd_Write_String:
  1123  000007                     ?_tolower:
  1124                           	callstack 0
  1125  000007                     Lcd_Set_Cursor@y:
  1126                           	callstack 0
  1127  000007                     _isspace$3077:
  1128                           	callstack 0
  1129  000007                     ___awdiv@quotient:
  1130                           	callstack 0
  1131  000007                     strcpy@s:
  1132                           	callstack 0
  1133  000007                     tolower@c:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x6
  1137  000007                     	ds	1
  1138  000008                     ?_atoi:
  1139                           	callstack 0
  1140  000008                     Lcd_Set_Cursor@temp:
  1141                           	callstack 0
  1142  000008                     atoi@s:
  1143                           	callstack 0
  1144  000008                     strncmp@l:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x7
  1148  000008                     	ds	1
  1149  000009                     ??_tolower:
  1150  000009                     ??___fleq:
  1151  000009                     Lcd_Write_String@i:
  1152                           	callstack 0
  1153  000009                     ___fpclassifyf@e:
  1154                           	callstack 0
  1155  000009                     strcpy@d:
  1156                           	callstack 0
  1157  000009                     ___lmul@product:
  1158                           	callstack 0
  1159  000009                     ___lldiv@quotient:
  1160                           	callstack 0
  1161  000009                     ___aodiv@divisor:
  1162                           	callstack 0
  1163  000009                     ___aomod@divisor:
  1164                           	callstack 0
  1165                           
  1166                           ; 8 bytes @ 0x8
  1167  000009                     	ds	1
  1168  00000A                     ??_atoi:
  1169  00000A                     fputs@s:
  1170                           	callstack 0
  1171  00000A                     strncmp@r:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x9
  1175  00000A                     	ds	1
  1176  00000B                     ??_openLCD_Script:
  1177  00000B                     ___fpclassifyf@u:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0xA
  1181  00000B                     	ds	1
  1182  00000C                     fputs@fp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0xB
  1186  00000C                     	ds	1
  1187  00000D                     ___lldiv@counter:
  1188                           	callstack 0
  1189  00000D                     _tolower$3141:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0xC
  1193  00000D                     	ds	1
  1194  00000E                     ?___xxtofl:
  1195                           	callstack 0
  1196  00000E                     fputs@c:
  1197                           	callstack 0
  1198  00000E                     atoi@neg:
  1199                           	callstack 0
  1200  00000E                     ___xxtofl@val:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0xD
  1204  00000E                     	ds	1
  1205  00000F                     fputs@i:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0xE
  1209  00000F                     	ds	1
  1210  000010                     _atoi$3046:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0xF
  1214  000010                     	ds	1
  1215  000011                     ?_pad:
  1216                           	callstack 0
  1217  000011                     ___aodiv@counter:
  1218                           	callstack 0
  1219  000011                     ___aomod@counter:
  1220                           	callstack 0
  1221  000011                     pad@fp:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x10
  1225  000011                     	ds	1
  1226  000012                     ??___xxtofl:
  1227  000012                     ___aodiv@sign:
  1228                           	callstack 0
  1229  000012                     ___aomod@sign:
  1230                           	callstack 0
  1231  000012                     _atoi$3048:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x11
  1235  000012                     	ds	1
  1236  000013                     ?_abs:
  1237                           	callstack 0
  1238  000013                     pad@buf:
  1239                           	callstack 0
  1240  000013                     abs@a:
  1241                           	callstack 0
  1242  000013                     ___aodiv@quotient:
  1243                           	callstack 0
  1244                           
  1245                           ; 8 bytes @ 0x12
  1246  000013                     	ds	1
  1247  000014                     _atoi$3047:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0x13
  1251  000014                     	ds	1
  1252  000015                     ??_abs:
  1253  000015                     pad@p:
  1254                           	callstack 0
  1255  000015                     atoi@n:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x14
  1259  000015                     	ds	1
  1260  000016                     ___xxtofl@sign:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x15
  1264  000016                     	ds	1
  1265  000017                     ??_pad:
  1266  000017                     ___xxtofl@exp:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x16
  1270  000017                     	ds	1
  1271  000018                     pad@i:
  1272                           	callstack 0
  1273  000018                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x17
  1277  000018                     	ds	2
  1278  00001A                     pad@w:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x19
  1282  00001A                     	ds	2
  1283  00001C                     ??_calculatedAverageValue:
  1284  00001C                     ?_dtoa:
  1285                           	callstack 0
  1286  00001C                     ?_fabsf:
  1287                           	callstack 0
  1288  00001C                     ?___flmul:
  1289                           	callstack 0
  1290  00001C                     dtoa@fp:
  1291                           	callstack 0
  1292  00001C                     ___flmul@b:
  1293                           	callstack 0
  1294  00001C                     fabsf@x:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x1B
  1298  00001C                     	ds	2
  1299  00001E                     dtoa@d:
  1300                           	callstack 0
  1301                           
  1302                           ; 8 bytes @ 0x1D
  1303  00001E                     	ds	2
  1304  000020                     ___flmul@a:
  1305                           	callstack 0
  1306  000020                     fabsf@u:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x1F
  1310  000020                     	ds	4
  1311  000024                     ??___flmul:
  1312                           
  1313                           ; 1 bytes @ 0x23
  1314  000024                     	ds	2
  1315  000026                     ??_dtoa:
  1316                           
  1317                           ; 1 bytes @ 0x25
  1318  000026                     	ds	2
  1319  000028                     ___flmul@sign:
  1320                           	callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x27
  1323  000028                     	ds	1
  1324  000029                     ___flmul@grs:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x28
  1328  000029                     	ds	4
  1329  00002D                     ___flmul@aexp:
  1330                           	callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x2C
  1333  00002D                     	ds	1
  1334  00002E                     ___flmul@bexp:
  1335                           	callstack 0
  1336  00002E                     _dtoa$2955:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x2D
  1340  00002E                     	ds	1
  1341  00002F                     ___flmul@prod:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x2E
  1345  00002F                     	ds	1
  1346  000030                     dtoa@p:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x2F
  1350  000030                     	ds	2
  1351  000032                     dtoa@w:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x31
  1355  000032                     	ds	1
  1356  000033                     ___flmul@temp:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x32
  1360  000033                     	ds	1
  1361  000034                     dtoa@s:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x33
  1365  000034                     	ds	1
  1366  000035                     ?___fladd:
  1367                           	callstack 0
  1368  000035                     ?___fldiv:
  1369                           	callstack 0
  1370  000035                     ___flge@ff1:
  1371                           	callstack 0
  1372  000035                     ___fladd@b:
  1373                           	callstack 0
  1374  000035                     ___fldiv@b:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x34
  1378  000035                     	ds	1
  1379  000036                     dtoa@n:
  1380                           	callstack 0
  1381                           
  1382                           ; 8 bytes @ 0x35
  1383  000036                     	ds	3
  1384  000039                     ___flge@ff2:
  1385                           	callstack 0
  1386  000039                     ___fladd@a:
  1387                           	callstack 0
  1388  000039                     ___fldiv@a:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x38
  1392  000039                     	ds	4
  1393  00003D                     ??___fladd:
  1394  00003D                     ??___fldiv:
  1395  00003D                     ??___flge:
  1396                           
  1397                           ; 1 bytes @ 0x3C
  1398  00003D                     	ds	1
  1399  00003E                     dtoa@i:
  1400                           	callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x3D
  1403  00003E                     	ds	3
  1404  000041                     ___fladd@signs:
  1405                           	callstack 0
  1406  000041                     ___fldiv@rem:
  1407                           	callstack 0
  1408                           
  1409                           ; 4 bytes @ 0x40
  1410  000041                     	ds	1
  1411  000042                     ___fladd@aexp:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x41
  1415  000042                     	ds	1
  1416  000043                     ___fladd@bexp:
  1417                           	callstack 0
  1418                           
  1419                           ; 1 bytes @ 0x42
  1420  000043                     	ds	1
  1421  000044                     ___fladd@grs:
  1422                           	callstack 0
  1423                           
  1424                           ; 1 bytes @ 0x43
  1425  000044                     	ds	1
  1426  000045                     ?___flsub:
  1427                           	callstack 0
  1428  000045                     ___fldiv@sign:
  1429                           	callstack 0
  1430  000045                     ___flsub@b:
  1431                           	callstack 0
  1432                           
  1433                           ; 4 bytes @ 0x44
  1434  000045                     	ds	1
  1435  000046                     ___fldiv@new_exp:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x45
  1439  000046                     	ds	2
  1440  000048                     ___fldiv@grs:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x47
  1444  000048                     	ds	1
  1445  000049                     ___flsub@a:
  1446                           	callstack 0
  1447                           
  1448                           ; 4 bytes @ 0x48
  1449  000049                     	ds	3
  1450  00004C                     ___fldiv@bexp:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x4B
  1454  00004C                     	ds	1
  1455  00004D                     ___fldiv@aexp:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x4C
  1459  00004D                     	ds	1
  1460  00004E                     ?_floorf:
  1461                           	callstack 0
  1462  00004E                     ?___fltol:
  1463                           	callstack 0
  1464  00004E                     ___fltol@f1:
  1465                           	callstack 0
  1466  00004E                     floorf@x:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x4D
  1470  00004E                     	ds	4
  1471  000052                     ??_floorf:
  1472  000052                     ??___fltol:
  1473                           
  1474                           ; 1 bytes @ 0x51
  1475  000052                     	ds	4
  1476  000056                     ___fltol@sign1:
  1477                           	callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x55
  1480  000056                     	ds	1
  1481  000057                     ___fltol@exp1:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x56
  1485  000057                     	ds	1
  1486  000058                     ??_scanAdcConversion:
  1487  000058                     ?_efgtoa:
  1488                           	callstack 0
  1489  000058                     PWM1_setDC@dutycycle:
  1490                           	callstack 0
  1491  000058                     PWM2_setDC@dutycycle:
  1492                           	callstack 0
  1493  000058                     efgtoa@fp:
  1494                           	callstack 0
  1495  000058                     speedControl@position:
  1496                           	callstack 0
  1497                           
  1498                           ; 4 bytes @ 0x57
  1499  000058                     	ds	2
  1500  00005A                     ??_PWM1_setDC:
  1501  00005A                     ??_PWM2_setDC:
  1502  00005A                     efgtoa@f:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x59
  1506  00005A                     	ds	2
  1507  00005C                     ??_speedControl:
  1508  00005C                     PWM1_setDC@duty:
  1509                           	callstack 0
  1510  00005C                     PWM2_setDC@duty:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x5B
  1514  00005C                     	ds	2
  1515  00005E                     efgtoa@c:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x5D
  1519  00005E                     	ds	1
  1520  00005F                     
  1521                           ; 1 bytes @ 0x5E
  1522 ;;
  1523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1524 ;;
  1525 ;; *************** function _main *****************
  1526 ;; Defined at:
  1527 ;;		line 40 in file "fs_main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1541 ;;      Params:         0       0       0       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0
  1544 ;;      Totals:         0       0       0       0       0       0       0
  1545 ;;Total ram usage:        0 bytes
  1546 ;; Hardware stack levels required when called:   12
  1547 ;; This function calls:
  1548 ;;		_Lcd_Clear
  1549 ;;		_PWM1_setDC
  1550 ;;		_PWM2_setDC
  1551 ;;		_PWM_Init
  1552 ;;		_adcInit
  1553 ;;		_lcd_init
  1554 ;;		_mcu_init
  1555 ;;		_menuControl
  1556 ;;		_menuInitialize
  1557 ;;		_openLCD_Script
  1558 ;;		_system_init
  1559 ;;		_timer_0_init
  1560 ;; This function is called by:
  1561 ;;		Startup code after reset
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text0
  1566  0045C6                     __ptext0:
  1567                           	callstack 0
  1568  0045C6                     _main:
  1569                           	callstack 19
  1570  0045C6                     
  1571                           ;fs_main.c: 42:     mcu_init();
  1572  0045C6  ECCC  F02B         	call	_mcu_init	;wreg free
  1573  0045CA                     
  1574                           ;fs_main.c: 43:     menuInitialize();
  1575  0045CA  EC66  F02B         	call	_menuInitialize	;wreg free
  1576  0045CE                     
  1577                           ;fs_main.c: 45:     adcInit();
  1578  0045CE  EC52  F02A         	call	_adcInit	;wreg free
  1579  0045D2                     
  1580                           ;fs_main.c: 47:     timer_0_init();
  1581  0045D2  ECD7  F02B         	call	_timer_0_init	;wreg free
  1582  0045D6                     
  1583                           ;fs_main.c: 48:     lcd_init();
  1584  0045D6  ECA4  F026         	call	_lcd_init	;wreg free
  1585  0045DA                     
  1586                           ;fs_main.c: 49:     system_init();
  1587  0045DA  ECC5  F01F         	call	_system_init	;wreg free
  1588  0045DE                     
  1589                           ;fs_main.c: 50:     Lcd_Clear();
  1590  0045DE  ECE0  F02B         	call	_Lcd_Clear	;wreg free
  1591  0045E2                     
  1592                           ;fs_main.c: 52:     PWM_Init();
  1593  0045E2  EC7A  F02B         	call	_PWM_Init	;wreg free
  1594  0045E6                     
  1595                           ;fs_main.c: 53:     PWM1_setDC(0);
  1596  0045E6  0E00               	movlw	0
  1597  0045E8  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1598  0045EA  0E00               	movlw	0
  1599  0045EC  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1600  0045EE  EC6B  F027         	call	_PWM1_setDC	;wreg free
  1601  0045F2                     
  1602                           ;fs_main.c: 54:     PWM2_setDC(0);
  1603  0045F2  0E00               	movlw	0
  1604  0045F4  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1605  0045F6  0E00               	movlw	0
  1606  0045F8  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1607  0045FA  EC2E  F027         	call	_PWM2_setDC	;wreg free
  1608  0045FE                     
  1609                           ;fs_main.c: 55:     openLCD_Script();
  1610  0045FE  EC87  F029         	call	_openLCD_Script	;wreg free
  1611  004602                     l6490:
  1612                           
  1613                           ;fs_main.c: 58: {;fs_main.c: 59:     if (timer_counter_flag.one_second_flag == 1)
  1614  004602  0100               	movlb	0	; () banked
  1615  004604  A1FA               	btfss	_timer_counter_flag& (0+255),0,b
  1616  004606  EF07  F023         	goto	u7841
  1617  00460A  EF09  F023         	goto	u7840
  1618  00460E                     u7841:
  1619  00460E  EF48  F023         	goto	l6516
  1620  004612                     u7840:
  1621  004612                     
  1622                           ; BSR set to: 0
  1623                           ;fs_main.c: 60:     {;fs_main.c: 61:         timer_counter_flag.one_second_flag = 0;
  1624  004612  91FA               	bcf	_timer_counter_flag& (0+255),0,b
  1625  004614                     
  1626                           ; BSR set to: 0
  1627                           ;fs_main.c: 63:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1628  004614  05FE               	decf	_startIsClick& (0+255),w,b
  1629  004616  A4D8               	btfss	status,2,c
  1630  004618  EF10  F023         	goto	u7851
  1631  00461C  EF12  F023         	goto	u7850
  1632  004620                     u7851:
  1633  004620  EF48  F023         	goto	l6516
  1634  004624                     u7850:
  1635  004624                     
  1636                           ; BSR set to: 0
  1637  004624  51FF               	movf	_pauseIsClick& (0+255),w,b
  1638  004626  A4D8               	btfss	status,2,c
  1639  004628  EF18  F023         	goto	u7861
  1640  00462C  EF1A  F023         	goto	u7860
  1641  004630                     u7861:
  1642  004630  EF48  F023         	goto	l6516
  1643  004634                     u7860:
  1644  004634                     
  1645                           ; BSR set to: 0
  1646  004634  51FD               	movf	_stopIsClick& (0+255),w,b
  1647  004636  A4D8               	btfss	status,2,c
  1648  004638  EF20  F023         	goto	u7871
  1649  00463C  EF22  F023         	goto	u7870
  1650  004640                     u7871:
  1651  004640  EF48  F023         	goto	l6516
  1652  004644                     u7870:
  1653  004644                     
  1654                           ; BSR set to: 0
  1655  004644  51FB               	movf	_menu_selected& (0+255),w,b
  1656  004646  A4D8               	btfss	status,2,c
  1657  004648  EF28  F023         	goto	u7881
  1658  00464C  EF2A  F023         	goto	u7880
  1659  004650                     u7881:
  1660  004650  EF48  F023         	goto	l6516
  1661  004654                     u7880:
  1662  004654                     
  1663                           ; BSR set to: 0
  1664                           ;fs_main.c: 64:         {;fs_main.c: 65:             timer_value.second++;
  1665  004654  0101               	movlb	1	; () banked
  1666  004656  2B8F               	incf	_timer_value& (0+255),f,b
  1667  004658                     
  1668                           ; BSR set to: 1
  1669                           ;fs_main.c: 66:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1670  004658  518F               	movf	_timer_value& (0+255),w,b
  1671  00465A  083C               	sublw	60
  1672  00465C  6F91               	movwf	(_timer_value+2)& (0+255),b
  1673  00465E                     
  1674                           ; BSR set to: 1
  1675                           ;fs_main.c: 68:             if (timer_value.remainingSecond == 59 )
  1676  00465E  0E3B               	movlw	59
  1677  004660  1991               	xorwf	(_timer_value+2)& (0+255),w,b
  1678  004662  A4D8               	btfss	status,2,c
  1679  004664  EF36  F023         	goto	u7891
  1680  004668  EF38  F023         	goto	u7890
  1681  00466C                     u7891:
  1682  00466C  EF3E  F023         	goto	l6512
  1683  004670                     u7890:
  1684  004670                     
  1685                           ; BSR set to: 1
  1686                           ;fs_main.c: 69:             {;fs_main.c: 70:                 timer_value.minute++;
  1687  004670  2B90               	incf	(_timer_value+1)& (0+255),f,b
  1688  004672                     
  1689                           ; BSR set to: 1
  1690                           ;fs_main.c: 71:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1691  004672  5190               	movf	(_timer_value+1)& (0+255),w,b
  1692  004674  0100               	movlb	0	; () banked
  1693  004676  5DF3               	subwf	_menu_value& (0+255),w,b
  1694  004678  0101               	movlb	1	; () banked
  1695  00467A  6F92               	movwf	(_timer_value+3)& (0+255),b
  1696  00467C                     l6512:
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;fs_main.c: 74:             if (timer_value.second > 59)
  1700  00467C  0E3B               	movlw	59
  1701  00467E  658F               	cpfsgt	_timer_value& (0+255),b
  1702  004680  EF44  F023         	goto	u7901
  1703  004684  EF46  F023         	goto	u7900
  1704  004688                     u7901:
  1705  004688  EF48  F023         	goto	l6516
  1706  00468C                     u7900:
  1707  00468C                     
  1708                           ; BSR set to: 1
  1709                           ;fs_main.c: 75:             {;fs_main.c: 76:                 timer_value.second = 0;
  1710  00468C  0E00               	movlw	0
  1711  00468E  6F8F               	movwf	_timer_value& (0+255),b
  1712  004690                     l6516:
  1713                           
  1714                           ;fs_main.c: 81:     menuControl();
  1715  004690  ECA8  F027         	call	_menuControl	;wreg free
  1716  004694  EF01  F023         	goto	l6490
  1717  004698  EF4D  F000         	goto	start
  1718  00469C                     __end_of_main:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _timer_0_init *****************
  1722 ;; Defined at:
  1723 ;;		line 72 in file "fs_timer.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1737 ;;      Params:         0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text1
  1752  0057AE                     __ptext1:
  1753                           	callstack 0
  1754  0057AE                     _timer_0_init:
  1755                           	callstack 29
  1756  0057AE                     
  1757                           ;fs_timer.c: 74:   T0CON = 0x81;
  1758  0057AE  0E81               	movlw	129
  1759  0057B0  6ED5               	movwf	213,c	;volatile
  1760                           
  1761                           ;fs_timer.c: 75:   TMR0H = 0x63;
  1762  0057B2  0E63               	movlw	99
  1763  0057B4  6ED7               	movwf	215,c	;volatile
  1764                           
  1765                           ;fs_timer.c: 76:   TMR0L = 0xC0;
  1766  0057B6  0EC0               	movlw	192
  1767  0057B8  6ED6               	movwf	214,c	;volatile
  1768  0057BA                     
  1769                           ;fs_timer.c: 77:   INTCONbits.GIE = 1;
  1770  0057BA  8EF2               	bsf	242,7,c	;volatile
  1771  0057BC                     
  1772                           ;fs_timer.c: 78:   INTCONbits.TMR0IE = 1;
  1773  0057BC  8AF2               	bsf	242,5,c	;volatile
  1774  0057BE  0012               	return		;funcret
  1775  0057C0                     __end_of_timer_0_init:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _system_init *****************
  1779 ;; Defined at:
  1780 ;;		line 49 in file "fs_mcu.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1794 ;;      Params:         0       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0
  1796 ;;      Temps:          2       0       0       0       0       0       0
  1797 ;;      Totals:         2       0       0       0       0       0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    2
  1801 ;; This function calls:
  1802 ;;		_eepromRead
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text2
  1809  003F8A                     __ptext2:
  1810                           	callstack 0
  1811  003F8A                     _system_init:
  1812                           	callstack 28
  1813  003F8A                     
  1814                           ;fs_mcu.c: 51:     driver_limit.pay = 0;
  1815  003F8A  0E00               	movlw	0
  1816  003F8C  0101               	movlb	1	; () banked
  1817  003F8E  6F83               	movwf	_driver_limit& (0+255),b
  1818  003F90  0E00               	movlw	0
  1819  003F92  6F84               	movwf	(_driver_limit+1)& (0+255),b
  1820  003F94  0E00               	movlw	0
  1821  003F96  6F85               	movwf	(_driver_limit+2)& (0+255),b
  1822  003F98  0E00               	movlw	0
  1823  003F9A  6F86               	movwf	(_driver_limit+3)& (0+255),b
  1824                           
  1825                           ;fs_mcu.c: 52:     driver_limit.payda = 0;
  1826  003F9C  0E00               	movlw	0
  1827  003F9E  6F87               	movwf	(_driver_limit+4)& (0+255),b
  1828  003FA0  0E00               	movlw	0
  1829  003FA2  6F88               	movwf	(_driver_limit+5)& (0+255),b
  1830  003FA4  0E00               	movlw	0
  1831  003FA6  6F89               	movwf	(_driver_limit+6)& (0+255),b
  1832  003FA8  0E00               	movlw	0
  1833  003FAA  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  1834                           
  1835                           ;fs_mcu.c: 53:     driver_limit.ortalama = 0;
  1836  003FAC  0E00               	movlw	0
  1837  003FAE  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  1838  003FB0  0E00               	movlw	0
  1839  003FB2  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  1840  003FB4  0E00               	movlw	0
  1841  003FB6  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  1842  003FB8  0E00               	movlw	0
  1843  003FBA  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  1844                           
  1845                           ;fs_mcu.c: 54:     convert_data.convert_channel_0 = 0;
  1846  003FBC  0E00               	movlw	0
  1847  003FBE  6F00               	movwf	_convert_data& (0+255),b
  1848  003FC0  0E00               	movlw	0
  1849  003FC2  6F01               	movwf	(_convert_data+1)& (0+255),b
  1850  003FC4  0E00               	movlw	0
  1851  003FC6  6F02               	movwf	(_convert_data+2)& (0+255),b
  1852  003FC8  0E00               	movlw	0
  1853  003FCA  6F03               	movwf	(_convert_data+3)& (0+255),b
  1854                           
  1855                           ;fs_mcu.c: 55:     convert_data.convert_channel_1 = 0;
  1856  003FCC  0E00               	movlw	0
  1857  003FCE  6F04               	movwf	(_convert_data+4)& (0+255),b
  1858  003FD0  0E00               	movlw	0
  1859  003FD2  6F05               	movwf	(_convert_data+5)& (0+255),b
  1860  003FD4  0E00               	movlw	0
  1861  003FD6  6F06               	movwf	(_convert_data+6)& (0+255),b
  1862  003FD8  0E00               	movlw	0
  1863  003FDA  6F07               	movwf	(_convert_data+7)& (0+255),b
  1864                           
  1865                           ;fs_mcu.c: 56:     convert_data.convert_channel_2 = 0;
  1866  003FDC  0E00               	movlw	0
  1867  003FDE  6F08               	movwf	(_convert_data+8)& (0+255),b
  1868  003FE0  0E00               	movlw	0
  1869  003FE2  6F09               	movwf	(_convert_data+9)& (0+255),b
  1870  003FE4  0E00               	movlw	0
  1871  003FE6  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1872  003FE8  0E00               	movlw	0
  1873  003FEA  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1874                           
  1875                           ;fs_mcu.c: 57:     convert_data.convert_channel_3 = 0;
  1876  003FEC  0E00               	movlw	0
  1877  003FEE  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1878  003FF0  0E00               	movlw	0
  1879  003FF2  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1880  003FF4  0E00               	movlw	0
  1881  003FF6  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1882  003FF8  0E00               	movlw	0
  1883  003FFA  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1884                           
  1885                           ;fs_mcu.c: 58:     convert_data.convert_channel_4 = 0;
  1886  003FFC  0E00               	movlw	0
  1887  003FFE  6F10               	movwf	(_convert_data+16)& (0+255),b
  1888  004000  0E00               	movlw	0
  1889  004002  6F11               	movwf	(_convert_data+17)& (0+255),b
  1890  004004  0E00               	movlw	0
  1891  004006  6F12               	movwf	(_convert_data+18)& (0+255),b
  1892  004008  0E00               	movlw	0
  1893  00400A  6F13               	movwf	(_convert_data+19)& (0+255),b
  1894                           
  1895                           ;fs_mcu.c: 59:     convert_data.convert_channel_5 = 0;
  1896  00400C  0E00               	movlw	0
  1897  00400E  6F14               	movwf	(_convert_data+20)& (0+255),b
  1898  004010  0E00               	movlw	0
  1899  004012  6F15               	movwf	(_convert_data+21)& (0+255),b
  1900  004014  0E00               	movlw	0
  1901  004016  6F16               	movwf	(_convert_data+22)& (0+255),b
  1902  004018  0E00               	movlw	0
  1903  00401A  6F17               	movwf	(_convert_data+23)& (0+255),b
  1904                           
  1905                           ;fs_mcu.c: 60:     convert_data.convert_channel_6 = 0;
  1906  00401C  0E00               	movlw	0
  1907  00401E  6F18               	movwf	(_convert_data+24)& (0+255),b
  1908  004020  0E00               	movlw	0
  1909  004022  6F19               	movwf	(_convert_data+25)& (0+255),b
  1910  004024  0E00               	movlw	0
  1911  004026  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1912  004028  0E00               	movlw	0
  1913  00402A  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1914                           
  1915                           ;fs_mcu.c: 61:     convert_data.convert_channel_7 = 0;
  1916  00402C  0E00               	movlw	0
  1917  00402E  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1918  004030  0E00               	movlw	0
  1919  004032  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1920  004034  0E00               	movlw	0
  1921  004036  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1922  004038  0E00               	movlw	0
  1923  00403A  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1924                           
  1925                           ;fs_mcu.c: 62:     controller.leftMotorSpeed = 0;
  1926  00403C  0E00               	movlw	0
  1927  00403E  6F57               	movwf	(_controller+7)& (0+255),b
  1928  004040  0E00               	movlw	0
  1929  004042  6F56               	movwf	(_controller+6)& (0+255),b
  1930                           
  1931                           ;fs_mcu.c: 63:     controller.rightMotorSpeed = 0;
  1932  004044  0E00               	movlw	0
  1933  004046  6F59               	movwf	(_controller+9)& (0+255),b
  1934  004048  0E00               	movlw	0
  1935  00404A  6F58               	movwf	(_controller+8)& (0+255),b
  1936                           
  1937                           ;fs_mcu.c: 64:     timer_value.adc_conversion_time = 0;
  1938  00404C  0E00               	movlw	0
  1939  00404E  6F94               	movwf	(_timer_value+5)& (0+255),b
  1940                           
  1941                           ;fs_mcu.c: 65:     controller.error = 0;
  1942  004050  0E00               	movlw	0
  1943  004052  6F51               	movwf	(_controller+1)& (0+255),b
  1944  004054  0E00               	movlw	0
  1945  004056  6F50               	movwf	_controller& (0+255),b
  1946                           
  1947                           ;fs_mcu.c: 67:     button_bounce_controller.menu = 0;
  1948  004058  0E00               	movlw	0
  1949  00405A  6F9D               	movwf	_button_bounce_controller& (0+255),b
  1950                           
  1951                           ;fs_mcu.c: 68:     button_bounce_controller.pause = 0;
  1952  00405C  0E00               	movlw	0
  1953  00405E  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
  1954                           
  1955                           ;fs_mcu.c: 69:     button_bounce_controller.start = 0;
  1956  004060  0E00               	movlw	0
  1957  004062  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
  1958                           
  1959                           ;fs_mcu.c: 70:     button_bounce_controller.stop = 0;
  1960  004064  0E00               	movlw	0
  1961  004066  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
  1962  004068                     
  1963                           ; BSR set to: 1
  1964                           ;fs_mcu.c: 71:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1965  004068  0E00               	movlw	0
  1966  00406A  ECA1  F02B         	call	_eepromRead
  1967  00406E  0100               	movlb	0	; () banked
  1968  004070  6FF3               	movwf	_menu_value& (0+255),b
  1969  004072                     
  1970                           ; BSR set to: 0
  1971                           ;fs_mcu.c: 72:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1972  004072  0E01               	movlw	1
  1973  004074  ECA1  F02B         	call	_eepromRead
  1974  004078  0100               	movlb	0	; () banked
  1975  00407A  6FF4               	movwf	(_menu_value+1)& (0+255),b
  1976  00407C                     
  1977                           ; BSR set to: 0
  1978                           ;fs_mcu.c: 73:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1979  00407C  0E02               	movlw	2
  1980  00407E  ECA1  F02B         	call	_eepromRead
  1981  004082  0100               	movlb	0	; () banked
  1982  004084  6FF5               	movwf	(_menu_value+2)& (0+255),b
  1983  004086                     
  1984                           ; BSR set to: 0
  1985                           ;fs_mcu.c: 75:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1986  004086  0E39               	movlw	57
  1987  004088  6E03               	movwf	(??_system_init+1)^0,c
  1988  00408A  0ED2               	movlw	210
  1989  00408C  6E02               	movwf	??_system_init^0,c
  1990  00408E  0E4C               	movlw	76
  1991  004090                     u7977:
  1992  004090  2EE8               	decfsz	wreg,f,c
  1993  004092  D7FE               	bra	u7977
  1994  004094  2E02               	decfsz	??_system_init^0,f,c
  1995  004096  D7FC               	bra	u7977
  1996  004098  2E03               	decfsz	(??_system_init+1)^0,f,c
  1997  00409A  D7FA               	bra	u7977
  1998  00409C  D000               	nop2	
  1999  00409E                     
  2000                           ;fs_mcu.c: 76:     timer_value.remainingMinute = menu_value.driver_time;
  2001  00409E  C0F3  F192         	movff	_menu_value,_timer_value+3
  2002  0040A2                     
  2003                           ;fs_mcu.c: 77:     timer_value.remainingSecond = 0;
  2004  0040A2  0E00               	movlw	0
  2005  0040A4  0101               	movlb	1	; () banked
  2006  0040A6  6F91               	movwf	(_timer_value+2)& (0+255),b
  2007  0040A8                     
  2008                           ; BSR set to: 1
  2009  0040A8  0012               	return		;funcret
  2010  0040AA                     __end_of_system_init:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _eepromRead *****************
  2014 ;; Defined at:
  2015 ;;		line 36 in file "fs_eeprom.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  address         1    wreg     unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  address         1    0[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2029 ;;      Params:         0       0       0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0
  2032 ;;      Totals:         1       0       0       0       0       0       0
  2033 ;;Total ram usage:        1 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_system_init
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text3
  2044  005742                     __ptext3:
  2045                           	callstack 0
  2046  005742                     _eepromRead:
  2047                           	callstack 28
  2048                           
  2049                           ; BSR set to: 1
  2050                           ;incstack = 0
  2051                           ;eepromRead@address stored from wreg
  2052  005742  6E01               	movwf	eepromRead@address^0,c
  2053  005744                     
  2054                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 48
      +                          :     EEADR = (uint8_t)address;
  2055  005744  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  2056  005748                     
  2057                           ;fs_eeprom.c: 50:     EECON1bits.EEPGD = 0;
  2058  005748  9EA6               	bcf	166,7,c	;volsfr
  2059  00574A                     
  2060                           ;fs_eeprom.c: 51:     EECON1bits.CFGS = 0;
  2061  00574A  9CA6               	bcf	166,6,c	;volsfr
  2062  00574C                     
  2063                           ;fs_eeprom.c: 52:     EECON1bits.RD = 1;
  2064  00574C  80A6               	bsf	166,0,c	;volsfr
  2065  00574E                     l92:
  2066  00574E  B0A6               	btfsc	166,0,c	;volsfr
  2067  005750  EFAC  F02B         	goto	u7551
  2068  005754  EFAE  F02B         	goto	u7550
  2069  005758                     u7551:
  2070  005758  EFA7  F02B         	goto	l92
  2071  00575C                     u7550:
  2072  00575C                     
  2073                           ;fs_eeprom.c: 58:     return EEDATA;
  2074  00575C  50A8               	movf	168,w,c	;volatile
  2075  00575E  0012               	return		;funcret
  2076  005760                     __end_of_eepromRead:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _openLCD_Script *****************
  2080 ;; Defined at:
  2081 ;;		line 87 in file "fs_mcu.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2095 ;;      Params:         0       0       0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0
  2097 ;;      Temps:          2       0       0       0       0       0       0
  2098 ;;      Totals:         2       0       0       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    4
  2102 ;; This function calls:
  2103 ;;		_Lcd_Clear
  2104 ;;		_Lcd_Set_Cursor
  2105 ;;		_Lcd_Write_String
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text4
  2112  00530E                     __ptext4:
  2113                           	callstack 0
  2114  00530E                     _openLCD_Script:
  2115                           	callstack 26
  2116  00530E                     
  2117                           ;fs_mcu.c: 89:     Lcd_Set_Cursor(1,1);
  2118  00530E  0E01               	movlw	1
  2119  005310  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2120  005312  0E01               	movlw	1
  2121  005314  EC4D  F028         	call	_Lcd_Set_Cursor
  2122  005318                     
  2123                           ;fs_mcu.c: 90:     Lcd_Write_String("   Ergin Oyun  ");
  2124  005318  0EB1               	movlw	low STR_1
  2125  00531A  6E05               	movwf	Lcd_Write_String@a^0,c
  2126  00531C  0E7F               	movlw	high STR_1
  2127  00531E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2128  005320  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  2129  005324                     
  2130                           ;fs_mcu.c: 91:     Lcd_Set_Cursor(2,1);
  2131  005324  0E01               	movlw	1
  2132  005326  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2133  005328  0E02               	movlw	2
  2134  00532A  EC4D  F028         	call	_Lcd_Set_Cursor
  2135                           
  2136                           ;fs_mcu.c: 92:     Lcd_Write_String(" iYi Eglenceler ");
  2137  00532E  0E80               	movlw	low STR_2
  2138  005330  6E05               	movwf	Lcd_Write_String@a^0,c
  2139  005332  0E7F               	movlw	high STR_2
  2140  005334  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2141  005336  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  2142  00533A                     
  2143                           ;fs_mcu.c: 93:     _delay((unsigned long)((2500)*(64000000UL/4000.0)));
  2144  00533A  0ECB               	movlw	203
  2145  00533C  6E0C               	movwf	(??_openLCD_Script+1)^0,c
  2146  00533E  0EEC               	movlw	236
  2147  005340  6E0B               	movwf	??_openLCD_Script^0,c
  2148  005342  0E84               	movlw	132
  2149  005344                     u7987:
  2150  005344  2EE8               	decfsz	wreg,f,c
  2151  005346  D7FE               	bra	u7987
  2152  005348  2E0B               	decfsz	??_openLCD_Script^0,f,c
  2153  00534A  D7FC               	bra	u7987
  2154  00534C  2E0C               	decfsz	(??_openLCD_Script+1)^0,f,c
  2155  00534E  D7FA               	bra	u7987
  2156  005350  D000               	nop2	
  2157  005352                     
  2158                           ;fs_mcu.c: 94:     Lcd_Clear();
  2159  005352  ECE0  F02B         	call	_Lcd_Clear	;wreg free
  2160  005356  0012               	return		;funcret
  2161  005358                     __end_of_openLCD_Script:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _Lcd_Clear *****************
  2165 ;; Defined at:
  2166 ;;		line 72 in file "fs_lcd.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2180 ;;      Params:         0       0       0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		_Lcd_Cmd
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;;		_openLCD_Script
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text5
  2196  0057C0                     __ptext5:
  2197                           	callstack 0
  2198  0057C0                     _Lcd_Clear:
  2199                           	callstack 26
  2200  0057C0                     
  2201                           ;fs_lcd.c: 74:    Lcd_Cmd(0);
  2202  0057C0  0E00               	movlw	0
  2203  0057C2  ECB0  F02B         	call	_Lcd_Cmd
  2204                           
  2205                           ;fs_lcd.c: 75:    Lcd_Cmd(1);
  2206  0057C6  0E01               	movlw	1
  2207  0057C8  ECB0  F02B         	call	_Lcd_Cmd
  2208  0057CC  0012               	return		;funcret
  2209  0057CE                     __end_of_Lcd_Clear:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _menuInitialize *****************
  2213 ;; Defined at:
  2214 ;;		line 35 in file "fs_menu_controller.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		None
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2228 ;;      Params:         0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text6
  2243  0056CC                     __ptext6:
  2244                           	callstack 0
  2245  0056CC                     _menuInitialize:
  2246                           	callstack 29
  2247  0056CC                     
  2248                           ;fs_menu_controller.c: 38:     TRISBbits.RB6 = 1;
  2249  0056CC  8C93               	bsf	147,6,c	;volatile
  2250                           
  2251                           ;fs_menu_controller.c: 41:     TRISBbits.RB7 = 1;
  2252  0056CE  8E93               	bsf	147,7,c	;volatile
  2253                           
  2254                           ;fs_menu_controller.c: 43:     ANSELDbits.ANSD4 = 0;
  2255  0056D0  010F               	movlb	15	; () banked
  2256  0056D2  993B               	bcf	59,4,b	;volatile
  2257                           
  2258                           ;fs_menu_controller.c: 44:     TRISDbits.RD4 = 1;
  2259  0056D4  8895               	bsf	149,4,c	;volatile
  2260                           
  2261                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD0 = 0;
  2262  0056D6  913B               	bcf	59,0,b	;volatile
  2263                           
  2264                           ;fs_menu_controller.c: 47:     TRISDbits.RD0 = 1;
  2265  0056D8  8095               	bsf	149,0,c	;volatile
  2266                           
  2267                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD1 = 0;
  2268  0056DA  933B               	bcf	59,1,b	;volatile
  2269                           
  2270                           ;fs_menu_controller.c: 50:     TRISDbits.RD1 = 1;
  2271  0056DC  8295               	bsf	149,1,c	;volatile
  2272                           
  2273                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD2 = 0;
  2274  0056DE  953B               	bcf	59,2,b	;volatile
  2275                           
  2276                           ;fs_menu_controller.c: 53:     TRISDbits.RD2 = 1;
  2277  0056E0  8495               	bsf	149,2,c	;volatile
  2278                           
  2279                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD3 = 0;
  2280  0056E2  973B               	bcf	59,3,b	;volatile
  2281                           
  2282                           ;fs_menu_controller.c: 56:     TRISDbits.RD3 = 1;
  2283  0056E4  8695               	bsf	149,3,c	;volatile
  2284                           
  2285                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD5 = 0;
  2286  0056E6  9B3B               	bcf	59,5,b	;volatile
  2287                           
  2288                           ;fs_menu_controller.c: 59:     TRISDbits.RD5 = 0;
  2289  0056E8  9A95               	bcf	149,5,c	;volatile
  2290                           
  2291                           ;fs_menu_controller.c: 61:     ANSELCbits.ANSC5 = 0;
  2292  0056EA  9B3A               	bcf	58,5,b	;volatile
  2293                           
  2294                           ;fs_menu_controller.c: 62:     TRISCbits.RC5 = 0;
  2295  0056EC  9A94               	bcf	148,5,c	;volatile
  2296                           
  2297                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC4 = 0;
  2298  0056EE  993A               	bcf	58,4,b	;volatile
  2299                           
  2300                           ;fs_menu_controller.c: 65:     TRISCbits.RC4 = 0;
  2301  0056F0  9894               	bcf	148,4,c	;volatile
  2302  0056F2                     
  2303                           ; BSR set to: 15
  2304  0056F2  0012               	return		;funcret
  2305  0056F4                     __end_of_menuInitialize:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _menuControl *****************
  2309 ;; Defined at:
  2310 ;;		line 159 in file "fs_menu_controller.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:   11
  2331 ;; This function calls:
  2332 ;;		_buttonControlFlags
  2333 ;;		_stateMachine
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text7
  2340  004F50                     __ptext7:
  2341                           	callstack 0
  2342  004F50                     _menuControl:
  2343                           	callstack 19
  2344  004F50                     
  2345                           ;fs_menu_controller.c: 161:     buttonControlFlags();
  2346  004F50  ECE7  F018         	call	_buttonControlFlags	;wreg free
  2347  004F54                     
  2348                           ;fs_menu_controller.c: 162:     stateMachine();
  2349  004F54  EC4C  F025         	call	_stateMachine	;wreg free
  2350  004F58                     
  2351                           ;fs_menu_controller.c: 164:     if (menu_flags.menu_start_flag == 1)
  2352  004F58  0101               	movlb	1	; () banked
  2353  004F5A  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2354  004F5C  A4D8               	btfss	status,2,c
  2355  004F5E  EFB3  F027         	goto	u7811
  2356  004F62  EFB5  F027         	goto	u7810
  2357  004F66                     u7811:
  2358  004F66  EFBE  F027         	goto	l6456
  2359  004F6A                     u7810:
  2360  004F6A                     
  2361                           ; BSR set to: 1
  2362                           ;fs_menu_controller.c: 165:     {;fs_menu_controller.c: 166:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2363  004F6A  0E00               	movlw	0
  2364  004F6C  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2365                           
  2366                           ;fs_menu_controller.c: 167:         startIsClick = 1;
  2367  004F6E  0E01               	movlw	1
  2368  004F70  0100               	movlb	0	; () banked
  2369  004F72  6FFE               	movwf	_startIsClick& (0+255),b
  2370                           
  2371                           ;fs_menu_controller.c: 168:         pauseIsClick = 0;
  2372  004F74  0E00               	movlw	0
  2373  004F76  6FFF               	movwf	_pauseIsClick& (0+255),b
  2374                           
  2375                           ;fs_menu_controller.c: 169:         stopIsClick = 0;
  2376  004F78  0E00               	movlw	0
  2377  004F7A  6FFD               	movwf	_stopIsClick& (0+255),b
  2378  004F7C                     l6456:
  2379                           
  2380                           ;fs_menu_controller.c: 172:     if (menu_flags.menu_pause_flag == 1)
  2381  004F7C  0101               	movlb	1	; () banked
  2382  004F7E  059A               	decf	(_menu_flags+3)& (0+255),w,b
  2383  004F80  A4D8               	btfss	status,2,c
  2384  004F82  EFC5  F027         	goto	u7821
  2385  004F86  EFC7  F027         	goto	u7820
  2386  004F8A                     u7821:
  2387  004F8A  EFD0  F027         	goto	l6460
  2388  004F8E                     u7820:
  2389  004F8E                     
  2390                           ; BSR set to: 1
  2391                           ;fs_menu_controller.c: 173:     {;fs_menu_controller.c: 174:         menu_flags.menu_pau
      +                          se_flag = 0;
  2392  004F8E  0E00               	movlw	0
  2393  004F90  6F9A               	movwf	(_menu_flags+3)& (0+255),b
  2394                           
  2395                           ;fs_menu_controller.c: 175:         pauseIsClick = 1;
  2396  004F92  0E01               	movlw	1
  2397  004F94  0100               	movlb	0	; () banked
  2398  004F96  6FFF               	movwf	_pauseIsClick& (0+255),b
  2399                           
  2400                           ;fs_menu_controller.c: 176:         startIsClick = 0;
  2401  004F98  0E00               	movlw	0
  2402  004F9A  6FFE               	movwf	_startIsClick& (0+255),b
  2403                           
  2404                           ;fs_menu_controller.c: 177:         stopIsClick = 0;
  2405  004F9C  0E00               	movlw	0
  2406  004F9E  6FFD               	movwf	_stopIsClick& (0+255),b
  2407  004FA0                     l6460:
  2408                           
  2409                           ;fs_menu_controller.c: 180:     if (menu_flags.menu_stop_flag == 1)
  2410  004FA0  0101               	movlb	1	; () banked
  2411  004FA2  0599               	decf	(_menu_flags+2)& (0+255),w,b
  2412  004FA4  A4D8               	btfss	status,2,c
  2413  004FA6  EFD7  F027         	goto	u7831
  2414  004FAA  EFD9  F027         	goto	u7830
  2415  004FAE                     u7831:
  2416  004FAE  EFE2  F027         	goto	l428
  2417  004FB2                     u7830:
  2418  004FB2                     
  2419                           ; BSR set to: 1
  2420                           ;fs_menu_controller.c: 181:     {;fs_menu_controller.c: 182:         menu_flags.menu_sto
      +                          p_flag = 0;
  2421  004FB2  0E00               	movlw	0
  2422  004FB4  6F99               	movwf	(_menu_flags+2)& (0+255),b
  2423                           
  2424                           ;fs_menu_controller.c: 183:         pauseIsClick = 0;
  2425  004FB6  0E00               	movlw	0
  2426  004FB8  0100               	movlb	0	; () banked
  2427  004FBA  6FFF               	movwf	_pauseIsClick& (0+255),b
  2428                           
  2429                           ;fs_menu_controller.c: 184:         startIsClick = 0;
  2430  004FBC  0E00               	movlw	0
  2431  004FBE  6FFE               	movwf	_startIsClick& (0+255),b
  2432                           
  2433                           ;fs_menu_controller.c: 185:         stopIsClick = 1;
  2434  004FC0  0E01               	movlw	1
  2435  004FC2  6FFD               	movwf	_stopIsClick& (0+255),b
  2436  004FC4                     l428:
  2437  004FC4  0012               	return		;funcret
  2438  004FC6                     __end_of_menuControl:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _stateMachine *****************
  2442 ;; Defined at:
  2443 ;;		line 196 in file "fs_menu_controller.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0
  2459 ;;      Temps:          0       2       0       0       0       0       0
  2460 ;;      Totals:         0       2       0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:   10
  2464 ;; This function calls:
  2465 ;;		_driverTimeSettingMenu
  2466 ;;		_exitLine
  2467 ;;		_mainMenu
  2468 ;;		_pauseMenu
  2469 ;;		_secretMenu
  2470 ;;		_speedLimitSettingMenu
  2471 ;;		_startMenu
  2472 ;;		_stopMenu
  2473 ;;		_stopTimeSettingMenu
  2474 ;; This function is called by:
  2475 ;;		_menuControl
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text8
  2480  004A98                     __ptext8:
  2481                           	callstack 0
  2482  004A98                     _stateMachine:
  2483                           	callstack 19
  2484  004A98                     
  2485                           ;fs_menu_controller.c: 198:     switch (menu_selected)
  2486  004A98  EF72  F025         	goto	l6364
  2487  004A9C                     l6344:
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;fs_menu_controller.c: 201:             mainMenu();
  2491  004A9C  EC86  F01B         	call	_mainMenu	;wreg free
  2492                           
  2493                           ;fs_menu_controller.c: 202:         break;
  2494  004AA0  EFA4  F025         	goto	l442
  2495  004AA4                     l6346:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;fs_menu_controller.c: 205:             driverTimeSettingMenu();
  2499  004AA4  EC2F  F01F         	call	_driverTimeSettingMenu	;wreg free
  2500                           
  2501                           ;fs_menu_controller.c: 206:         break;
  2502  004AA8  EFA4  F025         	goto	l442
  2503  004AAC                     l6348:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;fs_menu_controller.c: 209:             stopTimeSettingMenu();
  2507  004AAC  EC55  F020         	call	_stopTimeSettingMenu	;wreg free
  2508                           
  2509                           ;fs_menu_controller.c: 210:         break;
  2510  004AB0  EFA4  F025         	goto	l442
  2511  004AB4                     l6350:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;fs_menu_controller.c: 213:             speedLimitSettingMenu();
  2515  004AB4  ECDB  F020         	call	_speedLimitSettingMenu	;wreg free
  2516                           
  2517                           ;fs_menu_controller.c: 214:         break;
  2518  004AB8  EFA4  F025         	goto	l442
  2519  004ABC                     l6352:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;fs_menu_controller.c: 217:             stopMenu();
  2523  004ABC  ECB9  F023         	call	_stopMenu	;wreg free
  2524                           
  2525                           ;fs_menu_controller.c: 218:         break;
  2526  004AC0  EFA4  F025         	goto	l442
  2527  004AC4                     l6354:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;fs_menu_controller.c: 221:             startMenu();
  2531  004AC4  ECBF  F02B         	call	_startMenu	;wreg free
  2532                           
  2533                           ;fs_menu_controller.c: 222:         break;
  2534  004AC8  EFA4  F025         	goto	l442
  2535  004ACC                     l6356:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;fs_menu_controller.c: 225:             pauseMenu();
  2539  004ACC  EC92  F01E         	call	_pauseMenu	;wreg free
  2540                           
  2541                           ;fs_menu_controller.c: 226:         break;
  2542  004AD0  EFA4  F025         	goto	l442
  2543  004AD4                     l6358:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;fs_menu_controller.c: 229:             exitLine();
  2547  004AD4  ECE7  F02B         	call	_exitLine	;wreg free
  2548                           
  2549                           ;fs_menu_controller.c: 230:         break;
  2550  004AD8  EFA4  F025         	goto	l442
  2551  004ADC                     l6360:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;fs_menu_controller.c: 233:             secretMenu();
  2555  004ADC  EC70  F016         	call	_secretMenu	;wreg free
  2556                           
  2557                           ;fs_menu_controller.c: 234:         break;
  2558  004AE0  EFA4  F025         	goto	l442
  2559  004AE4                     l6364:
  2560  004AE4  0100               	movlb	0	; () banked
  2561  004AE6  51FB               	movf	_menu_selected& (0+255),w,b
  2562  004AE8  6FF1               	movwf	??_stateMachine& (0+255),b
  2563  004AEA  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  004AEC  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  2573  004AEE  0A00               	xorlw	0	; case 0
  2574  004AF0  B4D8               	btfsc	status,2,c
  2575  004AF2  EF7D  F025         	goto	l6616
  2576  004AF6  EFA4  F025         	goto	l442
  2577  004AFA                     l6616:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 9, Range of values is 0 to 8
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte           28    15 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  004AFA  51F1               	movf	??_stateMachine& (0+255),w,b
  2587  004AFC  0A00               	xorlw	0	; case 0
  2588  004AFE  B4D8               	btfsc	status,2,c
  2589  004B00  EF4E  F025         	goto	l6344
  2590  004B04  0A01               	xorlw	1	; case 1
  2591  004B06  B4D8               	btfsc	status,2,c
  2592  004B08  EF52  F025         	goto	l6346
  2593  004B0C  0A03               	xorlw	3	; case 2
  2594  004B0E  B4D8               	btfsc	status,2,c
  2595  004B10  EF56  F025         	goto	l6348
  2596  004B14  0A01               	xorlw	1	; case 3
  2597  004B16  B4D8               	btfsc	status,2,c
  2598  004B18  EF5A  F025         	goto	l6350
  2599  004B1C  0A07               	xorlw	7	; case 4
  2600  004B1E  B4D8               	btfsc	status,2,c
  2601  004B20  EF5E  F025         	goto	l6352
  2602  004B24  0A01               	xorlw	1	; case 5
  2603  004B26  B4D8               	btfsc	status,2,c
  2604  004B28  EF62  F025         	goto	l6354
  2605  004B2C  0A03               	xorlw	3	; case 6
  2606  004B2E  B4D8               	btfsc	status,2,c
  2607  004B30  EF66  F025         	goto	l6356
  2608  004B34  0A01               	xorlw	1	; case 7
  2609  004B36  B4D8               	btfsc	status,2,c
  2610  004B38  EF6A  F025         	goto	l6358
  2611  004B3C  0A0F               	xorlw	15	; case 8
  2612  004B3E  B4D8               	btfsc	status,2,c
  2613  004B40  EF6E  F025         	goto	l6360
  2614  004B44  EFA4  F025         	goto	l442
  2615  004B48                     l442:
  2616  004B48  0012               	return		;funcret
  2617  004B4A                     __end_of_stateMachine:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _stopTimeSettingMenu *****************
  2621 ;; Defined at:
  2622 ;;		line 536 in file "fs_menu_controller.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2636 ;;      Params:         0       0       0       0       0       0       0
  2637 ;;      Locals:         0      16       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0
  2639 ;;      Totals:         0      16       0       0       0       0       0
  2640 ;;Total ram usage:       16 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    9
  2643 ;; This function calls:
  2644 ;;		_Lcd_Set_Cursor
  2645 ;;		_Lcd_Write_String
  2646 ;;		_eepromWrite
  2647 ;;		_sprintf
  2648 ;;		_stopMotor
  2649 ;; This function is called by:
  2650 ;;		_stateMachine
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text9
  2655  0040AA                     __ptext9:
  2656                           	callstack 0
  2657  0040AA                     _stopTimeSettingMenu:
  2658                           	callstack 19
  2659  0040AA                     
  2660                           ;fs_menu_controller.c: 538:     char textCursor2[16] = {0};
  2661  0040AA  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2662  0040AE  0E0F               	movlw	15
  2663  0040B0                     u7151:
  2664  0040B0  6ADE               	clrf	postinc2,c
  2665  0040B2  06E8               	decf	wreg,f,c
  2666  0040B4  E2FD               	bc	u7151
  2667  0040B6                     
  2668                           ;fs_menu_controller.c: 540:     stopMotor();
  2669  0040B6  EC71  F02A         	call	_stopMotor	;wreg free
  2670  0040BA                     
  2671                           ;fs_menu_controller.c: 542:     if (menu_flags.menu_input_flag == 1)
  2672  0040BA  0101               	movlb	1	; () banked
  2673  0040BC  0597               	decf	_menu_flags& (0+255),w,b
  2674  0040BE  A4D8               	btfss	status,2,c
  2675  0040C0  EF64  F020         	goto	u7161
  2676  0040C4  EF66  F020         	goto	u7160
  2677  0040C8                     u7161:
  2678  0040C8  EF6B  F020         	goto	l6046
  2679  0040CC                     u7160:
  2680  0040CC                     
  2681                           ; BSR set to: 1
  2682                           ;fs_menu_controller.c: 543:     {;fs_menu_controller.c: 544:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2683  0040CC  0E00               	movlw	0
  2684  0040CE  6F97               	movwf	_menu_flags& (0+255),b
  2685                           
  2686                           ;fs_menu_controller.c: 545:         menu_selected = SPEED_LIMIT_SETTING;
  2687  0040D0  0E03               	movlw	3
  2688  0040D2  0100               	movlb	0	; () banked
  2689  0040D4  6FFB               	movwf	_menu_selected& (0+255),b
  2690  0040D6                     l6046:
  2691                           
  2692                           ;fs_menu_controller.c: 548:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2693  0040D6  0101               	movlb	1	; () banked
  2694  0040D8  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2695  0040DA  A4D8               	btfss	status,2,c
  2696  0040DC  EF72  F020         	goto	u7171
  2697  0040E0  EF74  F020         	goto	u7170
  2698  0040E4                     u7171:
  2699  0040E4  EF88  F020         	goto	l6056
  2700  0040E8                     u7170:
  2701  0040E8                     
  2702                           ; BSR set to: 1
  2703  0040E8  0EFA               	movlw	250
  2704  0040EA  0100               	movlb	0	; () banked
  2705  0040EC  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2706  0040EE  EF7B  F020         	goto	u7181
  2707  0040F2  EF7D  F020         	goto	u7180
  2708  0040F6                     u7181:
  2709  0040F6  EF88  F020         	goto	l6056
  2710  0040FA                     u7180:
  2711  0040FA                     
  2712                           ; BSR set to: 0
  2713                           ;fs_menu_controller.c: 549:     {;fs_menu_controller.c: 550:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2714  0040FA  0E00               	movlw	0
  2715  0040FC  0101               	movlb	1	; () banked
  2716  0040FE  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2717  004100                     
  2718                           ; BSR set to: 1
  2719                           ;fs_menu_controller.c: 551:         menu_value.stop_time += 10;
  2720  004100  0E0A               	movlw	10
  2721  004102  0100               	movlb	0	; () banked
  2722  004104  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2723  004106                     
  2724                           ; BSR set to: 0
  2725                           ;fs_menu_controller.c: 552:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2726  004106  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2727  00410A  0E01               	movlw	1
  2728  00410C  EC4F  F02B         	call	_eepromWrite
  2729  004110                     l6056:
  2730                           
  2731                           ;fs_menu_controller.c: 555:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2732  004110  0101               	movlb	1	; () banked
  2733  004112  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2734  004114  A4D8               	btfss	status,2,c
  2735  004116  EF8F  F020         	goto	u7191
  2736  00411A  EF91  F020         	goto	u7190
  2737  00411E                     u7191:
  2738  00411E  EFA5  F020         	goto	l501
  2739  004122                     u7190:
  2740  004122                     
  2741                           ; BSR set to: 1
  2742  004122  0E0A               	movlw	10
  2743  004124  0100               	movlb	0	; () banked
  2744  004126  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2745  004128  EF98  F020         	goto	u7201
  2746  00412C  EF9A  F020         	goto	u7200
  2747  004130                     u7201:
  2748  004130  EFA5  F020         	goto	l501
  2749  004134                     u7200:
  2750  004134                     
  2751                           ; BSR set to: 0
  2752                           ;fs_menu_controller.c: 556:     {;fs_menu_controller.c: 557:          menu_flags.menu_de
      +                          crease_flag = 0;
  2753  004134  0E00               	movlw	0
  2754  004136  0101               	movlb	1	; () banked
  2755  004138  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2756  00413A                     
  2757                           ; BSR set to: 1
  2758                           ;fs_menu_controller.c: 558:          menu_value.stop_time -= 10;
  2759  00413A  0E0A               	movlw	10
  2760  00413C  0100               	movlb	0	; () banked
  2761  00413E  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2762  004140                     
  2763                           ; BSR set to: 0
  2764                           ;fs_menu_controller.c: 559:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2765  004140  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2766  004144  0E01               	movlw	1
  2767  004146  EC4F  F02B         	call	_eepromWrite
  2768  00414A                     l501:
  2769                           
  2770                           ;fs_menu_controller.c: 561:     Lcd_Set_Cursor(1,1);
  2771  00414A  0E01               	movlw	1
  2772  00414C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2773  00414E  0E01               	movlw	1
  2774  004150  EC4D  F028         	call	_Lcd_Set_Cursor
  2775  004154                     
  2776                           ;fs_menu_controller.c: 562:     Lcd_Write_String("DURMA ZAMANI  ms");
  2777  004154  0E6F               	movlw	low STR_15
  2778  004156  6E05               	movwf	Lcd_Write_String@a^0,c
  2779  004158  0E7F               	movlw	high STR_15
  2780  00415A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2781  00415C  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  2782  004160                     
  2783                           ;fs_menu_controller.c: 563:     Lcd_Set_Cursor(2,1);
  2784  004160  0E01               	movlw	1
  2785  004162  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2786  004164  0E02               	movlw	2
  2787  004166  EC4D  F028         	call	_Lcd_Set_Cursor
  2788  00416A                     
  2789                           ;fs_menu_controller.c: 564:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2790  00416A  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2791  00416C  0100               	movlb	0	; () banked
  2792  00416E  6FCF               	movwf	sprintf@s& (0+255),b
  2793  004170  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2794  004172  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2795  004174  0E91               	movlw	low STR_16
  2796  004176  6FD1               	movwf	sprintf@fmt& (0+255),b
  2797  004178  0E7F               	movlw	high STR_16
  2798  00417A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2799  00417C  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2800  004180  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2801  004182  EC35  F029         	call	_sprintf	;wreg free
  2802  004186                     
  2803                           ;fs_menu_controller.c: 565:     Lcd_Write_String(textCursor2);
  2804  004186  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2805  004188  6E05               	movwf	Lcd_Write_String@a^0,c
  2806  00418A  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2807  00418C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2808  00418E  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  2809  004192                     
  2810                           ;fs_menu_controller.c: 567:     if(timer_value.menu_login_delay == 100)
  2811  004192  0E64               	movlw	100
  2812  004194  0101               	movlb	1	; () banked
  2813  004196  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2814  004198  A4D8               	btfss	status,2,c
  2815  00419A  EFD1  F020         	goto	u7211
  2816  00419E  EFD3  F020         	goto	u7210
  2817  0041A2                     u7211:
  2818  0041A2  EFDA  F020         	goto	l503
  2819  0041A6                     u7210:
  2820  0041A6                     
  2821                           ; BSR set to: 1
  2822                           ;fs_menu_controller.c: 568:     {;fs_menu_controller.c: 569:         button_bounce_contr
      +                          oller.menu = 0;
  2823  0041A6  0E00               	movlw	0
  2824  0041A8  6F9D               	movwf	_button_bounce_controller& (0+255),b
  2825                           
  2826                           ;fs_menu_controller.c: 570:         timer_value.menu_login_delay = 0;
  2827  0041AA  0E00               	movlw	0
  2828  0041AC  6F93               	movwf	(_timer_value+4)& (0+255),b
  2829                           
  2830                           ;fs_menu_controller.c: 571:         menu_selected = PAUSE_MENU;
  2831  0041AE  0E06               	movlw	6
  2832  0041B0  0100               	movlb	0	; () banked
  2833  0041B2  6FFB               	movwf	_menu_selected& (0+255),b
  2834  0041B4                     l503:
  2835  0041B4  0012               	return		;funcret
  2836  0041B6                     __end_of_stopTimeSettingMenu:
  2837                           	callstack 0
  2838                           
  2839 ;; *************** function _stopMenu *****************
  2840 ;; Defined at:
  2841 ;;		line 304 in file "fs_menu_controller.c"
  2842 ;; Parameters:    Size  Location     Type
  2843 ;;		None
  2844 ;; Auto vars:     Size  Location     Type
  2845 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2846 ;; Return value:  Size  Location     Type
  2847 ;;                  1    wreg      void 
  2848 ;; Registers used:
  2849 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2850 ;; Tracked objects:
  2851 ;;		On entry : 0/0
  2852 ;;		On exit  : 0/0
  2853 ;;		Unchanged: 0/0
  2854 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2855 ;;      Params:         0       0       0       0       0       0       0
  2856 ;;      Locals:         0      16       0       0       0       0       0
  2857 ;;      Temps:          0       0       0       0       0       0       0
  2858 ;;      Totals:         0      16       0       0       0       0       0
  2859 ;;Total ram usage:       16 bytes
  2860 ;; Hardware stack levels used:    1
  2861 ;; Hardware stack levels required when called:    9
  2862 ;; This function calls:
  2863 ;;		_Lcd_Set_Cursor
  2864 ;;		_Lcd_Write_String
  2865 ;;		_sprintf
  2866 ;;		_stopMotor
  2867 ;; This function is called by:
  2868 ;;		_stateMachine
  2869 ;; This function uses a non-reentrant model
  2870 ;;
  2871                           
  2872                           	psect	text10
  2873  004772                     __ptext10:
  2874                           	callstack 0
  2875  004772                     _stopMenu:
  2876                           	callstack 19
  2877  004772                     
  2878                           ;fs_menu_controller.c: 306:     char textCursor2[16] = {0};
  2879  004772  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2880  004776  0E0F               	movlw	15
  2881  004778                     u7291:
  2882  004778  6ADE               	clrf	postinc2,c
  2883  00477A  06E8               	decf	wreg,f,c
  2884  00477C  E2FD               	bc	u7291
  2885  00477E                     
  2886                           ;fs_menu_controller.c: 308:     startIsClick = 0;
  2887  00477E  0E00               	movlw	0
  2888  004780  0100               	movlb	0	; () banked
  2889  004782  6FFE               	movwf	_startIsClick& (0+255),b
  2890  004784                     
  2891                           ; BSR set to: 0
  2892                           ;fs_menu_controller.c: 309:     pauseIsClick = 0;
  2893  004784  0E00               	movlw	0
  2894  004786  6FFF               	movwf	_pauseIsClick& (0+255),b
  2895  004788                     
  2896                           ; BSR set to: 0
  2897                           ;fs_menu_controller.c: 310:     stopIsClick = 1;
  2898  004788  0E01               	movlw	1
  2899  00478A  6FFD               	movwf	_stopIsClick& (0+255),b
  2900  00478C                     
  2901                           ; BSR set to: 0
  2902                           ;fs_menu_controller.c: 312:     Lcd_Set_Cursor(1,1);
  2903  00478C  0E01               	movlw	1
  2904  00478E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2905  004790  0E01               	movlw	1
  2906  004792  EC4D  F028         	call	_Lcd_Set_Cursor
  2907  004796                     
  2908                           ;fs_menu_controller.c: 313:     Lcd_Write_String("ZAMAN DOLDU     ");
  2909  004796  0E3C               	movlw	low STR_5
  2910  004798  6E05               	movwf	Lcd_Write_String@a^0,c
  2911  00479A  0E7F               	movlw	high STR_5
  2912  00479C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2913  00479E  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  2914  0047A2                     
  2915                           ;fs_menu_controller.c: 315:     timer_value.remainingSecond = 0;
  2916  0047A2  0E00               	movlw	0
  2917  0047A4  0101               	movlb	1	; () banked
  2918  0047A6  6F91               	movwf	(_timer_value+2)& (0+255),b
  2919  0047A8                     
  2920                           ; BSR set to: 1
  2921                           ;fs_menu_controller.c: 316:     timer_value.remainingMinute = 0;
  2922  0047A8  0E00               	movlw	0
  2923  0047AA  6F92               	movwf	(_timer_value+3)& (0+255),b
  2924  0047AC                     
  2925                           ; BSR set to: 1
  2926                           ;fs_menu_controller.c: 318:     Lcd_Set_Cursor(2,1);
  2927  0047AC  0E01               	movlw	1
  2928  0047AE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2929  0047B0  0E02               	movlw	2
  2930  0047B2  EC4D  F028         	call	_Lcd_Set_Cursor
  2931  0047B6                     
  2932                           ;fs_menu_controller.c: 319:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2933  0047B6  0EE1               	movlw	low stopMenu@textCursor2
  2934  0047B8  0100               	movlb	0	; () banked
  2935  0047BA  6FCF               	movwf	sprintf@s& (0+255),b
  2936  0047BC  0E00               	movlw	high stopMenu@textCursor2
  2937  0047BE  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2938  0047C0  0EA1               	movlw	low STR_6
  2939  0047C2  6FD1               	movwf	sprintf@fmt& (0+255),b
  2940  0047C4  0E7F               	movlw	high STR_6
  2941  0047C6  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2942  0047C8  0101               	movlb	1	; () banked
  2943  0047CA  5192               	movf	(_timer_value+3)& (0+255),w,b
  2944  0047CC  0100               	movlb	0	; () banked
  2945  0047CE  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2946  0047D0  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2947  0047D2  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2948  0047D4  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2949  0047D6  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  2950  0047DA  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2951  0047DC  EC35  F029         	call	_sprintf	;wreg free
  2952  0047E0                     
  2953                           ;fs_menu_controller.c: 320:     Lcd_Write_String(textCursor2);
  2954  0047E0  0EE1               	movlw	low stopMenu@textCursor2
  2955  0047E2  6E05               	movwf	Lcd_Write_String@a^0,c
  2956  0047E4  0E00               	movlw	high stopMenu@textCursor2
  2957  0047E6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2958  0047E8  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  2959  0047EC                     
  2960                           ;fs_menu_controller.c: 322:     if (menu_flags.menu_start_flag == 1)
  2961  0047EC  0101               	movlb	1	; () banked
  2962  0047EE  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2963  0047F0  A4D8               	btfss	status,2,c
  2964  0047F2  EFFD  F023         	goto	u7301
  2965  0047F6  EFFF  F023         	goto	u7300
  2966  0047FA                     u7301:
  2967  0047FA  EF0F  F024         	goto	l6146
  2968  0047FE                     u7300:
  2969  0047FE                     
  2970                           ; BSR set to: 1
  2971                           ;fs_menu_controller.c: 323:     {;fs_menu_controller.c: 324:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2972  0047FE  0E00               	movlw	0
  2973  004800  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2974                           
  2975                           ;fs_menu_controller.c: 325:         menu_selected = START_MENU;
  2976  004802  0E05               	movlw	5
  2977  004804  0100               	movlb	0	; () banked
  2978  004806  6FFB               	movwf	_menu_selected& (0+255),b
  2979                           
  2980                           ;fs_menu_controller.c: 327:         startIsClick = 1;
  2981  004808  0E01               	movlw	1
  2982  00480A  6FFE               	movwf	_startIsClick& (0+255),b
  2983                           
  2984                           ;fs_menu_controller.c: 328:         pauseIsClick = 0;
  2985  00480C  0E00               	movlw	0
  2986  00480E  6FFF               	movwf	_pauseIsClick& (0+255),b
  2987                           
  2988                           ;fs_menu_controller.c: 329:         stopIsClick = 0;
  2989  004810  0E00               	movlw	0
  2990  004812  6FFD               	movwf	_stopIsClick& (0+255),b
  2991                           
  2992                           ;fs_menu_controller.c: 330:         timer_value.second = 0;
  2993  004814  0E00               	movlw	0
  2994  004816  0101               	movlb	1	; () banked
  2995  004818  6F8F               	movwf	_timer_value& (0+255),b
  2996                           
  2997                           ;fs_menu_controller.c: 331:         timer_value.minute = 0;
  2998  00481A  0E00               	movlw	0
  2999  00481C  6F90               	movwf	(_timer_value+1)& (0+255),b
  3000  00481E                     l6146:
  3001                           
  3002                           ; BSR set to: 1
  3003                           ;fs_menu_controller.c: 334:     if ( timer_value.menu_login_delay == 100)
  3004  00481E  0E64               	movlw	100
  3005  004820  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3006  004822  A4D8               	btfss	status,2,c
  3007  004824  EF16  F024         	goto	u7311
  3008  004828  EF18  F024         	goto	u7310
  3009  00482C                     u7311:
  3010  00482C  EF1F  F024         	goto	l6150
  3011  004830                     u7310:
  3012  004830                     
  3013                           ; BSR set to: 1
  3014                           ;fs_menu_controller.c: 335:     {;fs_menu_controller.c: 336:         button_bounce_contr
      +                          oller.menu = 0;
  3015  004830  0E00               	movlw	0
  3016  004832  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3017                           
  3018                           ;fs_menu_controller.c: 337:         timer_value.menu_login_delay = 0;
  3019  004834  0E00               	movlw	0
  3020  004836  6F93               	movwf	(_timer_value+4)& (0+255),b
  3021                           
  3022                           ;fs_menu_controller.c: 338:         menu_selected = DRIVER_TIME_SETTING;
  3023  004838  0E01               	movlw	1
  3024  00483A  0100               	movlb	0	; () banked
  3025  00483C  6FFB               	movwf	_menu_selected& (0+255),b
  3026  00483E                     l6150:
  3027                           
  3028                           ;fs_menu_controller.c: 340: stopMotor();
  3029  00483E  EC71  F02A         	call	_stopMotor	;wreg free
  3030  004842  0012               	return		;funcret
  3031  004844                     __end_of_stopMenu:
  3032                           	callstack 0
  3033                           
  3034 ;; *************** function _startMenu *****************
  3035 ;; Defined at:
  3036 ;;		line 404 in file "fs_menu_controller.c"
  3037 ;; Parameters:    Size  Location     Type
  3038 ;;		None
  3039 ;; Auto vars:     Size  Location     Type
  3040 ;;		None
  3041 ;; Return value:  Size  Location     Type
  3042 ;;                  1    wreg      void 
  3043 ;; Registers used:
  3044 ;;		wreg, status,2
  3045 ;; Tracked objects:
  3046 ;;		On entry : 0/0
  3047 ;;		On exit  : 0/0
  3048 ;;		Unchanged: 0/0
  3049 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3050 ;;      Params:         0       0       0       0       0       0       0
  3051 ;;      Locals:         0       0       0       0       0       0       0
  3052 ;;      Temps:          0       0       0       0       0       0       0
  3053 ;;      Totals:         0       0       0       0       0       0       0
  3054 ;;Total ram usage:        0 bytes
  3055 ;; Hardware stack levels used:    1
  3056 ;; Hardware stack levels required when called:    1
  3057 ;; This function calls:
  3058 ;;		Nothing
  3059 ;; This function is called by:
  3060 ;;		_stateMachine
  3061 ;; This function uses a non-reentrant model
  3062 ;;
  3063                           
  3064                           	psect	text11
  3065  00577E                     __ptext11:
  3066                           	callstack 0
  3067  00577E                     _startMenu:
  3068                           	callstack 27
  3069  00577E                     
  3070                           ;fs_menu_controller.c: 406:     timer_value.remainingMinute = menu_value.driver_time;
  3071  00577E  C0F3  F192         	movff	_menu_value,_timer_value+3
  3072  005782                     
  3073                           ;fs_menu_controller.c: 407:     timer_value.remainingSecond = 0;
  3074  005782  0E00               	movlw	0
  3075  005784  0101               	movlb	1	; () banked
  3076  005786  6F91               	movwf	(_timer_value+2)& (0+255),b
  3077                           
  3078                           ;fs_menu_controller.c: 408:     startIsClick = 1;
  3079  005788  0E01               	movlw	1
  3080  00578A  0100               	movlb	0	; () banked
  3081  00578C  6FFE               	movwf	_startIsClick& (0+255),b
  3082                           
  3083                           ;fs_menu_controller.c: 409:     stopIsClick = 0;
  3084  00578E  0E00               	movlw	0
  3085  005790  6FFD               	movwf	_stopIsClick& (0+255),b
  3086                           
  3087                           ;fs_menu_controller.c: 410:     menu_selected = MAIN_MENU;
  3088  005792  0E00               	movlw	0
  3089  005794  6FFB               	movwf	_menu_selected& (0+255),b
  3090  005796                     
  3091                           ; BSR set to: 0
  3092  005796  0012               	return		;funcret
  3093  005798                     __end_of_startMenu:
  3094                           	callstack 0
  3095                           
  3096 ;; *************** function _speedLimitSettingMenu *****************
  3097 ;; Defined at:
  3098 ;;		line 492 in file "fs_menu_controller.c"
  3099 ;; Parameters:    Size  Location     Type
  3100 ;;		None
  3101 ;; Auto vars:     Size  Location     Type
  3102 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3103 ;; Return value:  Size  Location     Type
  3104 ;;                  1    wreg      void 
  3105 ;; Registers used:
  3106 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3107 ;; Tracked objects:
  3108 ;;		On entry : 0/0
  3109 ;;		On exit  : 0/0
  3110 ;;		Unchanged: 0/0
  3111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3112 ;;      Params:         0       0       0       0       0       0       0
  3113 ;;      Locals:         0      16       0       0       0       0       0
  3114 ;;      Temps:          0       0       0       0       0       0       0
  3115 ;;      Totals:         0      16       0       0       0       0       0
  3116 ;;Total ram usage:       16 bytes
  3117 ;; Hardware stack levels used:    1
  3118 ;; Hardware stack levels required when called:    9
  3119 ;; This function calls:
  3120 ;;		_Lcd_Set_Cursor
  3121 ;;		_Lcd_Write_String
  3122 ;;		_eepromWrite
  3123 ;;		_sprintf
  3124 ;;		_stopMotor
  3125 ;; This function is called by:
  3126 ;;		_stateMachine
  3127 ;; This function uses a non-reentrant model
  3128 ;;
  3129                           
  3130                           	psect	text12
  3131  0041B6                     __ptext12:
  3132                           	callstack 0
  3133  0041B6                     _speedLimitSettingMenu:
  3134                           	callstack 19
  3135  0041B6                     
  3136                           ;fs_menu_controller.c: 494:     char textCursor2[16] = {0};
  3137  0041B6  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  3138  0041BA  0E0F               	movlw	15
  3139  0041BC                     u7221:
  3140  0041BC  6ADE               	clrf	postinc2,c
  3141  0041BE  06E8               	decf	wreg,f,c
  3142  0041C0  E2FD               	bc	u7221
  3143  0041C2                     
  3144                           ;fs_menu_controller.c: 495:     stopMotor();
  3145  0041C2  EC71  F02A         	call	_stopMotor	;wreg free
  3146  0041C6                     
  3147                           ;fs_menu_controller.c: 497:     if (menu_flags.menu_input_flag == 1)
  3148  0041C6  0101               	movlb	1	; () banked
  3149  0041C8  0597               	decf	_menu_flags& (0+255),w,b
  3150  0041CA  A4D8               	btfss	status,2,c
  3151  0041CC  EFEA  F020         	goto	u7231
  3152  0041D0  EFEC  F020         	goto	u7230
  3153  0041D4                     u7231:
  3154  0041D4  EFF1  F020         	goto	l6086
  3155  0041D8                     u7230:
  3156  0041D8                     
  3157                           ; BSR set to: 1
  3158                           ;fs_menu_controller.c: 498:     {;fs_menu_controller.c: 499:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3159  0041D8  0E00               	movlw	0
  3160  0041DA  6F97               	movwf	_menu_flags& (0+255),b
  3161                           
  3162                           ;fs_menu_controller.c: 500:         menu_selected = DRIVER_TIME_SETTING;
  3163  0041DC  0E01               	movlw	1
  3164  0041DE  0100               	movlb	0	; () banked
  3165  0041E0  6FFB               	movwf	_menu_selected& (0+255),b
  3166  0041E2                     l6086:
  3167                           
  3168                           ;fs_menu_controller.c: 503:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  3169  0041E2  0101               	movlb	1	; () banked
  3170  0041E4  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3171  0041E6  A4D8               	btfss	status,2,c
  3172  0041E8  EFF8  F020         	goto	u7241
  3173  0041EC  EFFA  F020         	goto	u7240
  3174  0041F0                     u7241:
  3175  0041F0  EF0D  F021         	goto	l6096
  3176  0041F4                     u7240:
  3177  0041F4                     
  3178                           ; BSR set to: 1
  3179  0041F4  0E05               	movlw	5
  3180  0041F6  0100               	movlb	0	; () banked
  3181  0041F8  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  3182  0041FA  EF01  F021         	goto	u7251
  3183  0041FE  EF03  F021         	goto	u7250
  3184  004202                     u7251:
  3185  004202  EF0D  F021         	goto	l6096
  3186  004206                     u7250:
  3187  004206                     
  3188                           ; BSR set to: 0
  3189                           ;fs_menu_controller.c: 504:     {;fs_menu_controller.c: 505:         menu_flags.menu_inc
      +                          rease_flag = 0;
  3190  004206  0E00               	movlw	0
  3191  004208  0101               	movlb	1	; () banked
  3192  00420A  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3193  00420C                     
  3194                           ; BSR set to: 1
  3195                           ;fs_menu_controller.c: 506:         menu_value.speed_limit += 1;
  3196  00420C  0100               	movlb	0	; () banked
  3197  00420E  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  3198  004210                     
  3199                           ; BSR set to: 0
  3200                           ;fs_menu_controller.c: 507:         eepromWrite(0x02,menu_value.speed_limit);
  3201  004210  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3202  004214  0E02               	movlw	2
  3203  004216  EC4F  F02B         	call	_eepromWrite
  3204  00421A                     l6096:
  3205                           
  3206                           ;fs_menu_controller.c: 510:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  3207  00421A  0101               	movlb	1	; () banked
  3208  00421C  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3209  00421E  A4D8               	btfss	status,2,c
  3210  004220  EF14  F021         	goto	u7261
  3211  004224  EF16  F021         	goto	u7260
  3212  004228                     u7261:
  3213  004228  EF29  F021         	goto	l6106
  3214  00422C                     u7260:
  3215  00422C                     
  3216                           ; BSR set to: 1
  3217  00422C  0E01               	movlw	1
  3218  00422E  0100               	movlb	0	; () banked
  3219  004230  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  3220  004232  EF1D  F021         	goto	u7271
  3221  004236  EF1F  F021         	goto	u7270
  3222  00423A                     u7271:
  3223  00423A  EF29  F021         	goto	l6106
  3224  00423E                     u7270:
  3225  00423E                     
  3226                           ; BSR set to: 0
  3227                           ;fs_menu_controller.c: 511:     {;fs_menu_controller.c: 512:          menu_flags.menu_de
      +                          crease_flag = 0;
  3228  00423E  0E00               	movlw	0
  3229  004240  0101               	movlb	1	; () banked
  3230  004242  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3231  004244                     
  3232                           ; BSR set to: 1
  3233                           ;fs_menu_controller.c: 513:          menu_value.speed_limit -= 1;
  3234  004244  0100               	movlb	0	; () banked
  3235  004246  07F5               	decf	(_menu_value+2)& (0+255),f,b
  3236  004248                     
  3237                           ; BSR set to: 0
  3238                           ;fs_menu_controller.c: 514:          eepromWrite(0x02,menu_value.speed_limit);
  3239  004248  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3240  00424C  0E02               	movlw	2
  3241  00424E  EC4F  F02B         	call	_eepromWrite
  3242  004252                     l6106:
  3243                           
  3244                           ;fs_menu_controller.c: 516:     Lcd_Set_Cursor(1,1);
  3245  004252  0E01               	movlw	1
  3246  004254  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3247  004256  0E01               	movlw	1
  3248  004258  EC4D  F028         	call	_Lcd_Set_Cursor
  3249  00425C                     
  3250                           ;fs_menu_controller.c: 517:     Lcd_Write_String("HIZ LiMiTi      ");
  3251  00425C  0E1A               	movlw	low STR_13
  3252  00425E  6E05               	movwf	Lcd_Write_String@a^0,c
  3253  004260  0E7F               	movlw	high STR_13
  3254  004262  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3255  004264  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3256  004268                     
  3257                           ;fs_menu_controller.c: 518:     Lcd_Set_Cursor(2,1);
  3258  004268  0E01               	movlw	1
  3259  00426A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3260  00426C  0E02               	movlw	2
  3261  00426E  EC4D  F028         	call	_Lcd_Set_Cursor
  3262  004272                     
  3263                           ;fs_menu_controller.c: 519:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  3264  004272  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3265  004274  0100               	movlb	0	; () banked
  3266  004276  6FCF               	movwf	sprintf@s& (0+255),b
  3267  004278  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3268  00427A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3269  00427C  0EF7               	movlw	low STR_14
  3270  00427E  6FD1               	movwf	sprintf@fmt& (0+255),b
  3271  004280  0E7E               	movlw	high STR_14
  3272  004282  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3273  004284  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  3274  004288  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3275  00428A  EC35  F029         	call	_sprintf	;wreg free
  3276  00428E                     
  3277                           ;fs_menu_controller.c: 520:     Lcd_Write_String(textCursor2);
  3278  00428E  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3279  004290  6E05               	movwf	Lcd_Write_String@a^0,c
  3280  004292  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3281  004294  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3282  004296  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3283  00429A                     
  3284                           ;fs_menu_controller.c: 522:     if(timer_value.menu_login_delay == 100)
  3285  00429A  0E64               	movlw	100
  3286  00429C  0101               	movlb	1	; () banked
  3287  00429E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3288  0042A0  A4D8               	btfss	status,2,c
  3289  0042A2  EF55  F021         	goto	u7281
  3290  0042A6  EF57  F021         	goto	u7280
  3291  0042AA                     u7281:
  3292  0042AA  EF5E  F021         	goto	l494
  3293  0042AE                     u7280:
  3294  0042AE                     
  3295                           ; BSR set to: 1
  3296                           ;fs_menu_controller.c: 523:     {;fs_menu_controller.c: 524:         button_bounce_contr
      +                          oller.menu = 0;
  3297  0042AE  0E00               	movlw	0
  3298  0042B0  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3299                           
  3300                           ;fs_menu_controller.c: 525:         timer_value.menu_login_delay = 0;
  3301  0042B2  0E00               	movlw	0
  3302  0042B4  6F93               	movwf	(_timer_value+4)& (0+255),b
  3303                           
  3304                           ;fs_menu_controller.c: 526:         menu_selected = PAUSE_MENU;
  3305  0042B6  0E06               	movlw	6
  3306  0042B8  0100               	movlb	0	; () banked
  3307  0042BA  6FFB               	movwf	_menu_selected& (0+255),b
  3308  0042BC                     l494:
  3309  0042BC  0012               	return		;funcret
  3310  0042BE                     __end_of_speedLimitSettingMenu:
  3311                           	callstack 0
  3312                           
  3313 ;; *************** function _secretMenu *****************
  3314 ;; Defined at:
  3315 ;;		line 419 in file "fs_menu_controller.c"
  3316 ;; Parameters:    Size  Location     Type
  3317 ;;		None
  3318 ;; Auto vars:     Size  Location     Type
  3319 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3320 ;; Return value:  Size  Location     Type
  3321 ;;                  1    wreg      void 
  3322 ;; Registers used:
  3323 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3324 ;; Tracked objects:
  3325 ;;		On entry : 0/0
  3326 ;;		On exit  : 0/0
  3327 ;;		Unchanged: 0/0
  3328 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3329 ;;      Params:         0       0       0       0       0       0       0
  3330 ;;      Locals:         0      16       0       0       0       0       0
  3331 ;;      Temps:          0       0       0       0       0       0       0
  3332 ;;      Totals:         0      16       0       0       0       0       0
  3333 ;;Total ram usage:       16 bytes
  3334 ;; Hardware stack levels used:    1
  3335 ;; Hardware stack levels required when called:    9
  3336 ;; This function calls:
  3337 ;;		_Lcd_Set_Cursor
  3338 ;;		_Lcd_Write_String
  3339 ;;		___fladd
  3340 ;;		___flge
  3341 ;;		___flsub
  3342 ;;		_sprintf
  3343 ;;		_stopMotor
  3344 ;; This function is called by:
  3345 ;;		_stateMachine
  3346 ;; This function uses a non-reentrant model
  3347 ;;
  3348                           
  3349                           	psect	text13
  3350  002CE0                     __ptext13:
  3351                           	callstack 0
  3352  002CE0                     _secretMenu:
  3353                           	callstack 19
  3354  002CE0                     
  3355                           ;fs_menu_controller.c: 421:     char textCursor2[16] = {0};
  3356  002CE0  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  3357  002CE4  0E0F               	movlw	15
  3358  002CE6                     u7411:
  3359  002CE6  6ADE               	clrf	postinc2,c
  3360  002CE8  06E8               	decf	wreg,f,c
  3361  002CEA  E2FD               	bc	u7411
  3362  002CEC                     
  3363                           ;fs_menu_controller.c: 423:     stopMotor();
  3364  002CEC  EC71  F02A         	call	_stopMotor	;wreg free
  3365  002CF0                     
  3366                           ;fs_menu_controller.c: 425:     if (menu_flags.menu_input_flag == 1)
  3367  002CF0  0101               	movlb	1	; () banked
  3368  002CF2  0597               	decf	_menu_flags& (0+255),w,b
  3369  002CF4  A4D8               	btfss	status,2,c
  3370  002CF6  EF7F  F016         	goto	u7421
  3371  002CFA  EF81  F016         	goto	u7420
  3372  002CFE                     u7421:
  3373  002CFE  EF8F  F016         	goto	l6210
  3374  002D02                     u7420:
  3375  002D02                     
  3376                           ; BSR set to: 1
  3377                           ;fs_menu_controller.c: 426:     {;fs_menu_controller.c: 427:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3378  002D02  0E00               	movlw	0
  3379  002D04  6F97               	movwf	_menu_flags& (0+255),b
  3380  002D06                     
  3381                           ; BSR set to: 1
  3382                           ;fs_menu_controller.c: 428:         secretMenuCounter++;
  3383  002D06  0100               	movlb	0	; () banked
  3384  002D08  2BFC               	incf	_secretMenuCounter& (0+255),f,b
  3385  002D0A                     
  3386                           ; BSR set to: 0
  3387                           ;fs_menu_controller.c: 430:         if (secretMenuCounter >2)
  3388  002D0A  0E02               	movlw	2
  3389  002D0C  65FC               	cpfsgt	_secretMenuCounter& (0+255),b
  3390  002D0E  EF8B  F016         	goto	u7431
  3391  002D12  EF8D  F016         	goto	u7430
  3392  002D16                     u7431:
  3393  002D16  EF8F  F016         	goto	l6210
  3394  002D1A                     u7430:
  3395  002D1A                     
  3396                           ; BSR set to: 0
  3397                           ;fs_menu_controller.c: 431:         {;fs_menu_controller.c: 432:             secretMenuC
      +                          ounter = 1;
  3398  002D1A  0E01               	movlw	1
  3399  002D1C  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3400  002D1E                     l6210:
  3401                           
  3402                           ;fs_menu_controller.c: 436:     if (secretMenuCounter == 1)
  3403  002D1E  0100               	movlb	0	; () banked
  3404  002D20  05FC               	decf	_secretMenuCounter& (0+255),w,b
  3405  002D22  A4D8               	btfss	status,2,c
  3406  002D24  EF96  F016         	goto	u7441
  3407  002D28  EF98  F016         	goto	u7440
  3408  002D2C                     u7441:
  3409  002D2C  EF2C  F017         	goto	l6238
  3410  002D30                     u7440:
  3411  002D30                     
  3412                           ; BSR set to: 0
  3413                           ;fs_menu_controller.c: 437:     {;fs_menu_controller.c: 438:         Lcd_Set_Cursor(1,1)
      +                          ;
  3414  002D30  0E01               	movlw	1
  3415  002D32  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3416  002D34  0E01               	movlw	1
  3417  002D36  EC4D  F028         	call	_Lcd_Set_Cursor
  3418  002D3A                     
  3419                           ;fs_menu_controller.c: 439:         Lcd_Write_String("PID PARAM       ");
  3420  002D3A  0E09               	movlw	low STR_9
  3421  002D3C  6E05               	movwf	Lcd_Write_String@a^0,c
  3422  002D3E  0E7F               	movlw	high STR_9
  3423  002D40  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3424  002D42  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3425  002D46                     
  3426                           ;fs_menu_controller.c: 440:         Lcd_Set_Cursor(2,1);
  3427  002D46  0E01               	movlw	1
  3428  002D48  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3429  002D4A  0E02               	movlw	2
  3430  002D4C  EC4D  F028         	call	_Lcd_Set_Cursor
  3431  002D50                     
  3432                           ;fs_menu_controller.c: 441:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3433  002D50  0EE1               	movlw	low secretMenu@textCursor2
  3434  002D52  0100               	movlb	0	; () banked
  3435  002D54  6FCF               	movwf	sprintf@s& (0+255),b
  3436  002D56  0E00               	movlw	high secretMenu@textCursor2
  3437  002D58  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3438  002D5A  0ED0               	movlw	low STR_10
  3439  002D5C  6FD1               	movwf	sprintf@fmt& (0+255),b
  3440  002D5E  0E7F               	movlw	high STR_10
  3441  002D60  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3442  002D62  C1CF  F0D3         	movff	_KP@fs_speed_controller$F1838,?_sprintf+4
  3443  002D66  C1D0  F0D4         	movff	_KP@fs_speed_controller$F1838+1,?_sprintf+5
  3444  002D6A  C1D1  F0D5         	movff	_KP@fs_speed_controller$F1838+2,?_sprintf+6
  3445  002D6E  C1D2  F0D6         	movff	_KP@fs_speed_controller$F1838+3,?_sprintf+7
  3446  002D72  EC35  F029         	call	_sprintf	;wreg free
  3447  002D76                     
  3448                           ;fs_menu_controller.c: 442:         Lcd_Write_String(textCursor2);
  3449  002D76  0EE1               	movlw	low secretMenu@textCursor2
  3450  002D78  6E05               	movwf	Lcd_Write_String@a^0,c
  3451  002D7A  0E00               	movlw	high secretMenu@textCursor2
  3452  002D7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3453  002D7E  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3454  002D82                     
  3455                           ;fs_menu_controller.c: 444:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  3456  002D82  0101               	movlb	1	; () banked
  3457  002D84  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3458  002D86  A4D8               	btfss	status,2,c
  3459  002D88  EFC8  F016         	goto	u7451
  3460  002D8C  EFCA  F016         	goto	u7450
  3461  002D90                     u7451:
  3462  002D90  EF00  F017         	goto	l6230
  3463  002D94                     u7450:
  3464  002D94                     
  3465                           ; BSR set to: 1
  3466  002D94  C1CF  F035         	movff	_KP@fs_speed_controller$F1838,___flge@ff1
  3467  002D98  C1D0  F036         	movff	_KP@fs_speed_controller$F1838+1,___flge@ff1+1
  3468  002D9C  C1D1  F037         	movff	_KP@fs_speed_controller$F1838+2,___flge@ff1+2
  3469  002DA0  C1D2  F038         	movff	_KP@fs_speed_controller$F1838+3,___flge@ff1+3
  3470  002DA4  0E00               	movlw	0
  3471  002DA6  6E39               	movwf	___flge@ff2^0,c
  3472  002DA8  0E00               	movlw	0
  3473  002DAA  6E3A               	movwf	(___flge@ff2+1)^0,c
  3474  002DAC  0E20               	movlw	32
  3475  002DAE  6E3B               	movwf	(___flge@ff2+2)^0,c
  3476  002DB0  0E40               	movlw	64
  3477  002DB2  6E3C               	movwf	(___flge@ff2+3)^0,c
  3478  002DB4  ECE2  F021         	call	___flge	;wreg free
  3479  002DB8  B0D8               	btfsc	status,0,c
  3480  002DBA  EFE1  F016         	goto	u7461
  3481  002DBE  EFE3  F016         	goto	u7460
  3482  002DC2                     u7461:
  3483  002DC2  EF00  F017         	goto	l6230
  3484  002DC6                     u7460:
  3485  002DC6                     
  3486                           ;fs_menu_controller.c: 445:         {;fs_menu_controller.c: 446:             menu_flags.
      +                          menu_increase_flag = 0;
  3487  002DC6  0E00               	movlw	0
  3488  002DC8  0101               	movlb	1	; () banked
  3489  002DCA  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3490  002DCC                     
  3491                           ; BSR set to: 1
  3492                           ;fs_menu_controller.c: 447:             KP += 0.1;
  3493  002DCC  C1CF  F035         	movff	_KP@fs_speed_controller$F1838,___fladd@b
  3494  002DD0  C1D0  F036         	movff	_KP@fs_speed_controller$F1838+1,___fladd@b+1
  3495  002DD4  C1D1  F037         	movff	_KP@fs_speed_controller$F1838+2,___fladd@b+2
  3496  002DD8  C1D2  F038         	movff	_KP@fs_speed_controller$F1838+3,___fladd@b+3
  3497  002DDC  0ECD               	movlw	205
  3498  002DDE  6E39               	movwf	___fladd@a^0,c
  3499  002DE0  0ECC               	movlw	204
  3500  002DE2  6E3A               	movwf	(___fladd@a+1)^0,c
  3501  002DE4  0ECC               	movlw	204
  3502  002DE6  6E3B               	movwf	(___fladd@a+2)^0,c
  3503  002DE8  0E3D               	movlw	61
  3504  002DEA  6E3C               	movwf	(___fladd@a+3)^0,c
  3505  002DEC  EC49  F00D         	call	___fladd	;wreg free
  3506  002DF0  C035  F1CF         	movff	?___fladd,_KP@fs_speed_controller$F1838
  3507  002DF4  C036  F1D0         	movff	?___fladd+1,_KP@fs_speed_controller$F1838+1
  3508  002DF8  C037  F1D1         	movff	?___fladd+2,_KP@fs_speed_controller$F1838+2
  3509  002DFC  C038  F1D2         	movff	?___fladd+3,_KP@fs_speed_controller$F1838+3
  3510  002E00                     l6230:
  3511                           
  3512                           ;fs_menu_controller.c: 450:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  3513  002E00  0101               	movlb	1	; () banked
  3514  002E02  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3515  002E04  A4D8               	btfss	status,2,c
  3516  002E06  EF07  F017         	goto	u7471
  3517  002E0A  EF09  F017         	goto	u7470
  3518  002E0E                     u7471:
  3519  002E0E  EF2C  F017         	goto	l6238
  3520  002E12                     u7470:
  3521  002E12                     
  3522                           ; BSR set to: 1
  3523  002E12  BFD2               	btfsc	(_KP@fs_speed_controller$F1838+3)& (0+255),7,b
  3524  002E14  EF0E  F017         	goto	u7481
  3525  002E18  EF10  F017         	goto	u7480
  3526  002E1C                     u7481:
  3527  002E1C  EF2C  F017         	goto	l6238
  3528  002E20                     u7480:
  3529  002E20                     
  3530                           ; BSR set to: 1
  3531                           ;fs_menu_controller.c: 451:         {;fs_menu_controller.c: 452:             menu_flags.
      +                          menu_decrease_flag = 0;
  3532  002E20  0E00               	movlw	0
  3533  002E22  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3534  002E24                     
  3535                           ; BSR set to: 1
  3536                           ;fs_menu_controller.c: 453:              KP -= 0.1;
  3537  002E24  C1CF  F045         	movff	_KP@fs_speed_controller$F1838,___flsub@b
  3538  002E28  C1D0  F046         	movff	_KP@fs_speed_controller$F1838+1,___flsub@b+1
  3539  002E2C  C1D1  F047         	movff	_KP@fs_speed_controller$F1838+2,___flsub@b+2
  3540  002E30  C1D2  F048         	movff	_KP@fs_speed_controller$F1838+3,___flsub@b+3
  3541  002E34  0ECD               	movlw	205
  3542  002E36  6E49               	movwf	___flsub@a^0,c
  3543  002E38  0ECC               	movlw	204
  3544  002E3A  6E4A               	movwf	(___flsub@a+1)^0,c
  3545  002E3C  0ECC               	movlw	204
  3546  002E3E  6E4B               	movwf	(___flsub@a+2)^0,c
  3547  002E40  0E3D               	movlw	61
  3548  002E42  6E4C               	movwf	(___flsub@a+3)^0,c
  3549  002E44  ECAC  F029         	call	___flsub	;wreg free
  3550  002E48  C045  F1CF         	movff	?___flsub,_KP@fs_speed_controller$F1838
  3551  002E4C  C046  F1D0         	movff	?___flsub+1,_KP@fs_speed_controller$F1838+1
  3552  002E50  C047  F1D1         	movff	?___flsub+2,_KP@fs_speed_controller$F1838+2
  3553  002E54  C048  F1D2         	movff	?___flsub+3,_KP@fs_speed_controller$F1838+3
  3554  002E58                     l6238:
  3555                           
  3556                           ;fs_menu_controller.c: 457:     if (secretMenuCounter == 2)
  3557  002E58  0E02               	movlw	2
  3558  002E5A  0100               	movlb	0	; () banked
  3559  002E5C  19FC               	xorwf	_secretMenuCounter& (0+255),w,b
  3560  002E5E  A4D8               	btfss	status,2,c
  3561  002E60  EF34  F017         	goto	u7491
  3562  002E64  EF36  F017         	goto	u7490
  3563  002E68                     u7491:
  3564  002E68  EFCA  F017         	goto	l6266
  3565  002E6C                     u7490:
  3566  002E6C                     
  3567                           ; BSR set to: 0
  3568                           ;fs_menu_controller.c: 458:     {;fs_menu_controller.c: 459:         Lcd_Set_Cursor(1,1)
      +                          ;
  3569  002E6C  0E01               	movlw	1
  3570  002E6E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3571  002E70  0E01               	movlw	1
  3572  002E72  EC4D  F028         	call	_Lcd_Set_Cursor
  3573  002E76                     
  3574                           ;fs_menu_controller.c: 460:         Lcd_Write_String("PID PARAM       ");
  3575  002E76  0E09               	movlw	low STR_9
  3576  002E78  6E05               	movwf	Lcd_Write_String@a^0,c
  3577  002E7A  0E7F               	movlw	high STR_9
  3578  002E7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3579  002E7E  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3580  002E82                     
  3581                           ;fs_menu_controller.c: 461:         Lcd_Set_Cursor(2,1);
  3582  002E82  0E01               	movlw	1
  3583  002E84  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3584  002E86  0E02               	movlw	2
  3585  002E88  EC4D  F028         	call	_Lcd_Set_Cursor
  3586  002E8C                     
  3587                           ;fs_menu_controller.c: 462:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3588  002E8C  0EE1               	movlw	low secretMenu@textCursor2
  3589  002E8E  0100               	movlb	0	; () banked
  3590  002E90  6FCF               	movwf	sprintf@s& (0+255),b
  3591  002E92  0E00               	movlw	high secretMenu@textCursor2
  3592  002E94  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3593  002E96  0EDE               	movlw	low STR_12
  3594  002E98  6FD1               	movwf	sprintf@fmt& (0+255),b
  3595  002E9A  0E7F               	movlw	high STR_12
  3596  002E9C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3597  002E9E  C1CB  F0D3         	movff	_KD@fs_speed_controller$F1839,?_sprintf+4
  3598  002EA2  C1CC  F0D4         	movff	_KD@fs_speed_controller$F1839+1,?_sprintf+5
  3599  002EA6  C1CD  F0D5         	movff	_KD@fs_speed_controller$F1839+2,?_sprintf+6
  3600  002EAA  C1CE  F0D6         	movff	_KD@fs_speed_controller$F1839+3,?_sprintf+7
  3601  002EAE  EC35  F029         	call	_sprintf	;wreg free
  3602  002EB2                     
  3603                           ;fs_menu_controller.c: 463:         Lcd_Write_String(textCursor2);
  3604  002EB2  0EE1               	movlw	low secretMenu@textCursor2
  3605  002EB4  6E05               	movwf	Lcd_Write_String@a^0,c
  3606  002EB6  0E00               	movlw	high secretMenu@textCursor2
  3607  002EB8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3608  002EBA  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3609  002EBE                     
  3610                           ;fs_menu_controller.c: 465:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3611  002EBE  0101               	movlb	1	; () banked
  3612  002EC0  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3613  002EC2  A4D8               	btfss	status,2,c
  3614  002EC4  EF66  F017         	goto	u7501
  3615  002EC8  EF68  F017         	goto	u7500
  3616  002ECC                     u7501:
  3617  002ECC  EF9E  F017         	goto	l6258
  3618  002ED0                     u7500:
  3619  002ED0                     
  3620                           ; BSR set to: 1
  3621  002ED0  C1CB  F035         	movff	_KD@fs_speed_controller$F1839,___flge@ff1
  3622  002ED4  C1CC  F036         	movff	_KD@fs_speed_controller$F1839+1,___flge@ff1+1
  3623  002ED8  C1CD  F037         	movff	_KD@fs_speed_controller$F1839+2,___flge@ff1+2
  3624  002EDC  C1CE  F038         	movff	_KD@fs_speed_controller$F1839+3,___flge@ff1+3
  3625  002EE0  0E00               	movlw	0
  3626  002EE2  6E39               	movwf	___flge@ff2^0,c
  3627  002EE4  0E00               	movlw	0
  3628  002EE6  6E3A               	movwf	(___flge@ff2+1)^0,c
  3629  002EE8  0E20               	movlw	32
  3630  002EEA  6E3B               	movwf	(___flge@ff2+2)^0,c
  3631  002EEC  0E40               	movlw	64
  3632  002EEE  6E3C               	movwf	(___flge@ff2+3)^0,c
  3633  002EF0  ECE2  F021         	call	___flge	;wreg free
  3634  002EF4  B0D8               	btfsc	status,0,c
  3635  002EF6  EF7F  F017         	goto	u7511
  3636  002EFA  EF81  F017         	goto	u7510
  3637  002EFE                     u7511:
  3638  002EFE  EF9E  F017         	goto	l6258
  3639  002F02                     u7510:
  3640  002F02                     
  3641                           ;fs_menu_controller.c: 466:         {;fs_menu_controller.c: 467:             menu_flags.
      +                          menu_increase_flag = 0;
  3642  002F02  0E00               	movlw	0
  3643  002F04  0101               	movlb	1	; () banked
  3644  002F06  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3645  002F08                     
  3646                           ; BSR set to: 1
  3647                           ;fs_menu_controller.c: 468:             KD += 0.1;
  3648  002F08  C1CB  F035         	movff	_KD@fs_speed_controller$F1839,___fladd@b
  3649  002F0C  C1CC  F036         	movff	_KD@fs_speed_controller$F1839+1,___fladd@b+1
  3650  002F10  C1CD  F037         	movff	_KD@fs_speed_controller$F1839+2,___fladd@b+2
  3651  002F14  C1CE  F038         	movff	_KD@fs_speed_controller$F1839+3,___fladd@b+3
  3652  002F18  0ECD               	movlw	205
  3653  002F1A  6E39               	movwf	___fladd@a^0,c
  3654  002F1C  0ECC               	movlw	204
  3655  002F1E  6E3A               	movwf	(___fladd@a+1)^0,c
  3656  002F20  0ECC               	movlw	204
  3657  002F22  6E3B               	movwf	(___fladd@a+2)^0,c
  3658  002F24  0E3D               	movlw	61
  3659  002F26  6E3C               	movwf	(___fladd@a+3)^0,c
  3660  002F28  EC49  F00D         	call	___fladd	;wreg free
  3661  002F2C  C035  F1CB         	movff	?___fladd,_KD@fs_speed_controller$F1839
  3662  002F30  C036  F1CC         	movff	?___fladd+1,_KD@fs_speed_controller$F1839+1
  3663  002F34  C037  F1CD         	movff	?___fladd+2,_KD@fs_speed_controller$F1839+2
  3664  002F38  C038  F1CE         	movff	?___fladd+3,_KD@fs_speed_controller$F1839+3
  3665  002F3C                     l6258:
  3666                           
  3667                           ;fs_menu_controller.c: 471:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3668  002F3C  0101               	movlb	1	; () banked
  3669  002F3E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3670  002F40  A4D8               	btfss	status,2,c
  3671  002F42  EFA5  F017         	goto	u7521
  3672  002F46  EFA7  F017         	goto	u7520
  3673  002F4A                     u7521:
  3674  002F4A  EFCA  F017         	goto	l6266
  3675  002F4E                     u7520:
  3676  002F4E                     
  3677                           ; BSR set to: 1
  3678  002F4E  BFCE               	btfsc	(_KD@fs_speed_controller$F1839+3)& (0+255),7,b
  3679  002F50  EFAC  F017         	goto	u7531
  3680  002F54  EFAE  F017         	goto	u7530
  3681  002F58                     u7531:
  3682  002F58  EFCA  F017         	goto	l6266
  3683  002F5C                     u7530:
  3684  002F5C                     
  3685                           ; BSR set to: 1
  3686                           ;fs_menu_controller.c: 472:         {;fs_menu_controller.c: 473:             menu_flags.
      +                          menu_decrease_flag = 0;
  3687  002F5C  0E00               	movlw	0
  3688  002F5E  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3689  002F60                     
  3690                           ; BSR set to: 1
  3691                           ;fs_menu_controller.c: 474:              KD -= 0.1;
  3692  002F60  C1CB  F045         	movff	_KD@fs_speed_controller$F1839,___flsub@b
  3693  002F64  C1CC  F046         	movff	_KD@fs_speed_controller$F1839+1,___flsub@b+1
  3694  002F68  C1CD  F047         	movff	_KD@fs_speed_controller$F1839+2,___flsub@b+2
  3695  002F6C  C1CE  F048         	movff	_KD@fs_speed_controller$F1839+3,___flsub@b+3
  3696  002F70  0ECD               	movlw	205
  3697  002F72  6E49               	movwf	___flsub@a^0,c
  3698  002F74  0ECC               	movlw	204
  3699  002F76  6E4A               	movwf	(___flsub@a+1)^0,c
  3700  002F78  0ECC               	movlw	204
  3701  002F7A  6E4B               	movwf	(___flsub@a+2)^0,c
  3702  002F7C  0E3D               	movlw	61
  3703  002F7E  6E4C               	movwf	(___flsub@a+3)^0,c
  3704  002F80  ECAC  F029         	call	___flsub	;wreg free
  3705  002F84  C045  F1CB         	movff	?___flsub,_KD@fs_speed_controller$F1839
  3706  002F88  C046  F1CC         	movff	?___flsub+1,_KD@fs_speed_controller$F1839+1
  3707  002F8C  C047  F1CD         	movff	?___flsub+2,_KD@fs_speed_controller$F1839+2
  3708  002F90  C048  F1CE         	movff	?___flsub+3,_KD@fs_speed_controller$F1839+3
  3709  002F94                     l6266:
  3710                           
  3711                           ;fs_menu_controller.c: 478:     if ( timer_value.menu_login_delay == 100)
  3712  002F94  0E64               	movlw	100
  3713  002F96  0101               	movlb	1	; () banked
  3714  002F98  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3715  002F9A  A4D8               	btfss	status,2,c
  3716  002F9C  EFD2  F017         	goto	u7541
  3717  002FA0  EFD4  F017         	goto	u7540
  3718  002FA4                     u7541:
  3719  002FA4  EFDB  F017         	goto	l485
  3720  002FA8                     u7540:
  3721  002FA8                     
  3722                           ; BSR set to: 1
  3723                           ;fs_menu_controller.c: 479:     {;fs_menu_controller.c: 480:         button_bounce_contr
      +                          oller.menu = 0;
  3724  002FA8  0E00               	movlw	0
  3725  002FAA  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3726                           
  3727                           ;fs_menu_controller.c: 481:         timer_value.menu_login_delay = 0;
  3728  002FAC  0E00               	movlw	0
  3729  002FAE  6F93               	movwf	(_timer_value+4)& (0+255),b
  3730                           
  3731                           ;fs_menu_controller.c: 482:         menu_selected = PAUSE_MENU;
  3732  002FB0  0E06               	movlw	6
  3733  002FB2  0100               	movlb	0	; () banked
  3734  002FB4  6FFB               	movwf	_menu_selected& (0+255),b
  3735  002FB6                     l485:
  3736  002FB6  0012               	return		;funcret
  3737  002FB8                     __end_of_secretMenu:
  3738                           	callstack 0
  3739                           
  3740 ;; *************** function _pauseMenu *****************
  3741 ;; Defined at:
  3742 ;;		line 350 in file "fs_menu_controller.c"
  3743 ;; Parameters:    Size  Location     Type
  3744 ;;		None
  3745 ;; Auto vars:     Size  Location     Type
  3746 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3747 ;; Return value:  Size  Location     Type
  3748 ;;                  1    wreg      void 
  3749 ;; Registers used:
  3750 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3751 ;; Tracked objects:
  3752 ;;		On entry : 0/0
  3753 ;;		On exit  : 0/0
  3754 ;;		Unchanged: 0/0
  3755 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3756 ;;      Params:         0       0       0       0       0       0       0
  3757 ;;      Locals:         0      16       0       0       0       0       0
  3758 ;;      Temps:          0       0       0       0       0       0       0
  3759 ;;      Totals:         0      16       0       0       0       0       0
  3760 ;;Total ram usage:       16 bytes
  3761 ;; Hardware stack levels used:    1
  3762 ;; Hardware stack levels required when called:    9
  3763 ;; This function calls:
  3764 ;;		_Lcd_Set_Cursor
  3765 ;;		_Lcd_Write_String
  3766 ;;		_sprintf
  3767 ;;		_stopMotor
  3768 ;; This function is called by:
  3769 ;;		_stateMachine
  3770 ;; This function uses a non-reentrant model
  3771 ;;
  3772                           
  3773                           	psect	text14
  3774  003D24                     __ptext14:
  3775                           	callstack 0
  3776  003D24                     _pauseMenu:
  3777                           	callstack 19
  3778  003D24                     
  3779                           ;fs_menu_controller.c: 352:     char textCursor2[16] = {0};
  3780  003D24  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3781  003D28  0E0F               	movlw	15
  3782  003D2A                     u7321:
  3783  003D2A  6ADE               	clrf	postinc2,c
  3784  003D2C  06E8               	decf	wreg,f,c
  3785  003D2E  E2FD               	bc	u7321
  3786  003D30                     
  3787                           ;fs_menu_controller.c: 354:     startIsClick = 0;
  3788  003D30  0E00               	movlw	0
  3789  003D32  0100               	movlb	0	; () banked
  3790  003D34  6FFE               	movwf	_startIsClick& (0+255),b
  3791  003D36                     
  3792                           ; BSR set to: 0
  3793                           ;fs_menu_controller.c: 358:     Lcd_Set_Cursor(1,1);
  3794  003D36  0E01               	movlw	1
  3795  003D38  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3796  003D3A  0E01               	movlw	1
  3797  003D3C  EC4D  F028         	call	_Lcd_Set_Cursor
  3798  003D40                     
  3799                           ;fs_menu_controller.c: 359:     Lcd_Write_String("HAREKET DURDU   ");
  3800  003D40  0E4D               	movlw	low STR_7
  3801  003D42  6E05               	movwf	Lcd_Write_String@a^0,c
  3802  003D44  0E7F               	movlw	high STR_7
  3803  003D46  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3804  003D48  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3805  003D4C                     
  3806                           ;fs_menu_controller.c: 360:     Lcd_Set_Cursor(2,1);
  3807  003D4C  0E01               	movlw	1
  3808  003D4E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3809  003D50  0E02               	movlw	2
  3810  003D52  EC4D  F028         	call	_Lcd_Set_Cursor
  3811  003D56                     
  3812                           ;fs_menu_controller.c: 361:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3813  003D56  0EE1               	movlw	low pauseMenu@textCursor2
  3814  003D58  0100               	movlb	0	; () banked
  3815  003D5A  6FCF               	movwf	sprintf@s& (0+255),b
  3816  003D5C  0E00               	movlw	high pauseMenu@textCursor2
  3817  003D5E  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3818  003D60  0EA1               	movlw	low STR_6
  3819  003D62  6FD1               	movwf	sprintf@fmt& (0+255),b
  3820  003D64  0E7F               	movlw	high STR_6
  3821  003D66  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3822  003D68  0101               	movlb	1	; () banked
  3823  003D6A  5192               	movf	(_timer_value+3)& (0+255),w,b
  3824  003D6C  0100               	movlb	0	; () banked
  3825  003D6E  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3826  003D70  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3827  003D72  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3828  003D74  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3829  003D76  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3830  003D7A  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3831  003D7C  EC35  F029         	call	_sprintf	;wreg free
  3832  003D80                     
  3833                           ;fs_menu_controller.c: 362:     Lcd_Write_String(textCursor2);
  3834  003D80  0EE1               	movlw	low pauseMenu@textCursor2
  3835  003D82  6E05               	movwf	Lcd_Write_String@a^0,c
  3836  003D84  0E00               	movlw	high pauseMenu@textCursor2
  3837  003D86  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3838  003D88  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  3839  003D8C                     
  3840                           ;fs_menu_controller.c: 364:     if (menu_flags.menu_start_flag == 1)
  3841  003D8C  0101               	movlb	1	; () banked
  3842  003D8E  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3843  003D90  A4D8               	btfss	status,2,c
  3844  003D92  EFCD  F01E         	goto	u7331
  3845  003D96  EFCF  F01E         	goto	u7330
  3846  003D9A                     u7331:
  3847  003D9A  EFDA  F01E         	goto	l464
  3848  003D9E                     u7330:
  3849  003D9E                     
  3850                           ; BSR set to: 1
  3851                           ;fs_menu_controller.c: 365:     {;fs_menu_controller.c: 366:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3852  003D9E  0E00               	movlw	0
  3853  003DA0  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3854                           
  3855                           ;fs_menu_controller.c: 367:         menu_selected = MAIN_MENU;
  3856  003DA2  0E00               	movlw	0
  3857  003DA4  0100               	movlb	0	; () banked
  3858  003DA6  6FFB               	movwf	_menu_selected& (0+255),b
  3859                           
  3860                           ;fs_menu_controller.c: 369:         startIsClick = 1;
  3861  003DA8  0E01               	movlw	1
  3862  003DAA  6FFE               	movwf	_startIsClick& (0+255),b
  3863                           
  3864                           ;fs_menu_controller.c: 370:         pauseIsClick = 0;
  3865  003DAC  0E00               	movlw	0
  3866  003DAE  6FFF               	movwf	_pauseIsClick& (0+255),b
  3867                           
  3868                           ;fs_menu_controller.c: 371:         stopIsClick = 0;
  3869  003DB0  0E00               	movlw	0
  3870  003DB2  6FFD               	movwf	_stopIsClick& (0+255),b
  3871  003DB4                     l464:
  3872                           
  3873                           ;fs_menu_controller.c: 374:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3874  003DB4  0100               	movlb	0	; () banked
  3875  003DB6  51FE               	movf	_startIsClick& (0+255),w,b
  3876  003DB8  A4D8               	btfss	status,2,c
  3877  003DBA  EFE1  F01E         	goto	u7341
  3878  003DBE  EFE3  F01E         	goto	u7340
  3879  003DC2                     u7341:
  3880  003DC2  EF05  F01F         	goto	l6184
  3881  003DC6                     u7340:
  3882  003DC6                     
  3883                           ; BSR set to: 0
  3884  003DC6  51FF               	movf	_pauseIsClick& (0+255),w,b
  3885  003DC8  A4D8               	btfss	status,2,c
  3886  003DCA  EFE9  F01E         	goto	u7351
  3887  003DCE  EFEB  F01E         	goto	u7350
  3888  003DD2                     u7351:
  3889  003DD2  EF05  F01F         	goto	l6184
  3890  003DD6                     u7350:
  3891  003DD6                     
  3892                           ; BSR set to: 0
  3893  003DD6  05FD               	decf	_stopIsClick& (0+255),w,b
  3894  003DD8  A4D8               	btfss	status,2,c
  3895  003DDA  EFF1  F01E         	goto	u7361
  3896  003DDE  EFF3  F01E         	goto	u7360
  3897  003DE2                     u7361:
  3898  003DE2  EF05  F01F         	goto	l6184
  3899  003DE6                     u7360:
  3900  003DE6                     
  3901                           ; BSR set to: 0
  3902  003DE6  0E06               	movlw	6
  3903  003DE8  19FB               	xorwf	_menu_selected& (0+255),w,b
  3904  003DEA  A4D8               	btfss	status,2,c
  3905  003DEC  EFFA  F01E         	goto	u7371
  3906  003DF0  EFFC  F01E         	goto	u7370
  3907  003DF4                     u7371:
  3908  003DF4  EF05  F01F         	goto	l6184
  3909  003DF8                     u7370:
  3910  003DF8                     
  3911                           ; BSR set to: 0
  3912                           ;fs_menu_controller.c: 375:     {;fs_menu_controller.c: 376:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3913  003DF8  C0F3  F192         	movff	_menu_value,_timer_value+3
  3914  003DFC                     
  3915                           ; BSR set to: 0
  3916                           ;fs_menu_controller.c: 377:          timer_value.remainingSecond = 0;
  3917  003DFC  0E00               	movlw	0
  3918  003DFE  0101               	movlb	1	; () banked
  3919  003E00  6F91               	movwf	(_timer_value+2)& (0+255),b
  3920                           
  3921                           ;fs_menu_controller.c: 378:          timer_value.second = 0;
  3922  003E02  0E00               	movlw	0
  3923  003E04  6F8F               	movwf	_timer_value& (0+255),b
  3924                           
  3925                           ;fs_menu_controller.c: 379:          timer_value.minute = 0;
  3926  003E06  0E00               	movlw	0
  3927  003E08  6F90               	movwf	(_timer_value+1)& (0+255),b
  3928  003E0A                     l6184:
  3929                           
  3930                           ;fs_menu_controller.c: 382:     if ( timer_value.menu_login_delay == 100)
  3931  003E0A  0E64               	movlw	100
  3932  003E0C  0101               	movlb	1	; () banked
  3933  003E0E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3934  003E10  A4D8               	btfss	status,2,c
  3935  003E12  EF0D  F01F         	goto	u7381
  3936  003E16  EF0F  F01F         	goto	u7380
  3937  003E1A                     u7381:
  3938  003E1A  EF16  F01F         	goto	l6188
  3939  003E1E                     u7380:
  3940  003E1E                     
  3941                           ; BSR set to: 1
  3942                           ;fs_menu_controller.c: 383:     {;fs_menu_controller.c: 384:         button_bounce_contr
      +                          oller.menu = 0;
  3943  003E1E  0E00               	movlw	0
  3944  003E20  6F9D               	movwf	_button_bounce_controller& (0+255),b
  3945                           
  3946                           ;fs_menu_controller.c: 385:         timer_value.menu_login_delay = 0;
  3947  003E22  0E00               	movlw	0
  3948  003E24  6F93               	movwf	(_timer_value+4)& (0+255),b
  3949                           
  3950                           ;fs_menu_controller.c: 386:         menu_selected = DRIVER_TIME_SETTING;
  3951  003E26  0E01               	movlw	1
  3952  003E28  0100               	movlb	0	; () banked
  3953  003E2A  6FFB               	movwf	_menu_selected& (0+255),b
  3954  003E2C                     l6188:
  3955                           
  3956                           ;fs_menu_controller.c: 389:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3957  003E2C  0101               	movlb	1	; () banked
  3958  003E2E  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3959  003E30  A4D8               	btfss	status,2,c
  3960  003E32  EF1D  F01F         	goto	u7391
  3961  003E36  EF1F  F01F         	goto	u7390
  3962  003E3A                     u7391:
  3963  003E3A  EF2C  F01F         	goto	l6194
  3964  003E3E                     u7390:
  3965  003E3E                     
  3966                           ; BSR set to: 1
  3967  003E3E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3968  003E40  A4D8               	btfss	status,2,c
  3969  003E42  EF25  F01F         	goto	u7401
  3970  003E46  EF27  F01F         	goto	u7400
  3971  003E4A                     u7401:
  3972  003E4A  EF2C  F01F         	goto	l6194
  3973  003E4E                     u7400:
  3974  003E4E                     
  3975                           ; BSR set to: 1
  3976                           ;fs_menu_controller.c: 390:     {;fs_menu_controller.c: 391:         menu_selected = SEC
      +                          RET_MENU;
  3977  003E4E  0E08               	movlw	8
  3978  003E50  0100               	movlb	0	; () banked
  3979  003E52  6FFB               	movwf	_menu_selected& (0+255),b
  3980                           
  3981                           ;fs_menu_controller.c: 392:         secretMenuCounter = 1;
  3982  003E54  0E01               	movlw	1
  3983  003E56  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3984  003E58                     l6194:
  3985                           
  3986                           ;fs_menu_controller.c: 394:     stopMotor();
  3987  003E58  EC71  F02A         	call	_stopMotor	;wreg free
  3988  003E5C  0012               	return		;funcret
  3989  003E5E                     __end_of_pauseMenu:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _mainMenu *****************
  3993 ;; Defined at:
  3994 ;;		line 245 in file "fs_menu_controller.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4008 ;;      Params:         0       0       0       0       0       0       0
  4009 ;;      Locals:         0      16       0       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0
  4011 ;;      Totals:         0      16       0       0       0       0       0
  4012 ;;Total ram usage:       16 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    9
  4015 ;; This function calls:
  4016 ;;		_Lcd_Set_Cursor
  4017 ;;		_Lcd_Write_String
  4018 ;;		_sprintf
  4019 ;;		_startMotor
  4020 ;; This function is called by:
  4021 ;;		_stateMachine
  4022 ;; This function uses a non-reentrant model
  4023 ;;
  4024                           
  4025                           	psect	text15
  4026  00370C                     __ptext15:
  4027                           	callstack 0
  4028  00370C                     _mainMenu:
  4029                           	callstack 19
  4030  00370C                     
  4031                           ;fs_menu_controller.c: 247:     char textCursor2[16] = {0};
  4032  00370C  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  4033  003710  0E0F               	movlw	15
  4034  003712                     u6931:
  4035  003712  6ADE               	clrf	postinc2,c
  4036  003714  06E8               	decf	wreg,f,c
  4037  003716  E2FD               	bc	u6931
  4038  003718                     
  4039                           ;fs_menu_controller.c: 249:     Lcd_Set_Cursor(1,1);
  4040  003718  0E01               	movlw	1
  4041  00371A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  4042  00371C  0E01               	movlw	1
  4043  00371E  EC4D  F028         	call	_Lcd_Set_Cursor
  4044  003722                     
  4045                           ;fs_menu_controller.c: 250:     Lcd_Write_String("KALAN ZAMAN     ");
  4046  003722  0E2B               	movlw	low STR_3
  4047  003724  6E05               	movwf	Lcd_Write_String@a^0,c
  4048  003726  0E7F               	movlw	high STR_3
  4049  003728  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  4050  00372A  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  4051  00372E                     
  4052                           ;fs_menu_controller.c: 251:     Lcd_Set_Cursor(2,1);
  4053  00372E  0E01               	movlw	1
  4054  003730  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  4055  003732  0E02               	movlw	2
  4056  003734  EC4D  F028         	call	_Lcd_Set_Cursor
  4057  003738                     
  4058                           ;fs_menu_controller.c: 252:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  4059  003738  0EE1               	movlw	low mainMenu@textCursor2
  4060  00373A  0100               	movlb	0	; () banked
  4061  00373C  6FCF               	movwf	sprintf@s& (0+255),b
  4062  00373E  0E00               	movlw	high mainMenu@textCursor2
  4063  003740  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  4064  003742  0EC1               	movlw	low STR_4
  4065  003744  6FD1               	movwf	sprintf@fmt& (0+255),b
  4066  003746  0E7F               	movlw	high STR_4
  4067  003748  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  4068  00374A  0101               	movlb	1	; () banked
  4069  00374C  5192               	movf	(_timer_value+3)& (0+255),w,b
  4070  00374E  0100               	movlb	0	; () banked
  4071  003750  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  4072  003752  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  4073  003754  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  4074  003756  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  4075  003758  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  4076  00375C  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  4077  00375E  EC35  F029         	call	_sprintf	;wreg free
  4078  003762                     
  4079                           ;fs_menu_controller.c: 253:     Lcd_Write_String(textCursor2);
  4080  003762  0EE1               	movlw	low mainMenu@textCursor2
  4081  003764  6E05               	movwf	Lcd_Write_String@a^0,c
  4082  003766  0E00               	movlw	high mainMenu@textCursor2
  4083  003768  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  4084  00376A  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  4085  00376E                     
  4086                           ;fs_menu_controller.c: 255:     if ( timer_value.menu_login_delay == 100)
  4087  00376E  0E64               	movlw	100
  4088  003770  0101               	movlb	1	; () banked
  4089  003772  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  4090  003774  A4D8               	btfss	status,2,c
  4091  003776  EFBF  F01B         	goto	u6941
  4092  00377A  EFC1  F01B         	goto	u6940
  4093  00377E                     u6941:
  4094  00377E  EFC8  F01B         	goto	l5930
  4095  003782                     u6940:
  4096  003782                     
  4097                           ; BSR set to: 1
  4098                           ;fs_menu_controller.c: 256:     {;fs_menu_controller.c: 257:         button_bounce_contr
      +                          oller.menu = 0;
  4099  003782  0E00               	movlw	0
  4100  003784  6F9D               	movwf	_button_bounce_controller& (0+255),b
  4101                           
  4102                           ;fs_menu_controller.c: 258:         timer_value.menu_login_delay = 0;
  4103  003786  0E00               	movlw	0
  4104  003788  6F93               	movwf	(_timer_value+4)& (0+255),b
  4105                           
  4106                           ;fs_menu_controller.c: 259:         menu_selected = DRIVER_TIME_SETTING;
  4107  00378A  0E01               	movlw	1
  4108  00378C  0100               	movlb	0	; () banked
  4109  00378E  6FFB               	movwf	_menu_selected& (0+255),b
  4110  003790                     l5930:
  4111                           
  4112                           ;fs_menu_controller.c: 262:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  4113  003790  0101               	movlb	1	; () banked
  4114  003792  5192               	movf	(_timer_value+3)& (0+255),w,b
  4115  003794  0A80               	xorlw	128
  4116  003796  0F7F               	addlw	-129
  4117  003798  B0D8               	btfsc	status,0,c
  4118  00379A  EFD1  F01B         	goto	u6951
  4119  00379E  EFD3  F01B         	goto	u6950
  4120  0037A2                     u6951:
  4121  0037A2  EFE1  F01B         	goto	l448
  4122  0037A6                     u6950:
  4123  0037A6                     
  4124                           ; BSR set to: 1
  4125  0037A6  5191               	movf	(_timer_value+2)& (0+255),w,b
  4126  0037A8  A4D8               	btfss	status,2,c
  4127  0037AA  EFD9  F01B         	goto	u6961
  4128  0037AE  EFDB  F01B         	goto	u6960
  4129  0037B2                     u6961:
  4130  0037B2  EFE1  F01B         	goto	l448
  4131  0037B6                     u6960:
  4132  0037B6                     
  4133                           ; BSR set to: 1
  4134                           ;fs_menu_controller.c: 263:     {;fs_menu_controller.c: 264:             menu_selected =
      +                           STOP_MENU;
  4135  0037B6  0E04               	movlw	4
  4136  0037B8  0100               	movlb	0	; () banked
  4137  0037BA  6FFB               	movwf	_menu_selected& (0+255),b
  4138                           
  4139                           ;fs_menu_controller.c: 265:             timer_value.minute = 0;
  4140  0037BC  0E00               	movlw	0
  4141  0037BE  0101               	movlb	1	; () banked
  4142  0037C0  6F90               	movwf	(_timer_value+1)& (0+255),b
  4143  0037C2                     l448:
  4144                           
  4145                           ; BSR set to: 1
  4146                           ;fs_menu_controller.c: 268:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  4147  0037C2  0100               	movlb	0	; () banked
  4148  0037C4  51FE               	movf	_startIsClick& (0+255),w,b
  4149  0037C6  A4D8               	btfss	status,2,c
  4150  0037C8  EFE8  F01B         	goto	u6971
  4151  0037CC  EFEA  F01B         	goto	u6970
  4152  0037D0                     u6971:
  4153  0037D0  EF09  F01C         	goto	l449
  4154  0037D4                     u6970:
  4155  0037D4                     
  4156                           ; BSR set to: 0
  4157  0037D4  05FF               	decf	_pauseIsClick& (0+255),w,b
  4158  0037D6  A4D8               	btfss	status,2,c
  4159  0037D8  EFF0  F01B         	goto	u6981
  4160  0037DC  EFF2  F01B         	goto	u6980
  4161  0037E0                     u6981:
  4162  0037E0  EF09  F01C         	goto	l449
  4163  0037E4                     u6980:
  4164  0037E4                     
  4165                           ; BSR set to: 0
  4166  0037E4  51FD               	movf	_stopIsClick& (0+255),w,b
  4167  0037E6  A4D8               	btfss	status,2,c
  4168  0037E8  EFF8  F01B         	goto	u6991
  4169  0037EC  EFFA  F01B         	goto	u6990
  4170  0037F0                     u6991:
  4171  0037F0  EF09  F01C         	goto	l449
  4172  0037F4                     u6990:
  4173  0037F4                     
  4174                           ; BSR set to: 0
  4175  0037F4  51FB               	movf	_menu_selected& (0+255),w,b
  4176  0037F6  A4D8               	btfss	status,2,c
  4177  0037F8  EF00  F01C         	goto	u7001
  4178  0037FC  EF02  F01C         	goto	u7000
  4179  003800                     u7001:
  4180  003800  EF09  F01C         	goto	l449
  4181  003804                     u7000:
  4182  003804                     
  4183                           ; BSR set to: 0
  4184                           ;fs_menu_controller.c: 269:     {;fs_menu_controller.c: 270:         menu_selected = PAU
      +                          SE_MENU;
  4185  003804  0E06               	movlw	6
  4186  003806  6FFB               	movwf	_menu_selected& (0+255),b
  4187  003808                     
  4188                           ; BSR set to: 0
  4189                           ;fs_menu_controller.c: 271:         LATDbits.LATD5 = 0;
  4190  003808  9A8C               	bcf	140,5,c	;volatile
  4191  00380A                     
  4192                           ; BSR set to: 0
  4193                           ;fs_menu_controller.c: 272:         LATCbits.LATC5 = 0;
  4194  00380A  9A8B               	bcf	139,5,c	;volatile
  4195  00380C                     
  4196                           ; BSR set to: 0
  4197                           ;fs_menu_controller.c: 273:         LATCbits.LATC4 = 0;
  4198  00380C  988B               	bcf	139,4,c	;volatile
  4199                           
  4200                           ;fs_menu_controller.c: 274:         startIsClick = 0;
  4201  00380E  0E00               	movlw	0
  4202  003810  6FFE               	movwf	_startIsClick& (0+255),b
  4203  003812                     l449:
  4204                           
  4205                           ; BSR set to: 0
  4206                           ;fs_menu_controller.c: 277:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  4207  003812  51FE               	movf	_startIsClick& (0+255),w,b
  4208  003814  A4D8               	btfss	status,2,c
  4209  003816  EF0F  F01C         	goto	u7011
  4210  00381A  EF11  F01C         	goto	u7010
  4211  00381E                     u7011:
  4212  00381E  EF35  F01C         	goto	l5966
  4213  003822                     u7010:
  4214  003822                     
  4215                           ; BSR set to: 0
  4216  003822  51FF               	movf	_pauseIsClick& (0+255),w,b
  4217  003824  A4D8               	btfss	status,2,c
  4218  003826  EF17  F01C         	goto	u7021
  4219  00382A  EF19  F01C         	goto	u7020
  4220  00382E                     u7021:
  4221  00382E  EF35  F01C         	goto	l5966
  4222  003832                     u7020:
  4223  003832                     
  4224                           ; BSR set to: 0
  4225  003832  05FD               	decf	_stopIsClick& (0+255),w,b
  4226  003834  A4D8               	btfss	status,2,c
  4227  003836  EF1F  F01C         	goto	u7031
  4228  00383A  EF21  F01C         	goto	u7030
  4229  00383E                     u7031:
  4230  00383E  EF35  F01C         	goto	l5966
  4231  003842                     u7030:
  4232  003842                     
  4233                           ; BSR set to: 0
  4234  003842  51FB               	movf	_menu_selected& (0+255),w,b
  4235  003844  A4D8               	btfss	status,2,c
  4236  003846  EF27  F01C         	goto	u7041
  4237  00384A  EF29  F01C         	goto	u7040
  4238  00384E                     u7041:
  4239  00384E  EF35  F01C         	goto	l5966
  4240  003852                     u7040:
  4241  003852                     
  4242                           ; BSR set to: 0
  4243                           ;fs_menu_controller.c: 278:     {;fs_menu_controller.c: 279:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  4244  003852  C0F3  F192         	movff	_menu_value,_timer_value+3
  4245  003856                     
  4246                           ; BSR set to: 0
  4247                           ;fs_menu_controller.c: 280:          timer_value.remainingSecond = 0;
  4248  003856  0E00               	movlw	0
  4249  003858  0101               	movlb	1	; () banked
  4250  00385A  6F91               	movwf	(_timer_value+2)& (0+255),b
  4251                           
  4252                           ;fs_menu_controller.c: 281:          timer_value.second = 0;
  4253  00385C  0E00               	movlw	0
  4254  00385E  6F8F               	movwf	_timer_value& (0+255),b
  4255                           
  4256                           ;fs_menu_controller.c: 282:          timer_value.minute = 0;
  4257  003860  0E00               	movlw	0
  4258  003862  6F90               	movwf	(_timer_value+1)& (0+255),b
  4259  003864                     
  4260                           ; BSR set to: 1
  4261                           ;fs_menu_controller.c: 283:          LATDbits.LATD5 = 0;
  4262  003864  9A8C               	bcf	140,5,c	;volatile
  4263  003866                     
  4264                           ; BSR set to: 1
  4265                           ;fs_menu_controller.c: 284:          LATCbits.LATC5 = 0;
  4266  003866  9A8B               	bcf	139,5,c	;volatile
  4267  003868                     
  4268                           ; BSR set to: 1
  4269                           ;fs_menu_controller.c: 285:          LATCbits.LATC4 = 0;
  4270  003868  988B               	bcf	139,4,c	;volatile
  4271  00386A                     l5966:
  4272                           
  4273                           ;fs_menu_controller.c: 288:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  4274  00386A  0100               	movlb	0	; () banked
  4275  00386C  05FE               	decf	_startIsClick& (0+255),w,b
  4276  00386E  A4D8               	btfss	status,2,c
  4277  003870  EF3C  F01C         	goto	u7051
  4278  003874  EF3E  F01C         	goto	u7050
  4279  003878                     u7051:
  4280  003878  EF53  F01C         	goto	l452
  4281  00387C                     u7050:
  4282  00387C                     
  4283                           ; BSR set to: 0
  4284  00387C  51FF               	movf	_pauseIsClick& (0+255),w,b
  4285  00387E  A4D8               	btfss	status,2,c
  4286  003880  EF44  F01C         	goto	u7061
  4287  003884  EF46  F01C         	goto	u7060
  4288  003888                     u7061:
  4289  003888  EF53  F01C         	goto	l452
  4290  00388C                     u7060:
  4291  00388C                     
  4292                           ; BSR set to: 0
  4293  00388C  51FD               	movf	_stopIsClick& (0+255),w,b
  4294  00388E  A4D8               	btfss	status,2,c
  4295  003890  EF4C  F01C         	goto	u7071
  4296  003894  EF4E  F01C         	goto	u7070
  4297  003898                     u7071:
  4298  003898  EF53  F01C         	goto	l452
  4299  00389C                     u7070:
  4300  00389C                     
  4301                           ; BSR set to: 0
  4302                           ;fs_menu_controller.c: 289:     {;fs_menu_controller.c: 290:         startMotor();
  4303  00389C  ECFF  F02A         	call	_startMotor	;wreg free
  4304  0038A0                     
  4305                           ;fs_menu_controller.c: 291:         LATDbits.LATD5 = 1;
  4306  0038A0  8A8C               	bsf	140,5,c	;volatile
  4307  0038A2                     
  4308                           ;fs_menu_controller.c: 292:         LATCbits.LATC5 = 1;
  4309  0038A2  8A8B               	bsf	139,5,c	;volatile
  4310  0038A4                     
  4311                           ;fs_menu_controller.c: 293:         LATCbits.LATC4 = 1;
  4312  0038A4  888B               	bsf	139,4,c	;volatile
  4313  0038A6                     l452:
  4314  0038A6  0012               	return		;funcret
  4315  0038A8                     __end_of_mainMenu:
  4316                           	callstack 0
  4317                           
  4318 ;; *************** function _startMotor *****************
  4319 ;; Defined at:
  4320 ;;		line 93 in file "fs_speed_controller.c"
  4321 ;; Parameters:    Size  Location     Type
  4322 ;;		None
  4323 ;; Auto vars:     Size  Location     Type
  4324 ;;		None
  4325 ;; Return value:  Size  Location     Type
  4326 ;;                  1    wreg      void 
  4327 ;; Registers used:
  4328 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4329 ;; Tracked objects:
  4330 ;;		On entry : 0/0
  4331 ;;		On exit  : 0/0
  4332 ;;		Unchanged: 0/0
  4333 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4334 ;;      Params:         0       0       0       0       0       0       0
  4335 ;;      Locals:         0       0       0       0       0       0       0
  4336 ;;      Temps:          0       0       0       0       0       0       0
  4337 ;;      Totals:         0       0       0       0       0       0       0
  4338 ;;Total ram usage:        0 bytes
  4339 ;; Hardware stack levels used:    1
  4340 ;; Hardware stack levels required when called:    3
  4341 ;; This function calls:
  4342 ;;		_PWM1_setDC
  4343 ;;		_PWM2_setDC
  4344 ;;		_calculatedAverageValue
  4345 ;;		_scanAdcConversion
  4346 ;;		_speedControl
  4347 ;; This function is called by:
  4348 ;;		_mainMenu
  4349 ;; This function uses a non-reentrant model
  4350 ;;
  4351                           
  4352                           	psect	text16
  4353  0055FE                     __ptext16:
  4354                           	callstack 0
  4355  0055FE                     _startMotor:
  4356                           	callstack 24
  4357  0055FE                     
  4358                           ;fs_speed_controller.c: 95:         scanAdcConversion();
  4359  0055FE  EC27  F006         	call	_scanAdcConversion	;wreg free
  4360  005602                     
  4361                           ;fs_speed_controller.c: 96:         calculatedAverageValue();
  4362  005602  EC8B  F013         	call	_calculatedAverageValue	;wreg free
  4363  005606                     
  4364                           ;fs_speed_controller.c: 97:         speedControl(driver_limit.ortalama);
  4365  005606  C18B  F058         	movff	_driver_limit+8,speedControl@position
  4366  00560A  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  4367  00560E  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  4368  005612  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  4369  005616  ECCD  F019         	call	_speedControl	;wreg free
  4370                           
  4371                           ;fs_speed_controller.c: 98:         PWM1_setDC(controller.leftMotorSpeed);
  4372  00561A  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  4373  00561E  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  4374  005622  EC6B  F027         	call	_PWM1_setDC	;wreg free
  4375                           
  4376                           ;fs_speed_controller.c: 99:         PWM2_setDC(controller.rightMotorSpeed);
  4377  005626  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  4378  00562A  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  4379  00562E  EC2E  F027         	call	_PWM2_setDC	;wreg free
  4380  005632  0012               	return		;funcret
  4381  005634                     __end_of_startMotor:
  4382                           	callstack 0
  4383                           
  4384 ;; *************** function _speedControl *****************
  4385 ;; Defined at:
  4386 ;;		line 36 in file "fs_speed_controller.c"
  4387 ;; Parameters:    Size  Location     Type
  4388 ;;  position        4   87[COMRAM] float 
  4389 ;; Auto vars:     Size  Location     Type
  4390 ;;  pos             4    0        float 
  4391 ;; Return value:  Size  Location     Type
  4392 ;;                  1    wreg      void 
  4393 ;; Registers used:
  4394 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4395 ;; Tracked objects:
  4396 ;;		On entry : 0/0
  4397 ;;		On exit  : 0/0
  4398 ;;		Unchanged: 0/0
  4399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4400 ;;      Params:         4       0       0       0       0       0       0
  4401 ;;      Locals:         0       4       0       0       0       0       0
  4402 ;;      Temps:          2       0       0       0       0       0       0
  4403 ;;      Totals:         6       4       0       0       0       0       0
  4404 ;;Total ram usage:       10 bytes
  4405 ;; Hardware stack levels used:    1
  4406 ;; Hardware stack levels required when called:    2
  4407 ;; This function calls:
  4408 ;;		___fladd
  4409 ;;		___flmul
  4410 ;;		___fltol
  4411 ;;		___xxtofl
  4412 ;; This function is called by:
  4413 ;;		_startMotor
  4414 ;; This function uses a non-reentrant model
  4415 ;;
  4416                           
  4417                           	psect	text17
  4418  00339A                     __ptext17:
  4419                           	callstack 0
  4420  00339A                     _speedControl:
  4421                           	callstack 24
  4422  00339A                     
  4423                           ;fs_speed_controller.c: 42:     controller.error = (int16_t)(position - 3400.0);
  4424  00339A  0E00               	movlw	0
  4425  00339C  6E39               	movwf	___fladd@a^0,c
  4426  00339E  0E80               	movlw	128
  4427  0033A0  6E3A               	movwf	(___fladd@a+1)^0,c
  4428  0033A2  0E54               	movlw	84
  4429  0033A4  6E3B               	movwf	(___fladd@a+2)^0,c
  4430  0033A6  0EC5               	movlw	197
  4431  0033A8  6E3C               	movwf	(___fladd@a+3)^0,c
  4432  0033AA  C058  F035         	movff	speedControl@position,___fladd@b
  4433  0033AE  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4434  0033B2  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4435  0033B6  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4436  0033BA  EC49  F00D         	call	___fladd	;wreg free
  4437  0033BE  C035  F04E         	movff	?___fladd,___fltol@f1
  4438  0033C2  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4439  0033C6  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4440  0033CA  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4441  0033CE  EC5F  F021         	call	___fltol	;wreg free
  4442  0033D2  C04E  F150         	movff	?___fltol,_controller
  4443  0033D6  C04F  F151         	movff	?___fltol+1,_controller+1
  4444  0033DA  0E00               	movlw	0
  4445  0033DC  6E20               	movwf	___flmul@a^0,c
  4446  0033DE  0E00               	movlw	0
  4447  0033E0  6E21               	movwf	(___flmul@a+1)^0,c
  4448  0033E2  0E80               	movlw	128
  4449  0033E4  6E22               	movwf	(___flmul@a+2)^0,c
  4450  0033E6  0E3F               	movlw	63
  4451  0033E8  6E23               	movwf	(___flmul@a+3)^0,c
  4452  0033EA  0101               	movlb	1	; () banked
  4453  0033EC  5152               	movf	(_controller+2)& (0+255),w,b
  4454  0033EE  5D50               	subwf	_controller& (0+255),w,b
  4455  0033F0  6E5C               	movwf	??_speedControl^0,c
  4456  0033F2  5153               	movf	(_controller+3)& (0+255),w,b
  4457  0033F4  5951               	subwfb	(_controller+1)& (0+255),w,b
  4458  0033F6  6E5D               	movwf	(??_speedControl+1)^0,c
  4459  0033F8  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4460  0033FC  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4461  003400  0E00               	movlw	0
  4462  003402  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4463  003404  0EFF               	movlw	-1
  4464  003406  6E10               	movwf	(___xxtofl@val+2)^0,c
  4465  003408  6E11               	movwf	(___xxtofl@val+3)^0,c
  4466  00340A  0E01               	movlw	1
  4467  00340C  ECAC  F01A         	call	___xxtofl
  4468  003410  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4469  003414  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4470  003418  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4471  00341C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4472  003420  ECA9  F00F         	call	___flmul	;wreg free
  4473  003424  C01C  F039         	movff	?___flmul,___fladd@a
  4474  003428  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4475  00342C  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4476  003430  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4477  003434  0ECD               	movlw	205
  4478  003436  6E20               	movwf	___flmul@a^0,c
  4479  003438  0ECC               	movlw	204
  4480  00343A  6E21               	movwf	(___flmul@a+1)^0,c
  4481  00343C  0E4C               	movlw	76
  4482  00343E  6E22               	movwf	(___flmul@a+2)^0,c
  4483  003440  0E3E               	movlw	62
  4484  003442  6E23               	movwf	(___flmul@a+3)^0,c
  4485  003444  C150  F00E         	movff	_controller,___xxtofl@val
  4486  003448  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4487  00344C  0E00               	movlw	0
  4488  00344E  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4489  003450  0EFF               	movlw	-1
  4490  003452  6E10               	movwf	(___xxtofl@val+2)^0,c
  4491  003454  6E11               	movwf	(___xxtofl@val+3)^0,c
  4492  003456  0E01               	movlw	1
  4493  003458  ECAC  F01A         	call	___xxtofl
  4494  00345C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4495  003460  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4496  003464  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4497  003468  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4498  00346C  ECA9  F00F         	call	___flmul	;wreg free
  4499  003470  C01C  F035         	movff	?___flmul,___fladd@b
  4500  003474  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4501  003478  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4502  00347C  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4503  003480  EC49  F00D         	call	___fladd	;wreg free
  4504  003484  C035  F04E         	movff	?___fladd,___fltol@f1
  4505  003488  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4506  00348C  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4507  003490  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4508  003494  EC5F  F021         	call	___fltol	;wreg free
  4509  003498  C04E  F154         	movff	?___fltol,_controller+4
  4510  00349C  C04F  F155         	movff	?___fltol+1,_controller+5
  4511  0034A0                     
  4512                           ;fs_speed_controller.c: 44:     controller.lastError = controller.error;
  4513  0034A0  C150  F152         	movff	_controller,_controller+2
  4514  0034A4  C151  F153         	movff	_controller+1,_controller+3
  4515  0034A8                     
  4516                           ;fs_speed_controller.c: 46:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4517  0034A8  0E0E               	movlw	14
  4518  0034AA  0101               	movlb	1	; () banked
  4519  0034AC  2554               	addwf	(_controller+4)& (0+255),w,b
  4520  0034AE  6F56               	movwf	(_controller+6)& (0+255),b
  4521  0034B0  0E01               	movlw	1
  4522  0034B2  2155               	addwfc	(_controller+5)& (0+255),w,b
  4523  0034B4  6F57               	movwf	(_controller+7)& (0+255),b
  4524  0034B6                     
  4525                           ; BSR set to: 1
  4526                           ;fs_speed_controller.c: 47:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4527  0034B6  5154               	movf	(_controller+4)& (0+255),w,b
  4528  0034B8  08C8               	sublw	200
  4529  0034BA  6F58               	movwf	(_controller+8)& (0+255),b
  4530  0034BC  5155               	movf	(_controller+5)& (0+255),w,b
  4531  0034BE  A0D8               	btfss	status,0,c
  4532  0034C0  2AE8               	incf	wreg,f,c
  4533  0034C2  0800               	sublw	0
  4534  0034C4  6F59               	movwf	(_controller+9)& (0+255),b
  4535  0034C6                     
  4536                           ; BSR set to: 1
  4537                           ;fs_speed_controller.c: 49:     if (controller.leftMotorSpeed < 50)
  4538  0034C6  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4539  0034C8  EF71  F01A         	goto	u6820
  4540  0034CC  5157               	movf	(_controller+7)& (0+255),w,b
  4541  0034CE  E107               	bnz	u6821
  4542  0034D0  0E32               	movlw	50
  4543  0034D2  5D56               	subwf	(_controller+6)& (0+255),w,b
  4544  0034D4  B0D8               	btfsc	status,0,c
  4545  0034D6  EF6F  F01A         	goto	u6821
  4546  0034DA  EF71  F01A         	goto	u6820
  4547  0034DE                     u6821:
  4548  0034DE  EF75  F01A         	goto	l5830
  4549  0034E2                     u6820:
  4550  0034E2                     
  4551                           ; BSR set to: 1
  4552                           ;fs_speed_controller.c: 50:     {;fs_speed_controller.c: 51:         controller.leftMoto
      +                          rSpeed = 50;
  4553  0034E2  0E00               	movlw	0
  4554  0034E4  6F57               	movwf	(_controller+7)& (0+255),b
  4555  0034E6  0E32               	movlw	50
  4556  0034E8  6F56               	movwf	(_controller+6)& (0+255),b
  4557  0034EA                     l5830:
  4558                           
  4559                           ; BSR set to: 1
  4560                           ;fs_speed_controller.c: 54:     if (controller.rightMotorSpeed < 50)
  4561  0034EA  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4562  0034EC  EF83  F01A         	goto	u6830
  4563  0034F0  5159               	movf	(_controller+9)& (0+255),w,b
  4564  0034F2  E107               	bnz	u6831
  4565  0034F4  0E32               	movlw	50
  4566  0034F6  5D58               	subwf	(_controller+8)& (0+255),w,b
  4567  0034F8  B0D8               	btfsc	status,0,c
  4568  0034FA  EF81  F01A         	goto	u6831
  4569  0034FE  EF83  F01A         	goto	u6830
  4570  003502                     u6831:
  4571  003502  EF87  F01A         	goto	l5834
  4572  003506                     u6830:
  4573  003506                     
  4574                           ; BSR set to: 1
  4575                           ;fs_speed_controller.c: 55:     {;fs_speed_controller.c: 56:       controller.rightMotor
      +                          Speed = 50;
  4576  003506  0E00               	movlw	0
  4577  003508  6F59               	movwf	(_controller+9)& (0+255),b
  4578  00350A  0E32               	movlw	50
  4579  00350C  6F58               	movwf	(_controller+8)& (0+255),b
  4580  00350E                     l5834:
  4581                           
  4582                           ; BSR set to: 1
  4583                           ;fs_speed_controller.c: 59:     if (controller.leftMotorSpeed > 350)
  4584  00350E  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4585  003510  EF93  F01A         	goto	u6841
  4586  003514  0E5F               	movlw	95
  4587  003516  5D56               	subwf	(_controller+6)& (0+255),w,b
  4588  003518  0E01               	movlw	1
  4589  00351A  5957               	subwfb	(_controller+7)& (0+255),w,b
  4590  00351C  A0D8               	btfss	status,0,c
  4591  00351E  EF93  F01A         	goto	u6841
  4592  003522  EF95  F01A         	goto	u6840
  4593  003526                     u6841:
  4594  003526  EF99  F01A         	goto	l5838
  4595  00352A                     u6840:
  4596  00352A                     
  4597                           ; BSR set to: 1
  4598                           ;fs_speed_controller.c: 60:    {;fs_speed_controller.c: 61:         controller.leftMotor
      +                          Speed = 350;
  4599  00352A  0E01               	movlw	1
  4600  00352C  6F57               	movwf	(_controller+7)& (0+255),b
  4601  00352E  0E5E               	movlw	94
  4602  003530  6F56               	movwf	(_controller+6)& (0+255),b
  4603  003532                     l5838:
  4604                           
  4605                           ; BSR set to: 1
  4606                           ;fs_speed_controller.c: 64:     if (controller.rightMotorSpeed > 350)
  4607  003532  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4608  003534  EFA5  F01A         	goto	u6851
  4609  003538  0E5F               	movlw	95
  4610  00353A  5D58               	subwf	(_controller+8)& (0+255),w,b
  4611  00353C  0E01               	movlw	1
  4612  00353E  5959               	subwfb	(_controller+9)& (0+255),w,b
  4613  003540  A0D8               	btfss	status,0,c
  4614  003542  EFA5  F01A         	goto	u6851
  4615  003546  EFA7  F01A         	goto	u6850
  4616  00354A                     u6851:
  4617  00354A  EFAB  F01A         	goto	l627
  4618  00354E                     u6850:
  4619  00354E                     
  4620                           ; BSR set to: 1
  4621                           ;fs_speed_controller.c: 65:     {;fs_speed_controller.c: 66:         controller.rightMot
      +                          orSpeed = 350;
  4622  00354E  0E01               	movlw	1
  4623  003550  6F59               	movwf	(_controller+9)& (0+255),b
  4624  003552  0E5E               	movlw	94
  4625  003554  6F58               	movwf	(_controller+8)& (0+255),b
  4626  003556                     l627:
  4627                           
  4628                           ; BSR set to: 1
  4629  003556  0012               	return		;funcret
  4630  003558                     __end_of_speedControl:
  4631                           	callstack 0
  4632                           
  4633 ;; *************** function _scanAdcConversion *****************
  4634 ;; Defined at:
  4635 ;;		line 93 in file "fs_adc.c"
  4636 ;; Parameters:    Size  Location     Type
  4637 ;;		None
  4638 ;; Auto vars:     Size  Location     Type
  4639 ;;		None
  4640 ;; Return value:  Size  Location     Type
  4641 ;;                  1    wreg      void 
  4642 ;; Registers used:
  4643 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4644 ;; Tracked objects:
  4645 ;;		On entry : 0/0
  4646 ;;		On exit  : 0/0
  4647 ;;		Unchanged: 0/0
  4648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4649 ;;      Params:         0       0       0       0       0       0       0
  4650 ;;      Locals:         0       0       0       0       0       0       0
  4651 ;;      Temps:          2       0       0       0       0       0       0
  4652 ;;      Totals:         2       0       0       0       0       0       0
  4653 ;;Total ram usage:        2 bytes
  4654 ;; Hardware stack levels used:    1
  4655 ;; Hardware stack levels required when called:    2
  4656 ;; This function calls:
  4657 ;;		___fldiv
  4658 ;;		___flmul
  4659 ;;		___fltol
  4660 ;;		___xxtofl
  4661 ;;		_readAdcValue
  4662 ;; This function is called by:
  4663 ;;		_startMotor
  4664 ;; This function uses a non-reentrant model
  4665 ;;
  4666                           
  4667                           	psect	text18
  4668  000C4E                     __ptext18:
  4669                           	callstack 0
  4670  000C4E                     _scanAdcConversion:
  4671                           	callstack 24
  4672  000C4E                     
  4673                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  4674  000C4E  EFFB  F009         	goto	l5748
  4675  000C52                     l5696:
  4676                           
  4677                           ; BSR set to: 1
  4678                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4679  000C52  0E00               	movlw	0
  4680  000C54  ECF1  F029         	call	_readAdcValue
  4681  000C58  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4682  000C5C  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4683  000C60                     
  4684                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4685  000C60  0E00               	movlw	0
  4686  000C62  6E20               	movwf	___flmul@a^0,c
  4687  000C64  0E00               	movlw	0
  4688  000C66  6E21               	movwf	(___flmul@a+1)^0,c
  4689  000C68  0EA0               	movlw	160
  4690  000C6A  6E22               	movwf	(___flmul@a+2)^0,c
  4691  000C6C  0E40               	movlw	64
  4692  000C6E  6E23               	movwf	(___flmul@a+3)^0,c
  4693  000C70  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4694  000C74  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4695  000C78  6A10               	clrf	(___xxtofl@val+2)^0,c
  4696  000C7A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4697  000C7C  0E00               	movlw	0
  4698  000C7E  ECAC  F01A         	call	___xxtofl
  4699  000C82  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4700  000C86  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4701  000C8A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4702  000C8E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4703  000C92  ECA9  F00F         	call	___flmul	;wreg free
  4704  000C96  C01C  F035         	movff	?___flmul,___fldiv@b
  4705  000C9A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4706  000C9E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4707  000CA2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4708  000CA6  0E00               	movlw	0
  4709  000CA8  6E39               	movwf	___fldiv@a^0,c
  4710  000CAA  0E00               	movlw	0
  4711  000CAC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4712  000CAE  0E80               	movlw	128
  4713  000CB0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4714  000CB2  0E44               	movlw	68
  4715  000CB4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4716  000CB6  ECBE  F011         	call	___fldiv	;wreg free
  4717  000CBA  C035  F130         	movff	?___fldiv,_procces_data
  4718  000CBE  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4719  000CC2  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4720  000CC6  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4721  000CCA                     
  4722                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4723  000CCA  0E00               	movlw	0
  4724  000CCC  6E39               	movwf	___fldiv@a^0,c
  4725  000CCE  0E00               	movlw	0
  4726  000CD0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4727  000CD2  0EA0               	movlw	160
  4728  000CD4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4729  000CD6  0E40               	movlw	64
  4730  000CD8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4731  000CDA  0E00               	movlw	0
  4732  000CDC  6E20               	movwf	___flmul@a^0,c
  4733  000CDE  0EC0               	movlw	192
  4734  000CE0  6E21               	movwf	(___flmul@a+1)^0,c
  4735  000CE2  0E79               	movlw	121
  4736  000CE4  6E22               	movwf	(___flmul@a+2)^0,c
  4737  000CE6  0E44               	movlw	68
  4738  000CE8  6E23               	movwf	(___flmul@a+3)^0,c
  4739  000CEA  C130  F01C         	movff	_procces_data,___flmul@b
  4740  000CEE  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4741  000CF2  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4742  000CF6  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4743  000CFA  ECA9  F00F         	call	___flmul	;wreg free
  4744  000CFE  C01C  F035         	movff	?___flmul,___fldiv@b
  4745  000D02  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4746  000D06  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4747  000D0A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4748  000D0E  ECBE  F011         	call	___fldiv	;wreg free
  4749  000D12  C035  F04E         	movff	?___fldiv,___fltol@f1
  4750  000D16  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4751  000D1A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4752  000D1E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4753  000D22  EC5F  F021         	call	___fltol	;wreg free
  4754  000D26  C04E  F100         	movff	?___fltol,_convert_data
  4755  000D2A  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4756  000D2E  C050  F102         	movff	?___fltol+2,_convert_data+2
  4757  000D32  C051  F103         	movff	?___fltol+3,_convert_data+3
  4758                           
  4759                           ;fs_adc.c: 101:         break;
  4760  000D36  EF29  F00A         	goto	l76
  4761  000D3A                     l5702:
  4762                           
  4763                           ; BSR set to: 1
  4764                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4765  000D3A  0E01               	movlw	1
  4766  000D3C  ECF1  F029         	call	_readAdcValue
  4767  000D40  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4768  000D44  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4769  000D48                     
  4770                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4771  000D48  0E00               	movlw	0
  4772  000D4A  6E20               	movwf	___flmul@a^0,c
  4773  000D4C  0E00               	movlw	0
  4774  000D4E  6E21               	movwf	(___flmul@a+1)^0,c
  4775  000D50  0EA0               	movlw	160
  4776  000D52  6E22               	movwf	(___flmul@a+2)^0,c
  4777  000D54  0E40               	movlw	64
  4778  000D56  6E23               	movwf	(___flmul@a+3)^0,c
  4779  000D58  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4780  000D5C  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4781  000D60  6A10               	clrf	(___xxtofl@val+2)^0,c
  4782  000D62  6A11               	clrf	(___xxtofl@val+3)^0,c
  4783  000D64  0E00               	movlw	0
  4784  000D66  ECAC  F01A         	call	___xxtofl
  4785  000D6A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4786  000D6E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4787  000D72  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4788  000D76  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4789  000D7A  ECA9  F00F         	call	___flmul	;wreg free
  4790  000D7E  C01C  F035         	movff	?___flmul,___fldiv@b
  4791  000D82  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4792  000D86  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4793  000D8A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4794  000D8E  0E00               	movlw	0
  4795  000D90  6E39               	movwf	___fldiv@a^0,c
  4796  000D92  0E00               	movlw	0
  4797  000D94  6E3A               	movwf	(___fldiv@a+1)^0,c
  4798  000D96  0E80               	movlw	128
  4799  000D98  6E3B               	movwf	(___fldiv@a+2)^0,c
  4800  000D9A  0E44               	movlw	68
  4801  000D9C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4802  000D9E  ECBE  F011         	call	___fldiv	;wreg free
  4803  000DA2  C035  F134         	movff	?___fldiv,_procces_data+4
  4804  000DA6  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4805  000DAA  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4806  000DAE  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4807  000DB2                     
  4808                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4809  000DB2  0E00               	movlw	0
  4810  000DB4  6E39               	movwf	___fldiv@a^0,c
  4811  000DB6  0E00               	movlw	0
  4812  000DB8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4813  000DBA  0EA0               	movlw	160
  4814  000DBC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4815  000DBE  0E40               	movlw	64
  4816  000DC0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4817  000DC2  0E00               	movlw	0
  4818  000DC4  6E20               	movwf	___flmul@a^0,c
  4819  000DC6  0EC0               	movlw	192
  4820  000DC8  6E21               	movwf	(___flmul@a+1)^0,c
  4821  000DCA  0E79               	movlw	121
  4822  000DCC  6E22               	movwf	(___flmul@a+2)^0,c
  4823  000DCE  0E44               	movlw	68
  4824  000DD0  6E23               	movwf	(___flmul@a+3)^0,c
  4825  000DD2  C134  F01C         	movff	_procces_data+4,___flmul@b
  4826  000DD6  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4827  000DDA  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4828  000DDE  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4829  000DE2  ECA9  F00F         	call	___flmul	;wreg free
  4830  000DE6  C01C  F035         	movff	?___flmul,___fldiv@b
  4831  000DEA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4832  000DEE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4833  000DF2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4834  000DF6  ECBE  F011         	call	___fldiv	;wreg free
  4835  000DFA  C035  F04E         	movff	?___fldiv,___fltol@f1
  4836  000DFE  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4837  000E02  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4838  000E06  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4839  000E0A  EC5F  F021         	call	___fltol	;wreg free
  4840  000E0E  C04E  F104         	movff	?___fltol,_convert_data+4
  4841  000E12  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4842  000E16  C050  F106         	movff	?___fltol+2,_convert_data+6
  4843  000E1A  C051  F107         	movff	?___fltol+3,_convert_data+7
  4844                           
  4845                           ;fs_adc.c: 107:         break;
  4846  000E1E  EF29  F00A         	goto	l76
  4847  000E22                     l5708:
  4848                           
  4849                           ; BSR set to: 1
  4850                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4851  000E22  0E02               	movlw	2
  4852  000E24  ECF1  F029         	call	_readAdcValue
  4853  000E28  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4854  000E2C  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4855  000E30                     
  4856                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4857  000E30  0E00               	movlw	0
  4858  000E32  6E20               	movwf	___flmul@a^0,c
  4859  000E34  0E00               	movlw	0
  4860  000E36  6E21               	movwf	(___flmul@a+1)^0,c
  4861  000E38  0EA0               	movlw	160
  4862  000E3A  6E22               	movwf	(___flmul@a+2)^0,c
  4863  000E3C  0E40               	movlw	64
  4864  000E3E  6E23               	movwf	(___flmul@a+3)^0,c
  4865  000E40  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4866  000E44  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4867  000E48  6A10               	clrf	(___xxtofl@val+2)^0,c
  4868  000E4A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4869  000E4C  0E00               	movlw	0
  4870  000E4E  ECAC  F01A         	call	___xxtofl
  4871  000E52  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4872  000E56  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4873  000E5A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4874  000E5E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4875  000E62  ECA9  F00F         	call	___flmul	;wreg free
  4876  000E66  C01C  F035         	movff	?___flmul,___fldiv@b
  4877  000E6A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4878  000E6E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4879  000E72  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4880  000E76  0E00               	movlw	0
  4881  000E78  6E39               	movwf	___fldiv@a^0,c
  4882  000E7A  0E00               	movlw	0
  4883  000E7C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4884  000E7E  0E80               	movlw	128
  4885  000E80  6E3B               	movwf	(___fldiv@a+2)^0,c
  4886  000E82  0E44               	movlw	68
  4887  000E84  6E3C               	movwf	(___fldiv@a+3)^0,c
  4888  000E86  ECBE  F011         	call	___fldiv	;wreg free
  4889  000E8A  C035  F138         	movff	?___fldiv,_procces_data+8
  4890  000E8E  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4891  000E92  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4892  000E96  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4893  000E9A                     
  4894                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4895  000E9A  0E00               	movlw	0
  4896  000E9C  6E39               	movwf	___fldiv@a^0,c
  4897  000E9E  0E00               	movlw	0
  4898  000EA0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4899  000EA2  0EA0               	movlw	160
  4900  000EA4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4901  000EA6  0E40               	movlw	64
  4902  000EA8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4903  000EAA  0E00               	movlw	0
  4904  000EAC  6E20               	movwf	___flmul@a^0,c
  4905  000EAE  0EC0               	movlw	192
  4906  000EB0  6E21               	movwf	(___flmul@a+1)^0,c
  4907  000EB2  0E79               	movlw	121
  4908  000EB4  6E22               	movwf	(___flmul@a+2)^0,c
  4909  000EB6  0E44               	movlw	68
  4910  000EB8  6E23               	movwf	(___flmul@a+3)^0,c
  4911  000EBA  C138  F01C         	movff	_procces_data+8,___flmul@b
  4912  000EBE  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4913  000EC2  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4914  000EC6  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4915  000ECA  ECA9  F00F         	call	___flmul	;wreg free
  4916  000ECE  C01C  F035         	movff	?___flmul,___fldiv@b
  4917  000ED2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4918  000ED6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4919  000EDA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4920  000EDE  ECBE  F011         	call	___fldiv	;wreg free
  4921  000EE2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4922  000EE6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4923  000EEA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4924  000EEE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4925  000EF2  EC5F  F021         	call	___fltol	;wreg free
  4926  000EF6  C04E  F108         	movff	?___fltol,_convert_data+8
  4927  000EFA  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4928  000EFE  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4929  000F02  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4930  000F06                     
  4931                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4932  000F06  0E00               	movlw	0
  4933  000F08  6E39               	movwf	___fldiv@a^0,c
  4934  000F0A  0E00               	movlw	0
  4935  000F0C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4936  000F0E  0EA0               	movlw	160
  4937  000F10  6E3B               	movwf	(___fldiv@a+2)^0,c
  4938  000F12  0E40               	movlw	64
  4939  000F14  6E3C               	movwf	(___fldiv@a+3)^0,c
  4940  000F16  0E00               	movlw	0
  4941  000F18  6E20               	movwf	___flmul@a^0,c
  4942  000F1A  0EC0               	movlw	192
  4943  000F1C  6E21               	movwf	(___flmul@a+1)^0,c
  4944  000F1E  0E79               	movlw	121
  4945  000F20  6E22               	movwf	(___flmul@a+2)^0,c
  4946  000F22  0E44               	movlw	68
  4947  000F24  6E23               	movwf	(___flmul@a+3)^0,c
  4948  000F26  C138  F01C         	movff	_procces_data+8,___flmul@b
  4949  000F2A  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4950  000F2E  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4951  000F32  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4952  000F36  ECA9  F00F         	call	___flmul	;wreg free
  4953  000F3A  C01C  F035         	movff	?___flmul,___fldiv@b
  4954  000F3E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4955  000F42  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4956  000F46  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4957  000F4A  ECBE  F011         	call	___fldiv	;wreg free
  4958  000F4E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4959  000F52  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4960  000F56  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4961  000F5A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4962  000F5E  EC5F  F021         	call	___fltol	;wreg free
  4963  000F62  C04E  F124         	movff	?___fltol,_convert_data+36
  4964  000F66  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4965                           
  4966                           ;fs_adc.c: 114:         break;
  4967  000F6A  EF29  F00A         	goto	l76
  4968  000F6E                     l5716:
  4969                           
  4970                           ; BSR set to: 1
  4971                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4972  000F6E  0E03               	movlw	3
  4973  000F70  ECF1  F029         	call	_readAdcValue
  4974  000F74  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4975  000F78  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4976  000F7C                     
  4977                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4978  000F7C  0E00               	movlw	0
  4979  000F7E  6E20               	movwf	___flmul@a^0,c
  4980  000F80  0E00               	movlw	0
  4981  000F82  6E21               	movwf	(___flmul@a+1)^0,c
  4982  000F84  0EA0               	movlw	160
  4983  000F86  6E22               	movwf	(___flmul@a+2)^0,c
  4984  000F88  0E40               	movlw	64
  4985  000F8A  6E23               	movwf	(___flmul@a+3)^0,c
  4986  000F8C  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4987  000F90  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4988  000F94  6A10               	clrf	(___xxtofl@val+2)^0,c
  4989  000F96  6A11               	clrf	(___xxtofl@val+3)^0,c
  4990  000F98  0E00               	movlw	0
  4991  000F9A  ECAC  F01A         	call	___xxtofl
  4992  000F9E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4993  000FA2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4994  000FA6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4995  000FAA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4996  000FAE  ECA9  F00F         	call	___flmul	;wreg free
  4997  000FB2  C01C  F035         	movff	?___flmul,___fldiv@b
  4998  000FB6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4999  000FBA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5000  000FBE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5001  000FC2  0E00               	movlw	0
  5002  000FC4  6E39               	movwf	___fldiv@a^0,c
  5003  000FC6  0E00               	movlw	0
  5004  000FC8  6E3A               	movwf	(___fldiv@a+1)^0,c
  5005  000FCA  0E80               	movlw	128
  5006  000FCC  6E3B               	movwf	(___fldiv@a+2)^0,c
  5007  000FCE  0E44               	movlw	68
  5008  000FD0  6E3C               	movwf	(___fldiv@a+3)^0,c
  5009  000FD2  ECBE  F011         	call	___fldiv	;wreg free
  5010  000FD6  C035  F13C         	movff	?___fldiv,_procces_data+12
  5011  000FDA  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  5012  000FDE  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  5013  000FE2  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  5014  000FE6                     
  5015                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  5016  000FE6  0E00               	movlw	0
  5017  000FE8  6E39               	movwf	___fldiv@a^0,c
  5018  000FEA  0E00               	movlw	0
  5019  000FEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  5020  000FEE  0EA0               	movlw	160
  5021  000FF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  5022  000FF2  0E40               	movlw	64
  5023  000FF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  5024  000FF6  0E00               	movlw	0
  5025  000FF8  6E20               	movwf	___flmul@a^0,c
  5026  000FFA  0EC0               	movlw	192
  5027  000FFC  6E21               	movwf	(___flmul@a+1)^0,c
  5028  000FFE  0E79               	movlw	121
  5029  001000  6E22               	movwf	(___flmul@a+2)^0,c
  5030  001002  0E44               	movlw	68
  5031  001004  6E23               	movwf	(___flmul@a+3)^0,c
  5032  001006  C13C  F01C         	movff	_procces_data+12,___flmul@b
  5033  00100A  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  5034  00100E  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  5035  001012  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  5036  001016  ECA9  F00F         	call	___flmul	;wreg free
  5037  00101A  C01C  F035         	movff	?___flmul,___fldiv@b
  5038  00101E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5039  001022  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5040  001026  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5041  00102A  ECBE  F011         	call	___fldiv	;wreg free
  5042  00102E  C035  F04E         	movff	?___fldiv,___fltol@f1
  5043  001032  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5044  001036  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5045  00103A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5046  00103E  EC5F  F021         	call	___fltol	;wreg free
  5047  001042  C04E  F10C         	movff	?___fltol,_convert_data+12
  5048  001046  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  5049  00104A  C050  F10E         	movff	?___fltol+2,_convert_data+14
  5050  00104E  C051  F10F         	movff	?___fltol+3,_convert_data+15
  5051                           
  5052                           ;fs_adc.c: 120:         break;
  5053  001052  EF29  F00A         	goto	l76
  5054  001056                     l5722:
  5055                           
  5056                           ; BSR set to: 1
  5057                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  5058  001056  0E04               	movlw	4
  5059  001058  ECF1  F029         	call	_readAdcValue
  5060  00105C  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  5061  001060  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  5062  001064                     
  5063                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  5064  001064  0E00               	movlw	0
  5065  001066  6E20               	movwf	___flmul@a^0,c
  5066  001068  0E00               	movlw	0
  5067  00106A  6E21               	movwf	(___flmul@a+1)^0,c
  5068  00106C  0EA0               	movlw	160
  5069  00106E  6E22               	movwf	(___flmul@a+2)^0,c
  5070  001070  0E40               	movlw	64
  5071  001072  6E23               	movwf	(___flmul@a+3)^0,c
  5072  001074  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  5073  001078  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  5074  00107C  6A10               	clrf	(___xxtofl@val+2)^0,c
  5075  00107E  6A11               	clrf	(___xxtofl@val+3)^0,c
  5076  001080  0E00               	movlw	0
  5077  001082  ECAC  F01A         	call	___xxtofl
  5078  001086  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5079  00108A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5080  00108E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5081  001092  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5082  001096  ECA9  F00F         	call	___flmul	;wreg free
  5083  00109A  C01C  F035         	movff	?___flmul,___fldiv@b
  5084  00109E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5085  0010A2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5086  0010A6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5087  0010AA  0E00               	movlw	0
  5088  0010AC  6E39               	movwf	___fldiv@a^0,c
  5089  0010AE  0E00               	movlw	0
  5090  0010B0  6E3A               	movwf	(___fldiv@a+1)^0,c
  5091  0010B2  0E80               	movlw	128
  5092  0010B4  6E3B               	movwf	(___fldiv@a+2)^0,c
  5093  0010B6  0E44               	movlw	68
  5094  0010B8  6E3C               	movwf	(___fldiv@a+3)^0,c
  5095  0010BA  ECBE  F011         	call	___fldiv	;wreg free
  5096  0010BE  C035  F140         	movff	?___fldiv,_procces_data+16
  5097  0010C2  C036  F141         	movff	?___fldiv+1,_procces_data+17
  5098  0010C6  C037  F142         	movff	?___fldiv+2,_procces_data+18
  5099  0010CA  C038  F143         	movff	?___fldiv+3,_procces_data+19
  5100  0010CE                     
  5101                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  5102  0010CE  0E00               	movlw	0
  5103  0010D0  6E39               	movwf	___fldiv@a^0,c
  5104  0010D2  0E00               	movlw	0
  5105  0010D4  6E3A               	movwf	(___fldiv@a+1)^0,c
  5106  0010D6  0EA0               	movlw	160
  5107  0010D8  6E3B               	movwf	(___fldiv@a+2)^0,c
  5108  0010DA  0E40               	movlw	64
  5109  0010DC  6E3C               	movwf	(___fldiv@a+3)^0,c
  5110  0010DE  0E00               	movlw	0
  5111  0010E0  6E20               	movwf	___flmul@a^0,c
  5112  0010E2  0EC0               	movlw	192
  5113  0010E4  6E21               	movwf	(___flmul@a+1)^0,c
  5114  0010E6  0E79               	movlw	121
  5115  0010E8  6E22               	movwf	(___flmul@a+2)^0,c
  5116  0010EA  0E44               	movlw	68
  5117  0010EC  6E23               	movwf	(___flmul@a+3)^0,c
  5118  0010EE  C140  F01C         	movff	_procces_data+16,___flmul@b
  5119  0010F2  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  5120  0010F6  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  5121  0010FA  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  5122  0010FE  ECA9  F00F         	call	___flmul	;wreg free
  5123  001102  C01C  F035         	movff	?___flmul,___fldiv@b
  5124  001106  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5125  00110A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5126  00110E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5127  001112  ECBE  F011         	call	___fldiv	;wreg free
  5128  001116  C035  F04E         	movff	?___fldiv,___fltol@f1
  5129  00111A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5130  00111E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5131  001122  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5132  001126  EC5F  F021         	call	___fltol	;wreg free
  5133  00112A  C04E  F110         	movff	?___fltol,_convert_data+16
  5134  00112E  C04F  F111         	movff	?___fltol+1,_convert_data+17
  5135  001132  C050  F112         	movff	?___fltol+2,_convert_data+18
  5136  001136  C051  F113         	movff	?___fltol+3,_convert_data+19
  5137                           
  5138                           ;fs_adc.c: 126:         break;
  5139  00113A  EF29  F00A         	goto	l76
  5140  00113E                     l5728:
  5141                           
  5142                           ; BSR set to: 1
  5143                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  5144  00113E  0E05               	movlw	5
  5145  001140  ECF1  F029         	call	_readAdcValue
  5146  001144  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  5147  001148  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  5148  00114C                     
  5149                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  5150  00114C  0E00               	movlw	0
  5151  00114E  6E20               	movwf	___flmul@a^0,c
  5152  001150  0E00               	movlw	0
  5153  001152  6E21               	movwf	(___flmul@a+1)^0,c
  5154  001154  0EA0               	movlw	160
  5155  001156  6E22               	movwf	(___flmul@a+2)^0,c
  5156  001158  0E40               	movlw	64
  5157  00115A  6E23               	movwf	(___flmul@a+3)^0,c
  5158  00115C  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  5159  001160  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  5160  001164  6A10               	clrf	(___xxtofl@val+2)^0,c
  5161  001166  6A11               	clrf	(___xxtofl@val+3)^0,c
  5162  001168  0E00               	movlw	0
  5163  00116A  ECAC  F01A         	call	___xxtofl
  5164  00116E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5165  001172  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5166  001176  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5167  00117A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5168  00117E  ECA9  F00F         	call	___flmul	;wreg free
  5169  001182  C01C  F035         	movff	?___flmul,___fldiv@b
  5170  001186  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5171  00118A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5172  00118E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5173  001192  0E00               	movlw	0
  5174  001194  6E39               	movwf	___fldiv@a^0,c
  5175  001196  0E00               	movlw	0
  5176  001198  6E3A               	movwf	(___fldiv@a+1)^0,c
  5177  00119A  0E80               	movlw	128
  5178  00119C  6E3B               	movwf	(___fldiv@a+2)^0,c
  5179  00119E  0E44               	movlw	68
  5180  0011A0  6E3C               	movwf	(___fldiv@a+3)^0,c
  5181  0011A2  ECBE  F011         	call	___fldiv	;wreg free
  5182  0011A6  C035  F144         	movff	?___fldiv,_procces_data+20
  5183  0011AA  C036  F145         	movff	?___fldiv+1,_procces_data+21
  5184  0011AE  C037  F146         	movff	?___fldiv+2,_procces_data+22
  5185  0011B2  C038  F147         	movff	?___fldiv+3,_procces_data+23
  5186  0011B6                     
  5187                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  5188  0011B6  0E00               	movlw	0
  5189  0011B8  6E39               	movwf	___fldiv@a^0,c
  5190  0011BA  0E00               	movlw	0
  5191  0011BC  6E3A               	movwf	(___fldiv@a+1)^0,c
  5192  0011BE  0EA0               	movlw	160
  5193  0011C0  6E3B               	movwf	(___fldiv@a+2)^0,c
  5194  0011C2  0E40               	movlw	64
  5195  0011C4  6E3C               	movwf	(___fldiv@a+3)^0,c
  5196  0011C6  0E00               	movlw	0
  5197  0011C8  6E20               	movwf	___flmul@a^0,c
  5198  0011CA  0EC0               	movlw	192
  5199  0011CC  6E21               	movwf	(___flmul@a+1)^0,c
  5200  0011CE  0E79               	movlw	121
  5201  0011D0  6E22               	movwf	(___flmul@a+2)^0,c
  5202  0011D2  0E44               	movlw	68
  5203  0011D4  6E23               	movwf	(___flmul@a+3)^0,c
  5204  0011D6  C144  F01C         	movff	_procces_data+20,___flmul@b
  5205  0011DA  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  5206  0011DE  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  5207  0011E2  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  5208  0011E6  ECA9  F00F         	call	___flmul	;wreg free
  5209  0011EA  C01C  F035         	movff	?___flmul,___fldiv@b
  5210  0011EE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5211  0011F2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5212  0011F6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5213  0011FA  ECBE  F011         	call	___fldiv	;wreg free
  5214  0011FE  C035  F04E         	movff	?___fldiv,___fltol@f1
  5215  001202  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5216  001206  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5217  00120A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5218  00120E  EC5F  F021         	call	___fltol	;wreg free
  5219  001212  C04E  F114         	movff	?___fltol,_convert_data+20
  5220  001216  C04F  F115         	movff	?___fltol+1,_convert_data+21
  5221  00121A  C050  F116         	movff	?___fltol+2,_convert_data+22
  5222  00121E  C051  F117         	movff	?___fltol+3,_convert_data+23
  5223                           
  5224                           ;fs_adc.c: 132:         break;
  5225  001222  EF29  F00A         	goto	l76
  5226  001226                     l5734:
  5227                           
  5228                           ; BSR set to: 1
  5229                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  5230  001226  0E06               	movlw	6
  5231  001228  ECF1  F029         	call	_readAdcValue
  5232  00122C  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  5233  001230  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  5234  001234                     
  5235                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  5236  001234  0E00               	movlw	0
  5237  001236  6E20               	movwf	___flmul@a^0,c
  5238  001238  0E00               	movlw	0
  5239  00123A  6E21               	movwf	(___flmul@a+1)^0,c
  5240  00123C  0EA0               	movlw	160
  5241  00123E  6E22               	movwf	(___flmul@a+2)^0,c
  5242  001240  0E40               	movlw	64
  5243  001242  6E23               	movwf	(___flmul@a+3)^0,c
  5244  001244  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  5245  001248  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  5246  00124C  6A10               	clrf	(___xxtofl@val+2)^0,c
  5247  00124E  6A11               	clrf	(___xxtofl@val+3)^0,c
  5248  001250  0E00               	movlw	0
  5249  001252  ECAC  F01A         	call	___xxtofl
  5250  001256  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5251  00125A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5252  00125E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5253  001262  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5254  001266  ECA9  F00F         	call	___flmul	;wreg free
  5255  00126A  C01C  F035         	movff	?___flmul,___fldiv@b
  5256  00126E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5257  001272  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5258  001276  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5259  00127A  0E00               	movlw	0
  5260  00127C  6E39               	movwf	___fldiv@a^0,c
  5261  00127E  0E00               	movlw	0
  5262  001280  6E3A               	movwf	(___fldiv@a+1)^0,c
  5263  001282  0E80               	movlw	128
  5264  001284  6E3B               	movwf	(___fldiv@a+2)^0,c
  5265  001286  0E44               	movlw	68
  5266  001288  6E3C               	movwf	(___fldiv@a+3)^0,c
  5267  00128A  ECBE  F011         	call	___fldiv	;wreg free
  5268  00128E  C035  F148         	movff	?___fldiv,_procces_data+24
  5269  001292  C036  F149         	movff	?___fldiv+1,_procces_data+25
  5270  001296  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  5271  00129A  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  5272  00129E                     
  5273                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  5274  00129E  0E00               	movlw	0
  5275  0012A0  6E39               	movwf	___fldiv@a^0,c
  5276  0012A2  0E00               	movlw	0
  5277  0012A4  6E3A               	movwf	(___fldiv@a+1)^0,c
  5278  0012A6  0EA0               	movlw	160
  5279  0012A8  6E3B               	movwf	(___fldiv@a+2)^0,c
  5280  0012AA  0E40               	movlw	64
  5281  0012AC  6E3C               	movwf	(___fldiv@a+3)^0,c
  5282  0012AE  0E00               	movlw	0
  5283  0012B0  6E20               	movwf	___flmul@a^0,c
  5284  0012B2  0EC0               	movlw	192
  5285  0012B4  6E21               	movwf	(___flmul@a+1)^0,c
  5286  0012B6  0E79               	movlw	121
  5287  0012B8  6E22               	movwf	(___flmul@a+2)^0,c
  5288  0012BA  0E44               	movlw	68
  5289  0012BC  6E23               	movwf	(___flmul@a+3)^0,c
  5290  0012BE  C148  F01C         	movff	_procces_data+24,___flmul@b
  5291  0012C2  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  5292  0012C6  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  5293  0012CA  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  5294  0012CE  ECA9  F00F         	call	___flmul	;wreg free
  5295  0012D2  C01C  F035         	movff	?___flmul,___fldiv@b
  5296  0012D6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5297  0012DA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5298  0012DE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5299  0012E2  ECBE  F011         	call	___fldiv	;wreg free
  5300  0012E6  C035  F04E         	movff	?___fldiv,___fltol@f1
  5301  0012EA  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5302  0012EE  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5303  0012F2  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5304  0012F6  EC5F  F021         	call	___fltol	;wreg free
  5305  0012FA  C04E  F118         	movff	?___fltol,_convert_data+24
  5306  0012FE  C04F  F119         	movff	?___fltol+1,_convert_data+25
  5307  001302  C050  F11A         	movff	?___fltol+2,_convert_data+26
  5308  001306  C051  F11B         	movff	?___fltol+3,_convert_data+27
  5309                           
  5310                           ;fs_adc.c: 138:         break;
  5311  00130A  EF29  F00A         	goto	l76
  5312  00130E                     l5740:
  5313                           
  5314                           ; BSR set to: 1
  5315                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  5316  00130E  0E07               	movlw	7
  5317  001310  ECF1  F029         	call	_readAdcValue
  5318  001314  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  5319  001318  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  5320  00131C                     
  5321                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  5322  00131C  0E00               	movlw	0
  5323  00131E  6E20               	movwf	___flmul@a^0,c
  5324  001320  0E00               	movlw	0
  5325  001322  6E21               	movwf	(___flmul@a+1)^0,c
  5326  001324  0EA0               	movlw	160
  5327  001326  6E22               	movwf	(___flmul@a+2)^0,c
  5328  001328  0E40               	movlw	64
  5329  00132A  6E23               	movwf	(___flmul@a+3)^0,c
  5330  00132C  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  5331  001330  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  5332  001334  6A10               	clrf	(___xxtofl@val+2)^0,c
  5333  001336  6A11               	clrf	(___xxtofl@val+3)^0,c
  5334  001338  0E00               	movlw	0
  5335  00133A  ECAC  F01A         	call	___xxtofl
  5336  00133E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5337  001342  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5338  001346  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5339  00134A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5340  00134E  ECA9  F00F         	call	___flmul	;wreg free
  5341  001352  C01C  F035         	movff	?___flmul,___fldiv@b
  5342  001356  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5343  00135A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5344  00135E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5345  001362  0E00               	movlw	0
  5346  001364  6E39               	movwf	___fldiv@a^0,c
  5347  001366  0E00               	movlw	0
  5348  001368  6E3A               	movwf	(___fldiv@a+1)^0,c
  5349  00136A  0E80               	movlw	128
  5350  00136C  6E3B               	movwf	(___fldiv@a+2)^0,c
  5351  00136E  0E44               	movlw	68
  5352  001370  6E3C               	movwf	(___fldiv@a+3)^0,c
  5353  001372  ECBE  F011         	call	___fldiv	;wreg free
  5354  001376  C035  F14C         	movff	?___fldiv,_procces_data+28
  5355  00137A  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  5356  00137E  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  5357  001382  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  5358  001386                     
  5359                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  5360  001386  0E00               	movlw	0
  5361  001388  6E39               	movwf	___fldiv@a^0,c
  5362  00138A  0E00               	movlw	0
  5363  00138C  6E3A               	movwf	(___fldiv@a+1)^0,c
  5364  00138E  0EA0               	movlw	160
  5365  001390  6E3B               	movwf	(___fldiv@a+2)^0,c
  5366  001392  0E40               	movlw	64
  5367  001394  6E3C               	movwf	(___fldiv@a+3)^0,c
  5368  001396  0E00               	movlw	0
  5369  001398  6E20               	movwf	___flmul@a^0,c
  5370  00139A  0EC0               	movlw	192
  5371  00139C  6E21               	movwf	(___flmul@a+1)^0,c
  5372  00139E  0E79               	movlw	121
  5373  0013A0  6E22               	movwf	(___flmul@a+2)^0,c
  5374  0013A2  0E44               	movlw	68
  5375  0013A4  6E23               	movwf	(___flmul@a+3)^0,c
  5376  0013A6  C14C  F01C         	movff	_procces_data+28,___flmul@b
  5377  0013AA  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  5378  0013AE  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  5379  0013B2  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  5380  0013B6  ECA9  F00F         	call	___flmul	;wreg free
  5381  0013BA  C01C  F035         	movff	?___flmul,___fldiv@b
  5382  0013BE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5383  0013C2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5384  0013C6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5385  0013CA  ECBE  F011         	call	___fldiv	;wreg free
  5386  0013CE  C035  F04E         	movff	?___fldiv,___fltol@f1
  5387  0013D2  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5388  0013D6  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5389  0013DA  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5390  0013DE  EC5F  F021         	call	___fltol	;wreg free
  5391  0013E2  C04E  F11C         	movff	?___fltol,_convert_data+28
  5392  0013E6  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5393  0013EA  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5394  0013EE  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5395                           
  5396                           ;fs_adc.c: 144:         break;
  5397  0013F2  EF29  F00A         	goto	l76
  5398  0013F6                     l5748:
  5399  0013F6  0101               	movlb	1	; () banked
  5400  0013F8  5194               	movf	(_timer_value+5)& (0+255),w,b
  5401  0013FA  6E58               	movwf	??_scanAdcConversion^0,c
  5402  0013FC  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5403                           
  5404                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5405                           ; Switch size 1, requested type "simple"
  5406                           ; Number of cases is 1, Range of values is 0 to 0
  5407                           ; switch strategies available:
  5408                           ; Name         Instructions Cycles
  5409                           ; simple_byte            4     3 (average)
  5410                           ;	Chosen strategy is simple_byte
  5411  0013FE  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5412  001400  0A00               	xorlw	0	; case 0
  5413  001402  B4D8               	btfsc	status,2,c
  5414  001404  EF06  F00A         	goto	l6618
  5415  001408  EF29  F00A         	goto	l76
  5416  00140C                     l6618:
  5417                           
  5418                           ; BSR set to: 1
  5419                           ; Switch size 1, requested type "simple"
  5420                           ; Number of cases is 8, Range of values is 1 to 8
  5421                           ; switch strategies available:
  5422                           ; Name         Instructions Cycles
  5423                           ; simple_byte           25    13 (average)
  5424                           ;	Chosen strategy is simple_byte
  5425  00140C  5058               	movf	??_scanAdcConversion^0,w,c
  5426  00140E  0A01               	xorlw	1	; case 1
  5427  001410  B4D8               	btfsc	status,2,c
  5428  001412  EF29  F006         	goto	l5696
  5429  001416  0A03               	xorlw	3	; case 2
  5430  001418  B4D8               	btfsc	status,2,c
  5431  00141A  EF9D  F006         	goto	l5702
  5432  00141E  0A01               	xorlw	1	; case 3
  5433  001420  B4D8               	btfsc	status,2,c
  5434  001422  EF11  F007         	goto	l5708
  5435  001426  0A07               	xorlw	7	; case 4
  5436  001428  B4D8               	btfsc	status,2,c
  5437  00142A  EFB7  F007         	goto	l5716
  5438  00142E  0A01               	xorlw	1	; case 5
  5439  001430  B4D8               	btfsc	status,2,c
  5440  001432  EF2B  F008         	goto	l5722
  5441  001436  0A03               	xorlw	3	; case 6
  5442  001438  B4D8               	btfsc	status,2,c
  5443  00143A  EF9F  F008         	goto	l5728
  5444  00143E  0A01               	xorlw	1	; case 7
  5445  001440  B4D8               	btfsc	status,2,c
  5446  001442  EF13  F009         	goto	l5734
  5447  001446  0A0F               	xorlw	15	; case 8
  5448  001448  B4D8               	btfsc	status,2,c
  5449  00144A  EF87  F009         	goto	l5740
  5450  00144E  EF29  F00A         	goto	l76
  5451  001452                     l76:
  5452  001452  0012               	return		;funcret
  5453  001454                     __end_of_scanAdcConversion:
  5454                           	callstack 0
  5455                           
  5456 ;; *************** function _readAdcValue *****************
  5457 ;; Defined at:
  5458 ;;		line 34 in file "fs_adc.c"
  5459 ;; Parameters:    Size  Location     Type
  5460 ;;  adcChannel      1    wreg     unsigned char 
  5461 ;; Auto vars:     Size  Location     Type
  5462 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5463 ;;  adcValue        2    5[COMRAM] unsigned short 
  5464 ;; Return value:  Size  Location     Type
  5465 ;;                  2    0[COMRAM] unsigned short 
  5466 ;; Registers used:
  5467 ;;		wreg, status,2, status,0
  5468 ;; Tracked objects:
  5469 ;;		On entry : 0/0
  5470 ;;		On exit  : 0/0
  5471 ;;		Unchanged: 0/0
  5472 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5473 ;;      Params:         2       0       0       0       0       0       0
  5474 ;;      Locals:         3       0       0       0       0       0       0
  5475 ;;      Temps:          2       0       0       0       0       0       0
  5476 ;;      Totals:         7       0       0       0       0       0       0
  5477 ;;Total ram usage:        7 bytes
  5478 ;; Hardware stack levels used:    1
  5479 ;; Hardware stack levels required when called:    1
  5480 ;; This function calls:
  5481 ;;		Nothing
  5482 ;; This function is called by:
  5483 ;;		_scanAdcConversion
  5484 ;; This function uses a non-reentrant model
  5485 ;;
  5486                           
  5487                           	psect	text19
  5488  0053E2                     __ptext19:
  5489                           	callstack 0
  5490  0053E2                     _readAdcValue:
  5491                           	callstack 24
  5492                           
  5493                           ;incstack = 0
  5494                           ;readAdcValue@adcChannel stored from wreg
  5495  0053E2  6E05               	movwf	readAdcValue@adcChannel^0,c
  5496  0053E4                     
  5497                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5498  0053E4  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5499  0053E8  4603               	rlncf	??_readAdcValue^0,f,c
  5500  0053EA  4603               	rlncf	??_readAdcValue^0,f,c
  5501  0053EC  50C2               	movf	194,w,c	;volatile
  5502  0053EE  1803               	xorwf	??_readAdcValue^0,w,c
  5503  0053F0  0B83               	andlw	-125
  5504  0053F2  1803               	xorwf	??_readAdcValue^0,w,c
  5505  0053F4  6EC2               	movwf	194,c	;volatile
  5506  0053F6                     
  5507                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5508  0053F6  80C2               	bsf	194,0,c	;volatile
  5509  0053F8                     
  5510                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5511  0053F8  82C2               	bsf	194,1,c	;volatile
  5512  0053FA                     l57:
  5513  0053FA  B2C2               	btfsc	194,1,c	;volatile
  5514  0053FC  EF02  F02A         	goto	u6391
  5515  005400  EF04  F02A         	goto	u6390
  5516  005404                     u6391:
  5517  005404  EFFD  F029         	goto	l57
  5518  005408                     u6390:
  5519  005408                     
  5520                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5521  005408  50C4               	movf	196,w,c	;volatile
  5522  00540A  6E04               	movwf	(??_readAdcValue+1)^0,c
  5523  00540C  6A03               	clrf	??_readAdcValue^0,c
  5524  00540E  50C3               	movf	195,w,c	;volatile
  5525  005410  2403               	addwf	??_readAdcValue^0,w,c
  5526  005412  6E06               	movwf	readAdcValue@adcValue^0,c
  5527  005414  0E00               	movlw	0
  5528  005416  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5529  005418  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5530  00541A                     
  5531                           ;fs_adc.c: 43:     return adcValue;
  5532  00541A  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5533  00541E  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5534  005422  0012               	return		;funcret
  5535  005424                     __end_of_readAdcValue:
  5536                           	callstack 0
  5537                           
  5538 ;; *************** function _calculatedAverageValue *****************
  5539 ;; Defined at:
  5540 ;;		line 154 in file "fs_adc.c"
  5541 ;; Parameters:    Size  Location     Type
  5542 ;;		None
  5543 ;; Auto vars:     Size  Location     Type
  5544 ;;		None
  5545 ;; Return value:  Size  Location     Type
  5546 ;;                  1    wreg      void 
  5547 ;; Registers used:
  5548 ;;		wreg, status,2, status,0, cstack
  5549 ;; Tracked objects:
  5550 ;;		On entry : 0/0
  5551 ;;		On exit  : 0/0
  5552 ;;		Unchanged: 0/0
  5553 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5554 ;;      Params:         0       0       0       0       0       0       0
  5555 ;;      Locals:         0       0       0       0       0       0       0
  5556 ;;      Temps:         24       0       0       0       0       0       0
  5557 ;;      Totals:        24       0       0       0       0       0       0
  5558 ;;Total ram usage:       24 bytes
  5559 ;; Hardware stack levels used:    1
  5560 ;; Hardware stack levels required when called:    2
  5561 ;; This function calls:
  5562 ;;		___lldiv
  5563 ;;		___lmul
  5564 ;;		___xxtofl
  5565 ;; This function is called by:
  5566 ;;		_startMotor
  5567 ;; This function uses a non-reentrant model
  5568 ;;
  5569                           
  5570                           	psect	text20
  5571  002716                     __ptext20:
  5572                           	callstack 0
  5573  002716                     _calculatedAverageValue:
  5574                           	callstack 24
  5575  002716                     
  5576                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5577  002716  0E00               	movlw	0
  5578  002718  0101               	movlb	1	; () banked
  5579  00271A  6F83               	movwf	_driver_limit& (0+255),b
  5580  00271C  0E00               	movlw	0
  5581  00271E  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5582  002720  0E00               	movlw	0
  5583  002722  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5584  002724  0E00               	movlw	0
  5585  002726  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5586                           
  5587                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5588  002728  0E00               	movlw	0
  5589  00272A  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5590  00272C  0E00               	movlw	0
  5591  00272E  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5592  002730  0E00               	movlw	0
  5593  002732  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5594  002734  0E00               	movlw	0
  5595  002736  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5596                           
  5597                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5598  002738  0E00               	movlw	0
  5599  00273A  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5600  00273C  0E00               	movlw	0
  5601  00273E  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5602  002740  0E00               	movlw	0
  5603  002742  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5604  002744  0E00               	movlw	0
  5605  002746  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5606  002748                     
  5607                           ; BSR set to: 1
  5608                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5609  002748  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5610  00274C  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5611  002750  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5612  002754  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5613  002758  0EB8               	movlw	184
  5614  00275A  6E05               	movwf	___lmul@multiplicand^0,c
  5615  00275C  0E0B               	movlw	11
  5616  00275E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5617  002760  0E00               	movlw	0
  5618  002762  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5619  002764  0E00               	movlw	0
  5620  002766  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5621  002768  ECE3  F027         	call	___lmul	;wreg free
  5622  00276C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5623  002770  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5624  002774  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5625  002778  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5626  00277C  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5627  002780  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5628  002784  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5629  002788  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5630  00278C  0ED0               	movlw	208
  5631  00278E  6E05               	movwf	___lmul@multiplicand^0,c
  5632  002790  0E07               	movlw	7
  5633  002792  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5634  002794  0E00               	movlw	0
  5635  002796  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5636  002798  0E00               	movlw	0
  5637  00279A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5638  00279C  ECE3  F027         	call	___lmul	;wreg free
  5639  0027A0  5001               	movf	?___lmul^0,w,c
  5640  0027A2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5641  0027A4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5642  0027A6  5002               	movf	(?___lmul+1)^0,w,c
  5643  0027A8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5644  0027AA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5645  0027AC  5003               	movf	(?___lmul+2)^0,w,c
  5646  0027AE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5647  0027B0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5648  0027B2  5004               	movf	(?___lmul+3)^0,w,c
  5649  0027B4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5650  0027B6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5651  0027B8  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5652  0027BC  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5653  0027C0  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5654  0027C4  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5655  0027C8  0EE8               	movlw	232
  5656  0027CA  6E05               	movwf	___lmul@multiplicand^0,c
  5657  0027CC  0E03               	movlw	3
  5658  0027CE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5659  0027D0  0E00               	movlw	0
  5660  0027D2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5661  0027D4  0E00               	movlw	0
  5662  0027D6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5663  0027D8  ECE3  F027         	call	___lmul	;wreg free
  5664  0027DC  5001               	movf	?___lmul^0,w,c
  5665  0027DE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5666  0027E0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5667  0027E2  5002               	movf	(?___lmul+1)^0,w,c
  5668  0027E4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5669  0027E6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5670  0027E8  5003               	movf	(?___lmul+2)^0,w,c
  5671  0027EA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5672  0027EC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5673  0027EE  5004               	movf	(?___lmul+3)^0,w,c
  5674  0027F0  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5675  0027F2  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5676  0027F4  0101               	movlb	1	; () banked
  5677  0027F6  5100               	movf	_convert_data& (0+255),w,b
  5678  0027F8  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5679  0027FA  6F83               	movwf	_driver_limit& (0+255),b
  5680  0027FC  5101               	movf	(_convert_data+1)& (0+255),w,b
  5681  0027FE  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5682  002800  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5683  002802  5102               	movf	(_convert_data+2)& (0+255),w,b
  5684  002804  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5685  002806  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5686  002808  5103               	movf	(_convert_data+3)& (0+255),w,b
  5687  00280A  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5688  00280C  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5689  00280E                     
  5690                           ; BSR set to: 1
  5691                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5692  00280E  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5693  002812  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5694  002816  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5695  00281A  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5696  00281E  0E58               	movlw	88
  5697  002820  6E05               	movwf	___lmul@multiplicand^0,c
  5698  002822  0E1B               	movlw	27
  5699  002824  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5700  002826  0E00               	movlw	0
  5701  002828  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5702  00282A  0E00               	movlw	0
  5703  00282C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5704  00282E  ECE3  F027         	call	___lmul	;wreg free
  5705  002832  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5706  002836  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5707  00283A  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5708  00283E  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5709  002842  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5710  002846  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5711  00284A  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5712  00284E  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5713  002852  0E70               	movlw	112
  5714  002854  6E05               	movwf	___lmul@multiplicand^0,c
  5715  002856  0E17               	movlw	23
  5716  002858  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5717  00285A  0E00               	movlw	0
  5718  00285C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5719  00285E  0E00               	movlw	0
  5720  002860  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5721  002862  ECE3  F027         	call	___lmul	;wreg free
  5722  002866  5001               	movf	?___lmul^0,w,c
  5723  002868  241C               	addwf	??_calculatedAverageValue^0,w,c
  5724  00286A  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5725  00286C  5002               	movf	(?___lmul+1)^0,w,c
  5726  00286E  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5727  002870  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5728  002872  5003               	movf	(?___lmul+2)^0,w,c
  5729  002874  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5730  002876  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5731  002878  5004               	movf	(?___lmul+3)^0,w,c
  5732  00287A  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5733  00287C  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5734  00287E  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5735  002882  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5736  002886  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5737  00288A  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5738  00288E  0E88               	movlw	136
  5739  002890  6E05               	movwf	___lmul@multiplicand^0,c
  5740  002892  0E13               	movlw	19
  5741  002894  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5742  002896  0E00               	movlw	0
  5743  002898  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5744  00289A  0E00               	movlw	0
  5745  00289C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5746  00289E  ECE3  F027         	call	___lmul	;wreg free
  5747  0028A2  5001               	movf	?___lmul^0,w,c
  5748  0028A4  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5749  0028A6  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5750  0028A8  5002               	movf	(?___lmul+1)^0,w,c
  5751  0028AA  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5752  0028AC  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5753  0028AE  5003               	movf	(?___lmul+2)^0,w,c
  5754  0028B0  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5755  0028B2  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5756  0028B4  5004               	movf	(?___lmul+3)^0,w,c
  5757  0028B6  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5758  0028B8  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5759  0028BA  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5760  0028BE  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5761  0028C2  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5762  0028C6  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5763  0028CA  0EA0               	movlw	160
  5764  0028CC  6E05               	movwf	___lmul@multiplicand^0,c
  5765  0028CE  0E0F               	movlw	15
  5766  0028D0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5767  0028D2  0E00               	movlw	0
  5768  0028D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5769  0028D6  0E00               	movlw	0
  5770  0028D8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5771  0028DA  ECE3  F027         	call	___lmul	;wreg free
  5772  0028DE  5001               	movf	?___lmul^0,w,c
  5773  0028E0  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5774  0028E2  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5775  0028E4  5002               	movf	(?___lmul+1)^0,w,c
  5776  0028E6  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5777  0028E8  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5778  0028EA  5003               	movf	(?___lmul+2)^0,w,c
  5779  0028EC  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5780  0028EE  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5781  0028F0  5004               	movf	(?___lmul+3)^0,w,c
  5782  0028F2  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5783  0028F4  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5784  0028F6  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5785  0028F8  0101               	movlb	1	; () banked
  5786  0028FA  2783               	addwf	_driver_limit& (0+255),f,b
  5787  0028FC  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5788  0028FE  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5789  002900  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5790  002902  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5791  002904  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5792  002906  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5793  002908                     
  5794                           ; BSR set to: 1
  5795                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5796  002908  5108               	movf	(_convert_data+8)& (0+255),w,b
  5797  00290A  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5798  00290C  6E1C               	movwf	??_calculatedAverageValue^0,c
  5799  00290E  5109               	movf	(_convert_data+9)& (0+255),w,b
  5800  002910  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5801  002912  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5802  002914  510A               	movf	(_convert_data+10)& (0+255),w,b
  5803  002916  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5804  002918  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5805  00291A  510B               	movf	(_convert_data+11)& (0+255),w,b
  5806  00291C  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5807  00291E  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5808  002920  510C               	movf	(_convert_data+12)& (0+255),w,b
  5809  002922  241C               	addwf	??_calculatedAverageValue^0,w,c
  5810  002924  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5811  002926  510D               	movf	(_convert_data+13)& (0+255),w,b
  5812  002928  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5813  00292A  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5814  00292C  510E               	movf	(_convert_data+14)& (0+255),w,b
  5815  00292E  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5816  002930  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5817  002932  510F               	movf	(_convert_data+15)& (0+255),w,b
  5818  002934  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5819  002936  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5820  002938  5110               	movf	(_convert_data+16)& (0+255),w,b
  5821  00293A  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5822  00293C  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5823  00293E  5111               	movf	(_convert_data+17)& (0+255),w,b
  5824  002940  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5825  002942  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5826  002944  5112               	movf	(_convert_data+18)& (0+255),w,b
  5827  002946  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5828  002948  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5829  00294A  5113               	movf	(_convert_data+19)& (0+255),w,b
  5830  00294C  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5831  00294E  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5832  002950  5114               	movf	(_convert_data+20)& (0+255),w,b
  5833  002952  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5834  002954  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5835  002956  5115               	movf	(_convert_data+21)& (0+255),w,b
  5836  002958  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5837  00295A  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5838  00295C  5116               	movf	(_convert_data+22)& (0+255),w,b
  5839  00295E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5840  002960  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5841  002962  5117               	movf	(_convert_data+23)& (0+255),w,b
  5842  002964  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5843  002966  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5844  002968  5118               	movf	(_convert_data+24)& (0+255),w,b
  5845  00296A  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5846  00296C  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5847  00296E  5119               	movf	(_convert_data+25)& (0+255),w,b
  5848  002970  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5849  002972  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5850  002974  511A               	movf	(_convert_data+26)& (0+255),w,b
  5851  002976  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5852  002978  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5853  00297A  511B               	movf	(_convert_data+27)& (0+255),w,b
  5854  00297C  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5855  00297E  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5856  002980  511C               	movf	(_convert_data+28)& (0+255),w,b
  5857  002982  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5858  002984  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5859  002986  511D               	movf	(_convert_data+29)& (0+255),w,b
  5860  002988  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5861  00298A  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5862  00298C  511E               	movf	(_convert_data+30)& (0+255),w,b
  5863  00298E  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5864  002990  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5865  002992  511F               	movf	(_convert_data+31)& (0+255),w,b
  5866  002994  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5867  002996  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5868  002998  5100               	movf	_convert_data& (0+255),w,b
  5869  00299A  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5870  00299C  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5871  00299E  5101               	movf	(_convert_data+1)& (0+255),w,b
  5872  0029A0  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5873  0029A2  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5874  0029A4  5102               	movf	(_convert_data+2)& (0+255),w,b
  5875  0029A6  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5876  0029A8  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5877  0029AA  5103               	movf	(_convert_data+3)& (0+255),w,b
  5878  0029AC  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5879  0029AE  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5880  0029B0                     
  5881                           ; BSR set to: 1
  5882                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5883  0029B0  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5884  0029B4  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5885  0029B8  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5886  0029BC  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5887  0029C0  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5888  0029C4  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5889  0029C8  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5890  0029CC  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5891  0029D0  EC52  F026         	call	___lldiv	;wreg free
  5892  0029D4  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5893  0029D8  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5894  0029DC  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5895  0029E0  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5896  0029E4  0E00               	movlw	0
  5897  0029E6  ECAC  F01A         	call	___xxtofl
  5898  0029EA  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5899  0029EE  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5900  0029F2  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5901  0029F6  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5902  0029FA  0012               	return		;funcret
  5903  0029FC                     __end_of_calculatedAverageValue:
  5904                           	callstack 0
  5905                           
  5906 ;; *************** function ___lmul *****************
  5907 ;; Defined at:
  5908 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5909 ;; Parameters:    Size  Location     Type
  5910 ;;  multiplier      4    0[COMRAM] unsigned long 
  5911 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5912 ;; Auto vars:     Size  Location     Type
  5913 ;;  product         4    8[COMRAM] unsigned long 
  5914 ;; Return value:  Size  Location     Type
  5915 ;;                  4    0[COMRAM] unsigned long 
  5916 ;; Registers used:
  5917 ;;		wreg, status,2, status,0
  5918 ;; Tracked objects:
  5919 ;;		On entry : 0/0
  5920 ;;		On exit  : 0/0
  5921 ;;		Unchanged: 0/0
  5922 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5923 ;;      Params:         8       0       0       0       0       0       0
  5924 ;;      Locals:         4       0       0       0       0       0       0
  5925 ;;      Temps:          0       0       0       0       0       0       0
  5926 ;;      Totals:        12       0       0       0       0       0       0
  5927 ;;Total ram usage:       12 bytes
  5928 ;; Hardware stack levels used:    1
  5929 ;; Hardware stack levels required when called:    1
  5930 ;; This function calls:
  5931 ;;		Nothing
  5932 ;; This function is called by:
  5933 ;;		_calculatedAverageValue
  5934 ;; This function uses a non-reentrant model
  5935 ;;
  5936                           
  5937                           	psect	text21
  5938  004FC6                     __ptext21:
  5939                           	callstack 0
  5940  004FC6                     ___lmul:
  5941                           	callstack 24
  5942  004FC6  0E00               	movlw	0
  5943  004FC8  6E09               	movwf	___lmul@product^0,c
  5944  004FCA  0E00               	movlw	0
  5945  004FCC  6E0A               	movwf	(___lmul@product+1)^0,c
  5946  004FCE  0E00               	movlw	0
  5947  004FD0  6E0B               	movwf	(___lmul@product+2)^0,c
  5948  004FD2  0E00               	movlw	0
  5949  004FD4  6E0C               	movwf	(___lmul@product+3)^0,c
  5950  004FD6                     l5500:
  5951  004FD6  A001               	btfss	___lmul@multiplier^0,0,c
  5952  004FD8  EFF0  F027         	goto	u6441
  5953  004FDC  EFF2  F027         	goto	u6440
  5954  004FE0                     u6441:
  5955  004FE0  EFFA  F027         	goto	l5504
  5956  004FE4                     u6440:
  5957  004FE4  5005               	movf	___lmul@multiplicand^0,w,c
  5958  004FE6  2609               	addwf	___lmul@product^0,f,c
  5959  004FE8  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5960  004FEA  220A               	addwfc	(___lmul@product+1)^0,f,c
  5961  004FEC  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5962  004FEE  220B               	addwfc	(___lmul@product+2)^0,f,c
  5963  004FF0  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5964  004FF2  220C               	addwfc	(___lmul@product+3)^0,f,c
  5965  004FF4                     l5504:
  5966  004FF4  90D8               	bcf	status,0,c
  5967  004FF6  3605               	rlcf	___lmul@multiplicand^0,f,c
  5968  004FF8  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5969  004FFA  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5970  004FFC  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5971  004FFE  90D8               	bcf	status,0,c
  5972  005000  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5973  005002  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5974  005004  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5975  005006  3201               	rrcf	___lmul@multiplier^0,f,c
  5976  005008  5001               	movf	___lmul@multiplier^0,w,c
  5977  00500A  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5978  00500C  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5979  00500E  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5980  005010  A4D8               	btfss	status,2,c
  5981  005012  EF0D  F028         	goto	u6451
  5982  005016  EF0F  F028         	goto	u6450
  5983  00501A                     u6451:
  5984  00501A  EFEB  F027         	goto	l5500
  5985  00501E                     u6450:
  5986  00501E  C009  F001         	movff	___lmul@product,?___lmul
  5987  005022  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5988  005026  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5989  00502A  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5990  00502E  0012               	return		;funcret
  5991  005030                     __end_of___lmul:
  5992                           	callstack 0
  5993                           
  5994 ;; *************** function ___lldiv *****************
  5995 ;; Defined at:
  5996 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5997 ;; Parameters:    Size  Location     Type
  5998 ;;  dividend        4    0[COMRAM] unsigned long 
  5999 ;;  divisor         4    4[COMRAM] unsigned long 
  6000 ;; Auto vars:     Size  Location     Type
  6001 ;;  quotient        4    8[COMRAM] unsigned long 
  6002 ;;  counter         1   12[COMRAM] unsigned char 
  6003 ;; Return value:  Size  Location     Type
  6004 ;;                  4    0[COMRAM] unsigned long 
  6005 ;; Registers used:
  6006 ;;		wreg, status,2, status,0
  6007 ;; Tracked objects:
  6008 ;;		On entry : 0/0
  6009 ;;		On exit  : 0/0
  6010 ;;		Unchanged: 0/0
  6011 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6012 ;;      Params:         8       0       0       0       0       0       0
  6013 ;;      Locals:         5       0       0       0       0       0       0
  6014 ;;      Temps:          0       0       0       0       0       0       0
  6015 ;;      Totals:        13       0       0       0       0       0       0
  6016 ;;Total ram usage:       13 bytes
  6017 ;; Hardware stack levels used:    1
  6018 ;; Hardware stack levels required when called:    1
  6019 ;; This function calls:
  6020 ;;		Nothing
  6021 ;; This function is called by:
  6022 ;;		_calculatedAverageValue
  6023 ;; This function uses a non-reentrant model
  6024 ;;
  6025                           
  6026                           	psect	text22
  6027  004CA4                     __ptext22:
  6028                           	callstack 0
  6029  004CA4                     ___lldiv:
  6030                           	callstack 24
  6031  004CA4  0E00               	movlw	0
  6032  004CA6  6E09               	movwf	___lldiv@quotient^0,c
  6033  004CA8  0E00               	movlw	0
  6034  004CAA  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6035  004CAC  0E00               	movlw	0
  6036  004CAE  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6037  004CB0  0E00               	movlw	0
  6038  004CB2  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6039  004CB4  5005               	movf	___lldiv@divisor^0,w,c
  6040  004CB6  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6041  004CB8  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6042  004CBA  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6043  004CBC  B4D8               	btfsc	status,2,c
  6044  004CBE  EF63  F026         	goto	u6461
  6045  004CC2  EF65  F026         	goto	u6460
  6046  004CC6                     u6461:
  6047  004CC6  EF9B  F026         	goto	l718
  6048  004CCA                     u6460:
  6049  004CCA  0E01               	movlw	1
  6050  004CCC  6E0D               	movwf	___lldiv@counter^0,c
  6051  004CCE  EF6F  F026         	goto	l5516
  6052  004CD2                     l5514:
  6053  004CD2  90D8               	bcf	status,0,c
  6054  004CD4  3605               	rlcf	___lldiv@divisor^0,f,c
  6055  004CD6  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6056  004CD8  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6057  004CDA  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6058  004CDC  2A0D               	incf	___lldiv@counter^0,f,c
  6059  004CDE                     l5516:
  6060  004CDE  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6061  004CE0  EF74  F026         	goto	u6471
  6062  004CE4  EF76  F026         	goto	u6470
  6063  004CE8                     u6471:
  6064  004CE8  EF69  F026         	goto	l5514
  6065  004CEC                     u6470:
  6066  004CEC                     l5518:
  6067  004CEC  90D8               	bcf	status,0,c
  6068  004CEE  3609               	rlcf	___lldiv@quotient^0,f,c
  6069  004CF0  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6070  004CF2  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6071  004CF4  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6072  004CF6  5005               	movf	___lldiv@divisor^0,w,c
  6073  004CF8  5C01               	subwf	___lldiv@dividend^0,w,c
  6074  004CFA  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6075  004CFC  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6076  004CFE  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6077  004D00  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6078  004D02  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6079  004D04  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6080  004D06  A0D8               	btfss	status,0,c
  6081  004D08  EF88  F026         	goto	u6481
  6082  004D0C  EF8A  F026         	goto	u6480
  6083  004D10                     u6481:
  6084  004D10  EF93  F026         	goto	l5526
  6085  004D14                     u6480:
  6086  004D14  5005               	movf	___lldiv@divisor^0,w,c
  6087  004D16  5E01               	subwf	___lldiv@dividend^0,f,c
  6088  004D18  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6089  004D1A  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6090  004D1C  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6091  004D1E  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6092  004D20  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6093  004D22  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6094  004D24  8009               	bsf	___lldiv@quotient^0,0,c
  6095  004D26                     l5526:
  6096  004D26  90D8               	bcf	status,0,c
  6097  004D28  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6098  004D2A  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6099  004D2C  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6100  004D2E  3205               	rrcf	___lldiv@divisor^0,f,c
  6101  004D30  2E0D               	decfsz	___lldiv@counter^0,f,c
  6102  004D32  EF76  F026         	goto	l5518
  6103  004D36                     l718:
  6104  004D36  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6105  004D3A  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6106  004D3E  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6107  004D42  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6108  004D46  0012               	return		;funcret
  6109  004D48                     __end_of___lldiv:
  6110                           	callstack 0
  6111                           
  6112 ;; *************** function _exitLine *****************
  6113 ;; Defined at:
  6114 ;;		line 636 in file "fs_menu_controller.c"
  6115 ;; Parameters:    Size  Location     Type
  6116 ;;		None
  6117 ;; Auto vars:     Size  Location     Type
  6118 ;;		None
  6119 ;; Return value:  Size  Location     Type
  6120 ;;                  1    wreg      void 
  6121 ;; Registers used:
  6122 ;;		None
  6123 ;; Tracked objects:
  6124 ;;		On entry : 0/0
  6125 ;;		On exit  : 0/0
  6126 ;;		Unchanged: 0/0
  6127 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6128 ;;      Params:         0       0       0       0       0       0       0
  6129 ;;      Locals:         0       0       0       0       0       0       0
  6130 ;;      Temps:          0       0       0       0       0       0       0
  6131 ;;      Totals:         0       0       0       0       0       0       0
  6132 ;;Total ram usage:        0 bytes
  6133 ;; Hardware stack levels used:    1
  6134 ;; Hardware stack levels required when called:    1
  6135 ;; This function calls:
  6136 ;;		Nothing
  6137 ;; This function is called by:
  6138 ;;		_stateMachine
  6139 ;; This function uses a non-reentrant model
  6140 ;;
  6141                           
  6142                           	psect	text23
  6143  0057CE                     __ptext23:
  6144                           	callstack 0
  6145  0057CE                     _exitLine:
  6146                           	callstack 27
  6147  0057CE  0012               	return		;funcret
  6148  0057D0                     __end_of_exitLine:
  6149                           	callstack 0
  6150                           
  6151 ;; *************** function _driverTimeSettingMenu *****************
  6152 ;; Defined at:
  6153 ;;		line 582 in file "fs_menu_controller.c"
  6154 ;; Parameters:    Size  Location     Type
  6155 ;;		None
  6156 ;; Auto vars:     Size  Location     Type
  6157 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  6158 ;; Return value:  Size  Location     Type
  6159 ;;                  1    wreg      void 
  6160 ;; Registers used:
  6161 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6162 ;; Tracked objects:
  6163 ;;		On entry : 0/0
  6164 ;;		On exit  : 0/0
  6165 ;;		Unchanged: 0/0
  6166 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6167 ;;      Params:         0       0       0       0       0       0       0
  6168 ;;      Locals:         0      16       0       0       0       0       0
  6169 ;;      Temps:          0       0       0       0       0       0       0
  6170 ;;      Totals:         0      16       0       0       0       0       0
  6171 ;;Total ram usage:       16 bytes
  6172 ;; Hardware stack levels used:    1
  6173 ;; Hardware stack levels required when called:    9
  6174 ;; This function calls:
  6175 ;;		_Lcd_Set_Cursor
  6176 ;;		_Lcd_Write_String
  6177 ;;		_eepromWrite
  6178 ;;		_sprintf
  6179 ;;		_stopMotor
  6180 ;; This function is called by:
  6181 ;;		_stateMachine
  6182 ;; This function uses a non-reentrant model
  6183 ;;
  6184                           
  6185                           	psect	text24
  6186  003E5E                     __ptext24:
  6187                           	callstack 0
  6188  003E5E                     _driverTimeSettingMenu:
  6189                           	callstack 19
  6190  003E5E                     
  6191                           ;fs_menu_controller.c: 584:     char textCursor2[16] = {0};
  6192  003E5E  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  6193  003E62  0E0F               	movlw	15
  6194  003E64                     u7081:
  6195  003E64  6ADE               	clrf	postinc2,c
  6196  003E66  06E8               	decf	wreg,f,c
  6197  003E68  E2FD               	bc	u7081
  6198  003E6A                     
  6199                           ;fs_menu_controller.c: 586:     stopMotor();
  6200  003E6A  EC71  F02A         	call	_stopMotor	;wreg free
  6201  003E6E                     
  6202                           ;fs_menu_controller.c: 588:     if (menu_flags.menu_input_flag == 1)
  6203  003E6E  0101               	movlb	1	; () banked
  6204  003E70  0597               	decf	_menu_flags& (0+255),w,b
  6205  003E72  A4D8               	btfss	status,2,c
  6206  003E74  EF3E  F01F         	goto	u7091
  6207  003E78  EF40  F01F         	goto	u7090
  6208  003E7C                     u7091:
  6209  003E7C  EF45  F01F         	goto	l5988
  6210  003E80                     u7090:
  6211  003E80                     
  6212                           ; BSR set to: 1
  6213                           ;fs_menu_controller.c: 589:     {;fs_menu_controller.c: 590:         menu_flags.menu_inp
      +                          ut_flag = 0;
  6214  003E80  0E00               	movlw	0
  6215  003E82  6F97               	movwf	_menu_flags& (0+255),b
  6216                           
  6217                           ;fs_menu_controller.c: 591:         menu_selected = STOP_TIME_SETTING;
  6218  003E84  0E02               	movlw	2
  6219  003E86  0100               	movlb	0	; () banked
  6220  003E88  6FFB               	movwf	_menu_selected& (0+255),b
  6221  003E8A                     l5988:
  6222                           
  6223                           ;fs_menu_controller.c: 594:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  6224  003E8A  0101               	movlb	1	; () banked
  6225  003E8C  059B               	decf	(_menu_flags+4)& (0+255),w,b
  6226  003E8E  A4D8               	btfss	status,2,c
  6227  003E90  EF4C  F01F         	goto	u7101
  6228  003E94  EF4E  F01F         	goto	u7100
  6229  003E98                     u7101:
  6230  003E98  EF6A  F01F         	goto	l6006
  6231  003E9C                     u7100:
  6232  003E9C                     
  6233                           ; BSR set to: 1
  6234  003E9C  0E1E               	movlw	30
  6235  003E9E  0100               	movlb	0	; () banked
  6236  003EA0  61F3               	cpfslt	_menu_value& (0+255),b
  6237  003EA2  EF55  F01F         	goto	u7111
  6238  003EA6  EF57  F01F         	goto	u7110
  6239  003EAA                     u7111:
  6240  003EAA  EF6A  F01F         	goto	l6006
  6241  003EAE                     u7110:
  6242  003EAE                     
  6243                           ; BSR set to: 0
  6244                           ;fs_menu_controller.c: 595:     {;fs_menu_controller.c: 596:         menu_flags.menu_inc
      +                          rease_flag = 0;
  6245  003EAE  0E00               	movlw	0
  6246  003EB0  0101               	movlb	1	; () banked
  6247  003EB2  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  6248  003EB4                     
  6249                           ; BSR set to: 1
  6250                           ;fs_menu_controller.c: 597:         menu_value.driver_time++;
  6251  003EB4  0100               	movlb	0	; () banked
  6252  003EB6  2BF3               	incf	_menu_value& (0+255),f,b
  6253  003EB8                     
  6254                           ; BSR set to: 0
  6255                           ;fs_menu_controller.c: 598:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6256  003EB8  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6257  003EBC  0E00               	movlw	0
  6258  003EBE  EC4F  F02B         	call	_eepromWrite
  6259  003EC2                     
  6260                           ;fs_menu_controller.c: 599:         timer_value.minute =0 ;
  6261  003EC2  0E00               	movlw	0
  6262  003EC4  0101               	movlb	1	; () banked
  6263  003EC6  6F90               	movwf	(_timer_value+1)& (0+255),b
  6264  003EC8                     
  6265                           ; BSR set to: 1
  6266                           ;fs_menu_controller.c: 600:         timer_value.second = 0;
  6267  003EC8  0E00               	movlw	0
  6268  003ECA  6F8F               	movwf	_timer_value& (0+255),b
  6269  003ECC                     
  6270                           ; BSR set to: 1
  6271                           ;fs_menu_controller.c: 601:         timer_value.remainingSecond = 0;
  6272  003ECC  0E00               	movlw	0
  6273  003ECE  6F91               	movwf	(_timer_value+2)& (0+255),b
  6274  003ED0                     
  6275                           ; BSR set to: 1
  6276                           ;fs_menu_controller.c: 602:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  6277  003ED0  C0F3  F192         	movff	_menu_value,_timer_value+3
  6278  003ED4                     l6006:
  6279                           
  6280                           ;fs_menu_controller.c: 605:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  6281  003ED4  0101               	movlb	1	; () banked
  6282  003ED6  059C               	decf	(_menu_flags+5)& (0+255),w,b
  6283  003ED8  A4D8               	btfss	status,2,c
  6284  003EDA  EF71  F01F         	goto	u7121
  6285  003EDE  EF73  F01F         	goto	u7120
  6286  003EE2                     u7121:
  6287  003EE2  EF8F  F01F         	goto	l6024
  6288  003EE6                     u7120:
  6289  003EE6                     
  6290                           ; BSR set to: 1
  6291  003EE6  0100               	movlb	0	; () banked
  6292  003EE8  51F3               	movf	_menu_value& (0+255),w,b
  6293  003EEA  B4D8               	btfsc	status,2,c
  6294  003EEC  EF7A  F01F         	goto	u7131
  6295  003EF0  EF7C  F01F         	goto	u7130
  6296  003EF4                     u7131:
  6297  003EF4  EF8F  F01F         	goto	l6024
  6298  003EF8                     u7130:
  6299  003EF8                     
  6300                           ; BSR set to: 0
  6301                           ;fs_menu_controller.c: 606:     {;fs_menu_controller.c: 607:          menu_flags.menu_de
      +                          crease_flag = 0;
  6302  003EF8  0E00               	movlw	0
  6303  003EFA  0101               	movlb	1	; () banked
  6304  003EFC  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  6305  003EFE                     
  6306                           ; BSR set to: 1
  6307                           ;fs_menu_controller.c: 608:          menu_value.driver_time--;
  6308  003EFE  0100               	movlb	0	; () banked
  6309  003F00  07F3               	decf	_menu_value& (0+255),f,b
  6310  003F02                     
  6311                           ; BSR set to: 0
  6312                           ;fs_menu_controller.c: 609:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6313  003F02  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6314  003F06  0E00               	movlw	0
  6315  003F08  EC4F  F02B         	call	_eepromWrite
  6316  003F0C                     
  6317                           ;fs_menu_controller.c: 610:          timer_value.minute =0 ;
  6318  003F0C  0E00               	movlw	0
  6319  003F0E  0101               	movlb	1	; () banked
  6320  003F10  6F90               	movwf	(_timer_value+1)& (0+255),b
  6321  003F12                     
  6322                           ; BSR set to: 1
  6323                           ;fs_menu_controller.c: 611:          timer_value.second = 0;
  6324  003F12  0E00               	movlw	0
  6325  003F14  6F8F               	movwf	_timer_value& (0+255),b
  6326  003F16                     
  6327                           ; BSR set to: 1
  6328                           ;fs_menu_controller.c: 612:          timer_value.remainingSecond = 0;
  6329  003F16  0E00               	movlw	0
  6330  003F18  6F91               	movwf	(_timer_value+2)& (0+255),b
  6331  003F1A                     
  6332                           ; BSR set to: 1
  6333                           ;fs_menu_controller.c: 613:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  6334  003F1A  C0F3  F192         	movff	_menu_value,_timer_value+3
  6335  003F1E                     l6024:
  6336                           
  6337                           ;fs_menu_controller.c: 615:     Lcd_Set_Cursor(1,1);
  6338  003F1E  0E01               	movlw	1
  6339  003F20  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6340  003F22  0E01               	movlw	1
  6341  003F24  EC4D  F028         	call	_Lcd_Set_Cursor
  6342  003F28                     
  6343                           ;fs_menu_controller.c: 616:     Lcd_Write_String("HAREKT ZAMANI dk");
  6344  003F28  0E5E               	movlw	low STR_17
  6345  003F2A  6E05               	movwf	Lcd_Write_String@a^0,c
  6346  003F2C  0E7F               	movlw	high STR_17
  6347  003F2E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6348  003F30  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  6349  003F34                     
  6350                           ;fs_menu_controller.c: 617:     Lcd_Set_Cursor(2,1);
  6351  003F34  0E01               	movlw	1
  6352  003F36  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6353  003F38  0E02               	movlw	2
  6354  003F3A  EC4D  F028         	call	_Lcd_Set_Cursor
  6355  003F3E                     
  6356                           ;fs_menu_controller.c: 618:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  6357  003F3E  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6358  003F40  0100               	movlb	0	; () banked
  6359  003F42  6FCF               	movwf	sprintf@s& (0+255),b
  6360  003F44  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6361  003F46  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  6362  003F48  0EF7               	movlw	low STR_14
  6363  003F4A  6FD1               	movwf	sprintf@fmt& (0+255),b
  6364  003F4C  0E7E               	movlw	high STR_14
  6365  003F4E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  6366  003F50  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  6367  003F54  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  6368  003F56  EC35  F029         	call	_sprintf	;wreg free
  6369  003F5A                     
  6370                           ;fs_menu_controller.c: 619:     Lcd_Write_String(textCursor2);
  6371  003F5A  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6372  003F5C  6E05               	movwf	Lcd_Write_String@a^0,c
  6373  003F5E  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6374  003F60  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6375  003F62  ECEF  F026         	call	_Lcd_Write_String	;wreg free
  6376  003F66                     
  6377                           ;fs_menu_controller.c: 621:     if(timer_value.menu_login_delay == 100)
  6378  003F66  0E64               	movlw	100
  6379  003F68  0101               	movlb	1	; () banked
  6380  003F6A  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  6381  003F6C  A4D8               	btfss	status,2,c
  6382  003F6E  EFBB  F01F         	goto	u7141
  6383  003F72  EFBD  F01F         	goto	u7140
  6384  003F76                     u7141:
  6385  003F76  EFC4  F01F         	goto	l512
  6386  003F7A                     u7140:
  6387  003F7A                     
  6388                           ; BSR set to: 1
  6389                           ;fs_menu_controller.c: 622:     {;fs_menu_controller.c: 623:         button_bounce_contr
      +                          oller.menu = 0;
  6390  003F7A  0E00               	movlw	0
  6391  003F7C  6F9D               	movwf	_button_bounce_controller& (0+255),b
  6392                           
  6393                           ;fs_menu_controller.c: 624:         timer_value.menu_login_delay = 0;
  6394  003F7E  0E00               	movlw	0
  6395  003F80  6F93               	movwf	(_timer_value+4)& (0+255),b
  6396                           
  6397                           ;fs_menu_controller.c: 625:         menu_selected = PAUSE_MENU;
  6398  003F82  0E06               	movlw	6
  6399  003F84  0100               	movlb	0	; () banked
  6400  003F86  6FFB               	movwf	_menu_selected& (0+255),b
  6401  003F88                     l512:
  6402  003F88  0012               	return		;funcret
  6403  003F8A                     __end_of_driverTimeSettingMenu:
  6404                           	callstack 0
  6405                           
  6406 ;; *************** function _stopMotor *****************
  6407 ;; Defined at:
  6408 ;;		line 77 in file "fs_speed_controller.c"
  6409 ;; Parameters:    Size  Location     Type
  6410 ;;		None
  6411 ;; Auto vars:     Size  Location     Type
  6412 ;;		None
  6413 ;; Return value:  Size  Location     Type
  6414 ;;                  1    wreg      void 
  6415 ;; Registers used:
  6416 ;;		wreg, status,2, status,0, cstack
  6417 ;; Tracked objects:
  6418 ;;		On entry : 0/0
  6419 ;;		On exit  : 0/0
  6420 ;;		Unchanged: 0/0
  6421 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6422 ;;      Params:         0       0       0       0       0       0       0
  6423 ;;      Locals:         0       0       0       0       0       0       0
  6424 ;;      Temps:          0       0       0       0       0       0       0
  6425 ;;      Totals:         0       0       0       0       0       0       0
  6426 ;;Total ram usage:        0 bytes
  6427 ;; Hardware stack levels used:    1
  6428 ;; Hardware stack levels required when called:    3
  6429 ;; This function calls:
  6430 ;;		_PWM1_setDC
  6431 ;;		_PWM2_setDC
  6432 ;; This function is called by:
  6433 ;;		_stopMenu
  6434 ;;		_pauseMenu
  6435 ;;		_secretMenu
  6436 ;;		_speedLimitSettingMenu
  6437 ;;		_stopTimeSettingMenu
  6438 ;;		_driverTimeSettingMenu
  6439 ;; This function uses a non-reentrant model
  6440 ;;
  6441                           
  6442                           	psect	text25
  6443  0054E2                     __ptext25:
  6444                           	callstack 0
  6445  0054E2                     _stopMotor:
  6446                           	callstack 24
  6447  0054E2                     
  6448                           ;fs_speed_controller.c: 79:     controller.rightMotorSpeed = 0;
  6449  0054E2  0E00               	movlw	0
  6450  0054E4  0101               	movlb	1	; () banked
  6451  0054E6  6F59               	movwf	(_controller+9)& (0+255),b
  6452  0054E8  0E00               	movlw	0
  6453  0054EA  6F58               	movwf	(_controller+8)& (0+255),b
  6454                           
  6455                           ;fs_speed_controller.c: 80:     controller.leftMotorSpeed = 0;
  6456  0054EC  0E00               	movlw	0
  6457  0054EE  6F57               	movwf	(_controller+7)& (0+255),b
  6458  0054F0  0E00               	movlw	0
  6459  0054F2  6F56               	movwf	(_controller+6)& (0+255),b
  6460                           
  6461                           ;fs_speed_controller.c: 81:     driver_limit.ortalama = 0;
  6462  0054F4  0E00               	movlw	0
  6463  0054F6  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  6464  0054F8  0E00               	movlw	0
  6465  0054FA  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  6466  0054FC  0E00               	movlw	0
  6467  0054FE  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  6468  005500  0E00               	movlw	0
  6469  005502  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  6470  005504                     
  6471                           ; BSR set to: 1
  6472                           ;fs_speed_controller.c: 82:     PWM1_setDC(controller.leftMotorSpeed);
  6473  005504  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  6474  005508  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  6475  00550C  EC6B  F027         	call	_PWM1_setDC	;wreg free
  6476  005510                     
  6477                           ;fs_speed_controller.c: 83:     PWM2_setDC(controller.rightMotorSpeed);
  6478  005510  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  6479  005514  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  6480  005518  EC2E  F027         	call	_PWM2_setDC	;wreg free
  6481  00551C  0012               	return		;funcret
  6482  00551E                     __end_of_stopMotor:
  6483                           	callstack 0
  6484                           
  6485 ;; *************** function _PWM2_setDC *****************
  6486 ;; Defined at:
  6487 ;;		line 76 in file "fs_pwm.c"
  6488 ;; Parameters:    Size  Location     Type
  6489 ;;  dutycycle       2   87[COMRAM] short 
  6490 ;; Auto vars:     Size  Location     Type
  6491 ;;  duty            2   91[COMRAM] unsigned short 
  6492 ;; Return value:  Size  Location     Type
  6493 ;;                  1    wreg      void 
  6494 ;; Registers used:
  6495 ;;		wreg, status,2, status,0, cstack
  6496 ;; Tracked objects:
  6497 ;;		On entry : 0/0
  6498 ;;		On exit  : 0/0
  6499 ;;		Unchanged: 0/0
  6500 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6501 ;;      Params:         2       0       0       0       0       0       0
  6502 ;;      Locals:         2       0       0       0       0       0       0
  6503 ;;      Temps:          2       0       0       0       0       0       0
  6504 ;;      Totals:         6       0       0       0       0       0       0
  6505 ;;Total ram usage:        6 bytes
  6506 ;; Hardware stack levels used:    1
  6507 ;; Hardware stack levels required when called:    2
  6508 ;; This function calls:
  6509 ;;		___fltol
  6510 ;;		___xxtofl
  6511 ;;		_fabsf
  6512 ;; This function is called by:
  6513 ;;		_main
  6514 ;;		_stopMotor
  6515 ;;		_startMotor
  6516 ;; This function uses a non-reentrant model
  6517 ;;
  6518                           
  6519                           	psect	text26
  6520  004E5C                     __ptext26:
  6521                           	callstack 0
  6522  004E5C                     _PWM2_setDC:
  6523                           	callstack 24
  6524  004E5C                     
  6525                           ;fs_pwm.c: 80:     if (dutycycle <= 1023)
  6526  004E5C  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  6527  004E5E  EF3A  F027         	goto	u6810
  6528  004E62  0E04               	movlw	4
  6529  004E64  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  6530  004E66  B0D8               	btfsc	status,0,c
  6531  004E68  EF38  F027         	goto	u6811
  6532  004E6C  EF3A  F027         	goto	u6810
  6533  004E70                     u6811:
  6534  004E70  EF6A  F027         	goto	l578
  6535  004E74                     u6810:
  6536  004E74                     
  6537                           ;fs_pwm.c: 81:     {;fs_pwm.c: 82:         duty = (uint16_t) fabsf(dutycycle);
  6538  004E74  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  6539  004E78  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  6540  004E7C  0E00               	movlw	0
  6541  004E7E  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6542  004E80  0EFF               	movlw	-1
  6543  004E82  6E10               	movwf	(___xxtofl@val+2)^0,c
  6544  004E84  6E11               	movwf	(___xxtofl@val+3)^0,c
  6545  004E86  0E01               	movlw	1
  6546  004E88  ECAC  F01A         	call	___xxtofl
  6547  004E8C  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6548  004E90  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6549  004E94  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6550  004E98  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6551  004E9C  EC35  F02B         	call	_fabsf	;wreg free
  6552  004EA0  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6553  004EA4  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6554  004EA8  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6555  004EAC  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6556  004EB0  EC5F  F021         	call	___fltol	;wreg free
  6557  004EB4  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  6558  004EB8  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  6559  004EBC                     
  6560                           ;fs_pwm.c: 83:         CCPR2L = duty>>2;
  6561  004EBC  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  6562  004EC0  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  6563  004EC4  90D8               	bcf	status,0,c
  6564  004EC6  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6565  004EC8  325A               	rrcf	??_PWM2_setDC^0,f,c
  6566  004ECA  90D8               	bcf	status,0,c
  6567  004ECC  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6568  004ECE  325A               	rrcf	??_PWM2_setDC^0,f,c
  6569  004ED0  505A               	movf	??_PWM2_setDC^0,w,c
  6570  004ED2  6E67               	movwf	103,c	;volatile
  6571  004ED4                     l578:
  6572  004ED4  0012               	return		;funcret
  6573  004ED6                     __end_of_PWM2_setDC:
  6574                           	callstack 0
  6575                           
  6576 ;; *************** function _PWM1_setDC *****************
  6577 ;; Defined at:
  6578 ;;		line 60 in file "fs_pwm.c"
  6579 ;; Parameters:    Size  Location     Type
  6580 ;;  dutycycle       2   87[COMRAM] short 
  6581 ;; Auto vars:     Size  Location     Type
  6582 ;;  duty            2   91[COMRAM] unsigned short 
  6583 ;; Return value:  Size  Location     Type
  6584 ;;                  1    wreg      void 
  6585 ;; Registers used:
  6586 ;;		wreg, status,2, status,0, cstack
  6587 ;; Tracked objects:
  6588 ;;		On entry : 0/0
  6589 ;;		On exit  : 0/0
  6590 ;;		Unchanged: 0/0
  6591 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6592 ;;      Params:         2       0       0       0       0       0       0
  6593 ;;      Locals:         2       0       0       0       0       0       0
  6594 ;;      Temps:          2       0       0       0       0       0       0
  6595 ;;      Totals:         6       0       0       0       0       0       0
  6596 ;;Total ram usage:        6 bytes
  6597 ;; Hardware stack levels used:    1
  6598 ;; Hardware stack levels required when called:    2
  6599 ;; This function calls:
  6600 ;;		___fltol
  6601 ;;		___xxtofl
  6602 ;;		_fabsf
  6603 ;; This function is called by:
  6604 ;;		_main
  6605 ;;		_stopMotor
  6606 ;;		_startMotor
  6607 ;; This function uses a non-reentrant model
  6608 ;;
  6609                           
  6610                           	psect	text27
  6611  004ED6                     __ptext27:
  6612                           	callstack 0
  6613  004ED6                     _PWM1_setDC:
  6614                           	callstack 24
  6615  004ED6                     
  6616                           ;fs_pwm.c: 64:     if (dutycycle <= 1023)
  6617  004ED6  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  6618  004ED8  EF77  F027         	goto	u6800
  6619  004EDC  0E04               	movlw	4
  6620  004EDE  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  6621  004EE0  B0D8               	btfsc	status,0,c
  6622  004EE2  EF75  F027         	goto	u6801
  6623  004EE6  EF77  F027         	goto	u6800
  6624  004EEA                     u6801:
  6625  004EEA  EFA7  F027         	goto	l574
  6626  004EEE                     u6800:
  6627  004EEE                     
  6628                           ;fs_pwm.c: 65:     {;fs_pwm.c: 66:         duty = (uint16_t) fabsf(dutycycle);
  6629  004EEE  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  6630  004EF2  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  6631  004EF6  0E00               	movlw	0
  6632  004EF8  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6633  004EFA  0EFF               	movlw	-1
  6634  004EFC  6E10               	movwf	(___xxtofl@val+2)^0,c
  6635  004EFE  6E11               	movwf	(___xxtofl@val+3)^0,c
  6636  004F00  0E01               	movlw	1
  6637  004F02  ECAC  F01A         	call	___xxtofl
  6638  004F06  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6639  004F0A  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6640  004F0E  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6641  004F12  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6642  004F16  EC35  F02B         	call	_fabsf	;wreg free
  6643  004F1A  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6644  004F1E  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6645  004F22  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6646  004F26  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6647  004F2A  EC5F  F021         	call	___fltol	;wreg free
  6648  004F2E  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  6649  004F32  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  6650  004F36                     
  6651                           ;fs_pwm.c: 67:         CCPR1L = duty>>2;
  6652  004F36  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  6653  004F3A  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  6654  004F3E  90D8               	bcf	status,0,c
  6655  004F40  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6656  004F42  325A               	rrcf	??_PWM1_setDC^0,f,c
  6657  004F44  90D8               	bcf	status,0,c
  6658  004F46  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6659  004F48  325A               	rrcf	??_PWM1_setDC^0,f,c
  6660  004F4A  505A               	movf	??_PWM1_setDC^0,w,c
  6661  004F4C  6EBE               	movwf	190,c	;volatile
  6662  004F4E                     l574:
  6663  004F4E  0012               	return		;funcret
  6664  004F50                     __end_of_PWM1_setDC:
  6665                           	callstack 0
  6666                           
  6667 ;; *************** function _fabsf *****************
  6668 ;; Defined at:
  6669 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  6670 ;; Parameters:    Size  Location     Type
  6671 ;;  x               4   27[COMRAM] float 
  6672 ;; Auto vars:     Size  Location     Type
  6673 ;;  u               4   31[COMRAM] struct .
  6674 ;; Return value:  Size  Location     Type
  6675 ;;                  4   27[COMRAM] float 
  6676 ;; Registers used:
  6677 ;;		status,2, status,0
  6678 ;; Tracked objects:
  6679 ;;		On entry : 0/0
  6680 ;;		On exit  : 0/0
  6681 ;;		Unchanged: 0/0
  6682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6683 ;;      Params:         4       0       0       0       0       0       0
  6684 ;;      Locals:         4       0       0       0       0       0       0
  6685 ;;      Temps:          0       0       0       0       0       0       0
  6686 ;;      Totals:         8       0       0       0       0       0       0
  6687 ;;Total ram usage:        8 bytes
  6688 ;; Hardware stack levels used:    1
  6689 ;; Hardware stack levels required when called:    1
  6690 ;; This function calls:
  6691 ;;		Nothing
  6692 ;; This function is called by:
  6693 ;;		_PWM1_setDC
  6694 ;;		_PWM2_setDC
  6695 ;; This function uses a non-reentrant model
  6696 ;;
  6697                           
  6698                           	psect	text28
  6699  00566A                     __ptext28:
  6700                           	callstack 0
  6701  00566A                     _fabsf:
  6702                           	callstack 24
  6703  00566A  C1AB  F020         	movff	fabsf@F463,fabsf@u
  6704  00566E  C1AC  F021         	movff	fabsf@F463+1,fabsf@u+1
  6705  005672  C1AD  F022         	movff	fabsf@F463+2,fabsf@u+2
  6706  005676  C1AE  F023         	movff	fabsf@F463+3,fabsf@u+3
  6707  00567A  C01C  F020         	movff	fabsf@x,fabsf@u
  6708  00567E  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  6709  005682  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  6710  005686  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  6711  00568A  9E23               	bcf	(fabsf@u+3)^0,7,c
  6712  00568C  C020  F01C         	movff	fabsf@u,?_fabsf
  6713  005690  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  6714  005694  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  6715  005698  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  6716  00569C  0012               	return		;funcret
  6717  00569E                     __end_of_fabsf:
  6718                           	callstack 0
  6719                           
  6720 ;; *************** function ___xxtofl *****************
  6721 ;; Defined at:
  6722 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  6723 ;; Parameters:    Size  Location     Type
  6724 ;;  sign            1    wreg     unsigned char 
  6725 ;;  val             4   13[COMRAM] long 
  6726 ;; Auto vars:     Size  Location     Type
  6727 ;;  sign            1   21[COMRAM] unsigned char 
  6728 ;;  arg             4   23[COMRAM] unsigned long 
  6729 ;;  exp             1   22[COMRAM] unsigned char 
  6730 ;; Return value:  Size  Location     Type
  6731 ;;                  4   13[COMRAM] unsigned char 
  6732 ;; Registers used:
  6733 ;;		wreg, status,2, status,0
  6734 ;; Tracked objects:
  6735 ;;		On entry : 0/0
  6736 ;;		On exit  : 0/0
  6737 ;;		Unchanged: 0/0
  6738 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6739 ;;      Params:         4       0       0       0       0       0       0
  6740 ;;      Locals:         6       0       0       0       0       0       0
  6741 ;;      Temps:          4       0       0       0       0       0       0
  6742 ;;      Totals:        14       0       0       0       0       0       0
  6743 ;;Total ram usage:       14 bytes
  6744 ;; Hardware stack levels used:    1
  6745 ;; Hardware stack levels required when called:    1
  6746 ;; This function calls:
  6747 ;;		Nothing
  6748 ;; This function is called by:
  6749 ;;		_scanAdcConversion
  6750 ;;		_calculatedAverageValue
  6751 ;;		_PWM1_setDC
  6752 ;;		_PWM2_setDC
  6753 ;;		_speedControl
  6754 ;; This function uses a non-reentrant model
  6755 ;;
  6756                           
  6757                           	psect	text29
  6758  003558                     __ptext29:
  6759                           	callstack 0
  6760  003558                     ___xxtofl:
  6761                           	callstack 24
  6762                           
  6763                           ;incstack = 0
  6764                           ;___xxtofl@sign stored from wreg
  6765  003558  6E16               	movwf	___xxtofl@sign^0,c
  6766  00355A  5016               	movf	___xxtofl@sign^0,w,c
  6767  00355C  B4D8               	btfsc	status,2,c
  6768  00355E  EFB3  F01A         	goto	u6491
  6769  003562  EFB5  F01A         	goto	u6490
  6770  003566                     u6491:
  6771  003566  EFD7  F01A         	goto	l1346
  6772  00356A                     u6490:
  6773  00356A  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6774  00356C  EFBC  F01A         	goto	u6500
  6775  003570  EFBA  F01A         	goto	u6501
  6776  003574                     u6501:
  6777  003574  EFD7  F01A         	goto	l1346
  6778  003578                     u6500:
  6779  003578  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6780  00357C  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6781  003580  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6782  003584  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6783  003588  1E12               	comf	??___xxtofl^0,f,c
  6784  00358A  1E13               	comf	(??___xxtofl+1)^0,f,c
  6785  00358C  1E14               	comf	(??___xxtofl+2)^0,f,c
  6786  00358E  1E15               	comf	(??___xxtofl+3)^0,f,c
  6787  003590  2A12               	incf	??___xxtofl^0,f,c
  6788  003592  0E00               	movlw	0
  6789  003594  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6790  003596  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6791  003598  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6792  00359A  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6793  00359E  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6794  0035A2  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6795  0035A6  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6796  0035AA  EFDF  F01A         	goto	l5536
  6797  0035AE                     l1346:
  6798  0035AE  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6799  0035B2  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6800  0035B6  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6801  0035BA  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6802  0035BE                     l5536:
  6803  0035BE  500E               	movf	___xxtofl@val^0,w,c
  6804  0035C0  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6805  0035C2  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6806  0035C4  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6807  0035C6  A4D8               	btfss	status,2,c
  6808  0035C8  EFE8  F01A         	goto	u6511
  6809  0035CC  EFEA  F01A         	goto	u6510
  6810  0035D0                     u6511:
  6811  0035D0  EFF4  F01A         	goto	l5542
  6812  0035D4                     u6510:
  6813  0035D4  0E00               	movlw	0
  6814  0035D6  6E0E               	movwf	?___xxtofl^0,c
  6815  0035D8  0E00               	movlw	0
  6816  0035DA  6E0F               	movwf	(?___xxtofl+1)^0,c
  6817  0035DC  0E00               	movlw	0
  6818  0035DE  6E10               	movwf	(?___xxtofl+2)^0,c
  6819  0035E0  0E00               	movlw	0
  6820  0035E2  6E11               	movwf	(?___xxtofl+3)^0,c
  6821  0035E4  EF85  F01B         	goto	l1349
  6822  0035E8                     l5542:
  6823  0035E8  0E96               	movlw	150
  6824  0035EA  6E17               	movwf	___xxtofl@exp^0,c
  6825  0035EC  EFFE  F01A         	goto	l5546
  6826  0035F0                     l5544:
  6827  0035F0  2A17               	incf	___xxtofl@exp^0,f,c
  6828  0035F2  90D8               	bcf	status,0,c
  6829  0035F4  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6830  0035F6  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6831  0035F8  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6832  0035FA  3218               	rrcf	___xxtofl@arg^0,f,c
  6833  0035FC                     l5546:
  6834  0035FC  0E00               	movlw	0
  6835  0035FE  1418               	andwf	___xxtofl@arg^0,w,c
  6836  003600  6E12               	movwf	??___xxtofl^0,c
  6837  003602  0E00               	movlw	0
  6838  003604  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6839  003606  6E13               	movwf	(??___xxtofl+1)^0,c
  6840  003608  0E00               	movlw	0
  6841  00360A  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6842  00360C  6E14               	movwf	(??___xxtofl+2)^0,c
  6843  00360E  0EFE               	movlw	254
  6844  003610  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6845  003612  6E15               	movwf	(??___xxtofl+3)^0,c
  6846  003614  5012               	movf	??___xxtofl^0,w,c
  6847  003616  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6848  003618  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6849  00361A  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6850  00361C  A4D8               	btfss	status,2,c
  6851  00361E  EF13  F01B         	goto	u6521
  6852  003622  EF15  F01B         	goto	u6520
  6853  003626                     u6521:
  6854  003626  EFF8  F01A         	goto	l5544
  6855  00362A                     u6520:
  6856  00362A  EF23  F01B         	goto	l1353
  6857  00362E                     l5548:
  6858  00362E  2A17               	incf	___xxtofl@exp^0,f,c
  6859  003630  0E01               	movlw	1
  6860  003632  2618               	addwf	___xxtofl@arg^0,f,c
  6861  003634  0E00               	movlw	0
  6862  003636  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6863  003638  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6864  00363A  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6865  00363C  90D8               	bcf	status,0,c
  6866  00363E  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6867  003640  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6868  003642  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6869  003644  3218               	rrcf	___xxtofl@arg^0,f,c
  6870  003646                     l1353:
  6871  003646  0E00               	movlw	0
  6872  003648  1418               	andwf	___xxtofl@arg^0,w,c
  6873  00364A  6E12               	movwf	??___xxtofl^0,c
  6874  00364C  0E00               	movlw	0
  6875  00364E  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6876  003650  6E13               	movwf	(??___xxtofl+1)^0,c
  6877  003652  0E00               	movlw	0
  6878  003654  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6879  003656  6E14               	movwf	(??___xxtofl+2)^0,c
  6880  003658  0EFF               	movlw	255
  6881  00365A  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6882  00365C  6E15               	movwf	(??___xxtofl+3)^0,c
  6883  00365E  5012               	movf	??___xxtofl^0,w,c
  6884  003660  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6885  003662  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6886  003664  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6887  003666  A4D8               	btfss	status,2,c
  6888  003668  EF38  F01B         	goto	u6531
  6889  00366C  EF3A  F01B         	goto	u6530
  6890  003670                     u6531:
  6891  003670  EF17  F01B         	goto	l5548
  6892  003674                     u6530:
  6893  003674  EF42  F01B         	goto	l5556
  6894  003678                     l5554:
  6895  003678  0617               	decf	___xxtofl@exp^0,f,c
  6896  00367A  90D8               	bcf	status,0,c
  6897  00367C  3618               	rlcf	___xxtofl@arg^0,f,c
  6898  00367E  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6899  003680  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6900  003682  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6901  003684                     l5556:
  6902  003684  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6903  003686  EF47  F01B         	goto	u6541
  6904  00368A  EF49  F01B         	goto	u6540
  6905  00368E                     u6541:
  6906  00368E  EF51  F01B         	goto	l1360
  6907  003692                     u6540:
  6908  003692  0E02               	movlw	2
  6909  003694  6017               	cpfslt	___xxtofl@exp^0,c
  6910  003696  EF4F  F01B         	goto	u6551
  6911  00369A  EF51  F01B         	goto	u6550
  6912  00369E                     u6551:
  6913  00369E  EF3C  F01B         	goto	l5554
  6914  0036A2                     u6550:
  6915  0036A2                     l1360:
  6916  0036A2  B017               	btfsc	___xxtofl@exp^0,0,c
  6917  0036A4  EF56  F01B         	goto	u6561
  6918  0036A8  EF58  F01B         	goto	u6560
  6919  0036AC                     u6561:
  6920  0036AC  EF59  F01B         	goto	l5562
  6921  0036B0                     u6560:
  6922  0036B0  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6923  0036B2                     l5562:
  6924  0036B2  90D8               	bcf	status,0,c
  6925  0036B4  3217               	rrcf	___xxtofl@exp^0,f,c
  6926  0036B6  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6927  0036BA  6A13               	clrf	(??___xxtofl+1)^0,c
  6928  0036BC  6A14               	clrf	(??___xxtofl+2)^0,c
  6929  0036BE  6A15               	clrf	(??___xxtofl+3)^0,c
  6930  0036C0  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6931  0036C4  6A14               	clrf	(??___xxtofl+2)^0,c
  6932  0036C6  6A13               	clrf	(??___xxtofl+1)^0,c
  6933  0036C8  6A12               	clrf	??___xxtofl^0,c
  6934  0036CA  5012               	movf	??___xxtofl^0,w,c
  6935  0036CC  1218               	iorwf	___xxtofl@arg^0,f,c
  6936  0036CE  5013               	movf	(??___xxtofl+1)^0,w,c
  6937  0036D0  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6938  0036D2  5014               	movf	(??___xxtofl+2)^0,w,c
  6939  0036D4  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6940  0036D6  5015               	movf	(??___xxtofl+3)^0,w,c
  6941  0036D8  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6942  0036DA  5016               	movf	___xxtofl@sign^0,w,c
  6943  0036DC  B4D8               	btfsc	status,2,c
  6944  0036DE  EF73  F01B         	goto	u6571
  6945  0036E2  EF75  F01B         	goto	u6570
  6946  0036E6                     u6571:
  6947  0036E6  EF7D  F01B         	goto	l5572
  6948  0036EA                     u6570:
  6949  0036EA  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6950  0036EC  EF7C  F01B         	goto	u6580
  6951  0036F0  EF7A  F01B         	goto	u6581
  6952  0036F4                     u6581:
  6953  0036F4  EF7D  F01B         	goto	l5572
  6954  0036F8                     u6580:
  6955  0036F8  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6956  0036FA                     l5572:
  6957  0036FA  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6958  0036FE  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6959  003702  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6960  003706  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6961  00370A                     l1349:
  6962  00370A  0012               	return		;funcret
  6963  00370C                     __end_of___xxtofl:
  6964                           	callstack 0
  6965                           
  6966 ;; *************** function _sprintf *****************
  6967 ;; Defined at:
  6968 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6969 ;; Parameters:    Size  Location     Type
  6970 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6971 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  6972 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  6973 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6974 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  6975 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6976 ;; Auto vars:     Size  Location     Type
  6977 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6978 ;;  ap              2  121[BANK0 ] PTR void [1]
  6979 ;;		 -> ?_sprintf(2), 
  6980 ;;  ret             2    0        int 
  6981 ;; Return value:  Size  Location     Type
  6982 ;;                  2  111[BANK0 ] int 
  6983 ;; Registers used:
  6984 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6985 ;; Tracked objects:
  6986 ;;		On entry : 0/0
  6987 ;;		On exit  : 0/0
  6988 ;;		Unchanged: 0/0
  6989 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6990 ;;      Params:         0       8       0       0       0       0       0
  6991 ;;      Locals:         0      10       0       0       0       0       0
  6992 ;;      Temps:          0       0       0       0       0       0       0
  6993 ;;      Totals:         0      18       0       0       0       0       0
  6994 ;;Total ram usage:       18 bytes
  6995 ;; Hardware stack levels used:    1
  6996 ;; Hardware stack levels required when called:    8
  6997 ;; This function calls:
  6998 ;;		_vfprintf
  6999 ;; This function is called by:
  7000 ;;		_mainMenu
  7001 ;;		_stopMenu
  7002 ;;		_pauseMenu
  7003 ;;		_secretMenu
  7004 ;;		_speedLimitSettingMenu
  7005 ;;		_stopTimeSettingMenu
  7006 ;;		_driverTimeSettingMenu
  7007 ;; This function uses a non-reentrant model
  7008 ;;
  7009                           
  7010                           	psect	text30
  7011  00526A                     __ptext30:
  7012                           	callstack 0
  7013  00526A                     _sprintf:
  7014                           	callstack 19
  7015  00526A  0ED3               	movlw	low (?_sprintf+4)
  7016  00526C  0100               	movlb	0	; () banked
  7017  00526E  6FD9               	movwf	sprintf@ap& (0+255),b
  7018  005270  0E00               	movlw	high (?_sprintf+4)
  7019  005272  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  7020  005274  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  7021  005278  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  7022  00527C                     
  7023                           ; BSR set to: 0
  7024  00527C  0E00               	movlw	0
  7025  00527E  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7026  005280  0E00               	movlw	0
  7027  005282  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  7028  005284                     
  7029                           ; BSR set to: 0
  7030  005284  0E00               	movlw	0
  7031  005286  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  7032  005288  0E00               	movlw	0
  7033  00528A  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7034  00528C                     
  7035                           ; BSR set to: 0
  7036  00528C  0EDB               	movlw	low sprintf@f
  7037  00528E  6FC7               	movwf	vfprintf@fp& (0+255),b
  7038  005290  0E00               	movlw	high sprintf@f
  7039  005292  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  7040  005294  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7041  005298  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7042  00529C  0ED9               	movlw	low sprintf@ap
  7043  00529E  6FCB               	movwf	vfprintf@ap& (0+255),b
  7044  0052A0  0E00               	movlw	high sprintf@ap
  7045  0052A2  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  7046  0052A4  EC18  F028         	call	_vfprintf	;wreg free
  7047  0052A8  0100               	movlb	0	; () banked
  7048  0052AA  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  7049  0052AC  25CF               	addwf	sprintf@s& (0+255),w,b
  7050  0052AE  6ED9               	movwf	fsr2l,c
  7051  0052B0  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7052  0052B2  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  7053  0052B4  6EDA               	movwf	fsr2h,c
  7054  0052B6  0E00               	movlw	0
  7055  0052B8  6EDF               	movwf	indf2,c
  7056  0052BA                     
  7057                           ; BSR set to: 0
  7058  0052BA  0012               	return		;funcret
  7059  0052BC                     __end_of_sprintf:
  7060                           	callstack 0
  7061                           
  7062 ;; *************** function _vfprintf *****************
  7063 ;; Defined at:
  7064 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7065 ;; Parameters:    Size  Location     Type
  7066 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7067 ;;		 -> sprintf@f(6), 
  7068 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7069 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  7070 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  7071 ;;  ap              2  107[BANK0 ] PTR PTR void 
  7072 ;;		 -> sprintf@ap(2), 
  7073 ;; Auto vars:     Size  Location     Type
  7074 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  7075 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  7076 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  7077 ;; Return value:  Size  Location     Type
  7078 ;;                  2  103[BANK0 ] int 
  7079 ;; Registers used:
  7080 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7081 ;; Tracked objects:
  7082 ;;		On entry : 0/0
  7083 ;;		On exit  : 0/0
  7084 ;;		Unchanged: 0/0
  7085 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7086 ;;      Params:         0       6       0       0       0       0       0
  7087 ;;      Locals:         0       2       0       0       0       0       0
  7088 ;;      Temps:          0       0       0       0       0       0       0
  7089 ;;      Totals:         0       8       0       0       0       0       0
  7090 ;;Total ram usage:        8 bytes
  7091 ;; Hardware stack levels used:    1
  7092 ;; Hardware stack levels required when called:    7
  7093 ;; This function calls:
  7094 ;;		_vfpfcnvrt
  7095 ;; This function is called by:
  7096 ;;		_sprintf
  7097 ;; This function uses a non-reentrant model
  7098 ;;
  7099                           
  7100                           	psect	text31
  7101  005030                     __ptext31:
  7102                           	callstack 0
  7103  005030                     _vfprintf:
  7104                           	callstack 19
  7105  005030                     
  7106                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7107  005030  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  7108  005034  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7109  005038                     
  7110                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  7111  005038  0E00               	movlw	0
  7112  00503A  0101               	movlb	1	; () banked
  7113  00503C  6FB0               	movwf	(_nout+1)& (0+255),b
  7114  00503E  0E00               	movlw	0
  7115  005040  6FAF               	movwf	_nout& (0+255),b
  7116                           
  7117                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  7118  005042  EF3A  F028         	goto	l5848
  7119  005046                     l5846:
  7120                           
  7121                           ; BSR set to: 1
  7122                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7123  005046  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  7124  00504A  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7125  00504E  0ECD               	movlw	low vfprintf@cfmt
  7126  005050  0100               	movlb	0	; () banked
  7127  005052  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  7128  005054  0E00               	movlw	high vfprintf@cfmt
  7129  005056  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7130  005058  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  7131  00505C  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7132  005060  EC2A  F00A         	call	_vfpfcnvrt	;wreg free
  7133  005064  0100               	movlb	0	; () banked
  7134  005066  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  7135  005068  0101               	movlb	1	; () banked
  7136  00506A  27AF               	addwf	_nout& (0+255),f,b
  7137  00506C  0100               	movlb	0	; () banked
  7138  00506E  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7139  005070  0101               	movlb	1	; () banked
  7140  005072  23B0               	addwfc	(_nout+1)& (0+255),f,b
  7141  005074                     l5848:
  7142                           
  7143                           ; BSR set to: 1
  7144                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  7145  005074  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  7146  005078  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7147  00507C                     	if	0	;tblptru may be non-zero
  7148  00507C                     	endif
  7149  00507C                     	if	0	;tblptru may be non-zero
  7150  00507C                     	endif
  7151  00507C  0008               	tblrd		*
  7152  00507E  50F5               	movf	tablat,w,c
  7153  005080  0900               	iorlw	0
  7154  005082  A4D8               	btfss	status,2,c
  7155  005084  EF46  F028         	goto	u6861
  7156  005088  EF48  F028         	goto	u6860
  7157  00508C                     u6861:
  7158  00508C  EF23  F028         	goto	l5846
  7159  005090                     u6860:
  7160  005090                     
  7161                           ; BSR set to: 1
  7162                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  7163  005090  C1AF  F0C7         	movff	_nout,?_vfprintf
  7164  005094  C1B0  F0C8         	movff	_nout+1,?_vfprintf+1
  7165  005098                     
  7166                           ; BSR set to: 1
  7167  005098  0012               	return		;funcret
  7168  00509A                     __end_of_vfprintf:
  7169                           	callstack 0
  7170                           
  7171 ;; *************** function _vfpfcnvrt *****************
  7172 ;; Defined at:
  7173 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7174 ;; Parameters:    Size  Location     Type
  7175 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  7176 ;;		 -> sprintf@f(6), 
  7177 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  7178 ;;		 -> vfprintf@cfmt(2), 
  7179 ;;  ap              2   75[BANK0 ] PTR PTR void 
  7180 ;;		 -> sprintf@ap(2), 
  7181 ;; Auto vars:     Size  Location     Type
  7182 ;;  ll              8   81[BANK0 ] long long 
  7183 ;;  llu             8    0        unsigned long long 
  7184 ;;  f               4   95[BANK0 ] unsigned long long 
  7185 ;;  ct              3   99[BANK0 ] unsigned char [3]
  7186 ;;  vp              3    0        PTR void 
  7187 ;;  cp              3    0        PTR unsigned char 
  7188 ;;  i               2    0        int 
  7189 ;;  done            2    0        int 
  7190 ;;  c               1  102[BANK0 ] unsigned char 
  7191 ;; Return value:  Size  Location     Type
  7192 ;;                  2   71[BANK0 ] int 
  7193 ;; Registers used:
  7194 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7195 ;; Tracked objects:
  7196 ;;		On entry : 0/0
  7197 ;;		On exit  : 0/0
  7198 ;;		Unchanged: 0/0
  7199 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7200 ;;      Params:         0       6       0       0       0       0       0
  7201 ;;      Locals:         0      22       0       0       0       0       0
  7202 ;;      Temps:          0       4       0       0       0       0       0
  7203 ;;      Totals:         0      32       0       0       0       0       0
  7204 ;;Total ram usage:       32 bytes
  7205 ;; Hardware stack levels used:    1
  7206 ;; Hardware stack levels required when called:    6
  7207 ;; This function calls:
  7208 ;;		_atoi
  7209 ;;		_dtoa
  7210 ;;		_efgtoa
  7211 ;;		_fputc
  7212 ;;		_isdigit
  7213 ;;		_isupper
  7214 ;;		_strncmp
  7215 ;;		_tolower
  7216 ;; This function is called by:
  7217 ;;		_vfprintf
  7218 ;; This function uses a non-reentrant model
  7219 ;;
  7220                           
  7221                           	psect	text32
  7222  001454                     __ptext32:
  7223                           	callstack 0
  7224  001454                     _vfpfcnvrt:
  7225                           	callstack 19
  7226  001454                     
  7227                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  7228  001454  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7229  001458  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7230  00145C  CFDE FFF6          	movff	postinc2,tblptrl
  7231  001460  CFDD FFF7          	movff	postdec2,tblptrh
  7232  001464                     	if	0	;tblptru may be non-zero
  7233  001464                     	endif
  7234  001464                     	if	0	;tblptru may be non-zero
  7235  001464                     	endif
  7236  001464  0008               	tblrd		*
  7237  001466  50F5               	movf	tablat,w,c
  7238  001468  0A25               	xorlw	37
  7239  00146A  A4D8               	btfss	status,2,c
  7240  00146C  EF3A  F00A         	goto	u6591
  7241  001470  EF3C  F00A         	goto	u6590
  7242  001474                     u6591:
  7243  001474  EF2D  F00D         	goto	l5686
  7244  001478                     u6590:
  7245  001478                     
  7246                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  7247  001478  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7248  00147C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7249  001480  2ADE               	incf	postinc2,f,c
  7250  001482  0E00               	movlw	0
  7251  001484  22DD               	addwfc	postdec2,f,c
  7252  001486                     
  7253                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  7254  001486  0E00               	movlw	0
  7255  001488  0101               	movlb	1	; () banked
  7256  00148A  6FB2               	movwf	(_width+1)& (0+255),b
  7257  00148C  0E00               	movlw	0
  7258  00148E  6FB1               	movwf	_width& (0+255),b
  7259  001490  C1B1  F0F8         	movff	_width,_flags
  7260  001494  C1B2  F0F9         	movff	_width+1,_flags+1
  7261  001498                     
  7262                           ; BSR set to: 1
  7263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  7264  001498  0100               	movlb	0	; () banked
  7265  00149A  69F6               	setf	_prec& (0+255),b
  7266  00149C  69F7               	setf	(_prec+1)& (0+255),b
  7267  00149E                     
  7268                           ; BSR set to: 0
  7269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  7270  00149E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7271  0014A2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7272  0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  7273  0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  7274  0014AE                     	if	0	;tblptru may be non-zero
  7275  0014AE                     	endif
  7276  0014AE                     	if	0	;tblptru may be non-zero
  7277  0014AE                     	endif
  7278  0014AE  0008               	tblrd		*
  7279  0014B0  50F5               	movf	tablat,w,c
  7280  0014B2  0A2A               	xorlw	42
  7281  0014B4  A4D8               	btfss	status,2,c
  7282  0014B6  EF5F  F00A         	goto	u6601
  7283  0014BA  EF61  F00A         	goto	u6600
  7284  0014BE                     u6601:
  7285  0014BE  EF8D  F00A         	goto	l5592
  7286  0014C2                     u6600:
  7287  0014C2                     
  7288                           ; BSR set to: 0
  7289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  7290  0014C2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7291  0014C6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7292  0014CA  2ADE               	incf	postinc2,f,c
  7293  0014CC  0E00               	movlw	0
  7294  0014CE  22DD               	addwfc	postdec2,f,c
  7295                           
  7296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7297  0014D0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7298  0014D4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7299  0014D8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7300  0014DC  0E02               	movlw	2
  7301  0014DE  26DE               	addwf	postinc2,f,c
  7302  0014E0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7303  0014E4  0E00               	movlw	0
  7304  0014E6  22DD               	addwfc	postdec2,f,c
  7305  0014E8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7306  0014EC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7307  0014F0  CFDE F1B1          	movff	postinc2,_width
  7308  0014F4  CFDD F1B2          	movff	postdec2,_width+1
  7309  0014F8                     
  7310                           ; BSR set to: 0
  7311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  7312  0014F8  0101               	movlb	1	; () banked
  7313  0014FA  BFB2               	btfsc	(_width+1)& (0+255),7,b
  7314  0014FC  EF84  F00A         	goto	u6610
  7315  001500  EF82  F00A         	goto	u6611
  7316  001504                     u6611:
  7317  001504  EFD1  F00A         	goto	l5602
  7318  001508                     u6610:
  7319  001508                     
  7320                           ; BSR set to: 1
  7321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  7322  001508  0100               	movlb	0	; () banked
  7323  00150A  81F8               	bsf	_flags& (0+255),0,b
  7324                           
  7325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  7326  00150C  0101               	movlb	1	; () banked
  7327  00150E  6DB1               	negf	_width& (0+255),b
  7328  001510  1FB2               	comf	(_width+1)& (0+255),f,b
  7329  001512  B0D8               	btfsc	status,0,c
  7330  001514  2BB2               	incf	(_width+1)& (0+255),f,b
  7331  001516  EFD1  F00A         	goto	l5602
  7332  00151A                     l5592:
  7333                           
  7334                           ; BSR set to: 0
  7335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  7336  00151A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7337  00151E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7338  001522  CFDE F008          	movff	postinc2,atoi@s
  7339  001526  CFDD F009          	movff	postdec2,atoi@s+1
  7340  00152A  EC54  F01C         	call	_atoi	;wreg free
  7341  00152E  C008  F1B1         	movff	?_atoi,_width
  7342  001532  C009  F1B2         	movff	?_atoi+1,_width+1
  7343                           
  7344                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7345  001536  EFA4  F00A         	goto	l5596
  7346  00153A                     l5594:
  7347                           
  7348                           ; BSR set to: 0
  7349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  7350  00153A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7351  00153E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7352  001542  2ADE               	incf	postinc2,f,c
  7353  001544  0E00               	movlw	0
  7354  001546  22DD               	addwfc	postdec2,f,c
  7355  001548                     l5596:
  7356  001548  0ED0               	movlw	208
  7357  00154A  0100               	movlb	0	; () banked
  7358  00154C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7359  00154E  0EFF               	movlw	255
  7360  001550  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7361  001552  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7362  001556  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7363  00155A  CFDE FFF6          	movff	postinc2,tblptrl
  7364  00155E  CFDD FFF7          	movff	postdec2,tblptrh
  7365  001562                     	if	0	;tblptru may be non-zero
  7366  001562                     	endif
  7367  001562                     	if	0	;tblptru may be non-zero
  7368  001562                     	endif
  7369  001562  0008               	tblrd		*
  7370  001564  50F5               	movf	tablat,w,c
  7371  001566  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7372  001568  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7373  00156A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7374  00156C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7375  00156E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7376  001570  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7377  001572  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7378  001574  E10A               	bnz	u6620
  7379  001576  0E0A               	movlw	10
  7380  001578  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7381  00157A  A0D8               	btfss	status,0,c
  7382  00157C  EFC2  F00A         	goto	u6621
  7383  001580  EFC5  F00A         	goto	u6620
  7384  001584                     u6621:
  7385  001584  0E01               	movlw	1
  7386  001586  EFC6  F00A         	goto	u6630
  7387  00158A                     u6620:
  7388  00158A  0E00               	movlw	0
  7389  00158C                     u6630:
  7390  00158C  6FB9               	movwf	_vfpfcnvrt$3004& (0+255),b
  7391  00158E  6BBA               	clrf	(_vfpfcnvrt$3004+1)& (0+255),b
  7392  001590                     
  7393                           ; BSR set to: 0
  7394  001590  51B9               	movf	_vfpfcnvrt$3004& (0+255),w,b
  7395  001592  11BA               	iorwf	(_vfpfcnvrt$3004+1)& (0+255),w,b
  7396  001594  A4D8               	btfss	status,2,c
  7397  001596  EFCF  F00A         	goto	u6641
  7398  00159A  EFD1  F00A         	goto	u6640
  7399  00159E                     u6641:
  7400  00159E  EF9D  F00A         	goto	l5594
  7401  0015A2                     u6640:
  7402  0015A2                     l5602:
  7403                           
  7404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  7405  0015A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7406  0015A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7407  0015AA  CFDE FFF6          	movff	postinc2,tblptrl
  7408  0015AE  CFDD FFF7          	movff	postdec2,tblptrh
  7409  0015B2                     	if	0	;tblptru may be non-zero
  7410  0015B2                     	endif
  7411  0015B2                     	if	0	;tblptru may be non-zero
  7412  0015B2                     	endif
  7413  0015B2  0008               	tblrd		*
  7414  0015B4  50F5               	movf	tablat,w,c
  7415  0015B6  0A2E               	xorlw	46
  7416  0015B8  A4D8               	btfss	status,2,c
  7417  0015BA  EFE1  F00A         	goto	u6651
  7418  0015BE  EFE3  F00A         	goto	u6650
  7419  0015C2                     u6651:
  7420  0015C2  EF62  F00B         	goto	l5622
  7421  0015C6                     u6650:
  7422  0015C6                     
  7423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  7424  0015C6  0E00               	movlw	0
  7425  0015C8  0100               	movlb	0	; () banked
  7426  0015CA  6FF7               	movwf	(_prec+1)& (0+255),b
  7427  0015CC  0E00               	movlw	0
  7428  0015CE  6FF6               	movwf	_prec& (0+255),b
  7429  0015D0                     
  7430                           ; BSR set to: 0
  7431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  7432  0015D0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7433  0015D4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7434  0015D8  2ADE               	incf	postinc2,f,c
  7435  0015DA  0E00               	movlw	0
  7436  0015DC  22DD               	addwfc	postdec2,f,c
  7437  0015DE                     
  7438                           ; BSR set to: 0
  7439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  7440  0015DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7441  0015E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7442  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  7443  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  7444  0015EE                     	if	0	;tblptru may be non-zero
  7445  0015EE                     	endif
  7446  0015EE                     	if	0	;tblptru may be non-zero
  7447  0015EE                     	endif
  7448  0015EE  0008               	tblrd		*
  7449  0015F0  50F5               	movf	tablat,w,c
  7450  0015F2  0A2A               	xorlw	42
  7451  0015F4  A4D8               	btfss	status,2,c
  7452  0015F6  EFFF  F00A         	goto	u6661
  7453  0015FA  EF01  F00B         	goto	u6660
  7454  0015FE                     u6661:
  7455  0015FE  EF1E  F00B         	goto	l5612
  7456  001602                     u6660:
  7457  001602                     
  7458                           ; BSR set to: 0
  7459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  7460  001602  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7461  001606  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7462  00160A  2ADE               	incf	postinc2,f,c
  7463  00160C  0E00               	movlw	0
  7464  00160E  22DD               	addwfc	postdec2,f,c
  7465                           
  7466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7467  001610  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7468  001614  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7469  001618  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7470  00161C  0E02               	movlw	2
  7471  00161E  26DE               	addwf	postinc2,f,c
  7472  001620  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7473  001624  0E00               	movlw	0
  7474  001626  22DD               	addwfc	postdec2,f,c
  7475  001628  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7476  00162C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7477  001630  CFDE F0F6          	movff	postinc2,_prec
  7478  001634  CFDD F0F7          	movff	postdec2,_prec+1
  7479                           
  7480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  7481  001638  EF62  F00B         	goto	l5622
  7482  00163C                     l5612:
  7483                           
  7484                           ; BSR set to: 0
  7485                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  7486  00163C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7487  001640  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7488  001644  CFDE F008          	movff	postinc2,atoi@s
  7489  001648  CFDD F009          	movff	postdec2,atoi@s+1
  7490  00164C  EC54  F01C         	call	_atoi	;wreg free
  7491  001650  C008  F0F6         	movff	?_atoi,_prec
  7492  001654  C009  F0F7         	movff	?_atoi+1,_prec+1
  7493                           
  7494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7495  001658  EF35  F00B         	goto	l5616
  7496  00165C                     l5614:
  7497                           
  7498                           ; BSR set to: 0
  7499                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  7500  00165C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7501  001660  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7502  001664  2ADE               	incf	postinc2,f,c
  7503  001666  0E00               	movlw	0
  7504  001668  22DD               	addwfc	postdec2,f,c
  7505  00166A                     l5616:
  7506  00166A  0ED0               	movlw	208
  7507  00166C  0100               	movlb	0	; () banked
  7508  00166E  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7509  001670  0EFF               	movlw	255
  7510  001672  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7511  001674  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7512  001678  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7513  00167C  CFDE FFF6          	movff	postinc2,tblptrl
  7514  001680  CFDD FFF7          	movff	postdec2,tblptrh
  7515  001684                     	if	0	;tblptru may be non-zero
  7516  001684                     	endif
  7517  001684                     	if	0	;tblptru may be non-zero
  7518  001684                     	endif
  7519  001684  0008               	tblrd		*
  7520  001686  50F5               	movf	tablat,w,c
  7521  001688  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7522  00168A  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7523  00168C  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7524  00168E  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7525  001690  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7526  001692  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7527  001694  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7528  001696  E10A               	bnz	u6670
  7529  001698  0E0A               	movlw	10
  7530  00169A  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7531  00169C  A0D8               	btfss	status,0,c
  7532  00169E  EF53  F00B         	goto	u6671
  7533  0016A2  EF56  F00B         	goto	u6670
  7534  0016A6                     u6671:
  7535  0016A6  0E01               	movlw	1
  7536  0016A8  EF57  F00B         	goto	u6680
  7537  0016AC                     u6670:
  7538  0016AC  0E00               	movlw	0
  7539  0016AE                     u6680:
  7540  0016AE  6FBB               	movwf	_vfpfcnvrt$3005& (0+255),b
  7541  0016B0  6BBC               	clrf	(_vfpfcnvrt$3005+1)& (0+255),b
  7542  0016B2                     
  7543                           ; BSR set to: 0
  7544  0016B2  51BB               	movf	_vfpfcnvrt$3005& (0+255),w,b
  7545  0016B4  11BC               	iorwf	(_vfpfcnvrt$3005+1)& (0+255),w,b
  7546  0016B6  A4D8               	btfss	status,2,c
  7547  0016B8  EF60  F00B         	goto	u6691
  7548  0016BC  EF62  F00B         	goto	u6690
  7549  0016C0                     u6691:
  7550  0016C0  EF2E  F00B         	goto	l5614
  7551  0016C4                     u6690:
  7552  0016C4                     l5622:
  7553                           
  7554                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  7555  0016C4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7556  0016C8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7557  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  7558  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  7559  0016D4                     	if	0	;tblptru may be non-zero
  7560  0016D4                     	endif
  7561  0016D4                     	if	0	;tblptru may be non-zero
  7562  0016D4                     	endif
  7563  0016D4  0008               	tblrd		*
  7564  0016D6  50F5               	movf	tablat,w,c
  7565  0016D8  6E07               	movwf	tolower@c^0,c
  7566  0016DA  6A08               	clrf	(tolower@c+1)^0,c
  7567  0016DC  EC80  F028         	call	_tolower	;wreg free
  7568  0016E0  5007               	movf	?_tolower^0,w,c
  7569  0016E2  0100               	movlb	0	; () banked
  7570  0016E4  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  7571  0016E6                     
  7572                           ; BSR set to: 0
  7573                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  7574  0016E6  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  7575  0016E8  B4D8               	btfsc	status,2,c
  7576  0016EA  EF79  F00B         	goto	u6701
  7577  0016EE  EF7B  F00B         	goto	u6700
  7578  0016F2                     u6701:
  7579  0016F2  EFB5  F00B         	goto	l5632
  7580  0016F6                     u6700:
  7581  0016F6                     
  7582                           ; BSR set to: 0
  7583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  7584  0016F6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7585  0016FA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7586  0016FE  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7587  001702  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7588  001706  0E01               	movlw	1
  7589  001708  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7590  00170A  0E00               	movlw	0
  7591  00170C  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7592  00170E  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7593  001712  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7594  001716                     	if	0	;tblptru may be non-zero
  7595  001716                     	endif
  7596  001716                     	if	0	;tblptru may be non-zero
  7597  001716                     	endif
  7598  001716  0008               	tblrd		*
  7599  001718  50F5               	movf	tablat,w,c
  7600  00171A  6E07               	movwf	tolower@c^0,c
  7601  00171C  6A08               	clrf	(tolower@c+1)^0,c
  7602  00171E  EC80  F028         	call	_tolower	;wreg free
  7603  001722  5007               	movf	?_tolower^0,w,c
  7604  001724  0100               	movlb	0	; () banked
  7605  001726  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  7606  001728                     
  7607                           ; BSR set to: 0
  7608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  7609  001728  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  7610  00172A  B4D8               	btfsc	status,2,c
  7611  00172C  EF9A  F00B         	goto	u6711
  7612  001730  EF9C  F00B         	goto	u6710
  7613  001734                     u6711:
  7614  001734  EFB5  F00B         	goto	l5632
  7615  001738                     u6710:
  7616  001738                     
  7617                           ; BSR set to: 0
  7618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  7619  001738  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7620  00173C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7621  001740  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7622  001744  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7623  001748  0E02               	movlw	2
  7624  00174A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7625  00174C  0E00               	movlw	0
  7626  00174E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7627  001750  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7628  001754  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7629  001758                     	if	0	;tblptru may be non-zero
  7630  001758                     	endif
  7631  001758                     	if	0	;tblptru may be non-zero
  7632  001758                     	endif
  7633  001758  0008               	tblrd		*
  7634  00175A  50F5               	movf	tablat,w,c
  7635  00175C  6E07               	movwf	tolower@c^0,c
  7636  00175E  6A08               	clrf	(tolower@c+1)^0,c
  7637  001760  EC80  F028         	call	_tolower	;wreg free
  7638  001764  5007               	movf	?_tolower^0,w,c
  7639  001766  0100               	movlb	0	; () banked
  7640  001768  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  7641  00176A                     l5632:
  7642                           
  7643                           ; BSR set to: 0
  7644                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7645  00176A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7646  00176E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7647  001772  CFDE FFF6          	movff	postinc2,tblptrl
  7648  001776  CFDD FFF7          	movff	postdec2,tblptrh
  7649  00177A                     	if	0	;tblptru may be non-zero
  7650  00177A                     	endif
  7651  00177A                     	if	0	;tblptru may be non-zero
  7652  00177A                     	endif
  7653  00177A  0008               	tblrd		*
  7654  00177C  50F5               	movf	tablat,w,c
  7655  00177E  0A64               	xorlw	100
  7656  001780  B4D8               	btfsc	status,2,c
  7657  001782  EFC5  F00B         	goto	u6721
  7658  001786  EFC7  F00B         	goto	u6720
  7659  00178A                     u6721:
  7660  00178A  EFD9  F00B         	goto	l5636
  7661  00178E                     u6720:
  7662  00178E                     
  7663                           ; BSR set to: 0
  7664  00178E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7665  001792  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7666  001796  CFDE FFF6          	movff	postinc2,tblptrl
  7667  00179A  CFDD FFF7          	movff	postdec2,tblptrh
  7668  00179E                     	if	0	;tblptru may be non-zero
  7669  00179E                     	endif
  7670  00179E                     	if	0	;tblptru may be non-zero
  7671  00179E                     	endif
  7672  00179E  0008               	tblrd		*
  7673  0017A0  50F5               	movf	tablat,w,c
  7674  0017A2  0A69               	xorlw	105
  7675  0017A4  A4D8               	btfss	status,2,c
  7676  0017A6  EFD7  F00B         	goto	u6731
  7677  0017AA  EFD9  F00B         	goto	u6730
  7678  0017AE                     u6731:
  7679  0017AE  EF19  F00C         	goto	l5642
  7680  0017B2                     u6730:
  7681  0017B2                     l5636:
  7682                           
  7683                           ; BSR set to: 0
  7684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  7685  0017B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7686  0017B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7687  0017BA  2ADE               	incf	postinc2,f,c
  7688  0017BC  0E00               	movlw	0
  7689  0017BE  22DD               	addwfc	postdec2,f,c
  7690                           
  7691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7692  0017C0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7693  0017C4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7694  0017C8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7695  0017CC  0E02               	movlw	2
  7696  0017CE  26DE               	addwf	postinc2,f,c
  7697  0017D0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7698  0017D4  0E00               	movlw	0
  7699  0017D6  22DD               	addwfc	postdec2,f,c
  7700  0017D8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7701  0017DC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7702  0017E0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  7703  0017E4  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  7704  0017E8  0E00               	movlw	0
  7705  0017EA  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7706  0017EC  0EFF               	movlw	-1
  7707  0017EE  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7708  0017F0  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7709  0017F2  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7710  0017F4  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7711  0017F6  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7712  0017F8  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7713  0017FA                     
  7714                           ; BSR set to: 0
  7715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  7716  0017FA  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7717  0017FE  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7718  001802  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7719  001806  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7720  00180A  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7721  00180E  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7722  001812  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7723  001816  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7724  00181A  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7725  00181E  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7726  001822  ECFE  F014         	call	_dtoa	;wreg free
  7727  001826  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  7728  00182A  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7729  00182E  EF48  F00D         	goto	l1568
  7730  001832                     l5642:
  7731                           
  7732                           ; BSR set to: 0
  7733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  7734  001832  0E66               	movlw	102
  7735  001834  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  7736  001836  A4D8               	btfss	status,2,c
  7737  001838  EF20  F00C         	goto	u6741
  7738  00183C  EF22  F00C         	goto	u6740
  7739  001840                     u6741:
  7740  001840  EF62  F00C         	goto	l5654
  7741  001844                     u6740:
  7742  001844                     
  7743                           ; BSR set to: 0
  7744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  7745  001844  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7746  001848  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7747  00184C  CFDE FFF6          	movff	postinc2,tblptrl
  7748  001850  CFDD FFF7          	movff	postdec2,tblptrh
  7749  001854                     	if	0	;tblptru may be non-zero
  7750  001854                     	endif
  7751  001854                     	if	0	;tblptru may be non-zero
  7752  001854                     	endif
  7753  001854  0008               	tblrd		*
  7754  001856  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7755  00185A                     
  7756                           ; BSR set to: 0
  7757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  7758  00185A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7759  00185E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7760  001862  2ADE               	incf	postinc2,f,c
  7761  001864  0E00               	movlw	0
  7762  001866  22DD               	addwfc	postdec2,f,c
  7763  001868                     
  7764                           ; BSR set to: 0
  7765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7766  001868  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7767  00186C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7768  001870  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7769  001874  0E04               	movlw	4
  7770  001876  26DE               	addwf	postinc2,f,c
  7771  001878  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7772  00187C  0E00               	movlw	0
  7773  00187E  22DD               	addwfc	postdec2,f,c
  7774  001880  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7775  001884  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7776  001888  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7777  00188C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7778  001890  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7779  001894  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7780  001898                     l5650:
  7781                           
  7782                           ; BSR set to: 0
  7783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7784  001898  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7785  00189C  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7786  0018A0  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7787  0018A4  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7788  0018A8  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7789  0018AC  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7790  0018B0  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7791  0018B4  EC4F  F000         	call	_efgtoa	;wreg free
  7792  0018B8  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7793  0018BC  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7794  0018C0  EF48  F00D         	goto	l1568
  7795  0018C4                     l5654:
  7796                           
  7797                           ; BSR set to: 0
  7798                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7799  0018C4  0EC3               	movlw	low vfpfcnvrt@ct
  7800  0018C6  6E01               	movwf	strncmp@_l^0,c
  7801  0018C8  0E00               	movlw	high vfpfcnvrt@ct
  7802  0018CA  6E02               	movwf	(strncmp@_l+1)^0,c
  7803  0018CC  0EFB               	movlw	low STR_27
  7804  0018CE  6E03               	movwf	strncmp@_r^0,c
  7805  0018D0  0E7F               	movlw	high STR_27
  7806  0018D2  6E04               	movwf	(strncmp@_r+1)^0,c
  7807  0018D4  0E00               	movlw	0
  7808  0018D6  6E06               	movwf	(strncmp@n+1)^0,c
  7809  0018D8  0E02               	movlw	2
  7810  0018DA  6E05               	movwf	strncmp@n^0,c
  7811  0018DC  EC4E  F023         	call	_strncmp	;wreg free
  7812  0018E0  5001               	movf	?_strncmp^0,w,c
  7813  0018E2  1002               	iorwf	(?_strncmp+1)^0,w,c
  7814  0018E4  A4D8               	btfss	status,2,c
  7815  0018E6  EF77  F00C         	goto	u6751
  7816  0018EA  EF79  F00C         	goto	u6750
  7817  0018EE                     u6751:
  7818  0018EE  EFF5  F00C         	goto	l5670
  7819  0018F2                     u6750:
  7820  0018F2                     
  7821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7822  0018F2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7823  0018F6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7824  0018FA  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7825  0018FE  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7826  001902  0E01               	movlw	1
  7827  001904  0100               	movlb	0	; () banked
  7828  001906  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7829  001908  0E00               	movlw	0
  7830  00190A  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7831  00190C  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7832  001910  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7833  001914                     	if	0	;tblptru may be non-zero
  7834  001914                     	endif
  7835  001914                     	if	0	;tblptru may be non-zero
  7836  001914                     	endif
  7837  001914  0008               	tblrd		*
  7838  001916  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7839  00191A  0EBF               	movlw	191
  7840  00191C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7841  00191E  0EFF               	movlw	255
  7842  001920  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7843  001922  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7844  001926  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7845  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  7846  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  7847  001932                     	if	0	;tblptru may be non-zero
  7848  001932                     	endif
  7849  001932                     	if	0	;tblptru may be non-zero
  7850  001932                     	endif
  7851  001932  0008               	tblrd		*
  7852  001934  50F5               	movf	tablat,w,c
  7853  001936  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7854  001938  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7855  00193A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7856  00193C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7857  00193E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7858  001940  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7859  001942  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7860  001944  E10A               	bnz	u6760
  7861  001946  0E1A               	movlw	26
  7862  001948  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7863  00194A  A0D8               	btfss	status,0,c
  7864  00194C  EFAA  F00C         	goto	u6761
  7865  001950  EFAD  F00C         	goto	u6760
  7866  001954                     u6761:
  7867  001954  0E01               	movlw	1
  7868  001956  EFAE  F00C         	goto	u6770
  7869  00195A                     u6760:
  7870  00195A  0E00               	movlw	0
  7871  00195C                     u6770:
  7872  00195C  6FBD               	movwf	_vfpfcnvrt$3010& (0+255),b
  7873  00195E  6BBE               	clrf	(_vfpfcnvrt$3010+1)& (0+255),b
  7874  001960                     
  7875                           ; BSR set to: 0
  7876  001960  51BD               	movf	_vfpfcnvrt$3010& (0+255),w,b
  7877  001962  11BE               	iorwf	(_vfpfcnvrt$3010+1)& (0+255),w,b
  7878  001964  B4D8               	btfsc	status,2,c
  7879  001966  EFB7  F00C         	goto	u6781
  7880  00196A  EFB9  F00C         	goto	u6780
  7881  00196E                     u6781:
  7882  00196E  EFD3  F00C         	goto	l5664
  7883  001972                     u6780:
  7884  001972                     
  7885                           ; BSR set to: 0
  7886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7887  001972  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7888  001976  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7889  00197A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7890  00197E  0E04               	movlw	4
  7891  001980  26DE               	addwf	postinc2,f,c
  7892  001982  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7893  001986  0E00               	movlw	0
  7894  001988  22DD               	addwfc	postdec2,f,c
  7895  00198A  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7896  00198E  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7897  001992  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7898  001996  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7899  00199A  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7900  00199E  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7901                           
  7902                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7903  0019A2  EFEB  F00C         	goto	l1576
  7904  0019A6                     l5664:
  7905                           
  7906                           ; BSR set to: 0
  7907                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7908  0019A6  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7909  0019AA  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7910  0019AE  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7911  0019B2  0E04               	movlw	4
  7912  0019B4  26DE               	addwf	postinc2,f,c
  7913  0019B6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7914  0019BA  0E00               	movlw	0
  7915  0019BC  22DD               	addwfc	postdec2,f,c
  7916  0019BE  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7917  0019C2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7918  0019C6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7919  0019CA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7920  0019CE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7921  0019D2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7922  0019D6                     l1576:
  7923                           
  7924                           ; BSR set to: 0
  7925                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7926  0019D6  0E02               	movlw	2
  7927  0019D8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7928  0019DC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7929  0019E0  26DE               	addwf	postinc2,f,c
  7930  0019E2  0E00               	movlw	0
  7931  0019E4  22DD               	addwfc	postdec2,f,c
  7932  0019E6  EF4C  F00C         	goto	l5650
  7933  0019EA                     l5670:
  7934                           
  7935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7936  0019EA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7937  0019EE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7938  0019F2  CFDE FFF6          	movff	postinc2,tblptrl
  7939  0019F6  CFDD FFF7          	movff	postdec2,tblptrh
  7940  0019FA                     	if	0	;tblptru may be non-zero
  7941  0019FA                     	endif
  7942  0019FA                     	if	0	;tblptru may be non-zero
  7943  0019FA                     	endif
  7944  0019FA  0008               	tblrd		*
  7945  0019FC  50F5               	movf	tablat,w,c
  7946  0019FE  0A25               	xorlw	37
  7947  001A00  A4D8               	btfss	status,2,c
  7948  001A02  EF05  F00D         	goto	u6791
  7949  001A06  EF07  F00D         	goto	u6790
  7950  001A0A                     u6791:
  7951  001A0A  EF1F  F00D         	goto	l5680
  7952  001A0E                     u6790:
  7953  001A0E                     
  7954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7955  001A0E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7956  001A12  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7957  001A16  2ADE               	incf	postinc2,f,c
  7958  001A18  0E00               	movlw	0
  7959  001A1A  22DD               	addwfc	postdec2,f,c
  7960  001A1C                     
  7961                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7962  001A1C  0E00               	movlw	0
  7963  001A1E  6E02               	movwf	(fputc@c+1)^0,c
  7964  001A20  0E25               	movlw	37
  7965  001A22  6E01               	movwf	fputc@c^0,c
  7966  001A24  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7967  001A28  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7968  001A2C  EC22  F024         	call	_fputc	;wreg free
  7969  001A30                     l5676:
  7970                           
  7971                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7972  001A30  0E00               	movlw	0
  7973  001A32  0100               	movlb	0	; () banked
  7974  001A34  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7975  001A36  0E01               	movlw	1
  7976  001A38  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7977  001A3A  EF48  F00D         	goto	l1568
  7978  001A3E                     l5680:
  7979                           
  7980                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7981  001A3E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7982  001A42  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7983  001A46  2ADE               	incf	postinc2,f,c
  7984  001A48  0E00               	movlw	0
  7985  001A4A  22DD               	addwfc	postdec2,f,c
  7986  001A4C                     
  7987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7988  001A4C  0E00               	movlw	0
  7989  001A4E  0100               	movlb	0	; () banked
  7990  001A50  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7991  001A52  0E00               	movlw	0
  7992  001A54  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7993  001A56  EF48  F00D         	goto	l1568
  7994  001A5A                     l5686:
  7995                           
  7996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7997  001A5A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7998  001A5E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7999  001A62  CFDE FFF6          	movff	postinc2,tblptrl
  8000  001A66  CFDD FFF7          	movff	postdec2,tblptrh
  8001  001A6A                     	if	0	;tblptru may be non-zero
  8002  001A6A                     	endif
  8003  001A6A                     	if	0	;tblptru may be non-zero
  8004  001A6A                     	endif
  8005  001A6A  0008               	tblrd		*
  8006  001A6C  50F5               	movf	tablat,w,c
  8007  001A6E  6E01               	movwf	fputc@c^0,c
  8008  001A70  6A02               	clrf	(fputc@c+1)^0,c
  8009  001A72  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  8010  001A76  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  8011  001A7A  EC22  F024         	call	_fputc	;wreg free
  8012  001A7E                     
  8013                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  8014  001A7E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  8015  001A82  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  8016  001A86  2ADE               	incf	postinc2,f,c
  8017  001A88  0E00               	movlw	0
  8018  001A8A  22DD               	addwfc	postdec2,f,c
  8019  001A8C  EF18  F00D         	goto	l5676
  8020  001A90                     l1568:
  8021  001A90  0012               	return		;funcret
  8022  001A92                     __end_of_vfpfcnvrt:
  8023                           	callstack 0
  8024                           
  8025 ;; *************** function _strncmp *****************
  8026 ;; Defined at:
  8027 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  8028 ;; Parameters:    Size  Location     Type
  8029 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  8030 ;;		 -> vfpfcnvrt@ct(3), 
  8031 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  8032 ;;		 -> STR_29(3), 
  8033 ;;  n               2    4[COMRAM] unsigned int 
  8034 ;; Auto vars:     Size  Location     Type
  8035 ;;  r               2    9[COMRAM] PTR const unsigned char 
  8036 ;;		 -> STR_29(3), 
  8037 ;;  l               2    7[COMRAM] PTR const unsigned char 
  8038 ;;		 -> vfpfcnvrt@ct(3), 
  8039 ;; Return value:  Size  Location     Type
  8040 ;;                  2    0[COMRAM] int 
  8041 ;; Registers used:
  8042 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8043 ;; Tracked objects:
  8044 ;;		On entry : 0/0
  8045 ;;		On exit  : 0/0
  8046 ;;		Unchanged: 0/0
  8047 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8048 ;;      Params:         6       0       0       0       0       0       0
  8049 ;;      Locals:         4       0       0       0       0       0       0
  8050 ;;      Temps:          1       0       0       0       0       0       0
  8051 ;;      Totals:        11       0       0       0       0       0       0
  8052 ;;Total ram usage:       11 bytes
  8053 ;; Hardware stack levels used:    1
  8054 ;; Hardware stack levels required when called:    1
  8055 ;; This function calls:
  8056 ;;		Nothing
  8057 ;; This function is called by:
  8058 ;;		_vfpfcnvrt
  8059 ;; This function uses a non-reentrant model
  8060 ;;
  8061                           
  8062                           	psect	text33
  8063  00469C                     __ptext33:
  8064                           	callstack 0
  8065  00469C                     _strncmp:
  8066                           	callstack 23
  8067  00469C  C001  F008         	movff	strncmp@_l,strncmp@l
  8068  0046A0  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8069  0046A4  C003  F00A         	movff	strncmp@_r,strncmp@r
  8070  0046A8  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8071  0046AC  0605               	decf	strncmp@n^0,f,c
  8072  0046AE  A0D8               	btfss	status,0,c
  8073  0046B0  0606               	decf	(strncmp@n+1)^0,f,c
  8074  0046B2  2805               	incf	strncmp@n^0,w,c
  8075  0046B4  E106               	bnz	u6341
  8076  0046B6  2806               	incf	(strncmp@n+1)^0,w,c
  8077  0046B8  A4D8               	btfss	status,2,c
  8078  0046BA  EF61  F023         	goto	u6341
  8079  0046BE  EF63  F023         	goto	u6340
  8080  0046C2                     u6341:
  8081  0046C2  EF70  F023         	goto	l5448
  8082  0046C6                     u6340:
  8083  0046C6  0E00               	movlw	0
  8084  0046C8  6E02               	movwf	(?_strncmp+1)^0,c
  8085  0046CA  0E00               	movlw	0
  8086  0046CC  6E01               	movwf	?_strncmp^0,c
  8087  0046CE  EFB8  F023         	goto	l1704
  8088  0046D2                     l5446:
  8089  0046D2  4A08               	infsnz	strncmp@l^0,f,c
  8090  0046D4  2A09               	incf	(strncmp@l+1)^0,f,c
  8091  0046D6  4A0A               	infsnz	strncmp@r^0,f,c
  8092  0046D8  2A0B               	incf	(strncmp@r+1)^0,f,c
  8093  0046DA  0605               	decf	strncmp@n^0,f,c
  8094  0046DC  A0D8               	btfss	status,0,c
  8095  0046DE  0606               	decf	(strncmp@n+1)^0,f,c
  8096  0046E0                     l5448:
  8097  0046E0  C008  FFD9         	movff	strncmp@l,fsr2l
  8098  0046E4  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8099  0046E8  50DF               	movf	indf2,w,c
  8100  0046EA  B4D8               	btfsc	status,2,c
  8101  0046EC  EF7A  F023         	goto	u6351
  8102  0046F0  EF7C  F023         	goto	u6350
  8103  0046F4                     u6351:
  8104  0046F4  EFA7  F023         	goto	l5456
  8105  0046F8                     u6350:
  8106  0046F8  C00A  FFF6         	movff	strncmp@r,tblptrl
  8107  0046FC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8108  004700                     	if	0	;tblptru may be non-zero
  8109  004700                     	endif
  8110  004700                     	if	0	;tblptru may be non-zero
  8111  004700                     	endif
  8112  004700  0008               	tblrd		*
  8113  004702  50F5               	movf	tablat,w,c
  8114  004704  0900               	iorlw	0
  8115  004706  B4D8               	btfsc	status,2,c
  8116  004708  EF88  F023         	goto	u6361
  8117  00470C  EF8A  F023         	goto	u6360
  8118  004710                     u6361:
  8119  004710  EFA7  F023         	goto	l5456
  8120  004714                     u6360:
  8121  004714  5005               	movf	strncmp@n^0,w,c
  8122  004716  1006               	iorwf	(strncmp@n+1)^0,w,c
  8123  004718  B4D8               	btfsc	status,2,c
  8124  00471A  EF91  F023         	goto	u6371
  8125  00471E  EF93  F023         	goto	u6370
  8126  004722                     u6371:
  8127  004722  EFA7  F023         	goto	l5456
  8128  004726                     u6370:
  8129  004726  C008  FFD9         	movff	strncmp@l,fsr2l
  8130  00472A  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8131  00472E  50DF               	movf	indf2,w,c
  8132  004730  6E07               	movwf	??_strncmp^0,c
  8133  004732  C00A  FFF6         	movff	strncmp@r,tblptrl
  8134  004736  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8135  00473A                     	if	0	;tblptru may be non-zero
  8136  00473A                     	endif
  8137  00473A                     	if	0	;tblptru may be non-zero
  8138  00473A                     	endif
  8139  00473A  0008               	tblrd		*
  8140  00473C  50F5               	movf	tablat,w,c
  8141  00473E  1807               	xorwf	??_strncmp^0,w,c
  8142  004740  B4D8               	btfsc	status,2,c
  8143  004742  EFA5  F023         	goto	u6381
  8144  004746  EFA7  F023         	goto	u6380
  8145  00474A                     u6381:
  8146  00474A  EF69  F023         	goto	l5446
  8147  00474E                     u6380:
  8148  00474E                     l5456:
  8149  00474E  C008  FFD9         	movff	strncmp@l,fsr2l
  8150  004752  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8151  004756  50DF               	movf	indf2,w,c
  8152  004758  6E07               	movwf	??_strncmp^0,c
  8153  00475A  C00A  FFF6         	movff	strncmp@r,tblptrl
  8154  00475E  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8155  004762                     	if	0	;tblptru may be non-zero
  8156  004762                     	endif
  8157  004762                     	if	0	;tblptru may be non-zero
  8158  004762                     	endif
  8159  004762  0008               	tblrd		*
  8160  004764  50F5               	movf	tablat,w,c
  8161  004766  5C07               	subwf	??_strncmp^0,w,c
  8162  004768  6E01               	movwf	?_strncmp^0,c
  8163  00476A  6A02               	clrf	(?_strncmp+1)^0,c
  8164  00476C  A0D8               	btfss	status,0,c
  8165  00476E  0602               	decf	(?_strncmp+1)^0,f,c
  8166  004770                     l1704:
  8167  004770  0012               	return		;funcret
  8168  004772                     __end_of_strncmp:
  8169                           	callstack 0
  8170                           
  8171 ;; *************** function _efgtoa *****************
  8172 ;; Defined at:
  8173 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8174 ;; Parameters:    Size  Location     Type
  8175 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  8176 ;;		 -> sprintf@f(6), 
  8177 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  8178 ;;  c               1   93[COMRAM] unsigned char 
  8179 ;; Auto vars:     Size  Location     Type
  8180 ;;  u               4   67[BANK0 ] unsigned char 
  8181 ;;  g               4   59[BANK0 ] unsigned char 
  8182 ;;  l               4   53[BANK0 ] unsigned char 
  8183 ;;  h               4   49[BANK0 ] unsigned char 
  8184 ;;  ou              4   15[BANK0 ] unsigned char 
  8185 ;;  n               2   65[BANK0 ] int 
  8186 ;;  e               2   63[BANK0 ] int 
  8187 ;;  i               2   57[BANK0 ] int 
  8188 ;;  w               2   46[BANK0 ] int 
  8189 ;;  p               2   43[BANK0 ] int 
  8190 ;;  sign            2   41[BANK0 ] int 
  8191 ;;  d               2   39[BANK0 ] int 
  8192 ;;  ne              2   37[BANK0 ] int 
  8193 ;;  m               2   35[BANK0 ] int 
  8194 ;;  pp              2   33[BANK0 ] int 
  8195 ;;  t               2   31[BANK0 ] int 
  8196 ;;  mode            1   48[BANK0 ] unsigned char 
  8197 ;;  nmode           1   45[BANK0 ] unsigned char 
  8198 ;; Return value:  Size  Location     Type
  8199 ;;                  2   87[COMRAM] int 
  8200 ;; Registers used:
  8201 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8202 ;; Tracked objects:
  8203 ;;		On entry : 0/0
  8204 ;;		On exit  : 0/0
  8205 ;;		Unchanged: 0/0
  8206 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8207 ;;      Params:         7       0       0       0       0       0       0
  8208 ;;      Locals:         0      56       0       0       0       0       0
  8209 ;;      Temps:          0       5       0       0       0       0       0
  8210 ;;      Totals:         7      61       0       0       0       0       0
  8211 ;;Total ram usage:       68 bytes
  8212 ;; Hardware stack levels used:    1
  8213 ;; Hardware stack levels required when called:    5
  8214 ;; This function calls:
  8215 ;;		___awdiv
  8216 ;;		___awmod
  8217 ;;		___fladd
  8218 ;;		___fldiv
  8219 ;;		___fleq
  8220 ;;		___flge
  8221 ;;		___flmul
  8222 ;;		___flneg
  8223 ;;		___flsub
  8224 ;;		___fltol
  8225 ;;		___fpclassifyf
  8226 ;;		_floorf
  8227 ;;		_isupper
  8228 ;;		_pad
  8229 ;;		_strcpy
  8230 ;;		_tolower
  8231 ;; This function is called by:
  8232 ;;		_vfpfcnvrt
  8233 ;; This function uses a non-reentrant model
  8234 ;;
  8235                           
  8236                           	psect	text34
  8237  00009E                     __ptext34:
  8238                           	callstack 0
  8239  00009E                     _efgtoa:
  8240                           	callstack 19
  8241  00009E                     
  8242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  8243  00009E  0E00               	movlw	0
  8244  0000A0  0100               	movlb	0	; () banked
  8245  0000A2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8246  0000A4  0E00               	movlw	0
  8247  0000A6  6F89               	movwf	efgtoa@sign& (0+255),b
  8248  0000A8                     
  8249                           ; BSR set to: 0
  8250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  8251  0000A8  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  8252  0000AC  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  8253  0000B0  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  8254  0000B4  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  8255  0000B8                     
  8256                           ; BSR set to: 0
  8257                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  8258  0000B8  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8259  0000BA  EF63  F000         	goto	u5750
  8260  0000BE  EF61  F000         	goto	u5751
  8261  0000C2                     u5751:
  8262  0000C2  EF79  F000         	goto	l5110
  8263  0000C6                     u5750:
  8264  0000C6                     
  8265                           ; BSR set to: 0
  8266                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  8267  0000C6  0E00               	movlw	0
  8268  0000C8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8269  0000CA  0E01               	movlw	1
  8270  0000CC  6F89               	movwf	efgtoa@sign& (0+255),b
  8271  0000CE                     
  8272                           ; BSR set to: 0
  8273                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  8274  0000CE  C09B  F001         	movff	efgtoa@g,___flneg@f1
  8275  0000D2  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  8276  0000D6  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  8277  0000DA  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  8278  0000DE  ECAB  F02A         	call	___flneg	;wreg free
  8279  0000E2  C001  F09B         	movff	?___flneg,efgtoa@g
  8280  0000E6  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  8281  0000EA  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  8282  0000EE  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  8283  0000F2                     l5110:
  8284                           
  8285                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  8286  0000F2  0E00               	movlw	0
  8287  0000F4  0100               	movlb	0	; () banked
  8288  0000F6  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  8289  0000F8  0E00               	movlw	0
  8290  0000FA  6FA1               	movwf	efgtoa@n& (0+255),b
  8291  0000FC                     
  8292                           ; BSR set to: 0
  8293                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  8294  0000FC  C1B1  F08E         	movff	_width,efgtoa@w
  8295  000100  C1B2  F08F         	movff	_width+1,efgtoa@w+1
  8296  000104                     
  8297                           ; BSR set to: 0
  8298                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  8299  000104  5189               	movf	efgtoa@sign& (0+255),w,b
  8300  000106  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8301  000108  A4D8               	btfss	status,2,c
  8302  00010A  EF89  F000         	goto	u5761
  8303  00010E  EF8B  F000         	goto	u5760
  8304  000112                     u5761:
  8305  000112  EF92  F000         	goto	l5118
  8306  000116                     u5760:
  8307  000116                     
  8308                           ; BSR set to: 0
  8309  000116  A5F8               	btfss	_flags& (0+255),2,b
  8310  000118  EF90  F000         	goto	u5771
  8311  00011C  EF92  F000         	goto	u5770
  8312  000120                     u5771:
  8313  000120  EFAC  F000         	goto	l5130
  8314  000124                     u5770:
  8315  000124                     l5118:
  8316                           
  8317                           ; BSR set to: 0
  8318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  8319  000124  5189               	movf	efgtoa@sign& (0+255),w,b
  8320  000126  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8321  000128  A4D8               	btfss	status,2,c
  8322  00012A  EF99  F000         	goto	u5781
  8323  00012E  EF9B  F000         	goto	u5780
  8324  000132                     u5781:
  8325  000132  EFA1  F000         	goto	l5122
  8326  000136                     u5780:
  8327  000136                     
  8328                           ; BSR set to: 0
  8329  000136  0E00               	movlw	0
  8330  000138  6F74               	movwf	(_efgtoa$2979+1)& (0+255),b
  8331  00013A  0E2B               	movlw	43
  8332  00013C  6F73               	movwf	_efgtoa$2979& (0+255),b
  8333  00013E  EFA5  F000         	goto	l5124
  8334  000142                     l5122:
  8335                           
  8336                           ; BSR set to: 0
  8337  000142  0E00               	movlw	0
  8338  000144  6F74               	movwf	(_efgtoa$2979+1)& (0+255),b
  8339  000146  0E2D               	movlw	45
  8340  000148  6F73               	movwf	_efgtoa$2979& (0+255),b
  8341  00014A                     l5124:
  8342                           
  8343                           ; BSR set to: 0
  8344  00014A  C073  F260         	movff	_efgtoa$2979,_dbuf
  8345  00014E                     
  8346                           ; BSR set to: 0
  8347                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  8348  00014E  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8349  000150  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8350  000152                     
  8351                           ; BSR set to: 0
  8352                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  8353  000152  078E               	decf	efgtoa@w& (0+255),f,b
  8354  000154  A0D8               	btfss	status,0,c
  8355  000156  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8356  000158                     l5130:
  8357                           
  8358                           ; BSR set to: 0
  8359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8360  000158  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8361  00015C  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8362  000160  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8363  000164  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8364  000168  EC64  F022         	call	___fpclassifyf	;wreg free
  8365  00016C  0401               	decf	?___fpclassifyf^0,w,c
  8366  00016E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8367  000170  A4D8               	btfss	status,2,c
  8368  000172  EFBD  F000         	goto	u5791
  8369  000176  EFBF  F000         	goto	u5790
  8370  00017A                     u5791:
  8371  00017A  EF16  F001         	goto	l5148
  8372  00017E                     u5790:
  8373  00017E  0EBF               	movlw	191
  8374  000180  0100               	movlb	0	; () banked
  8375  000182  6F6A               	movwf	??_efgtoa& (0+255),b
  8376  000184  0EFF               	movlw	255
  8377  000186  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8378  000188  505E               	movf	efgtoa@c^0,w,c
  8379  00018A  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8380  00018C  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8381  00018E  516A               	movf	??_efgtoa& (0+255),w,b
  8382  000190  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8383  000192  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8384  000194  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8385  000196  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8386  000198  E10A               	bnz	u5800
  8387  00019A  0E1A               	movlw	26
  8388  00019C  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8389  00019E  A0D8               	btfss	status,0,c
  8390  0001A0  EFD4  F000         	goto	u5801
  8391  0001A4  EFD7  F000         	goto	u5800
  8392  0001A8                     u5801:
  8393  0001A8  0E01               	movlw	1
  8394  0001AA  EFD8  F000         	goto	u5810
  8395  0001AE                     u5800:
  8396  0001AE  0E00               	movlw	0
  8397  0001B0                     u5810:
  8398  0001B0  6F75               	movwf	_efgtoa$2980& (0+255),b
  8399  0001B2  6B76               	clrf	(_efgtoa$2980+1)& (0+255),b
  8400  0001B4                     
  8401                           ; BSR set to: 0
  8402  0001B4  5175               	movf	_efgtoa$2980& (0+255),w,b
  8403  0001B6  1176               	iorwf	(_efgtoa$2980+1)& (0+255),w,b
  8404  0001B8  B4D8               	btfsc	status,2,c
  8405  0001BA  EFE1  F000         	goto	u5821
  8406  0001BE  EFE3  F000         	goto	u5820
  8407  0001C2                     u5821:
  8408  0001C2  EFF1  F000         	goto	l5140
  8409  0001C6                     u5820:
  8410  0001C6                     
  8411                           ; BSR set to: 0
  8412                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  8413  0001C6  0E60               	movlw	low _dbuf
  8414  0001C8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8415  0001CA  6E01               	movwf	strcpy@dest^0,c
  8416  0001CC  0E02               	movlw	high _dbuf
  8417  0001CE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8418  0001D0  6E02               	movwf	(strcpy@dest+1)^0,c
  8419  0001D2  0EEB               	movlw	low STR_19
  8420  0001D4  6E03               	movwf	strcpy@src^0,c
  8421  0001D6  0E7F               	movlw	high STR_19
  8422  0001D8  6E04               	movwf	(strcpy@src+1)^0,c
  8423  0001DA  ECB0  F028         	call	_strcpy	;wreg free
  8424                           
  8425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  8426  0001DE  EFFD  F000         	goto	l5142
  8427  0001E2                     l5140:
  8428                           
  8429                           ; BSR set to: 0
  8430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  8431  0001E2  0E60               	movlw	low _dbuf
  8432  0001E4  25A1               	addwf	efgtoa@n& (0+255),w,b
  8433  0001E6  6E01               	movwf	strcpy@dest^0,c
  8434  0001E8  0E02               	movlw	high _dbuf
  8435  0001EA  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8436  0001EC  6E02               	movwf	(strcpy@dest+1)^0,c
  8437  0001EE  0EF3               	movlw	low STR_20
  8438  0001F0  6E03               	movwf	strcpy@src^0,c
  8439  0001F2  0E7F               	movlw	high STR_20
  8440  0001F4  6E04               	movwf	(strcpy@src+1)^0,c
  8441  0001F6  ECB0  F028         	call	_strcpy	;wreg free
  8442  0001FA                     l5142:
  8443                           
  8444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8445  0001FA  0100               	movlb	0	; () banked
  8446  0001FC  0EFD               	movlw	253
  8447  0001FE  278E               	addwf	efgtoa@w& (0+255),f,b
  8448  000200  0EFF               	movlw	255
  8449  000202  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8450  000204                     l5144:
  8451                           
  8452                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8453  000204  C058  F011         	movff	efgtoa@fp,pad@fp
  8454  000208  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  8455  00020C  0E60               	movlw	low _dbuf
  8456  00020E  6E13               	movwf	pad@buf^0,c
  8457  000210  0E02               	movlw	high _dbuf
  8458  000212  6E14               	movwf	(pad@buf+1)^0,c
  8459  000214  C08E  F015         	movff	efgtoa@w,pad@p
  8460  000218  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  8461  00021C  EC87  F024         	call	_pad	;wreg free
  8462  000220  C011  F058         	movff	?_pad,?_efgtoa
  8463  000224  C012  F059         	movff	?_pad+1,?_efgtoa+1
  8464  000228  EF26  F006         	goto	l1466
  8465  00022C                     l5148:
  8466                           
  8467                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8468  00022C  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8469  000230  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8470  000234  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8471  000238  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8472  00023C  EC64  F022         	call	___fpclassifyf	;wreg free
  8473  000240  5001               	movf	?___fpclassifyf^0,w,c
  8474  000242  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8475  000244  A4D8               	btfss	status,2,c
  8476  000246  EF27  F001         	goto	u5831
  8477  00024A  EF29  F001         	goto	u5830
  8478  00024E                     u5831:
  8479  00024E  EF69  F001         	goto	l5166
  8480  000252                     u5830:
  8481  000252  0EBF               	movlw	191
  8482  000254  0100               	movlb	0	; () banked
  8483  000256  6F6A               	movwf	??_efgtoa& (0+255),b
  8484  000258  0EFF               	movlw	255
  8485  00025A  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8486  00025C  505E               	movf	efgtoa@c^0,w,c
  8487  00025E  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8488  000260  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8489  000262  516A               	movf	??_efgtoa& (0+255),w,b
  8490  000264  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8491  000266  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8492  000268  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8493  00026A  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8494  00026C  E10A               	bnz	u5840
  8495  00026E  0E1A               	movlw	26
  8496  000270  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8497  000272  A0D8               	btfss	status,0,c
  8498  000274  EF3E  F001         	goto	u5841
  8499  000278  EF41  F001         	goto	u5840
  8500  00027C                     u5841:
  8501  00027C  0E01               	movlw	1
  8502  00027E  EF42  F001         	goto	u5850
  8503  000282                     u5840:
  8504  000282  0E00               	movlw	0
  8505  000284                     u5850:
  8506  000284  6F77               	movwf	_efgtoa$2984& (0+255),b
  8507  000286  6B78               	clrf	(_efgtoa$2984+1)& (0+255),b
  8508  000288                     
  8509                           ; BSR set to: 0
  8510  000288  5177               	movf	_efgtoa$2984& (0+255),w,b
  8511  00028A  1178               	iorwf	(_efgtoa$2984+1)& (0+255),w,b
  8512  00028C  B4D8               	btfsc	status,2,c
  8513  00028E  EF4B  F001         	goto	u5861
  8514  000292  EF4D  F001         	goto	u5860
  8515  000296                     u5861:
  8516  000296  EF5B  F001         	goto	l5158
  8517  00029A                     u5860:
  8518  00029A                     
  8519                           ; BSR set to: 0
  8520                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  8521  00029A  0E60               	movlw	low _dbuf
  8522  00029C  25A1               	addwf	efgtoa@n& (0+255),w,b
  8523  00029E  6E01               	movwf	strcpy@dest^0,c
  8524  0002A0  0E02               	movlw	high _dbuf
  8525  0002A2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8526  0002A4  6E02               	movwf	(strcpy@dest+1)^0,c
  8527  0002A6  0EEF               	movlw	low STR_23
  8528  0002A8  6E03               	movwf	strcpy@src^0,c
  8529  0002AA  0E7F               	movlw	high STR_23
  8530  0002AC  6E04               	movwf	(strcpy@src+1)^0,c
  8531  0002AE  ECB0  F028         	call	_strcpy	;wreg free
  8532                           
  8533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  8534  0002B2  EFFD  F000         	goto	l5142
  8535  0002B6                     l5158:
  8536                           
  8537                           ; BSR set to: 0
  8538                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  8539  0002B6  0E60               	movlw	low _dbuf
  8540  0002B8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8541  0002BA  6E01               	movwf	strcpy@dest^0,c
  8542  0002BC  0E02               	movlw	high _dbuf
  8543  0002BE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8544  0002C0  6E02               	movwf	(strcpy@dest+1)^0,c
  8545  0002C2  0EF7               	movlw	low STR_24
  8546  0002C4  6E03               	movwf	strcpy@src^0,c
  8547  0002C6  0E7F               	movlw	high STR_24
  8548  0002C8  6E04               	movwf	(strcpy@src+1)^0,c
  8549  0002CA  ECB0  F028         	call	_strcpy	;wreg free
  8550  0002CE  EFFD  F000         	goto	l5142
  8551  0002D2                     l5166:
  8552                           
  8553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  8554  0002D2  0E00               	movlw	0
  8555  0002D4  0100               	movlb	0	; () banked
  8556  0002D6  6FA3               	movwf	efgtoa@u& (0+255),b
  8557  0002D8  0E00               	movlw	0
  8558  0002DA  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8559  0002DC  0E80               	movlw	128
  8560  0002DE  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8561  0002E0  0E3F               	movlw	63
  8562  0002E2  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8563                           
  8564                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  8565  0002E4  0E00               	movlw	0
  8566  0002E6  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8567  0002E8  0E00               	movlw	0
  8568  0002EA  6F9F               	movwf	efgtoa@e& (0+255),b
  8569  0002EC                     
  8570                           ; BSR set to: 0
  8571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  8572  0002EC  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  8573  0002F0  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  8574  0002F4  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  8575  0002F8  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  8576  0002FC  0E00               	movlw	0
  8577  0002FE  6E05               	movwf	___fleq@ff2^0,c
  8578  000300  0E00               	movlw	0
  8579  000302  6E06               	movwf	(___fleq@ff2+1)^0,c
  8580  000304  0E00               	movlw	0
  8581  000306  6E07               	movwf	(___fleq@ff2+2)^0,c
  8582  000308  0E00               	movlw	0
  8583  00030A  6E08               	movwf	(___fleq@ff2+3)^0,c
  8584  00030C  ECFD  F025         	call	___fleq	;wreg free
  8585  000310  B0D8               	btfsc	status,0,c
  8586  000312  EF8D  F001         	goto	u5871
  8587  000316  EF8F  F001         	goto	u5870
  8588  00031A                     u5871:
  8589  00031A  EF12  F002         	goto	l5184
  8590  00031E                     u5870:
  8591  00031E  EFAE  F001         	goto	l5176
  8592  000322                     l5172:
  8593                           
  8594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  8595  000322  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8596  000326  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8597  00032A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8598  00032E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8599  000332  0E00               	movlw	0
  8600  000334  6E20               	movwf	___flmul@a^0,c
  8601  000336  0E00               	movlw	0
  8602  000338  6E21               	movwf	(___flmul@a+1)^0,c
  8603  00033A  0E20               	movlw	32
  8604  00033C  6E22               	movwf	(___flmul@a+2)^0,c
  8605  00033E  0E41               	movlw	65
  8606  000340  6E23               	movwf	(___flmul@a+3)^0,c
  8607  000342  ECA9  F00F         	call	___flmul	;wreg free
  8608  000346  C01C  F0A3         	movff	?___flmul,efgtoa@u
  8609  00034A  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  8610  00034E  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  8611  000352  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  8612  000356                     
  8613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  8614  000356  0100               	movlb	0	; () banked
  8615  000358  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  8616  00035A  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8617  00035C                     l5176:
  8618                           
  8619                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  8620  00035C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8621  000360  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8622  000364  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8623  000368  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8624  00036C  0E00               	movlw	0
  8625  00036E  6E20               	movwf	___flmul@a^0,c
  8626  000370  0E00               	movlw	0
  8627  000372  6E21               	movwf	(___flmul@a+1)^0,c
  8628  000374  0E20               	movlw	32
  8629  000376  6E22               	movwf	(___flmul@a+2)^0,c
  8630  000378  0E41               	movlw	65
  8631  00037A  6E23               	movwf	(___flmul@a+3)^0,c
  8632  00037C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8633  000380  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8634  000384  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8635  000388  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8636  00038C  ECA9  F00F         	call	___flmul	;wreg free
  8637  000390  C01C  F039         	movff	?___flmul,___flge@ff2
  8638  000394  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  8639  000398  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  8640  00039C  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  8641  0003A0  ECE2  F021         	call	___flge	;wreg free
  8642  0003A4  B0D8               	btfsc	status,0,c
  8643  0003A6  EFD7  F001         	goto	u5881
  8644  0003AA  EFD9  F001         	goto	u5880
  8645  0003AE                     u5881:
  8646  0003AE  EF91  F001         	goto	l5172
  8647  0003B2                     u5880:
  8648  0003B2  EFF9  F001         	goto	l5182
  8649  0003B6                     l5178:
  8650                           
  8651                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  8652  0003B6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8653  0003BA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8654  0003BE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8655  0003C2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8656  0003C6  0E00               	movlw	0
  8657  0003C8  6E39               	movwf	___fldiv@a^0,c
  8658  0003CA  0E00               	movlw	0
  8659  0003CC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8660  0003CE  0E20               	movlw	32
  8661  0003D0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8662  0003D2  0E41               	movlw	65
  8663  0003D4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8664  0003D6  ECBE  F011         	call	___fldiv	;wreg free
  8665  0003DA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8666  0003DE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8667  0003E2  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8668  0003E6  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8669  0003EA                     
  8670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  8671  0003EA  0100               	movlb	0	; () banked
  8672  0003EC  079F               	decf	efgtoa@e& (0+255),f,b
  8673  0003EE  A0D8               	btfss	status,0,c
  8674  0003F0  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  8675  0003F2                     l5182:
  8676                           
  8677                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  8678  0003F2  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8679  0003F6  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8680  0003FA  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8681  0003FE  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8682  000402  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  8683  000406  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  8684  00040A  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  8685  00040E  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  8686  000412  ECE2  F021         	call	___flge	;wreg free
  8687  000416  A0D8               	btfss	status,0,c
  8688  000418  EF10  F002         	goto	u5891
  8689  00041C  EF12  F002         	goto	u5890
  8690  000420                     u5891:
  8691  000420  EFDB  F001         	goto	l5178
  8692  000424                     u5890:
  8693  000424                     l5184:
  8694                           
  8695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  8696  000424  C05E  F007         	movff	efgtoa@c,tolower@c
  8697  000428  6A08               	clrf	(tolower@c+1)^0,c
  8698  00042A  EC80  F028         	call	_tolower	;wreg free
  8699  00042E  5007               	movf	?_tolower^0,w,c
  8700  000430  0100               	movlb	0	; () banked
  8701  000432  6F90               	movwf	efgtoa@mode& (0+255),b
  8702  000434                     
  8703                           ; BSR set to: 0
  8704                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  8705  000434  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  8706  000438                     
  8707                           ; BSR set to: 0
  8708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  8709  000438  0E67               	movlw	103
  8710  00043A  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8711  00043C  A4D8               	btfss	status,2,c
  8712  00043E  EF23  F002         	goto	u5901
  8713  000442  EF25  F002         	goto	u5900
  8714  000446                     u5901:
  8715  000446  EF4B  F002         	goto	l5198
  8716  00044A                     u5900:
  8717  00044A                     
  8718                           ; BSR set to: 0
  8719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  8720  00044A  51F6               	movf	_prec& (0+255),w,b
  8721  00044C  11F7               	iorwf	(_prec+1)& (0+255),w,b
  8722  00044E  A4D8               	btfss	status,2,c
  8723  000450  EF2C  F002         	goto	u5911
  8724  000454  EF2E  F002         	goto	u5910
  8725  000458                     u5911:
  8726  000458  EF32  F002         	goto	l5194
  8727  00045C                     u5910:
  8728  00045C                     
  8729                           ; BSR set to: 0
  8730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  8731  00045C  0E00               	movlw	0
  8732  00045E  6FF7               	movwf	(_prec+1)& (0+255),b
  8733  000460  0E01               	movlw	1
  8734  000462  6FF6               	movwf	_prec& (0+255),b
  8735  000464                     l5194:
  8736                           
  8737                           ; BSR set to: 0
  8738                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  8739  000464  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8740  000466  EF3F  F002         	goto	u5920
  8741  00046A  51F7               	movf	(_prec+1)& (0+255),w,b
  8742  00046C  E106               	bnz	u5921
  8743  00046E  05F6               	decf	_prec& (0+255),w,b
  8744  000470  B0D8               	btfsc	status,0,c
  8745  000472  EF3D  F002         	goto	u5921
  8746  000476  EF3F  F002         	goto	u5920
  8747  00047A                     u5921:
  8748  00047A  EF45  F002         	goto	l1484
  8749  00047E                     u5920:
  8750  00047E                     l5196:
  8751                           
  8752                           ; BSR set to: 0
  8753  00047E  0E00               	movlw	0
  8754  000480  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8755  000482  0E06               	movlw	6
  8756  000484  6F8B               	movwf	efgtoa@p& (0+255),b
  8757  000486  EF54  F002         	goto	l5204
  8758  00048A                     l1484:
  8759                           
  8760                           ; BSR set to: 0
  8761  00048A  C0F6  F08B         	movff	_prec,efgtoa@p
  8762  00048E  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  8763  000492  EF54  F002         	goto	l5204
  8764  000496                     l5198:
  8765                           
  8766                           ; BSR set to: 0
  8767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  8768  000496  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8769  000498  EF50  F002         	goto	u5931
  8770  00049C  EF52  F002         	goto	u5930
  8771  0004A0                     u5931:
  8772  0004A0  EF3F  F002         	goto	l5196
  8773  0004A4                     u5930:
  8774  0004A4  EF45  F002         	goto	l1484
  8775  0004A8                     l5204:
  8776                           
  8777                           ; BSR set to: 0
  8778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8779  0004A8  0E67               	movlw	103
  8780  0004AA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8781  0004AC  A4D8               	btfss	status,2,c
  8782  0004AE  EF5B  F002         	goto	u5941
  8783  0004B2  EF5D  F002         	goto	u5940
  8784  0004B6                     u5941:
  8785  0004B6  EF8C  F002         	goto	l5214
  8786  0004BA                     u5940:
  8787  0004BA                     
  8788                           ; BSR set to: 0
  8789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8790  0004BA  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8791  0004BC  EF6B  F002         	goto	u5950
  8792  0004C0  0EFC               	movlw	252
  8793  0004C2  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8794  0004C4  0EFF               	movlw	255
  8795  0004C6  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8796  0004C8  A0D8               	btfss	status,0,c
  8797  0004CA  EF69  F002         	goto	u5951
  8798  0004CE  EF6B  F002         	goto	u5950
  8799  0004D2                     u5951:
  8800  0004D2  EF8A  F002         	goto	l5212
  8801  0004D6                     u5950:
  8802  0004D6                     
  8803                           ; BSR set to: 0
  8804  0004D6  0EFF               	movlw	255
  8805  0004D8  6F6A               	movwf	??_efgtoa& (0+255),b
  8806  0004DA  0EFF               	movlw	255
  8807  0004DC  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8808  0004DE  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8809  0004E2  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8810  0004E6  516A               	movf	??_efgtoa& (0+255),w,b
  8811  0004E8  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8812  0004EA  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8813  0004EC  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8814  0004EE  519F               	movf	efgtoa@e& (0+255),w,b
  8815  0004F0  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8816  0004F2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8817  0004F4  0A80               	xorlw	128
  8818  0004F6  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8819  0004F8  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8820  0004FA  0A80               	xorlw	128
  8821  0004FC  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8822  0004FE  A0D8               	btfss	status,0,c
  8823  000500  EF84  F002         	goto	u5961
  8824  000504  EF86  F002         	goto	u5960
  8825  000508                     u5961:
  8826  000508  EF8A  F002         	goto	l5212
  8827  00050C                     u5960:
  8828  00050C                     
  8829                           ; BSR set to: 0
  8830                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8831  00050C  0E66               	movlw	102
  8832  00050E  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8833                           
  8834                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8835  000510  EF8C  F002         	goto	l5214
  8836  000514                     l5212:
  8837                           
  8838                           ; BSR set to: 0
  8839                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8840  000514  0E65               	movlw	101
  8841  000516  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8842  000518                     l5214:
  8843                           
  8844                           ; BSR set to: 0
  8845                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8846  000518  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8847  00051C  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8848  000520                     
  8849                           ; BSR set to: 0
  8850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8851  000520  0E67               	movlw	103
  8852  000522  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8853  000524  A4D8               	btfss	status,2,c
  8854  000526  EF97  F002         	goto	u5971
  8855  00052A  EF99  F002         	goto	u5970
  8856  00052E                     u5971:
  8857  00052E  EFA9  F002         	goto	l5222
  8858  000532                     u5970:
  8859  000532                     
  8860                           ; BSR set to: 0
  8861  000532  0E66               	movlw	102
  8862  000534  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8863  000536  A4D8               	btfss	status,2,c
  8864  000538  EFA0  F002         	goto	u5981
  8865  00053C  EFA2  F002         	goto	u5980
  8866  000540                     u5981:
  8867  000540  EFAB  F002         	goto	l5224
  8868  000544                     u5980:
  8869  000544                     
  8870                           ; BSR set to: 0
  8871  000544  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8872  000546  EFA9  F002         	goto	u5990
  8873  00054A  EFA7  F002         	goto	u5991
  8874  00054E                     u5991:
  8875  00054E  EFAB  F002         	goto	l5224
  8876  000552                     u5990:
  8877  000552                     l5222:
  8878                           
  8879                           ; BSR set to: 0
  8880                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8881  000552  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8882  000554  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8883  000556                     l5224:
  8884                           
  8885                           ; BSR set to: 0
  8886                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8887  000556  0E66               	movlw	102
  8888  000558  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8889  00055A  A4D8               	btfss	status,2,c
  8890  00055C  EFB2  F002         	goto	u6001
  8891  000560  EFB4  F002         	goto	u6000
  8892  000564                     u6001:
  8893  000564  EFD4  F002         	goto	l5234
  8894  000568                     u6000:
  8895  000568                     
  8896                           ; BSR set to: 0
  8897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8898  000568  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8899  00056A  EFBB  F002         	goto	u6010
  8900  00056E  EFB9  F002         	goto	u6011
  8901  000572                     u6011:
  8902  000572  EFC7  F002         	goto	l5230
  8903  000576                     u6010:
  8904  000576                     
  8905                           ; BSR set to: 0
  8906                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8907  000576  0E00               	movlw	0
  8908  000578  6FA3               	movwf	efgtoa@u& (0+255),b
  8909  00057A  0E00               	movlw	0
  8910  00057C  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8911  00057E  0E80               	movlw	128
  8912  000580  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8913  000582  0E3F               	movlw	63
  8914  000584  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8915                           
  8916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8917  000586  0E00               	movlw	0
  8918  000588  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8919  00058A  0E00               	movlw	0
  8920  00058C  6F9F               	movwf	efgtoa@e& (0+255),b
  8921  00058E                     l5230:
  8922                           
  8923                           ; BSR set to: 0
  8924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8925  00058E  0E67               	movlw	103
  8926  000590  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8927  000592  B4D8               	btfsc	status,2,c
  8928  000594  EFCE  F002         	goto	u6021
  8929  000598  EFD0  F002         	goto	u6020
  8930  00059C                     u6021:
  8931  00059C  EFD4  F002         	goto	l5234
  8932  0005A0                     u6020:
  8933  0005A0                     
  8934                           ; BSR set to: 0
  8935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8936  0005A0  519F               	movf	efgtoa@e& (0+255),w,b
  8937  0005A2  2783               	addwf	efgtoa@m& (0+255),f,b
  8938  0005A4  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8939  0005A6  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8940  0005A8                     l5234:
  8941                           
  8942                           ; BSR set to: 0
  8943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8944  0005A8  0E00               	movlw	0
  8945  0005AA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8946  0005AC  0E00               	movlw	0
  8947  0005AE  6F99               	movwf	efgtoa@i& (0+255),b
  8948  0005B0                     
  8949                           ; BSR set to: 0
  8950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8951  0005B0  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8952  0005B4  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8953  0005B8  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8954  0005BC  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8955  0005C0                     
  8956                           ; BSR set to: 0
  8957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8958  0005C0  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8959  0005C4  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8960  0005C8  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8961  0005CC  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8962                           
  8963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8964  0005D0  EF65  F003         	goto	l5248
  8965  0005D4                     l5240:
  8966                           
  8967                           ; BSR set to: 0
  8968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8969  0005D4  C091  F035         	movff	efgtoa@h,___fldiv@b
  8970  0005D8  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8971  0005DC  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8972  0005E0  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8973  0005E4  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8974  0005E8  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8975  0005EC  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8976  0005F0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8977  0005F4  ECBE  F011         	call	___fldiv	;wreg free
  8978  0005F8  C035  F04E         	movff	?___fldiv,floorf@x
  8979  0005FC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8980  000600  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8981  000604  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8982  000608  ECDC  F017         	call	_floorf	;wreg free
  8983  00060C  C04E  F095         	movff	?_floorf,efgtoa@l
  8984  000610  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8985  000614  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8986  000618  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8987                           
  8988                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8989  00061C  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8990  000620  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8991  000624  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8992  000628  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8993  00062C  EC5F  F021         	call	___fltol	;wreg free
  8994  000630  C04E  F087         	movff	?___fltol,efgtoa@d
  8995  000634  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8996  000638                     
  8997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8998  000638  C091  F045         	movff	efgtoa@h,___flsub@b
  8999  00063C  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  9000  000640  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  9001  000644  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  9002  000648  C0A3  F020         	movff	efgtoa@u,___flmul@a
  9003  00064C  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  9004  000650  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  9005  000654  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  9006  000658  C095  F01C         	movff	efgtoa@l,___flmul@b
  9007  00065C  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  9008  000660  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  9009  000664  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  9010  000668  ECA9  F00F         	call	___flmul	;wreg free
  9011  00066C  C01C  F049         	movff	?___flmul,___flsub@a
  9012  000670  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  9013  000674  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  9014  000678  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  9015  00067C  ECAC  F029         	call	___flsub	;wreg free
  9016  000680  C045  F091         	movff	?___flsub,efgtoa@h
  9017  000684  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  9018  000688  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  9019  00068C  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  9020  000690                     
  9021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  9022  000690  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  9023  000694  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  9024  000698  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  9025  00069C  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  9026  0006A0  0E00               	movlw	0
  9027  0006A2  6E39               	movwf	___fldiv@a^0,c
  9028  0006A4  0E00               	movlw	0
  9029  0006A6  6E3A               	movwf	(___fldiv@a+1)^0,c
  9030  0006A8  0E20               	movlw	32
  9031  0006AA  6E3B               	movwf	(___fldiv@a+2)^0,c
  9032  0006AC  0E41               	movlw	65
  9033  0006AE  6E3C               	movwf	(___fldiv@a+3)^0,c
  9034  0006B0  ECBE  F011         	call	___fldiv	;wreg free
  9035  0006B4  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9036  0006B8  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9037  0006BC  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9038  0006C0  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9039  0006C4                     
  9040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  9041  0006C4  0100               	movlb	0	; () banked
  9042  0006C6  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9043  0006C8  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9044  0006CA                     l5248:
  9045                           
  9046                           ; BSR set to: 0
  9047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  9048  0006CA  5183               	movf	efgtoa@m& (0+255),w,b
  9049  0006CC  5D99               	subwf	efgtoa@i& (0+255),w,b
  9050  0006CE  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9051  0006D0  0A80               	xorlw	128
  9052  0006D2  6F6A               	movwf	??_efgtoa& (0+255),b
  9053  0006D4  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9054  0006D6  0A80               	xorlw	128
  9055  0006D8  596A               	subwfb	??_efgtoa& (0+255),w,b
  9056  0006DA  A0D8               	btfss	status,0,c
  9057  0006DC  EF72  F003         	goto	u6031
  9058  0006E0  EF74  F003         	goto	u6030
  9059  0006E4                     u6031:
  9060  0006E4  EFEA  F002         	goto	l5240
  9061  0006E8                     u6030:
  9062  0006E8                     
  9063                           ; BSR set to: 0
  9064                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  9065  0006E8  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  9066  0006EC  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  9067  0006F0  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  9068  0006F4  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  9069  0006F8  0E00               	movlw	0
  9070  0006FA  6E20               	movwf	___flmul@a^0,c
  9071  0006FC  0E00               	movlw	0
  9072  0006FE  6E21               	movwf	(___flmul@a+1)^0,c
  9073  000700  0EA0               	movlw	160
  9074  000702  6E22               	movwf	(___flmul@a+2)^0,c
  9075  000704  0E40               	movlw	64
  9076  000706  6E23               	movwf	(___flmul@a+3)^0,c
  9077  000708  ECA9  F00F         	call	___flmul	;wreg free
  9078  00070C  C01C  F095         	movff	?___flmul,efgtoa@l
  9079  000710  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  9080  000714  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  9081  000718  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  9082  00071C                     
  9083                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  9084  00071C  C091  F035         	movff	efgtoa@h,___flge@ff1
  9085  000720  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  9086  000724  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  9087  000728  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  9088  00072C  C095  F039         	movff	efgtoa@l,___flge@ff2
  9089  000730  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  9090  000734  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  9091  000738  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  9092  00073C  ECE2  F021         	call	___flge	;wreg free
  9093  000740  B0D8               	btfsc	status,0,c
  9094  000742  EFA5  F003         	goto	u6041
  9095  000746  EFA7  F003         	goto	u6040
  9096  00074A                     u6041:
  9097  00074A  EFB2  F003         	goto	l5256
  9098  00074E                     u6040:
  9099  00074E                     
  9100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  9101  00074E  0E00               	movlw	0
  9102  000750  0100               	movlb	0	; () banked
  9103  000752  6F95               	movwf	efgtoa@l& (0+255),b
  9104  000754  0E00               	movlw	0
  9105  000756  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  9106  000758  0E00               	movlw	0
  9107  00075A  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  9108  00075C  0E00               	movlw	0
  9109  00075E  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  9110                           
  9111                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  9112  000760  EFDB  F003         	goto	l5262
  9113  000764                     l5256:
  9114                           
  9115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  9116  000764  C091  F001         	movff	efgtoa@h,___fleq@ff1
  9117  000768  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  9118  00076C  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  9119  000770  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  9120  000774  C095  F005         	movff	efgtoa@l,___fleq@ff2
  9121  000778  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  9122  00077C  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  9123  000780  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  9124  000784  ECFD  F025         	call	___fleq	;wreg free
  9125  000788  A0D8               	btfss	status,0,c
  9126  00078A  EFC9  F003         	goto	u6051
  9127  00078E  EFCB  F003         	goto	u6050
  9128  000792                     u6051:
  9129  000792  EFDB  F003         	goto	l5262
  9130  000796                     u6050:
  9131  000796  0100               	movlb	0	; () banked
  9132  000798  B187               	btfsc	efgtoa@d& (0+255),0,b
  9133  00079A  EFD1  F003         	goto	u6061
  9134  00079E  EFD3  F003         	goto	u6060
  9135  0007A2                     u6061:
  9136  0007A2  EFDB  F003         	goto	l5262
  9137  0007A6                     u6060:
  9138  0007A6                     
  9139                           ; BSR set to: 0
  9140                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  9141  0007A6  0E00               	movlw	0
  9142  0007A8  6F95               	movwf	efgtoa@l& (0+255),b
  9143  0007AA  0E00               	movlw	0
  9144  0007AC  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  9145  0007AE  0E00               	movlw	0
  9146  0007B0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  9147  0007B2  0E00               	movlw	0
  9148  0007B4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  9149  0007B6                     l5262:
  9150                           
  9151                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  9152  0007B6  C09B  F035         	movff	efgtoa@g,___fladd@b
  9153  0007BA  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  9154  0007BE  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  9155  0007C2  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  9156  0007C6  C095  F039         	movff	efgtoa@l,___fladd@a
  9157  0007CA  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  9158  0007CE  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  9159  0007D2  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  9160  0007D6  EC49  F00D         	call	___fladd	;wreg free
  9161  0007DA  C035  F091         	movff	?___fladd,efgtoa@h
  9162  0007DE  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  9163  0007E2  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  9164  0007E6  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  9165  0007EA                     
  9166                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  9167  0007EA  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  9168  0007EE  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  9169  0007F2  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  9170  0007F6  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  9171  0007FA                     
  9172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  9173  0007FA  0E65               	movlw	101
  9174  0007FC  0100               	movlb	0	; () banked
  9175  0007FE  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9176  000800  B4D8               	btfsc	status,2,c
  9177  000802  EF05  F004         	goto	u6071
  9178  000806  EF07  F004         	goto	u6070
  9179  00080A                     u6071:
  9180  00080A  EF0D  F004         	goto	l5270
  9181  00080E                     u6070:
  9182  00080E                     
  9183                           ; BSR set to: 0
  9184  00080E  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  9185  000812  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  9186  000816  EF11  F004         	goto	l1510
  9187  00081A                     l5270:
  9188                           
  9189                           ; BSR set to: 0
  9190  00081A  0E00               	movlw	0
  9191  00081C  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  9192  00081E  0E00               	movlw	0
  9193  000820  6F85               	movwf	efgtoa@ne& (0+255),b
  9194  000822                     l1510:
  9195                           
  9196                           ; BSR set to: 0
  9197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  9198  000822  0E00               	movlw	0
  9199  000824  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9200  000826  0E00               	movlw	0
  9201  000828  6F81               	movwf	efgtoa@pp& (0+255),b
  9202                           
  9203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  9204  00082A  0E00               	movlw	0
  9205  00082C  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  9206  00082E  0E00               	movlw	0
  9207  000830  6F7F               	movwf	efgtoa@t& (0+255),b
  9208                           
  9209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  9210  000832  0E00               	movlw	0
  9211  000834  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9212  000836  0E00               	movlw	0
  9213  000838  6F99               	movwf	efgtoa@i& (0+255),b
  9214                           
  9215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9216  00083A  EF0C  F005         	goto	l5320
  9217  00083E                     l5272:
  9218                           
  9219                           ; BSR set to: 0
  9220                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  9221  00083E  C091  F035         	movff	efgtoa@h,___fldiv@b
  9222  000842  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  9223  000846  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  9224  00084A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  9225  00084E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  9226  000852  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  9227  000856  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  9228  00085A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  9229  00085E  ECBE  F011         	call	___fldiv	;wreg free
  9230  000862  C035  F04E         	movff	?___fldiv,floorf@x
  9231  000866  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  9232  00086A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  9233  00086E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  9234  000872  ECDC  F017         	call	_floorf	;wreg free
  9235  000876  C04E  F095         	movff	?_floorf,efgtoa@l
  9236  00087A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  9237  00087E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  9238  000882  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  9239                           
  9240                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  9241  000886  C095  F04E         	movff	efgtoa@l,___fltol@f1
  9242  00088A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  9243  00088E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  9244  000892  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  9245  000896  EC5F  F021         	call	___fltol	;wreg free
  9246  00089A  C04E  F087         	movff	?___fltol,efgtoa@d
  9247  00089E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  9248  0008A2                     
  9249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9250  0008A2  0100               	movlb	0	; () banked
  9251  0008A4  B9F8               	btfsc	_flags& (0+255),4,b
  9252  0008A6  EF57  F004         	goto	u6081
  9253  0008AA  EF59  F004         	goto	u6080
  9254  0008AE                     u6081:
  9255  0008AE  EF76  F004         	goto	l5284
  9256  0008B2                     u6080:
  9257  0008B2                     
  9258                           ; BSR set to: 0
  9259  0008B2  5187               	movf	efgtoa@d& (0+255),w,b
  9260  0008B4  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9261  0008B6  A4D8               	btfss	status,2,c
  9262  0008B8  EF60  F004         	goto	u6091
  9263  0008BC  EF62  F004         	goto	u6090
  9264  0008C0                     u6091:
  9265  0008C0  EF76  F004         	goto	l5284
  9266  0008C4                     u6090:
  9267  0008C4                     
  9268                           ; BSR set to: 0
  9269  0008C4  0E67               	movlw	103
  9270  0008C6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  9271  0008C8  A4D8               	btfss	status,2,c
  9272  0008CA  EF69  F004         	goto	u6101
  9273  0008CE  EF6B  F004         	goto	u6100
  9274  0008D2                     u6101:
  9275  0008D2  EF76  F004         	goto	l5284
  9276  0008D6                     u6100:
  9277  0008D6                     
  9278                           ; BSR set to: 0
  9279  0008D6  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9280  0008D8  EF72  F004         	goto	u6110
  9281  0008DC  EF70  F004         	goto	u6111
  9282  0008E0                     u6111:
  9283  0008E0  EF76  F004         	goto	l5284
  9284  0008E4                     u6110:
  9285  0008E4                     
  9286                           ; BSR set to: 0
  9287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  9288  0008E4  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  9289  0008E6  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  9290                           
  9291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  9292  0008E8  EFC0  F004         	goto	l5312
  9293  0008EC                     l5284:
  9294                           
  9295                           ; BSR set to: 0
  9296                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  9297  0008EC  5181               	movf	efgtoa@pp& (0+255),w,b
  9298  0008EE  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9299  0008F0  A4D8               	btfss	status,2,c
  9300  0008F2  EF7D  F004         	goto	u6121
  9301  0008F6  EF7F  F004         	goto	u6120
  9302  0008FA                     u6121:
  9303  0008FA  EFA9  F004         	goto	l5304
  9304  0008FE                     u6120:
  9305  0008FE                     
  9306                           ; BSR set to: 0
  9307  0008FE  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9308  000900  EF86  F004         	goto	u6130
  9309  000904  EF84  F004         	goto	u6131
  9310  000908                     u6131:
  9311  000908  EFA9  F004         	goto	l5304
  9312  00090C                     u6130:
  9313  00090C                     
  9314                           ; BSR set to: 0
  9315                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  9316  00090C  0E60               	movlw	low _dbuf
  9317  00090E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9318  000910  6ED9               	movwf	fsr2l,c
  9319  000912  0E02               	movlw	high _dbuf
  9320  000914  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9321  000916  6EDA               	movwf	fsr2h,c
  9322  000918  0E2E               	movlw	46
  9323  00091A  6EDF               	movwf	indf2,c
  9324  00091C                     
  9325                           ; BSR set to: 0
  9326  00091C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9327  00091E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9328  000920                     
  9329                           ; BSR set to: 0
  9330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  9331  000920  078E               	decf	efgtoa@w& (0+255),f,b
  9332  000922  A0D8               	btfss	status,0,c
  9333  000924  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9334  000926                     
  9335                           ; BSR set to: 0
  9336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  9337  000926  0E00               	movlw	0
  9338  000928  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9339  00092A  0E01               	movlw	1
  9340  00092C  6F81               	movwf	efgtoa@pp& (0+255),b
  9341  00092E  EFA9  F004         	goto	l5304
  9342  000932                     l5296:
  9343                           
  9344                           ; BSR set to: 0
  9345                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  9346  000932  0E60               	movlw	low _dbuf
  9347  000934  25A1               	addwf	efgtoa@n& (0+255),w,b
  9348  000936  6ED9               	movwf	fsr2l,c
  9349  000938  0E02               	movlw	high _dbuf
  9350  00093A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9351  00093C  6EDA               	movwf	fsr2h,c
  9352  00093E  0E30               	movlw	48
  9353  000940  6EDF               	movwf	indf2,c
  9354  000942                     
  9355                           ; BSR set to: 0
  9356  000942  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9357  000944  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9358  000946                     
  9359                           ; BSR set to: 0
  9360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  9361  000946  078E               	decf	efgtoa@w& (0+255),f,b
  9362  000948  A0D8               	btfss	status,0,c
  9363  00094A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9364  00094C                     
  9365                           ; BSR set to: 0
  9366                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  9367  00094C  077F               	decf	efgtoa@t& (0+255),f,b
  9368  00094E  A0D8               	btfss	status,0,c
  9369  000950  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  9370  000952                     l5304:
  9371                           
  9372                           ; BSR set to: 0
  9373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  9374  000952  517F               	movf	efgtoa@t& (0+255),w,b
  9375  000954  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9376  000956  A4D8               	btfss	status,2,c
  9377  000958  EFB0  F004         	goto	u6141
  9378  00095C  EFB2  F004         	goto	u6140
  9379  000960                     u6141:
  9380  000960  EF99  F004         	goto	l5296
  9381  000964                     u6140:
  9382  000964                     
  9383                           ; BSR set to: 0
  9384                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  9385  000964  0E60               	movlw	low _dbuf
  9386  000966  25A1               	addwf	efgtoa@n& (0+255),w,b
  9387  000968  6ED9               	movwf	fsr2l,c
  9388  00096A  0E02               	movlw	high _dbuf
  9389  00096C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9390  00096E  6EDA               	movwf	fsr2h,c
  9391  000970  5187               	movf	efgtoa@d& (0+255),w,b
  9392  000972  0F30               	addlw	48
  9393  000974  6EDF               	movwf	indf2,c
  9394  000976                     
  9395                           ; BSR set to: 0
  9396  000976  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9397  000978  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9398  00097A                     
  9399                           ; BSR set to: 0
  9400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  9401  00097A  078E               	decf	efgtoa@w& (0+255),f,b
  9402  00097C  A0D8               	btfss	status,0,c
  9403  00097E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9404  000980                     l5312:
  9405                           
  9406                           ; BSR set to: 0
  9407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  9408  000980  C091  F045         	movff	efgtoa@h,___flsub@b
  9409  000984  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  9410  000988  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  9411  00098C  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  9412  000990  C0A3  F020         	movff	efgtoa@u,___flmul@a
  9413  000994  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  9414  000998  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  9415  00099C  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  9416  0009A0  C095  F01C         	movff	efgtoa@l,___flmul@b
  9417  0009A4  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  9418  0009A8  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  9419  0009AC  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  9420  0009B0  ECA9  F00F         	call	___flmul	;wreg free
  9421  0009B4  C01C  F049         	movff	?___flmul,___flsub@a
  9422  0009B8  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  9423  0009BC  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  9424  0009C0  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  9425  0009C4  ECAC  F029         	call	___flsub	;wreg free
  9426  0009C8  C045  F091         	movff	?___flsub,efgtoa@h
  9427  0009CC  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  9428  0009D0  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  9429  0009D4  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  9430  0009D8                     
  9431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  9432  0009D8  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  9433  0009DC  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  9434  0009E0  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  9435  0009E4  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  9436  0009E8  0E00               	movlw	0
  9437  0009EA  6E39               	movwf	___fldiv@a^0,c
  9438  0009EC  0E00               	movlw	0
  9439  0009EE  6E3A               	movwf	(___fldiv@a+1)^0,c
  9440  0009F0  0E20               	movlw	32
  9441  0009F2  6E3B               	movwf	(___fldiv@a+2)^0,c
  9442  0009F4  0E41               	movlw	65
  9443  0009F6  6E3C               	movwf	(___fldiv@a+3)^0,c
  9444  0009F8  ECBE  F011         	call	___fldiv	;wreg free
  9445  0009FC  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9446  000A00  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9447  000A04  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9448  000A08  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9449  000A0C                     
  9450                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  9451  000A0C  0100               	movlb	0	; () banked
  9452  000A0E  0785               	decf	efgtoa@ne& (0+255),f,b
  9453  000A10  A0D8               	btfss	status,0,c
  9454  000A12  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  9455  000A14                     
  9456                           ; BSR set to: 0
  9457                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  9458  000A14  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9459  000A16  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9460  000A18                     l5320:
  9461                           
  9462                           ; BSR set to: 0
  9463                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9464  000A18  5183               	movf	efgtoa@m& (0+255),w,b
  9465  000A1A  5D99               	subwf	efgtoa@i& (0+255),w,b
  9466  000A1C  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9467  000A1E  0A80               	xorlw	128
  9468  000A20  6F6A               	movwf	??_efgtoa& (0+255),b
  9469  000A22  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9470  000A24  0A80               	xorlw	128
  9471  000A26  596A               	subwfb	??_efgtoa& (0+255),w,b
  9472  000A28  B0D8               	btfsc	status,0,c
  9473  000A2A  EF19  F005         	goto	u6151
  9474  000A2E  EF1B  F005         	goto	u6150
  9475  000A32                     u6151:
  9476  000A32  EF29  F005         	goto	l5324
  9477  000A36                     u6150:
  9478  000A36                     
  9479                           ; BSR set to: 0
  9480  000A36  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9481  000A38  EF27  F005         	goto	u6161
  9482  000A3C  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  9483  000A3E  E109               	bnz	u6160
  9484  000A40  0E4B               	movlw	75
  9485  000A42  5DA1               	subwf	efgtoa@n& (0+255),w,b
  9486  000A44  A0D8               	btfss	status,0,c
  9487  000A46  EF27  F005         	goto	u6161
  9488  000A4A  EF29  F005         	goto	u6160
  9489  000A4E                     u6161:
  9490  000A4E  EF1F  F004         	goto	l5272
  9491  000A52                     u6160:
  9492  000A52                     l5324:
  9493                           
  9494                           ; BSR set to: 0
  9495                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  9496  000A52  5181               	movf	efgtoa@pp& (0+255),w,b
  9497  000A54  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9498  000A56  A4D8               	btfss	status,2,c
  9499  000A58  EF30  F005         	goto	u6171
  9500  000A5C  EF32  F005         	goto	u6170
  9501  000A60                     u6171:
  9502  000A60  EF43  F005         	goto	l5332
  9503  000A64                     u6170:
  9504  000A64                     
  9505                           ; BSR set to: 0
  9506  000A64  A9F8               	btfss	_flags& (0+255),4,b
  9507  000A66  EF37  F005         	goto	u6181
  9508  000A6A  EF39  F005         	goto	u6180
  9509  000A6E                     u6181:
  9510  000A6E  EF43  F005         	goto	l5332
  9511  000A72                     u6180:
  9512  000A72                     
  9513                           ; BSR set to: 0
  9514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  9515  000A72  0E60               	movlw	low _dbuf
  9516  000A74  25A1               	addwf	efgtoa@n& (0+255),w,b
  9517  000A76  6ED9               	movwf	fsr2l,c
  9518  000A78  0E02               	movlw	high _dbuf
  9519  000A7A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9520  000A7C  6EDA               	movwf	fsr2h,c
  9521  000A7E  0E2E               	movlw	46
  9522  000A80  6EDF               	movwf	indf2,c
  9523  000A82                     
  9524                           ; BSR set to: 0
  9525  000A82  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9526  000A84  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9527  000A86                     l5332:
  9528                           
  9529                           ; BSR set to: 0
  9530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  9531  000A86  0E60               	movlw	low _dbuf
  9532  000A88  25A1               	addwf	efgtoa@n& (0+255),w,b
  9533  000A8A  6ED9               	movwf	fsr2l,c
  9534  000A8C  0E02               	movlw	high _dbuf
  9535  000A8E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9536  000A90  6EDA               	movwf	fsr2h,c
  9537  000A92  0E00               	movlw	0
  9538  000A94  6EDF               	movwf	indf2,c
  9539  000A96                     
  9540                           ; BSR set to: 0
  9541                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  9542  000A96  0E65               	movlw	101
  9543  000A98  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9544  000A9A  A4D8               	btfss	status,2,c
  9545  000A9C  EF52  F005         	goto	u6191
  9546  000AA0  EF54  F005         	goto	u6190
  9547  000AA4                     u6191:
  9548  000AA4  EF02  F001         	goto	l5144
  9549  000AA8                     u6190:
  9550  000AA8                     
  9551                           ; BSR set to: 0
  9552                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  9553  000AA8  0E00               	movlw	0
  9554  000AAA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9555  000AAC  0E4F               	movlw	79
  9556  000AAE  6F99               	movwf	efgtoa@i& (0+255),b
  9557  000AB0                     
  9558                           ; BSR set to: 0
  9559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  9560  000AB0  0E60               	movlw	low _dbuf
  9561  000AB2  2599               	addwf	efgtoa@i& (0+255),w,b
  9562  000AB4  6ED9               	movwf	fsr2l,c
  9563  000AB6  0E02               	movlw	high _dbuf
  9564  000AB8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9565  000ABA  6EDA               	movwf	fsr2h,c
  9566  000ABC  0E00               	movlw	0
  9567  000ABE  6EDF               	movwf	indf2,c
  9568  000AC0                     
  9569                           ; BSR set to: 0
  9570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  9571  000AC0  0E00               	movlw	0
  9572  000AC2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9573  000AC4  0E00               	movlw	0
  9574  000AC6  6F89               	movwf	efgtoa@sign& (0+255),b
  9575  000AC8                     
  9576                           ; BSR set to: 0
  9577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  9578  000AC8  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9579  000ACA  EF6B  F005         	goto	u6200
  9580  000ACE  EF69  F005         	goto	u6201
  9581  000AD2                     u6201:
  9582  000AD2  EF73  F005         	goto	l5348
  9583  000AD6                     u6200:
  9584  000AD6                     
  9585                           ; BSR set to: 0
  9586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  9587  000AD6  0E00               	movlw	0
  9588  000AD8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9589  000ADA  0E01               	movlw	1
  9590  000ADC  6F89               	movwf	efgtoa@sign& (0+255),b
  9591  000ADE                     
  9592                           ; BSR set to: 0
  9593                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  9594  000ADE  6D9F               	negf	efgtoa@e& (0+255),b
  9595  000AE0  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  9596  000AE2  B0D8               	btfsc	status,0,c
  9597  000AE4  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  9598  000AE6                     l5348:
  9599                           
  9600                           ; BSR set to: 0
  9601                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  9602  000AE6  0E00               	movlw	0
  9603  000AE8  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  9604  000AEA  0E02               	movlw	2
  9605  000AEC  6F8B               	movwf	efgtoa@p& (0+255),b
  9606                           
  9607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9608  000AEE  EFA4  F005         	goto	l5360
  9609  000AF2                     l5350:
  9610                           
  9611                           ; BSR set to: 0
  9612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  9613  000AF2  0799               	decf	efgtoa@i& (0+255),f,b
  9614  000AF4  A0D8               	btfss	status,0,c
  9615  000AF6  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9616  000AF8                     
  9617                           ; BSR set to: 0
  9618                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  9619  000AF8  0E60               	movlw	low _dbuf
  9620  000AFA  2599               	addwf	efgtoa@i& (0+255),w,b
  9621  000AFC  6ED9               	movwf	fsr2l,c
  9622  000AFE  0E02               	movlw	high _dbuf
  9623  000B00  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9624  000B02  6EDA               	movwf	fsr2h,c
  9625  000B04  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  9626  000B08  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  9627  000B0C  0E00               	movlw	0
  9628  000B0E  6E04               	movwf	(___awmod@divisor+1)^0,c
  9629  000B10  0E0A               	movlw	10
  9630  000B12  6E03               	movwf	___awmod@divisor^0,c
  9631  000B14  ECA5  F025         	call	___awmod	;wreg free
  9632  000B18  5001               	movf	?___awmod^0,w,c
  9633  000B1A  0F30               	addlw	48
  9634  000B1C  6EDF               	movwf	indf2,c
  9635  000B1E                     
  9636                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  9637  000B1E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  9638  000B22  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  9639  000B26  0E00               	movlw	0
  9640  000B28  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9641  000B2A  0E0A               	movlw	10
  9642  000B2C  6E03               	movwf	___awdiv@divisor^0,c
  9643  000B2E  ECEA  F024         	call	___awdiv	;wreg free
  9644  000B32  C001  F09F         	movff	?___awdiv,efgtoa@e
  9645  000B36  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  9646  000B3A                     
  9647                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  9648  000B3A  0100               	movlb	0	; () banked
  9649  000B3C  078B               	decf	efgtoa@p& (0+255),f,b
  9650  000B3E  A0D8               	btfss	status,0,c
  9651  000B40  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  9652  000B42                     
  9653                           ; BSR set to: 0
  9654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  9655  000B42  078E               	decf	efgtoa@w& (0+255),f,b
  9656  000B44  A0D8               	btfss	status,0,c
  9657  000B46  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9658  000B48                     l5360:
  9659                           
  9660                           ; BSR set to: 0
  9661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9662  000B48  519F               	movf	efgtoa@e& (0+255),w,b
  9663  000B4A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9664  000B4C  A4D8               	btfss	status,2,c
  9665  000B4E  EFAB  F005         	goto	u6211
  9666  000B52  EFAD  F005         	goto	u6210
  9667  000B56                     u6211:
  9668  000B56  EF79  F005         	goto	l5350
  9669  000B5A                     u6210:
  9670  000B5A                     
  9671                           ; BSR set to: 0
  9672  000B5A  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9673  000B5C  EFBA  F005         	goto	u6220
  9674  000B60  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  9675  000B62  E106               	bnz	u6221
  9676  000B64  058B               	decf	efgtoa@p& (0+255),w,b
  9677  000B66  B0D8               	btfsc	status,0,c
  9678  000B68  EFB8  F005         	goto	u6221
  9679  000B6C  EFBA  F005         	goto	u6220
  9680  000B70                     u6221:
  9681  000B70  EF79  F005         	goto	l5350
  9682  000B74                     u6220:
  9683  000B74                     
  9684                           ; BSR set to: 0
  9685                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  9686  000B74  0799               	decf	efgtoa@i& (0+255),f,b
  9687  000B76  A0D8               	btfss	status,0,c
  9688  000B78  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9689  000B7A                     
  9690                           ; BSR set to: 0
  9691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  9692  000B7A  5189               	movf	efgtoa@sign& (0+255),w,b
  9693  000B7C  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9694  000B7E  A4D8               	btfss	status,2,c
  9695  000B80  EFC4  F005         	goto	u6231
  9696  000B84  EFC6  F005         	goto	u6230
  9697  000B88                     u6231:
  9698  000B88  EFCC  F005         	goto	l5370
  9699  000B8C                     u6230:
  9700  000B8C                     
  9701                           ; BSR set to: 0
  9702  000B8C  0E00               	movlw	0
  9703  000B8E  6F7A               	movwf	(_efgtoa$2988+1)& (0+255),b
  9704  000B90  0E2B               	movlw	43
  9705  000B92  6F79               	movwf	_efgtoa$2988& (0+255),b
  9706  000B94  EFD0  F005         	goto	l5372
  9707  000B98                     l5370:
  9708                           
  9709                           ; BSR set to: 0
  9710  000B98  0E00               	movlw	0
  9711  000B9A  6F7A               	movwf	(_efgtoa$2988+1)& (0+255),b
  9712  000B9C  0E2D               	movlw	45
  9713  000B9E  6F79               	movwf	_efgtoa$2988& (0+255),b
  9714  000BA0                     l5372:
  9715                           
  9716                           ; BSR set to: 0
  9717  000BA0  0E60               	movlw	low _dbuf
  9718  000BA2  2599               	addwf	efgtoa@i& (0+255),w,b
  9719  000BA4  6ED9               	movwf	fsr2l,c
  9720  000BA6  0E02               	movlw	high _dbuf
  9721  000BA8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9722  000BAA  6EDA               	movwf	fsr2h,c
  9723  000BAC  C079  FFDF         	movff	_efgtoa$2988,indf2
  9724  000BB0                     
  9725                           ; BSR set to: 0
  9726                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  9727  000BB0  078E               	decf	efgtoa@w& (0+255),f,b
  9728  000BB2  A0D8               	btfss	status,0,c
  9729  000BB4  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9730  000BB6                     
  9731                           ; BSR set to: 0
  9732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9733  000BB6  0799               	decf	efgtoa@i& (0+255),f,b
  9734  000BB8  A0D8               	btfss	status,0,c
  9735  000BBA  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9736  000BBC                     
  9737                           ; BSR set to: 0
  9738  000BBC  0EBF               	movlw	191
  9739  000BBE  6F6A               	movwf	??_efgtoa& (0+255),b
  9740  000BC0  0EFF               	movlw	255
  9741  000BC2  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  9742  000BC4  505E               	movf	efgtoa@c^0,w,c
  9743  000BC6  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  9744  000BC8  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  9745  000BCA  516A               	movf	??_efgtoa& (0+255),w,b
  9746  000BCC  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  9747  000BCE  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  9748  000BD0  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9749  000BD2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  9750  000BD4  E10A               	bnz	u6240
  9751  000BD6  0E1A               	movlw	26
  9752  000BD8  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  9753  000BDA  A0D8               	btfss	status,0,c
  9754  000BDC  EFF2  F005         	goto	u6241
  9755  000BE0  EFF5  F005         	goto	u6240
  9756  000BE4                     u6241:
  9757  000BE4  0E01               	movlw	1
  9758  000BE6  EFF6  F005         	goto	u6250
  9759  000BEA                     u6240:
  9760  000BEA  0E00               	movlw	0
  9761  000BEC                     u6250:
  9762  000BEC  6F7D               	movwf	_efgtoa$2990& (0+255),b
  9763  000BEE  6B7E               	clrf	(_efgtoa$2990+1)& (0+255),b
  9764  000BF0                     
  9765                           ; BSR set to: 0
  9766  000BF0  517D               	movf	_efgtoa$2990& (0+255),w,b
  9767  000BF2  117E               	iorwf	(_efgtoa$2990+1)& (0+255),w,b
  9768  000BF4  A4D8               	btfss	status,2,c
  9769  000BF6  EFFF  F005         	goto	u6261
  9770  000BFA  EF01  F006         	goto	u6260
  9771  000BFE                     u6261:
  9772  000BFE  EF07  F006         	goto	l5386
  9773  000C02                     u6260:
  9774  000C02                     
  9775                           ; BSR set to: 0
  9776  000C02  0E00               	movlw	0
  9777  000C04  6F7C               	movwf	(_efgtoa$2989+1)& (0+255),b
  9778  000C06  0E65               	movlw	101
  9779  000C08  6F7B               	movwf	_efgtoa$2989& (0+255),b
  9780  000C0A  EF0B  F006         	goto	l5388
  9781  000C0E                     l5386:
  9782                           
  9783                           ; BSR set to: 0
  9784  000C0E  0E00               	movlw	0
  9785  000C10  6F7C               	movwf	(_efgtoa$2989+1)& (0+255),b
  9786  000C12  0E45               	movlw	69
  9787  000C14  6F7B               	movwf	_efgtoa$2989& (0+255),b
  9788  000C16                     l5388:
  9789                           
  9790                           ; BSR set to: 0
  9791  000C16  0E60               	movlw	low _dbuf
  9792  000C18  2599               	addwf	efgtoa@i& (0+255),w,b
  9793  000C1A  6ED9               	movwf	fsr2l,c
  9794  000C1C  0E02               	movlw	high _dbuf
  9795  000C1E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9796  000C20  6EDA               	movwf	fsr2h,c
  9797  000C22  C07B  FFDF         	movff	_efgtoa$2989,indf2
  9798  000C26                     
  9799                           ; BSR set to: 0
  9800                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9801  000C26  078E               	decf	efgtoa@w& (0+255),f,b
  9802  000C28  A0D8               	btfss	status,0,c
  9803  000C2A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9804  000C2C                     
  9805                           ; BSR set to: 0
  9806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9807  000C2C  0E60               	movlw	low _dbuf
  9808  000C2E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9809  000C30  6E01               	movwf	strcpy@dest^0,c
  9810  000C32  0E02               	movlw	high _dbuf
  9811  000C34  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9812  000C36  6E02               	movwf	(strcpy@dest+1)^0,c
  9813  000C38  0E60               	movlw	low _dbuf
  9814  000C3A  2599               	addwf	efgtoa@i& (0+255),w,b
  9815  000C3C  6E03               	movwf	strcpy@src^0,c
  9816  000C3E  0E02               	movlw	high _dbuf
  9817  000C40  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9818  000C42  6E04               	movwf	(strcpy@src+1)^0,c
  9819  000C44  ECB0  F028         	call	_strcpy	;wreg free
  9820  000C48  EF02  F001         	goto	l5144
  9821  000C4C                     l1466:
  9822  000C4C  0012               	return		;funcret
  9823  000C4E                     __end_of_efgtoa:
  9824                           	callstack 0
  9825                           
  9826 ;; *************** function _tolower *****************
  9827 ;; Defined at:
  9828 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9829 ;; Parameters:    Size  Location     Type
  9830 ;;  c               2    6[COMRAM] int 
  9831 ;; Auto vars:     Size  Location     Type
  9832 ;;		None
  9833 ;; Return value:  Size  Location     Type
  9834 ;;                  2    6[COMRAM] int 
  9835 ;; Registers used:
  9836 ;;		wreg, status,2, status,0
  9837 ;; Tracked objects:
  9838 ;;		On entry : 0/0
  9839 ;;		On exit  : 0/0
  9840 ;;		Unchanged: 0/0
  9841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9842 ;;      Params:         2       0       0       0       0       0       0
  9843 ;;      Locals:         2       0       0       0       0       0       0
  9844 ;;      Temps:          4       0       0       0       0       0       0
  9845 ;;      Totals:         8       0       0       0       0       0       0
  9846 ;;Total ram usage:        8 bytes
  9847 ;; Hardware stack levels used:    1
  9848 ;; Hardware stack levels required when called:    2
  9849 ;; This function calls:
  9850 ;;		_isupper
  9851 ;; This function is called by:
  9852 ;;		_efgtoa
  9853 ;;		_vfpfcnvrt
  9854 ;; This function uses a non-reentrant model
  9855 ;;
  9856                           
  9857                           	psect	text35
  9858  005100                     __ptext35:
  9859                           	callstack 0
  9860  005100                     _tolower:
  9861                           	callstack 22
  9862  005100  0EBF               	movlw	191
  9863  005102  6E09               	movwf	??_tolower^0,c
  9864  005104  0EFF               	movlw	255
  9865  005106  6E0A               	movwf	(??_tolower+1)^0,c
  9866  005108  C007  F00B         	movff	tolower@c,??_tolower+2
  9867  00510C  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9868  005110  5009               	movf	??_tolower^0,w,c
  9869  005112  260B               	addwf	(??_tolower+2)^0,f,c
  9870  005114  500A               	movf	(??_tolower+1)^0,w,c
  9871  005116  220C               	addwfc	(??_tolower+3)^0,f,c
  9872  005118  500C               	movf	(??_tolower+3)^0,w,c
  9873  00511A  E10A               	bnz	u5430
  9874  00511C  0E1A               	movlw	26
  9875  00511E  5C0B               	subwf	(??_tolower+2)^0,w,c
  9876  005120  A0D8               	btfss	status,0,c
  9877  005122  EF95  F028         	goto	u5431
  9878  005126  EF98  F028         	goto	u5430
  9879  00512A                     u5431:
  9880  00512A  0E01               	movlw	1
  9881  00512C  EF99  F028         	goto	u5440
  9882  005130                     u5430:
  9883  005130  0E00               	movlw	0
  9884  005132                     u5440:
  9885  005132  6E0D               	movwf	_tolower$3141^0,c
  9886  005134  6A0E               	clrf	(_tolower$3141+1)^0,c
  9887  005136  500D               	movf	_tolower$3141^0,w,c
  9888  005138  100E               	iorwf	(_tolower$3141+1)^0,w,c
  9889  00513A  B4D8               	btfsc	status,2,c
  9890  00513C  EFA2  F028         	goto	u5451
  9891  005140  EFA4  F028         	goto	u5450
  9892  005144                     u5451:
  9893  005144  EFAB  F028         	goto	l1714
  9894  005148                     u5450:
  9895  005148  0E20               	movlw	32
  9896  00514A  1007               	iorwf	tolower@c^0,w,c
  9897  00514C  6E07               	movwf	?_tolower^0,c
  9898  00514E  5008               	movf	(tolower@c+1)^0,w,c
  9899  005150  6E08               	movwf	(?_tolower+1)^0,c
  9900  005152  EFAF  F028         	goto	l1719
  9901  005156                     l1714:
  9902  005156  C007  F007         	movff	tolower@c,?_tolower
  9903  00515A  C008  F008         	movff	tolower@c+1,?_tolower+1
  9904  00515E                     l1719:
  9905  00515E  0012               	return		;funcret
  9906  005160                     __end_of_tolower:
  9907                           	callstack 0
  9908                           
  9909 ;; *************** function _isupper *****************
  9910 ;; Defined at:
  9911 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9912 ;; Parameters:    Size  Location     Type
  9913 ;;  c               2    0[COMRAM] int 
  9914 ;; Auto vars:     Size  Location     Type
  9915 ;;		None
  9916 ;; Return value:  Size  Location     Type
  9917 ;;                  2    0[COMRAM] int 
  9918 ;; Registers used:
  9919 ;;		wreg, status,2, status,0
  9920 ;; Tracked objects:
  9921 ;;		On entry : 0/0
  9922 ;;		On exit  : 0/0
  9923 ;;		Unchanged: 0/0
  9924 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9925 ;;      Params:         2       0       0       0       0       0       0
  9926 ;;      Locals:         0       0       0       0       0       0       0
  9927 ;;      Temps:          4       0       0       0       0       0       0
  9928 ;;      Totals:         6       0       0       0       0       0       0
  9929 ;;Total ram usage:        6 bytes
  9930 ;; Hardware stack levels used:    1
  9931 ;; Hardware stack levels required when called:    1
  9932 ;; This function calls:
  9933 ;;		Nothing
  9934 ;; This function is called by:
  9935 ;;		_efgtoa
  9936 ;;		_vfpfcnvrt
  9937 ;;		_tolower
  9938 ;; This function uses a non-reentrant model
  9939 ;;
  9940                           
  9941                           	psect	text36
  9942  00551E                     __ptext36:
  9943                           	callstack 0
  9944  00551E                     _isupper:
  9945                           	callstack 22
  9946  00551E  0EBF               	movlw	191
  9947  005520  6E03               	movwf	??_isupper^0,c
  9948  005522  0EFF               	movlw	255
  9949  005524  6E04               	movwf	(??_isupper+1)^0,c
  9950  005526  C001  F005         	movff	isupper@c,??_isupper+2
  9951  00552A  C002  F006         	movff	isupper@c+1,??_isupper+3
  9952  00552E  5003               	movf	??_isupper^0,w,c
  9953  005530  2605               	addwf	(??_isupper+2)^0,f,c
  9954  005532  5004               	movf	(??_isupper+1)^0,w,c
  9955  005534  2206               	addwfc	(??_isupper+3)^0,f,c
  9956  005536  5006               	movf	(??_isupper+3)^0,w,c
  9957  005538  E10A               	bnz	u4440
  9958  00553A  0E1A               	movlw	26
  9959  00553C  5C05               	subwf	(??_isupper+2)^0,w,c
  9960  00553E  A0D8               	btfss	status,0,c
  9961  005540  EFA4  F02A         	goto	u4441
  9962  005544  EFA7  F02A         	goto	u4440
  9963  005548                     u4441:
  9964  005548  0E01               	movlw	1
  9965  00554A  EFA8  F02A         	goto	u4450
  9966  00554E                     u4440:
  9967  00554E  0E00               	movlw	0
  9968  005550                     u4450:
  9969  005550  6E01               	movwf	?_isupper^0,c
  9970  005552  6A02               	clrf	(?_isupper+1)^0,c
  9971  005554  0012               	return		;funcret
  9972  005556                     __end_of_isupper:
  9973                           	callstack 0
  9974                           
  9975 ;; *************** function _strcpy *****************
  9976 ;; Defined at:
  9977 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9978 ;; Parameters:    Size  Location     Type
  9979 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9980 ;;		 -> dbuf(80), 
  9981 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9982 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  9983 ;;		 -> dbuf(80), 
  9984 ;; Auto vars:     Size  Location     Type
  9985 ;;  d               2    8[COMRAM] PTR unsigned char 
  9986 ;;		 -> dbuf(80), 
  9987 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9988 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  9989 ;;		 -> dbuf(80), 
  9990 ;; Return value:  Size  Location     Type
  9991 ;;                  2    0[COMRAM] PTR unsigned char 
  9992 ;; Registers used:
  9993 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9994 ;; Tracked objects:
  9995 ;;		On entry : 0/0
  9996 ;;		On exit  : 0/0
  9997 ;;		Unchanged: 0/0
  9998 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9999 ;;      Params:         4       0       0       0       0       0       0
 10000 ;;      Locals:         4       0       0       0       0       0       0
 10001 ;;      Temps:          2       0       0       0       0       0       0
 10002 ;;      Totals:        10       0       0       0       0       0       0
 10003 ;;Total ram usage:       10 bytes
 10004 ;; Hardware stack levels used:    1
 10005 ;; Hardware stack levels required when called:    1
 10006 ;; This function calls:
 10007 ;;		Nothing
 10008 ;; This function is called by:
 10009 ;;		_efgtoa
 10010 ;; This function uses a non-reentrant model
 10011 ;;
 10012                           
 10013                           	psect	text37
 10014  005160                     __ptext37:
 10015                           	callstack 0
 10016  005160                     _strcpy:
 10017                           	callstack 22
 10018  005160  C003  F007         	movff	strcpy@src,strcpy@s
 10019  005164  C004  F008         	movff	strcpy@src+1,strcpy@s+1
 10020  005168  C001  F009         	movff	strcpy@dest,strcpy@d
 10021  00516C  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
 10022  005170                     l4982:
 10023  005170  5007               	movf	strcpy@s^0,w,c
 10024  005172  6E05               	movwf	??_strcpy^0,c
 10025  005174  5008               	movf	(strcpy@s+1)^0,w,c
 10026  005176  6E06               	movwf	(??_strcpy+1)^0,c
 10027  005178  4A07               	infsnz	strcpy@s^0,f,c
 10028  00517A  2A08               	incf	(strcpy@s+1)^0,f,c
 10029  00517C  C005  FFF6         	movff	??_strcpy,tblptrl
 10030  005180  C006  FFF7         	movff	??_strcpy+1,tblptrh
 10031  005184  6AF8               	clrf	tblptru,c
 10032  005186  C009  FFD9         	movff	strcpy@d,fsr2l
 10033  00518A  C00A  FFDA         	movff	strcpy@d+1,fsr2h
 10034  00518E  4A09               	infsnz	strcpy@d^0,f,c
 10035  005190  2A0A               	incf	(strcpy@d+1)^0,f,c
 10036  005192  0E05               	movlw	(high __ramtop+-1)
 10037  005194  64F7               	cpfsgt	tblptrh,c
 10038  005196  D003               	bra	u5417
 10039  005198  0008               	tblrd		*
 10040  00519A  50F5               	movf	tablat,w,c
 10041  00519C  D005               	bra	u5410
 10042  00519E                     u5417:
 10043  00519E  CFF6 FFE1          	movff	tblptrl,fsr1l
 10044  0051A2  CFF7 FFE2          	movff	tblptrh,fsr1h
 10045  0051A6  50E7               	movf	indf1,w,c
 10046  0051A8                     u5410:
 10047  0051A8  6EDF               	movwf	indf2,c
 10048  0051AA  50DF               	movf	indf2,w,c
 10049  0051AC  A4D8               	btfss	status,2,c
 10050  0051AE  EFDB  F028         	goto	u5421
 10051  0051B2  EFDD  F028         	goto	u5420
 10052  0051B6                     u5421:
 10053  0051B6  EFB8  F028         	goto	l4982
 10054  0051BA                     u5420:
 10055  0051BA  0012               	return		;funcret
 10056  0051BC                     __end_of_strcpy:
 10057                           	callstack 0
 10058                           
 10059 ;; *************** function _floorf *****************
 10060 ;; Defined at:
 10061 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
 10062 ;; Parameters:    Size  Location     Type
 10063 ;;  x               4   77[COMRAM] float 
 10064 ;; Auto vars:     Size  Location     Type
 10065 ;;  u               4    6[BANK0 ] struct .
 10066 ;;  m               4    0[BANK0 ] unsigned long 
 10067 ;;  e               2    4[BANK0 ] int 
 10068 ;; Return value:  Size  Location     Type
 10069 ;;                  4   77[COMRAM] float 
 10070 ;; Registers used:
 10071 ;;		wreg, status,2, status,0
 10072 ;; Tracked objects:
 10073 ;;		On entry : 0/0
 10074 ;;		On exit  : 0/0
 10075 ;;		Unchanged: 0/0
 10076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10077 ;;      Params:         4       0       0       0       0       0       0
 10078 ;;      Locals:         0      10       0       0       0       0       0
 10079 ;;      Temps:          6       0       0       0       0       0       0
 10080 ;;      Totals:        10      10       0       0       0       0       0
 10081 ;;Total ram usage:       20 bytes
 10082 ;; Hardware stack levels used:    1
 10083 ;; Hardware stack levels required when called:    1
 10084 ;; This function calls:
 10085 ;;		Nothing
 10086 ;; This function is called by:
 10087 ;;		_efgtoa
 10088 ;; This function uses a non-reentrant model
 10089 ;;
 10090                           
 10091                           	psect	text38
 10092  002FB8                     __ptext38:
 10093                           	callstack 0
 10094  002FB8                     _floorf:
 10095                           	callstack 22
 10096  002FB8  C1A3  F066         	movff	floorf@F524,floorf@u
 10097  002FBC  C1A4  F067         	movff	floorf@F524+1,floorf@u+1
 10098  002FC0  C1A5  F068         	movff	floorf@F524+2,floorf@u+2
 10099  002FC4  C1A6  F069         	movff	floorf@F524+3,floorf@u+3
 10100  002FC8  C04E  F066         	movff	floorf@x,floorf@u
 10101  002FCC  C04F  F067         	movff	floorf@x+1,floorf@u+1
 10102  002FD0  C050  F068         	movff	floorf@x+2,floorf@u+2
 10103  002FD4  C051  F069         	movff	floorf@x+3,floorf@u+3
 10104  002FD8  0E81               	movlw	129
 10105  002FDA  6E52               	movwf	??_floorf^0,c
 10106  002FDC  0EFF               	movlw	255
 10107  002FDE  6E53               	movwf	(??_floorf+1)^0,c
 10108  002FE0  C066  F054         	movff	floorf@u,??_floorf+2
 10109  002FE4  C067  F055         	movff	floorf@u+1,??_floorf+3
 10110  002FE8  C068  F056         	movff	floorf@u+2,??_floorf+4
 10111  002FEC  C069  F057         	movff	floorf@u+3,??_floorf+5
 10112  002FF0  0E18               	movlw	24
 10113  002FF2  EF00  F018         	goto	u5460
 10114  002FF6                     u5465:
 10115  002FF6  90D8               	bcf	status,0,c
 10116  002FF8  3257               	rrcf	(??_floorf+5)^0,f,c
 10117  002FFA  3256               	rrcf	(??_floorf+4)^0,f,c
 10118  002FFC  3255               	rrcf	(??_floorf+3)^0,f,c
 10119  002FFE  3254               	rrcf	(??_floorf+2)^0,f,c
 10120  003000                     u5460:
 10121  003000  2EE8               	decfsz	wreg,f,c
 10122  003002  EFFB  F017         	goto	u5465
 10123  003006  5054               	movf	(??_floorf+2)^0,w,c
 10124  003008  2452               	addwf	??_floorf^0,w,c
 10125  00300A  0100               	movlb	0	; () banked
 10126  00300C  6F64               	movwf	floorf@e& (0+255),b
 10127  00300E  0E00               	movlw	0
 10128  003010  2053               	addwfc	(??_floorf+1)^0,w,c
 10129  003012  6F65               	movwf	(floorf@e+1)& (0+255),b
 10130  003014  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10131  003016  EF16  F018         	goto	u5471
 10132  00301A  5165               	movf	(floorf@e+1)& (0+255),w,b
 10133  00301C  E109               	bnz	u5470
 10134  00301E  0E17               	movlw	23
 10135  003020  5D64               	subwf	floorf@e& (0+255),w,b
 10136  003022  A0D8               	btfss	status,0,c
 10137  003024  EF16  F018         	goto	u5471
 10138  003028  EF18  F018         	goto	u5470
 10139  00302C                     u5471:
 10140  00302C  EF22  F018         	goto	l5000
 10141  003030                     u5470:
 10142  003030                     l4998:
 10143                           
 10144                           ; BSR set to: 0
 10145  003030  C04E  F04E         	movff	floorf@x,?_floorf
 10146  003034  C04F  F04F         	movff	floorf@x+1,?_floorf+1
 10147  003038  C050  F050         	movff	floorf@x+2,?_floorf+2
 10148  00303C  C051  F051         	movff	floorf@x+3,?_floorf+3
 10149  003040  EFE6  F018         	goto	l1638
 10150  003044                     l5000:
 10151                           
 10152                           ; BSR set to: 0
 10153  003044  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10154  003046  EF27  F018         	goto	u5481
 10155  00304A  EF29  F018         	goto	u5480
 10156  00304E                     u5481:
 10157  00304E  EF9A  F018         	goto	l5010
 10158  003052                     u5480:
 10159  003052                     
 10160                           ; BSR set to: 0
 10161  003052  C064  F052         	movff	floorf@e,??_floorf
 10162  003056  0EFF               	movlw	255
 10163  003058  6E53               	movwf	(??_floorf+1)^0,c
 10164  00305A  0EFF               	movlw	255
 10165  00305C  6E54               	movwf	(??_floorf+2)^0,c
 10166  00305E  0E7F               	movlw	127
 10167  003060  6E55               	movwf	(??_floorf+3)^0,c
 10168  003062  0E00               	movlw	0
 10169  003064  6E56               	movwf	(??_floorf+4)^0,c
 10170  003066                     u5495:
 10171  003066  6652               	tstfsz	??_floorf^0,c
 10172  003068  EF38  F018         	goto	u5496
 10173  00306C  EF40  F018         	goto	u5497
 10174  003070                     u5496:
 10175  003070  3456               	rlcf	(??_floorf+4)^0,w,c
 10176  003072  3256               	rrcf	(??_floorf+4)^0,f,c
 10177  003074  3255               	rrcf	(??_floorf+3)^0,f,c
 10178  003076  3254               	rrcf	(??_floorf+2)^0,f,c
 10179  003078  3253               	rrcf	(??_floorf+1)^0,f,c
 10180  00307A  2E52               	decfsz	??_floorf^0,f,c
 10181  00307C  EF33  F018         	goto	u5495
 10182  003080                     u5497:
 10183  003080  C053  F060         	movff	??_floorf+1,floorf@m
 10184  003084  C054  F061         	movff	??_floorf+2,floorf@m+1
 10185  003088  C055  F062         	movff	??_floorf+3,floorf@m+2
 10186  00308C  C056  F063         	movff	??_floorf+4,floorf@m+3
 10187  003090  0100               	movlb	0	; () banked
 10188  003092  5160               	movf	floorf@m& (0+255),w,b
 10189  003094  1566               	andwf	floorf@u& (0+255),w,b
 10190  003096  6E52               	movwf	??_floorf^0,c
 10191  003098  5161               	movf	(floorf@m+1)& (0+255),w,b
 10192  00309A  1567               	andwf	(floorf@u+1)& (0+255),w,b
 10193  00309C  6E53               	movwf	(??_floorf+1)^0,c
 10194  00309E  5162               	movf	(floorf@m+2)& (0+255),w,b
 10195  0030A0  1568               	andwf	(floorf@u+2)& (0+255),w,b
 10196  0030A2  6E54               	movwf	(??_floorf+2)^0,c
 10197  0030A4  5163               	movf	(floorf@m+3)& (0+255),w,b
 10198  0030A6  1569               	andwf	(floorf@u+3)& (0+255),w,b
 10199  0030A8  6E55               	movwf	(??_floorf+3)^0,c
 10200  0030AA  5052               	movf	??_floorf^0,w,c
 10201  0030AC  1053               	iorwf	(??_floorf+1)^0,w,c
 10202  0030AE  1054               	iorwf	(??_floorf+2)^0,w,c
 10203  0030B0  1055               	iorwf	(??_floorf+3)^0,w,c
 10204  0030B2  A4D8               	btfss	status,2,c
 10205  0030B4  EF5E  F018         	goto	u5501
 10206  0030B8  EF60  F018         	goto	u5500
 10207  0030BC                     u5501:
 10208  0030BC  EF62  F018         	goto	l5006
 10209  0030C0                     u5500:
 10210  0030C0  EF18  F018         	goto	l4998
 10211  0030C4                     l5006:
 10212                           
 10213                           ; BSR set to: 0
 10214  0030C4  C066  F052         	movff	floorf@u,??_floorf
 10215  0030C8  C067  F053         	movff	floorf@u+1,??_floorf+1
 10216  0030CC  C068  F054         	movff	floorf@u+2,??_floorf+2
 10217  0030D0  C069  F055         	movff	floorf@u+3,??_floorf+3
 10218  0030D4  0E20               	movlw	32
 10219  0030D6  EF72  F018         	goto	u5510
 10220  0030DA                     u5515:
 10221  0030DA  90D8               	bcf	status,0,c
 10222  0030DC  3255               	rrcf	(??_floorf+3)^0,f,c
 10223  0030DE  3254               	rrcf	(??_floorf+2)^0,f,c
 10224  0030E0  3253               	rrcf	(??_floorf+1)^0,f,c
 10225  0030E2  3252               	rrcf	??_floorf^0,f,c
 10226  0030E4                     u5510:
 10227  0030E4  2EE8               	decfsz	wreg,f,c
 10228  0030E6  EF6D  F018         	goto	u5515
 10229  0030EA  5052               	movf	??_floorf^0,w,c
 10230  0030EC  1053               	iorwf	(??_floorf+1)^0,w,c
 10231  0030EE  1054               	iorwf	(??_floorf+2)^0,w,c
 10232  0030F0  1055               	iorwf	(??_floorf+3)^0,w,c
 10233  0030F2  B4D8               	btfsc	status,2,c
 10234  0030F4  EF7E  F018         	goto	u5521
 10235  0030F8  EF80  F018         	goto	u5520
 10236  0030FC                     u5521:
 10237  0030FC  EF88  F018         	goto	l1641
 10238  003100                     u5520:
 10239  003100                     
 10240                           ; BSR set to: 0
 10241  003100  5160               	movf	floorf@m& (0+255),w,b
 10242  003102  2766               	addwf	floorf@u& (0+255),f,b
 10243  003104  5161               	movf	(floorf@m+1)& (0+255),w,b
 10244  003106  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 10245  003108  5162               	movf	(floorf@m+2)& (0+255),w,b
 10246  00310A  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 10247  00310C  5163               	movf	(floorf@m+3)& (0+255),w,b
 10248  00310E  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 10249  003110                     l1641:
 10250                           
 10251                           ; BSR set to: 0
 10252  003110  1D60               	comf	floorf@m& (0+255),w,b
 10253  003112  6E52               	movwf	??_floorf^0,c
 10254  003114  1D61               	comf	(floorf@m+1)& (0+255),w,b
 10255  003116  6E53               	movwf	(??_floorf+1)^0,c
 10256  003118  1D62               	comf	(floorf@m+2)& (0+255),w,b
 10257  00311A  6E54               	movwf	(??_floorf+2)^0,c
 10258  00311C  1D63               	comf	(floorf@m+3)& (0+255),w,b
 10259  00311E  6E55               	movwf	(??_floorf+3)^0,c
 10260  003120  5052               	movf	??_floorf^0,w,c
 10261  003122  1766               	andwf	floorf@u& (0+255),f,b
 10262  003124  5053               	movf	(??_floorf+1)^0,w,c
 10263  003126  1767               	andwf	(floorf@u+1)& (0+255),f,b
 10264  003128  5054               	movf	(??_floorf+2)^0,w,c
 10265  00312A  1768               	andwf	(floorf@u+2)& (0+255),f,b
 10266  00312C  5055               	movf	(??_floorf+3)^0,w,c
 10267  00312E  1769               	andwf	(floorf@u+3)& (0+255),f,b
 10268  003130  EFDE  F018         	goto	l5018
 10269  003134                     l5010:
 10270                           
 10271                           ; BSR set to: 0
 10272  003134  C066  F052         	movff	floorf@u,??_floorf
 10273  003138  C067  F053         	movff	floorf@u+1,??_floorf+1
 10274  00313C  C068  F054         	movff	floorf@u+2,??_floorf+2
 10275  003140  C069  F055         	movff	floorf@u+3,??_floorf+3
 10276  003144  0E20               	movlw	32
 10277  003146  EFAA  F018         	goto	u5530
 10278  00314A                     u5535:
 10279  00314A  90D8               	bcf	status,0,c
 10280  00314C  3255               	rrcf	(??_floorf+3)^0,f,c
 10281  00314E  3254               	rrcf	(??_floorf+2)^0,f,c
 10282  003150  3253               	rrcf	(??_floorf+1)^0,f,c
 10283  003152  3252               	rrcf	??_floorf^0,f,c
 10284  003154                     u5530:
 10285  003154  2EE8               	decfsz	wreg,f,c
 10286  003156  EFA5  F018         	goto	u5535
 10287  00315A  5052               	movf	??_floorf^0,w,c
 10288  00315C  1053               	iorwf	(??_floorf+1)^0,w,c
 10289  00315E  1054               	iorwf	(??_floorf+2)^0,w,c
 10290  003160  1055               	iorwf	(??_floorf+3)^0,w,c
 10291  003162  A4D8               	btfss	status,2,c
 10292  003164  EFB6  F018         	goto	u5541
 10293  003168  EFB8  F018         	goto	u5540
 10294  00316C                     u5541:
 10295  00316C  EFC2  F018         	goto	l5014
 10296  003170                     u5540:
 10297  003170                     
 10298                           ; BSR set to: 0
 10299  003170  0E00               	movlw	0
 10300  003172  6F66               	movwf	floorf@u& (0+255),b
 10301  003174  0E00               	movlw	0
 10302  003176  6F67               	movwf	(floorf@u+1)& (0+255),b
 10303  003178  0E00               	movlw	0
 10304  00317A  6F68               	movwf	(floorf@u+2)& (0+255),b
 10305  00317C  0E00               	movlw	0
 10306  00317E  6F69               	movwf	(floorf@u+3)& (0+255),b
 10307  003180  EFDE  F018         	goto	l5018
 10308  003184                     l5014:
 10309                           
 10310                           ; BSR set to: 0
 10311  003184  90D8               	bcf	status,0,c
 10312  003186  3566               	rlcf	floorf@u& (0+255),w,b
 10313  003188  6E52               	movwf	??_floorf^0,c
 10314  00318A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 10315  00318C  6E53               	movwf	(??_floorf+1)^0,c
 10316  00318E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 10317  003190  6E54               	movwf	(??_floorf+2)^0,c
 10318  003192  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 10319  003194  6E55               	movwf	(??_floorf+3)^0,c
 10320  003196  5052               	movf	??_floorf^0,w,c
 10321  003198  1053               	iorwf	(??_floorf+1)^0,w,c
 10322  00319A  1054               	iorwf	(??_floorf+2)^0,w,c
 10323  00319C  1055               	iorwf	(??_floorf+3)^0,w,c
 10324  00319E  B4D8               	btfsc	status,2,c
 10325  0031A0  EFD4  F018         	goto	u5551
 10326  0031A4  EFD6  F018         	goto	u5550
 10327  0031A8                     u5551:
 10328  0031A8  EFDE  F018         	goto	l5018
 10329  0031AC                     u5550:
 10330  0031AC                     
 10331                           ; BSR set to: 0
 10332  0031AC  0E00               	movlw	0
 10333  0031AE  6F66               	movwf	floorf@u& (0+255),b
 10334  0031B0  0E00               	movlw	0
 10335  0031B2  6F67               	movwf	(floorf@u+1)& (0+255),b
 10336  0031B4  0E80               	movlw	128
 10337  0031B6  6F68               	movwf	(floorf@u+2)& (0+255),b
 10338  0031B8  0EBF               	movlw	191
 10339  0031BA  6F69               	movwf	(floorf@u+3)& (0+255),b
 10340  0031BC                     l5018:
 10341                           
 10342                           ; BSR set to: 0
 10343  0031BC  C066  F04E         	movff	floorf@u,?_floorf
 10344  0031C0  C067  F04F         	movff	floorf@u+1,?_floorf+1
 10345  0031C4  C068  F050         	movff	floorf@u+2,?_floorf+2
 10346  0031C8  C069  F051         	movff	floorf@u+3,?_floorf+3
 10347  0031CC                     l1638:
 10348                           
 10349                           ; BSR set to: 0
 10350  0031CC  0012               	return		;funcret
 10351  0031CE                     __end_of_floorf:
 10352                           	callstack 0
 10353                           
 10354 ;; *************** function ___fpclassifyf *****************
 10355 ;; Defined at:
 10356 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
 10357 ;; Parameters:    Size  Location     Type
 10358 ;;  x               4    0[COMRAM] float 
 10359 ;; Auto vars:     Size  Location     Type
 10360 ;;  u               4   10[COMRAM] struct .
 10361 ;;  e               2    8[COMRAM] int 
 10362 ;; Return value:  Size  Location     Type
 10363 ;;                  2    0[COMRAM] int 
 10364 ;; Registers used:
 10365 ;;		wreg, status,2, status,0
 10366 ;; Tracked objects:
 10367 ;;		On entry : 0/0
 10368 ;;		On exit  : 0/0
 10369 ;;		Unchanged: 0/0
 10370 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10371 ;;      Params:         4       0       0       0       0       0       0
 10372 ;;      Locals:         6       0       0       0       0       0       0
 10373 ;;      Temps:          4       0       0       0       0       0       0
 10374 ;;      Totals:        14       0       0       0       0       0       0
 10375 ;;Total ram usage:       14 bytes
 10376 ;; Hardware stack levels used:    1
 10377 ;; Hardware stack levels required when called:    1
 10378 ;; This function calls:
 10379 ;;		Nothing
 10380 ;; This function is called by:
 10381 ;;		_efgtoa
 10382 ;; This function uses a non-reentrant model
 10383 ;;
 10384                           
 10385                           	psect	text39
 10386  0044C8                     __ptext39:
 10387                           	callstack 0
 10388  0044C8                     ___fpclassifyf:
 10389                           	callstack 22
 10390  0044C8  C1A7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10391  0044CC  C1A8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10392  0044D0  C1A9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10393  0044D4  C1AA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10394  0044D8  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 10395  0044DC  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10396  0044E0  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10397  0044E4  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10398  0044E8  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10399  0044EC  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10400  0044F0  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10401  0044F4  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10402  0044F8  0E18               	movlw	24
 10403  0044FA  EF84  F022         	goto	u5340
 10404  0044FE                     u5345:
 10405  0044FE  90D8               	bcf	status,0,c
 10406  004500  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 10407  004502  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 10408  004504  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 10409  004506  3205               	rrcf	??___fpclassifyf^0,f,c
 10410  004508                     u5340:
 10411  004508  2EE8               	decfsz	wreg,f,c
 10412  00450A  EF7F  F022         	goto	u5345
 10413  00450E  5005               	movf	??___fpclassifyf^0,w,c
 10414  004510  6E09               	movwf	___fpclassifyf@e^0,c
 10415  004512  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 10416  004514  5009               	movf	___fpclassifyf@e^0,w,c
 10417  004516  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10418  004518  A4D8               	btfss	status,2,c
 10419  00451A  EF91  F022         	goto	u5351
 10420  00451E  EF93  F022         	goto	u5350
 10421  004522                     u5351:
 10422  004522  EFB3  F022         	goto	l4970
 10423  004526                     u5350:
 10424  004526  90D8               	bcf	status,0,c
 10425  004528  340B               	rlcf	___fpclassifyf@u^0,w,c
 10426  00452A  6E05               	movwf	??___fpclassifyf^0,c
 10427  00452C  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10428  00452E  6E06               	movwf	(??___fpclassifyf+1)^0,c
 10429  004530  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10430  004532  6E07               	movwf	(??___fpclassifyf+2)^0,c
 10431  004534  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10432  004536  6E08               	movwf	(??___fpclassifyf+3)^0,c
 10433  004538  5005               	movf	??___fpclassifyf^0,w,c
 10434  00453A  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10435  00453C  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10436  00453E  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10437  004540  A4D8               	btfss	status,2,c
 10438  004542  EFA5  F022         	goto	u5361
 10439  004546  EFA7  F022         	goto	u5360
 10440  00454A                     u5361:
 10441  00454A  EFAD  F022         	goto	l4966
 10442  00454E                     u5360:
 10443  00454E  0E00               	movlw	0
 10444  004550  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10445  004552  0E02               	movlw	2
 10446  004554  6E01               	movwf	?___fpclassifyf^0,c
 10447  004556  EFE2  F022         	goto	l1593
 10448  00455A                     l4966:
 10449  00455A  0E00               	movlw	0
 10450  00455C  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10451  00455E  0E03               	movlw	3
 10452  004560  6E01               	movwf	?___fpclassifyf^0,c
 10453  004562  EFE2  F022         	goto	l1593
 10454  004566                     l4970:
 10455  004566  2809               	incf	___fpclassifyf@e^0,w,c
 10456  004568  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10457  00456A  A4D8               	btfss	status,2,c
 10458  00456C  EFBA  F022         	goto	u5371
 10459  004570  EFBC  F022         	goto	u5370
 10460  004574                     u5371:
 10461  004574  EFDE  F022         	goto	l4976
 10462  004578                     u5370:
 10463  004578  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10464  00457C  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10465  004580  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10466  004584  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10467  004588  0E09               	movlw	9
 10468  00458A                     u5385:
 10469  00458A  90D8               	bcf	status,0,c
 10470  00458C  3605               	rlcf	??___fpclassifyf^0,f,c
 10471  00458E  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 10472  004590  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 10473  004592  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 10474  004594  2EE8               	decfsz	wreg,f,c
 10475  004596  EFC5  F022         	goto	u5385
 10476  00459A  5005               	movf	??___fpclassifyf^0,w,c
 10477  00459C  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10478  00459E  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10479  0045A0  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10480  0045A2  B4D8               	btfsc	status,2,c
 10481  0045A4  EFD6  F022         	goto	u5391
 10482  0045A8  EFD9  F022         	goto	u5390
 10483  0045AC                     u5391:
 10484  0045AC  0E01               	movlw	1
 10485  0045AE  EFDA  F022         	goto	u5400
 10486  0045B2                     u5390:
 10487  0045B2  0E00               	movlw	0
 10488  0045B4                     u5400:
 10489  0045B4  6E01               	movwf	?___fpclassifyf^0,c
 10490  0045B6  6A02               	clrf	(?___fpclassifyf+1)^0,c
 10491  0045B8  EFE2  F022         	goto	l1593
 10492  0045BC                     l4976:
 10493  0045BC  0E00               	movlw	0
 10494  0045BE  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10495  0045C0  0E04               	movlw	4
 10496  0045C2  6E01               	movwf	?___fpclassifyf^0,c
 10497  0045C4                     l1593:
 10498  0045C4  0012               	return		;funcret
 10499  0045C6                     __end_of___fpclassifyf:
 10500                           	callstack 0
 10501                           
 10502 ;; *************** function ___fltol *****************
 10503 ;; Defined at:
 10504 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 10505 ;; Parameters:    Size  Location     Type
 10506 ;;  f1              4   77[COMRAM] int 
 10507 ;; Auto vars:     Size  Location     Type
 10508 ;;  exp1            1   86[COMRAM] unsigned char 
 10509 ;;  sign1           1   85[COMRAM] unsigned char 
 10510 ;; Return value:  Size  Location     Type
 10511 ;;                  4   77[COMRAM] long 
 10512 ;; Registers used:
 10513 ;;		wreg, status,2, status,0
 10514 ;; Tracked objects:
 10515 ;;		On entry : 0/0
 10516 ;;		On exit  : 0/0
 10517 ;;		Unchanged: 0/0
 10518 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10519 ;;      Params:         4       0       0       0       0       0       0
 10520 ;;      Locals:         2       0       0       0       0       0       0
 10521 ;;      Temps:          4       0       0       0       0       0       0
 10522 ;;      Totals:        10       0       0       0       0       0       0
 10523 ;;Total ram usage:       10 bytes
 10524 ;; Hardware stack levels used:    1
 10525 ;; Hardware stack levels required when called:    1
 10526 ;; This function calls:
 10527 ;;		Nothing
 10528 ;; This function is called by:
 10529 ;;		_scanAdcConversion
 10530 ;;		_PWM1_setDC
 10531 ;;		_PWM2_setDC
 10532 ;;		_speedControl
 10533 ;;		_efgtoa
 10534 ;; This function uses a non-reentrant model
 10535 ;;
 10536                           
 10537                           	psect	text40
 10538  0042BE                     __ptext40:
 10539                           	callstack 0
 10540  0042BE                     ___fltol:
 10541                           	callstack 24
 10542  0042BE  3450               	rlcf	(___fltol@f1+2)^0,w,c
 10543  0042C0  3451               	rlcf	(___fltol@f1+3)^0,w,c
 10544  0042C2  6E57               	movwf	___fltol@exp1^0,c
 10545  0042C4  5057               	movf	___fltol@exp1^0,w,c
 10546  0042C6  A4D8               	btfss	status,2,c
 10547  0042C8  EF68  F021         	goto	u5221
 10548  0042CC  EF6A  F021         	goto	u5220
 10549  0042D0                     u5221:
 10550  0042D0  EF74  F021         	goto	l4894
 10551  0042D4                     u5220:
 10552  0042D4                     l4890:
 10553  0042D4  0E00               	movlw	0
 10554  0042D6  6E4E               	movwf	?___fltol^0,c
 10555  0042D8  0E00               	movlw	0
 10556  0042DA  6E4F               	movwf	(?___fltol+1)^0,c
 10557  0042DC  0E00               	movlw	0
 10558  0042DE  6E50               	movwf	(?___fltol+2)^0,c
 10559  0042E0  0E00               	movlw	0
 10560  0042E2  6E51               	movwf	(?___fltol+3)^0,c
 10561  0042E4  EFE1  F021         	goto	l988
 10562  0042E8                     l4894:
 10563  0042E8  C04E  F052         	movff	___fltol@f1,??___fltol
 10564  0042EC  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 10565  0042F0  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 10566  0042F4  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 10567  0042F8  0E20               	movlw	32
 10568  0042FA  EF84  F021         	goto	u5230
 10569  0042FE                     u5235:
 10570  0042FE  90D8               	bcf	status,0,c
 10571  004300  3255               	rrcf	(??___fltol+3)^0,f,c
 10572  004302  3254               	rrcf	(??___fltol+2)^0,f,c
 10573  004304  3253               	rrcf	(??___fltol+1)^0,f,c
 10574  004306  3252               	rrcf	??___fltol^0,f,c
 10575  004308                     u5230:
 10576  004308  2EE8               	decfsz	wreg,f,c
 10577  00430A  EF7F  F021         	goto	u5235
 10578  00430E  5052               	movf	??___fltol^0,w,c
 10579  004310  6E56               	movwf	___fltol@sign1^0,c
 10580  004312  8E50               	bsf	(___fltol@f1+2)^0,7,c
 10581  004314  0EFF               	movlw	255
 10582  004316  164E               	andwf	___fltol@f1^0,f,c
 10583  004318  0EFF               	movlw	255
 10584  00431A  164F               	andwf	(___fltol@f1+1)^0,f,c
 10585  00431C  0EFF               	movlw	255
 10586  00431E  1650               	andwf	(___fltol@f1+2)^0,f,c
 10587  004320  0E00               	movlw	0
 10588  004322  1651               	andwf	(___fltol@f1+3)^0,f,c
 10589  004324  0E96               	movlw	150
 10590  004326  5E57               	subwf	___fltol@exp1^0,f,c
 10591  004328  BE57               	btfsc	___fltol@exp1^0,7,c
 10592  00432A  EF9B  F021         	goto	u5240
 10593  00432E  EF99  F021         	goto	u5241
 10594  004332                     u5241:
 10595  004332  EFB1  F021         	goto	l4914
 10596  004336                     u5240:
 10597  004336  5057               	movf	___fltol@exp1^0,w,c
 10598  004338  0A80               	xorlw	128
 10599  00433A  0F97               	addlw	151
 10600  00433C  B0D8               	btfsc	status,0,c
 10601  00433E  EFA3  F021         	goto	u5251
 10602  004342  EFA5  F021         	goto	u5250
 10603  004346                     u5251:
 10604  004346  EFA7  F021         	goto	l4910
 10605  00434A                     u5250:
 10606  00434A  EF6A  F021         	goto	l4890
 10607  00434E                     l4910:
 10608  00434E  90D8               	bcf	status,0,c
 10609  004350  3251               	rrcf	(___fltol@f1+3)^0,f,c
 10610  004352  3250               	rrcf	(___fltol@f1+2)^0,f,c
 10611  004354  324F               	rrcf	(___fltol@f1+1)^0,f,c
 10612  004356  324E               	rrcf	___fltol@f1^0,f,c
 10613  004358  3E57               	incfsz	___fltol@exp1^0,f,c
 10614  00435A  EFA7  F021         	goto	l4910
 10615  00435E  EFC9  F021         	goto	l4924
 10616  004362                     l4914:
 10617  004362  0E1F               	movlw	31
 10618  004364  6457               	cpfsgt	___fltol@exp1^0,c
 10619  004366  EFB7  F021         	goto	u5261
 10620  00436A  EFB9  F021         	goto	u5260
 10621  00436E                     u5261:
 10622  00436E  EFC1  F021         	goto	l4922
 10623  004372                     u5260:
 10624  004372  EF6A  F021         	goto	l4890
 10625  004376                     l4920:
 10626  004376  90D8               	bcf	status,0,c
 10627  004378  364E               	rlcf	___fltol@f1^0,f,c
 10628  00437A  364F               	rlcf	(___fltol@f1+1)^0,f,c
 10629  00437C  3650               	rlcf	(___fltol@f1+2)^0,f,c
 10630  00437E  3651               	rlcf	(___fltol@f1+3)^0,f,c
 10631  004380  0657               	decf	___fltol@exp1^0,f,c
 10632  004382                     l4922:
 10633  004382  5057               	movf	___fltol@exp1^0,w,c
 10634  004384  A4D8               	btfss	status,2,c
 10635  004386  EFC7  F021         	goto	u5271
 10636  00438A  EFC9  F021         	goto	u5270
 10637  00438E                     u5271:
 10638  00438E  EFBB  F021         	goto	l4920
 10639  004392                     u5270:
 10640  004392                     l4924:
 10641  004392  5056               	movf	___fltol@sign1^0,w,c
 10642  004394  B4D8               	btfsc	status,2,c
 10643  004396  EFCF  F021         	goto	u5281
 10644  00439A  EFD1  F021         	goto	u5280
 10645  00439E                     u5281:
 10646  00439E  EFD9  F021         	goto	l4928
 10647  0043A2                     u5280:
 10648  0043A2  1E51               	comf	(___fltol@f1+3)^0,f,c
 10649  0043A4  1E50               	comf	(___fltol@f1+2)^0,f,c
 10650  0043A6  1E4F               	comf	(___fltol@f1+1)^0,f,c
 10651  0043A8  6C4E               	negf	___fltol@f1^0,c
 10652  0043AA  0E00               	movlw	0
 10653  0043AC  224F               	addwfc	(___fltol@f1+1)^0,f,c
 10654  0043AE  2250               	addwfc	(___fltol@f1+2)^0,f,c
 10655  0043B0  2251               	addwfc	(___fltol@f1+3)^0,f,c
 10656  0043B2                     l4928:
 10657  0043B2  C04E  F04E         	movff	___fltol@f1,?___fltol
 10658  0043B6  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 10659  0043BA  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 10660  0043BE  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 10661  0043C2                     l988:
 10662  0043C2  0012               	return		;funcret
 10663  0043C4                     __end_of___fltol:
 10664                           	callstack 0
 10665                           
 10666 ;; *************** function ___flsub *****************
 10667 ;; Defined at:
 10668 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10669 ;; Parameters:    Size  Location     Type
 10670 ;;  b               4   68[COMRAM] long 
 10671 ;;  a               4   72[COMRAM] long 
 10672 ;; Auto vars:     Size  Location     Type
 10673 ;;		None
 10674 ;; Return value:  Size  Location     Type
 10675 ;;                  4   68[COMRAM] long 
 10676 ;; Registers used:
 10677 ;;		wreg, status,2, status,0, cstack
 10678 ;; Tracked objects:
 10679 ;;		On entry : 0/0
 10680 ;;		On exit  : 0/0
 10681 ;;		Unchanged: 0/0
 10682 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10683 ;;      Params:         8       0       0       0       0       0       0
 10684 ;;      Locals:         0       0       0       0       0       0       0
 10685 ;;      Temps:          0       0       0       0       0       0       0
 10686 ;;      Totals:         8       0       0       0       0       0       0
 10687 ;;Total ram usage:        8 bytes
 10688 ;; Hardware stack levels used:    1
 10689 ;; Hardware stack levels required when called:    2
 10690 ;; This function calls:
 10691 ;;		___fladd
 10692 ;; This function is called by:
 10693 ;;		_secretMenu
 10694 ;;		_efgtoa
 10695 ;; This function uses a non-reentrant model
 10696 ;;
 10697                           
 10698                           	psect	text41
 10699  005358                     __ptext41:
 10700                           	callstack 0
 10701  005358                     ___flsub:
 10702                           	callstack 21
 10703  005358  0E00               	movlw	0
 10704  00535A  1A49               	xorwf	___flsub@a^0,f,c
 10705  00535C  0E00               	movlw	0
 10706  00535E  1A4A               	xorwf	(___flsub@a+1)^0,f,c
 10707  005360  0E00               	movlw	0
 10708  005362  1A4B               	xorwf	(___flsub@a+2)^0,f,c
 10709  005364  0E80               	movlw	128
 10710  005366  1A4C               	xorwf	(___flsub@a+3)^0,f,c
 10711  005368  C045  F035         	movff	___flsub@b,___fladd@b
 10712  00536C  C046  F036         	movff	___flsub@b+1,___fladd@b+1
 10713  005370  C047  F037         	movff	___flsub@b+2,___fladd@b+2
 10714  005374  C048  F038         	movff	___flsub@b+3,___fladd@b+3
 10715  005378  C049  F039         	movff	___flsub@a,___fladd@a
 10716  00537C  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
 10717  005380  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
 10718  005384  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
 10719  005388  EC49  F00D         	call	___fladd	;wreg free
 10720  00538C  C035  F045         	movff	?___fladd,?___flsub
 10721  005390  C036  F046         	movff	?___fladd+1,?___flsub+1
 10722  005394  C037  F047         	movff	?___fladd+2,?___flsub+2
 10723  005398  C038  F048         	movff	?___fladd+3,?___flsub+3
 10724  00539C  0012               	return		;funcret
 10725  00539E                     __end_of___flsub:
 10726                           	callstack 0
 10727                           
 10728 ;; *************** function ___fladd *****************
 10729 ;; Defined at:
 10730 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10731 ;; Parameters:    Size  Location     Type
 10732 ;;  b               4   52[COMRAM] long 
 10733 ;;  a               4   56[COMRAM] long 
 10734 ;; Auto vars:     Size  Location     Type
 10735 ;;  grs             1   67[COMRAM] unsigned char 
 10736 ;;  bexp            1   66[COMRAM] unsigned char 
 10737 ;;  aexp            1   65[COMRAM] unsigned char 
 10738 ;;  signs           1   64[COMRAM] unsigned char 
 10739 ;; Return value:  Size  Location     Type
 10740 ;;                  4   52[COMRAM] unsigned char 
 10741 ;; Registers used:
 10742 ;;		wreg, status,2, status,0
 10743 ;; Tracked objects:
 10744 ;;		On entry : 0/0
 10745 ;;		On exit  : 0/0
 10746 ;;		Unchanged: 0/0
 10747 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10748 ;;      Params:         8       0       0       0       0       0       0
 10749 ;;      Locals:         4       0       0       0       0       0       0
 10750 ;;      Temps:          4       0       0       0       0       0       0
 10751 ;;      Totals:        16       0       0       0       0       0       0
 10752 ;;Total ram usage:       16 bytes
 10753 ;; Hardware stack levels used:    1
 10754 ;; Hardware stack levels required when called:    1
 10755 ;; This function calls:
 10756 ;;		Nothing
 10757 ;; This function is called by:
 10758 ;;		_secretMenu
 10759 ;;		_speedControl
 10760 ;;		___flsub
 10761 ;;		_efgtoa
 10762 ;; This function uses a non-reentrant model
 10763 ;;
 10764                           
 10765                           	psect	text42
 10766  001A92                     __ptext42:
 10767                           	callstack 0
 10768  001A92                     ___fladd:
 10769                           	callstack 21
 10770  001A92  5038               	movf	(___fladd@b+3)^0,w,c
 10771  001A94  0B80               	andlw	128
 10772  001A96  6E41               	movwf	___fladd@signs^0,c
 10773  001A98  5038               	movf	(___fladd@b+3)^0,w,c
 10774  001A9A  2438               	addwf	(___fladd@b+3)^0,w,c
 10775  001A9C  6E43               	movwf	___fladd@bexp^0,c
 10776  001A9E  AE37               	btfss	(___fladd@b+2)^0,7,c
 10777  001AA0  EF54  F00D         	goto	u4031
 10778  001AA4  EF56  F00D         	goto	u4030
 10779  001AA8                     u4031:
 10780  001AA8  EF57  F00D         	goto	l4184
 10781  001AAC                     u4030:
 10782  001AAC  8043               	bsf	___fladd@bexp^0,0,c
 10783  001AAE                     l4184:
 10784  001AAE  5043               	movf	___fladd@bexp^0,w,c
 10785  001AB0  B4D8               	btfsc	status,2,c
 10786  001AB2  EF5D  F00D         	goto	u4041
 10787  001AB6  EF5F  F00D         	goto	u4040
 10788  001ABA                     u4041:
 10789  001ABA  EF74  F00D         	goto	l4194
 10790  001ABE                     u4040:
 10791  001ABE  2843               	incf	___fladd@bexp^0,w,c
 10792  001AC0  A4D8               	btfss	status,2,c
 10793  001AC2  EF65  F00D         	goto	u4051
 10794  001AC6  EF67  F00D         	goto	u4050
 10795  001ACA                     u4051:
 10796  001ACA  EF6F  F00D         	goto	l4190
 10797  001ACE                     u4050:
 10798  001ACE  0E00               	movlw	0
 10799  001AD0  6E35               	movwf	___fladd@b^0,c
 10800  001AD2  0E00               	movlw	0
 10801  001AD4  6E36               	movwf	(___fladd@b+1)^0,c
 10802  001AD6  0E00               	movlw	0
 10803  001AD8  6E37               	movwf	(___fladd@b+2)^0,c
 10804  001ADA  0E00               	movlw	0
 10805  001ADC  6E38               	movwf	(___fladd@b+3)^0,c
 10806  001ADE                     l4190:
 10807  001ADE  8E37               	bsf	(___fladd@b+2)^0,7,c
 10808  001AE0  0E00               	movlw	0
 10809  001AE2  6E38               	movwf	(___fladd@b+3)^0,c
 10810  001AE4  EF7C  F00D         	goto	l4196
 10811  001AE8                     l4194:
 10812  001AE8  0E00               	movlw	0
 10813  001AEA  6E35               	movwf	___fladd@b^0,c
 10814  001AEC  0E00               	movlw	0
 10815  001AEE  6E36               	movwf	(___fladd@b+1)^0,c
 10816  001AF0  0E00               	movlw	0
 10817  001AF2  6E37               	movwf	(___fladd@b+2)^0,c
 10818  001AF4  0E00               	movlw	0
 10819  001AF6  6E38               	movwf	(___fladd@b+3)^0,c
 10820  001AF8                     l4196:
 10821  001AF8  503C               	movf	(___fladd@a+3)^0,w,c
 10822  001AFA  0B80               	andlw	128
 10823  001AFC  6E42               	movwf	___fladd@aexp^0,c
 10824  001AFE  5041               	movf	___fladd@signs^0,w,c
 10825  001B00  1842               	xorwf	___fladd@aexp^0,w,c
 10826  001B02  B4D8               	btfsc	status,2,c
 10827  001B04  EF86  F00D         	goto	u4061
 10828  001B08  EF88  F00D         	goto	u4060
 10829  001B0C                     u4061:
 10830  001B0C  EF89  F00D         	goto	l4202
 10831  001B10                     u4060:
 10832  001B10  8C41               	bsf	___fladd@signs^0,6,c
 10833  001B12                     l4202:
 10834  001B12  503C               	movf	(___fladd@a+3)^0,w,c
 10835  001B14  243C               	addwf	(___fladd@a+3)^0,w,c
 10836  001B16  6E42               	movwf	___fladd@aexp^0,c
 10837  001B18  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10838  001B1A  EF91  F00D         	goto	u4071
 10839  001B1E  EF93  F00D         	goto	u4070
 10840  001B22                     u4071:
 10841  001B22  EF94  F00D         	goto	l4208
 10842  001B26                     u4070:
 10843  001B26  8042               	bsf	___fladd@aexp^0,0,c
 10844  001B28                     l4208:
 10845  001B28  5042               	movf	___fladd@aexp^0,w,c
 10846  001B2A  B4D8               	btfsc	status,2,c
 10847  001B2C  EF9A  F00D         	goto	u4081
 10848  001B30  EF9C  F00D         	goto	u4080
 10849  001B34                     u4081:
 10850  001B34  EFB1  F00D         	goto	l4218
 10851  001B38                     u4080:
 10852  001B38  2842               	incf	___fladd@aexp^0,w,c
 10853  001B3A  A4D8               	btfss	status,2,c
 10854  001B3C  EFA2  F00D         	goto	u4091
 10855  001B40  EFA4  F00D         	goto	u4090
 10856  001B44                     u4091:
 10857  001B44  EFAC  F00D         	goto	l4214
 10858  001B48                     u4090:
 10859  001B48  0E00               	movlw	0
 10860  001B4A  6E39               	movwf	___fladd@a^0,c
 10861  001B4C  0E00               	movlw	0
 10862  001B4E  6E3A               	movwf	(___fladd@a+1)^0,c
 10863  001B50  0E00               	movlw	0
 10864  001B52  6E3B               	movwf	(___fladd@a+2)^0,c
 10865  001B54  0E00               	movlw	0
 10866  001B56  6E3C               	movwf	(___fladd@a+3)^0,c
 10867  001B58                     l4214:
 10868  001B58  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10869  001B5A  0E00               	movlw	0
 10870  001B5C  6E3C               	movwf	(___fladd@a+3)^0,c
 10871  001B5E  EFB9  F00D         	goto	l4220
 10872  001B62                     l4218:
 10873  001B62  0E00               	movlw	0
 10874  001B64  6E39               	movwf	___fladd@a^0,c
 10875  001B66  0E00               	movlw	0
 10876  001B68  6E3A               	movwf	(___fladd@a+1)^0,c
 10877  001B6A  0E00               	movlw	0
 10878  001B6C  6E3B               	movwf	(___fladd@a+2)^0,c
 10879  001B6E  0E00               	movlw	0
 10880  001B70  6E3C               	movwf	(___fladd@a+3)^0,c
 10881  001B72                     l4220:
 10882  001B72  5043               	movf	___fladd@bexp^0,w,c
 10883  001B74  5C42               	subwf	___fladd@aexp^0,w,c
 10884  001B76  B0D8               	btfsc	status,0,c
 10885  001B78  EFC0  F00D         	goto	u4101
 10886  001B7C  EFC2  F00D         	goto	u4100
 10887  001B80                     u4101:
 10888  001B80  EFE9  F00D         	goto	l4256
 10889  001B84                     u4100:
 10890  001B84  AC41               	btfss	___fladd@signs^0,6,c
 10891  001B86  EFC7  F00D         	goto	u4111
 10892  001B8A  EFC9  F00D         	goto	u4110
 10893  001B8E                     u4111:
 10894  001B8E  EFCB  F00D         	goto	l4226
 10895  001B92                     u4110:
 10896  001B92  0E80               	movlw	128
 10897  001B94  1A41               	xorwf	___fladd@signs^0,f,c
 10898  001B96                     l4226:
 10899  001B96  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10900  001B9A  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10901  001B9E  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10902  001BA2  C035  F044         	movff	___fladd@b,___fladd@grs
 10903  001BA6  C039  F035         	movff	___fladd@a,___fladd@b
 10904  001BAA  C044  F039         	movff	___fladd@grs,___fladd@a
 10905  001BAE  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10906  001BB2  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10907  001BB6  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10908  001BBA  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10909  001BBE  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10910  001BC2  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10911  001BC6  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10912  001BCA  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10913  001BCE  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10914  001BD2                     l4256:
 10915  001BD2  0E00               	movlw	0
 10916  001BD4  6E44               	movwf	___fladd@grs^0,c
 10917  001BD6  5043               	movf	___fladd@bexp^0,w,c
 10918  001BD8  C042  F03D         	movff	___fladd@aexp,??___fladd
 10919  001BDC  6A3E               	clrf	(??___fladd+1)^0,c
 10920  001BDE  5E3D               	subwf	??___fladd^0,f,c
 10921  001BE0  0E00               	movlw	0
 10922  001BE2  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10923  001BE4  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10924  001BE6  EFFE  F00D         	goto	u4121
 10925  001BEA  503E               	movf	(??___fladd+1)^0,w,c
 10926  001BEC  E109               	bnz	u4120
 10927  001BEE  0E1A               	movlw	26
 10928  001BF0  5C3D               	subwf	??___fladd^0,w,c
 10929  001BF2  A0D8               	btfss	status,0,c
 10930  001BF4  EFFE  F00D         	goto	u4121
 10931  001BF8  EF00  F00E         	goto	u4120
 10932  001BFC                     u4121:
 10933  001BFC  EF37  F00E         	goto	l1220
 10934  001C00                     u4120:
 10935  001C00  5035               	movf	___fladd@b^0,w,c
 10936  001C02  1036               	iorwf	(___fladd@b+1)^0,w,c
 10937  001C04  1037               	iorwf	(___fladd@b+2)^0,w,c
 10938  001C06  1038               	iorwf	(___fladd@b+3)^0,w,c
 10939  001C08  A4D8               	btfss	status,2,c
 10940  001C0A  EF09  F00E         	goto	u4131
 10941  001C0E  EF0C  F00E         	goto	u4130
 10942  001C12                     u4131:
 10943  001C12  0E01               	movlw	1
 10944  001C14  EF0D  F00E         	goto	u4140
 10945  001C18                     u4130:
 10946  001C18  0E00               	movlw	0
 10947  001C1A                     u4140:
 10948  001C1A  6E44               	movwf	___fladd@grs^0,c
 10949  001C1C  0E00               	movlw	0
 10950  001C1E  6E35               	movwf	___fladd@b^0,c
 10951  001C20  0E00               	movlw	0
 10952  001C22  6E36               	movwf	(___fladd@b+1)^0,c
 10953  001C24  0E00               	movlw	0
 10954  001C26  6E37               	movwf	(___fladd@b+2)^0,c
 10955  001C28  0E00               	movlw	0
 10956  001C2A  6E38               	movwf	(___fladd@b+3)^0,c
 10957  001C2C  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10958  001C30  EF40  F00E         	goto	l1219
 10959  001C34                     l1221:
 10960  001C34  A044               	btfss	___fladd@grs^0,0,c
 10961  001C36  EF1F  F00E         	goto	u4151
 10962  001C3A  EF21  F00E         	goto	u4150
 10963  001C3E                     u4151:
 10964  001C3E  EF27  F00E         	goto	l4268
 10965  001C42                     u4150:
 10966  001C42  90D8               	bcf	status,0,c
 10967  001C44  3044               	rrcf	___fladd@grs^0,w,c
 10968  001C46  0901               	iorlw	1
 10969  001C48  6E44               	movwf	___fladd@grs^0,c
 10970  001C4A  EF29  F00E         	goto	l4270
 10971  001C4E                     l4268:
 10972  001C4E  90D8               	bcf	status,0,c
 10973  001C50  3244               	rrcf	___fladd@grs^0,f,c
 10974  001C52                     l4270:
 10975  001C52  A035               	btfss	___fladd@b^0,0,c
 10976  001C54  EF2E  F00E         	goto	u4161
 10977  001C58  EF30  F00E         	goto	u4160
 10978  001C5C                     u4161:
 10979  001C5C  EF31  F00E         	goto	l4274
 10980  001C60                     u4160:
 10981  001C60  8E44               	bsf	___fladd@grs^0,7,c
 10982  001C62                     l4274:
 10983  001C62  3438               	rlcf	(___fladd@b+3)^0,w,c
 10984  001C64  3238               	rrcf	(___fladd@b+3)^0,f,c
 10985  001C66  3237               	rrcf	(___fladd@b+2)^0,f,c
 10986  001C68  3236               	rrcf	(___fladd@b+1)^0,f,c
 10987  001C6A  3235               	rrcf	___fladd@b^0,f,c
 10988  001C6C  2A43               	incf	___fladd@bexp^0,f,c
 10989  001C6E                     l1220:
 10990  001C6E  5042               	movf	___fladd@aexp^0,w,c
 10991  001C70  5C43               	subwf	___fladd@bexp^0,w,c
 10992  001C72  A0D8               	btfss	status,0,c
 10993  001C74  EF3E  F00E         	goto	u4171
 10994  001C78  EF40  F00E         	goto	u4170
 10995  001C7C                     u4171:
 10996  001C7C  EF1A  F00E         	goto	l1221
 10997  001C80                     u4170:
 10998  001C80                     l1219:
 10999  001C80  BC41               	btfsc	___fladd@signs^0,6,c
 11000  001C82  EF45  F00E         	goto	u4181
 11001  001C86  EF47  F00E         	goto	u4180
 11002  001C8A                     u4181:
 11003  001C8A  EF87  F00E         	goto	l4302
 11004  001C8E                     u4180:
 11005  001C8E  5043               	movf	___fladd@bexp^0,w,c
 11006  001C90  A4D8               	btfss	status,2,c
 11007  001C92  EF4D  F00E         	goto	u4191
 11008  001C96  EF4F  F00E         	goto	u4190
 11009  001C9A                     u4191:
 11010  001C9A  EF59  F00E         	goto	l4284
 11011  001C9E                     u4190:
 11012  001C9E  0E00               	movlw	0
 11013  001CA0  6E35               	movwf	?___fladd^0,c
 11014  001CA2  0E00               	movlw	0
 11015  001CA4  6E36               	movwf	(?___fladd+1)^0,c
 11016  001CA6  0E00               	movlw	0
 11017  001CA8  6E37               	movwf	(?___fladd+2)^0,c
 11018  001CAA  0E00               	movlw	0
 11019  001CAC  6E38               	movwf	(?___fladd+3)^0,c
 11020  001CAE  EFA8  F00F         	goto	l1228
 11021  001CB2                     l4284:
 11022  001CB2  5039               	movf	___fladd@a^0,w,c
 11023  001CB4  2635               	addwf	___fladd@b^0,f,c
 11024  001CB6  503A               	movf	(___fladd@a+1)^0,w,c
 11025  001CB8  2236               	addwfc	(___fladd@b+1)^0,f,c
 11026  001CBA  503B               	movf	(___fladd@a+2)^0,w,c
 11027  001CBC  2237               	addwfc	(___fladd@b+2)^0,f,c
 11028  001CBE  503C               	movf	(___fladd@a+3)^0,w,c
 11029  001CC0  2238               	addwfc	(___fladd@b+3)^0,f,c
 11030  001CC2  A038               	btfss	(___fladd@b+3)^0,0,c
 11031  001CC4  EF66  F00E         	goto	u4201
 11032  001CC8  EF68  F00E         	goto	u4200
 11033  001CCC                     u4201:
 11034  001CCC  EF14  F00F         	goto	l4338
 11035  001CD0                     u4200:
 11036  001CD0  A044               	btfss	___fladd@grs^0,0,c
 11037  001CD2  EF6D  F00E         	goto	u4211
 11038  001CD6  EF6F  F00E         	goto	u4210
 11039  001CDA                     u4211:
 11040  001CDA  EF75  F00E         	goto	l4292
 11041  001CDE                     u4210:
 11042  001CDE  90D8               	bcf	status,0,c
 11043  001CE0  3044               	rrcf	___fladd@grs^0,w,c
 11044  001CE2  0901               	iorlw	1
 11045  001CE4  6E44               	movwf	___fladd@grs^0,c
 11046  001CE6  EF77  F00E         	goto	l4294
 11047  001CEA                     l4292:
 11048  001CEA  90D8               	bcf	status,0,c
 11049  001CEC  3244               	rrcf	___fladd@grs^0,f,c
 11050  001CEE                     l4294:
 11051  001CEE  A035               	btfss	___fladd@b^0,0,c
 11052  001CF0  EF7C  F00E         	goto	u4221
 11053  001CF4  EF7E  F00E         	goto	u4220
 11054  001CF8                     u4221:
 11055  001CF8  EF7F  F00E         	goto	l4298
 11056  001CFC                     u4220:
 11057  001CFC  8E44               	bsf	___fladd@grs^0,7,c
 11058  001CFE                     l4298:
 11059  001CFE  3438               	rlcf	(___fladd@b+3)^0,w,c
 11060  001D00  3238               	rrcf	(___fladd@b+3)^0,f,c
 11061  001D02  3237               	rrcf	(___fladd@b+2)^0,f,c
 11062  001D04  3236               	rrcf	(___fladd@b+1)^0,f,c
 11063  001D06  3235               	rrcf	___fladd@b^0,f,c
 11064  001D08  2A43               	incf	___fladd@bexp^0,f,c
 11065  001D0A  EF14  F00F         	goto	l4338
 11066  001D0E                     l4302:
 11067  001D0E  5039               	movf	___fladd@a^0,w,c
 11068  001D10  5C35               	subwf	___fladd@b^0,w,c
 11069  001D12  503A               	movf	(___fladd@a+1)^0,w,c
 11070  001D14  5836               	subwfb	(___fladd@b+1)^0,w,c
 11071  001D16  503B               	movf	(___fladd@a+2)^0,w,c
 11072  001D18  5837               	subwfb	(___fladd@b+2)^0,w,c
 11073  001D1A  5038               	movf	(___fladd@b+3)^0,w,c
 11074  001D1C  0A80               	xorlw	128
 11075  001D1E  6E3D               	movwf	??___fladd^0,c
 11076  001D20  503C               	movf	(___fladd@a+3)^0,w,c
 11077  001D22  0A80               	xorlw	128
 11078  001D24  583D               	subwfb	??___fladd^0,w,c
 11079  001D26  B0D8               	btfsc	status,0,c
 11080  001D28  EF98  F00E         	goto	u4231
 11081  001D2C  EF9A  F00E         	goto	u4230
 11082  001D30                     u4231:
 11083  001D30  EFC5  F00E         	goto	l4312
 11084  001D34                     u4230:
 11085  001D34  5035               	movf	___fladd@b^0,w,c
 11086  001D36  5C39               	subwf	___fladd@a^0,w,c
 11087  001D38  6E3D               	movwf	??___fladd^0,c
 11088  001D3A  5036               	movf	(___fladd@b+1)^0,w,c
 11089  001D3C  583A               	subwfb	(___fladd@a+1)^0,w,c
 11090  001D3E  6E3E               	movwf	(??___fladd+1)^0,c
 11091  001D40  5037               	movf	(___fladd@b+2)^0,w,c
 11092  001D42  583B               	subwfb	(___fladd@a+2)^0,w,c
 11093  001D44  6E3F               	movwf	(??___fladd+2)^0,c
 11094  001D46  5038               	movf	(___fladd@b+3)^0,w,c
 11095  001D48  583C               	subwfb	(___fladd@a+3)^0,w,c
 11096  001D4A  6E40               	movwf	(??___fladd+3)^0,c
 11097  001D4C  0EFF               	movlw	255
 11098  001D4E  243D               	addwf	??___fladd^0,w,c
 11099  001D50  6E35               	movwf	___fladd@b^0,c
 11100  001D52  0EFF               	movlw	255
 11101  001D54  203E               	addwfc	(??___fladd+1)^0,w,c
 11102  001D56  6E36               	movwf	(___fladd@b+1)^0,c
 11103  001D58  0EFF               	movlw	255
 11104  001D5A  203F               	addwfc	(??___fladd+2)^0,w,c
 11105  001D5C  6E37               	movwf	(___fladd@b+2)^0,c
 11106  001D5E  0EFF               	movlw	255
 11107  001D60  2040               	addwfc	(??___fladd+3)^0,w,c
 11108  001D62  6E38               	movwf	(___fladd@b+3)^0,c
 11109  001D64  0E80               	movlw	128
 11110  001D66  1A41               	xorwf	___fladd@signs^0,f,c
 11111  001D68  6C44               	negf	___fladd@grs^0,c
 11112  001D6A  5044               	movf	___fladd@grs^0,w,c
 11113  001D6C  A4D8               	btfss	status,2,c
 11114  001D6E  EFBB  F00E         	goto	u4241
 11115  001D72  EFBD  F00E         	goto	u4240
 11116  001D76                     u4241:
 11117  001D76  EFCD  F00E         	goto	l1236
 11118  001D7A                     u4240:
 11119  001D7A  0E01               	movlw	1
 11120  001D7C  2635               	addwf	___fladd@b^0,f,c
 11121  001D7E  0E00               	movlw	0
 11122  001D80  2236               	addwfc	(___fladd@b+1)^0,f,c
 11123  001D82  2237               	addwfc	(___fladd@b+2)^0,f,c
 11124  001D84  2238               	addwfc	(___fladd@b+3)^0,f,c
 11125  001D86  EFCD  F00E         	goto	l1236
 11126  001D8A                     l4312:
 11127  001D8A  5039               	movf	___fladd@a^0,w,c
 11128  001D8C  5E35               	subwf	___fladd@b^0,f,c
 11129  001D8E  503A               	movf	(___fladd@a+1)^0,w,c
 11130  001D90  5A36               	subwfb	(___fladd@b+1)^0,f,c
 11131  001D92  503B               	movf	(___fladd@a+2)^0,w,c
 11132  001D94  5A37               	subwfb	(___fladd@b+2)^0,f,c
 11133  001D96  503C               	movf	(___fladd@a+3)^0,w,c
 11134  001D98  5A38               	subwfb	(___fladd@b+3)^0,f,c
 11135  001D9A                     l1236:
 11136  001D9A  5035               	movf	___fladd@b^0,w,c
 11137  001D9C  1036               	iorwf	(___fladd@b+1)^0,w,c
 11138  001D9E  1037               	iorwf	(___fladd@b+2)^0,w,c
 11139  001DA0  1038               	iorwf	(___fladd@b+3)^0,w,c
 11140  001DA2  A4D8               	btfss	status,2,c
 11141  001DA4  EFD6  F00E         	goto	u4251
 11142  001DA8  EFD8  F00E         	goto	u4250
 11143  001DAC                     u4251:
 11144  001DAC  EF0D  F00F         	goto	l4336
 11145  001DB0                     u4250:
 11146  001DB0  5044               	movf	___fladd@grs^0,w,c
 11147  001DB2  A4D8               	btfss	status,2,c
 11148  001DB4  EFDE  F00E         	goto	u4261
 11149  001DB8  EFE0  F00E         	goto	u4260
 11150  001DBC                     u4261:
 11151  001DBC  EF0D  F00F         	goto	l4336
 11152  001DC0                     u4260:
 11153  001DC0  0E00               	movlw	0
 11154  001DC2  6E35               	movwf	?___fladd^0,c
 11155  001DC4  0E00               	movlw	0
 11156  001DC6  6E36               	movwf	(?___fladd+1)^0,c
 11157  001DC8  0E00               	movlw	0
 11158  001DCA  6E37               	movwf	(?___fladd+2)^0,c
 11159  001DCC  0E00               	movlw	0
 11160  001DCE  6E38               	movwf	(?___fladd+3)^0,c
 11161  001DD0  EFA8  F00F         	goto	l1228
 11162  001DD4                     l4320:
 11163  001DD4  90D8               	bcf	status,0,c
 11164  001DD6  3635               	rlcf	___fladd@b^0,f,c
 11165  001DD8  3636               	rlcf	(___fladd@b+1)^0,f,c
 11166  001DDA  3637               	rlcf	(___fladd@b+2)^0,f,c
 11167  001DDC  3638               	rlcf	(___fladd@b+3)^0,f,c
 11168  001DDE  AE44               	btfss	___fladd@grs^0,7,c
 11169  001DE0  EFF4  F00E         	goto	u4271
 11170  001DE4  EFF6  F00E         	goto	u4270
 11171  001DE8                     u4271:
 11172  001DE8  EFF7  F00E         	goto	l4326
 11173  001DEC                     u4270:
 11174  001DEC  8035               	bsf	___fladd@b^0,0,c
 11175  001DEE                     l4326:
 11176  001DEE  A044               	btfss	___fladd@grs^0,0,c
 11177  001DF0  EFFC  F00E         	goto	u4281
 11178  001DF4  EFFE  F00E         	goto	u4280
 11179  001DF8                     u4281:
 11180  001DF8  EF02  F00F         	goto	l4330
 11181  001DFC                     u4280:
 11182  001DFC  80D8               	bsf	status,0,c
 11183  001DFE  3644               	rlcf	___fladd@grs^0,f,c
 11184  001E00  EF04  F00F         	goto	l4332
 11185  001E04                     l4330:
 11186  001E04  90D8               	bcf	status,0,c
 11187  001E06  3644               	rlcf	___fladd@grs^0,f,c
 11188  001E08                     l4332:
 11189  001E08  5043               	movf	___fladd@bexp^0,w,c
 11190  001E0A  B4D8               	btfsc	status,2,c
 11191  001E0C  EF0A  F00F         	goto	u4291
 11192  001E10  EF0C  F00F         	goto	u4290
 11193  001E14                     u4291:
 11194  001E14  EF0D  F00F         	goto	l4336
 11195  001E18                     u4290:
 11196  001E18  0643               	decf	___fladd@bexp^0,f,c
 11197  001E1A                     l4336:
 11198  001E1A  AE37               	btfss	(___fladd@b+2)^0,7,c
 11199  001E1C  EF12  F00F         	goto	u4301
 11200  001E20  EF14  F00F         	goto	u4300
 11201  001E24                     u4301:
 11202  001E24  EFEA  F00E         	goto	l4320
 11203  001E28                     u4300:
 11204  001E28                     l4338:
 11205  001E28  0E00               	movlw	0
 11206  001E2A  6E42               	movwf	___fladd@aexp^0,c
 11207  001E2C  AE44               	btfss	___fladd@grs^0,7,c
 11208  001E2E  EF1B  F00F         	goto	u4311
 11209  001E32  EF1D  F00F         	goto	u4310
 11210  001E36                     u4311:
 11211  001E36  EF35  F00F         	goto	l1245
 11212  001E3A                     u4310:
 11213  001E3A  C044  F03D         	movff	___fladd@grs,??___fladd
 11214  001E3E  0E7F               	movlw	127
 11215  001E40  163D               	andwf	??___fladd^0,f,c
 11216  001E42  B4D8               	btfsc	status,2,c
 11217  001E44  EF26  F00F         	goto	u4321
 11218  001E48  EF28  F00F         	goto	u4320
 11219  001E4C                     u4321:
 11220  001E4C  EF2C  F00F         	goto	l1246
 11221  001E50                     u4320:
 11222  001E50                     l4344:
 11223  001E50  0E01               	movlw	1
 11224  001E52  6E42               	movwf	___fladd@aexp^0,c
 11225  001E54  EF35  F00F         	goto	l1245
 11226  001E58                     l1246:
 11227  001E58  A035               	btfss	___fladd@b^0,0,c
 11228  001E5A  EF31  F00F         	goto	u4331
 11229  001E5E  EF33  F00F         	goto	u4330
 11230  001E62                     u4331:
 11231  001E62  EF35  F00F         	goto	l1245
 11232  001E66                     u4330:
 11233  001E66  EF28  F00F         	goto	l4344
 11234  001E6A                     l1245:
 11235  001E6A  5042               	movf	___fladd@aexp^0,w,c
 11236  001E6C  B4D8               	btfsc	status,2,c
 11237  001E6E  EF3B  F00F         	goto	u4341
 11238  001E72  EF3D  F00F         	goto	u4340
 11239  001E76                     u4341:
 11240  001E76  EF68  F00F         	goto	l4356
 11241  001E7A                     u4340:
 11242  001E7A  0E01               	movlw	1
 11243  001E7C  2635               	addwf	___fladd@b^0,f,c
 11244  001E7E  0E00               	movlw	0
 11245  001E80  2236               	addwfc	(___fladd@b+1)^0,f,c
 11246  001E82  2237               	addwfc	(___fladd@b+2)^0,f,c
 11247  001E84  2238               	addwfc	(___fladd@b+3)^0,f,c
 11248  001E86  A038               	btfss	(___fladd@b+3)^0,0,c
 11249  001E88  EF48  F00F         	goto	u4351
 11250  001E8C  EF4A  F00F         	goto	u4350
 11251  001E90                     u4351:
 11252  001E90  EF68  F00F         	goto	l4356
 11253  001E94                     u4350:
 11254  001E94  C035  F03D         	movff	___fladd@b,??___fladd
 11255  001E98  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 11256  001E9C  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 11257  001EA0  C038  F040         	movff	___fladd@b+3,??___fladd+3
 11258  001EA4  3440               	rlcf	(??___fladd+3)^0,w,c
 11259  001EA6  3240               	rrcf	(??___fladd+3)^0,f,c
 11260  001EA8  323F               	rrcf	(??___fladd+2)^0,f,c
 11261  001EAA  323E               	rrcf	(??___fladd+1)^0,f,c
 11262  001EAC  323D               	rrcf	??___fladd^0,f,c
 11263  001EAE  C03D  F035         	movff	??___fladd,___fladd@b
 11264  001EB2  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 11265  001EB6  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 11266  001EBA  C040  F038         	movff	??___fladd+3,___fladd@b+3
 11267  001EBE  2843               	incf	___fladd@bexp^0,w,c
 11268  001EC0  B4D8               	btfsc	status,2,c
 11269  001EC2  EF65  F00F         	goto	u4361
 11270  001EC6  EF67  F00F         	goto	u4360
 11271  001ECA                     u4361:
 11272  001ECA  EF68  F00F         	goto	l4356
 11273  001ECE                     u4360:
 11274  001ECE  2A43               	incf	___fladd@bexp^0,f,c
 11275  001ED0                     l4356:
 11276  001ED0  2843               	incf	___fladd@bexp^0,w,c
 11277  001ED2  B4D8               	btfsc	status,2,c
 11278  001ED4  EF6E  F00F         	goto	u4371
 11279  001ED8  EF70  F00F         	goto	u4370
 11280  001EDC                     u4371:
 11281  001EDC  EF78  F00F         	goto	l4360
 11282  001EE0                     u4370:
 11283  001EE0  5043               	movf	___fladd@bexp^0,w,c
 11284  001EE2  A4D8               	btfss	status,2,c
 11285  001EE4  EF76  F00F         	goto	u4381
 11286  001EE8  EF78  F00F         	goto	u4380
 11287  001EEC                     u4381:
 11288  001EEC  EF8A  F00F         	goto	l4364
 11289  001EF0                     u4380:
 11290  001EF0                     l4360:
 11291  001EF0  0E00               	movlw	0
 11292  001EF2  6E35               	movwf	___fladd@b^0,c
 11293  001EF4  0E00               	movlw	0
 11294  001EF6  6E36               	movwf	(___fladd@b+1)^0,c
 11295  001EF8  0E00               	movlw	0
 11296  001EFA  6E37               	movwf	(___fladd@b+2)^0,c
 11297  001EFC  0E00               	movlw	0
 11298  001EFE  6E38               	movwf	(___fladd@b+3)^0,c
 11299  001F00  5043               	movf	___fladd@bexp^0,w,c
 11300  001F02  A4D8               	btfss	status,2,c
 11301  001F04  EF86  F00F         	goto	u4391
 11302  001F08  EF88  F00F         	goto	u4390
 11303  001F0C                     u4391:
 11304  001F0C  EF8A  F00F         	goto	l4364
 11305  001F10                     u4390:
 11306  001F10  0E00               	movlw	0
 11307  001F12  6E41               	movwf	___fladd@signs^0,c
 11308  001F14                     l4364:
 11309  001F14  A043               	btfss	___fladd@bexp^0,0,c
 11310  001F16  EF8F  F00F         	goto	u4401
 11311  001F1A  EF91  F00F         	goto	u4400
 11312  001F1E                     u4401:
 11313  001F1E  EF94  F00F         	goto	l4368
 11314  001F22                     u4400:
 11315  001F22  8E37               	bsf	(___fladd@b+2)^0,7,c
 11316  001F24  EF95  F00F         	goto	l4370
 11317  001F28                     l4368:
 11318  001F28  9E37               	bcf	(___fladd@b+2)^0,7,c
 11319  001F2A                     l4370:
 11320  001F2A  90D8               	bcf	status,0,c
 11321  001F2C  3043               	rrcf	___fladd@bexp^0,w,c
 11322  001F2E  6E38               	movwf	(___fladd@b+3)^0,c
 11323  001F30  AE41               	btfss	___fladd@signs^0,7,c
 11324  001F32  EF9D  F00F         	goto	u4411
 11325  001F36  EF9F  F00F         	goto	u4410
 11326  001F3A                     u4411:
 11327  001F3A  EFA0  F00F         	goto	l4376
 11328  001F3E                     u4410:
 11329  001F3E  8E38               	bsf	(___fladd@b+3)^0,7,c
 11330  001F40                     l4376:
 11331  001F40  C035  F035         	movff	___fladd@b,?___fladd
 11332  001F44  C036  F036         	movff	___fladd@b+1,?___fladd+1
 11333  001F48  C037  F037         	movff	___fladd@b+2,?___fladd+2
 11334  001F4C  C038  F038         	movff	___fladd@b+3,?___fladd+3
 11335  001F50                     l1228:
 11336  001F50  0012               	return		;funcret
 11337  001F52                     __end_of___fladd:
 11338                           	callstack 0
 11339                           
 11340 ;; *************** function ___flneg *****************
 11341 ;; Defined at:
 11342 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 11343 ;; Parameters:    Size  Location     Type
 11344 ;;  f1              4    0[COMRAM] unsigned char 
 11345 ;; Auto vars:     Size  Location     Type
 11346 ;;		None
 11347 ;; Return value:  Size  Location     Type
 11348 ;;                  4    0[COMRAM] unsigned char 
 11349 ;; Registers used:
 11350 ;;		wreg, status,2, status,0
 11351 ;; Tracked objects:
 11352 ;;		On entry : 0/0
 11353 ;;		On exit  : 0/0
 11354 ;;		Unchanged: 0/0
 11355 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11356 ;;      Params:         4       0       0       0       0       0       0
 11357 ;;      Locals:         0       0       0       0       0       0       0
 11358 ;;      Temps:          0       0       0       0       0       0       0
 11359 ;;      Totals:         4       0       0       0       0       0       0
 11360 ;;Total ram usage:        4 bytes
 11361 ;; Hardware stack levels used:    1
 11362 ;; Hardware stack levels required when called:    1
 11363 ;; This function calls:
 11364 ;;		Nothing
 11365 ;; This function is called by:
 11366 ;;		_efgtoa
 11367 ;; This function uses a non-reentrant model
 11368 ;;
 11369                           
 11370                           	psect	text43
 11371  005556                     __ptext43:
 11372                           	callstack 0
 11373  005556                     ___flneg:
 11374                           	callstack 22
 11375  005556  5001               	movf	___flneg@f1^0,w,c
 11376  005558  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11377  00555A  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11378  00555C  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11379  00555E  B4D8               	btfsc	status,2,c
 11380  005560  EFB4  F02A         	goto	u5211
 11381  005564  EFB6  F02A         	goto	u5210
 11382  005568                     u5211:
 11383  005568  EFBE  F02A         	goto	l4884
 11384  00556C                     u5210:
 11385  00556C  0E00               	movlw	0
 11386  00556E  1A01               	xorwf	___flneg@f1^0,f,c
 11387  005570  0E00               	movlw	0
 11388  005572  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11389  005574  0E00               	movlw	0
 11390  005576  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11391  005578  0E80               	movlw	128
 11392  00557A  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11393  00557C                     l4884:
 11394  00557C  C001  F001         	movff	___flneg@f1,?___flneg
 11395  005580  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11396  005584  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11397  005588  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11398  00558C  0012               	return		;funcret
 11399  00558E                     __end_of___flneg:
 11400                           	callstack 0
 11401                           
 11402 ;; *************** function ___flmul *****************
 11403 ;; Defined at:
 11404 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 11405 ;; Parameters:    Size  Location     Type
 11406 ;;  b               4   27[COMRAM] unsigned char 
 11407 ;;  a               4   31[COMRAM] unsigned char 
 11408 ;; Auto vars:     Size  Location     Type
 11409 ;;  prod            4   46[COMRAM] struct .
 11410 ;;  grs             4   40[COMRAM] unsigned long 
 11411 ;;  temp            2   50[COMRAM] struct .
 11412 ;;  bexp            1   45[COMRAM] unsigned char 
 11413 ;;  aexp            1   44[COMRAM] unsigned char 
 11414 ;;  sign            1   39[COMRAM] unsigned char 
 11415 ;; Return value:  Size  Location     Type
 11416 ;;                  4   27[COMRAM] unsigned char 
 11417 ;; Registers used:
 11418 ;;		wreg, status,2, status,0, prodl, prodh
 11419 ;; Tracked objects:
 11420 ;;		On entry : 0/0
 11421 ;;		On exit  : 0/0
 11422 ;;		Unchanged: 0/0
 11423 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11424 ;;      Params:         8       0       0       0       0       0       0
 11425 ;;      Locals:        13       0       0       0       0       0       0
 11426 ;;      Temps:          4       0       0       0       0       0       0
 11427 ;;      Totals:        25       0       0       0       0       0       0
 11428 ;;Total ram usage:       25 bytes
 11429 ;; Hardware stack levels used:    1
 11430 ;; Hardware stack levels required when called:    1
 11431 ;; This function calls:
 11432 ;;		Nothing
 11433 ;; This function is called by:
 11434 ;;		_scanAdcConversion
 11435 ;;		_speedControl
 11436 ;;		_efgtoa
 11437 ;; This function uses a non-reentrant model
 11438 ;;
 11439                           
 11440                           	psect	text44
 11441  001F52                     __ptext44:
 11442                           	callstack 0
 11443  001F52                     ___flmul:
 11444                           	callstack 22
 11445  001F52  501F               	movf	(___flmul@b+3)^0,w,c
 11446  001F54  0B80               	andlw	128
 11447  001F56  6E28               	movwf	___flmul@sign^0,c
 11448  001F58  501F               	movf	(___flmul@b+3)^0,w,c
 11449  001F5A  241F               	addwf	(___flmul@b+3)^0,w,c
 11450  001F5C  6E2E               	movwf	___flmul@bexp^0,c
 11451  001F5E  AE1E               	btfss	(___flmul@b+2)^0,7,c
 11452  001F60  EFB4  F00F         	goto	u4821
 11453  001F64  EFB6  F00F         	goto	u4820
 11454  001F68                     u4821:
 11455  001F68  EFB7  F00F         	goto	l4632
 11456  001F6C                     u4820:
 11457  001F6C  802E               	bsf	___flmul@bexp^0,0,c
 11458  001F6E                     l4632:
 11459  001F6E  502E               	movf	___flmul@bexp^0,w,c
 11460  001F70  B4D8               	btfsc	status,2,c
 11461  001F72  EFBD  F00F         	goto	u4831
 11462  001F76  EFBF  F00F         	goto	u4830
 11463  001F7A                     u4831:
 11464  001F7A  EFD2  F00F         	goto	l4640
 11465  001F7E                     u4830:
 11466  001F7E  282E               	incf	___flmul@bexp^0,w,c
 11467  001F80  A4D8               	btfss	status,2,c
 11468  001F82  EFC5  F00F         	goto	u4841
 11469  001F86  EFC7  F00F         	goto	u4840
 11470  001F8A                     u4841:
 11471  001F8A  EFCF  F00F         	goto	l4638
 11472  001F8E                     u4840:
 11473  001F8E  0E00               	movlw	0
 11474  001F90  6E1C               	movwf	___flmul@b^0,c
 11475  001F92  0E00               	movlw	0
 11476  001F94  6E1D               	movwf	(___flmul@b+1)^0,c
 11477  001F96  0E00               	movlw	0
 11478  001F98  6E1E               	movwf	(___flmul@b+2)^0,c
 11479  001F9A  0E00               	movlw	0
 11480  001F9C  6E1F               	movwf	(___flmul@b+3)^0,c
 11481  001F9E                     l4638:
 11482  001F9E  8E1E               	bsf	(___flmul@b+2)^0,7,c
 11483  001FA0  EFDA  F00F         	goto	l4642
 11484  001FA4                     l4640:
 11485  001FA4  0E00               	movlw	0
 11486  001FA6  6E1C               	movwf	___flmul@b^0,c
 11487  001FA8  0E00               	movlw	0
 11488  001FAA  6E1D               	movwf	(___flmul@b+1)^0,c
 11489  001FAC  0E00               	movlw	0
 11490  001FAE  6E1E               	movwf	(___flmul@b+2)^0,c
 11491  001FB0  0E00               	movlw	0
 11492  001FB2  6E1F               	movwf	(___flmul@b+3)^0,c
 11493  001FB4                     l4642:
 11494  001FB4  5023               	movf	(___flmul@a+3)^0,w,c
 11495  001FB6  0B80               	andlw	128
 11496  001FB8  1A28               	xorwf	___flmul@sign^0,f,c
 11497  001FBA  5023               	movf	(___flmul@a+3)^0,w,c
 11498  001FBC  2423               	addwf	(___flmul@a+3)^0,w,c
 11499  001FBE  6E2D               	movwf	___flmul@aexp^0,c
 11500  001FC0  AE22               	btfss	(___flmul@a+2)^0,7,c
 11501  001FC2  EFE5  F00F         	goto	u4851
 11502  001FC6  EFE7  F00F         	goto	u4850
 11503  001FCA                     u4851:
 11504  001FCA  EFE8  F00F         	goto	l4650
 11505  001FCE                     u4850:
 11506  001FCE  802D               	bsf	___flmul@aexp^0,0,c
 11507  001FD0                     l4650:
 11508  001FD0  502D               	movf	___flmul@aexp^0,w,c
 11509  001FD2  B4D8               	btfsc	status,2,c
 11510  001FD4  EFEE  F00F         	goto	u4861
 11511  001FD8  EFF0  F00F         	goto	u4860
 11512  001FDC                     u4861:
 11513  001FDC  EF03  F010         	goto	l4658
 11514  001FE0                     u4860:
 11515  001FE0  282D               	incf	___flmul@aexp^0,w,c
 11516  001FE2  A4D8               	btfss	status,2,c
 11517  001FE4  EFF6  F00F         	goto	u4871
 11518  001FE8  EFF8  F00F         	goto	u4870
 11519  001FEC                     u4871:
 11520  001FEC  EF00  F010         	goto	l4656
 11521  001FF0                     u4870:
 11522  001FF0  0E00               	movlw	0
 11523  001FF2  6E20               	movwf	___flmul@a^0,c
 11524  001FF4  0E00               	movlw	0
 11525  001FF6  6E21               	movwf	(___flmul@a+1)^0,c
 11526  001FF8  0E00               	movlw	0
 11527  001FFA  6E22               	movwf	(___flmul@a+2)^0,c
 11528  001FFC  0E00               	movlw	0
 11529  001FFE  6E23               	movwf	(___flmul@a+3)^0,c
 11530  002000                     l4656:
 11531  002000  8E22               	bsf	(___flmul@a+2)^0,7,c
 11532  002002  EF0B  F010         	goto	l1305
 11533  002006                     l4658:
 11534  002006  0E00               	movlw	0
 11535  002008  6E20               	movwf	___flmul@a^0,c
 11536  00200A  0E00               	movlw	0
 11537  00200C  6E21               	movwf	(___flmul@a+1)^0,c
 11538  00200E  0E00               	movlw	0
 11539  002010  6E22               	movwf	(___flmul@a+2)^0,c
 11540  002012  0E00               	movlw	0
 11541  002014  6E23               	movwf	(___flmul@a+3)^0,c
 11542  002016                     l1305:
 11543  002016  502D               	movf	___flmul@aexp^0,w,c
 11544  002018  B4D8               	btfsc	status,2,c
 11545  00201A  EF11  F010         	goto	u4881
 11546  00201E  EF13  F010         	goto	u4880
 11547  002022                     u4881:
 11548  002022  EF1B  F010         	goto	l4662
 11549  002026                     u4880:
 11550  002026  502E               	movf	___flmul@bexp^0,w,c
 11551  002028  A4D8               	btfss	status,2,c
 11552  00202A  EF19  F010         	goto	u4891
 11553  00202E  EF1B  F010         	goto	u4890
 11554  002032                     u4891:
 11555  002032  EF25  F010         	goto	l4666
 11556  002036                     u4890:
 11557  002036                     l4662:
 11558  002036  0E00               	movlw	0
 11559  002038  6E1C               	movwf	?___flmul^0,c
 11560  00203A  0E00               	movlw	0
 11561  00203C  6E1D               	movwf	(?___flmul+1)^0,c
 11562  00203E  0E00               	movlw	0
 11563  002040  6E1E               	movwf	(?___flmul+2)^0,c
 11564  002042  0E00               	movlw	0
 11565  002044  6E1F               	movwf	(?___flmul+3)^0,c
 11566  002046  EFBD  F011         	goto	l1309
 11567  00204A                     l4666:
 11568  00204A  5022               	movf	(___flmul@a+2)^0,w,c
 11569  00204C  021C               	mulwf	___flmul@b^0,c
 11570  00204E  CFF3 F033          	movff	prodl,___flmul@temp
 11571  002052  CFF4 F034          	movff	prodh,___flmul@temp+1
 11572  002056  5033               	movf	___flmul@temp^0,w,c
 11573  002058  6E29               	movwf	___flmul@grs^0,c
 11574  00205A  6A2A               	clrf	(___flmul@grs+1)^0,c
 11575  00205C  6A2B               	clrf	(___flmul@grs+2)^0,c
 11576  00205E  6A2C               	clrf	(___flmul@grs+3)^0,c
 11577  002060  5034               	movf	(___flmul@temp+1)^0,w,c
 11578  002062  6E2F               	movwf	___flmul@prod^0,c
 11579  002064  6A30               	clrf	(___flmul@prod+1)^0,c
 11580  002066  6A31               	clrf	(___flmul@prod+2)^0,c
 11581  002068  6A32               	clrf	(___flmul@prod+3)^0,c
 11582  00206A  5021               	movf	(___flmul@a+1)^0,w,c
 11583  00206C  021D               	mulwf	(___flmul@b+1)^0,c
 11584  00206E  CFF3 F033          	movff	prodl,___flmul@temp
 11585  002072  CFF4 F034          	movff	prodh,___flmul@temp+1
 11586  002076  5033               	movf	___flmul@temp^0,w,c
 11587  002078  2629               	addwf	___flmul@grs^0,f,c
 11588  00207A  0E00               	movlw	0
 11589  00207C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11590  00207E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11591  002080  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11592  002082  5034               	movf	(___flmul@temp+1)^0,w,c
 11593  002084  262F               	addwf	___flmul@prod^0,f,c
 11594  002086  0E00               	movlw	0
 11595  002088  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11596  00208A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11597  00208C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11598  00208E  5020               	movf	___flmul@a^0,w,c
 11599  002090  021E               	mulwf	(___flmul@b+2)^0,c
 11600  002092  CFF3 F033          	movff	prodl,___flmul@temp
 11601  002096  CFF4 F034          	movff	prodh,___flmul@temp+1
 11602  00209A  5033               	movf	___flmul@temp^0,w,c
 11603  00209C  2629               	addwf	___flmul@grs^0,f,c
 11604  00209E  0E00               	movlw	0
 11605  0020A0  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11606  0020A2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11607  0020A4  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11608  0020A6  5034               	movf	(___flmul@temp+1)^0,w,c
 11609  0020A8  262F               	addwf	___flmul@prod^0,f,c
 11610  0020AA  0E00               	movlw	0
 11611  0020AC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11612  0020AE  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11613  0020B0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11614  0020B2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11615  0020B6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11616  0020BA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11617  0020BE  6A29               	clrf	___flmul@grs^0,c
 11618  0020C0  5020               	movf	___flmul@a^0,w,c
 11619  0020C2  021D               	mulwf	(___flmul@b+1)^0,c
 11620  0020C4  CFF3 F033          	movff	prodl,___flmul@temp
 11621  0020C8  CFF4 F034          	movff	prodh,___flmul@temp+1
 11622  0020CC  5033               	movf	___flmul@temp^0,w,c
 11623  0020CE  2629               	addwf	___flmul@grs^0,f,c
 11624  0020D0  5034               	movf	(___flmul@temp+1)^0,w,c
 11625  0020D2  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11626  0020D4  0E00               	movlw	0
 11627  0020D6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11628  0020D8  0E00               	movlw	0
 11629  0020DA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11630  0020DC  5021               	movf	(___flmul@a+1)^0,w,c
 11631  0020DE  021C               	mulwf	___flmul@b^0,c
 11632  0020E0  CFF3 F033          	movff	prodl,___flmul@temp
 11633  0020E4  CFF4 F034          	movff	prodh,___flmul@temp+1
 11634  0020E8  5033               	movf	___flmul@temp^0,w,c
 11635  0020EA  2629               	addwf	___flmul@grs^0,f,c
 11636  0020EC  5034               	movf	(___flmul@temp+1)^0,w,c
 11637  0020EE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11638  0020F0  0E00               	movlw	0
 11639  0020F2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11640  0020F4  0E00               	movlw	0
 11641  0020F6  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11642  0020F8  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11643  0020FC  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11644  002100  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11645  002104  6A29               	clrf	___flmul@grs^0,c
 11646  002106  5020               	movf	___flmul@a^0,w,c
 11647  002108  021C               	mulwf	___flmul@b^0,c
 11648  00210A  CFF3 F033          	movff	prodl,___flmul@temp
 11649  00210E  CFF4 F034          	movff	prodh,___flmul@temp+1
 11650  002112  5033               	movf	___flmul@temp^0,w,c
 11651  002114  2629               	addwf	___flmul@grs^0,f,c
 11652  002116  5034               	movf	(___flmul@temp+1)^0,w,c
 11653  002118  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11654  00211A  0E00               	movlw	0
 11655  00211C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11656  00211E  0E00               	movlw	0
 11657  002120  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11658  002122  5022               	movf	(___flmul@a+2)^0,w,c
 11659  002124  021D               	mulwf	(___flmul@b+1)^0,c
 11660  002126  CFF3 F033          	movff	prodl,___flmul@temp
 11661  00212A  CFF4 F034          	movff	prodh,___flmul@temp+1
 11662  00212E  5033               	movf	___flmul@temp^0,w,c
 11663  002130  262F               	addwf	___flmul@prod^0,f,c
 11664  002132  5034               	movf	(___flmul@temp+1)^0,w,c
 11665  002134  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11666  002136  0E00               	movlw	0
 11667  002138  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11668  00213A  0E00               	movlw	0
 11669  00213C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11670  00213E  5021               	movf	(___flmul@a+1)^0,w,c
 11671  002140  021E               	mulwf	(___flmul@b+2)^0,c
 11672  002142  CFF3 F033          	movff	prodl,___flmul@temp
 11673  002146  CFF4 F034          	movff	prodh,___flmul@temp+1
 11674  00214A  5033               	movf	___flmul@temp^0,w,c
 11675  00214C  262F               	addwf	___flmul@prod^0,f,c
 11676  00214E  5034               	movf	(___flmul@temp+1)^0,w,c
 11677  002150  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11678  002152  0E00               	movlw	0
 11679  002154  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11680  002156  0E00               	movlw	0
 11681  002158  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11682  00215A  5022               	movf	(___flmul@a+2)^0,w,c
 11683  00215C  021E               	mulwf	(___flmul@b+2)^0,c
 11684  00215E  CFF3 F033          	movff	prodl,___flmul@temp
 11685  002162  CFF4 F034          	movff	prodh,___flmul@temp+1
 11686  002166  5033               	movf	___flmul@temp^0,w,c
 11687  002168  6E24               	movwf	??___flmul^0,c
 11688  00216A  5034               	movf	(___flmul@temp+1)^0,w,c
 11689  00216C  6E25               	movwf	(??___flmul+1)^0,c
 11690  00216E  6A26               	clrf	(??___flmul+2)^0,c
 11691  002170  6A27               	clrf	(??___flmul+3)^0,c
 11692  002172  C026  F027         	movff	??___flmul+2,??___flmul+3
 11693  002176  C025  F026         	movff	??___flmul+1,??___flmul+2
 11694  00217A  C024  F025         	movff	??___flmul,??___flmul+1
 11695  00217E  6A24               	clrf	??___flmul^0,c
 11696  002180  5024               	movf	??___flmul^0,w,c
 11697  002182  262F               	addwf	___flmul@prod^0,f,c
 11698  002184  5025               	movf	(??___flmul+1)^0,w,c
 11699  002186  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11700  002188  5026               	movf	(??___flmul+2)^0,w,c
 11701  00218A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11702  00218C  5027               	movf	(??___flmul+3)^0,w,c
 11703  00218E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11704  002190  C029  F024         	movff	___flmul@grs,??___flmul
 11705  002194  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 11706  002198  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 11707  00219C  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 11708  0021A0  0E19               	movlw	25
 11709  0021A2  EFD8  F010         	goto	u4900
 11710  0021A6                     u4905:
 11711  0021A6  90D8               	bcf	status,0,c
 11712  0021A8  3227               	rrcf	(??___flmul+3)^0,f,c
 11713  0021AA  3226               	rrcf	(??___flmul+2)^0,f,c
 11714  0021AC  3225               	rrcf	(??___flmul+1)^0,f,c
 11715  0021AE  3224               	rrcf	??___flmul^0,f,c
 11716  0021B0                     u4900:
 11717  0021B0  2EE8               	decfsz	wreg,f,c
 11718  0021B2  EFD3  F010         	goto	u4905
 11719  0021B6  5024               	movf	??___flmul^0,w,c
 11720  0021B8  262F               	addwf	___flmul@prod^0,f,c
 11721  0021BA  5025               	movf	(??___flmul+1)^0,w,c
 11722  0021BC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11723  0021BE  5026               	movf	(??___flmul+2)^0,w,c
 11724  0021C0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11725  0021C2  5027               	movf	(??___flmul+3)^0,w,c
 11726  0021C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11727  0021C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11728  0021CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11729  0021CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11730  0021D2  6A29               	clrf	___flmul@grs^0,c
 11731  0021D4  502D               	movf	___flmul@aexp^0,w,c
 11732  0021D6  C02E  F024         	movff	___flmul@bexp,??___flmul
 11733  0021DA  6A25               	clrf	(??___flmul+1)^0,c
 11734  0021DC  2624               	addwf	??___flmul^0,f,c
 11735  0021DE  0E00               	movlw	0
 11736  0021E0  2225               	addwfc	(??___flmul+1)^0,f,c
 11737  0021E2  0E82               	movlw	130
 11738  0021E4  2424               	addwf	??___flmul^0,w,c
 11739  0021E6  6E33               	movwf	___flmul@temp^0,c
 11740  0021E8  0EFF               	movlw	255
 11741  0021EA  2025               	addwfc	(??___flmul+1)^0,w,c
 11742  0021EC  6E34               	movwf	(___flmul@temp+1)^0,c
 11743  0021EE  EF0E  F011         	goto	l4714
 11744  0021F2                     l4708:
 11745  0021F2  90D8               	bcf	status,0,c
 11746  0021F4  362F               	rlcf	___flmul@prod^0,f,c
 11747  0021F6  3630               	rlcf	(___flmul@prod+1)^0,f,c
 11748  0021F8  3631               	rlcf	(___flmul@prod+2)^0,f,c
 11749  0021FA  3632               	rlcf	(___flmul@prod+3)^0,f,c
 11750  0021FC  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11751  0021FE  EF03  F011         	goto	u4911
 11752  002202  EF05  F011         	goto	u4910
 11753  002206                     u4911:
 11754  002206  EF06  F011         	goto	l1312
 11755  00220A                     u4910:
 11756  00220A  802F               	bsf	___flmul@prod^0,0,c
 11757  00220C                     l1312:
 11758  00220C  90D8               	bcf	status,0,c
 11759  00220E  3629               	rlcf	___flmul@grs^0,f,c
 11760  002210  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11761  002212  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11762  002214  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11763  002216  0633               	decf	___flmul@temp^0,f,c
 11764  002218  A0D8               	btfss	status,0,c
 11765  00221A  0634               	decf	(___flmul@temp+1)^0,f,c
 11766  00221C                     l4714:
 11767  00221C  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11768  00221E  EF13  F011         	goto	u4921
 11769  002222  EF15  F011         	goto	u4920
 11770  002226                     u4921:
 11771  002226  EFF9  F010         	goto	l4708
 11772  00222A                     u4920:
 11773  00222A  0E00               	movlw	0
 11774  00222C  6E2D               	movwf	___flmul@aexp^0,c
 11775  00222E  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11776  002230  EF1C  F011         	goto	u4931
 11777  002234  EF1E  F011         	goto	u4930
 11778  002238                     u4931:
 11779  002238  EF42  F011         	goto	l1314
 11780  00223C                     u4930:
 11781  00223C  0EFF               	movlw	255
 11782  00223E  1429               	andwf	___flmul@grs^0,w,c
 11783  002240  6E24               	movwf	??___flmul^0,c
 11784  002242  0EFF               	movlw	255
 11785  002244  142A               	andwf	(___flmul@grs+1)^0,w,c
 11786  002246  6E25               	movwf	(??___flmul+1)^0,c
 11787  002248  0EFF               	movlw	255
 11788  00224A  142B               	andwf	(___flmul@grs+2)^0,w,c
 11789  00224C  6E26               	movwf	(??___flmul+2)^0,c
 11790  00224E  0E7F               	movlw	127
 11791  002250  142C               	andwf	(___flmul@grs+3)^0,w,c
 11792  002252  6E27               	movwf	(??___flmul+3)^0,c
 11793  002254  5024               	movf	??___flmul^0,w,c
 11794  002256  1025               	iorwf	(??___flmul+1)^0,w,c
 11795  002258  1026               	iorwf	(??___flmul+2)^0,w,c
 11796  00225A  1027               	iorwf	(??___flmul+3)^0,w,c
 11797  00225C  B4D8               	btfsc	status,2,c
 11798  00225E  EF33  F011         	goto	u4941
 11799  002262  EF35  F011         	goto	u4940
 11800  002266                     u4941:
 11801  002266  EF39  F011         	goto	l1315
 11802  00226A                     u4940:
 11803  00226A                     l4722:
 11804  00226A  0E01               	movlw	1
 11805  00226C  6E2D               	movwf	___flmul@aexp^0,c
 11806  00226E  EF42  F011         	goto	l1314
 11807  002272                     l1315:
 11808  002272  A02F               	btfss	___flmul@prod^0,0,c
 11809  002274  EF3E  F011         	goto	u4951
 11810  002278  EF40  F011         	goto	u4950
 11811  00227C                     u4951:
 11812  00227C  EF42  F011         	goto	l1314
 11813  002280                     u4950:
 11814  002280  EF35  F011         	goto	l4722
 11815  002284                     l1314:
 11816  002284  502D               	movf	___flmul@aexp^0,w,c
 11817  002286  B4D8               	btfsc	status,2,c
 11818  002288  EF48  F011         	goto	u4961
 11819  00228C  EF4A  F011         	goto	u4960
 11820  002290                     u4961:
 11821  002290  EF6E  F011         	goto	l4734
 11822  002294                     u4960:
 11823  002294  0E01               	movlw	1
 11824  002296  262F               	addwf	___flmul@prod^0,f,c
 11825  002298  0E00               	movlw	0
 11826  00229A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11827  00229C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11828  00229E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11829  0022A0  A032               	btfss	(___flmul@prod+3)^0,0,c
 11830  0022A2  EF55  F011         	goto	u4971
 11831  0022A6  EF57  F011         	goto	u4970
 11832  0022AA                     u4971:
 11833  0022AA  EF6E  F011         	goto	l4734
 11834  0022AE                     u4970:
 11835  0022AE  C02F  F024         	movff	___flmul@prod,??___flmul
 11836  0022B2  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11837  0022B6  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11838  0022BA  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11839  0022BE  3427               	rlcf	(??___flmul+3)^0,w,c
 11840  0022C0  3227               	rrcf	(??___flmul+3)^0,f,c
 11841  0022C2  3226               	rrcf	(??___flmul+2)^0,f,c
 11842  0022C4  3225               	rrcf	(??___flmul+1)^0,f,c
 11843  0022C6  3224               	rrcf	??___flmul^0,f,c
 11844  0022C8  C024  F02F         	movff	??___flmul,___flmul@prod
 11845  0022CC  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11846  0022D0  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11847  0022D4  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11848  0022D8  4A33               	infsnz	___flmul@temp^0,f,c
 11849  0022DA  2A34               	incf	(___flmul@temp+1)^0,f,c
 11850  0022DC                     l4734:
 11851  0022DC  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11852  0022DE  EF79  F011         	goto	u4981
 11853  0022E2  5034               	movf	(___flmul@temp+1)^0,w,c
 11854  0022E4  E108               	bnz	u4980
 11855  0022E6  2833               	incf	___flmul@temp^0,w,c
 11856  0022E8  A0D8               	btfss	status,0,c
 11857  0022EA  EF79  F011         	goto	u4981
 11858  0022EE  EF7B  F011         	goto	u4980
 11859  0022F2                     u4981:
 11860  0022F2  EF85  F011         	goto	l4738
 11861  0022F6                     u4980:
 11862  0022F6  0E00               	movlw	0
 11863  0022F8  6E2F               	movwf	___flmul@prod^0,c
 11864  0022FA  0E00               	movlw	0
 11865  0022FC  6E30               	movwf	(___flmul@prod+1)^0,c
 11866  0022FE  0E80               	movlw	128
 11867  002300  6E31               	movwf	(___flmul@prod+2)^0,c
 11868  002302  0E7F               	movlw	127
 11869  002304  6E32               	movwf	(___flmul@prod+3)^0,c
 11870  002306  EFB3  F011         	goto	l4750
 11871  00230A                     l4738:
 11872  00230A  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11873  00230C  EF92  F011         	goto	u4990
 11874  002310  5034               	movf	(___flmul@temp+1)^0,w,c
 11875  002312  E106               	bnz	u4991
 11876  002314  0433               	decf	___flmul@temp^0,w,c
 11877  002316  B0D8               	btfsc	status,0,c
 11878  002318  EF90  F011         	goto	u4991
 11879  00231C  EF92  F011         	goto	u4990
 11880  002320                     u4991:
 11881  002320  EF9E  F011         	goto	l1322
 11882  002324                     u4990:
 11883  002324  0E00               	movlw	0
 11884  002326  6E2F               	movwf	___flmul@prod^0,c
 11885  002328  0E00               	movlw	0
 11886  00232A  6E30               	movwf	(___flmul@prod+1)^0,c
 11887  00232C  0E00               	movlw	0
 11888  00232E  6E31               	movwf	(___flmul@prod+2)^0,c
 11889  002330  0E00               	movlw	0
 11890  002332  6E32               	movwf	(___flmul@prod+3)^0,c
 11891  002334  0E00               	movlw	0
 11892  002336  6E28               	movwf	___flmul@sign^0,c
 11893  002338  EFB3  F011         	goto	l4750
 11894  00233C                     l1322:
 11895  00233C  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11896  002340  0EFF               	movlw	255
 11897  002342  162F               	andwf	___flmul@prod^0,f,c
 11898  002344  0EFF               	movlw	255
 11899  002346  1630               	andwf	(___flmul@prod+1)^0,f,c
 11900  002348  0E7F               	movlw	127
 11901  00234A  1631               	andwf	(___flmul@prod+2)^0,f,c
 11902  00234C  0E00               	movlw	0
 11903  00234E  1632               	andwf	(___flmul@prod+3)^0,f,c
 11904  002350  A02E               	btfss	___flmul@bexp^0,0,c
 11905  002352  EFAD  F011         	goto	u5001
 11906  002356  EFAF  F011         	goto	u5000
 11907  00235A                     u5001:
 11908  00235A  EFB0  F011         	goto	l4748
 11909  00235E                     u5000:
 11910  00235E  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11911  002360                     l4748:
 11912  002360  90D8               	bcf	status,0,c
 11913  002362  302E               	rrcf	___flmul@bexp^0,w,c
 11914  002364  6E32               	movwf	(___flmul@prod+3)^0,c
 11915  002366                     l4750:
 11916  002366  5028               	movf	___flmul@sign^0,w,c
 11917  002368  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11918  00236A  C02F  F01C         	movff	___flmul@prod,?___flmul
 11919  00236E  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11920  002372  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11921  002376  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11922  00237A                     l1309:
 11923  00237A  0012               	return		;funcret
 11924  00237C                     __end_of___flmul:
 11925                           	callstack 0
 11926                           
 11927 ;; *************** function ___flge *****************
 11928 ;; Defined at:
 11929 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11930 ;; Parameters:    Size  Location     Type
 11931 ;;  ff1             4   52[COMRAM] unsigned char 
 11932 ;;  ff2             4   56[COMRAM] unsigned char 
 11933 ;; Auto vars:     Size  Location     Type
 11934 ;;		None
 11935 ;; Return value:  Size  Location     Type
 11936 ;;		None               void
 11937 ;; Registers used:
 11938 ;;		wreg, status,2, status,0
 11939 ;; Tracked objects:
 11940 ;;		On entry : 0/0
 11941 ;;		On exit  : 0/0
 11942 ;;		Unchanged: 0/0
 11943 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11944 ;;      Params:         8       0       0       0       0       0       0
 11945 ;;      Locals:         0       0       0       0       0       0       0
 11946 ;;      Temps:          4       0       0       0       0       0       0
 11947 ;;      Totals:        12       0       0       0       0       0       0
 11948 ;;Total ram usage:       12 bytes
 11949 ;; Hardware stack levels used:    1
 11950 ;; Hardware stack levels required when called:    1
 11951 ;; This function calls:
 11952 ;;		Nothing
 11953 ;; This function is called by:
 11954 ;;		_secretMenu
 11955 ;;		_efgtoa
 11956 ;; This function uses a non-reentrant model
 11957 ;;
 11958                           
 11959                           	psect	text45
 11960  0043C4                     __ptext45:
 11961                           	callstack 0
 11962  0043C4                     ___flge:
 11963                           	callstack 22
 11964  0043C4  0E00               	movlw	0
 11965  0043C6  1435               	andwf	___flge@ff1^0,w,c
 11966  0043C8  6E3D               	movwf	??___flge^0,c
 11967  0043CA  0E00               	movlw	0
 11968  0043CC  1436               	andwf	(___flge@ff1+1)^0,w,c
 11969  0043CE  6E3E               	movwf	(??___flge+1)^0,c
 11970  0043D0  0E80               	movlw	128
 11971  0043D2  1437               	andwf	(___flge@ff1+2)^0,w,c
 11972  0043D4  6E3F               	movwf	(??___flge+2)^0,c
 11973  0043D6  0E7F               	movlw	127
 11974  0043D8  1438               	andwf	(___flge@ff1+3)^0,w,c
 11975  0043DA  6E40               	movwf	(??___flge+3)^0,c
 11976  0043DC  503D               	movf	??___flge^0,w,c
 11977  0043DE  103E               	iorwf	(??___flge+1)^0,w,c
 11978  0043E0  103F               	iorwf	(??___flge+2)^0,w,c
 11979  0043E2  1040               	iorwf	(??___flge+3)^0,w,c
 11980  0043E4  A4D8               	btfss	status,2,c
 11981  0043E6  EFF7  F021         	goto	u5161
 11982  0043EA  EFF9  F021         	goto	u5160
 11983  0043EE                     u5161:
 11984  0043EE  EF01  F022         	goto	l4862
 11985  0043F2                     u5160:
 11986  0043F2  0E00               	movlw	0
 11987  0043F4  6E35               	movwf	___flge@ff1^0,c
 11988  0043F6  0E00               	movlw	0
 11989  0043F8  6E36               	movwf	(___flge@ff1+1)^0,c
 11990  0043FA  0E00               	movlw	0
 11991  0043FC  6E37               	movwf	(___flge@ff1+2)^0,c
 11992  0043FE  0E00               	movlw	0
 11993  004400  6E38               	movwf	(___flge@ff1+3)^0,c
 11994  004402                     l4862:
 11995  004402  0E00               	movlw	0
 11996  004404  1439               	andwf	___flge@ff2^0,w,c
 11997  004406  6E3D               	movwf	??___flge^0,c
 11998  004408  0E00               	movlw	0
 11999  00440A  143A               	andwf	(___flge@ff2+1)^0,w,c
 12000  00440C  6E3E               	movwf	(??___flge+1)^0,c
 12001  00440E  0E80               	movlw	128
 12002  004410  143B               	andwf	(___flge@ff2+2)^0,w,c
 12003  004412  6E3F               	movwf	(??___flge+2)^0,c
 12004  004414  0E7F               	movlw	127
 12005  004416  143C               	andwf	(___flge@ff2+3)^0,w,c
 12006  004418  6E40               	movwf	(??___flge+3)^0,c
 12007  00441A  503D               	movf	??___flge^0,w,c
 12008  00441C  103E               	iorwf	(??___flge+1)^0,w,c
 12009  00441E  103F               	iorwf	(??___flge+2)^0,w,c
 12010  004420  1040               	iorwf	(??___flge+3)^0,w,c
 12011  004422  A4D8               	btfss	status,2,c
 12012  004424  EF16  F022         	goto	u5171
 12013  004428  EF18  F022         	goto	u5170
 12014  00442C                     u5171:
 12015  00442C  EF20  F022         	goto	l4866
 12016  004430                     u5170:
 12017  004430  0E00               	movlw	0
 12018  004432  6E39               	movwf	___flge@ff2^0,c
 12019  004434  0E00               	movlw	0
 12020  004436  6E3A               	movwf	(___flge@ff2+1)^0,c
 12021  004438  0E00               	movlw	0
 12022  00443A  6E3B               	movwf	(___flge@ff2+2)^0,c
 12023  00443C  0E00               	movlw	0
 12024  00443E  6E3C               	movwf	(___flge@ff2+3)^0,c
 12025  004440                     l4866:
 12026  004440  AE38               	btfss	(___flge@ff1+3)^0,7,c
 12027  004442  EF25  F022         	goto	u5181
 12028  004446  EF27  F022         	goto	u5180
 12029  00444A                     u5181:
 12030  00444A  EF30  F022         	goto	l4870
 12031  00444E                     u5180:
 12032  00444E  6C35               	negf	___flge@ff1^0,c
 12033  004450  1E36               	comf	(___flge@ff1+1)^0,f,c
 12034  004452  B0D8               	btfsc	status,0,c
 12035  004454  2A36               	incf	(___flge@ff1+1)^0,f,c
 12036  004456  1E37               	comf	(___flge@ff1+2)^0,f,c
 12037  004458  B0D8               	btfsc	status,0,c
 12038  00445A  2A37               	incf	(___flge@ff1+2)^0,f,c
 12039  00445C  0E80               	movlw	128
 12040  00445E  5638               	subfwb	(___flge@ff1+3)^0,f,c
 12041  004460                     l4870:
 12042  004460  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 12043  004462  EF35  F022         	goto	u5191
 12044  004466  EF37  F022         	goto	u5190
 12045  00446A                     u5191:
 12046  00446A  EF40  F022         	goto	l956
 12047  00446E                     u5190:
 12048  00446E  6C39               	negf	___flge@ff2^0,c
 12049  004470  1E3A               	comf	(___flge@ff2+1)^0,f,c
 12050  004472  B0D8               	btfsc	status,0,c
 12051  004474  2A3A               	incf	(___flge@ff2+1)^0,f,c
 12052  004476  1E3B               	comf	(___flge@ff2+2)^0,f,c
 12053  004478  B0D8               	btfsc	status,0,c
 12054  00447A  2A3B               	incf	(___flge@ff2+2)^0,f,c
 12055  00447C  0E80               	movlw	128
 12056  00447E  563C               	subfwb	(___flge@ff2+3)^0,f,c
 12057  004480                     l956:
 12058  004480  0E00               	movlw	0
 12059  004482  1A35               	xorwf	___flge@ff1^0,f,c
 12060  004484  0E00               	movlw	0
 12061  004486  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 12062  004488  0E00               	movlw	0
 12063  00448A  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 12064  00448C  0E80               	movlw	128
 12065  00448E  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 12066  004490  0E00               	movlw	0
 12067  004492  1A39               	xorwf	___flge@ff2^0,f,c
 12068  004494  0E00               	movlw	0
 12069  004496  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 12070  004498  0E00               	movlw	0
 12071  00449A  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 12072  00449C  0E80               	movlw	128
 12073  00449E  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 12074  0044A0  5039               	movf	___flge@ff2^0,w,c
 12075  0044A2  5C35               	subwf	___flge@ff1^0,w,c
 12076  0044A4  503A               	movf	(___flge@ff2+1)^0,w,c
 12077  0044A6  5836               	subwfb	(___flge@ff1+1)^0,w,c
 12078  0044A8  503B               	movf	(___flge@ff2+2)^0,w,c
 12079  0044AA  5837               	subwfb	(___flge@ff1+2)^0,w,c
 12080  0044AC  503C               	movf	(___flge@ff2+3)^0,w,c
 12081  0044AE  5838               	subwfb	(___flge@ff1+3)^0,w,c
 12082  0044B0  B0D8               	btfsc	status,0,c
 12083  0044B2  EF5D  F022         	goto	u5201
 12084  0044B6  EF5F  F022         	goto	u5200
 12085  0044BA                     u5201:
 12086  0044BA  EF62  F022         	goto	l4876
 12087  0044BE                     u5200:
 12088  0044BE  90D8               	bcf	status,0,c
 12089  0044C0  EF63  F022         	goto	l961
 12090  0044C4                     l4876:
 12091  0044C4  80D8               	bsf	status,0,c
 12092  0044C6                     l961:
 12093  0044C6  0012               	return		;funcret
 12094  0044C8                     __end_of___flge:
 12095                           	callstack 0
 12096                           
 12097 ;; *************** function ___fleq *****************
 12098 ;; Defined at:
 12099 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 12100 ;; Parameters:    Size  Location     Type
 12101 ;;  ff1             4    0[COMRAM] unsigned char 
 12102 ;;  ff2             4    4[COMRAM] unsigned char 
 12103 ;; Auto vars:     Size  Location     Type
 12104 ;;		None
 12105 ;; Return value:  Size  Location     Type
 12106 ;;		None               void
 12107 ;; Registers used:
 12108 ;;		wreg, status,2, status,0
 12109 ;; Tracked objects:
 12110 ;;		On entry : 0/0
 12111 ;;		On exit  : 0/0
 12112 ;;		Unchanged: 0/0
 12113 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12114 ;;      Params:         8       0       0       0       0       0       0
 12115 ;;      Locals:         0       0       0       0       0       0       0
 12116 ;;      Temps:          4       0       0       0       0       0       0
 12117 ;;      Totals:        12       0       0       0       0       0       0
 12118 ;;Total ram usage:       12 bytes
 12119 ;; Hardware stack levels used:    1
 12120 ;; Hardware stack levels required when called:    1
 12121 ;; This function calls:
 12122 ;;		Nothing
 12123 ;; This function is called by:
 12124 ;;		_efgtoa
 12125 ;; This function uses a non-reentrant model
 12126 ;;
 12127                           
 12128                           	psect	text46
 12129  004BFA                     __ptext46:
 12130                           	callstack 0
 12131  004BFA                     ___fleq:
 12132                           	callstack 22
 12133  004BFA  0E00               	movlw	0
 12134  004BFC  1401               	andwf	___fleq@ff1^0,w,c
 12135  004BFE  6E09               	movwf	??___fleq^0,c
 12136  004C00  0E00               	movlw	0
 12137  004C02  1402               	andwf	(___fleq@ff1+1)^0,w,c
 12138  004C04  6E0A               	movwf	(??___fleq+1)^0,c
 12139  004C06  0E80               	movlw	128
 12140  004C08  1403               	andwf	(___fleq@ff1+2)^0,w,c
 12141  004C0A  6E0B               	movwf	(??___fleq+2)^0,c
 12142  004C0C  0E7F               	movlw	127
 12143  004C0E  1404               	andwf	(___fleq@ff1+3)^0,w,c
 12144  004C10  6E0C               	movwf	(??___fleq+3)^0,c
 12145  004C12  5009               	movf	??___fleq^0,w,c
 12146  004C14  100A               	iorwf	(??___fleq+1)^0,w,c
 12147  004C16  100B               	iorwf	(??___fleq+2)^0,w,c
 12148  004C18  100C               	iorwf	(??___fleq+3)^0,w,c
 12149  004C1A  A4D8               	btfss	status,2,c
 12150  004C1C  EF12  F026         	goto	u5131
 12151  004C20  EF14  F026         	goto	u5130
 12152  004C24                     u5131:
 12153  004C24  EF1C  F026         	goto	l4846
 12154  004C28                     u5130:
 12155  004C28  0E00               	movlw	0
 12156  004C2A  6E01               	movwf	___fleq@ff1^0,c
 12157  004C2C  0E00               	movlw	0
 12158  004C2E  6E02               	movwf	(___fleq@ff1+1)^0,c
 12159  004C30  0E00               	movlw	0
 12160  004C32  6E03               	movwf	(___fleq@ff1+2)^0,c
 12161  004C34  0E00               	movlw	0
 12162  004C36  6E04               	movwf	(___fleq@ff1+3)^0,c
 12163  004C38                     l4846:
 12164  004C38  0E00               	movlw	0
 12165  004C3A  1405               	andwf	___fleq@ff2^0,w,c
 12166  004C3C  6E09               	movwf	??___fleq^0,c
 12167  004C3E  0E00               	movlw	0
 12168  004C40  1406               	andwf	(___fleq@ff2+1)^0,w,c
 12169  004C42  6E0A               	movwf	(??___fleq+1)^0,c
 12170  004C44  0E80               	movlw	128
 12171  004C46  1407               	andwf	(___fleq@ff2+2)^0,w,c
 12172  004C48  6E0B               	movwf	(??___fleq+2)^0,c
 12173  004C4A  0E7F               	movlw	127
 12174  004C4C  1408               	andwf	(___fleq@ff2+3)^0,w,c
 12175  004C4E  6E0C               	movwf	(??___fleq+3)^0,c
 12176  004C50  5009               	movf	??___fleq^0,w,c
 12177  004C52  100A               	iorwf	(??___fleq+1)^0,w,c
 12178  004C54  100B               	iorwf	(??___fleq+2)^0,w,c
 12179  004C56  100C               	iorwf	(??___fleq+3)^0,w,c
 12180  004C58  A4D8               	btfss	status,2,c
 12181  004C5A  EF31  F026         	goto	u5141
 12182  004C5E  EF33  F026         	goto	u5140
 12183  004C62                     u5141:
 12184  004C62  EF3B  F026         	goto	l4850
 12185  004C66                     u5140:
 12186  004C66  0E00               	movlw	0
 12187  004C68  6E05               	movwf	___fleq@ff2^0,c
 12188  004C6A  0E00               	movlw	0
 12189  004C6C  6E06               	movwf	(___fleq@ff2+1)^0,c
 12190  004C6E  0E00               	movlw	0
 12191  004C70  6E07               	movwf	(___fleq@ff2+2)^0,c
 12192  004C72  0E00               	movlw	0
 12193  004C74  6E08               	movwf	(___fleq@ff2+3)^0,c
 12194  004C76                     l4850:
 12195  004C76  5005               	movf	___fleq@ff2^0,w,c
 12196  004C78  1801               	xorwf	___fleq@ff1^0,w,c
 12197  004C7A  E10F               	bnz	u5150
 12198  004C7C  5006               	movf	(___fleq@ff2+1)^0,w,c
 12199  004C7E  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 12200  004C80  E10C               	bnz	u5150
 12201  004C82  5007               	movf	(___fleq@ff2+2)^0,w,c
 12202  004C84  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 12203  004C86  E109               	bnz	u5150
 12204  004C88  5008               	movf	(___fleq@ff2+3)^0,w,c
 12205  004C8A  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 12206  004C8C  B4D8               	btfsc	status,2,c
 12207  004C8E  EF4B  F026         	goto	u5151
 12208  004C92  EF4D  F026         	goto	u5150
 12209  004C96                     u5151:
 12210  004C96  EF50  F026         	goto	l4854
 12211  004C9A                     u5150:
 12212  004C9A  90D8               	bcf	status,0,c
 12213  004C9C  EF51  F026         	goto	l950
 12214  004CA0                     l4854:
 12215  004CA0  80D8               	bsf	status,0,c
 12216  004CA2                     l950:
 12217  004CA2  0012               	return		;funcret
 12218  004CA4                     __end_of___fleq:
 12219                           	callstack 0
 12220                           
 12221 ;; *************** function ___fldiv *****************
 12222 ;; Defined at:
 12223 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 12224 ;; Parameters:    Size  Location     Type
 12225 ;;  b               4   52[COMRAM] unsigned char 
 12226 ;;  a               4   56[COMRAM] unsigned char 
 12227 ;; Auto vars:     Size  Location     Type
 12228 ;;  grs             4   71[COMRAM] unsigned long 
 12229 ;;  rem             4   64[COMRAM] unsigned long 
 12230 ;;  new_exp         2   69[COMRAM] short 
 12231 ;;  aexp            1   76[COMRAM] unsigned char 
 12232 ;;  bexp            1   75[COMRAM] unsigned char 
 12233 ;;  sign            1   68[COMRAM] unsigned char 
 12234 ;; Return value:  Size  Location     Type
 12235 ;;                  4   52[COMRAM] unsigned char 
 12236 ;; Registers used:
 12237 ;;		wreg, status,2, status,0
 12238 ;; Tracked objects:
 12239 ;;		On entry : 0/0
 12240 ;;		On exit  : 0/0
 12241 ;;		Unchanged: 0/0
 12242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12243 ;;      Params:         8       0       0       0       0       0       0
 12244 ;;      Locals:        13       0       0       0       0       0       0
 12245 ;;      Temps:          4       0       0       0       0       0       0
 12246 ;;      Totals:        25       0       0       0       0       0       0
 12247 ;;Total ram usage:       25 bytes
 12248 ;; Hardware stack levels used:    1
 12249 ;; Hardware stack levels required when called:    1
 12250 ;; This function calls:
 12251 ;;		Nothing
 12252 ;; This function is called by:
 12253 ;;		_scanAdcConversion
 12254 ;;		_efgtoa
 12255 ;; This function uses a non-reentrant model
 12256 ;;
 12257                           
 12258                           	psect	text47
 12259  00237C                     __ptext47:
 12260                           	callstack 0
 12261  00237C                     ___fldiv:
 12262                           	callstack 22
 12263  00237C  5038               	movf	(___fldiv@b+3)^0,w,c
 12264  00237E  0B80               	andlw	128
 12265  002380  6E45               	movwf	___fldiv@sign^0,c
 12266  002382  5038               	movf	(___fldiv@b+3)^0,w,c
 12267  002384  2438               	addwf	(___fldiv@b+3)^0,w,c
 12268  002386  6E4C               	movwf	___fldiv@bexp^0,c
 12269  002388  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12270  00238A  EFC9  F011         	goto	u4591
 12271  00238E  EFCB  F011         	goto	u4590
 12272  002392                     u4591:
 12273  002392  EFCC  F011         	goto	l4494
 12274  002396                     u4590:
 12275  002396  804C               	bsf	___fldiv@bexp^0,0,c
 12276  002398                     l4494:
 12277  002398  504C               	movf	___fldiv@bexp^0,w,c
 12278  00239A  B4D8               	btfsc	status,2,c
 12279  00239C  EFD2  F011         	goto	u4601
 12280  0023A0  EFD4  F011         	goto	u4600
 12281  0023A4                     u4601:
 12282  0023A4  EFE9  F011         	goto	l4504
 12283  0023A8                     u4600:
 12284  0023A8  284C               	incf	___fldiv@bexp^0,w,c
 12285  0023AA  A4D8               	btfss	status,2,c
 12286  0023AC  EFDA  F011         	goto	u4611
 12287  0023B0  EFDC  F011         	goto	u4610
 12288  0023B4                     u4611:
 12289  0023B4  EFE4  F011         	goto	l4500
 12290  0023B8                     u4610:
 12291  0023B8  0E00               	movlw	0
 12292  0023BA  6E35               	movwf	___fldiv@b^0,c
 12293  0023BC  0E00               	movlw	0
 12294  0023BE  6E36               	movwf	(___fldiv@b+1)^0,c
 12295  0023C0  0E00               	movlw	0
 12296  0023C2  6E37               	movwf	(___fldiv@b+2)^0,c
 12297  0023C4  0E00               	movlw	0
 12298  0023C6  6E38               	movwf	(___fldiv@b+3)^0,c
 12299  0023C8                     l4500:
 12300  0023C8  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12301  0023CA  0E00               	movlw	0
 12302  0023CC  6E38               	movwf	(___fldiv@b+3)^0,c
 12303  0023CE  EFF1  F011         	goto	l4506
 12304  0023D2                     l4504:
 12305  0023D2  0E00               	movlw	0
 12306  0023D4  6E35               	movwf	___fldiv@b^0,c
 12307  0023D6  0E00               	movlw	0
 12308  0023D8  6E36               	movwf	(___fldiv@b+1)^0,c
 12309  0023DA  0E00               	movlw	0
 12310  0023DC  6E37               	movwf	(___fldiv@b+2)^0,c
 12311  0023DE  0E00               	movlw	0
 12312  0023E0  6E38               	movwf	(___fldiv@b+3)^0,c
 12313  0023E2                     l4506:
 12314  0023E2  503C               	movf	(___fldiv@a+3)^0,w,c
 12315  0023E4  0B80               	andlw	128
 12316  0023E6  1A45               	xorwf	___fldiv@sign^0,f,c
 12317  0023E8  503C               	movf	(___fldiv@a+3)^0,w,c
 12318  0023EA  243C               	addwf	(___fldiv@a+3)^0,w,c
 12319  0023EC  6E4D               	movwf	___fldiv@aexp^0,c
 12320  0023EE  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 12321  0023F0  EFFC  F011         	goto	u4621
 12322  0023F4  EFFE  F011         	goto	u4620
 12323  0023F8                     u4621:
 12324  0023F8  EFFF  F011         	goto	l4514
 12325  0023FC                     u4620:
 12326  0023FC  804D               	bsf	___fldiv@aexp^0,0,c
 12327  0023FE                     l4514:
 12328  0023FE  504D               	movf	___fldiv@aexp^0,w,c
 12329  002400  B4D8               	btfsc	status,2,c
 12330  002402  EF05  F012         	goto	u4631
 12331  002406  EF07  F012         	goto	u4630
 12332  00240A                     u4631:
 12333  00240A  EF1C  F012         	goto	l4524
 12334  00240E                     u4630:
 12335  00240E  284D               	incf	___fldiv@aexp^0,w,c
 12336  002410  A4D8               	btfss	status,2,c
 12337  002412  EF0D  F012         	goto	u4641
 12338  002416  EF0F  F012         	goto	u4640
 12339  00241A                     u4641:
 12340  00241A  EF17  F012         	goto	l4520
 12341  00241E                     u4640:
 12342  00241E  0E00               	movlw	0
 12343  002420  6E39               	movwf	___fldiv@a^0,c
 12344  002422  0E00               	movlw	0
 12345  002424  6E3A               	movwf	(___fldiv@a+1)^0,c
 12346  002426  0E00               	movlw	0
 12347  002428  6E3B               	movwf	(___fldiv@a+2)^0,c
 12348  00242A  0E00               	movlw	0
 12349  00242C  6E3C               	movwf	(___fldiv@a+3)^0,c
 12350  00242E                     l4520:
 12351  00242E  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 12352  002430  0E00               	movlw	0
 12353  002432  6E3C               	movwf	(___fldiv@a+3)^0,c
 12354  002434  EF24  F012         	goto	l4526
 12355  002438                     l4524:
 12356  002438  0E00               	movlw	0
 12357  00243A  6E39               	movwf	___fldiv@a^0,c
 12358  00243C  0E00               	movlw	0
 12359  00243E  6E3A               	movwf	(___fldiv@a+1)^0,c
 12360  002440  0E00               	movlw	0
 12361  002442  6E3B               	movwf	(___fldiv@a+2)^0,c
 12362  002444  0E00               	movlw	0
 12363  002446  6E3C               	movwf	(___fldiv@a+3)^0,c
 12364  002448                     l4526:
 12365  002448  5039               	movf	___fldiv@a^0,w,c
 12366  00244A  103A               	iorwf	(___fldiv@a+1)^0,w,c
 12367  00244C  103B               	iorwf	(___fldiv@a+2)^0,w,c
 12368  00244E  103C               	iorwf	(___fldiv@a+3)^0,w,c
 12369  002450  A4D8               	btfss	status,2,c
 12370  002452  EF2D  F012         	goto	u4651
 12371  002456  EF2F  F012         	goto	u4650
 12372  00245A                     u4651:
 12373  00245A  EF47  F012         	goto	l4538
 12374  00245E                     u4650:
 12375  00245E  0E00               	movlw	0
 12376  002460  6E35               	movwf	___fldiv@b^0,c
 12377  002462  0E00               	movlw	0
 12378  002464  6E36               	movwf	(___fldiv@b+1)^0,c
 12379  002466  0E00               	movlw	0
 12380  002468  6E37               	movwf	(___fldiv@b+2)^0,c
 12381  00246A  0E00               	movlw	0
 12382  00246C  6E38               	movwf	(___fldiv@b+3)^0,c
 12383  00246E  0E80               	movlw	128
 12384  002470  1237               	iorwf	(___fldiv@b+2)^0,f,c
 12385  002472  0E7F               	movlw	127
 12386  002474  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12387  002476                     l4532:
 12388  002476  5045               	movf	___fldiv@sign^0,w,c
 12389  002478  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12390  00247A  C035  F035         	movff	___fldiv@b,?___fldiv
 12391  00247E  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 12392  002482  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 12393  002486  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 12394  00248A  EF8A  F013         	goto	l1273
 12395  00248E                     l4538:
 12396  00248E  504C               	movf	___fldiv@bexp^0,w,c
 12397  002490  A4D8               	btfss	status,2,c
 12398  002492  EF4D  F012         	goto	u4661
 12399  002496  EF4F  F012         	goto	u4660
 12400  00249A                     u4661:
 12401  00249A  EF59  F012         	goto	l4546
 12402  00249E                     u4660:
 12403  00249E  0E00               	movlw	0
 12404  0024A0  6E35               	movwf	?___fldiv^0,c
 12405  0024A2  0E00               	movlw	0
 12406  0024A4  6E36               	movwf	(?___fldiv+1)^0,c
 12407  0024A6  0E00               	movlw	0
 12408  0024A8  6E37               	movwf	(?___fldiv+2)^0,c
 12409  0024AA  0E00               	movlw	0
 12410  0024AC  6E38               	movwf	(?___fldiv+3)^0,c
 12411  0024AE  EF8A  F013         	goto	l1273
 12412  0024B2                     l4546:
 12413  0024B2  504D               	movf	___fldiv@aexp^0,w,c
 12414  0024B4  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 12415  0024B8  6A3E               	clrf	(??___fldiv+1)^0,c
 12416  0024BA  5E3D               	subwf	??___fldiv^0,f,c
 12417  0024BC  0E00               	movlw	0
 12418  0024BE  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 12419  0024C0  0E7F               	movlw	127
 12420  0024C2  243D               	addwf	??___fldiv^0,w,c
 12421  0024C4  6E46               	movwf	___fldiv@new_exp^0,c
 12422  0024C6  0E00               	movlw	0
 12423  0024C8  203E               	addwfc	(??___fldiv+1)^0,w,c
 12424  0024CA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12425  0024CC  C035  F041         	movff	___fldiv@b,___fldiv@rem
 12426  0024D0  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 12427  0024D4  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 12428  0024D8  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 12429  0024DC  0E00               	movlw	0
 12430  0024DE  6E35               	movwf	___fldiv@b^0,c
 12431  0024E0  0E00               	movlw	0
 12432  0024E2  6E36               	movwf	(___fldiv@b+1)^0,c
 12433  0024E4  0E00               	movlw	0
 12434  0024E6  6E37               	movwf	(___fldiv@b+2)^0,c
 12435  0024E8  0E00               	movlw	0
 12436  0024EA  6E38               	movwf	(___fldiv@b+3)^0,c
 12437  0024EC  0E00               	movlw	0
 12438  0024EE  6E48               	movwf	___fldiv@grs^0,c
 12439  0024F0  0E00               	movlw	0
 12440  0024F2  6E49               	movwf	(___fldiv@grs+1)^0,c
 12441  0024F4  0E00               	movlw	0
 12442  0024F6  6E4A               	movwf	(___fldiv@grs+2)^0,c
 12443  0024F8  0E00               	movlw	0
 12444  0024FA  6E4B               	movwf	(___fldiv@grs+3)^0,c
 12445  0024FC  0E00               	movlw	0
 12446  0024FE  6E4D               	movwf	___fldiv@aexp^0,c
 12447  002500  EFBA  F012         	goto	l1275
 12448  002504                     l4556:
 12449  002504  504D               	movf	___fldiv@aexp^0,w,c
 12450  002506  B4D8               	btfsc	status,2,c
 12451  002508  EF88  F012         	goto	u4671
 12452  00250C  EF8A  F012         	goto	u4670
 12453  002510                     u4671:
 12454  002510  EFA1  F012         	goto	l4564
 12455  002514                     u4670:
 12456  002514  90D8               	bcf	status,0,c
 12457  002516  3641               	rlcf	___fldiv@rem^0,f,c
 12458  002518  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 12459  00251A  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 12460  00251C  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 12461  00251E  90D8               	bcf	status,0,c
 12462  002520  3635               	rlcf	___fldiv@b^0,f,c
 12463  002522  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12464  002524  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12465  002526  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12466  002528  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12467  00252A  EF99  F012         	goto	u4681
 12468  00252E  EF9B  F012         	goto	u4680
 12469  002532                     u4681:
 12470  002532  EF9C  F012         	goto	l1278
 12471  002536                     u4680:
 12472  002536  8035               	bsf	___fldiv@b^0,0,c
 12473  002538                     l1278:
 12474  002538  90D8               	bcf	status,0,c
 12475  00253A  3648               	rlcf	___fldiv@grs^0,f,c
 12476  00253C  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12477  00253E  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12478  002540  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12479  002542                     l4564:
 12480  002542  5039               	movf	___fldiv@a^0,w,c
 12481  002544  5C41               	subwf	___fldiv@rem^0,w,c
 12482  002546  503A               	movf	(___fldiv@a+1)^0,w,c
 12483  002548  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 12484  00254A  503B               	movf	(___fldiv@a+2)^0,w,c
 12485  00254C  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 12486  00254E  503C               	movf	(___fldiv@a+3)^0,w,c
 12487  002550  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 12488  002552  A0D8               	btfss	status,0,c
 12489  002554  EFAE  F012         	goto	u4691
 12490  002558  EFB0  F012         	goto	u4690
 12491  00255C                     u4691:
 12492  00255C  EFB9  F012         	goto	l4570
 12493  002560                     u4690:
 12494  002560  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 12495  002562  5039               	movf	___fldiv@a^0,w,c
 12496  002564  5E41               	subwf	___fldiv@rem^0,f,c
 12497  002566  503A               	movf	(___fldiv@a+1)^0,w,c
 12498  002568  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 12499  00256A  503B               	movf	(___fldiv@a+2)^0,w,c
 12500  00256C  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 12501  00256E  503C               	movf	(___fldiv@a+3)^0,w,c
 12502  002570  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 12503  002572                     l4570:
 12504  002572  2A4D               	incf	___fldiv@aexp^0,f,c
 12505  002574                     l1275:
 12506  002574  0E19               	movlw	25
 12507  002576  644D               	cpfsgt	___fldiv@aexp^0,c
 12508  002578  EFC0  F012         	goto	u4701
 12509  00257C  EFC2  F012         	goto	u4700
 12510  002580                     u4701:
 12511  002580  EF82  F012         	goto	l4556
 12512  002584                     u4700:
 12513  002584  5041               	movf	___fldiv@rem^0,w,c
 12514  002586  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 12515  002588  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 12516  00258A  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 12517  00258C  B4D8               	btfsc	status,2,c
 12518  00258E  EFCB  F012         	goto	u4711
 12519  002592  EFCD  F012         	goto	u4710
 12520  002596                     u4711:
 12521  002596  EFE5  F012         	goto	l4582
 12522  00259A                     u4710:
 12523  00259A  8048               	bsf	___fldiv@grs^0,0,c
 12524  00259C  EFE5  F012         	goto	l4582
 12525  0025A0                     l4576:
 12526  0025A0  90D8               	bcf	status,0,c
 12527  0025A2  3635               	rlcf	___fldiv@b^0,f,c
 12528  0025A4  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12529  0025A6  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12530  0025A8  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12531  0025AA  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12532  0025AC  EFDA  F012         	goto	u4721
 12533  0025B0  EFDC  F012         	goto	u4720
 12534  0025B4                     u4721:
 12535  0025B4  EFDD  F012         	goto	l1284
 12536  0025B8                     u4720:
 12537  0025B8  8035               	bsf	___fldiv@b^0,0,c
 12538  0025BA                     l1284:
 12539  0025BA  90D8               	bcf	status,0,c
 12540  0025BC  3648               	rlcf	___fldiv@grs^0,f,c
 12541  0025BE  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12542  0025C0  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12543  0025C2  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12544  0025C4  0646               	decf	___fldiv@new_exp^0,f,c
 12545  0025C6  A0D8               	btfss	status,0,c
 12546  0025C8  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 12547  0025CA                     l4582:
 12548  0025CA  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12549  0025CC  EFEA  F012         	goto	u4731
 12550  0025D0  EFEC  F012         	goto	u4730
 12551  0025D4                     u4731:
 12552  0025D4  EFD0  F012         	goto	l4576
 12553  0025D8                     u4730:
 12554  0025D8  0E00               	movlw	0
 12555  0025DA  6E4D               	movwf	___fldiv@aexp^0,c
 12556  0025DC  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12557  0025DE  EFF3  F012         	goto	u4741
 12558  0025E2  EFF5  F012         	goto	u4740
 12559  0025E6                     u4741:
 12560  0025E6  EF19  F013         	goto	l1286
 12561  0025EA                     u4740:
 12562  0025EA  0EFF               	movlw	255
 12563  0025EC  1448               	andwf	___fldiv@grs^0,w,c
 12564  0025EE  6E3D               	movwf	??___fldiv^0,c
 12565  0025F0  0EFF               	movlw	255
 12566  0025F2  1449               	andwf	(___fldiv@grs+1)^0,w,c
 12567  0025F4  6E3E               	movwf	(??___fldiv+1)^0,c
 12568  0025F6  0EFF               	movlw	255
 12569  0025F8  144A               	andwf	(___fldiv@grs+2)^0,w,c
 12570  0025FA  6E3F               	movwf	(??___fldiv+2)^0,c
 12571  0025FC  0E7F               	movlw	127
 12572  0025FE  144B               	andwf	(___fldiv@grs+3)^0,w,c
 12573  002600  6E40               	movwf	(??___fldiv+3)^0,c
 12574  002602  503D               	movf	??___fldiv^0,w,c
 12575  002604  103E               	iorwf	(??___fldiv+1)^0,w,c
 12576  002606  103F               	iorwf	(??___fldiv+2)^0,w,c
 12577  002608  1040               	iorwf	(??___fldiv+3)^0,w,c
 12578  00260A  B4D8               	btfsc	status,2,c
 12579  00260C  EF0A  F013         	goto	u4751
 12580  002610  EF0C  F013         	goto	u4750
 12581  002614                     u4751:
 12582  002614  EF10  F013         	goto	l1287
 12583  002618                     u4750:
 12584  002618                     l4590:
 12585  002618  0E01               	movlw	1
 12586  00261A  6E4D               	movwf	___fldiv@aexp^0,c
 12587  00261C  EF19  F013         	goto	l1286
 12588  002620                     l1287:
 12589  002620  A035               	btfss	___fldiv@b^0,0,c
 12590  002622  EF15  F013         	goto	u4761
 12591  002626  EF17  F013         	goto	u4760
 12592  00262A                     u4761:
 12593  00262A  EF19  F013         	goto	l1286
 12594  00262E                     u4760:
 12595  00262E  EF0C  F013         	goto	l4590
 12596  002632                     l1286:
 12597  002632  504D               	movf	___fldiv@aexp^0,w,c
 12598  002634  B4D8               	btfsc	status,2,c
 12599  002636  EF1F  F013         	goto	u4771
 12600  00263A  EF21  F013         	goto	u4770
 12601  00263E                     u4771:
 12602  00263E  EF45  F013         	goto	l4602
 12603  002642                     u4770:
 12604  002642  0E01               	movlw	1
 12605  002644  2635               	addwf	___fldiv@b^0,f,c
 12606  002646  0E00               	movlw	0
 12607  002648  2236               	addwfc	(___fldiv@b+1)^0,f,c
 12608  00264A  2237               	addwfc	(___fldiv@b+2)^0,f,c
 12609  00264C  2238               	addwfc	(___fldiv@b+3)^0,f,c
 12610  00264E  A038               	btfss	(___fldiv@b+3)^0,0,c
 12611  002650  EF2C  F013         	goto	u4781
 12612  002654  EF2E  F013         	goto	u4780
 12613  002658                     u4781:
 12614  002658  EF45  F013         	goto	l4602
 12615  00265C                     u4780:
 12616  00265C  C035  F03D         	movff	___fldiv@b,??___fldiv
 12617  002660  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 12618  002664  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 12619  002668  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 12620  00266C  3440               	rlcf	(??___fldiv+3)^0,w,c
 12621  00266E  3240               	rrcf	(??___fldiv+3)^0,f,c
 12622  002670  323F               	rrcf	(??___fldiv+2)^0,f,c
 12623  002672  323E               	rrcf	(??___fldiv+1)^0,f,c
 12624  002674  323D               	rrcf	??___fldiv^0,f,c
 12625  002676  C03D  F035         	movff	??___fldiv,___fldiv@b
 12626  00267A  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 12627  00267E  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 12628  002682  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 12629  002686  4A46               	infsnz	___fldiv@new_exp^0,f,c
 12630  002688  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 12631  00268A                     l4602:
 12632  00268A  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12633  00268C  EF50  F013         	goto	u4791
 12634  002690  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12635  002692  E108               	bnz	u4790
 12636  002694  2846               	incf	___fldiv@new_exp^0,w,c
 12637  002696  A0D8               	btfss	status,0,c
 12638  002698  EF50  F013         	goto	u4791
 12639  00269C  EF52  F013         	goto	u4790
 12640  0026A0                     u4791:
 12641  0026A0  EF5D  F013         	goto	l4606
 12642  0026A4                     u4790:
 12643  0026A4  0E00               	movlw	0
 12644  0026A6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12645  0026A8  6846               	setf	___fldiv@new_exp^0,c
 12646  0026AA  0E00               	movlw	0
 12647  0026AC  6E35               	movwf	___fldiv@b^0,c
 12648  0026AE  0E00               	movlw	0
 12649  0026B0  6E36               	movwf	(___fldiv@b+1)^0,c
 12650  0026B2  0E00               	movlw	0
 12651  0026B4  6E37               	movwf	(___fldiv@b+2)^0,c
 12652  0026B6  0E00               	movlw	0
 12653  0026B8  6E38               	movwf	(___fldiv@b+3)^0,c
 12654  0026BA                     l4606:
 12655  0026BA  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12656  0026BC  EF6A  F013         	goto	u4800
 12657  0026C0  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12658  0026C2  E106               	bnz	u4801
 12659  0026C4  0446               	decf	___fldiv@new_exp^0,w,c
 12660  0026C6  B0D8               	btfsc	status,0,c
 12661  0026C8  EF68  F013         	goto	u4801
 12662  0026CC  EF6A  F013         	goto	u4800
 12663  0026D0                     u4801:
 12664  0026D0  EF78  F013         	goto	l4610
 12665  0026D4                     u4800:
 12666  0026D4  0E00               	movlw	0
 12667  0026D6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12668  0026D8  0E00               	movlw	0
 12669  0026DA  6E46               	movwf	___fldiv@new_exp^0,c
 12670  0026DC  0E00               	movlw	0
 12671  0026DE  6E35               	movwf	___fldiv@b^0,c
 12672  0026E0  0E00               	movlw	0
 12673  0026E2  6E36               	movwf	(___fldiv@b+1)^0,c
 12674  0026E4  0E00               	movlw	0
 12675  0026E6  6E37               	movwf	(___fldiv@b+2)^0,c
 12676  0026E8  0E00               	movlw	0
 12677  0026EA  6E38               	movwf	(___fldiv@b+3)^0,c
 12678  0026EC  0E00               	movlw	0
 12679  0026EE  6E45               	movwf	___fldiv@sign^0,c
 12680  0026F0                     l4610:
 12681  0026F0  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 12682  0026F4  A04C               	btfss	___fldiv@bexp^0,0,c
 12683  0026F6  EF7F  F013         	goto	u4811
 12684  0026FA  EF81  F013         	goto	u4810
 12685  0026FE                     u4811:
 12686  0026FE  EF84  F013         	goto	l4616
 12687  002702                     u4810:
 12688  002702  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12689  002704  EF85  F013         	goto	l4618
 12690  002708                     l4616:
 12691  002708  9E37               	bcf	(___fldiv@b+2)^0,7,c
 12692  00270A                     l4618:
 12693  00270A  90D8               	bcf	status,0,c
 12694  00270C  304C               	rrcf	___fldiv@bexp^0,w,c
 12695  00270E  6E38               	movwf	(___fldiv@b+3)^0,c
 12696  002710  EF3B  F012         	goto	l4532
 12697  002714                     l1273:
 12698  002714  0012               	return		;funcret
 12699  002716                     __end_of___fldiv:
 12700                           	callstack 0
 12701                           
 12702 ;; *************** function ___awmod *****************
 12703 ;; Defined at:
 12704 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 12705 ;; Parameters:    Size  Location     Type
 12706 ;;  dividend        2    0[COMRAM] int 
 12707 ;;  divisor         2    2[COMRAM] int 
 12708 ;; Auto vars:     Size  Location     Type
 12709 ;;  sign            1    5[COMRAM] unsigned char 
 12710 ;;  counter         1    4[COMRAM] unsigned char 
 12711 ;; Return value:  Size  Location     Type
 12712 ;;                  2    0[COMRAM] int 
 12713 ;; Registers used:
 12714 ;;		wreg, status,2, status,0
 12715 ;; Tracked objects:
 12716 ;;		On entry : 0/0
 12717 ;;		On exit  : 0/0
 12718 ;;		Unchanged: 0/0
 12719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12720 ;;      Params:         4       0       0       0       0       0       0
 12721 ;;      Locals:         2       0       0       0       0       0       0
 12722 ;;      Temps:          0       0       0       0       0       0       0
 12723 ;;      Totals:         6       0       0       0       0       0       0
 12724 ;;Total ram usage:        6 bytes
 12725 ;; Hardware stack levels used:    1
 12726 ;; Hardware stack levels required when called:    1
 12727 ;; This function calls:
 12728 ;;		Nothing
 12729 ;; This function is called by:
 12730 ;;		_efgtoa
 12731 ;; This function uses a non-reentrant model
 12732 ;;
 12733                           
 12734                           	psect	text48
 12735  004B4A                     __ptext48:
 12736                           	callstack 0
 12737  004B4A                     ___awmod:
 12738                           	callstack 22
 12739  004B4A  0E00               	movlw	0
 12740  004B4C  6E06               	movwf	___awmod@sign^0,c
 12741  004B4E  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12742  004B50  EFAE  F025         	goto	u5070
 12743  004B54  EFAC  F025         	goto	u5071
 12744  004B58                     u5071:
 12745  004B58  EFB4  F025         	goto	l4814
 12746  004B5C                     u5070:
 12747  004B5C  6C01               	negf	___awmod@dividend^0,c
 12748  004B5E  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12749  004B60  B0D8               	btfsc	status,0,c
 12750  004B62  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12751  004B64  0E01               	movlw	1
 12752  004B66  6E06               	movwf	___awmod@sign^0,c
 12753  004B68                     l4814:
 12754  004B68  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12755  004B6A  EFBB  F025         	goto	u5080
 12756  004B6E  EFB9  F025         	goto	u5081
 12757  004B72                     u5081:
 12758  004B72  EFBF  F025         	goto	l4818
 12759  004B76                     u5080:
 12760  004B76  6C03               	negf	___awmod@divisor^0,c
 12761  004B78  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12762  004B7A  B0D8               	btfsc	status,0,c
 12763  004B7C  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12764  004B7E                     l4818:
 12765  004B7E  5003               	movf	___awmod@divisor^0,w,c
 12766  004B80  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12767  004B82  B4D8               	btfsc	status,2,c
 12768  004B84  EFC6  F025         	goto	u5091
 12769  004B88  EFC8  F025         	goto	u5090
 12770  004B8C                     u5091:
 12771  004B8C  EFEC  F025         	goto	l4834
 12772  004B90                     u5090:
 12773  004B90  0E01               	movlw	1
 12774  004B92  6E05               	movwf	___awmod@counter^0,c
 12775  004B94  EFD0  F025         	goto	l4824
 12776  004B98                     l4822:
 12777  004B98  90D8               	bcf	status,0,c
 12778  004B9A  3603               	rlcf	___awmod@divisor^0,f,c
 12779  004B9C  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12780  004B9E  2A05               	incf	___awmod@counter^0,f,c
 12781  004BA0                     l4824:
 12782  004BA0  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12783  004BA2  EFD5  F025         	goto	u5101
 12784  004BA6  EFD7  F025         	goto	u5100
 12785  004BAA                     u5101:
 12786  004BAA  EFCC  F025         	goto	l4822
 12787  004BAE                     u5100:
 12788  004BAE                     l4826:
 12789  004BAE  5003               	movf	___awmod@divisor^0,w,c
 12790  004BB0  5C01               	subwf	___awmod@dividend^0,w,c
 12791  004BB2  5004               	movf	(___awmod@divisor+1)^0,w,c
 12792  004BB4  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12793  004BB6  A0D8               	btfss	status,0,c
 12794  004BB8  EFE0  F025         	goto	u5111
 12795  004BBC  EFE2  F025         	goto	u5110
 12796  004BC0                     u5111:
 12797  004BC0  EFE6  F025         	goto	l4830
 12798  004BC4                     u5110:
 12799  004BC4  5003               	movf	___awmod@divisor^0,w,c
 12800  004BC6  5E01               	subwf	___awmod@dividend^0,f,c
 12801  004BC8  5004               	movf	(___awmod@divisor+1)^0,w,c
 12802  004BCA  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12803  004BCC                     l4830:
 12804  004BCC  90D8               	bcf	status,0,c
 12805  004BCE  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12806  004BD0  3203               	rrcf	___awmod@divisor^0,f,c
 12807  004BD2  2E05               	decfsz	___awmod@counter^0,f,c
 12808  004BD4  EFD7  F025         	goto	l4826
 12809  004BD8                     l4834:
 12810  004BD8  5006               	movf	___awmod@sign^0,w,c
 12811  004BDA  B4D8               	btfsc	status,2,c
 12812  004BDC  EFF2  F025         	goto	u5121
 12813  004BE0  EFF4  F025         	goto	u5120
 12814  004BE4                     u5121:
 12815  004BE4  EFF8  F025         	goto	l4838
 12816  004BE8                     u5120:
 12817  004BE8  6C01               	negf	___awmod@dividend^0,c
 12818  004BEA  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12819  004BEC  B0D8               	btfsc	status,0,c
 12820  004BEE  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12821  004BF0                     l4838:
 12822  004BF0  C001  F001         	movff	___awmod@dividend,?___awmod
 12823  004BF4  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12824  004BF8  0012               	return		;funcret
 12825  004BFA                     __end_of___awmod:
 12826                           	callstack 0
 12827                           
 12828 ;; *************** function ___awdiv *****************
 12829 ;; Defined at:
 12830 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12831 ;; Parameters:    Size  Location     Type
 12832 ;;  dividend        2    0[COMRAM] int 
 12833 ;;  divisor         2    2[COMRAM] int 
 12834 ;; Auto vars:     Size  Location     Type
 12835 ;;  quotient        2    6[COMRAM] int 
 12836 ;;  sign            1    5[COMRAM] unsigned char 
 12837 ;;  counter         1    4[COMRAM] unsigned char 
 12838 ;; Return value:  Size  Location     Type
 12839 ;;                  2    0[COMRAM] int 
 12840 ;; Registers used:
 12841 ;;		wreg, status,2, status,0
 12842 ;; Tracked objects:
 12843 ;;		On entry : 0/0
 12844 ;;		On exit  : 0/0
 12845 ;;		Unchanged: 0/0
 12846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12847 ;;      Params:         4       0       0       0       0       0       0
 12848 ;;      Locals:         4       0       0       0       0       0       0
 12849 ;;      Temps:          0       0       0       0       0       0       0
 12850 ;;      Totals:         8       0       0       0       0       0       0
 12851 ;;Total ram usage:        8 bytes
 12852 ;; Hardware stack levels used:    1
 12853 ;; Hardware stack levels required when called:    1
 12854 ;; This function calls:
 12855 ;;		Nothing
 12856 ;; This function is called by:
 12857 ;;		_efgtoa
 12858 ;; This function uses a non-reentrant model
 12859 ;;
 12860                           
 12861                           	psect	text49
 12862  0049D4                     __ptext49:
 12863                           	callstack 0
 12864  0049D4                     ___awdiv:
 12865                           	callstack 22
 12866  0049D4  0E00               	movlw	0
 12867  0049D6  6E06               	movwf	___awdiv@sign^0,c
 12868  0049D8  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12869  0049DA  EFF3  F024         	goto	u5010
 12870  0049DE  EFF1  F024         	goto	u5011
 12871  0049E2                     u5011:
 12872  0049E2  EFF9  F024         	goto	l4770
 12873  0049E6                     u5010:
 12874  0049E6  6C03               	negf	___awdiv@divisor^0,c
 12875  0049E8  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12876  0049EA  B0D8               	btfsc	status,0,c
 12877  0049EC  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12878  0049EE  0E01               	movlw	1
 12879  0049F0  6E06               	movwf	___awdiv@sign^0,c
 12880  0049F2                     l4770:
 12881  0049F2  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12882  0049F4  EF00  F025         	goto	u5020
 12883  0049F8  EFFE  F024         	goto	u5021
 12884  0049FC                     u5021:
 12885  0049FC  EF06  F025         	goto	l4776
 12886  004A00                     u5020:
 12887  004A00  6C01               	negf	___awdiv@dividend^0,c
 12888  004A02  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12889  004A04  B0D8               	btfsc	status,0,c
 12890  004A06  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12891  004A08  0E01               	movlw	1
 12892  004A0A  1A06               	xorwf	___awdiv@sign^0,f,c
 12893  004A0C                     l4776:
 12894  004A0C  0E00               	movlw	0
 12895  004A0E  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12896  004A10  0E00               	movlw	0
 12897  004A12  6E07               	movwf	___awdiv@quotient^0,c
 12898  004A14  5003               	movf	___awdiv@divisor^0,w,c
 12899  004A16  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12900  004A18  B4D8               	btfsc	status,2,c
 12901  004A1A  EF11  F025         	goto	u5031
 12902  004A1E  EF13  F025         	goto	u5030
 12903  004A22                     u5031:
 12904  004A22  EF3B  F025         	goto	l4798
 12905  004A26                     u5030:
 12906  004A26  0E01               	movlw	1
 12907  004A28  6E05               	movwf	___awdiv@counter^0,c
 12908  004A2A  EF1B  F025         	goto	l4784
 12909  004A2E                     l4782:
 12910  004A2E  90D8               	bcf	status,0,c
 12911  004A30  3603               	rlcf	___awdiv@divisor^0,f,c
 12912  004A32  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12913  004A34  2A05               	incf	___awdiv@counter^0,f,c
 12914  004A36                     l4784:
 12915  004A36  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12916  004A38  EF20  F025         	goto	u5041
 12917  004A3C  EF22  F025         	goto	u5040
 12918  004A40                     u5041:
 12919  004A40  EF17  F025         	goto	l4782
 12920  004A44                     u5040:
 12921  004A44                     l4786:
 12922  004A44  90D8               	bcf	status,0,c
 12923  004A46  3607               	rlcf	___awdiv@quotient^0,f,c
 12924  004A48  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12925  004A4A  5003               	movf	___awdiv@divisor^0,w,c
 12926  004A4C  5C01               	subwf	___awdiv@dividend^0,w,c
 12927  004A4E  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12928  004A50  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12929  004A52  A0D8               	btfss	status,0,c
 12930  004A54  EF2E  F025         	goto	u5051
 12931  004A58  EF30  F025         	goto	u5050
 12932  004A5C                     u5051:
 12933  004A5C  EF35  F025         	goto	l4794
 12934  004A60                     u5050:
 12935  004A60  5003               	movf	___awdiv@divisor^0,w,c
 12936  004A62  5E01               	subwf	___awdiv@dividend^0,f,c
 12937  004A64  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12938  004A66  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12939  004A68  8007               	bsf	___awdiv@quotient^0,0,c
 12940  004A6A                     l4794:
 12941  004A6A  90D8               	bcf	status,0,c
 12942  004A6C  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12943  004A6E  3203               	rrcf	___awdiv@divisor^0,f,c
 12944  004A70  2E05               	decfsz	___awdiv@counter^0,f,c
 12945  004A72  EF22  F025         	goto	l4786
 12946  004A76                     l4798:
 12947  004A76  5006               	movf	___awdiv@sign^0,w,c
 12948  004A78  B4D8               	btfsc	status,2,c
 12949  004A7A  EF41  F025         	goto	u5061
 12950  004A7E  EF43  F025         	goto	u5060
 12951  004A82                     u5061:
 12952  004A82  EF47  F025         	goto	l4802
 12953  004A86                     u5060:
 12954  004A86  6C07               	negf	___awdiv@quotient^0,c
 12955  004A88  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12956  004A8A  B0D8               	btfsc	status,0,c
 12957  004A8C  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12958  004A8E                     l4802:
 12959  004A8E  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12960  004A92  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12961  004A96  0012               	return		;funcret
 12962  004A98                     __end_of___awdiv:
 12963                           	callstack 0
 12964                           
 12965 ;; *************** function _dtoa *****************
 12966 ;; Defined at:
 12967 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12968 ;; Parameters:    Size  Location     Type
 12969 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12970 ;;		 -> sprintf@f(6), 
 12971 ;;  d               8   29[COMRAM] long long 
 12972 ;; Auto vars:     Size  Location     Type
 12973 ;;  n               8   53[COMRAM] long long 
 12974 ;;  i               2   61[COMRAM] int 
 12975 ;;  s               2   51[COMRAM] int 
 12976 ;;  w               2   49[COMRAM] int 
 12977 ;;  p               2   47[COMRAM] int 
 12978 ;; Return value:  Size  Location     Type
 12979 ;;                  2   27[COMRAM] int 
 12980 ;; Registers used:
 12981 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12982 ;; Tracked objects:
 12983 ;;		On entry : 0/0
 12984 ;;		On exit  : 0/0
 12985 ;;		Unchanged: 0/0
 12986 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12987 ;;      Params:        10       0       0       0       0       0       0
 12988 ;;      Locals:        18       0       0       0       0       0       0
 12989 ;;      Temps:          8       0       0       0       0       0       0
 12990 ;;      Totals:        36       0       0       0       0       0       0
 12991 ;;Total ram usage:       36 bytes
 12992 ;; Hardware stack levels used:    1
 12993 ;; Hardware stack levels required when called:    5
 12994 ;; This function calls:
 12995 ;;		___aodiv
 12996 ;;		___aomod
 12997 ;;		_abs
 12998 ;;		_pad
 12999 ;; This function is called by:
 13000 ;;		_vfpfcnvrt
 13001 ;; This function uses a non-reentrant model
 13002 ;;
 13003                           
 13004                           	psect	text50
 13005  0029FC                     __ptext50:
 13006                           	callstack 0
 13007  0029FC                     _dtoa:
 13008                           	callstack 19
 13009  0029FC                     
 13010                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 13011  0029FC  C01E  F036         	movff	dtoa@d,dtoa@n
 13012  002A00  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 13013  002A04  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 13014  002A08  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 13015  002A0C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 13016  002A10  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 13017  002A14  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 13018  002A18  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 13019  002A1C                     
 13020                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 13021  002A1C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 13022  002A1E  EF13  F015         	goto	u5601
 13023  002A22  EF16  F015         	goto	u5600
 13024  002A26                     u5601:
 13025  002A26  0E01               	movlw	1
 13026  002A28  EF17  F015         	goto	u5610
 13027  002A2C                     u5600:
 13028  002A2C  0E00               	movlw	0
 13029  002A2E                     u5610:
 13030  002A2E  6E34               	movwf	dtoa@s^0,c
 13031  002A30  6A35               	clrf	(dtoa@s+1)^0,c
 13032                           
 13033                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 13034  002A32  5034               	movf	dtoa@s^0,w,c
 13035  002A34  1035               	iorwf	(dtoa@s+1)^0,w,c
 13036  002A36  B4D8               	btfsc	status,2,c
 13037  002A38  EF20  F015         	goto	u5621
 13038  002A3C  EF22  F015         	goto	u5620
 13039  002A40                     u5621:
 13040  002A40  EF32  F015         	goto	l5044
 13041  002A44                     u5620:
 13042  002A44                     
 13043                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 13044  002A44  1E3D               	comf	(dtoa@n+7)^0,f,c
 13045  002A46  1E3C               	comf	(dtoa@n+6)^0,f,c
 13046  002A48  1E3B               	comf	(dtoa@n+5)^0,f,c
 13047  002A4A  1E3A               	comf	(dtoa@n+4)^0,f,c
 13048  002A4C  1E39               	comf	(dtoa@n+3)^0,f,c
 13049  002A4E  1E38               	comf	(dtoa@n+2)^0,f,c
 13050  002A50  1E37               	comf	(dtoa@n+1)^0,f,c
 13051  002A52  6C36               	negf	dtoa@n^0,c
 13052  002A54  0E00               	movlw	0
 13053  002A56  2237               	addwfc	(dtoa@n+1)^0,f,c
 13054  002A58  2238               	addwfc	(dtoa@n+2)^0,f,c
 13055  002A5A  2239               	addwfc	(dtoa@n+3)^0,f,c
 13056  002A5C  223A               	addwfc	(dtoa@n+4)^0,f,c
 13057  002A5E  223B               	addwfc	(dtoa@n+5)^0,f,c
 13058  002A60  223C               	addwfc	(dtoa@n+6)^0,f,c
 13059  002A62  223D               	addwfc	(dtoa@n+7)^0,f,c
 13060  002A64                     l5044:
 13061                           
 13062                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 13063  002A64  0100               	movlb	0	; () banked
 13064  002A66  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 13065  002A68  EF38  F015         	goto	u5631
 13066  002A6C  EF3A  F015         	goto	u5630
 13067  002A70                     u5631:
 13068  002A70  EF3B  F015         	goto	l5048
 13069  002A74                     u5630:
 13070  002A74                     
 13071                           ; BSR set to: 0
 13072                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 13073  002A74  93F8               	bcf	_flags& (0+255),1,b
 13074  002A76                     l5048:
 13075                           
 13076                           ; BSR set to: 0
 13077                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 13078  002A76  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 13079  002A78  EF48  F015         	goto	u5640
 13080  002A7C  51F7               	movf	(_prec+1)& (0+255),w,b
 13081  002A7E  E106               	bnz	u5641
 13082  002A80  05F6               	decf	_prec& (0+255),w,b
 13083  002A82  B0D8               	btfsc	status,0,c
 13084  002A84  EF46  F015         	goto	u5641
 13085  002A88  EF48  F015         	goto	u5640
 13086  002A8C                     u5641:
 13087  002A8C  EF4E  F015         	goto	l1428
 13088  002A90                     u5640:
 13089  002A90                     
 13090                           ; BSR set to: 0
 13091  002A90  0E00               	movlw	0
 13092  002A92  6E31               	movwf	(dtoa@p+1)^0,c
 13093  002A94  0E01               	movlw	1
 13094  002A96  6E30               	movwf	dtoa@p^0,c
 13095  002A98  EF52  F015         	goto	l1430
 13096  002A9C                     l1428:
 13097                           
 13098                           ; BSR set to: 0
 13099  002A9C  C0F6  F030         	movff	_prec,dtoa@p
 13100  002AA0  C0F7  F031         	movff	_prec+1,dtoa@p+1
 13101  002AA4                     l1430:
 13102                           
 13103                           ; BSR set to: 0
 13104                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 13105  002AA4  C1B1  F032         	movff	_width,dtoa@w
 13106  002AA8  C1B2  F033         	movff	_width+1,dtoa@w+1
 13107  002AAC                     
 13108                           ; BSR set to: 0
 13109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 13110  002AAC  5034               	movf	dtoa@s^0,w,c
 13111  002AAE  1035               	iorwf	(dtoa@s+1)^0,w,c
 13112  002AB0  A4D8               	btfss	status,2,c
 13113  002AB2  EF5D  F015         	goto	u5651
 13114  002AB6  EF5F  F015         	goto	u5650
 13115  002ABA                     u5651:
 13116  002ABA  EF66  F015         	goto	l5056
 13117  002ABE                     u5650:
 13118  002ABE                     
 13119                           ; BSR set to: 0
 13120  002ABE  A5F8               	btfss	_flags& (0+255),2,b
 13121  002AC0  EF64  F015         	goto	u5661
 13122  002AC4  EF66  F015         	goto	u5660
 13123  002AC8                     u5661:
 13124  002AC8  EF69  F015         	goto	l5058
 13125  002ACC                     u5660:
 13126  002ACC                     l5056:
 13127                           
 13128                           ; BSR set to: 0
 13129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 13130  002ACC  0632               	decf	dtoa@w^0,f,c
 13131  002ACE  A0D8               	btfss	status,0,c
 13132  002AD0  0633               	decf	(dtoa@w+1)^0,f,c
 13133  002AD2                     l5058:
 13134                           
 13135                           ; BSR set to: 0
 13136                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 13137  002AD2  0E00               	movlw	0
 13138  002AD4  6E3F               	movwf	(dtoa@i+1)^0,c
 13139  002AD6  0E4F               	movlw	79
 13140  002AD8  6E3E               	movwf	dtoa@i^0,c
 13141  002ADA                     
 13142                           ; BSR set to: 0
 13143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 13144  002ADA  0E00               	movlw	0
 13145  002ADC  0102               	movlb	2	; () banked
 13146  002ADE  6FAF               	movwf	(_dbuf+79)& (0+255),b
 13147                           
 13148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13149  002AE0  EFEE  F015         	goto	l5072
 13150  002AE4                     l5062:
 13151                           
 13152                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 13153  002AE4  063E               	decf	dtoa@i^0,f,c
 13154  002AE6  A0D8               	btfss	status,0,c
 13155  002AE8  063F               	decf	(dtoa@i+1)^0,f,c
 13156  002AEA                     
 13157                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 13158  002AEA  0E60               	movlw	low _dbuf
 13159  002AEC  243E               	addwf	dtoa@i^0,w,c
 13160  002AEE  6ED9               	movwf	fsr2l,c
 13161  002AF0  0E02               	movlw	high _dbuf
 13162  002AF2  203F               	addwfc	(dtoa@i+1)^0,w,c
 13163  002AF4  6EDA               	movwf	fsr2h,c
 13164  002AF6  C036  F001         	movff	dtoa@n,___aomod@dividend
 13165  002AFA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 13166  002AFE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 13167  002B02  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 13168  002B06  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 13169  002B0A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 13170  002B0E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 13171  002B12  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 13172  002B16  0E0A               	movlw	10
 13173  002B18  6E09               	movwf	___aomod@divisor^0,c
 13174  002B1A  0E00               	movlw	0
 13175  002B1C  6E0A               	movwf	(___aomod@divisor+1)^0,c
 13176  002B1E  0E00               	movlw	0
 13177  002B20  6E0B               	movwf	(___aomod@divisor+2)^0,c
 13178  002B22  0E00               	movlw	0
 13179  002B24  6E0C               	movwf	(___aomod@divisor+3)^0,c
 13180  002B26  0E00               	movlw	0
 13181  002B28  6E0D               	movwf	(___aomod@divisor+4)^0,c
 13182  002B2A  0E00               	movlw	0
 13183  002B2C  6E0E               	movwf	(___aomod@divisor+5)^0,c
 13184  002B2E  0E00               	movlw	0
 13185  002B30  6E0F               	movwf	(___aomod@divisor+6)^0,c
 13186  002B32  0E00               	movlw	0
 13187  002B34  6E10               	movwf	(___aomod@divisor+7)^0,c
 13188  002B36  ECE0  F01D         	call	___aomod	;wreg free
 13189  002B3A  C001  F026         	movff	?___aomod,??_dtoa
 13190  002B3E  C002  F027         	movff	?___aomod+1,??_dtoa+1
 13191  002B42  C003  F028         	movff	?___aomod+2,??_dtoa+2
 13192  002B46  C004  F029         	movff	?___aomod+3,??_dtoa+3
 13193  002B4A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 13194  002B4E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 13195  002B52  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 13196  002B56  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 13197  002B5A  C026  F013         	movff	??_dtoa,abs@a
 13198  002B5E  C028  F014         	movff	??_dtoa+2,abs@a+1
 13199  002B62  EC32  F02A         	call	_abs	;wreg free
 13200  002B66  5013               	movf	?_abs^0,w,c
 13201  002B68  0F30               	addlw	48
 13202  002B6A  6EDF               	movwf	indf2,c
 13203  002B6C                     
 13204                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 13205  002B6C  0630               	decf	dtoa@p^0,f,c
 13206  002B6E  A0D8               	btfss	status,0,c
 13207  002B70  0631               	decf	(dtoa@p+1)^0,f,c
 13208  002B72                     
 13209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 13210  002B72  0632               	decf	dtoa@w^0,f,c
 13211  002B74  A0D8               	btfss	status,0,c
 13212  002B76  0633               	decf	(dtoa@w+1)^0,f,c
 13213  002B78                     
 13214                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 13215  002B78  C036  F001         	movff	dtoa@n,___aodiv@dividend
 13216  002B7C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 13217  002B80  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 13218  002B84  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 13219  002B88  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 13220  002B8C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 13221  002B90  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 13222  002B94  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 13223  002B98  0E0A               	movlw	10
 13224  002B9A  6E09               	movwf	___aodiv@divisor^0,c
 13225  002B9C  0E00               	movlw	0
 13226  002B9E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 13227  002BA0  0E00               	movlw	0
 13228  002BA2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 13229  002BA4  0E00               	movlw	0
 13230  002BA6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 13231  002BA8  0E00               	movlw	0
 13232  002BAA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 13233  002BAC  0E00               	movlw	0
 13234  002BAE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 13235  002BB0  0E00               	movlw	0
 13236  002BB2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 13237  002BB4  0E00               	movlw	0
 13238  002BB6  6E10               	movwf	(___aodiv@divisor+7)^0,c
 13239  002BB8  EC1C  F01D         	call	___aodiv	;wreg free
 13240  002BBC  C001  F036         	movff	?___aodiv,dtoa@n
 13241  002BC0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 13242  002BC4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 13243  002BC8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 13244  002BCC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 13245  002BD0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 13246  002BD4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 13247  002BD8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 13248  002BDC                     l5072:
 13249                           
 13250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13251  002BDC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 13252  002BDE  EFF9  F015         	goto	u5671
 13253  002BE2  503F               	movf	(dtoa@i+1)^0,w,c
 13254  002BE4  E108               	bnz	u5670
 13255  002BE6  043E               	decf	dtoa@i^0,w,c
 13256  002BE8  A0D8               	btfss	status,0,c
 13257  002BEA  EFF9  F015         	goto	u5671
 13258  002BEE  EFFB  F015         	goto	u5670
 13259  002BF2                     u5671:
 13260  002BF2  EF2C  F016         	goto	l5082
 13261  002BF6                     u5670:
 13262  002BF6  5036               	movf	dtoa@n^0,w,c
 13263  002BF8  1037               	iorwf	(dtoa@n+1)^0,w,c
 13264  002BFA  1038               	iorwf	(dtoa@n+2)^0,w,c
 13265  002BFC  1039               	iorwf	(dtoa@n+3)^0,w,c
 13266  002BFE  103A               	iorwf	(dtoa@n+4)^0,w,c
 13267  002C00  103B               	iorwf	(dtoa@n+5)^0,w,c
 13268  002C02  103C               	iorwf	(dtoa@n+6)^0,w,c
 13269  002C04  103D               	iorwf	(dtoa@n+7)^0,w,c
 13270  002C06  A4D8               	btfss	status,2,c
 13271  002C08  EF08  F016         	goto	u5681
 13272  002C0C  EF0A  F016         	goto	u5680
 13273  002C10                     u5681:
 13274  002C10  EF72  F015         	goto	l5062
 13275  002C14                     u5680:
 13276  002C14  BE31               	btfsc	(dtoa@p+1)^0,7,c
 13277  002C16  EF17  F016         	goto	u5690
 13278  002C1A  5031               	movf	(dtoa@p+1)^0,w,c
 13279  002C1C  E106               	bnz	u5691
 13280  002C1E  0430               	decf	dtoa@p^0,w,c
 13281  002C20  B0D8               	btfsc	status,0,c
 13282  002C22  EF15  F016         	goto	u5691
 13283  002C26  EF17  F016         	goto	u5690
 13284  002C2A                     u5691:
 13285  002C2A  EF72  F015         	goto	l5062
 13286  002C2E                     u5690:
 13287  002C2E  BE33               	btfsc	(dtoa@w+1)^0,7,c
 13288  002C30  EF22  F016         	goto	u5701
 13289  002C34  5033               	movf	(dtoa@w+1)^0,w,c
 13290  002C36  E108               	bnz	u5700
 13291  002C38  0432               	decf	dtoa@w^0,w,c
 13292  002C3A  A0D8               	btfss	status,0,c
 13293  002C3C  EF22  F016         	goto	u5701
 13294  002C40  EF24  F016         	goto	u5700
 13295  002C44                     u5701:
 13296  002C44  EF2C  F016         	goto	l5082
 13297  002C48                     u5700:
 13298  002C48  0100               	movlb	0	; () banked
 13299  002C4A  B3F8               	btfsc	_flags& (0+255),1,b
 13300  002C4C  EF2A  F016         	goto	u5711
 13301  002C50  EF2C  F016         	goto	u5710
 13302  002C54                     u5711:
 13303  002C54  EF72  F015         	goto	l5062
 13304  002C58                     u5710:
 13305  002C58                     l5082:
 13306                           
 13307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 13308  002C58  5034               	movf	dtoa@s^0,w,c
 13309  002C5A  1035               	iorwf	(dtoa@s+1)^0,w,c
 13310  002C5C  A4D8               	btfss	status,2,c
 13311  002C5E  EF33  F016         	goto	u5721
 13312  002C62  EF35  F016         	goto	u5720
 13313  002C66                     u5721:
 13314  002C66  EF3D  F016         	goto	l5086
 13315  002C6A                     u5720:
 13316  002C6A  0100               	movlb	0	; () banked
 13317  002C6C  A5F8               	btfss	_flags& (0+255),2,b
 13318  002C6E  EF3B  F016         	goto	u5731
 13319  002C72  EF3D  F016         	goto	u5730
 13320  002C76                     u5731:
 13321  002C76  EF5B  F016         	goto	l5096
 13322  002C7A                     u5730:
 13323  002C7A                     l5086:
 13324                           
 13325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 13326  002C7A  063E               	decf	dtoa@i^0,f,c
 13327  002C7C  A0D8               	btfss	status,0,c
 13328  002C7E  063F               	decf	(dtoa@i+1)^0,f,c
 13329  002C80                     
 13330                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 13331  002C80  5034               	movf	dtoa@s^0,w,c
 13332  002C82  1035               	iorwf	(dtoa@s+1)^0,w,c
 13333  002C84  A4D8               	btfss	status,2,c
 13334  002C86  EF47  F016         	goto	u5741
 13335  002C8A  EF49  F016         	goto	u5740
 13336  002C8E                     u5741:
 13337  002C8E  EF4F  F016         	goto	l5092
 13338  002C92                     u5740:
 13339  002C92  0E00               	movlw	0
 13340  002C94  6E2F               	movwf	(_dtoa$2955+1)^0,c
 13341  002C96  0E2B               	movlw	43
 13342  002C98  6E2E               	movwf	_dtoa$2955^0,c
 13343  002C9A  EF53  F016         	goto	l5094
 13344  002C9E                     l5092:
 13345  002C9E  0E00               	movlw	0
 13346  002CA0  6E2F               	movwf	(_dtoa$2955+1)^0,c
 13347  002CA2  0E2D               	movlw	45
 13348  002CA4  6E2E               	movwf	_dtoa$2955^0,c
 13349  002CA6                     l5094:
 13350  002CA6  0E60               	movlw	low _dbuf
 13351  002CA8  243E               	addwf	dtoa@i^0,w,c
 13352  002CAA  6ED9               	movwf	fsr2l,c
 13353  002CAC  0E02               	movlw	high _dbuf
 13354  002CAE  203F               	addwfc	(dtoa@i+1)^0,w,c
 13355  002CB0  6EDA               	movwf	fsr2h,c
 13356  002CB2  C02E  FFDF         	movff	_dtoa$2955,indf2
 13357  002CB6                     l5096:
 13358                           
 13359                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 13360  002CB6  C01C  F011         	movff	dtoa@fp,pad@fp
 13361  002CBA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13362  002CBE  0E60               	movlw	low _dbuf
 13363  002CC0  243E               	addwf	dtoa@i^0,w,c
 13364  002CC2  6E13               	movwf	pad@buf^0,c
 13365  002CC4  0E02               	movlw	high _dbuf
 13366  002CC6  203F               	addwfc	(dtoa@i+1)^0,w,c
 13367  002CC8  6E14               	movwf	(pad@buf+1)^0,c
 13368  002CCA  C032  F015         	movff	dtoa@w,pad@p
 13369  002CCE  C033  F016         	movff	dtoa@w+1,pad@p+1
 13370  002CD2  EC87  F024         	call	_pad	;wreg free
 13371  002CD6  C011  F01C         	movff	?_pad,?_dtoa
 13372  002CDA  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13373  002CDE  0012               	return		;funcret
 13374  002CE0                     __end_of_dtoa:
 13375                           	callstack 0
 13376                           
 13377 ;; *************** function _pad *****************
 13378 ;; Defined at:
 13379 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 13380 ;; Parameters:    Size  Location     Type
 13381 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13382 ;;		 -> sprintf@f(6), 
 13383 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13384 ;;		 -> dbuf(80), 
 13385 ;;  p               2   20[COMRAM] int 
 13386 ;; Auto vars:     Size  Location     Type
 13387 ;;  w               2   25[COMRAM] int 
 13388 ;;  i               2   23[COMRAM] int 
 13389 ;; Return value:  Size  Location     Type
 13390 ;;                  2   16[COMRAM] int 
 13391 ;; Registers used:
 13392 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13393 ;; Tracked objects:
 13394 ;;		On entry : 0/0
 13395 ;;		On exit  : 0/0
 13396 ;;		Unchanged: 0/0
 13397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13398 ;;      Params:         6       0       0       0       0       0       0
 13399 ;;      Locals:         4       0       0       0       0       0       0
 13400 ;;      Temps:          1       0       0       0       0       0       0
 13401 ;;      Totals:        11       0       0       0       0       0       0
 13402 ;;Total ram usage:       11 bytes
 13403 ;; Hardware stack levels used:    1
 13404 ;; Hardware stack levels required when called:    4
 13405 ;; This function calls:
 13406 ;;		_fputc
 13407 ;;		_fputs
 13408 ;;		_strlen
 13409 ;; This function is called by:
 13410 ;;		_dtoa
 13411 ;;		_efgtoa
 13412 ;; This function uses a non-reentrant model
 13413 ;;
 13414                           
 13415                           	psect	text51
 13416  00490E                     __ptext51:
 13417                           	callstack 0
 13418  00490E                     _pad:
 13419                           	callstack 19
 13420  00490E                     
 13421                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13422  00490E  0100               	movlb	0	; () banked
 13423  004910  A1F8               	btfss	_flags& (0+255),0,b
 13424  004912  EF8D  F024         	goto	u5291
 13425  004916  EF8F  F024         	goto	u5290
 13426  00491A                     u5291:
 13427  00491A  EF99  F024         	goto	l4936
 13428  00491E                     u5290:
 13429  00491E                     
 13430                           ; BSR set to: 0
 13431                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13432  00491E  C013  F00A         	movff	pad@buf,fputs@s
 13433  004922  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13434  004926  C011  F00C         	movff	pad@fp,fputs@fp
 13435  00492A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13436  00492E  ECCF  F029         	call	_fputs	;wreg free
 13437  004932                     l4936:
 13438                           
 13439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13440  004932  BE16               	btfsc	(pad@p+1)^0,7,c
 13441  004934  EF9E  F024         	goto	u5301
 13442  004938  EFA0  F024         	goto	u5300
 13443  00493C                     u5301:
 13444  00493C  EFA6  F024         	goto	l4940
 13445  004940                     u5300:
 13446  004940  C015  F01A         	movff	pad@p,pad@w
 13447  004944  C016  F01B         	movff	pad@p+1,pad@w+1
 13448  004948  EFAA  F024         	goto	l1417
 13449  00494C                     l4940:
 13450  00494C  0E00               	movlw	0
 13451  00494E  6E1B               	movwf	(pad@w+1)^0,c
 13452  004950  0E00               	movlw	0
 13453  004952  6E1A               	movwf	pad@w^0,c
 13454  004954                     l1417:
 13455                           
 13456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13457  004954  0E00               	movlw	0
 13458  004956  6E19               	movwf	(pad@i+1)^0,c
 13459  004958  0E00               	movlw	0
 13460  00495A  6E18               	movwf	pad@i^0,c
 13461                           
 13462                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13463  00495C  EFBC  F024         	goto	l4946
 13464  004960                     l4942:
 13465                           
 13466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13467  004960  0E00               	movlw	0
 13468  004962  6E02               	movwf	(fputc@c+1)^0,c
 13469  004964  0E20               	movlw	32
 13470  004966  6E01               	movwf	fputc@c^0,c
 13471  004968  C011  F003         	movff	pad@fp,fputc@fp
 13472  00496C  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13473  004970  EC22  F024         	call	_fputc	;wreg free
 13474  004974                     
 13475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13476  004974  4A18               	infsnz	pad@i^0,f,c
 13477  004976  2A19               	incf	(pad@i+1)^0,f,c
 13478  004978                     l4946:
 13479                           
 13480                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13481  004978  501A               	movf	pad@w^0,w,c
 13482  00497A  5C18               	subwf	pad@i^0,w,c
 13483  00497C  5019               	movf	(pad@i+1)^0,w,c
 13484  00497E  0A80               	xorlw	128
 13485  004980  6E17               	movwf	??_pad^0,c
 13486  004982  501B               	movf	(pad@w+1)^0,w,c
 13487  004984  0A80               	xorlw	128
 13488  004986  5817               	subwfb	??_pad^0,w,c
 13489  004988  A0D8               	btfss	status,0,c
 13490  00498A  EFC9  F024         	goto	u5311
 13491  00498E  EFCB  F024         	goto	u5310
 13492  004992                     u5311:
 13493  004992  EFB0  F024         	goto	l4942
 13494  004996                     u5310:
 13495  004996                     
 13496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13497  004996  0100               	movlb	0	; () banked
 13498  004998  B1F8               	btfsc	_flags& (0+255),0,b
 13499  00499A  EFD1  F024         	goto	u5321
 13500  00499E  EFD3  F024         	goto	u5320
 13501  0049A2                     u5321:
 13502  0049A2  EFDD  F024         	goto	l4950
 13503  0049A6                     u5320:
 13504  0049A6                     
 13505                           ; BSR set to: 0
 13506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13507  0049A6  C013  F00A         	movff	pad@buf,fputs@s
 13508  0049AA  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13509  0049AE  C011  F00C         	movff	pad@fp,fputs@fp
 13510  0049B2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13511  0049B6  ECCF  F029         	call	_fputs	;wreg free
 13512  0049BA                     l4950:
 13513                           
 13514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 13515  0049BA  C013  F001         	movff	pad@buf,strlen@s
 13516  0049BE  C014  F002         	movff	pad@buf+1,strlen@s+1
 13517  0049C2  EC1A  F02B         	call	_strlen	;wreg free
 13518  0049C6  501A               	movf	pad@w^0,w,c
 13519  0049C8  2401               	addwf	?_strlen^0,w,c
 13520  0049CA  6E11               	movwf	?_pad^0,c
 13521  0049CC  501B               	movf	(pad@w+1)^0,w,c
 13522  0049CE  2002               	addwfc	(?_strlen+1)^0,w,c
 13523  0049D0  6E12               	movwf	(?_pad+1)^0,c
 13524  0049D2  0012               	return		;funcret
 13525  0049D4                     __end_of_pad:
 13526                           	callstack 0
 13527                           
 13528 ;; *************** function _strlen *****************
 13529 ;; Defined at:
 13530 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 13531 ;; Parameters:    Size  Location     Type
 13532 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13533 ;;		 -> dbuf(80), 
 13534 ;; Auto vars:     Size  Location     Type
 13535 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13536 ;;		 -> dbuf(80), 
 13537 ;; Return value:  Size  Location     Type
 13538 ;;                  2    0[COMRAM] unsigned int 
 13539 ;; Registers used:
 13540 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13541 ;; Tracked objects:
 13542 ;;		On entry : 0/0
 13543 ;;		On exit  : 0/0
 13544 ;;		Unchanged: 0/0
 13545 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13546 ;;      Params:         2       0       0       0       0       0       0
 13547 ;;      Locals:         2       0       0       0       0       0       0
 13548 ;;      Temps:          0       0       0       0       0       0       0
 13549 ;;      Totals:         4       0       0       0       0       0       0
 13550 ;;Total ram usage:        4 bytes
 13551 ;; Hardware stack levels used:    1
 13552 ;; Hardware stack levels required when called:    1
 13553 ;; This function calls:
 13554 ;;		Nothing
 13555 ;; This function is called by:
 13556 ;;		_pad
 13557 ;; This function uses a non-reentrant model
 13558 ;;
 13559                           
 13560                           	psect	text52
 13561  005634                     __ptext52:
 13562                           	callstack 0
 13563  005634                     _strlen:
 13564                           	callstack 21
 13565  005634  C001  F003         	movff	strlen@s,strlen@a
 13566  005638  C002  F004         	movff	strlen@s+1,strlen@a+1
 13567  00563C  EF22  F02B         	goto	l4392
 13568  005640                     l4390:
 13569  005640  4A01               	infsnz	strlen@s^0,f,c
 13570  005642  2A02               	incf	(strlen@s+1)^0,f,c
 13571  005644                     l4392:
 13572  005644  C001  FFD9         	movff	strlen@s,fsr2l
 13573  005648  C002  FFDA         	movff	strlen@s+1,fsr2h
 13574  00564C  50DF               	movf	indf2,w,c
 13575  00564E  A4D8               	btfss	status,2,c
 13576  005650  EF2C  F02B         	goto	u4431
 13577  005654  EF2E  F02B         	goto	u4430
 13578  005658                     u4431:
 13579  005658  EF20  F02B         	goto	l4390
 13580  00565C                     u4430:
 13581  00565C  5003               	movf	strlen@a^0,w,c
 13582  00565E  5C01               	subwf	strlen@s^0,w,c
 13583  005660  6E01               	movwf	?_strlen^0,c
 13584  005662  5004               	movf	(strlen@a+1)^0,w,c
 13585  005664  5802               	subwfb	(strlen@s+1)^0,w,c
 13586  005666  6E02               	movwf	(?_strlen+1)^0,c
 13587  005668  0012               	return		;funcret
 13588  00566A                     __end_of_strlen:
 13589                           	callstack 0
 13590                           
 13591 ;; *************** function _fputs *****************
 13592 ;; Defined at:
 13593 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 13594 ;; Parameters:    Size  Location     Type
 13595 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13596 ;;		 -> dbuf(80), 
 13597 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13598 ;;		 -> sprintf@f(6), 
 13599 ;; Auto vars:     Size  Location     Type
 13600 ;;  i               2   14[COMRAM] int 
 13601 ;;  c               1   13[COMRAM] unsigned char 
 13602 ;; Return value:  Size  Location     Type
 13603 ;;                  2    9[COMRAM] int 
 13604 ;; Registers used:
 13605 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13606 ;; Tracked objects:
 13607 ;;		On entry : 0/0
 13608 ;;		On exit  : 0/0
 13609 ;;		Unchanged: 0/0
 13610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13611 ;;      Params:         4       0       0       0       0       0       0
 13612 ;;      Locals:         3       0       0       0       0       0       0
 13613 ;;      Temps:          0       0       0       0       0       0       0
 13614 ;;      Totals:         7       0       0       0       0       0       0
 13615 ;;Total ram usage:        7 bytes
 13616 ;; Hardware stack levels used:    1
 13617 ;; Hardware stack levels required when called:    3
 13618 ;; This function calls:
 13619 ;;		_fputc
 13620 ;; This function is called by:
 13621 ;;		_pad
 13622 ;; This function uses a non-reentrant model
 13623 ;;
 13624                           
 13625                           	psect	text53
 13626  00539E                     __ptext53:
 13627                           	callstack 0
 13628  00539E                     _fputs:
 13629                           	callstack 19
 13630  00539E  0E00               	movlw	0
 13631  0053A0  6E10               	movwf	(fputs@i+1)^0,c
 13632  0053A2  0E00               	movlw	0
 13633  0053A4  6E0F               	movwf	fputs@i^0,c
 13634  0053A6  EFE0  F029         	goto	l4386
 13635  0053AA                     l4382:
 13636  0053AA  C00E  F001         	movff	fputs@c,fputc@c
 13637  0053AE  6A02               	clrf	(fputc@c+1)^0,c
 13638  0053B0  C00C  F003         	movff	fputs@fp,fputc@fp
 13639  0053B4  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13640  0053B8  EC22  F024         	call	_fputc	;wreg free
 13641  0053BC  4A0F               	infsnz	fputs@i^0,f,c
 13642  0053BE  2A10               	incf	(fputs@i+1)^0,f,c
 13643  0053C0                     l4386:
 13644  0053C0  500F               	movf	fputs@i^0,w,c
 13645  0053C2  240A               	addwf	fputs@s^0,w,c
 13646  0053C4  6ED9               	movwf	fsr2l,c
 13647  0053C6  5010               	movf	(fputs@i+1)^0,w,c
 13648  0053C8  200B               	addwfc	(fputs@s+1)^0,w,c
 13649  0053CA  6EDA               	movwf	fsr2h,c
 13650  0053CC  50DF               	movf	indf2,w,c
 13651  0053CE  6E0E               	movwf	fputs@c^0,c
 13652  0053D0  500E               	movf	fputs@c^0,w,c
 13653  0053D2  A4D8               	btfss	status,2,c
 13654  0053D4  EFEE  F029         	goto	u4421
 13655  0053D8  EFF0  F029         	goto	u4420
 13656  0053DC                     u4421:
 13657  0053DC  EFD5  F029         	goto	l4382
 13658  0053E0                     u4420:
 13659  0053E0  0012               	return		;funcret
 13660  0053E2                     __end_of_fputs:
 13661                           	callstack 0
 13662                           
 13663 ;; *************** function _fputc *****************
 13664 ;; Defined at:
 13665 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 13666 ;; Parameters:    Size  Location     Type
 13667 ;;  c               2    0[COMRAM] int 
 13668 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13669 ;;		 -> sprintf@f(6), 
 13670 ;; Auto vars:     Size  Location     Type
 13671 ;;		None
 13672 ;; Return value:  Size  Location     Type
 13673 ;;                  2    0[COMRAM] int 
 13674 ;; Registers used:
 13675 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13676 ;; Tracked objects:
 13677 ;;		On entry : 0/0
 13678 ;;		On exit  : 0/0
 13679 ;;		Unchanged: 0/0
 13680 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13681 ;;      Params:         4       0       0       0       0       0       0
 13682 ;;      Locals:         0       0       0       0       0       0       0
 13683 ;;      Temps:          5       0       0       0       0       0       0
 13684 ;;      Totals:         9       0       0       0       0       0       0
 13685 ;;Total ram usage:        9 bytes
 13686 ;; Hardware stack levels used:    1
 13687 ;; Hardware stack levels required when called:    2
 13688 ;; This function calls:
 13689 ;;		_putch
 13690 ;; This function is called by:
 13691 ;;		_pad
 13692 ;;		_vfpfcnvrt
 13693 ;;		_fputs
 13694 ;; This function uses a non-reentrant model
 13695 ;;
 13696                           
 13697                           	psect	text54
 13698  004844                     __ptext54:
 13699                           	callstack 0
 13700  004844                     _fputc:
 13701                           	callstack 22
 13702  004844  5003               	movf	fputc@fp^0,w,c
 13703  004846  1004               	iorwf	(fputc@fp+1)^0,w,c
 13704  004848  B4D8               	btfsc	status,2,c
 13705  00484A  EF29  F024         	goto	u3991
 13706  00484E  EF2B  F024         	goto	u3990
 13707  004852                     u3991:
 13708  004852  EF34  F024         	goto	l4168
 13709  004856                     u3990:
 13710  004856  5003               	movf	fputc@fp^0,w,c
 13711  004858  1004               	iorwf	(fputc@fp+1)^0,w,c
 13712  00485A  A4D8               	btfss	status,2,c
 13713  00485C  EF32  F024         	goto	u4001
 13714  004860  EF34  F024         	goto	u4000
 13715  004864                     u4001:
 13716  004864  EF39  F024         	goto	l4170
 13717  004868                     u4000:
 13718  004868                     l4168:
 13719  004868  5001               	movf	fputc@c^0,w,c
 13720  00486A  ECE8  F02B         	call	_putch
 13721  00486E  EF86  F024         	goto	l1677
 13722  004872                     l4170:
 13723  004872  EE20 F004          	lfsr	2,4
 13724  004876  5003               	movf	fputc@fp^0,w,c
 13725  004878  26D9               	addwf	fsr2l,f,c
 13726  00487A  5004               	movf	(fputc@fp+1)^0,w,c
 13727  00487C  22DA               	addwfc	fsr2h,f,c
 13728  00487E  50DE               	movf	postinc2,w,c
 13729  004880  10DE               	iorwf	postinc2,w,c
 13730  004882  B4D8               	btfsc	status,2,c
 13731  004884  EF46  F024         	goto	u4011
 13732  004888  EF48  F024         	goto	u4010
 13733  00488C                     u4011:
 13734  00488C  EF63  F024         	goto	l4174
 13735  004890                     u4010:
 13736  004890  EE20 F004          	lfsr	2,4
 13737  004894  5003               	movf	fputc@fp^0,w,c
 13738  004896  26D9               	addwf	fsr2l,f,c
 13739  004898  5004               	movf	(fputc@fp+1)^0,w,c
 13740  00489A  22DA               	addwfc	fsr2h,f,c
 13741  00489C  EE10 F002          	lfsr	1,2
 13742  0048A0  5003               	movf	fputc@fp^0,w,c
 13743  0048A2  26E1               	addwf	fsr1l,f,c
 13744  0048A4  5004               	movf	(fputc@fp+1)^0,w,c
 13745  0048A6  22E2               	addwfc	fsr1h,f,c
 13746  0048A8  50DE               	movf	postinc2,w,c
 13747  0048AA  5CE6               	subwf	postinc1,w,c
 13748  0048AC  50E6               	movf	postinc1,w,c
 13749  0048AE  0A80               	xorlw	128
 13750  0048B0  6E09               	movwf	(??_fputc+4)^0,c
 13751  0048B2  50DE               	movf	postinc2,w,c
 13752  0048B4  0A80               	xorlw	128
 13753  0048B6  5809               	subwfb	(??_fputc+4)^0,w,c
 13754  0048B8  B0D8               	btfsc	status,0,c
 13755  0048BA  EF61  F024         	goto	u4021
 13756  0048BE  EF63  F024         	goto	u4020
 13757  0048C2                     u4021:
 13758  0048C2  EF86  F024         	goto	l1677
 13759  0048C6                     u4020:
 13760  0048C6                     l4174:
 13761  0048C6  EE20 F002          	lfsr	2,2
 13762  0048CA  5003               	movf	fputc@fp^0,w,c
 13763  0048CC  26D9               	addwf	fsr2l,f,c
 13764  0048CE  5004               	movf	(fputc@fp+1)^0,w,c
 13765  0048D0  22DA               	addwfc	fsr2h,f,c
 13766  0048D2  CFDE F005          	movff	postinc2,??_fputc
 13767  0048D6  CFDD F006          	movff	postdec2,??_fputc+1
 13768  0048DA  C003  FFD9         	movff	fputc@fp,fsr2l
 13769  0048DE  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13770  0048E2  CFDE F007          	movff	postinc2,??_fputc+2
 13771  0048E6  CFDD F008          	movff	postdec2,??_fputc+3
 13772  0048EA  5005               	movf	??_fputc^0,w,c
 13773  0048EC  2407               	addwf	(??_fputc+2)^0,w,c
 13774  0048EE  6ED9               	movwf	fsr2l,c
 13775  0048F0  5006               	movf	(??_fputc+1)^0,w,c
 13776  0048F2  2008               	addwfc	(??_fputc+3)^0,w,c
 13777  0048F4  6EDA               	movwf	fsr2h,c
 13778  0048F6  C001  FFDF         	movff	fputc@c,indf2
 13779  0048FA  EE20 F002          	lfsr	2,2
 13780  0048FE  5003               	movf	fputc@fp^0,w,c
 13781  004900  26D9               	addwf	fsr2l,f,c
 13782  004902  5004               	movf	(fputc@fp+1)^0,w,c
 13783  004904  22DA               	addwfc	fsr2h,f,c
 13784  004906  2ADE               	incf	postinc2,f,c
 13785  004908  0E00               	movlw	0
 13786  00490A  22DD               	addwfc	postdec2,f,c
 13787  00490C                     l1677:
 13788  00490C  0012               	return		;funcret
 13789  00490E                     __end_of_fputc:
 13790                           	callstack 0
 13791                           
 13792 ;; *************** function _putch *****************
 13793 ;; Defined at:
 13794 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13795 ;; Parameters:    Size  Location     Type
 13796 ;;  c               1    wreg     unsigned char 
 13797 ;; Auto vars:     Size  Location     Type
 13798 ;;  c               1    0[COMRAM] unsigned char 
 13799 ;; Return value:  Size  Location     Type
 13800 ;;                  1    wreg      void 
 13801 ;; Registers used:
 13802 ;;		wreg
 13803 ;; Tracked objects:
 13804 ;;		On entry : 0/0
 13805 ;;		On exit  : 0/0
 13806 ;;		Unchanged: 0/0
 13807 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13808 ;;      Params:         0       0       0       0       0       0       0
 13809 ;;      Locals:         0       0       0       0       0       0       0
 13810 ;;      Temps:          0       0       0       0       0       0       0
 13811 ;;      Totals:         0       0       0       0       0       0       0
 13812 ;;Total ram usage:        0 bytes
 13813 ;; Hardware stack levels used:    1
 13814 ;; Hardware stack levels required when called:    1
 13815 ;; This function calls:
 13816 ;;		Nothing
 13817 ;; This function is called by:
 13818 ;;		_fputc
 13819 ;; This function uses a non-reentrant model
 13820 ;;
 13821                           
 13822                           	psect	text55
 13823  0057D0                     __ptext55:
 13824                           	callstack 0
 13825  0057D0                     _putch:
 13826                           	callstack 22
 13827  0057D0  0012               	return		;funcret
 13828  0057D2                     __end_of_putch:
 13829                           	callstack 0
 13830                           
 13831 ;; *************** function _abs *****************
 13832 ;; Defined at:
 13833 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13834 ;; Parameters:    Size  Location     Type
 13835 ;;  a               2   18[COMRAM] int 
 13836 ;; Auto vars:     Size  Location     Type
 13837 ;;		None
 13838 ;; Return value:  Size  Location     Type
 13839 ;;                  2   18[COMRAM] int 
 13840 ;; Registers used:
 13841 ;;		wreg, status,2, status,0
 13842 ;; Tracked objects:
 13843 ;;		On entry : 0/0
 13844 ;;		On exit  : 0/0
 13845 ;;		Unchanged: 0/0
 13846 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13847 ;;      Params:         2       0       0       0       0       0       0
 13848 ;;      Locals:         0       0       0       0       0       0       0
 13849 ;;      Temps:          2       0       0       0       0       0       0
 13850 ;;      Totals:         4       0       0       0       0       0       0
 13851 ;;Total ram usage:        4 bytes
 13852 ;; Hardware stack levels used:    1
 13853 ;; Hardware stack levels required when called:    1
 13854 ;; This function calls:
 13855 ;;		Nothing
 13856 ;; This function is called by:
 13857 ;;		_dtoa
 13858 ;; This function uses a non-reentrant model
 13859 ;;
 13860                           
 13861                           	psect	text56
 13862  005464                     __ptext56:
 13863                           	callstack 0
 13864  005464                     _abs:
 13865                           	callstack 22
 13866  005464  BE14               	btfsc	(abs@a+1)^0,7,c
 13867  005466  EF3F  F02A         	goto	u5330
 13868  00546A  5014               	movf	(abs@a+1)^0,w,c
 13869  00546C  E106               	bnz	u5331
 13870  00546E  0413               	decf	abs@a^0,w,c
 13871  005470  B0D8               	btfsc	status,0,c
 13872  005472  EF3D  F02A         	goto	u5331
 13873  005476  EF3F  F02A         	goto	u5330
 13874  00547A                     u5331:
 13875  00547A  EF4D  F02A         	goto	l1598
 13876  00547E                     u5330:
 13877  00547E  C013  F015         	movff	abs@a,??_abs
 13878  005482  C014  F016         	movff	abs@a+1,??_abs+1
 13879  005486  1E15               	comf	??_abs^0,f,c
 13880  005488  1E16               	comf	(??_abs+1)^0,f,c
 13881  00548A  4A15               	infsnz	??_abs^0,f,c
 13882  00548C  2A16               	incf	(??_abs+1)^0,f,c
 13883  00548E  C015  F013         	movff	??_abs,?_abs
 13884  005492  C016  F014         	movff	??_abs+1,?_abs+1
 13885  005496  EF51  F02A         	goto	l1601
 13886  00549A                     l1598:
 13887  00549A  C013  F013         	movff	abs@a,?_abs
 13888  00549E  C014  F014         	movff	abs@a+1,?_abs+1
 13889  0054A2                     l1601:
 13890  0054A2  0012               	return		;funcret
 13891  0054A4                     __end_of_abs:
 13892                           	callstack 0
 13893                           
 13894 ;; *************** function ___aomod *****************
 13895 ;; Defined at:
 13896 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13897 ;; Parameters:    Size  Location     Type
 13898 ;;  dividend        8    0[COMRAM] long long 
 13899 ;;  divisor         8    8[COMRAM] long long 
 13900 ;; Auto vars:     Size  Location     Type
 13901 ;;  sign            1   17[COMRAM] unsigned char 
 13902 ;;  counter         1   16[COMRAM] unsigned char 
 13903 ;; Return value:  Size  Location     Type
 13904 ;;                  8    0[COMRAM] long long 
 13905 ;; Registers used:
 13906 ;;		wreg, status,2, status,0
 13907 ;; Tracked objects:
 13908 ;;		On entry : 0/0
 13909 ;;		On exit  : 0/0
 13910 ;;		Unchanged: 0/0
 13911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13912 ;;      Params:        16       0       0       0       0       0       0
 13913 ;;      Locals:         2       0       0       0       0       0       0
 13914 ;;      Temps:          0       0       0       0       0       0       0
 13915 ;;      Totals:        18       0       0       0       0       0       0
 13916 ;;Total ram usage:       18 bytes
 13917 ;; Hardware stack levels used:    1
 13918 ;; Hardware stack levels required when called:    1
 13919 ;; This function calls:
 13920 ;;		Nothing
 13921 ;; This function is called by:
 13922 ;;		_dtoa
 13923 ;; This function uses a non-reentrant model
 13924 ;;
 13925                           
 13926                           	psect	text57
 13927  003BC0                     __ptext57:
 13928                           	callstack 0
 13929  003BC0                     ___aomod:
 13930                           	callstack 22
 13931  003BC0  0E00               	movlw	0
 13932  003BC2  6E12               	movwf	___aomod@sign^0,c
 13933  003BC4  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13934  003BC6  EFE9  F01D         	goto	u4530
 13935  003BCA  EFE7  F01D         	goto	u4531
 13936  003BCE                     u4531:
 13937  003BCE  EFFB  F01D         	goto	l4460
 13938  003BD2                     u4530:
 13939  003BD2  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13940  003BD4  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13941  003BD6  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13942  003BD8  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13943  003BDA  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13944  003BDC  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13945  003BDE  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13946  003BE0  6C01               	negf	___aomod@dividend^0,c
 13947  003BE2  0E00               	movlw	0
 13948  003BE4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13949  003BE6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13950  003BE8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13951  003BEA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13952  003BEC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13953  003BEE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13954  003BF0  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13955  003BF2  0E01               	movlw	1
 13956  003BF4  6E12               	movwf	___aomod@sign^0,c
 13957  003BF6                     l4460:
 13958  003BF6  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13959  003BF8  EF02  F01E         	goto	u4540
 13960  003BFC  EF00  F01E         	goto	u4541
 13961  003C00                     u4541:
 13962  003C00  EF12  F01E         	goto	l4464
 13963  003C04                     u4540:
 13964  003C04  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13965  003C06  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13966  003C08  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13967  003C0A  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13968  003C0C  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13969  003C0E  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13970  003C10  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13971  003C12  6C09               	negf	___aomod@divisor^0,c
 13972  003C14  0E00               	movlw	0
 13973  003C16  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13974  003C18  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13975  003C1A  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13976  003C1C  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13977  003C1E  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13978  003C20  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13979  003C22  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13980  003C24                     l4464:
 13981  003C24  5009               	movf	___aomod@divisor^0,w,c
 13982  003C26  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13983  003C28  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13984  003C2A  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13985  003C2C  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13986  003C2E  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13987  003C30  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13988  003C32  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13989  003C34  B4D8               	btfsc	status,2,c
 13990  003C36  EF1F  F01E         	goto	u4551
 13991  003C3A  EF21  F01E         	goto	u4550
 13992  003C3E                     u4551:
 13993  003C3E  EF69  F01E         	goto	l4480
 13994  003C42                     u4550:
 13995  003C42  0E01               	movlw	1
 13996  003C44  6E11               	movwf	___aomod@counter^0,c
 13997  003C46  EF2F  F01E         	goto	l4470
 13998  003C4A                     l4468:
 13999  003C4A  90D8               	bcf	status,0,c
 14000  003C4C  3609               	rlcf	___aomod@divisor^0,f,c
 14001  003C4E  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 14002  003C50  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 14003  003C52  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 14004  003C54  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 14005  003C56  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 14006  003C58  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 14007  003C5A  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 14008  003C5C  2A11               	incf	___aomod@counter^0,f,c
 14009  003C5E                     l4470:
 14010  003C5E  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 14011  003C60  EF34  F01E         	goto	u4561
 14012  003C64  EF36  F01E         	goto	u4560
 14013  003C68                     u4561:
 14014  003C68  EF25  F01E         	goto	l4468
 14015  003C6C                     u4560:
 14016  003C6C                     l4472:
 14017  003C6C  5009               	movf	___aomod@divisor^0,w,c
 14018  003C6E  5C01               	subwf	___aomod@dividend^0,w,c
 14019  003C70  500A               	movf	(___aomod@divisor+1)^0,w,c
 14020  003C72  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 14021  003C74  500B               	movf	(___aomod@divisor+2)^0,w,c
 14022  003C76  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 14023  003C78  500C               	movf	(___aomod@divisor+3)^0,w,c
 14024  003C7A  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 14025  003C7C  500D               	movf	(___aomod@divisor+4)^0,w,c
 14026  003C7E  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 14027  003C80  500E               	movf	(___aomod@divisor+5)^0,w,c
 14028  003C82  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 14029  003C84  500F               	movf	(___aomod@divisor+6)^0,w,c
 14030  003C86  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 14031  003C88  5010               	movf	(___aomod@divisor+7)^0,w,c
 14032  003C8A  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 14033  003C8C  A0D8               	btfss	status,0,c
 14034  003C8E  EF4B  F01E         	goto	u4571
 14035  003C92  EF4D  F01E         	goto	u4570
 14036  003C96                     u4571:
 14037  003C96  EF5D  F01E         	goto	l4476
 14038  003C9A                     u4570:
 14039  003C9A  5009               	movf	___aomod@divisor^0,w,c
 14040  003C9C  5E01               	subwf	___aomod@dividend^0,f,c
 14041  003C9E  500A               	movf	(___aomod@divisor+1)^0,w,c
 14042  003CA0  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 14043  003CA2  500B               	movf	(___aomod@divisor+2)^0,w,c
 14044  003CA4  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 14045  003CA6  500C               	movf	(___aomod@divisor+3)^0,w,c
 14046  003CA8  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 14047  003CAA  500D               	movf	(___aomod@divisor+4)^0,w,c
 14048  003CAC  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 14049  003CAE  500E               	movf	(___aomod@divisor+5)^0,w,c
 14050  003CB0  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 14051  003CB2  500F               	movf	(___aomod@divisor+6)^0,w,c
 14052  003CB4  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 14053  003CB6  5010               	movf	(___aomod@divisor+7)^0,w,c
 14054  003CB8  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 14055  003CBA                     l4476:
 14056  003CBA  90D8               	bcf	status,0,c
 14057  003CBC  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 14058  003CBE  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 14059  003CC0  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 14060  003CC2  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 14061  003CC4  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 14062  003CC6  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 14063  003CC8  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 14064  003CCA  3209               	rrcf	___aomod@divisor^0,f,c
 14065  003CCC  2E11               	decfsz	___aomod@counter^0,f,c
 14066  003CCE  EF36  F01E         	goto	l4472
 14067  003CD2                     l4480:
 14068  003CD2  5012               	movf	___aomod@sign^0,w,c
 14069  003CD4  B4D8               	btfsc	status,2,c
 14070  003CD6  EF6F  F01E         	goto	u4581
 14071  003CDA  EF71  F01E         	goto	u4580
 14072  003CDE                     u4581:
 14073  003CDE  EF81  F01E         	goto	l4484
 14074  003CE2                     u4580:
 14075  003CE2  1E08               	comf	(___aomod@dividend+7)^0,f,c
 14076  003CE4  1E07               	comf	(___aomod@dividend+6)^0,f,c
 14077  003CE6  1E06               	comf	(___aomod@dividend+5)^0,f,c
 14078  003CE8  1E05               	comf	(___aomod@dividend+4)^0,f,c
 14079  003CEA  1E04               	comf	(___aomod@dividend+3)^0,f,c
 14080  003CEC  1E03               	comf	(___aomod@dividend+2)^0,f,c
 14081  003CEE  1E02               	comf	(___aomod@dividend+1)^0,f,c
 14082  003CF0  6C01               	negf	___aomod@dividend^0,c
 14083  003CF2  0E00               	movlw	0
 14084  003CF4  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 14085  003CF6  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 14086  003CF8  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 14087  003CFA  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 14088  003CFC  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 14089  003CFE  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 14090  003D00  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 14091  003D02                     l4484:
 14092  003D02  C001  F001         	movff	___aomod@dividend,?___aomod
 14093  003D06  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 14094  003D0A  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 14095  003D0E  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 14096  003D12  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 14097  003D16  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 14098  003D1A  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 14099  003D1E  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 14100  003D22  0012               	return		;funcret
 14101  003D24                     __end_of___aomod:
 14102                           	callstack 0
 14103                           
 14104 ;; *************** function ___aodiv *****************
 14105 ;; Defined at:
 14106 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 14107 ;; Parameters:    Size  Location     Type
 14108 ;;  dividend        8    0[COMRAM] long long 
 14109 ;;  divisor         8    8[COMRAM] long long 
 14110 ;; Auto vars:     Size  Location     Type
 14111 ;;  quotient        8   18[COMRAM] long long 
 14112 ;;  sign            1   17[COMRAM] unsigned char 
 14113 ;;  counter         1   16[COMRAM] unsigned char 
 14114 ;; Return value:  Size  Location     Type
 14115 ;;                  8    0[COMRAM] long long 
 14116 ;; Registers used:
 14117 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14118 ;; Tracked objects:
 14119 ;;		On entry : 0/0
 14120 ;;		On exit  : 0/0
 14121 ;;		Unchanged: 0/0
 14122 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14123 ;;      Params:        16       0       0       0       0       0       0
 14124 ;;      Locals:        10       0       0       0       0       0       0
 14125 ;;      Temps:          0       0       0       0       0       0       0
 14126 ;;      Totals:        26       0       0       0       0       0       0
 14127 ;;Total ram usage:       26 bytes
 14128 ;; Hardware stack levels used:    1
 14129 ;; Hardware stack levels required when called:    1
 14130 ;; This function calls:
 14131 ;;		Nothing
 14132 ;; This function is called by:
 14133 ;;		_dtoa
 14134 ;; This function uses a non-reentrant model
 14135 ;;
 14136                           
 14137                           	psect	text58
 14138  003A38                     __ptext58:
 14139                           	callstack 0
 14140  003A38                     ___aodiv:
 14141                           	callstack 22
 14142  003A38  0E00               	movlw	0
 14143  003A3A  6E12               	movwf	___aodiv@sign^0,c
 14144  003A3C  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 14145  003A3E  EF25  F01D         	goto	u4460
 14146  003A42  EF23  F01D         	goto	u4461
 14147  003A46                     u4461:
 14148  003A46  EF37  F01D         	goto	l4416
 14149  003A4A                     u4460:
 14150  003A4A  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 14151  003A4C  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 14152  003A4E  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 14153  003A50  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 14154  003A52  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 14155  003A54  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 14156  003A56  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 14157  003A58  6C09               	negf	___aodiv@divisor^0,c
 14158  003A5A  0E00               	movlw	0
 14159  003A5C  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 14160  003A5E  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 14161  003A60  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 14162  003A62  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 14163  003A64  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 14164  003A66  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 14165  003A68  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 14166  003A6A  0E01               	movlw	1
 14167  003A6C  6E12               	movwf	___aodiv@sign^0,c
 14168  003A6E                     l4416:
 14169  003A6E  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 14170  003A70  EF3E  F01D         	goto	u4470
 14171  003A74  EF3C  F01D         	goto	u4471
 14172  003A78                     u4471:
 14173  003A78  EF50  F01D         	goto	l4422
 14174  003A7C                     u4470:
 14175  003A7C  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 14176  003A7E  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 14177  003A80  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 14178  003A82  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 14179  003A84  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 14180  003A86  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 14181  003A88  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 14182  003A8A  6C01               	negf	___aodiv@dividend^0,c
 14183  003A8C  0E00               	movlw	0
 14184  003A8E  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 14185  003A90  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 14186  003A92  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 14187  003A94  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 14188  003A96  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 14189  003A98  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 14190  003A9A  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 14191  003A9C  0E01               	movlw	1
 14192  003A9E  1A12               	xorwf	___aodiv@sign^0,f,c
 14193  003AA0                     l4422:
 14194  003AA0  EE20  F013         	lfsr	2,___aodiv@quotient
 14195  003AA4  0E07               	movlw	7
 14196  003AA6                     u4481:
 14197  003AA6  6ADE               	clrf	postinc2,c
 14198  003AA8  06E8               	decf	wreg,f,c
 14199  003AAA  E2FD               	bc	u4481
 14200  003AAC  5009               	movf	___aodiv@divisor^0,w,c
 14201  003AAE  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 14202  003AB0  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 14203  003AB2  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 14204  003AB4  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 14205  003AB6  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 14206  003AB8  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 14207  003ABA  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 14208  003ABC  B4D8               	btfsc	status,2,c
 14209  003ABE  EF63  F01D         	goto	u4491
 14210  003AC2  EF65  F01D         	goto	u4490
 14211  003AC6                     u4491:
 14212  003AC6  EFB7  F01D         	goto	l4444
 14213  003ACA                     u4490:
 14214  003ACA  0E01               	movlw	1
 14215  003ACC  6E11               	movwf	___aodiv@counter^0,c
 14216  003ACE  EF73  F01D         	goto	l4430
 14217  003AD2                     l4428:
 14218  003AD2  90D8               	bcf	status,0,c
 14219  003AD4  3609               	rlcf	___aodiv@divisor^0,f,c
 14220  003AD6  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 14221  003AD8  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 14222  003ADA  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 14223  003ADC  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 14224  003ADE  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 14225  003AE0  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 14226  003AE2  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 14227  003AE4  2A11               	incf	___aodiv@counter^0,f,c
 14228  003AE6                     l4430:
 14229  003AE6  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 14230  003AE8  EF78  F01D         	goto	u4501
 14231  003AEC  EF7A  F01D         	goto	u4500
 14232  003AF0                     u4501:
 14233  003AF0  EF69  F01D         	goto	l4428
 14234  003AF4                     u4500:
 14235  003AF4                     l4432:
 14236  003AF4  90D8               	bcf	status,0,c
 14237  003AF6  3613               	rlcf	___aodiv@quotient^0,f,c
 14238  003AF8  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 14239  003AFA  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 14240  003AFC  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 14241  003AFE  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 14242  003B00  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 14243  003B02  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 14244  003B04  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 14245  003B06  5009               	movf	___aodiv@divisor^0,w,c
 14246  003B08  5C01               	subwf	___aodiv@dividend^0,w,c
 14247  003B0A  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14248  003B0C  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 14249  003B0E  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14250  003B10  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 14251  003B12  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14252  003B14  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 14253  003B16  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14254  003B18  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 14255  003B1A  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14256  003B1C  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 14257  003B1E  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14258  003B20  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 14259  003B22  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14260  003B24  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 14261  003B26  A0D8               	btfss	status,0,c
 14262  003B28  EF98  F01D         	goto	u4511
 14263  003B2C  EF9A  F01D         	goto	u4510
 14264  003B30                     u4511:
 14265  003B30  EFAB  F01D         	goto	l4440
 14266  003B34                     u4510:
 14267  003B34  5009               	movf	___aodiv@divisor^0,w,c
 14268  003B36  5E01               	subwf	___aodiv@dividend^0,f,c
 14269  003B38  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14270  003B3A  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 14271  003B3C  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14272  003B3E  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 14273  003B40  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14274  003B42  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 14275  003B44  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14276  003B46  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 14277  003B48  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14278  003B4A  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 14279  003B4C  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14280  003B4E  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 14281  003B50  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14282  003B52  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 14283  003B54  8013               	bsf	___aodiv@quotient^0,0,c
 14284  003B56                     l4440:
 14285  003B56  90D8               	bcf	status,0,c
 14286  003B58  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 14287  003B5A  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 14288  003B5C  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 14289  003B5E  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 14290  003B60  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 14291  003B62  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 14292  003B64  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 14293  003B66  3209               	rrcf	___aodiv@divisor^0,f,c
 14294  003B68  2E11               	decfsz	___aodiv@counter^0,f,c
 14295  003B6A  EF7A  F01D         	goto	l4432
 14296  003B6E                     l4444:
 14297  003B6E  5012               	movf	___aodiv@sign^0,w,c
 14298  003B70  B4D8               	btfsc	status,2,c
 14299  003B72  EFBD  F01D         	goto	u4521
 14300  003B76  EFBF  F01D         	goto	u4520
 14301  003B7A                     u4521:
 14302  003B7A  EFCF  F01D         	goto	l4448
 14303  003B7E                     u4520:
 14304  003B7E  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 14305  003B80  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 14306  003B82  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 14307  003B84  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14308  003B86  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14309  003B88  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14310  003B8A  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14311  003B8C  6C13               	negf	___aodiv@quotient^0,c
 14312  003B8E  0E00               	movlw	0
 14313  003B90  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14314  003B92  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14315  003B94  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14316  003B96  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14317  003B98  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14318  003B9A  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14319  003B9C  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14320  003B9E                     l4448:
 14321  003B9E  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14322  003BA2  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14323  003BA6  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14324  003BAA  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14325  003BAE  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14326  003BB2  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14327  003BB6  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14328  003BBA  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14329  003BBE  0012               	return		;funcret
 14330  003BC0                     __end_of___aodiv:
 14331                           	callstack 0
 14332                           
 14333 ;; *************** function _atoi *****************
 14334 ;; Defined at:
 14335 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 14336 ;; Parameters:    Size  Location     Type
 14337 ;;  s               2    7[COMRAM] PTR const unsigned char 
 14338 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
 14339 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
 14340 ;; Auto vars:     Size  Location     Type
 14341 ;;  n               2   20[COMRAM] int 
 14342 ;;  neg             2   13[COMRAM] int 
 14343 ;; Return value:  Size  Location     Type
 14344 ;;                  2    7[COMRAM] int 
 14345 ;; Registers used:
 14346 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14347 ;; Tracked objects:
 14348 ;;		On entry : 0/0
 14349 ;;		On exit  : 0/0
 14350 ;;		Unchanged: 0/0
 14351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14352 ;;      Params:         2       0       0       0       0       0       0
 14353 ;;      Locals:         9       0       0       0       0       0       0
 14354 ;;      Temps:          4       0       0       0       0       0       0
 14355 ;;      Totals:        15       0       0       0       0       0       0
 14356 ;;Total ram usage:       15 bytes
 14357 ;; Hardware stack levels used:    1
 14358 ;; Hardware stack levels required when called:    2
 14359 ;; This function calls:
 14360 ;;		___wmul
 14361 ;;		_isdigit
 14362 ;;		_isspace
 14363 ;; This function is called by:
 14364 ;;		_vfpfcnvrt
 14365 ;; This function uses a non-reentrant model
 14366 ;;
 14367                           
 14368                           	psect	text59
 14369  0038A8                     __ptext59:
 14370                           	callstack 0
 14371  0038A8                     _atoi:
 14372                           	callstack 22
 14373  0038A8  0E00               	movlw	0
 14374  0038AA  6E16               	movwf	(atoi@n+1)^0,c
 14375  0038AC  0E00               	movlw	0
 14376  0038AE  6E15               	movwf	atoi@n^0,c
 14377  0038B0  0E00               	movlw	0
 14378  0038B2  6E0F               	movwf	(atoi@neg+1)^0,c
 14379  0038B4  0E00               	movlw	0
 14380  0038B6  6E0E               	movwf	atoi@neg^0,c
 14381  0038B8  EF60  F01C         	goto	l5402
 14382  0038BC                     l5400:
 14383  0038BC  4A08               	infsnz	atoi@s^0,f,c
 14384  0038BE  2A09               	incf	(atoi@s+1)^0,f,c
 14385  0038C0                     l5402:
 14386  0038C0  0E01               	movlw	1
 14387  0038C2  6E14               	movwf	_atoi$3047^0,c
 14388  0038C4  C008  FFF6         	movff	atoi@s,tblptrl
 14389  0038C8  C009  FFF7         	movff	atoi@s+1,tblptrh
 14390  0038CC                     	if	0	;tblptru may be non-zero
 14391  0038CC                     	endif
 14392  0038CC                     	if	0	;tblptru may be non-zero
 14393  0038CC                     	endif
 14394  0038CC  0008               	tblrd		*
 14395  0038CE  50F5               	movf	tablat,w,c
 14396  0038D0  0A20               	xorlw	32
 14397  0038D2  B4D8               	btfsc	status,2,c
 14398  0038D4  EF6E  F01C         	goto	u6271
 14399  0038D8  EF70  F01C         	goto	u6270
 14400  0038DC                     u6271:
 14401  0038DC  EF8D  F01C         	goto	l5410
 14402  0038E0                     u6270:
 14403  0038E0  0EF7               	movlw	247
 14404  0038E2  6E0A               	movwf	??_atoi^0,c
 14405  0038E4  0EFF               	movlw	255
 14406  0038E6  6E0B               	movwf	(??_atoi+1)^0,c
 14407  0038E8  C008  FFF6         	movff	atoi@s,tblptrl
 14408  0038EC  C009  FFF7         	movff	atoi@s+1,tblptrh
 14409  0038F0                     	if	0	;tblptru may be non-zero
 14410  0038F0                     	endif
 14411  0038F0                     	if	0	;tblptru may be non-zero
 14412  0038F0                     	endif
 14413  0038F0  0008               	tblrd		*
 14414  0038F2  50F5               	movf	tablat,w,c
 14415  0038F4  6E0C               	movwf	(??_atoi+2)^0,c
 14416  0038F6  6A0D               	clrf	(??_atoi+3)^0,c
 14417  0038F8  500A               	movf	??_atoi^0,w,c
 14418  0038FA  260C               	addwf	(??_atoi+2)^0,f,c
 14419  0038FC  500B               	movf	(??_atoi+1)^0,w,c
 14420  0038FE  220D               	addwfc	(??_atoi+3)^0,f,c
 14421  003900  500D               	movf	(??_atoi+3)^0,w,c
 14422  003902  E109               	bnz	u6280
 14423  003904  0E05               	movlw	5
 14424  003906  5C0C               	subwf	(??_atoi+2)^0,w,c
 14425  003908  A0D8               	btfss	status,0,c
 14426  00390A  EF89  F01C         	goto	u6281
 14427  00390E  EF8B  F01C         	goto	u6280
 14428  003912                     u6281:
 14429  003912  EF8D  F01C         	goto	l5410
 14430  003916                     u6280:
 14431  003916  0E00               	movlw	0
 14432  003918  6E14               	movwf	_atoi$3047^0,c
 14433  00391A                     l5410:
 14434  00391A  C014  F010         	movff	_atoi$3047,_atoi$3046
 14435  00391E  6A11               	clrf	(_atoi$3046+1)^0,c
 14436  003920  5010               	movf	_atoi$3046^0,w,c
 14437  003922  1011               	iorwf	(_atoi$3046+1)^0,w,c
 14438  003924  A4D8               	btfss	status,2,c
 14439  003926  EF97  F01C         	goto	u6291
 14440  00392A  EF99  F01C         	goto	u6290
 14441  00392E                     u6291:
 14442  00392E  EF5E  F01C         	goto	l5400
 14443  003932                     u6290:
 14444  003932  EFA3  F01C         	goto	l5420
 14445  003936                     l5416:
 14446  003936  0E00               	movlw	0
 14447  003938  6E0F               	movwf	(atoi@neg+1)^0,c
 14448  00393A  0E01               	movlw	1
 14449  00393C  6E0E               	movwf	atoi@neg^0,c
 14450  00393E                     l5418:
 14451  00393E  4A08               	infsnz	atoi@s^0,f,c
 14452  003940  2A09               	incf	(atoi@s+1)^0,f,c
 14453  003942  EFD8  F01C         	goto	l5426
 14454  003946                     l5420:
 14455  003946  C008  FFF6         	movff	atoi@s,tblptrl
 14456  00394A  C009  FFF7         	movff	atoi@s+1,tblptrh
 14457  00394E                     	if	0	;tblptru may be non-zero
 14458  00394E                     	endif
 14459  00394E                     	if	0	;tblptru may be non-zero
 14460  00394E                     	endif
 14461  00394E  0008               	tblrd		*
 14462  003950  50F5               	movf	tablat,w,c
 14463  003952  6E0A               	movwf	??_atoi^0,c
 14464  003954  6A0B               	clrf	(??_atoi+1)^0,c
 14465                           
 14466                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14467                           ; Switch size 1, requested type "simple"
 14468                           ; Number of cases is 1, Range of values is 0 to 0
 14469                           ; switch strategies available:
 14470                           ; Name         Instructions Cycles
 14471                           ; simple_byte            4     3 (average)
 14472                           ;	Chosen strategy is simple_byte
 14473  003956  500B               	movf	(??_atoi+1)^0,w,c
 14474  003958  0A00               	xorlw	0	; case 0
 14475  00395A  B4D8               	btfsc	status,2,c
 14476  00395C  EFB2  F01C         	goto	l6620
 14477  003960  EFD8  F01C         	goto	l5426
 14478  003964                     l6620:
 14479                           
 14480                           ; Switch size 1, requested type "simple"
 14481                           ; Number of cases is 2, Range of values is 43 to 45
 14482                           ; switch strategies available:
 14483                           ; Name         Instructions Cycles
 14484                           ; simple_byte            7     4 (average)
 14485                           ;	Chosen strategy is simple_byte
 14486  003964  500A               	movf	??_atoi^0,w,c
 14487  003966  0A2B               	xorlw	43	; case 43
 14488  003968  B4D8               	btfsc	status,2,c
 14489  00396A  EF9F  F01C         	goto	l5418
 14490  00396E  0A06               	xorlw	6	; case 45
 14491  003970  B4D8               	btfsc	status,2,c
 14492  003972  EF9B  F01C         	goto	l5416
 14493  003976  EFD8  F01C         	goto	l5426
 14494  00397A                     l5422:
 14495  00397A  C015  F001         	movff	atoi@n,___wmul@multiplier
 14496  00397E  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 14497  003982  0E00               	movlw	0
 14498  003984  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 14499  003986  0E0A               	movlw	10
 14500  003988  6E03               	movwf	___wmul@multiplicand^0,c
 14501  00398A  EC8E  F02B         	call	___wmul	;wreg free
 14502  00398E  C008  FFF6         	movff	atoi@s,tblptrl
 14503  003992  C009  FFF7         	movff	atoi@s+1,tblptrh
 14504  003996                     	if	0	;tblptru may be non-zero
 14505  003996                     	endif
 14506  003996                     	if	0	;tblptru may be non-zero
 14507  003996                     	endif
 14508  003996  0008               	tblrd		*
 14509  003998  50F5               	movf	tablat,w,c
 14510  00399A  5E01               	subwf	?___wmul^0,f,c
 14511  00399C  0E00               	movlw	0
 14512  00399E  5A02               	subwfb	(?___wmul+1)^0,f,c
 14513  0039A0  0E30               	movlw	48
 14514  0039A2  2401               	addwf	?___wmul^0,w,c
 14515  0039A4  6E15               	movwf	atoi@n^0,c
 14516  0039A6  0E00               	movlw	0
 14517  0039A8  2002               	addwfc	(?___wmul+1)^0,w,c
 14518  0039AA  6E16               	movwf	(atoi@n+1)^0,c
 14519  0039AC  EF9F  F01C         	goto	l5418
 14520  0039B0                     l5426:
 14521  0039B0  0ED0               	movlw	208
 14522  0039B2  6E0A               	movwf	??_atoi^0,c
 14523  0039B4  0EFF               	movlw	255
 14524  0039B6  6E0B               	movwf	(??_atoi+1)^0,c
 14525  0039B8  C008  FFF6         	movff	atoi@s,tblptrl
 14526  0039BC  C009  FFF7         	movff	atoi@s+1,tblptrh
 14527  0039C0                     	if	0	;tblptru may be non-zero
 14528  0039C0                     	endif
 14529  0039C0                     	if	0	;tblptru may be non-zero
 14530  0039C0                     	endif
 14531  0039C0  0008               	tblrd		*
 14532  0039C2  50F5               	movf	tablat,w,c
 14533  0039C4  6E0C               	movwf	(??_atoi+2)^0,c
 14534  0039C6  6A0D               	clrf	(??_atoi+3)^0,c
 14535  0039C8  500A               	movf	??_atoi^0,w,c
 14536  0039CA  260C               	addwf	(??_atoi+2)^0,f,c
 14537  0039CC  500B               	movf	(??_atoi+1)^0,w,c
 14538  0039CE  220D               	addwfc	(??_atoi+3)^0,f,c
 14539  0039D0  500D               	movf	(??_atoi+3)^0,w,c
 14540  0039D2  E10A               	bnz	u6300
 14541  0039D4  0E0A               	movlw	10
 14542  0039D6  5C0C               	subwf	(??_atoi+2)^0,w,c
 14543  0039D8  A0D8               	btfss	status,0,c
 14544  0039DA  EFF1  F01C         	goto	u6301
 14545  0039DE  EFF4  F01C         	goto	u6300
 14546  0039E2                     u6301:
 14547  0039E2  0E01               	movlw	1
 14548  0039E4  EFF5  F01C         	goto	u6310
 14549  0039E8                     u6300:
 14550  0039E8  0E00               	movlw	0
 14551  0039EA                     u6310:
 14552  0039EA  6E12               	movwf	_atoi$3048^0,c
 14553  0039EC  6A13               	clrf	(_atoi$3048+1)^0,c
 14554  0039EE  5012               	movf	_atoi$3048^0,w,c
 14555  0039F0  1013               	iorwf	(_atoi$3048+1)^0,w,c
 14556  0039F2  A4D8               	btfss	status,2,c
 14557  0039F4  EFFE  F01C         	goto	u6321
 14558  0039F8  EF00  F01D         	goto	u6320
 14559  0039FC                     u6321:
 14560  0039FC  EFBD  F01C         	goto	l5422
 14561  003A00                     u6320:
 14562  003A00  500E               	movf	atoi@neg^0,w,c
 14563  003A02  100F               	iorwf	(atoi@neg+1)^0,w,c
 14564  003A04  A4D8               	btfss	status,2,c
 14565  003A06  EF07  F01D         	goto	u6331
 14566  003A0A  EF09  F01D         	goto	u6330
 14567  003A0E                     u6331:
 14568  003A0E  EF17  F01D         	goto	l1629
 14569  003A12                     u6330:
 14570  003A12  C015  F00A         	movff	atoi@n,??_atoi
 14571  003A16  C016  F00B         	movff	atoi@n+1,??_atoi+1
 14572  003A1A  1E0A               	comf	??_atoi^0,f,c
 14573  003A1C  1E0B               	comf	(??_atoi+1)^0,f,c
 14574  003A1E  4A0A               	infsnz	??_atoi^0,f,c
 14575  003A20  2A0B               	incf	(??_atoi+1)^0,f,c
 14576  003A22  C00A  F008         	movff	??_atoi,?_atoi
 14577  003A26  C00B  F009         	movff	??_atoi+1,?_atoi+1
 14578  003A2A  EF1B  F01D         	goto	l1632
 14579  003A2E                     l1629:
 14580  003A2E  C015  F008         	movff	atoi@n,?_atoi
 14581  003A32  C016  F009         	movff	atoi@n+1,?_atoi+1
 14582  003A36                     l1632:
 14583  003A36  0012               	return		;funcret
 14584  003A38                     __end_of_atoi:
 14585                           	callstack 0
 14586                           
 14587 ;; *************** function _isspace *****************
 14588 ;; Defined at:
 14589 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 14590 ;; Parameters:    Size  Location     Type
 14591 ;;  c               2    0[COMRAM] int 
 14592 ;; Auto vars:     Size  Location     Type
 14593 ;;		None
 14594 ;; Return value:  Size  Location     Type
 14595 ;;                  2    0[COMRAM] int 
 14596 ;; Registers used:
 14597 ;;		wreg, status,2, status,0
 14598 ;; Tracked objects:
 14599 ;;		On entry : 0/0
 14600 ;;		On exit  : 0/0
 14601 ;;		Unchanged: 0/0
 14602 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14603 ;;      Params:         2       0       0       0       0       0       0
 14604 ;;      Locals:         1       0       0       0       0       0       0
 14605 ;;      Temps:          4       0       0       0       0       0       0
 14606 ;;      Totals:         7       0       0       0       0       0       0
 14607 ;;Total ram usage:        7 bytes
 14608 ;; Hardware stack levels used:    1
 14609 ;; Hardware stack levels required when called:    1
 14610 ;; This function calls:
 14611 ;;		Nothing
 14612 ;; This function is called by:
 14613 ;;		_atoi
 14614 ;; This function uses a non-reentrant model
 14615 ;;
 14616                           
 14617                           	psect	text60
 14618  0052BC                     __ptext60:
 14619                           	callstack 0
 14620  0052BC                     _isspace:
 14621                           	callstack 22
 14622  0052BC  0E01               	movlw	1
 14623  0052BE  6E07               	movwf	_isspace$3077^0,c
 14624  0052C0  0E20               	movlw	32
 14625  0052C2  1801               	xorwf	isspace@c^0,w,c
 14626  0052C4  1002               	iorwf	(isspace@c+1)^0,w,c
 14627  0052C6  B4D8               	btfsc	status,2,c
 14628  0052C8  EF68  F029         	goto	u5581
 14629  0052CC  EF6A  F029         	goto	u5580
 14630  0052D0                     u5581:
 14631  0052D0  EF83  F029         	goto	l5034
 14632  0052D4                     u5580:
 14633  0052D4  0EF7               	movlw	247
 14634  0052D6  6E03               	movwf	??_isspace^0,c
 14635  0052D8  0EFF               	movlw	255
 14636  0052DA  6E04               	movwf	(??_isspace+1)^0,c
 14637  0052DC  C001  F005         	movff	isspace@c,??_isspace+2
 14638  0052E0  C002  F006         	movff	isspace@c+1,??_isspace+3
 14639  0052E4  5003               	movf	??_isspace^0,w,c
 14640  0052E6  2605               	addwf	(??_isspace+2)^0,f,c
 14641  0052E8  5004               	movf	(??_isspace+1)^0,w,c
 14642  0052EA  2206               	addwfc	(??_isspace+3)^0,f,c
 14643  0052EC  5006               	movf	(??_isspace+3)^0,w,c
 14644  0052EE  E109               	bnz	u5590
 14645  0052F0  0E05               	movlw	5
 14646  0052F2  5C05               	subwf	(??_isspace+2)^0,w,c
 14647  0052F4  A0D8               	btfss	status,0,c
 14648  0052F6  EF7F  F029         	goto	u5591
 14649  0052FA  EF81  F029         	goto	u5590
 14650  0052FE                     u5591:
 14651  0052FE  EF83  F029         	goto	l5034
 14652  005302                     u5590:
 14653  005302  0E00               	movlw	0
 14654  005304  6E07               	movwf	_isspace$3077^0,c
 14655  005306                     l5034:
 14656  005306  C007  F001         	movff	_isspace$3077,?_isspace
 14657  00530A  6A02               	clrf	(?_isspace+1)^0,c
 14658  00530C  0012               	return		;funcret
 14659  00530E                     __end_of_isspace:
 14660                           	callstack 0
 14661                           
 14662 ;; *************** function _isdigit *****************
 14663 ;; Defined at:
 14664 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 14665 ;; Parameters:    Size  Location     Type
 14666 ;;  c               2    0[COMRAM] int 
 14667 ;; Auto vars:     Size  Location     Type
 14668 ;;		None
 14669 ;; Return value:  Size  Location     Type
 14670 ;;                  2    0[COMRAM] int 
 14671 ;; Registers used:
 14672 ;;		wreg, status,2, status,0
 14673 ;; Tracked objects:
 14674 ;;		On entry : 0/0
 14675 ;;		On exit  : 0/0
 14676 ;;		Unchanged: 0/0
 14677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14678 ;;      Params:         2       0       0       0       0       0       0
 14679 ;;      Locals:         0       0       0       0       0       0       0
 14680 ;;      Temps:          4       0       0       0       0       0       0
 14681 ;;      Totals:         6       0       0       0       0       0       0
 14682 ;;Total ram usage:        6 bytes
 14683 ;; Hardware stack levels used:    1
 14684 ;; Hardware stack levels required when called:    1
 14685 ;; This function calls:
 14686 ;;		Nothing
 14687 ;; This function is called by:
 14688 ;;		_vfpfcnvrt
 14689 ;;		_atoi
 14690 ;; This function uses a non-reentrant model
 14691 ;;
 14692                           
 14693                           	psect	text61
 14694  00558E                     __ptext61:
 14695                           	callstack 0
 14696  00558E                     _isdigit:
 14697                           	callstack 23
 14698  00558E  0ED0               	movlw	208
 14699  005590  6E03               	movwf	??_isdigit^0,c
 14700  005592  0EFF               	movlw	255
 14701  005594  6E04               	movwf	(??_isdigit+1)^0,c
 14702  005596  C001  F005         	movff	isdigit@c,??_isdigit+2
 14703  00559A  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 14704  00559E  5003               	movf	??_isdigit^0,w,c
 14705  0055A0  2605               	addwf	(??_isdigit+2)^0,f,c
 14706  0055A2  5004               	movf	(??_isdigit+1)^0,w,c
 14707  0055A4  2206               	addwfc	(??_isdigit+3)^0,f,c
 14708  0055A6  5006               	movf	(??_isdigit+3)^0,w,c
 14709  0055A8  E10A               	bnz	u5560
 14710  0055AA  0E0A               	movlw	10
 14711  0055AC  5C05               	subwf	(??_isdigit+2)^0,w,c
 14712  0055AE  A0D8               	btfss	status,0,c
 14713  0055B0  EFDC  F02A         	goto	u5561
 14714  0055B4  EFDF  F02A         	goto	u5560
 14715  0055B8                     u5561:
 14716  0055B8  0E01               	movlw	1
 14717  0055BA  EFE0  F02A         	goto	u5570
 14718  0055BE                     u5560:
 14719  0055BE  0E00               	movlw	0
 14720  0055C0                     u5570:
 14721  0055C0  6E01               	movwf	?_isdigit^0,c
 14722  0055C2  6A02               	clrf	(?_isdigit+1)^0,c
 14723  0055C4  0012               	return		;funcret
 14724  0055C6                     __end_of_isdigit:
 14725                           	callstack 0
 14726                           
 14727 ;; *************** function ___wmul *****************
 14728 ;; Defined at:
 14729 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 14730 ;; Parameters:    Size  Location     Type
 14731 ;;  multiplier      2    0[COMRAM] unsigned int 
 14732 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14733 ;; Auto vars:     Size  Location     Type
 14734 ;;  product         2    4[COMRAM] unsigned int 
 14735 ;; Return value:  Size  Location     Type
 14736 ;;                  2    0[COMRAM] unsigned int 
 14737 ;; Registers used:
 14738 ;;		wreg, status,2, status,0, prodl, prodh
 14739 ;; Tracked objects:
 14740 ;;		On entry : 0/0
 14741 ;;		On exit  : 0/0
 14742 ;;		Unchanged: 0/0
 14743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14744 ;;      Params:         4       0       0       0       0       0       0
 14745 ;;      Locals:         2       0       0       0       0       0       0
 14746 ;;      Temps:          0       0       0       0       0       0       0
 14747 ;;      Totals:         6       0       0       0       0       0       0
 14748 ;;Total ram usage:        6 bytes
 14749 ;; Hardware stack levels used:    1
 14750 ;; Hardware stack levels required when called:    1
 14751 ;; This function calls:
 14752 ;;		Nothing
 14753 ;; This function is called by:
 14754 ;;		_atoi
 14755 ;; This function uses a non-reentrant model
 14756 ;;
 14757                           
 14758                           	psect	text62
 14759  00571C                     __ptext62:
 14760                           	callstack 0
 14761  00571C                     ___wmul:
 14762                           	callstack 22
 14763  00571C  5001               	movf	___wmul@multiplier^0,w,c
 14764  00571E  0203               	mulwf	___wmul@multiplicand^0,c
 14765  005720  CFF3 F005          	movff	prodl,___wmul@product
 14766  005724  CFF4 F006          	movff	prodh,___wmul@product+1
 14767  005728  5001               	movf	___wmul@multiplier^0,w,c
 14768  00572A  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14769  00572C  50F3               	movf	243,w,c
 14770  00572E  2606               	addwf	(___wmul@product+1)^0,f,c
 14771  005730  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14772  005732  0203               	mulwf	___wmul@multiplicand^0,c
 14773  005734  50F3               	movf	243,w,c
 14774  005736  2606               	addwf	(___wmul@product+1)^0,f,c
 14775  005738  C005  F001         	movff	___wmul@product,?___wmul
 14776  00573C  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14777  005740  0012               	return		;funcret
 14778  005742                     __end_of___wmul:
 14779                           	callstack 0
 14780                           
 14781 ;; *************** function _eepromWrite *****************
 14782 ;; Defined at:
 14783 ;;		line 69 in file "fs_eeprom.c"
 14784 ;; Parameters:    Size  Location     Type
 14785 ;;  address         1    wreg     unsigned char 
 14786 ;;  data            1    0[COMRAM] unsigned char 
 14787 ;; Auto vars:     Size  Location     Type
 14788 ;;  address         1    1[COMRAM] unsigned char 
 14789 ;; Return value:  Size  Location     Type
 14790 ;;                  1    wreg      void 
 14791 ;; Registers used:
 14792 ;;		wreg, status,2
 14793 ;; Tracked objects:
 14794 ;;		On entry : 0/0
 14795 ;;		On exit  : 0/0
 14796 ;;		Unchanged: 0/0
 14797 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14798 ;;      Params:         1       0       0       0       0       0       0
 14799 ;;      Locals:         1       0       0       0       0       0       0
 14800 ;;      Temps:          0       0       0       0       0       0       0
 14801 ;;      Totals:         2       0       0       0       0       0       0
 14802 ;;Total ram usage:        2 bytes
 14803 ;; Hardware stack levels used:    1
 14804 ;; Hardware stack levels required when called:    1
 14805 ;; This function calls:
 14806 ;;		Nothing
 14807 ;; This function is called by:
 14808 ;;		_speedLimitSettingMenu
 14809 ;;		_stopTimeSettingMenu
 14810 ;;		_driverTimeSettingMenu
 14811 ;; This function uses a non-reentrant model
 14812 ;;
 14813                           
 14814                           	psect	text63
 14815  00569E                     __ptext63:
 14816                           	callstack 0
 14817  00569E                     _eepromWrite:
 14818                           	callstack 26
 14819                           
 14820                           ;incstack = 0
 14821                           ;eepromWrite@address stored from wreg
 14822  00569E  6E02               	movwf	eepromWrite@address^0,c
 14823  0056A0                     
 14824                           ;fs_eeprom.c: 69: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 70: {;fs_
      +                          eeprom.c: 73:     EEADR = (uint8_t)address;
 14825  0056A0  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14826  0056A4                     
 14827                           ;fs_eeprom.c: 75:     EEDATA = data;
 14828  0056A4  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14829  0056A8                     
 14830                           ;fs_eeprom.c: 76:     EECON1bits.EEPGD = 0;
 14831  0056A8  9EA6               	bcf	166,7,c	;volsfr
 14832  0056AA                     
 14833                           ;fs_eeprom.c: 77:     EECON1bits.CFGS = 0;
 14834  0056AA  9CA6               	bcf	166,6,c	;volsfr
 14835  0056AC                     
 14836                           ;fs_eeprom.c: 78:     EECON1bits.WREN = 1;
 14837  0056AC  84A6               	bsf	166,2,c	;volsfr
 14838  0056AE                     
 14839                           ;fs_eeprom.c: 82:     EECON2 = 0x55;
 14840  0056AE  0E55               	movlw	85
 14841  0056B0  6EA7               	movwf	167,c	;volsfr
 14842  0056B2                     
 14843                           ;fs_eeprom.c: 83:     EECON2 = 0xAA;
 14844  0056B2  0EAA               	movlw	170
 14845  0056B4  6EA7               	movwf	167,c	;volsfr
 14846  0056B6                     
 14847                           ;fs_eeprom.c: 84:     EECON1bits.WR = 1;
 14848  0056B6  82A6               	bsf	166,1,c	;volsfr
 14849  0056B8                     l98:
 14850                           
 14851                           ;fs_eeprom.c: 87:     while(PIR2bits.EEIF == 0)
 14852  0056B8  A8A1               	btfss	161,4,c	;volatile
 14853  0056BA  EF61  F02B         	goto	u6871
 14854  0056BE  EF63  F02B         	goto	u6870
 14855  0056C2                     u6871:
 14856  0056C2  EF5C  F02B         	goto	l98
 14857  0056C6                     u6870:
 14858  0056C6                     
 14859                           ;fs_eeprom.c: 92:     PIR2bits.EEIF = 0;
 14860  0056C6  98A1               	bcf	161,4,c	;volatile
 14861                           
 14862                           ;fs_eeprom.c: 93:     EECON1bits.WREN = 0;
 14863  0056C8  94A6               	bcf	166,2,c	;volsfr
 14864  0056CA  0012               	return		;funcret
 14865  0056CC                     __end_of_eepromWrite:
 14866                           	callstack 0
 14867                           
 14868 ;; *************** function _Lcd_Write_String *****************
 14869 ;; Defined at:
 14870 ;;		line 176 in file "fs_lcd.c"
 14871 ;; Parameters:    Size  Location     Type
 14872 ;;  a               2    4[COMRAM] PTR unsigned char 
 14873 ;;		 -> STR_17(17), driverTimeSettingMenu@textCursor2(16), STR_15(17), stopTimeSettingMenu@textCursor2(16), 
 14874 ;;		 -> STR_13(17), speedLimitSettingMenu@textCursor2(16), STR_11(17), STR_9(17), 
 14875 ;;		 -> secretMenu@textCursor2(16), STR_7(17), pauseMenu@textCursor2(16), STR_5(17), 
 14876 ;;		 -> stopMenu@textCursor2(16), STR_3(17), mainMenu@textCursor2(16), STR_2(17), 
 14877 ;;		 -> STR_1(16), 
 14878 ;; Auto vars:     Size  Location     Type
 14879 ;;  i               2    8[COMRAM] int 
 14880 ;; Return value:  Size  Location     Type
 14881 ;;                  1    wreg      void 
 14882 ;; Registers used:
 14883 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14884 ;; Tracked objects:
 14885 ;;		On entry : 0/0
 14886 ;;		On exit  : 0/0
 14887 ;;		Unchanged: 0/0
 14888 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14889 ;;      Params:         2       0       0       0       0       0       0
 14890 ;;      Locals:         2       0       0       0       0       0       0
 14891 ;;      Temps:          2       0       0       0       0       0       0
 14892 ;;      Totals:         6       0       0       0       0       0       0
 14893 ;;Total ram usage:        6 bytes
 14894 ;; Hardware stack levels used:    1
 14895 ;; Hardware stack levels required when called:    3
 14896 ;; This function calls:
 14897 ;;		_Lcd_Write_Char
 14898 ;; This function is called by:
 14899 ;;		_openLCD_Script
 14900 ;;		_mainMenu
 14901 ;;		_stopMenu
 14902 ;;		_pauseMenu
 14903 ;;		_secretMenu
 14904 ;;		_speedLimitSettingMenu
 14905 ;;		_stopTimeSettingMenu
 14906 ;;		_driverTimeSettingMenu
 14907 ;; This function uses a non-reentrant model
 14908 ;;
 14909                           
 14910                           	psect	text64
 14911  004DDE                     __ptext64:
 14912                           	callstack 0
 14913  004DDE                     _Lcd_Write_String:
 14914                           	callstack 26
 14915  004DDE                     
 14916                           ;fs_lcd.c: 176: void Lcd_Write_String(char *a);fs_lcd.c: 177: {;fs_lcd.c: 178:    int i;
      +                          ;fs_lcd.c: 179:    for(i=0;a[i]!='\0';i++)
 14917  004DDE  0E00               	movlw	0
 14918  004DE0  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14919  004DE2  0E00               	movlw	0
 14920  004DE4  6E09               	movwf	Lcd_Write_String@i^0,c
 14921  004DE6  EF0F  F027         	goto	l5888
 14922  004DEA                     l5884:
 14923                           
 14924                           ;fs_lcd.c: 180:    Lcd_Write_Char(a[i]);
 14925  004DEA  5009               	movf	Lcd_Write_String@i^0,w,c
 14926  004DEC  2405               	addwf	Lcd_Write_String@a^0,w,c
 14927  004DEE  6E07               	movwf	??_Lcd_Write_String^0,c
 14928  004DF0  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14929  004DF2  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14930  004DF4  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14931  004DF6  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14932  004DFA  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14933  004DFE  6AF8               	clrf	tblptru,c
 14934  004E00  0E05               	movlw	(high __ramtop+-1)
 14935  004E02  64F7               	cpfsgt	tblptrh,c
 14936  004E04  D003               	bra	u6907
 14937  004E06  0008               	tblrd		*
 14938  004E08  50F5               	movf	tablat,w,c
 14939  004E0A  D005               	bra	u6900
 14940  004E0C                     u6907:
 14941  004E0C  CFF6 FFE1          	movff	tblptrl,fsr1l
 14942  004E10  CFF7 FFE2          	movff	tblptrh,fsr1h
 14943  004E14  50E7               	movf	indf1,w,c
 14944  004E16                     u6900:
 14945  004E16  ECE3  F02A         	call	_Lcd_Write_Char
 14946  004E1A  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14947  004E1C  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14948  004E1E                     l5888:
 14949  004E1E  5009               	movf	Lcd_Write_String@i^0,w,c
 14950  004E20  2405               	addwf	Lcd_Write_String@a^0,w,c
 14951  004E22  6E07               	movwf	??_Lcd_Write_String^0,c
 14952  004E24  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14953  004E26  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14954  004E28  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14955  004E2A  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14956  004E2E  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14957  004E32  6AF8               	clrf	tblptru,c
 14958  004E34  0E05               	movlw	(high __ramtop+-1)
 14959  004E36  64F7               	cpfsgt	tblptrh,c
 14960  004E38  D003               	bra	u6917
 14961  004E3A  0008               	tblrd		*
 14962  004E3C  50F5               	movf	tablat,w,c
 14963  004E3E  D005               	bra	u6910
 14964  004E40                     u6917:
 14965  004E40  CFF6 FFE1          	movff	tblptrl,fsr1l
 14966  004E44  CFF7 FFE2          	movff	tblptrh,fsr1h
 14967  004E48  50E7               	movf	indf1,w,c
 14968  004E4A                     u6910:
 14969  004E4A  0900               	iorlw	0
 14970  004E4C  A4D8               	btfss	status,2,c
 14971  004E4E  EF2B  F027         	goto	u6921
 14972  004E52  EF2D  F027         	goto	u6920
 14973  004E56                     u6921:
 14974  004E56  EFF5  F026         	goto	l5884
 14975  004E5A                     u6920:
 14976  004E5A  0012               	return		;funcret
 14977  004E5C                     __end_of_Lcd_Write_String:
 14978                           	callstack 0
 14979                           
 14980 ;; *************** function _Lcd_Write_Char *****************
 14981 ;; Defined at:
 14982 ;;		line 153 in file "fs_lcd.c"
 14983 ;; Parameters:    Size  Location     Type
 14984 ;;  a               1    wreg     unsigned char 
 14985 ;; Auto vars:     Size  Location     Type
 14986 ;;  a               1    3[COMRAM] unsigned char 
 14987 ;;  y               1    2[COMRAM] unsigned char 
 14988 ;;  temp            1    1[COMRAM] unsigned char 
 14989 ;; Return value:  Size  Location     Type
 14990 ;;                  1    wreg      void 
 14991 ;; Registers used:
 14992 ;;		wreg, status,2, status,0, cstack
 14993 ;; Tracked objects:
 14994 ;;		On entry : 0/0
 14995 ;;		On exit  : 0/0
 14996 ;;		Unchanged: 0/0
 14997 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14998 ;;      Params:         0       0       0       0       0       0       0
 14999 ;;      Locals:         3       0       0       0       0       0       0
 15000 ;;      Temps:          0       0       0       0       0       0       0
 15001 ;;      Totals:         3       0       0       0       0       0       0
 15002 ;;Total ram usage:        3 bytes
 15003 ;; Hardware stack levels used:    1
 15004 ;; Hardware stack levels required when called:    2
 15005 ;; This function calls:
 15006 ;;		_Lcd_Port
 15007 ;; This function is called by:
 15008 ;;		_Lcd_Write_String
 15009 ;; This function uses a non-reentrant model
 15010 ;;
 15011                           
 15012                           	psect	text65
 15013  0055C6                     __ptext65:
 15014                           	callstack 0
 15015  0055C6                     _Lcd_Write_Char:
 15016                           	callstack 26
 15017                           
 15018                           ;incstack = 0
 15019                           ;Lcd_Write_Char@a stored from wreg
 15020  0055C6  6E04               	movwf	Lcd_Write_Char@a^0,c
 15021  0055C8                     
 15022                           ;fs_lcd.c: 153: void Lcd_Write_Char(char a);fs_lcd.c: 154: {;fs_lcd.c: 155:    char temp
      +                          ,y;;fs_lcd.c: 156:    temp = a&0x0F;
 15023  0055C8  5004               	movf	Lcd_Write_Char@a^0,w,c
 15024  0055CA  0B0F               	andlw	15
 15025  0055CC  6E02               	movwf	Lcd_Write_Char@temp^0,c
 15026                           
 15027                           ;fs_lcd.c: 157:    y = a&0xF0;
 15028  0055CE  5004               	movf	Lcd_Write_Char@a^0,w,c
 15029  0055D0  0BF0               	andlw	240
 15030  0055D2  6E03               	movwf	Lcd_Write_Char@y^0,c
 15031  0055D4                     
 15032                           ;fs_lcd.c: 158:    PORTDbits.RD6 = 1;
 15033  0055D4  8C83               	bsf	131,6,c	;volatile
 15034  0055D6                     
 15035                           ;fs_lcd.c: 159:    Lcd_Port(y>>4);
 15036  0055D6  3803               	swapf	Lcd_Write_Char@y^0,w,c
 15037  0055D8  0B0F               	andlw	15
 15038  0055DA  ECDE  F028         	call	_Lcd_Port
 15039  0055DE                     
 15040                           ;fs_lcd.c: 160:    PORTDbits.RD7 = 1;
 15041  0055DE  8E83               	bsf	131,7,c	;volatile
 15042  0055E0                     
 15043                           ;fs_lcd.c: 161:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 15044  0055E0  0ED5               	movlw	213
 15045  0055E2                     u7997:
 15046  0055E2  2EE8               	decfsz	wreg,f,c
 15047  0055E4  D7FE               	bra	u7997
 15048  0055E6  F000               	nop	
 15049  0055E8                     
 15050                           ;fs_lcd.c: 162:    PORTDbits.RD7 = 0;
 15051  0055E8  9E83               	bcf	131,7,c	;volatile
 15052  0055EA                     
 15053                           ;fs_lcd.c: 163:    Lcd_Port(temp);
 15054  0055EA  5002               	movf	Lcd_Write_Char@temp^0,w,c
 15055  0055EC  ECDE  F028         	call	_Lcd_Port
 15056  0055F0                     
 15057                           ;fs_lcd.c: 164:    PORTDbits.RD7 = 1;
 15058  0055F0  8E83               	bsf	131,7,c	;volatile
 15059  0055F2                     
 15060                           ;fs_lcd.c: 165:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 15061  0055F2  0ED5               	movlw	213
 15062  0055F4                     u8007:
 15063  0055F4  2EE8               	decfsz	wreg,f,c
 15064  0055F6  D7FE               	bra	u8007
 15065  0055F8  F000               	nop	
 15066  0055FA                     
 15067                           ;fs_lcd.c: 166:    PORTDbits.RD7 = 0;
 15068  0055FA  9E83               	bcf	131,7,c	;volatile
 15069  0055FC  0012               	return		;funcret
 15070  0055FE                     __end_of_Lcd_Write_Char:
 15071                           	callstack 0
 15072                           
 15073 ;; *************** function _Lcd_Set_Cursor *****************
 15074 ;; Defined at:
 15075 ;;		line 83 in file "fs_lcd.c"
 15076 ;; Parameters:    Size  Location     Type
 15077 ;;  a               1    wreg     unsigned char 
 15078 ;;  b               1    3[COMRAM] unsigned char 
 15079 ;; Auto vars:     Size  Location     Type
 15080 ;;  a               1    4[COMRAM] unsigned char 
 15081 ;;  temp            1    7[COMRAM] unsigned char 
 15082 ;;  y               1    6[COMRAM] unsigned char 
 15083 ;;  z               1    5[COMRAM] unsigned char 
 15084 ;; Return value:  Size  Location     Type
 15085 ;;                  1    wreg      void 
 15086 ;; Registers used:
 15087 ;;		wreg, status,2, status,0, cstack
 15088 ;; Tracked objects:
 15089 ;;		On entry : 0/0
 15090 ;;		On exit  : 0/0
 15091 ;;		Unchanged: 0/0
 15092 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15093 ;;      Params:         1       0       0       0       0       0       0
 15094 ;;      Locals:         4       0       0       0       0       0       0
 15095 ;;      Temps:          0       0       0       0       0       0       0
 15096 ;;      Totals:         5       0       0       0       0       0       0
 15097 ;;Total ram usage:        5 bytes
 15098 ;; Hardware stack levels used:    1
 15099 ;; Hardware stack levels required when called:    3
 15100 ;; This function calls:
 15101 ;;		_Lcd_Cmd
 15102 ;; This function is called by:
 15103 ;;		_openLCD_Script
 15104 ;;		_mainMenu
 15105 ;;		_stopMenu
 15106 ;;		_pauseMenu
 15107 ;;		_secretMenu
 15108 ;;		_speedLimitSettingMenu
 15109 ;;		_stopTimeSettingMenu
 15110 ;;		_driverTimeSettingMenu
 15111 ;; This function uses a non-reentrant model
 15112 ;;
 15113                           
 15114                           	psect	text66
 15115  00509A                     __ptext66:
 15116                           	callstack 0
 15117  00509A                     _Lcd_Set_Cursor:
 15118                           	callstack 26
 15119                           
 15120                           ;incstack = 0
 15121                           ;Lcd_Set_Cursor@a stored from wreg
 15122  00509A  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 15123  00509C                     
 15124                           ;fs_lcd.c: 83: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 84: {;fs_lcd.c: 85:    char
      +                           temp,z,y;;fs_lcd.c: 86:    if(a == 1)
 15125  00509C  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 15126  00509E  A4D8               	btfss	status,2,c
 15127  0050A0  EF54  F028         	goto	u6881
 15128  0050A4  EF56  F028         	goto	u6880
 15129  0050A8                     u6881:
 15130  0050A8  EF67  F028         	goto	l5874
 15131  0050AC                     u6880:
 15132  0050AC                     
 15133                           ;fs_lcd.c: 87:    {;fs_lcd.c: 88:      temp = 0x80 + b - 1;
 15134  0050AC  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 15135  0050AE  0F7F               	addlw	127
 15136  0050B0  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 15137                           
 15138                           ;fs_lcd.c: 89:       z = temp>>4;
 15139  0050B2  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 15140  0050B4  0B0F               	andlw	15
 15141  0050B6  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 15142                           
 15143                           ;fs_lcd.c: 90:       y = temp & 0x0F;
 15144  0050B8  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 15145  0050BA  0B0F               	andlw	15
 15146  0050BC  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 15147  0050BE                     
 15148                           ;fs_lcd.c: 91:       Lcd_Cmd(z);
 15149  0050BE  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 15150  0050C0  ECB0  F02B         	call	_Lcd_Cmd
 15151  0050C4                     
 15152                           ;fs_lcd.c: 92:       Lcd_Cmd(y);
 15153  0050C4  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 15154  0050C6  ECB0  F02B         	call	_Lcd_Cmd
 15155                           
 15156                           ;fs_lcd.c: 93:    }
 15157  0050CA  EF7F  F028         	goto	l172
 15158  0050CE                     l5874:
 15159  0050CE  0E02               	movlw	2
 15160  0050D0  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 15161  0050D2  A4D8               	btfss	status,2,c
 15162  0050D4  EF6E  F028         	goto	u6891
 15163  0050D8  EF70  F028         	goto	u6890
 15164  0050DC                     u6891:
 15165  0050DC  EF7F  F028         	goto	l172
 15166  0050E0                     u6890:
 15167  0050E0                     
 15168                           ;fs_lcd.c: 95:    {;fs_lcd.c: 96:       temp = 0xC0 + b - 1;
 15169  0050E0  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 15170  0050E2  0FBF               	addlw	191
 15171  0050E4  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 15172                           
 15173                           ;fs_lcd.c: 97:       z = temp>>4;
 15174  0050E6  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 15175  0050E8  0B0F               	andlw	15
 15176  0050EA  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 15177                           
 15178                           ;fs_lcd.c: 98:       y = temp & 0x0F;
 15179  0050EC  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 15180  0050EE  0B0F               	andlw	15
 15181  0050F0  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 15182  0050F2                     
 15183                           ;fs_lcd.c: 99:       Lcd_Cmd(z);
 15184  0050F2  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 15185  0050F4  ECB0  F02B         	call	_Lcd_Cmd
 15186  0050F8                     
 15187                           ;fs_lcd.c: 100:       Lcd_Cmd(y);
 15188  0050F8  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 15189  0050FA  ECB0  F02B         	call	_Lcd_Cmd
 15190  0050FE                     l172:
 15191  0050FE  0012               	return		;funcret
 15192  005100                     __end_of_Lcd_Set_Cursor:
 15193                           	callstack 0
 15194                           
 15195 ;; *************** function _buttonControlFlags *****************
 15196 ;; Defined at:
 15197 ;;		line 76 in file "fs_menu_controller.c"
 15198 ;; Parameters:    Size  Location     Type
 15199 ;;		None
 15200 ;; Auto vars:     Size  Location     Type
 15201 ;;		None
 15202 ;; Return value:  Size  Location     Type
 15203 ;;                  1    wreg      void 
 15204 ;; Registers used:
 15205 ;;		wreg, status,2, status,0
 15206 ;; Tracked objects:
 15207 ;;		On entry : 0/0
 15208 ;;		On exit  : 0/0
 15209 ;;		Unchanged: 0/0
 15210 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15211 ;;      Params:         0       0       0       0       0       0       0
 15212 ;;      Locals:         0       0       0       0       0       0       0
 15213 ;;      Temps:          0       0       0       0       0       0       0
 15214 ;;      Totals:         0       0       0       0       0       0       0
 15215 ;;Total ram usage:        0 bytes
 15216 ;; Hardware stack levels used:    1
 15217 ;; Hardware stack levels required when called:    1
 15218 ;; This function calls:
 15219 ;;		Nothing
 15220 ;; This function is called by:
 15221 ;;		_menuControl
 15222 ;; This function uses a non-reentrant model
 15223 ;;
 15224                           
 15225                           	psect	text67
 15226  0031CE                     __ptext67:
 15227                           	callstack 0
 15228  0031CE                     _buttonControlFlags:
 15229                           	callstack 28
 15230  0031CE                     
 15231                           ;fs_menu_controller.c: 79:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 15232  0031CE  0101               	movlb	1	; () banked
 15233  0031D0  519D               	movf	_button_bounce_controller& (0+255),w,b
 15234  0031D2  A4D8               	btfss	status,2,c
 15235  0031D4  EFEE  F018         	goto	u7561
 15236  0031D8  EFF0  F018         	goto	u7560
 15237  0031DC                     u7561:
 15238  0031DC  EFFB  F018         	goto	l6286
 15239  0031E0                     u7560:
 15240  0031E0                     
 15241                           ; BSR set to: 1
 15242  0031E0  BE81               	btfsc	129,7,c	;volatile
 15243  0031E2  EFF5  F018         	goto	u7571
 15244  0031E6  EFF7  F018         	goto	u7570
 15245  0031EA                     u7571:
 15246  0031EA  EFFB  F018         	goto	l6286
 15247  0031EE                     u7570:
 15248  0031EE                     
 15249                           ; BSR set to: 1
 15250                           ;fs_menu_controller.c: 80:     {;fs_menu_controller.c: 81:         button_bounce_control
      +                          ler.menu = 1;
 15251  0031EE  0E01               	movlw	1
 15252  0031F0  6F9D               	movwf	_button_bounce_controller& (0+255),b
 15253                           
 15254                           ;fs_menu_controller.c: 82:         menu_flags.menu_input_flag = 1;
 15255  0031F2  0E01               	movlw	1
 15256  0031F4  6F97               	movwf	_menu_flags& (0+255),b
 15257  0031F6                     l6286:
 15258                           
 15259                           ; BSR set to: 1
 15260                           ;fs_menu_controller.c: 85:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 15261  0031F6  AE81               	btfss	129,7,c	;volatile
 15262  0031F8  EF00  F019         	goto	u7581
 15263  0031FC  EF02  F019         	goto	u7580
 15264  003200                     u7581:
 15265  003200  EF0E  F019         	goto	l411
 15266  003204                     u7580:
 15267  003204                     
 15268                           ; BSR set to: 1
 15269  003204  059D               	decf	_button_bounce_controller& (0+255),w,b
 15270  003206  A4D8               	btfss	status,2,c
 15271  003208  EF08  F019         	goto	u7591
 15272  00320C  EF0A  F019         	goto	u7590
 15273  003210                     u7591:
 15274  003210  EF0E  F019         	goto	l411
 15275  003214                     u7590:
 15276  003214                     
 15277                           ; BSR set to: 1
 15278                           ;fs_menu_controller.c: 86:     {;fs_menu_controller.c: 87:         button_bounce_control
      +                          ler.menu = 0;
 15279  003214  0E00               	movlw	0
 15280  003216  6F9D               	movwf	_button_bounce_controller& (0+255),b
 15281                           
 15282                           ;fs_menu_controller.c: 88:         menu_flags.menu_input_flag = 0;
 15283  003218  0E00               	movlw	0
 15284  00321A  6F97               	movwf	_menu_flags& (0+255),b
 15285  00321C                     l411:
 15286                           
 15287                           ; BSR set to: 1
 15288                           ;fs_menu_controller.c: 92:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 15289  00321C  51A0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 15290  00321E  A4D8               	btfss	status,2,c
 15291  003220  EF14  F019         	goto	u7601
 15292  003224  EF16  F019         	goto	u7600
 15293  003228                     u7601:
 15294  003228  EF21  F019         	goto	l6296
 15295  00322C                     u7600:
 15296  00322C                     
 15297                           ; BSR set to: 1
 15298  00322C  B483               	btfsc	131,2,c	;volatile
 15299  00322E  EF1B  F019         	goto	u7611
 15300  003232  EF1D  F019         	goto	u7610
 15301  003236                     u7611:
 15302  003236  EF21  F019         	goto	l6296
 15303  00323A                     u7610:
 15304  00323A                     
 15305                           ; BSR set to: 1
 15306                           ;fs_menu_controller.c: 93:     {;fs_menu_controller.c: 94:         button_bounce_control
      +                          ler.pause = 1;
 15307  00323A  0E01               	movlw	1
 15308  00323C  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15309                           
 15310                           ;fs_menu_controller.c: 95:         menu_flags.menu_pause_flag = 1;
 15311  00323E  0E01               	movlw	1
 15312  003240  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 15313  003242                     l6296:
 15314                           
 15315                           ; BSR set to: 1
 15316                           ;fs_menu_controller.c: 97:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 15317  003242  A483               	btfss	131,2,c	;volatile
 15318  003244  EF26  F019         	goto	u7621
 15319  003248  EF28  F019         	goto	u7620
 15320  00324C                     u7621:
 15321  00324C  EF34  F019         	goto	l413
 15322  003250                     u7620:
 15323  003250                     
 15324                           ; BSR set to: 1
 15325  003250  05A0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 15326  003252  A4D8               	btfss	status,2,c
 15327  003254  EF2E  F019         	goto	u7631
 15328  003258  EF30  F019         	goto	u7630
 15329  00325C                     u7631:
 15330  00325C  EF34  F019         	goto	l413
 15331  003260                     u7630:
 15332  003260                     
 15333                           ; BSR set to: 1
 15334                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 0;
 15335  003260  0E00               	movlw	0
 15336  003262  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15337                           
 15338                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 0;
 15339  003264  0E00               	movlw	0
 15340  003266  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 15341  003268                     l413:
 15342                           
 15343                           ; BSR set to: 1
 15344                           ;fs_menu_controller.c: 104:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 15345  003268  519E               	movf	(_button_bounce_controller+1)& (0+255),w,b
 15346  00326A  A4D8               	btfss	status,2,c
 15347  00326C  EF3A  F019         	goto	u7641
 15348  003270  EF3C  F019         	goto	u7640
 15349  003274                     u7641:
 15350  003274  EF47  F019         	goto	l6306
 15351  003278                     u7640:
 15352  003278                     
 15353                           ; BSR set to: 1
 15354  003278  B083               	btfsc	131,0,c	;volatile
 15355  00327A  EF41  F019         	goto	u7651
 15356  00327E  EF43  F019         	goto	u7650
 15357  003282                     u7651:
 15358  003282  EF47  F019         	goto	l6306
 15359  003286                     u7650:
 15360  003286                     
 15361                           ; BSR set to: 1
 15362                           ;fs_menu_controller.c: 105:     {;fs_menu_controller.c: 106:         button_bounce_contr
      +                          oller.start = 1;
 15363  003286  0E01               	movlw	1
 15364  003288  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 15365                           
 15366                           ;fs_menu_controller.c: 107:         menu_flags.menu_start_flag = 1;
 15367  00328A  0E01               	movlw	1
 15368  00328C  6F98               	movwf	(_menu_flags+1)& (0+255),b
 15369  00328E                     l6306:
 15370                           
 15371                           ; BSR set to: 1
 15372                           ;fs_menu_controller.c: 109:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 15373  00328E  A083               	btfss	131,0,c	;volatile
 15374  003290  EF4C  F019         	goto	u7661
 15375  003294  EF4E  F019         	goto	u7660
 15376  003298                     u7661:
 15377  003298  EF5A  F019         	goto	l415
 15378  00329C                     u7660:
 15379  00329C                     
 15380                           ; BSR set to: 1
 15381  00329C  059E               	decf	(_button_bounce_controller+1)& (0+255),w,b
 15382  00329E  A4D8               	btfss	status,2,c
 15383  0032A0  EF54  F019         	goto	u7671
 15384  0032A4  EF56  F019         	goto	u7670
 15385  0032A8                     u7671:
 15386  0032A8  EF5A  F019         	goto	l415
 15387  0032AC                     u7670:
 15388  0032AC                     
 15389                           ; BSR set to: 1
 15390                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 0;
 15391  0032AC  0E00               	movlw	0
 15392  0032AE  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 15393                           
 15394                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 0;
 15395  0032B0  0E00               	movlw	0
 15396  0032B2  6F98               	movwf	(_menu_flags+1)& (0+255),b
 15397  0032B4                     l415:
 15398                           
 15399                           ; BSR set to: 1
 15400                           ;fs_menu_controller.c: 116:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 15401  0032B4  519F               	movf	(_button_bounce_controller+2)& (0+255),w,b
 15402  0032B6  A4D8               	btfss	status,2,c
 15403  0032B8  EF60  F019         	goto	u7681
 15404  0032BC  EF62  F019         	goto	u7680
 15405  0032C0                     u7681:
 15406  0032C0  EF6D  F019         	goto	l6316
 15407  0032C4                     u7680:
 15408  0032C4                     
 15409                           ; BSR set to: 1
 15410  0032C4  B283               	btfsc	131,1,c	;volatile
 15411  0032C6  EF67  F019         	goto	u7691
 15412  0032CA  EF69  F019         	goto	u7690
 15413  0032CE                     u7691:
 15414  0032CE  EF6D  F019         	goto	l6316
 15415  0032D2                     u7690:
 15416  0032D2                     
 15417                           ; BSR set to: 1
 15418                           ;fs_menu_controller.c: 117:     {;fs_menu_controller.c: 118:         button_bounce_contr
      +                          oller.stop = 1;
 15419  0032D2  0E01               	movlw	1
 15420  0032D4  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 15421                           
 15422                           ;fs_menu_controller.c: 119:         menu_flags.menu_stop_flag = 1;
 15423  0032D6  0E01               	movlw	1
 15424  0032D8  6F99               	movwf	(_menu_flags+2)& (0+255),b
 15425  0032DA                     l6316:
 15426                           
 15427                           ; BSR set to: 1
 15428                           ;fs_menu_controller.c: 121:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 15429  0032DA  A283               	btfss	131,1,c	;volatile
 15430  0032DC  EF72  F019         	goto	u7701
 15431  0032E0  EF74  F019         	goto	u7700
 15432  0032E4                     u7701:
 15433  0032E4  EF80  F019         	goto	l417
 15434  0032E8                     u7700:
 15435  0032E8                     
 15436                           ; BSR set to: 1
 15437  0032E8  059F               	decf	(_button_bounce_controller+2)& (0+255),w,b
 15438  0032EA  A4D8               	btfss	status,2,c
 15439  0032EC  EF7A  F019         	goto	u7711
 15440  0032F0  EF7C  F019         	goto	u7710
 15441  0032F4                     u7711:
 15442  0032F4  EF80  F019         	goto	l417
 15443  0032F8                     u7710:
 15444  0032F8                     
 15445                           ; BSR set to: 1
 15446                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 0;
 15447  0032F8  0E00               	movlw	0
 15448  0032FA  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 15449                           
 15450                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 0;
 15451  0032FC  0E00               	movlw	0
 15452  0032FE  6F99               	movwf	(_menu_flags+2)& (0+255),b
 15453  003300                     l417:
 15454                           
 15455                           ; BSR set to: 1
 15456                           ;fs_menu_controller.c: 128:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 15457  003300  51A2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 15458  003302  A4D8               	btfss	status,2,c
 15459  003304  EF86  F019         	goto	u7721
 15460  003308  EF88  F019         	goto	u7720
 15461  00330C                     u7721:
 15462  00330C  EF93  F019         	goto	l6326
 15463  003310                     u7720:
 15464  003310                     
 15465                           ; BSR set to: 1
 15466  003310  BC81               	btfsc	129,6,c	;volatile
 15467  003312  EF8D  F019         	goto	u7731
 15468  003316  EF8F  F019         	goto	u7730
 15469  00331A                     u7731:
 15470  00331A  EF93  F019         	goto	l6326
 15471  00331E                     u7730:
 15472  00331E                     
 15473                           ; BSR set to: 1
 15474                           ;fs_menu_controller.c: 129:     {;fs_menu_controller.c: 130:         button_bounce_contr
      +                          oller.increase = 1;
 15475  00331E  0E01               	movlw	1
 15476  003320  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15477                           
 15478                           ;fs_menu_controller.c: 131:         menu_flags.menu_increase_flag = 1;
 15479  003322  0E01               	movlw	1
 15480  003324  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 15481  003326                     l6326:
 15482                           
 15483                           ; BSR set to: 1
 15484                           ;fs_menu_controller.c: 133:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 15485  003326  AC81               	btfss	129,6,c	;volatile
 15486  003328  EF98  F019         	goto	u7741
 15487  00332C  EF9A  F019         	goto	u7740
 15488  003330                     u7741:
 15489  003330  EFA6  F019         	goto	l419
 15490  003334                     u7740:
 15491  003334                     
 15492                           ; BSR set to: 1
 15493  003334  05A2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 15494  003336  A4D8               	btfss	status,2,c
 15495  003338  EFA0  F019         	goto	u7751
 15496  00333C  EFA2  F019         	goto	u7750
 15497  003340                     u7751:
 15498  003340  EFA6  F019         	goto	l419
 15499  003344                     u7750:
 15500  003344                     
 15501                           ; BSR set to: 1
 15502                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 15503  003344  0E00               	movlw	0
 15504  003346  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15505                           
 15506                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 15507  003348  0E00               	movlw	0
 15508  00334A  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 15509  00334C                     l419:
 15510                           
 15511                           ; BSR set to: 1
 15512                           ;fs_menu_controller.c: 140:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 15513  00334C  51A1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 15514  00334E  A4D8               	btfss	status,2,c
 15515  003350  EFAC  F019         	goto	u7761
 15516  003354  EFAE  F019         	goto	u7760
 15517  003358                     u7761:
 15518  003358  EFB9  F019         	goto	l6336
 15519  00335C                     u7760:
 15520  00335C                     
 15521                           ; BSR set to: 1
 15522  00335C  B883               	btfsc	131,4,c	;volatile
 15523  00335E  EFB3  F019         	goto	u7771
 15524  003362  EFB5  F019         	goto	u7770
 15525  003366                     u7771:
 15526  003366  EFB9  F019         	goto	l6336
 15527  00336A                     u7770:
 15528  00336A                     
 15529                           ; BSR set to: 1
 15530                           ;fs_menu_controller.c: 141:     {;fs_menu_controller.c: 142:         button_bounce_contr
      +                          oller.decrease = 1;
 15531  00336A  0E01               	movlw	1
 15532  00336C  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15533                           
 15534                           ;fs_menu_controller.c: 143:         menu_flags.menu_decrease_flag = 1;
 15535  00336E  0E01               	movlw	1
 15536  003370  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 15537  003372                     l6336:
 15538                           
 15539                           ; BSR set to: 1
 15540                           ;fs_menu_controller.c: 145:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 15541  003372  A883               	btfss	131,4,c	;volatile
 15542  003374  EFBE  F019         	goto	u7781
 15543  003378  EFC0  F019         	goto	u7780
 15544  00337C                     u7781:
 15545  00337C  EFCC  F019         	goto	l422
 15546  003380                     u7780:
 15547  003380                     
 15548                           ; BSR set to: 1
 15549  003380  05A1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 15550  003382  A4D8               	btfss	status,2,c
 15551  003384  EFC6  F019         	goto	u7791
 15552  003388  EFC8  F019         	goto	u7790
 15553  00338C                     u7791:
 15554  00338C  EFCC  F019         	goto	l422
 15555  003390                     u7790:
 15556  003390                     
 15557                           ; BSR set to: 1
 15558                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 15559  003390  0E00               	movlw	0
 15560  003392  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15561                           
 15562                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 15563  003394  0E00               	movlw	0
 15564  003396  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 15565  003398                     l422:
 15566                           
 15567                           ; BSR set to: 1
 15568  003398  0012               	return		;funcret
 15569  00339A                     __end_of_buttonControlFlags:
 15570                           	callstack 0
 15571                           
 15572 ;; *************** function _mcu_init *****************
 15573 ;; Defined at:
 15574 ;;		line 35 in file "fs_mcu.c"
 15575 ;; Parameters:    Size  Location     Type
 15576 ;;		None
 15577 ;; Auto vars:     Size  Location     Type
 15578 ;;		None
 15579 ;; Return value:  Size  Location     Type
 15580 ;;                  1    wreg      void 
 15581 ;; Registers used:
 15582 ;;		wreg, status,2
 15583 ;; Tracked objects:
 15584 ;;		On entry : 0/0
 15585 ;;		On exit  : 0/0
 15586 ;;		Unchanged: 0/0
 15587 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15588 ;;      Params:         0       0       0       0       0       0       0
 15589 ;;      Locals:         0       0       0       0       0       0       0
 15590 ;;      Temps:          0       0       0       0       0       0       0
 15591 ;;      Totals:         0       0       0       0       0       0       0
 15592 ;;Total ram usage:        0 bytes
 15593 ;; Hardware stack levels used:    1
 15594 ;; Hardware stack levels required when called:    1
 15595 ;; This function calls:
 15596 ;;		Nothing
 15597 ;; This function is called by:
 15598 ;;		_main
 15599 ;; This function uses a non-reentrant model
 15600 ;;
 15601                           
 15602                           	psect	text68
 15603  005798                     __ptext68:
 15604                           	callstack 0
 15605  005798                     _mcu_init:
 15606                           	callstack 29
 15607  005798                     
 15608                           ;fs_mcu.c: 37:    OSCCONbits.IRCF = 0b111;
 15609  005798  0E70               	movlw	112
 15610  00579A  12D3               	iorwf	211,f,c	;volatile
 15611  00579C                     
 15612                           ;fs_mcu.c: 38:    OSCTUNEbits.PLLEN = 0b1;
 15613  00579C  8C9B               	bsf	155,6,c	;volatile
 15614  00579E                     l311:
 15615  00579E  A4D3               	btfss	211,2,c	;volatile
 15616  0057A0  EFD4  F02B         	goto	u7801
 15617  0057A4  EFD6  F02B         	goto	u7800
 15618  0057A8                     u7801:
 15619  0057A8  EFCF  F02B         	goto	l311
 15620  0057AC                     u7800:
 15621  0057AC  0012               	return		;funcret
 15622  0057AE                     __end_of_mcu_init:
 15623                           	callstack 0
 15624                           
 15625 ;; *************** function _lcd_init *****************
 15626 ;; Defined at:
 15627 ;;		line 109 in file "fs_lcd.c"
 15628 ;; Parameters:    Size  Location     Type
 15629 ;;		None
 15630 ;; Auto vars:     Size  Location     Type
 15631 ;;		None
 15632 ;; Return value:  Size  Location     Type
 15633 ;;                  1    wreg      void 
 15634 ;; Registers used:
 15635 ;;		wreg, status,2, cstack
 15636 ;; Tracked objects:
 15637 ;;		On entry : 0/0
 15638 ;;		On exit  : 0/0
 15639 ;;		Unchanged: 0/0
 15640 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15641 ;;      Params:         0       0       0       0       0       0       0
 15642 ;;      Locals:         0       0       0       0       0       0       0
 15643 ;;      Temps:          2       0       0       0       0       0       0
 15644 ;;      Totals:         2       0       0       0       0       0       0
 15645 ;;Total ram usage:        2 bytes
 15646 ;; Hardware stack levels used:    1
 15647 ;; Hardware stack levels required when called:    3
 15648 ;; This function calls:
 15649 ;;		_Lcd_Cmd
 15650 ;;		_Lcd_Port
 15651 ;; This function is called by:
 15652 ;;		_main
 15653 ;; This function uses a non-reentrant model
 15654 ;;
 15655                           
 15656                           	psect	text69
 15657  004D48                     __ptext69:
 15658                           	callstack 0
 15659  004D48                     _lcd_init:
 15660                           	callstack 27
 15661  004D48                     
 15662                           ;fs_lcd.c: 111:     TRISDbits.RD6 = 0;
 15663  004D48  9C95               	bcf	149,6,c	;volatile
 15664                           
 15665                           ;fs_lcd.c: 112:     ANSELDbits.ANSD6 = 0;
 15666  004D4A  010F               	movlb	15	; () banked
 15667  004D4C  9D3B               	bcf	59,6,b	;volatile
 15668                           
 15669                           ;fs_lcd.c: 114:     TRISDbits.RD7 = 0;
 15670  004D4E  9E95               	bcf	149,7,c	;volatile
 15671                           
 15672                           ;fs_lcd.c: 115:     ANSELDbits.ANSD7 = 0;
 15673  004D50  9F3B               	bcf	59,7,b	;volatile
 15674                           
 15675                           ;fs_lcd.c: 117:     TRISBbits.RB0 = 0;
 15676  004D52  9093               	bcf	147,0,c	;volatile
 15677                           
 15678                           ;fs_lcd.c: 118:     ANSELBbits.ANSB0 = 0;
 15679  004D54  9139               	bcf	57,0,b	;volatile
 15680                           
 15681                           ;fs_lcd.c: 120:     TRISBbits.RB1 = 0;
 15682  004D56  9293               	bcf	147,1,c	;volatile
 15683                           
 15684                           ;fs_lcd.c: 121:     ANSELBbits.ANSB1 = 0;
 15685  004D58  9339               	bcf	57,1,b	;volatile
 15686                           
 15687                           ;fs_lcd.c: 123:     TRISBbits.RB2 = 0;
 15688  004D5A  9493               	bcf	147,2,c	;volatile
 15689                           
 15690                           ;fs_lcd.c: 124:     ANSELBbits.ANSB2 = 0;
 15691  004D5C  9539               	bcf	57,2,b	;volatile
 15692                           
 15693                           ;fs_lcd.c: 126:     TRISBbits.RB3 = 0;
 15694  004D5E  9693               	bcf	147,3,c	;volatile
 15695                           
 15696                           ;fs_lcd.c: 127:     ANSELBbits.ANSB3 = 0;
 15697  004D60  9739               	bcf	57,3,b	;volatile
 15698  004D62                     
 15699                           ; BSR set to: 15
 15700                           ;fs_lcd.c: 130:     Lcd_Port(0x00);
 15701  004D62  0E00               	movlw	0
 15702  004D64  ECDE  F028         	call	_Lcd_Port
 15703  004D68                     
 15704                           ;fs_lcd.c: 131:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15705  004D68  0E02               	movlw	2
 15706  004D6A  6E05               	movwf	(??_lcd_init+1)^0,c
 15707  004D6C  0EA0               	movlw	160
 15708  004D6E  6E04               	movwf	??_lcd_init^0,c
 15709  004D70  0E92               	movlw	146
 15710  004D72                     u8017:
 15711  004D72  2EE8               	decfsz	wreg,f,c
 15712  004D74  D7FE               	bra	u8017
 15713  004D76  2E04               	decfsz	??_lcd_init^0,f,c
 15714  004D78  D7FC               	bra	u8017
 15715  004D7A  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 15716  004D7C  D7FA               	bra	u8017
 15717  004D7E  D000               	nop2	
 15718  004D80                     
 15719                           ;fs_lcd.c: 132:     Lcd_Cmd(0x03);
 15720  004D80  0E03               	movlw	3
 15721  004D82  ECB0  F02B         	call	_Lcd_Cmd
 15722  004D86                     
 15723                           ;fs_lcd.c: 133:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15724  004D86  0E68               	movlw	104
 15725  004D88  6E04               	movwf	??_lcd_init^0,c
 15726  004D8A  0EE4               	movlw	228
 15727  004D8C                     u8027:
 15728  004D8C  2EE8               	decfsz	wreg,f,c
 15729  004D8E  D7FE               	bra	u8027
 15730  004D90  2E04               	decfsz	??_lcd_init^0,f,c
 15731  004D92  D7FC               	bra	u8027
 15732  004D94  D000               	nop2	
 15733  004D96                     
 15734                           ;fs_lcd.c: 134:     Lcd_Cmd(0x03);
 15735  004D96  0E03               	movlw	3
 15736  004D98  ECB0  F02B         	call	_Lcd_Cmd
 15737  004D9C                     
 15738                           ;fs_lcd.c: 135:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15739  004D9C  0EE5               	movlw	229
 15740  004D9E  6E04               	movwf	??_lcd_init^0,c
 15741  004DA0  0E91               	movlw	145
 15742  004DA2                     u8037:
 15743  004DA2  2EE8               	decfsz	wreg,f,c
 15744  004DA4  D7FE               	bra	u8037
 15745  004DA6  2E04               	decfsz	??_lcd_init^0,f,c
 15746  004DA8  D7FC               	bra	u8037
 15747  004DAA  F000               	nop	
 15748  004DAC                     
 15749                           ;fs_lcd.c: 136:     Lcd_Cmd(0x03);
 15750  004DAC  0E03               	movlw	3
 15751  004DAE  ECB0  F02B         	call	_Lcd_Cmd
 15752  004DB2                     
 15753                           ;fs_lcd.c: 137:     Lcd_Cmd(0x02);
 15754  004DB2  0E02               	movlw	2
 15755  004DB4  ECB0  F02B         	call	_Lcd_Cmd
 15756  004DB8                     
 15757                           ;fs_lcd.c: 138:     Lcd_Cmd(0x02);
 15758  004DB8  0E02               	movlw	2
 15759  004DBA  ECB0  F02B         	call	_Lcd_Cmd
 15760  004DBE                     
 15761                           ;fs_lcd.c: 139:     Lcd_Cmd(0x08);
 15762  004DBE  0E08               	movlw	8
 15763  004DC0  ECB0  F02B         	call	_Lcd_Cmd
 15764  004DC4                     
 15765                           ;fs_lcd.c: 140:     Lcd_Cmd(0x00);
 15766  004DC4  0E00               	movlw	0
 15767  004DC6  ECB0  F02B         	call	_Lcd_Cmd
 15768  004DCA                     
 15769                           ;fs_lcd.c: 141:     Lcd_Cmd(0x0C);
 15770  004DCA  0E0C               	movlw	12
 15771  004DCC  ECB0  F02B         	call	_Lcd_Cmd
 15772  004DD0                     
 15773                           ;fs_lcd.c: 142:     Lcd_Cmd(0x00);
 15774  004DD0  0E00               	movlw	0
 15775  004DD2  ECB0  F02B         	call	_Lcd_Cmd
 15776  004DD6                     
 15777                           ;fs_lcd.c: 143:     Lcd_Cmd(0x06);
 15778  004DD6  0E06               	movlw	6
 15779  004DD8  ECB0  F02B         	call	_Lcd_Cmd
 15780  004DDC  0012               	return		;funcret
 15781  004DDE                     __end_of_lcd_init:
 15782                           	callstack 0
 15783                           
 15784 ;; *************** function _Lcd_Cmd *****************
 15785 ;; Defined at:
 15786 ;;		line 56 in file "fs_lcd.c"
 15787 ;; Parameters:    Size  Location     Type
 15788 ;;  a               1    wreg     unsigned char 
 15789 ;; Auto vars:     Size  Location     Type
 15790 ;;  a               1    2[COMRAM] unsigned char 
 15791 ;; Return value:  Size  Location     Type
 15792 ;;                  1    wreg      void 
 15793 ;; Registers used:
 15794 ;;		wreg, status,2, cstack
 15795 ;; Tracked objects:
 15796 ;;		On entry : 0/0
 15797 ;;		On exit  : 0/0
 15798 ;;		Unchanged: 0/0
 15799 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15800 ;;      Params:         0       0       0       0       0       0       0
 15801 ;;      Locals:         1       0       0       0       0       0       0
 15802 ;;      Temps:          1       0       0       0       0       0       0
 15803 ;;      Totals:         2       0       0       0       0       0       0
 15804 ;;Total ram usage:        2 bytes
 15805 ;; Hardware stack levels used:    1
 15806 ;; Hardware stack levels required when called:    2
 15807 ;; This function calls:
 15808 ;;		_Lcd_Port
 15809 ;; This function is called by:
 15810 ;;		_Lcd_Clear
 15811 ;;		_Lcd_Set_Cursor
 15812 ;;		_lcd_init
 15813 ;;		_Lcd_Shift_Right
 15814 ;;		_Lcd_Shift_Left
 15815 ;; This function uses a non-reentrant model
 15816 ;;
 15817                           
 15818                           	psect	text70
 15819  005760                     __ptext70:
 15820                           	callstack 0
 15821  005760                     _Lcd_Cmd:
 15822                           	callstack 26
 15823                           
 15824                           ;incstack = 0
 15825                           ;Lcd_Cmd@a stored from wreg
 15826  005760  6E03               	movwf	Lcd_Cmd@a^0,c
 15827  005762                     
 15828                           ;fs_lcd.c: 56: void Lcd_Cmd(char a);fs_lcd.c: 57: {;fs_lcd.c: 58:    PORTDbits.RD6 = 0;
 15829  005762  9C83               	bcf	131,6,c	;volatile
 15830  005764                     
 15831                           ;fs_lcd.c: 59:    Lcd_Port(a);
 15832  005764  5003               	movf	Lcd_Cmd@a^0,w,c
 15833  005766  ECDE  F028         	call	_Lcd_Port
 15834  00576A                     
 15835                           ;fs_lcd.c: 60:    PORTDbits.RD7 = 1;
 15836  00576A  8E83               	bsf	131,7,c	;volatile
 15837  00576C                     
 15838                           ;fs_lcd.c: 61:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15839  00576C  0E2A               	movlw	42
 15840  00576E  6E02               	movwf	??_Lcd_Cmd^0,c
 15841  005770  0E8E               	movlw	142
 15842  005772                     u8047:
 15843  005772  2EE8               	decfsz	wreg,f,c
 15844  005774  D7FE               	bra	u8047
 15845  005776  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15846  005778  D7FC               	bra	u8047
 15847  00577A                     
 15848                           ;fs_lcd.c: 62:    PORTDbits.RD7 = 0;
 15849  00577A  9E83               	bcf	131,7,c	;volatile
 15850  00577C  0012               	return		;funcret
 15851  00577E                     __end_of_Lcd_Cmd:
 15852                           	callstack 0
 15853                           
 15854 ;; *************** function _Lcd_Port *****************
 15855 ;; Defined at:
 15856 ;;		line 33 in file "fs_lcd.c"
 15857 ;; Parameters:    Size  Location     Type
 15858 ;;  a               1    wreg     unsigned char 
 15859 ;; Auto vars:     Size  Location     Type
 15860 ;;  a               1    0[COMRAM] unsigned char 
 15861 ;; Return value:  Size  Location     Type
 15862 ;;                  1    wreg      void 
 15863 ;; Registers used:
 15864 ;;		wreg
 15865 ;; Tracked objects:
 15866 ;;		On entry : 0/0
 15867 ;;		On exit  : 0/0
 15868 ;;		Unchanged: 0/0
 15869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15870 ;;      Params:         0       0       0       0       0       0       0
 15871 ;;      Locals:         1       0       0       0       0       0       0
 15872 ;;      Temps:          0       0       0       0       0       0       0
 15873 ;;      Totals:         1       0       0       0       0       0       0
 15874 ;;Total ram usage:        1 bytes
 15875 ;; Hardware stack levels used:    1
 15876 ;; Hardware stack levels required when called:    1
 15877 ;; This function calls:
 15878 ;;		Nothing
 15879 ;; This function is called by:
 15880 ;;		_Lcd_Cmd
 15881 ;;		_lcd_init
 15882 ;;		_Lcd_Write_Char
 15883 ;; This function uses a non-reentrant model
 15884 ;;
 15885                           
 15886                           	psect	text71
 15887  0051BC                     __ptext71:
 15888                           	callstack 0
 15889  0051BC                     _Lcd_Port:
 15890                           	callstack 26
 15891                           
 15892                           ;incstack = 0
 15893                           ;Lcd_Port@a stored from wreg
 15894  0051BC  6E01               	movwf	Lcd_Port@a^0,c
 15895  0051BE                     
 15896                           ;fs_lcd.c: 33: void Lcd_Port(char a);fs_lcd.c: 34: {;fs_lcd.c: 35:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15897  0051BE  A001               	btfss	Lcd_Port@a^0,0,c
 15898  0051C0  EFE4  F028         	goto	u6401
 15899  0051C4  EFE6  F028         	goto	u6400
 15900  0051C8                     u6401:
 15901  0051C8  EFE9  F028         	goto	l152
 15902  0051CC                     u6400:
 15903  0051CC  8081               	bsf	129,0,c	;volatile
 15904  0051CE  EFEA  F028         	goto	l5478
 15905  0051D2                     l152:
 15906  0051D2  9081               	bcf	129,0,c	;volatile
 15907  0051D4                     l5478:
 15908                           
 15909                           ;fs_lcd.c: 38:    if(a & 2) { PORTBbits.RB1 = 1;}
 15910  0051D4  A201               	btfss	Lcd_Port@a^0,1,c
 15911  0051D6  EFEF  F028         	goto	u6411
 15912  0051DA  EFF1  F028         	goto	u6410
 15913  0051DE                     u6411:
 15914  0051DE  EFF4  F028         	goto	l154
 15915  0051E2                     u6410:
 15916  0051E2  8281               	bsf	129,1,c	;volatile
 15917  0051E4  EFF5  F028         	goto	l5482
 15918  0051E8                     l154:
 15919  0051E8  9281               	bcf	129,1,c	;volatile
 15920  0051EA                     l5482:
 15921                           
 15922                           ;fs_lcd.c: 41:    if(a & 4) {PORTBbits.RB2 = 1;}
 15923  0051EA  A401               	btfss	Lcd_Port@a^0,2,c
 15924  0051EC  EFFA  F028         	goto	u6421
 15925  0051F0  EFFC  F028         	goto	u6420
 15926  0051F4                     u6421:
 15927  0051F4  EFFF  F028         	goto	l156
 15928  0051F8                     u6420:
 15929  0051F8  8481               	bsf	129,2,c	;volatile
 15930  0051FA  EF00  F029         	goto	l5486
 15931  0051FE                     l156:
 15932  0051FE  9481               	bcf	129,2,c	;volatile
 15933  005200                     l5486:
 15934                           
 15935                           ;fs_lcd.c: 44:    if(a & 8) {PORTBbits.RB3 = 1;}
 15936  005200  A601               	btfss	Lcd_Port@a^0,3,c
 15937  005202  EF05  F029         	goto	u6431
 15938  005206  EF07  F029         	goto	u6430
 15939  00520A                     u6431:
 15940  00520A  EF0A  F029         	goto	l158
 15941  00520E                     u6430:
 15942  00520E  8681               	bsf	129,3,c	;volatile
 15943  005210  EF0B  F029         	goto	l160
 15944  005214                     l158:
 15945  005214  9681               	bcf	129,3,c	;volatile
 15946  005216                     l160:
 15947  005216  0012               	return		;funcret
 15948  005218                     __end_of_Lcd_Port:
 15949                           	callstack 0
 15950                           
 15951 ;; *************** function _adcInit *****************
 15952 ;; Defined at:
 15953 ;;		line 53 in file "fs_adc.c"
 15954 ;; Parameters:    Size  Location     Type
 15955 ;;		None
 15956 ;; Auto vars:     Size  Location     Type
 15957 ;;		None
 15958 ;; Return value:  Size  Location     Type
 15959 ;;                  1    wreg      void 
 15960 ;; Registers used:
 15961 ;;		wreg, status,2
 15962 ;; Tracked objects:
 15963 ;;		On entry : 0/0
 15964 ;;		On exit  : 0/0
 15965 ;;		Unchanged: 0/0
 15966 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15967 ;;      Params:         0       0       0       0       0       0       0
 15968 ;;      Locals:         0       0       0       0       0       0       0
 15969 ;;      Temps:          0       0       0       0       0       0       0
 15970 ;;      Totals:         0       0       0       0       0       0       0
 15971 ;;Total ram usage:        0 bytes
 15972 ;; Hardware stack levels used:    1
 15973 ;; Hardware stack levels required when called:    1
 15974 ;; This function calls:
 15975 ;;		Nothing
 15976 ;; This function is called by:
 15977 ;;		_main
 15978 ;; This function uses a non-reentrant model
 15979 ;;
 15980                           
 15981                           	psect	text72
 15982  0054A4                     __ptext72:
 15983                           	callstack 0
 15984  0054A4                     _adcInit:
 15985                           	callstack 29
 15986  0054A4                     
 15987                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15988  0054A4  8092               	bsf	146,0,c	;volatile
 15989                           
 15990                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15991  0054A6  010F               	movlb	15	; () banked
 15992  0054A8  8138               	bsf	56,0,b	;volatile
 15993                           
 15994                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15995  0054AA  8292               	bsf	146,1,c	;volatile
 15996                           
 15997                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15998  0054AC  8338               	bsf	56,1,b	;volatile
 15999                           
 16000                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 16001  0054AE  8492               	bsf	146,2,c	;volatile
 16002                           
 16003                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 16004  0054B0  8538               	bsf	56,2,b	;volatile
 16005                           
 16006                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 16007  0054B2  8692               	bsf	146,3,c	;volatile
 16008                           
 16009                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 16010  0054B4  8738               	bsf	56,3,b	;volatile
 16011                           
 16012                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 16013  0054B6  8A92               	bsf	146,5,c	;volatile
 16014                           
 16015                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 16016  0054B8  8B38               	bsf	56,5,b	;volatile
 16017                           
 16018                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 16019  0054BA  8096               	bsf	150,0,c	;volatile
 16020                           
 16021                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 16022  0054BC  813C               	bsf	60,0,b	;volatile
 16023                           
 16024                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 16025  0054BE  8296               	bsf	150,1,c	;volatile
 16026                           
 16027                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 16028  0054C0  833C               	bsf	60,1,b	;volatile
 16029                           
 16030                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 16031  0054C2  8496               	bsf	150,2,c	;volatile
 16032                           
 16033                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 16034  0054C4  853C               	bsf	60,2,b	;volatile
 16035  0054C6                     
 16036                           ; BSR set to: 15
 16037                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 16038  0054C6  0E01               	movlw	1
 16039  0054C8  6EC2               	movwf	194,c	;volatile
 16040                           
 16041                           ;fs_adc.c: 80:     ADCON1=0x00;
 16042  0054CA  0E00               	movlw	0
 16043  0054CC  6EC1               	movwf	193,c	;volatile
 16044  0054CE                     
 16045                           ; BSR set to: 15
 16046                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 16047  0054CE  8EC0               	bsf	192,7,c	;volatile
 16048                           
 16049                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 16050  0054D0  50C0               	movf	192,w,c	;volatile
 16051  0054D2  0BC7               	andlw	-57
 16052  0054D4  0910               	iorlw	16
 16053  0054D6  6EC0               	movwf	192,c	;volatile
 16054                           
 16055                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 16056  0054D8  50C0               	movf	192,w,c	;volatile
 16057  0054DA  0BF8               	andlw	-8
 16058  0054DC  0906               	iorlw	6
 16059  0054DE  6EC0               	movwf	192,c	;volatile
 16060  0054E0                     
 16061                           ; BSR set to: 15
 16062  0054E0  0012               	return		;funcret
 16063  0054E2                     __end_of_adcInit:
 16064                           	callstack 0
 16065                           
 16066 ;; *************** function _PWM_Init *****************
 16067 ;; Defined at:
 16068 ;;		line 34 in file "fs_pwm.c"
 16069 ;; Parameters:    Size  Location     Type
 16070 ;;		None
 16071 ;; Auto vars:     Size  Location     Type
 16072 ;;		None
 16073 ;; Return value:  Size  Location     Type
 16074 ;;                  1    wreg      void 
 16075 ;; Registers used:
 16076 ;;		wreg, status,2
 16077 ;; Tracked objects:
 16078 ;;		On entry : 0/0
 16079 ;;		On exit  : 0/0
 16080 ;;		Unchanged: 0/0
 16081 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16082 ;;      Params:         0       0       0       0       0       0       0
 16083 ;;      Locals:         0       0       0       0       0       0       0
 16084 ;;      Temps:          0       0       0       0       0       0       0
 16085 ;;      Totals:         0       0       0       0       0       0       0
 16086 ;;Total ram usage:        0 bytes
 16087 ;; Hardware stack levels used:    1
 16088 ;; Hardware stack levels required when called:    1
 16089 ;; This function calls:
 16090 ;;		Nothing
 16091 ;; This function is called by:
 16092 ;;		_main
 16093 ;; This function uses a non-reentrant model
 16094 ;;
 16095                           
 16096                           	psect	text73
 16097  0056F4                     __ptext73:
 16098                           	callstack 0
 16099  0056F4                     _PWM_Init:
 16100                           	callstack 29
 16101  0056F4                     
 16102                           ;fs_pwm.c: 36:     TRISCbits.RC2 = 0;
 16103  0056F4  9494               	bcf	148,2,c	;volatile
 16104                           
 16105                           ;fs_pwm.c: 37:     TRISCbits.RC1 = 0;
 16106  0056F6  9294               	bcf	148,1,c	;volatile
 16107  0056F8                     
 16108                           ;fs_pwm.c: 40:     CCP1CON = 0b00001100;
 16109  0056F8  0E0C               	movlw	12
 16110  0056FA  6EBD               	movwf	189,c	;volatile
 16111                           
 16112                           ;fs_pwm.c: 42:     CCP2CON = 0b00001100;
 16113  0056FC  0E0C               	movlw	12
 16114  0056FE  6E66               	movwf	102,c	;volatile
 16115                           
 16116                           ;fs_pwm.c: 46:     T2CONbits.T2CKPS = 0b01;
 16117  005700  50BA               	movf	186,w,c	;volatile
 16118  005702  0BFC               	andlw	-4
 16119  005704  0901               	iorlw	1
 16120  005706  6EBA               	movwf	186,c	;volatile
 16121  005708                     
 16122                           ;fs_pwm.c: 47:     T2CONbits.TMR2ON = 1;
 16123  005708  84BA               	bsf	186,2,c	;volatile
 16124                           
 16125                           ;fs_pwm.c: 49:     TMR2 = 0;
 16126  00570A  0E00               	movlw	0
 16127  00570C  6EBC               	movwf	188,c	;volatile
 16128                           
 16129                           ;fs_pwm.c: 50:     PR2 = 199;
 16130  00570E  0EC7               	movlw	199
 16131  005710  6EBB               	movwf	187,c	;volatile
 16132                           
 16133                           ;fs_pwm.c: 51:     CCPR1L = 0;
 16134  005712  0E00               	movlw	0
 16135  005714  6EBE               	movwf	190,c	;volatile
 16136                           
 16137                           ;fs_pwm.c: 52:     CCPR2L = 0;
 16138  005716  0E00               	movlw	0
 16139  005718  6E67               	movwf	103,c	;volatile
 16140  00571A  0012               	return		;funcret
 16141  00571C                     __end_of_PWM_Init:
 16142                           	callstack 0
 16143                           
 16144 ;; *************** function _TIMER0 *****************
 16145 ;; Defined at:
 16146 ;;		line 33 in file "fs_timer.c"
 16147 ;; Parameters:    Size  Location     Type
 16148 ;;		None
 16149 ;; Auto vars:     Size  Location     Type
 16150 ;;		None
 16151 ;; Return value:  Size  Location     Type
 16152 ;;                  1    wreg      void 
 16153 ;; Registers used:
 16154 ;;		wreg, status,2, status,0
 16155 ;; Tracked objects:
 16156 ;;		On entry : 0/0
 16157 ;;		On exit  : 0/0
 16158 ;;		Unchanged: 0/0
 16159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16160 ;;      Params:         0       0       0       0       0       0       0
 16161 ;;      Locals:         0       0       0       0       0       0       0
 16162 ;;      Temps:          0       0       0       0       0       0       0
 16163 ;;      Totals:         0       0       0       0       0       0       0
 16164 ;;Total ram usage:        0 bytes
 16165 ;; Hardware stack levels used:    1
 16166 ;; This function calls:
 16167 ;;		Nothing
 16168 ;; This function is called by:
 16169 ;;		Interrupt level 2
 16170 ;; This function uses a non-reentrant model
 16171 ;;
 16172                           
 16173                           	psect	intcode
 16174  000008                     __pintcode:
 16175                           	callstack 0
 16176  000008                     _TIMER0:
 16177                           	callstack 19
 16178                           
 16179                           ;incstack = 0
 16180  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16181  00000A                     
 16182                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 16183  00000A  A4F2               	btfss	242,2,c	;volatile
 16184  00000C  EF0A  F000         	goto	i2u791_41
 16185  000010  EF0C  F000         	goto	i2u791_40
 16186  000014                     i2u791_41:
 16187  000014  EF4B  F000         	goto	i2l685
 16188  000018                     i2u791_40:
 16189  000018  AAF2               	btfss	242,5,c	;volatile
 16190  00001A  EF11  F000         	goto	i2u792_41
 16191  00001E  EF13  F000         	goto	i2u792_40
 16192  000022                     i2u792_41:
 16193  000022  EF4B  F000         	goto	i2l685
 16194  000026                     i2u792_40:
 16195  000026                     
 16196                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 16197  000026  94F2               	bcf	242,2,c	;volatile
 16198  000028                     
 16199                           ;fs_timer.c: 38:         TMR0H = 0x63;
 16200  000028  0E63               	movlw	99
 16201  00002A  6ED7               	movwf	215,c	;volatile
 16202                           
 16203                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 16204  00002C  0EC0               	movlw	192
 16205  00002E  6ED6               	movwf	214,c	;volatile
 16206  000030                     
 16207                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 16208  000030  0101               	movlb	1	; () banked
 16209  000032  2B94               	incf	(_timer_value+5)& (0+255),f,b
 16210  000034                     
 16211                           ; BSR set to: 1
 16212                           ;fs_timer.c: 43:         if (startIsClick == 1)
 16213  000034  0100               	movlb	0	; () banked
 16214  000036  05FE               	decf	_startIsClick& (0+255),w,b
 16215  000038  A4D8               	btfss	status,2,c
 16216  00003A  EF21  F000         	goto	i2u793_41
 16217  00003E  EF23  F000         	goto	i2u793_40
 16218  000042                     i2u793_41:
 16219  000042  EF26  F000         	goto	i2l6532
 16220  000046                     i2u793_40:
 16221  000046                     
 16222                           ; BSR set to: 0
 16223                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.second_counter++;
 16224  000046  0101               	movlb	1	; () banked
 16225  000048  4B95               	infsnz	(_timer_value+6)& (0+255),f,b
 16226  00004A  2B96               	incf	(_timer_value+7)& (0+255),f,b
 16227  00004C                     i2l6532:
 16228                           
 16229                           ;fs_timer.c: 48:         if(button_bounce_controller.menu == 1)
 16230  00004C  0101               	movlb	1	; () banked
 16231  00004E  059D               	decf	_button_bounce_controller& (0+255),w,b
 16232  000050  A4D8               	btfss	status,2,c
 16233  000052  EF2D  F000         	goto	i2u794_41
 16234  000056  EF2F  F000         	goto	i2u794_40
 16235  00005A                     i2u794_41:
 16236  00005A  EF30  F000         	goto	i2l6536
 16237  00005E                     i2u794_40:
 16238  00005E                     
 16239                           ; BSR set to: 1
 16240                           ;fs_timer.c: 49:         {;fs_timer.c: 50:              timer_value.menu_login_delay++;
 16241  00005E  2B93               	incf	(_timer_value+4)& (0+255),f,b
 16242  000060                     i2l6536:
 16243                           
 16244                           ; BSR set to: 1
 16245                           ;fs_timer.c: 52:         if(button_bounce_controller.menu == 0)
 16246  000060  519D               	movf	_button_bounce_controller& (0+255),w,b
 16247  000062  A4D8               	btfss	status,2,c
 16248  000064  EF36  F000         	goto	i2u795_41
 16249  000068  EF38  F000         	goto	i2u795_40
 16250  00006C                     i2u795_41:
 16251  00006C  EF3A  F000         	goto	i2l6540
 16252  000070                     i2u795_40:
 16253  000070                     
 16254                           ; BSR set to: 1
 16255                           ;fs_timer.c: 53:         {;fs_timer.c: 54:              timer_value.menu_login_delay = 0
      +                          ;
 16256  000070  0E00               	movlw	0
 16257  000072  6F93               	movwf	(_timer_value+4)& (0+255),b
 16258  000074                     i2l6540:
 16259                           
 16260                           ; BSR set to: 1
 16261                           ;fs_timer.c: 57:         if (timer_value.second_counter >= 100)
 16262  000074  5196               	movf	(_timer_value+7)& (0+255),w,b
 16263  000076  E109               	bnz	i2u796_40
 16264  000078  0E64               	movlw	100
 16265  00007A  5D95               	subwf	(_timer_value+6)& (0+255),w,b
 16266  00007C  A0D8               	btfss	status,0,c
 16267  00007E  EF43  F000         	goto	i2u796_41
 16268  000082  EF45  F000         	goto	i2u796_40
 16269  000086                     i2u796_41:
 16270  000086  EF4B  F000         	goto	i2l685
 16271  00008A                     i2u796_40:
 16272  00008A                     
 16273                           ; BSR set to: 1
 16274                           ;fs_timer.c: 58:         {;fs_timer.c: 59:             timer_value.second_counter = 0;
 16275  00008A  0E00               	movlw	0
 16276  00008C  6F96               	movwf	(_timer_value+7)& (0+255),b
 16277  00008E  0E00               	movlw	0
 16278  000090  6F95               	movwf	(_timer_value+6)& (0+255),b
 16279  000092                     
 16280                           ; BSR set to: 1
 16281                           ;fs_timer.c: 60:             timer_counter_flag.one_second_flag = 1;
 16282  000092  0100               	movlb	0	; () banked
 16283  000094  81FA               	bsf	_timer_counter_flag& (0+255),0,b
 16284  000096                     i2l685:
 16285  000096  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16286  000098  0011               	retfie		f
 16287  00009A                     __end_of_TIMER0:
 16288                           	callstack 0
 16289                           
 16290                           	psect	rparam
 16291  0000                     
 16292                           	psect	temp
 16293  00005F                     btemp:
 16294                           	callstack 0
 16295  00005F                     	ds	1
 16296  0000                     int$flags	set	btemp
 16297  0000                     wtemp8	set	btemp+1
 16298  0000                     ttemp5	set	btemp+1
 16299  0000                     ttemp6	set	btemp+4
 16300  0000                     ttemp7	set	btemp+8
 16301                           
 16302                           	psect	idloc
 16303                           
 16304                           ;Config register IDLOC0 @ 0x200000
 16305                           ;	unspecified, using default values
 16306  200000                     	org	2097152
 16307  200000  FF                 	db	255
 16308                           
 16309                           ;Config register IDLOC1 @ 0x200001
 16310                           ;	unspecified, using default values
 16311  200001                     	org	2097153
 16312  200001  FF                 	db	255
 16313                           
 16314                           ;Config register IDLOC2 @ 0x200002
 16315                           ;	unspecified, using default values
 16316  200002                     	org	2097154
 16317  200002  FF                 	db	255
 16318                           
 16319                           ;Config register IDLOC3 @ 0x200003
 16320                           ;	unspecified, using default values
 16321  200003                     	org	2097155
 16322  200003  FF                 	db	255
 16323                           
 16324                           ;Config register IDLOC4 @ 0x200004
 16325                           ;	unspecified, using default values
 16326  200004                     	org	2097156
 16327  200004  FF                 	db	255
 16328                           
 16329                           ;Config register IDLOC5 @ 0x200005
 16330                           ;	unspecified, using default values
 16331  200005                     	org	2097157
 16332  200005  FF                 	db	255
 16333                           
 16334                           ;Config register IDLOC6 @ 0x200006
 16335                           ;	unspecified, using default values
 16336  200006                     	org	2097158
 16337  200006  FF                 	db	255
 16338                           
 16339                           ;Config register IDLOC7 @ 0x200007
 16340                           ;	unspecified, using default values
 16341  200007                     	org	2097159
 16342  200007  FF                 	db	255
 16343                           
 16344                           	psect	config
 16345                           
 16346                           ; Padding undefined space
 16347  300000                     	org	3145728
 16348  300000  FF                 	db	255
 16349                           
 16350                           ;Config register CONFIG1H @ 0x300001
 16351                           ;	Oscillator Selection bits
 16352                           ;	FOSC = INTIO67, Internal oscillator block
 16353                           ;	4X PLL Enable
 16354                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16355                           ;	Primary clock enable bit
 16356                           ;	PRICLKEN = ON, Primary clock is always enabled
 16357                           ;	Fail-Safe Clock Monitor Enable bit
 16358                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16359                           ;	Internal/External Oscillator Switchover bit
 16360                           ;	IESO = ON, Oscillator Switchover mode enabled
 16361  300001                     	org	3145729
 16362  300001  B8                 	db	184
 16363                           
 16364                           ;Config register CONFIG2L @ 0x300002
 16365                           ;	Power-up Timer Enable bit
 16366                           ;	PWRTEN = OFF, Power up timer disabled
 16367                           ;	Brown-out Reset Enable bits
 16368                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16369                           ;	Brown Out Reset Voltage bits
 16370                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16371  300002                     	org	3145730
 16372  300002  1F                 	db	31
 16373                           
 16374                           ;Config register CONFIG2H @ 0x300003
 16375                           ;	Watchdog Timer Enable bits
 16376                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16377                           ;	Watchdog Timer Postscale Select bits
 16378                           ;	WDTPS = 32768, 1:32768
 16379  300003                     	org	3145731
 16380  300003  3C                 	db	60
 16381                           
 16382                           ; Padding undefined space
 16383  300004                     	org	3145732
 16384  300004  FF                 	db	255
 16385                           
 16386                           ;Config register CONFIG3H @ 0x300005
 16387                           ;	CCP2 MUX bit
 16388                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16389                           ;	PORTB A/D Enable bit
 16390                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16391                           ;	P3A/CCP3 Mux bit
 16392                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16393                           ;	HFINTOSC Fast Start-up
 16394                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16395                           ;	Timer3 Clock input mux bit
 16396                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16397                           ;	ECCP2 B output mux bit
 16398                           ;	P2BMX = PORTD2, P2B is on RD2
 16399                           ;	MCLR Pin Enable bit
 16400                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16401  300005                     	org	3145733
 16402  300005  BD                 	db	189
 16403                           
 16404                           ;Config register CONFIG4L @ 0x300006
 16405                           ;	Stack Full/Underflow Reset Enable bit
 16406                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16407                           ;	Single-Supply ICSP Enable bit
 16408                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16409                           ;	Extended Instruction Set Enable bit
 16410                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16411                           ;	Background Debug
 16412                           ;	DEBUG = 0x1, unprogrammed default
 16413  300006                     	org	3145734
 16414  300006  84                 	db	132
 16415                           
 16416                           ; Padding undefined space
 16417  300007                     	org	3145735
 16418  300007  FF                 	db	255
 16419                           
 16420                           ;Config register CONFIG5L @ 0x300008
 16421                           ;	Code Protection Block 0
 16422                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16423                           ;	Code Protection Block 1
 16424                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16425                           ;	Code Protection Block 2
 16426                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16427                           ;	Code Protection Block 3
 16428                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16429  300008                     	org	3145736
 16430  300008  0F                 	db	15
 16431                           
 16432                           ;Config register CONFIG5H @ 0x300009
 16433                           ;	Boot Block Code Protection bit
 16434                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16435                           ;	Data EEPROM Code Protection bit
 16436                           ;	CPD = OFF, Data EEPROM not code-protected
 16437  300009                     	org	3145737
 16438  300009  C0                 	db	192
 16439                           
 16440                           ;Config register CONFIG6L @ 0x30000A
 16441                           ;	Write Protection Block 0
 16442                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16443                           ;	Write Protection Block 1
 16444                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16445                           ;	Write Protection Block 2
 16446                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16447                           ;	Write Protection Block 3
 16448                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16449  30000A                     	org	3145738
 16450  30000A  0F                 	db	15
 16451                           
 16452                           ;Config register CONFIG6H @ 0x30000B
 16453                           ;	Configuration Register Write Protection bit
 16454                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16455                           ;	Boot Block Write Protection bit
 16456                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16457                           ;	Data EEPROM Write Protection bit
 16458                           ;	WRTD = OFF, Data EEPROM not write-protected
 16459  30000B                     	org	3145739
 16460  30000B  E0                 	db	224
 16461                           
 16462                           ;Config register CONFIG7L @ 0x30000C
 16463                           ;	Table Read Protection Block 0
 16464                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16465                           ;	Table Read Protection Block 1
 16466                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16467                           ;	Table Read Protection Block 2
 16468                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16469                           ;	Table Read Protection Block 3
 16470                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16471  30000C                     	org	3145740
 16472  30000C  0F                 	db	15
 16473                           
 16474                           ;Config register CONFIG7H @ 0x30000D
 16475                           ;	Boot Block Table Read Protection bit
 16476                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16477  30000D                     	org	3145741
 16478  30000D  40                 	db	64
 16479                           tosu	equ	0xFFF
 16480                           tosh	equ	0xFFE
 16481                           tosl	equ	0xFFD
 16482                           stkptr	equ	0xFFC
 16483                           pclatu	equ	0xFFB
 16484                           pclath	equ	0xFFA
 16485                           pcl	equ	0xFF9
 16486                           tblptru	equ	0xFF8
 16487                           tblptrh	equ	0xFF7
 16488                           tblptrl	equ	0xFF6
 16489                           tablat	equ	0xFF5
 16490                           prodh	equ	0xFF4
 16491                           prodl	equ	0xFF3
 16492                           indf0	equ	0xFEF
 16493                           postinc0	equ	0xFEE
 16494                           postdec0	equ	0xFED
 16495                           preinc0	equ	0xFEC
 16496                           plusw0	equ	0xFEB
 16497                           fsr0h	equ	0xFEA
 16498                           fsr0l	equ	0xFE9
 16499                           wreg	equ	0xFE8
 16500                           indf1	equ	0xFE7
 16501                           postinc1	equ	0xFE6
 16502                           postdec1	equ	0xFE5
 16503                           preinc1	equ	0xFE4
 16504                           plusw1	equ	0xFE3
 16505                           fsr1h	equ	0xFE2
 16506                           fsr1l	equ	0xFE1
 16507                           bsr	equ	0xFE0
 16508                           indf2	equ	0xFDF
 16509                           postinc2	equ	0xFDE
 16510                           postdec2	equ	0xFDD
 16511                           preinc2	equ	0xFDC
 16512                           plusw2	equ	0xFDB
 16513                           fsr2h	equ	0xFDA
 16514                           fsr2l	equ	0xFD9
 16515                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    0
    Data        64
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     176
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2839_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_15(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_13(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_7(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), mainMenu@textCursor2(BANK0[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _openLCD_Script->_Lcd_Write_String
    _Lcd_Clear->_Lcd_Cmd
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  414325
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                     _openLCD_Script
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _openLCD_Script                                       2     2      0    3494
                                             10 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0  404153
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  404153
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60426
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   79142
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                         _startMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1636
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1748
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
       _pauseMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _menuInitialize
   _openLCD_Script
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      B0       8       68.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A1       9        0.0%
DATA                 0      0     2A1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 16 02:02:57 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
                    ___fldiv@sign 0045                                l60 5422  
                              l63 54E0                                l57 53FA  
                              l76 1452                                l92 574E  
                              l94 575C                                _KD 01EB  
                              l79 29FA                                l95 575E  
                              l98 56B8                                _KP 01EF  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
             __end_of_system_init 40AA                               l100 56C6  
                             l101 56CA          ??_calculatedAverageValue 001C  
                             l311 579E                               l160 5216  
                             l152 51D2                               l320 5356  
                             l154 51E8                               l314 57AC  
                             l163 577C                               l411 321C  
                             l156 51FE                               l172 50FE  
                             l413 3268                               l501 414A  
                             l317 40A8                               l158 5214  
                             l422 3398                               l166 57CC  
                             l175 4DDC                               l415 32B4  
                             l503 41B4                               l407 56F2  
                             l184 4E5A                               l512 3F88  
                             l417 3300                               l178 55FC  
                             l442 4B48                               l419 334C  
                             l515 57CE                               l452 38A6  
                             l428 4FC4                               l630 551C  
                             l702 501E                               l703 502E  
                             l471 5796                      _startIsClick 00FE  
                             l448 37C2                               l464 3DB4  
                             l633 5632                               l449 3812  
                             l570 571A                               l627 3556  
                             l459 4842                               l468 3E5C  
                             l805 3BBE                               l725 4D46  
                             l485 2FB6                               l574 4F4E  
                             l718 4D36                               l494 42BC  
                             l818 3D22                               l922 4A96  
                             l578 4ED4                               l691 5740  
                             l950 4CA2                               l935 4BF8  
                             l688 57BE                               l961 44C6  
                             l956 4480                               l965 558C  
                             l988 43C2                               _PR2 000FBB  
                 ?_openLCD_Script 0001                               _abs 5464  
                             _pad 490E                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 002D  
                    ___flmul@bexp 002E               stopMenu@textCursor2 00E1  
                    ___flmul@sign 0028                      ___flmul@temp 0033  
                    ___flmul@prod 002F                       _stopIsClick 00FD  
                    ___fltol@exp1 0057                              ?_abs 0013  
                            l1220 1C6E                              l1221 1C34  
                            l1312 220C                              l1305 2016  
                            l1322 233C                              l1314 2284  
                            l1315 2272                              l1219 1C80  
                            l1420 4996                              l1236 1D9A  
                            l1228 1F50                              l1309 237A  
                            l1245 1E6A                              l1261 539C  
                            l1422 49D2                              l1430 2AA4  
                            l1246 1E58                              l1510 0822  
                            l1360 36A2                              l1601 54A2  
                            l1417 4954                              l1273 2714  
                            l1353 3646                              l1346 35AE  
                            l1275 2574                              l1700 5668  
                            l1428 2A9C                              l1284 25BA  
                            l1349 370A                              l1286 2632  
                            l1278 2538                              l1374 52BA  
                            l1287 2620                              l1367 569C  
                            l1632 3A36                              l1448 2CDE  
                            l4200 1B10                              l5000 3044  
                            l1704 4770                              l1641 3110  
                            l4210 1B38                              l4202 1B12  
                            l5002 3052                              l5010 3134  
                            l1714 5156                              l1466 0C4C  
                            l4300 1D08                              l4220 1B72  
                            l4212 1B48                              l4204 1B18  
                            l5012 3170                              l1484 048A  
                            l5100 009E                              l1629 3A2E  
                            l5022 558E                              l5030 52D4  
                            l4310 1D7A                              l4302 1D0E  
                            l4230 1B9E                              l4222 1B84  
                            l4214 1B58                              l4206 1B26  
                            l5014 3184                              l5006 30C4  
                            l1638 31CC                              l1662 5554  
                            l5110 00F2                              l5102 00A8  
                            l1582 5090                              l1719 515E  
                            l1583 5098                              l1648 55C4  
                            l1656 530C                              l5032 5302  
                            l5040 2A1C                              l4320 1DD4  
                            l4304 1D34                              l4312 1D8A  
                            l4240 1BB2                              l4232 1BA2  
                            l4224 1B92                              l4216 1B5A  
                            l4208 1B28                              l5016 31AC  
                            l5008 3100                              l5120 0136  
                            l5112 00FC                              l5104 00B8  
                            l1576 19D6                              l1568 1A90  
                            l6000 3EC8                              l1593 45C4  
                            l4402 571C                              l5034 5306  
                            l5026 52BC                              l4410 3A3C  
                            l4170 4872                              l5050 2A90  
                            l5042 2A44                              l4330 1E04  
                            l4322 1DDE                              l4314 1DB0  
                            l4306 1D68                              l4250 1BC6  
                            l4242 1BB6                              l4234 1BA6  
                            l4226 1B96                              l4218 1B62  
                            l5018 31BC                              l5210 050C  
                            l5122 0142                              l5130 0158  
                            l5114 0104                              l5106 00C6  
                            l6010 3EF8                              l6002 3ECC  
                            l4404 5738                              l5028 52C0  
                            l4420 3A9C                              l4412 3A4A  
                            l4172 4890                              l4164 4844  
                            l5060 2ADA                              l5052 2AAC  
                            l5044 2A64                              l4500 23C8  
                            l4340 1E2C                              l4332 1E08  
                            l4324 1DEC                              l4316 1DC0  
                            l4308 1D6A                              l4260 1C00  
                            l4252 1BCA                              l4244 1BBA  
                            l4236 1BAA                              l4228 1B9A  
                            l4180 1A9E                              l5300 0946  
                            l5220 0544                              l5212 0514  
                            l5204 04A8                              l5140 01E2  
                            l5132 017E                              l5124 014A  
                            l5116 0116                              l5108 00CE  
                            l6020 3F16                              l6012 3EFE  
                            l6004 3ED0                              l6100 423E  
                            l1677 490C                              l1685 53E0  
                            l4430 3AE6                              l4422 3AA0  
                            l4414 3A6A                              l1598 549A  
                            l4174 48C6                              l4166 4856  
                            l5070 2B78                              l5062 2AE4  
                            l5054 2ABE                              l5046 2A74  
                            l5038 29FC                              l4510 23EE  
                            l4502 23CA                              l4350 1E86  
                            l4342 1E3A                              l4334 1E18  
                            l4326 1DEE                              l4270 1C52  
                            l4262 1C1C                              l4254 1BCE  
                            l4246 1BBE                              l4238 1BAE  
                            l4190 1ADE                              l4182 1AAC  
                            l1694 51BA                              l5310 097A  
                            l5302 094C                              l5230 058E  
                            l5222 0552                              l5206 04BA  
                            l5214 0518                              l5150 0252  
                            l5142 01FA                              l5126 014E  
                            l5118 0124                              l6030 3F3E  
                            l6022 3F1A                              l6014 3F02  
                            l6006 3ED4                              l6110 4268  
                            l6102 4244                              l5400 38BC  
                            l4440 3B56                              l4432 3AF4  
                            l4424 3AAC                              l4416 3A6E  
                            l4408 3A38                              l1688 57D0  
                            l4168 4868                              l5080 2C48  
                            l5064 2AEA                              l5072 2BDC  
                            l5056 2ACC                              l5048 2A76  
                            l4600 2686                              l4520 242E  
                            l4512 23FC                              l4504 23D2  
                            l4360 1EF0                              l4352 1E94  
                            l4344 1E50                              l4328 1DFC  
                            l4336 1E1A                              l4280 1C9E  
                            l4272 1C60                              l4264 1C2C  
                            l4248 1BC2                              l4256 1BD2  
                            l4192 1AE0                              l4184 1AAE  
                            l5304 0952                              l5312 0980  
                            l5320 0A18                              l5240 05D4  
                            l5232 05A0                              l5224 0556  
                            l5216 0520                              l5208 04D6  
                            l5144 0204                              l5136 01B4  
                            l5128 0152                              l6032 3F5A  
                            l6016 3F0C                              l6008 3EE6  
                            l6024 3F1E                              l6200 2CF0  
                            l6112 4272                              l6104 4248  
                            l6120 4772                              l6040 40B6  
                            l5410 391A                              l5402 38C0  
                            l4442 3B68                              l4434 3B06  
                            l4426 3ACA                              l4418 3A7C  
                            l5090 2C92                              l5074 2BF6  
                            l5082 2C58                              l5066 2B6C  
                            l5058 2AD2                              l4610 26F0  
                            l4602 268A                              l4530 246E  
                            l4522 2430                              l4514 23FE  
                            l4506 23E2                              l4370 1F2A  
                            l4362 1F10                              l4354 1ECE  
                            l4290 1CDE                              l4338 1E28  
                            l4274 1C62                              l4266 1C42  
                            l4258 1BD6                              l4186 1ABE  
                            l4194 1AE8                              l4178 1A92  
                            l5330 0A82                              l5322 0A36  
                            l5314 09D8                              l5306 0964  
                            l5250 06E8                              l5242 0638  
                            l5226 0568                              l5234 05A8  
                            l5218 0532                              l5154 0288  
                            l5138 01C6                              l6034 3F66  
                            l6026 3F28                              l6018 3F12  
                            l6202 2D02                              l6210 2D1E  
                            l6114 428E                              l6106 4252  
                            l6130 4796                              l6122 477E  
                            l6050 40FA                              l6042 40BA  
                            l6300 3260                              l5420 3946  
                            l5404 38C4                              l4436 3B34  
                            l4428 3AD2                              l4444 3B6E  
                            l4460 3BF6                              l4452 3BC0  
                            l4380 539E                              l5092 2C9E  
                            l5084 2C6A                              l5076 2C14  
                            l5068 2B72                              l4612 26F4  
                            l4604 26A4                              l4540 249E  
                            l4532 2476                              l4516 240E  
                            l4524 2438                              l4508 23E8  
                            l4700 2166                              l4372 1F30  
                            l4364 1F14                              l4348 1E7A  
                            l4356 1ED0                              l4292 1CEA  
                            l4284 1CB2                              l4276 1C6C  
                            l4268 1C4E                              l4196 1AF8  
                            l4188 1ACE                              l5340 0AC0  
                            l5332 0A86                              l5324 0A52  
                            l5316 0A0C                              l5308 0976  
                            l5260 07A6                              l5252 071C  
                            l5244 0690                              l5236 05B0  
                            l5228 0576                              l5180 03EA  
                            l5172 0322                              l5156 029A  
                            l5148 022C                              l6036 3F7A  
                            l6028 3F34                              l5500 4FD6  
                            l6220 2D76                              l6212 2D30  
                            l6204 2D06                              l6116 429A  
                            l6108 425C                              l6140 47E0  
                            l6132 47A2                              l6124 4784  
                            l6060 4134                              l6052 4100  
                            l6044 40CC                              l6310 32AC  
                            l6302 3278                              l5430 39EE  
                            l5422 397A                              l5414 3920  
                            l5406 38E0                              l4446 3B7E  
                            l4438 3B54                              l4470 3C5E  
                            l4462 3C04                              l4454 3BC4  
                            l4382 53AA                              l4390 5640  
                            l5094 2CA6                              l5086 2C7A  
                            l5078 2C2E                              l4614 2702  
                            l4606 26BA                              l4550 24DC  
                            l4542 249E                              l4534 247A  
                            l4526 2448                              l4518 241E  
                            l4710 21FC                              l4702 2190  
                            l4630 1F6C                              l4374 1F3E  
                            l4366 1F22                              l4358 1EE0  
                            l4294 1CEE                              l4286 1CC2  
                            l4278 1C8E                              l4198 1AFE  
                            l5350 0AF2                              l5342 0AC8  
                            l5334 0A96                              l5326 0A64  
                            l5318 0A14                              l5270 081A  
                            l5262 07B6                              l5254 074E  
                            l5246 06C4                              l5238 05C0  
                            l5190 044A                              l5182 03F2  
                            l5174 0356                              l5158 02B6  
                            l5166 02D2                              l5510 4CB4  
                            l5502 4FE4                              l6230 2E00  
                            l6222 2D82                              l6214 2D3A  
                            l6206 2D0A                              l6118 42AE  
                            l6150 483E                              l6142 47EC  
                            l6134 47A8                              l6126 4788  
                            l6070 416A                              l6062 413A  
                            l6054 4106                              l6046 40D6  
                            l6038 40AA                              ?_pad 0011  
                            l6400 4DCA                              l6320 32F8  
                            l6312 32C4                              l6304 3286  
                            l5432 3A00                              l5416 3936  
                            l5408 3916                              l4448 3B9E  
                            l4472 3C6C                              l4480 3CD2  
                            l4464 3C24                              l4456 3BD2  
                            l4384 53BC                              l4392 5644  
                            l5088 2C80                              l5096 2CB6  
                            l4800 4A86                              l4616 2708  
                            l4608 26D4                              l4560 2528  
                            l4552 24EC                              l4528 245E  
                            l4720 223C                              l4712 220A  
                            l4704 21C6                              l4640 1FA4  
                            l4632 1F6E                              l4376 1F40  
                            l4368 1F28                              l4296 1CFC  
                            l4288 1CD0                              l5352 0AF8  
                            l5360 0B48                              l5344 0AD6  
                            l5336 0AA8                              l5328 0A72  
                            l5280 08D6                              l5272 083E  
                            l5264 07EA                              l5256 0764  
                            l5248 06CA                              l5192 045C  
                            l5176 035C                              l5184 0424  
                            l5168 02EC                              l5440 469C  
                            l5600 1590                              l5520 4CF6  
                            l5512 4CCA                              l5504 4FF4  
                            l6160 3D36                              l6240 2E6C  
                            l6232 2E12                              l6224 2D94  
                            l6216 2D46                              l6208 2D1A  
                            l6080 41C2                              l6152 577E  
                            l6144 47FE                              l6136 47AC  
                            l6128 478C                              l6072 4186  
                            l6064 4140                              l6048 40E8  
                            l6056 4110                              l6402 4DD0  
                            l6330 3344                              l6322 3310  
                            l6314 32D2                              l6306 328E  
                            l5434 3A12                              l5426 39B0  
                            l5418 393E                              l4482 3CE2  
                            l4474 3C9A                              l4466 3C42  
                            l4458 3BF2                              l4386 53C0  
                            l4394 565C                              l4802 4A8E  
                            l4810 4B5C                              l4618 270A  
                            l4570 2572                              l4562 2536  
                            l4554 24FC                              l4546 24B2  
                            l4538 248E                              l4490 2388  
                            l4730 22AE                              l4722 226A  
                            l4714 221C                              l4706 21D4  
                            l4650 1FD0                              l4642 1FB4  
                            l4634 1F7E                              l4626 1F52  
                            l4298 1CFE                              l5370 0B98  
                            l5362 0B5A                              l5354 0B1E  
                            l5346 0ADE                              l5338 0AB0  
                            l5290 091C                              l5282 08E4  
                            l5274 08A2                              l5266 07FA  
                            l5258 0796                              l5194 0464  
                            l5186 0434                              l5178 03B6  
                            l5450 46F8                              l5442 46C6  
                            l5610 1602                              l5602 15A2  
                            l5530 355A                              l5522 4D14  
                            l5514 4CD2                              l5506 4FFE  
                            l6170 3D8C                              l6162 3D40  
                            l6250 2EBE                              l6242 2E76  
                            l6234 2E20                              l6226 2DC6  
                            l6218 2D50                              l6090 4206  
                            l6082 41C6                              l6154 5782  
                            l6146 481E                              l6138 47B6  
                            l6074 4192                              l6066 4154  
                            l6058 4122                              l6410 56CC  
                            l6404 4DD6                              l6340 3390  
                            l6332 335C                              l6324 331E  
                            l6316 32DA                              l6308 329C  
                            l4484 3D02                              l4476 3CBA  
                            l4468 3C4A                              l4388 5634  
                            l4820 4B90                              l4812 4B64  
                            l4580 25B8                              l4572 2584  
                            l4564 2542                              l4556 2504  
                            l4548 24CC                              l4492 2396  
                            l4740 2324                              l4732 22D8  
                            l4716 222A                              l4708 21F2  
                            l4660 2026                              l4652 1FE0  
                            l4644 1FBA                              l4636 1F8E  
                            l4628 1F5E                              l4900 4324  
                            l5372 0BA0                              l5364 0B74  
                            l5356 0B3A                              l5348 0AE6  
                            l5292 0920                              l5276 08B2  
                            l5284 08EC                              l5268 080E  
                            l5196 047E                              l5188 0438  
                            l5452 4714                              l5620 16B2  
                            l5612 163C                              l5604 15C6  
                            l5532 356A                              l5524 4D24  
                            l5516 4CDE                              l5508 4CA4  
                            l5460 53E4                              l5700 0CCA  
                            l6180 3DF8                              l6172 3D9E  
                            l6164 3D4C                              l6156 3D24  
                            l6260 2F4E                              l6252 2ED0  
                            l6244 2E82                              l6236 2E24  
                            l6228 2DCC                              l6092 420C  
                            l6084 41D8                              l6148 4830  
                            l6076 41A6                              l6068 4160  
                            l6420 4068                              l6412 57AE  
                            l6500 4644                              l6406 5798  
                            l6334 336A                              l6326 3326  
                            l6318 32E8                              l4478 3CCC  
                            l4830 4BCC                              l4822 4B98  
                            l4814 4B68                              l4806 4B4A  
                            l4590 2618                              l4574 259A  
                            l4582 25CA                              l4566 2560  
                            l4558 2514                              l4494 2398  
                            l4742 2340                              l4750 2366  
                            l4726 2294                              l4734 22DC  
                            l4718 222E                              l4670 2060  
                            l4662 2036                              l4654 1FF0  
                            l4646 1FC0                              l4638 1F9E  
                            l4910 434E                              l4902 4328  
                            l4398 551E                              l5390 0C26  
                            l5382 0BF0                              l5374 0BB0  
                            l5366 0B7A                              l5358 0B42  
                            l5294 0926                              l5286 08FE  
                            l5278 08C4                              l5198 0496  
                            l5454 4726                              l5446 46D2  
                            l5630 1738                              l5614 165C  
                            l5606 15D0                              l5622 16C4  
                            l5550 3630                              l5542 35E8  
                            l5534 3578                              l5526 4D26  
                            l5518 4CEC                              l5470 541A  
                            l5462 53E4                              l5710 0E30  
                            l5702 0D3A                              l6190 3E3E  
                            l6182 3DFC                              l6174 3DC6  
                            l6166 3D56                              l6158 3D30  
                            l6262 2F5C                              l6254 2F02  
                            l6246 2E8C                              l6238 2E58  
                            l6094 4210                              l6086 41E2  
                            l6078 41B6                              l6350 4AB4  
                            l6342 4A98                              l6270 5744  
                            l6430 40A2                              l6422 4072  
                            l6414 57BA                              l6510 4672  
                            l6502 4654                              l6432 56F4  
                            l5480 51E2                              l6408 579C  
                            l6336 3372                              l6328 3334  
                            l6280 31CE                              l4832 4BD2  
                            l4824 4BA0                              l4816 4B76  
                            l4808 4B4E                              l4584 25D8  
                            l4576 25A0                              l4568 2562  
                            l4496 23A8                              l4488 237C  
                            l4752 236A                              l4744 2350  
                            l4736 22F6                              l4728 22A0  
                            l4680 20B2                              l4672 2076  
                            l4656 2000                              l4648 1FCE  
                            l4920 4376                              l4912 4358  
                            l4904 4336                              l5392 0C2C  
                            l5384 0C02                              l5376 0BB6  
                            l5368 0B8C                              l5296 0932  
                            l5288 090C                              l5456 474E  
                            l5448 46E0                              l5632 176A  
                            l5624 16E6                              l5616 166A  
                            l5608 15DE                              l5560 36B0  
                            l5552 363C                              l5544 35F0  
                            l5536 35BE                              l5800 4EEE  
                            l5528 4D30                              l5464 53F6  
                            l5720 0FE6                              l5712 0E9A  
                            l5704 0D48                              l6192 3E4E  
                            l6176 3DD6                              l6184 3E0A  
                            l6168 3D80                              l6264 2F60  
                            l6256 2F08                              l6248 2EB2  
                            l6088 41F4                              l6096 421A  
                            l6360 4ADC                              l6352 4ABC  
                            l6344 4A9C                              l6440 5318  
                            l6272 5748                              l6424 407C  
                            l6416 57BC                              l6512 467C  
                            l6504 4658                              l6434 56F8  
                            l6370 54A4                              l5482 51EA  
                            l5474 51BE                              l6338 3380  
                            l6290 3214                              l6282 31E0  
                            l4770 49F2                              l4762 49D4  
                            l4826 4BAE                              l4834 4BD8  
                            l4818 4B7E                              l4594 2642  
                            l4586 25DC                              l4578 25AA  
                            l4498 23B8                              l4850 4C76  
                            l4842 4BFA                              l4746 235E  
                            l4738 230A                              l4690 20F8  
                            l4682 20C0                              l4674 2082  
                            l4666 204A                              l4658 2006  
                            l4922 4382                              l4914 4362  
                            l5386 0C0E                              l5378 0BBC  
                            l5298 0942                              l5650 1898  
                            l5642 1832                              l5634 178E  
                            l5626 16F6                              l5570 36F8  
                            l5562 36B2                              l5554 3678  
                            l5546 35FC                              l5538 35D4  
                            l5490 566A                              l5802 4F36  
                            l5810 4EBC                              l5466 53F8  
                            l5730 114C                              l5722 1056  
                            l5714 0F06                              l5706 0DB2  
                            l6194 3E58                              l6186 3E1E  
                            l6178 3DE6                              l6258 2F3C  
                            l6266 2F94                              l6098 422C  
                            l6354 4AC4                              l6346 4AA4  
                            l6450 4F54                              l6442 5324  
                            l6274 574A                              l6426 4086  
                            l6418 3F8A                              l6514 468C  
                            l6506 465E                              l6436 5708  
                            l6372 54C6                              l5484 51F8  
                            l5476 51CC                              l6380 4D68  
                            l6292 322C                              l6284 31EE  
                            l6620 3964                              l4940 494C  
                            l4932 490E                              l4780 4A26  
                            l4772 4A00                              l4764 49D8  
                            l4836 4BE8                              l4828 4BC4  
                            l4596 264E                              l4588 25EA  
                            l4852 4C9A                              l4844 4C28  
                            l4860 43F2                              l4748 2360  
                            l4692 2112                              l4684 20CC  
                            l4676 209A                              l4668 2056  
                            l4756 5358                              l4924 4392  
                            l5388 0C16                              l5660 1960  
                            l5644 1844                              l5636 17B2  
                            l5628 1728                              l5580 1486  
                            l5572 36FA                              l5564 36B6  
                            l5556 3684                              l5548 362E  
                            l5492 568A                              l5804 4E5C  
                            l5468 5408                              l5740 130E  
                            l5732 11B6                              l5724 1064  
                            l5716 0F6E                              l5708 0E22  
                            l5820 34A0                              l5812 339A  
                            l6188 3E2C                              l6268 2FA8  
                            l6196 2CE0                              l6356 4ACC  
                            l6348 4AAC                              l6364 4AE4  
                            l6460 4FA0                              l6452 4F58  
                            l6444 533A                              l6276 574C  
                            l6428 409E                              l6508 4670  
                            l6516 4690                              l6374 54CE  
                            l5486 5200                              l5478 51D4  
                            l6390 4DAC                              l6382 4D80  
                            l6294 323A                              l6286 31F6  
                            l5398 38A8                              l4950 49BA  
                            l4942 4960                              l4934 491E  
                            l4790 4A60                              l4782 4A2E  
                            l4774 4A08                              l4766 49E6  
                            l4838 4BF0                              l4598 265C  
                            l4854 4CA0                              l4846 4C38  
                            l4870 4460                              l4862 4402  
                            l4694 2122                              l4686 20DC  
                            l4678 20A6                              l4758 5368  
                            l4926 43A2                              l5662 1972  
                            l5670 19EA                              l5646 185A  
                            l5654 18C4                              l5638 17FA  
                            l5590 1508                              l5582 1498  
                            l5566 36DA                              l5558 3692  
                            l5494 568C                              l5806 4E5C  
                            l5910 5504                              l5742 131C  
                            l5734 1226                              l5726 10CE  
                            l5718 0F7C                              l5830 34EA  
                            l5822 34A8                              l5814 339A  
                            l5902 55FE                              l6198 2CEC  
                            l6358 4AD4                              l6462 4FB2  
                            l6454 4F6A                              l6278 57C0  
                            l6446 5352                              l6438 530E  
                            l6470 45CA                              l5488 520E  
                            l6392 4DB2                              l6384 4D86  
                            l6376 4D48                              l6296 3242  
                            l6288 3204                              l4944 4974  
                            l4936 4932                              l4792 4A68  
                            l4784 4A36                              l4776 4A0C  
                            l4768 49EE                              l4848 4C66  
                            l4872 446E                              l4864 4430  
                            l4696 213E                              l4688 20E8  
                            l4880 5556                              l4928 43B2  
                            l4960 44E8                              l5672 1A0E  
                            l5680 1A3E                              l5664 19A6  
                            l5656 18F2                              l5648 1868  
                            l5592 151A                              l5584 149E  
                            l5576 1454                              l5568 36EA  
                            l5808 4E74                              l5912 5510  
                            l5760 280E                              l5744 1386  
                            l5736 1234                              l5728 113E  
                            l5840 354E                              l5832 3506  
                            l5824 34B6                              l5816 339A  
                            l5904 5602                              l5920 372E  
                            l6616 4AFA                              l6456 4F7C  
                            l6448 4F50                              l6480 45DE  
                            l6472 45CE                              l5770 576A  
                            l6394 4DB8                              l6386 4D96  
                            l6378 4D62                              l6298 3250  
                            l5850 56A0                              l4954 5464  
                            l4946 4978                              l4938 4940  
                            l4794 4A6A                              l4786 4A44  
                            l4778 4A14                              l4874 44BE  
                            l4866 4440                              l4858 43C4  
                            l4698 214A                              l4882 556C  
                            l4890 42D4                              l4962 4526  
                            l4970 4566                              l5682 1A4C  
                            l5674 1A1C                              l5594 153A  
                            l5586 14C2                              l5578 1478  
                            l5842 5030                              l5498 4FC6  
                            l5762 2908                              l6618 140C  
                            l5738 129E                              l5834 350E  
                            l5826 34C6                              l5818 33DA  
                            l5906 5606                              l5930 3790  
                            l5922 3738                              l5914 370C  
                            l6458 4F8E                              l6490 4602  
                            l6482 45E2                              l6474 45D2  
                            l5772 576C                              l6396 4DBE  
                            l6388 4D9C                              l5780 55D6  
                            l5860 56AE                              l5852 56A4  
                            l4956 547E                              l4948 49A6  
                            l4796 4A70                              l4788 4A4A  
                            l4876 44C4                              l4868 444E  
                            l4884 557C                              l4972 4578  
                            l4964 454E                              l4980 5160  
                            l5676 1A30                              l5596 1548  
                            l5588 14F8                              l5844 5038  
                            l5908 54E2                              l5764 29B0  
                            l5756 2716                              l5748 13F6  
                            l5836 352A                              l5828 34E2  
                            l5940 37F4                              l5932 37A6  
                            l5924 3762                              l5916 3718  
                            l6492 4612                              l6484 45E6  
                            l6476 45D6                              l6468 45C6  
                            l5774 577A                              l5766 5762  
                            l6398 4DC4                              l5870 50BE  
                            l5790 55F0                              l5782 55DE  
                            l5862 56B2                              l5854 56A8  
                            l4798 4A76                              l4894 42E8  
                            l4966 455A                              l4958 44C8  
                            l4982 5170                              l4990 5148  
                            l5686 1A5A                              l5846 5046  
                            l5758 2748                              l5694 0C4E  
                            l5838 3532                              l5950 3822  
                            l5942 3804                              l5934 37B6  
                            l5926 376E                              l5918 3722  
                            l6494 4614                              l6486 45F2  
                            l6478 45DA                              l5768 5764  
                            l5880 50F8                              l5872 50C4  
                            l5792 55F2                              l5784 55E0  
                            l5776 55C8                              l5864 56B6  
                            l5856 56AA                              l4896 4312  
                            l4888 42BE                              l4976 45BC  
                            l4984 5100                              l5688 1A7E  
                            l5848 5074                              l5696 0C52  
                            l5960 3864                              l5952 3832  
                            l5944 3808                              l5936 37D4  
                            l5928 3782                              l6496 4624  
                            l6488 45FE                              l5874 50CE  
                            l5866 509C                              l5794 55FA  
                            l5786 55E8                              l5778 55D4  
                            l5882 4DDE                              l5858 56AC  
                            l4898 4314                              l4994 2FB8  
                            l5890 526A                              l5698 0C60  
                            l5970 388C                              l5962 3866  
                            l5954 3842                              l5946 380A  
                            l5938 37E4                              l6498 4634  
                            l5876 50E0                              l5868 50AC  
                            l5788 55EA                              l5884 4DEA  
                            l4996 2FD8                              l4988 5136  
                            l5892 527C                              l5796 4ED6  
                            l5980 3E5E                              l5972 389C  
                            l5964 3868                              l5956 3852  
                            l5948 380C                              l5878 50F2  
                            l5886 4E1A                              l4998 3030  
                            l5894 5284                              l5798 4ED6  
                            l5990 3E9C                              l5982 3E6A  
                            l5974 38A0                              l5958 3856  
                            l5966 386A                              l5888 4E1E  
                            l5896 528C                              l5992 3EAE  
                            l5984 3E6E                              l5976 38A2  
                            l5968 387C                              l5898 52A8  
                            l5994 3EB4                              l5986 3E80  
                            l5978 38A4                              l5996 3EB8  
                            l5988 3E8A                              l5998 3EC2  
                            STR_1 7FB1                              STR_2 7F80  
                            STR_3 7F2B                              STR_4 7FC1  
                            STR_5 7F3C                              STR_6 7FA1  
                            STR_7 7F4D                              STR_8 7FA1  
                            STR_9 7F09                              u4000 4868  
                            u4001 4864                              u4010 4890  
                            u4011 488C                              u4020 48C6  
                            u4100 1B84                              u4021 48C2  
                            u4101 1B80                              u4110 1B92  
                            u4030 1AAC                              u4111 1B8E  
                            u4031 1AA8                              u5000 235E  
                            u4200 1CD0                              u4120 1C00  
                            u4040 1ABE                              u5001 235A  
                            u4201 1CCC                              u4121 1BFC  
                            u4041 1ABA                              u5010 49E6  
                            u4210 1CDE                              u4130 1C18  
                            u4050 1ACE                              u5011 49E2  
                            u4211 1CDA                              u4131 1C12  
                            u4051 1ACA                              u5020 4A00  
                            u5100 4BAE                              u4300 1E28  
                            u4220 1CFC                              u4140 1C1A  
                            u4060 1B10                              u5021 49FC  
                            u5101 4BAA                              u4301 1E24  
                            u4221 1CF8                              u4061 1B0C  
                            u5030 4A26                              u5110 4BC4  
                            u4310 1E3A                              u4230 1D34  
                            u4150 1C42                              u4070 1B26  
                            u5031 4A22                              u5111 4BC0  
                            u4311 1E36                              u4231 1D30  
                            u4151 1C3E                              u4071 1B22  
                            u5040 4A44                              u5120 4BE8  
                            u5200 44BE                              u4400 1F22  
                            u4320 1E50                              u4240 1D7A  
                            u4160 1C60                              u4080 1B38  
                            u6000 0568                              u5041 4A40  
                            u5121 4BE4                              u5201 44BA  
                            u4401 1F1E                              u4321 1E4C  
                            u4241 1D76                              u4161 1C5C  
                            u4081 1B34                              u6001 0564  
                            u5050 4A60                              u5130 4C28  
                            u5210 556C                              u4410 1F3E  
                            u4330 1E66                              u4250 1DB0  
                            u4170 1C80                              u4090 1B48  
                            u6010 0576                              u5051 4A5C  
                            u5131 4C24                              u5211 5568  
                            u4411 1F3A                              u4331 1E62  
                            u4251 1DAC                              u4171 1C7C  
                            u4091 1B44                              u6011 0572  
                            u4500 3AF4                              u4420 53E0  
                            u5300 4940                              u5060 4A86  
                            u5140 4C66                              u4340 1E7A  
                            u4260 1DC0                              u4180 1C8E  
                            u5220 42D4                              u6100 08D6  
                            u6020 05A0                              u4501 3AF0  
                            u4421 53DC                              u5301 493C  
                            u5061 4A82                              u5141 4C62  
                            u4341 1E76                              u4261 1DBC  
                            u4181 1C8A                              u5221 42D0  
                            u6101 08D2                              u6021 059C  
                            u4510 3B34                              u4430 565C  
                            u5310 4996                              u5070 4B5C  
                            u5150 4C9A                              u4350 1E94  
                            u4270 1DEC                              u4190 1C9E  
                            u5230 4308                              u6110 08E4  
                            u6030 06E8                              u4511 3B30  
                            u4431 5658                              u5311 4992  
                            u5071 4B58                              u5151 4C96  
                            u4351 1E90                              u4271 1DE8  
                            u4191 1C9A                              u6111 08E0  
                            u6031 06E4                              u4520 3B7E  
                            u5320 49A6                              u5080 4B76  
                            u4600 23A8                              u5160 43F2  
                            u4360 1ECE                              u4280 1DFC  
                            u5240 4336                              u5400 45B4  
                            u4440 554E                              u6200 0AD6  
                            u6120 08FE                              u6040 074E  
                            u7000 3804                              u4521 3B7A  
                            u5321 49A2                              u5081 4B72  
                            u4601 23A4                              u5161 43EE  
                            u4361 1ECA                              u4281 1DF8  
                            u5241 4332                              u4441 5548  
                            u6201 0AD2                              u6121 08FA  
                            u6041 074A                              u7001 3800  
                            u4530 3BD2                              u5330 547E  
                            u5090 4B90                              u4610 23B8  
                            u5170 4430                              u4370 1EE0  
                            u4290 1E18                              u5250 434A  
                            u5410 51A8                              u4450 5550  
                            u6210 0B5A                              u6130 090C  
                            u6050 0796                              u7010 3822  
                            u4531 3BCE                              u5331 547A  
                            u5091 4B8C                              u4611 23B4  
                            u5171 442C                              u4371 1EDC  
                            u4291 1E14                              u5251 4346  
                            u5235 42FE                              u6211 0B56  
                            u6131 0908                              u6051 0792  
                            u7011 381E                              u6300 39E8  
                            u4460 3A4A                              u4540 3C04  
                            u4700 2584                              u4620 23FC  
                            u5180 444E                              u4380 1EF0  
                            u5260 4372                              u5340 4508  
                            u5500 30C0                              u5420 51BA  
                            u6220 0B74                              u6140 0964  
                            u6060 07A6                              u7100 3E9C  
                            u7020 3832                              u6301 39E2  
                            u4461 3A46                              u4541 3C00  
                            u4701 2580                              u4621 23F8  
                            u5181 444A                              u4381 1EEC  
                            u5261 436E                              u5501 30BC  
                            u5421 51B6                              u6221 0B70  
                            u6141 0960                              u6061 07A2  
                            u7101 3E98                              u7021 382E  
                            u6310 39EA                              u4470 3A7C  
                            u4550 3C42                              u4710 259A  
                            u4630 240E                              u5190 446E  
                            u4390 1F10                              u5270 4392  
                            u5350 4526                              u5510 30E4  
                            u5430 5130                              u6230 0B8C  
                            u6150 0A36                              u6070 080E  
                            u7110 3EAE                              u7030 3842  
                            u4471 3A78                              u4551 3C3E  
                            u4711 2596                              u4631 240A  
                            u5191 446A                              u4391 1F0C  
                            u5271 438E                              u5351 4522  
                            u5431 512A                              u6231 0B88  
                            u6151 0A32                              u6071 080A  
                            u7111 3EAA                              u7031 383E  
                            u6400 51CC                              u6320 3A00  
                            u4560 3C6C                              u5600 2A2C  
                            u4800 26D4                              u4720 25B8  
                            u4640 241E                              u5280 43A2  
                            u5360 454E                              u5520 3100  
                            u5440 5132                              u6240 0BEA  
                            u6160 0A52                              u6080 08B2  
                            u7120 3EE6                              u7040 3852  
                            u7200 4134                              u6401 51C8  
                            u6321 39FC                              u4481 3AA6  
                            u4561 3C68                              u5601 2A26  
                            u4801 26D0                              u4721 25B4  
                            u4641 241A                              u5281 439E  
                            u5361 454A                              u5345 44FE  
                            u5521 30FC                              u5417 519E  
                            u6241 0BE4                              u6161 0A4E  
                            u6081 08AE                              u7121 3EE2  
                            u7041 384E                              u7201 4130  
                            u6410 51E2                              u6330 3A12  
                            u4490 3ACA                              u4570 3C9A  
                            u5290 491E                              u5610 2A2E  
                            u4810 2702                              u4730 25D8  
                            u4650 245E                              u5370 4578  
                            u5530 3154                              u5450 5148  
                            u6250 0BEC                              u6170 0A64  
                            u6090 08C4                              u7130 3EF8  
                            u7050 387C                              u7210 41A6  
                            u6411 51DE                              u6331 3A0E  
                            u4491 3AC6                              u4571 3C96  
                            u5291 491A                              u4811 26FE  
                            u4731 25D4                              u4651 245A  
                            u5371 4574                              u5515 30DA  
                            u5451 5144                              u6171 0A60  
                            u6091 08C0                              u7131 3EF4  
                            u7051 3878                              u7211 41A2  
                            u6420 51F8                              u4580 3CE2  
                            u5700 2C48                              u5620 2A44  
                            u4740 25EA                              u4660 249E  
                            u4900 21B0                              u4820 1F6C  
                            u5540 3170                              u5460 3000  
                            u6260 0C02                              u6180 0A72  
                            u6340 46C6                              u6500 3578  
                            u7140 3F7A                              u7060 388C  
                            u7300 47FE                              u6421 51F4  
                            u4581 3CDE                              u5701 2C44  
                            u5621 2A40                              u4741 25E6  
                            u4661 249A                              u4821 1F68  
                            u5541 316C                              u6261 0BFE  
                            u6181 0A6E                              u6341 46C2  
                            u6501 3574                              u7141 3F76  
                            u7061 3888                              u7221 41BC  
                            u7301 47FA                              u6430 520E  
                            u6270 38E0                              u5710 2C58  
                            u5630 2A74                              u4750 2618  
                            u4670 2514                              u4590 2396  
                            u4910 220A                              u4830 1F7E  
                            u5390 45B2                              u5550 31AC  
                            u5470 3030                              u6190 0AA8  
                            u6350 46F8                              u6510 35D4  
                            u7070 389C                              u7230 41D8  
                            u7310 4830                              u6431 520A  
                            u8007 55F4                              u6271 38DC  
                            u5711 2C54                              u5631 2A70  
                            u4751 2614                              u4671 2510  
                            u4591 2392                              u4911 2206  
                            u4831 1F7A                              u5391 45AC  
                            u5551 31A8                              u5535 314A  
                            u5471 302C                              u6191 0AA4  
                            u6351 46F4                              u6511 35D0  
                            u7071 3898                              u7231 41D4  
                            u7311 482C                              u7151 40B0  
                            u5560 55BE                              u6280 3916  
                            u5720 2C6A                              u5640 2A90  
                            u4760 262E                              u4680 2536  
                            u4920 222A                              u4840 1F8E  
                            u5480 3052                              u5800 01AE  
                            u6360 4714                              u6600 14C2  
                            u6520 362A                              u6440 4FE4  
                            u7400 3E4E                              u7240 41F4  
                            u7160 40CC                              u8017 4D72  
                            u5561 55B8                              u6281 3912  
                            u5721 2C66                              u5641 2A8C  
                            u4761 262A                              u4681 2532  
                            u4921 2226                              u4905 21A6  
                            u4841 1F8A                              u5385 458A  
                            u5481 304E                              u5465 2FF6  
                            u5801 01A8                              u6361 4710  
                            u6601 14BE                              u6521 3626  
                            u7081 3E64                              u6441 4FE0  
                            u7401 3E4A                              u7321 3D2A  
                            u7241 41F0                              u7161 40C8  
                            u5570 55C0                              u6290 3932  
                            u5730 2C7A                              u5650 2ABE  
                            u4770 2642                              u4690 2560  
                            u4930 223C                              u4850 1FCE  
                            u5810 01B0                              u6370 4726  
                            u6610 1508                              u6530 3674  
                            u7090 3E80                              u6450 501E  
                            u7330 3D9E                              u7250 4206  
                            u7170 40E8                              u8027 4D8C  
                            u6291 392E                              u5731 2C76  
                            u5651 2ABA                              u4771 263E  
                            u4691 255C                              u4931 2238  
                            u4851 1FCA                              u6371 4722  
                            u6611 1504                              u6531 3670  
                            u7091 3E7C                              u6451 501A  
                            u7331 3D9A                              u7411 2CE6  
                            u7251 4202                              u7171 40E4  
                            u5580 52D4                              u5740 2C92  
                            u5660 2ACC                              u4780 265C  
                            u4940 226A                              u4860 1FE0  
                            u5900 044A                              u5820 01C6  
                            u6380 474E                              u6700 16F6  
                            u6620 158A                              u6540 3692  
                            u6460 4CCA                              u7340 3DC6  
                            u7500 2ED0                              u7420 2D02  
                            u7260 422C                              u7180 40FA  
                            u8037 4DA2                              u5581 52D0  
                            u5741 2C8E                              u5661 2AC8  
                            u4781 2658                              u4941 2266  
                            u4861 1FDC                              u5901 0446  
                            u5821 01C2                              u6381 474A  
                            u6701 16F2                              u6621 1584  
                            u6541 368E                              u6461 4CC6  
                            u7341 3DC2                              u7501 2ECC  
                            u7421 2CFE                              u7261 4228  
                            u7181 40F6                              u5590 5302  
                            u3990 4856                              u5670 2BF6  
                            u4790 26A4                              u4950 2280  
                            u4870 1FF0                              u5910 045C  
                            u5830 0252                              u5750 00C6  
                            u6710 1738                              u6630 158C  
                            u6550 36A2                              u6470 4CEC  
                            u6390 5408                              u7350 3DD6  
                            u7510 2F02                              u7430 2D1A  
                            u7270 423E                              u7190 4122  
                            u8047 5772                              u5591 52FE  
                            u3991 4852                              u5671 2BF2  
                            u4791 26A0                              u4951 227C  
                            u4871 1FEC                              u5495 3066  
                            u5911 0458                              u5831 024E  
                            u5751 00C2                              u6711 1734  
                            u6551 369E                              u6471 4CE8  
                            u6391 5404                              u7351 3DD2  
                            u7511 2EFE                              u7431 2D16  
                            u7271 423A                              u7191 411E  
                            u7600 322C                              u5680 2C14  
                            u4960 2294                              u4880 2026  
                            u5496 3070                              u5920 047E  
                            u5840 0282                              u5760 0116  
                            u6720 178E                              u6640 15A2  
                            u6560 36B0                              u6800 4EEE  
                            u6480 4D14                              u7360 3DE6  
                            u7520 2F4E                              u7440 2D30  
                            u7280 42AE                              u7601 3228  
                            u5681 2C10                              u4961 2290  
                            u4881 2022                              u5497 3080  
                            u5921 047A                              u5841 027C  
                            u5761 0112                              u6721 178A  
                            u6641 159E                              u6561 36AC  
                            u6801 4EEA                              u6481 4D10  
                            u7361 3DE2                              u7521 2F4A  
                            u7441 2D2C                              u7281 42AA  
                            u7610 323A                              u5690 2C2E  
                            u4970 22AE                              u4890 2036  
                            u5930 04A4                              u5850 0284  
                            u5770 0124                              u6730 17B2  
                            u6650 15C6                              u6570 36EA  
                            u6490 356A                              u6810 4E74  
                            u7370 3DF8                              u7530 2F5C  
                            u7450 2D94                              u7611 3236  
                            u5691 2C2A                              u4971 22AA  
                            u4891 2032                              u5931 04A0  
                            u5771 0120                              u6731 17AE  
                            u6651 15C2                              u6571 36E6  
                            u6491 3566                              u6811 4E70  
                            u7371 3DF4                              u7531 2F58  
                            u7451 2D90                              u7291 4778  
                            u7700 32E8                              u7620 3250  
                            u6900 4E16                              u4980 22F6  
                            u5940 04BA                              u5860 029A  
                            u5780 0136                              u6740 1844  
                            u6660 1602                              u6580 36F8  
                            u6820 34E2                              u7380 3E1E  
                            u7540 2FA8                              u7460 2DC6  
                            u7701 32E4                              u7621 324C  
                            u4981 22F2                              u5941 04B6  
                            u5861 0296                              u5781 0132  
                            u6741 1840                              u6661 15FE  
                            u6581 36F4                              u6821 34DE  
                            u7381 3E1A                              u7541 2FA4  
                            u7461 2DC2                              u7710 32F8  
                            u7630 3260                              u6910 4E4A  
                            u4990 2324                              u5950 04D6  
                            u5870 031E                              u5790 017E  
                            u6750 18F2                              u6670 16AC  
                            u6590 1478                              u6830 3506  
                            u7390 3E3E                              u7470 2E12  
                            u7550 575C                              u7711 32F4  
                            u7631 325C                              u4991 2320  
                            u5951 04D2                              u5871 031A  
                            u5791 017A                              u6751 18EE  
                            u6671 16A6                              u6591 1474  
                            u6831 3502                              u7391 3E3A  
                            u7471 2E0E                              u7551 5758  
                            u7800 57AC                              u7720 3310  
                            u7640 3278                              u7560 31E0  
                            u6920 4E5A                              u5960 050C  
                            u5880 03B2                              u6760 195A  
                            u6680 16AE                              u6840 352A  
                            u7480 2E20                              u7801 57A8  
                            u7721 330C                              u7641 3274  
                            u7561 31DC                              u6921 4E56  
                            u5961 0508                              u5881 03AE  
                            u6761 1954                              u6841 3526  
                            u7481 2E1C                              u7730 331E  
                            u7650 3286                              u7570 31EE  
                            u5970 0532                              u5890 0424  
                            u6770 195C                              u6690 16C4  
                            u6850 354E                              u7490 2E6C  
                            u7810 4F6A                              u7731 331A  
                            u7651 3282                              u7571 31EA  
                            u6907 4E0C                              u5971 052E  
                            u5891 0420                              u6691 16C0  
                            u6851 354A                              u6931 3712  
                            u7491 2E68                              u7811 4F66  
                            u7740 3334                              u7660 329C  
                            u7580 3204                              u5980 0544  
                            u6780 1972                              u6860 5090  
                            u6940 3782                              u7820 4F8E  
                            u7900 468C                              u7741 3330  
                            u7661 3298                              u7581 3200  
                            u6917 4E40                              u5981 0540  
                            u6781 196E                              u6861 508C  
                            u6941 377E                              u7821 4F8A  
                            u7901 4688                              u7750 3344  
                            u7670 32AC                              u7590 3214  
                            u6870 56C6                              u5990 0552  
                            u6790 1A0E                              u6950 37A6  
                            u7830 4FB2                              u7751 3340  
                            u7671 32A8                              u7591 3210  
                            u6871 56C2                              u5991 054E  
                            u6791 1A0A                              u6951 37A2  
                            u7831 4FAE                              u7760 335C  
                            u7680 32C4                              u6880 50AC  
                            u6960 37B6                              u7840 4612  
                            u7761 3358                              u7681 32C0  
                            u6881 50A8                              u6961 37B2  
                            u7841 460E                              u7770 336A  
                            u7690 32D2                              u6890 50E0  
                            u6970 37D4                              u7850 4624  
                            u7771 3366                              u7691 32CE  
                            u6891 50DC                              u6971 37D0  
                            u7851 4620                              u7780 3380  
                            u6980 37E4                              u7860 4634  
                            u7781 337C                              u6981 37E0  
                            u7861 4630                              u7790 3390  
                            u6990 37F4                              u7870 4644  
                            u7791 338C                              u6991 37F0  
                            u7871 4640                              u7880 4654  
                            u7881 4650                              u7890 4670  
                            u7891 466C                              u7977 4090  
                            u7987 5344                              u7997 55E2  
                            _TMR2 000FBC             ??_stopTimeSettingMenu 005F  
                            abs@a 0013                 ?_Lcd_Write_String 0005  
                            _dbuf 0260                              _atoi 38A8  
                            _main 45C6                              _dtoa 29FC  
                            _prec 00F6                              _nout 01AF  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              btemp 005F  
                   ___fpclassifyf 44C8                              prodh 000FF4  
                            prodl 000FF3                              start 009A  
              ??_Lcd_Write_String 0007                   ___fldiv@new_exp 0046  
                 __end_of_Lcd_Cmd 577E                      _tolower$3141 000D  
                    ___param_bank 000000           ??_driverTimeSettingMenu 005F  
                           ??_abs 0015                             ??_pad 0017  
                    ?_menuControl 0001  speedLimitSettingMenu@textCursor2 00E1  
                   ___fltol@sign1 0056                   __end_of___aodiv 3BC0  
                           ?_atoi 0008                   __end_of___fladd 1F52  
                           ?_main 0001                             ?_dtoa 001C  
                 __end_of___aomod 3D24                   __end_of_adcInit 54E2  
                 __end_of___fldiv 2716                   __end_of___awdiv 4A98  
                 __end_of___flneg 558E                             _EEADR 000FA9  
                           STR_10 7FD0                             STR_11 7F09  
                           STR_20 7FF3                             STR_12 7FDE  
                           STR_13 7F1A                             STR_14 7EF7  
                           STR_23 7FEF                             STR_15 7F6F  
                           STR_24 7FF7                             STR_16 7F91  
                           STR_17 7F5E                             STR_18 7EF7  
                           STR_27 7FFB                             STR_19 7FEB  
                 __end_of___awmod 4BFA                             STR_29 7FFB  
                 __end_of___flmul 237C                   __end_of___flsub 539E  
                 __end_of___fltol 43C4                   __end_of___lldiv 4D48  
                           _T0CON 000FD5                   ___awdiv@divisor 0003  
                           i2l685 0096                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 00A9                             _TMR0H 000FD7  
                           _TMR0L 000FD6           __size_of_Lcd_Set_Cursor 0066  
             ___lmul@multiplicand 0005                             _fabsf 566A  
                           _flags 00F8                             _fputc 4844  
                           _fputs 539E                   __end_of_isdigit 55C6  
                     ?_PWM1_setDC 0058                      _adc_raw_data 0173  
                     ?_PWM2_setDC 0058                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 01B1                             _putch 57D0  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 530E                   __end_of_isupper 5556  
                __end_of_PWM_Init 571C                             tablat 000FF5  
                           ttemp5 0060                             ttemp6 0063  
                           ttemp7 0067                             status 000FD8  
          ?_speedLimitSettingMenu 0001                             wtemp8 0060  
                 __end_of_sprintf 52BC                    ?___fpclassifyf 0001  
                 __end_of_tolower 5160                   __end_of_strncmp 4772  
                   ?_readAdcValue 0001                  __end_of_Lcd_Port 5218  
                 __initialization 5218                       _system_init 3F8A  
                    __end_of_atoi 3A38                      __end_of_main 469C  
                    __end_of_dtoa 2CE0       _KP@fs_speed_controller$F949 01E7  
                          ??_atoi 000A                            ??_main 005F  
                          ??_dtoa 0026                __size_of_Lcd_Clear 000E  
                   __activetblptr 000002   __size_of_calculatedAverageValue 02E6  
        stopTimeSettingMenu@F6910 0210                            ?_fabsf 001C  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _CCPR1L 000FBE  
                          _CCPR2L 000F67                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            ?_putch 0001  
                          i2l6520 0018                            i2l6530 0046  
                          i2l6522 0026                            i2l6540 0074  
                          i2l6532 004C                            i2l6524 0028  
                          i2l6542 008A                            i2l6534 005E  
                          i2l6526 0030                            i2l6518 000A  
                          i2l6544 0092                            i2l6536 0060  
                          i2l6528 0034                            i2l6538 0070  
                       ??_Lcd_Cmd 0002                            _TIMER0 0008  
                  ??_readAdcValue 0003           __size_of_Lcd_Write_Char 0038  
                __end_of___xxtofl 370C                 _scanAdcConversion 0C4E  
              _timer_counter_flag 00FA                ?_scanAdcConversion 0001  
            __size_of_eepromWrite 002E                      vfprintf@cfmt 00CD  
                __end_of_lcd_init 4DDE                            ___flge 43C4  
                          ___fleq 4BFA                  __end_of_mainMenu 38A8  
                          ___lmul 4FC6                         ??___aodiv 0011  
                       ??___fladd 003D                         ??___aomod 0011  
                          ___wmul 571C                         ??_adcInit 0001  
                       ??___fldiv 003D                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___awmod 0005  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _efgtoa 009E                            _floorf 2FB8  
             __size_of_PWM1_setDC 007A                            fabsf@u 0020  
                          fabsf@x 001C                  __end_of_mcu_init 57AE  
                __end_of_exitLine 57D0               __size_of_PWM2_setDC 007A  
               _secretMenuCounter 00FC               ??_scanAdcConversion 0058  
                          clear_0 523E                            clear_1 524A  
                          clear_2 5256                   eepromWrite@data 0001  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                 ___awmod@counter 0005                            pad@buf 0013  
                          dtoa@fp 001C                            _strcpy 5160  
                          _strlen 5634                            fputc@c 0001  
            readAdcValue@adcValue 0006                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 7EF6                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 509A  
                       ??_sprintf 005F                         ??_tolower 0009  
                __end_of_stopMenu 4844                         ??_strncmp 0007  
      __end_of_buttonControlFlags 339A                   Lcd_Set_Cursor@a 0005  
                 Lcd_Set_Cursor@b 0004                   Lcd_Set_Cursor@y 0007  
                 Lcd_Set_Cursor@z 0006                        ___flge@ff1 0035  
                      ___flge@ff2 0039                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 0018                      ___xxtofl@exp 0017  
                    ___xxtofl@val 000E                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                     mainMenu@F6894 0163  
       __end_of_scanAdcConversion 1454                        __accesstop 0060  
         __end_of__initialization 525C                        ___flneg@f1 0001  
          _calculatedAverageValue 2716                 __end_of_Lcd_Clear 57CE  
                   ___rparam_used 000001                        ___fltol@f1 004E  
                  __pcstackCOMRAM 0001                      __pidataBANK1 5424  
      driverTimeSettingMenu@F6913 0200                     __end_of_fabsf 569E  
                ??_openLCD_Script 000B                     __end_of_fputc 490E  
                   __end_of_fputs 53E2                     __end_of_putch 57D2  
                       ?_PWM_Init 0001                    _Lcd_Set_Cursor 509A  
    _KP@fs_speed_controller$F1163 01DF      _KP@fs_speed_controller$F2203 01BF  
    _KP@fs_speed_controller$F2072 01C7      _KP@fs_speed_controller$F1338 01D7  
    _KP@fs_speed_controller$F2356 01B7      _KP@fs_speed_controller$F1838 01CF  
               eepromRead@address 0001              __size_of_menuControl 0076  
                         ??_fabsf 0020                         ?_Lcd_Port 0001  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_putch 0001                        __pbssBANK0 00F3  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
             PWM1_setDC@dutycycle 0058                           ?_TIMER0 0001  
                         ?___flge 0035                           ?___fleq 0001  
              __size_of_pauseMenu 013A                           ?___lmul 0001  
                         ?___wmul 0001                           ?_efgtoa 0058  
  __size_of_driverTimeSettingMenu 012C                           _CCP1CON 000FBD  
                         _CCP2CON 000F66                           ?_floorf 004E  
   __end_of_driverTimeSettingMenu 3F8A                    ___lmul@product 0009  
       __size_of_Lcd_Write_String 007E            __end_of_Lcd_Set_Cursor 5100  
                      ??_PWM_Init 0001                           ?_strcpy 0001  
                         ?_strlen 0001              __end_of_readAdcValue 5424  
                      _eepromRead 5742                         ?___xxtofl 000E  
  stopTimeSettingMenu@textCursor2 00E1                __size_of_vfpfcnvrt 063E  
     __end_of_stopTimeSettingMenu 41B6                        ??_Lcd_Port 0001  
              __size_of_startMenu 001A                      ??_PWM1_setDC 005A  
                    ??_PWM2_setDC 005A                         ?_lcd_init 0001  
         __size_of_menuInitialize 0028           ??_speedLimitSettingMenu 005F  
                       ?_mainMenu 0001                     _menu_selected 00FB  
              __size_of_stopMotor 003C        __size_of_scanAdcConversion 0806  
                  _Lcd_Write_Char 55C6                           _Lcd_Cmd 5760  
                       ?_mcu_init 0001                         ?_exitLine 0001  
                 __size_of_TIMER0 0092                        _controller 0150  
                         __Hparam 0000                           __Lparam 0000  
             PWM2_setDC@dutycycle 0058                      ?_system_init 0001  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 3A38                           ___fladd 1A92  
                         ___aomod 3BC0                           _adcInit 54A4  
                         ___fldiv 237C                           ___awdiv 49D4  
                         ___flneg 5556                   __size_of___lmul 006A  
                         ___awmod 4B4A                           ___flmul 1F52  
                         ___flsub 5358                           ___fltol 42BE  
                         ___lldiv 4CA4                   __size_of___wmul 0026  
                       ?_vfprintf 00C7                   __size_of_efgtoa 0BB0  
                       ?_stopMenu 0001                   __size_of_floorf 0216  
                         __pcinit 5218                __end_of_PWM1_setDC 4F50  
                         __ramtop 0600                   ?_Lcd_Set_Cursor 0004  
              __end_of_PWM2_setDC 4ED6                           __ptext0 45C6  
                         __ptext1 57AE                           __ptext2 3F8A  
                         __ptext3 5742                           __ptext4 530E  
                         __ptext5 57C0                           __ptext6 56CC  
                         __ptext7 4F50                           __ptext8 4A98  
                         __ptext9 40AA                        _menu_flags 0197  
                      _menu_value 00F3                   __size_of_strcpy 005C  
                 __size_of_strlen 0036                         _T2CONbits 000FBA  
                    __size_of_abs 0040                      __size_of_pad 00C6  
                         _isdigit 558E                        ??___xxtofl 0012  
                ___awmod@dividend 0001                           _isspace 52BC  
                         _isupper 551E                           efgtoa@c 005E  
                         efgtoa@d 0087                           efgtoa@e 009F  
                         efgtoa@f 005A                           efgtoa@g 009B  
                         efgtoa@h 0091                           efgtoa@i 0099  
                         efgtoa@l 0095                           efgtoa@m 0083  
                         efgtoa@n 00A1                           efgtoa@p 008B  
                         efgtoa@t 007F                           efgtoa@u 00A3  
                         efgtoa@w 008E                     ?_speedControl 0058  
                         atoi@neg 000E                     ?_timer_0_init 0001  
               __end_of_pauseMenu 3E5E                           _sprintf 526A  
                         _tolower 5100                        ??_lcd_init 0004  
          __end_of_Lcd_Write_Char 55FE                           _strncmp 469C  
            end_of_initialization 525C                        ??_mainMenu 005F  
            speedControl@position 0058                           floorf@e 0064  
                         floorf@m 0060                           floorf@u 0066  
                         floorf@x 004E                        _secretMenu 2CE0  
                         fputc@fp 0003                        ??_mcu_init 0001  
                      ??_exitLine 0001                     __Lmediumconst 7EF6  
                         fputs@fp 000C                   ___lldiv@divisor 0005  
                 ___lldiv@counter 000D                 __end_of_vfpfcnvrt 1A92  
                      efgtoa@mode 0090                        efgtoa@sign 0089  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         Lcd_Port@a 0001  
               __end_of_startMenu 5798                        ??_vfprintf 005F  
                      ??_stopMenu 005F                           strcpy@d 0009  
                         strlen@a 0003                           strcpy@s 0007  
                         strlen@s 0001                 __end_of_stopMotor 551E  
                       _PORTBbits 000F81                         _PORTDbits 000F83  
                     ?_eepromRead 0001                       ___fladd@grs 0044  
                   ___xxtofl@sign 0016                    pauseMenu@F6900 0240  
                       _TRISAbits 000F92                    ??_speedControl 005C  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _TRISEbits 000F96  
                  ??_timer_0_init 0001              pauseMenu@textCursor2 00E1  
                     ___fldiv@grs 0048                       ___fldiv@rem 0041  
                      _startMotor 55FE                   ?_Lcd_Write_Char 0001  
         ?_calculatedAverageValue 0001                 Lcd_Write_String@a 0005  
               Lcd_Write_String@i 0009                       ___flmul@grs 0029  
                   ??_eepromWrite 0002          _button_bounce_controller 019D  
                  __end_of_TIMER0 009A               mainMenu@textCursor2 00E1  
                   ?_stateMachine 0001                _buttonControlFlags 31CE  
                       _Lcd_Clear 57C0                      _convert_data 0100  
           __size_of_readAdcValue 0042                    __end_of___flge 44C8  
                  __end_of___fleq 4CA4                    __end_of___lmul 5030  
                     vfpfcnvrt@ap 00AB                       vfpfcnvrt@ct 00C3  
                     vfpfcnvrt@fp 00A7                       vfpfcnvrt@ll 00B1  
                  __end_of___wmul 5742                  _Lcd_Write_String 4DDE  
                  __end_of_efgtoa 0C4E               ?_buttonControlFlags 0001  
                  __end_of_floorf 31CE                        floorf@F524 01A3  
                  __end_of_strcpy 51BC                    __end_of_strlen 566A  
               __size_of_PWM_Init 0028               start_initialization 5218  
                     __end_of_abs 54A4                       __end_of_pad 49D4  
  __end_of_calculatedAverageValue 29FC                    _menuInitialize 56CC  
                    _driver_limit 0183                       ?_secretMenu 0001  
               __size_of_Lcd_Port 005C              ??_buttonControlFlags 0001  
                        ??_TIMER0 0001                     stopMenu@F6897 0250  
           __end_of___fpclassifyf 45C6                      _readAdcValue 53E2  
                  ??_stateMachine 00F1               __size_of_eepromRead 001E  
                     vfprintf@fmt 00C9                        ?_Lcd_Clear 0001  
                        ??___flge 003D                          ??___fleq 0009  
                        ??___lmul 0009               __end_of_eepromWrite 56CC  
                        ??___wmul 0005                          ??_efgtoa 006A  
                     __pdataBANK1 01B3                          ??_floorf 0052  
            __size_of_system_init 0120                   Lcd_Write_Char@a 0004  
                 Lcd_Write_Char@y 0003                     ??_menuControl 005F  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0039                         ___fladd@b 0035  
                       ___fldiv@a 0039                         ___fldiv@b 0035  
                       ___flmul@a 0020                         ___flmul@b 001C  
                       ___flsub@a 0049                         ___flsub@b 0045  
          __end_of_menuInitialize 56F4                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                 __size_of___xxtofl 01B4  
                     ?_startMotor 0001    __size_of_speedLimitSettingMenu 0108  
   __end_of_speedLimitSettingMenu 42BE                          ?_Lcd_Cmd 0001  
               __size_of_lcd_init 0096                 __size_of_mainMenu 019C  
                       _atoi$3046 0010                         _atoi$3047 0014  
                       _atoi$3048 0012                   secretMenu@F6904 0230  
               __size_of_mcu_init 0016                 __size_of_exitLine 0002  
                     _efgtoa$2980 0075                       _efgtoa$2990 007D  
                     _efgtoa$2984 0077                       _efgtoa$2979 0073  
                     _efgtoa$2988 0079                       _efgtoa$2989 007B  
                       _dtoa$2955 002E              __end_of_speedControl 3558  
                ??_Lcd_Set_Cursor 0005                         __pintcode 0008  
                   __pmediumconst 7EF6              __end_of_timer_0_init 57C0  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001               __size_of_secretMenu 02D8  
               __size_of_vfprintf 006A             _driverTimeSettingMenu 3E5E  
               __size_of_stopMenu 00D2                         fabsf@F463 01AB  
                        ?_isdigit 0001                          ?_isspace 0001  
                 ?_menuInitialize 0001                          ?_isupper 0001  
         __size_of_openLCD_Script 004A               __end_of_menuControl 4FC6  
                  __size_of_fabsf 0034                          ?_sprintf 00CF  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002                eepromWrite@address 0002  
                       _pauseMenu 3D24                    ___wmul@product 0005  
    __size_of_stopTimeSettingMenu 010C                          _LATCbits 000F8B  
                        _LATDbits 000F8C                       _eepromWrite 569E  
                  PWM1_setDC@duty 005C                          Lcd_Cmd@a 0003  
                        _PIR2bits 000FA1                          i2u791_40 0018  
                        i2u791_41 0014                          i2u792_40 0026  
                        i2u792_41 0022                          i2u793_40 0046  
                        i2u793_41 0042                          i2u794_40 005E  
                        i2u794_41 005A                          i2u795_40 0070  
                        i2u795_41 006C                          i2u796_40 008A  
                        i2u796_41 0086                       ??_Lcd_Clear 0004  
                    _pauseIsClick 00FF               __size_of_startMotor 0036  
                       _vfpfcnvrt 1454                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0                          _PWM_Init 56F4  
               ___wmul@multiplier 0001                         _startMenu 577E  
driverTimeSettingMenu@textCursor2 00E1                      ??_eepromRead 0001  
                ??_Lcd_Write_Char 0002                    PWM2_setDC@duty 005C  
                       _stopMotor 54E2        speedLimitSettingMenu@F6907 0220  
            __end_of_stateMachine 4B4A                      _isspace$3077 0007  
                        _Lcd_Port 51BC                        vfpfcnvrt@c 00C6  
                      vfpfcnvrt@f 00BF                 ___lmul@multiplier 0001  
                       copy_data0 522C          __end_of_Lcd_Write_String 4E5C  
                      ?_pauseMenu 0001                  __size_of_Lcd_Cmd 001E  
                      _EECON1bits 000FA6                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 5760  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of_adcInit 003E  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                  __size_of___lldiv 00A4  
                      ?_vfpfcnvrt 00A7            ?_driverTimeSettingMenu 0001  
                     _menuControl 4F50                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        ?_startMenu 0001  
                      _ANSELAbits 000F38                        _ANSELBbits 000F39  
                      _ANSELCbits 000F3A                        _ANSELDbits 000F3B  
                      _ANSELEbits 000F3C                ___fpclassifyf@F463 01A7  
                      sprintf@fmt 00D1                          ___xxtofl 3558  
                      ?_stopMotor 0001                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 4772  
                        __ptext11 577E                          __ptext20 2716  
                        __ptext12 41B6                          __ptext21 4FC6  
                        __ptext13 2CE0                          __ptext30 526A  
                        __ptext22 4CA4                          __ptext14 3D24  
                        __ptext31 5030                          __ptext23 57CE  
                        __ptext15 370C                          __ptext40 42BE  
                        __ptext32 1454                          __ptext24 3E5E  
                        __ptext16 55FE                          __ptext41 5358  
                        __ptext33 469C                          __ptext25 54E2  
                        __ptext17 339A                          __ptext50 29FC  
                        __ptext42 1A92                          __ptext34 009E  
                        __ptext26 4E5C                          __ptext18 0C4E  
                        __ptext51 490E                          __ptext43 5556  
                        __ptext35 5100                          __ptext27 4ED6  
                        __ptext19 53E2                          __ptext60 52BC  
                        __ptext52 5634                          __ptext44 1F52  
                        __ptext36 551E                          __ptext28 566A  
                        __ptext61 558E                          __ptext53 539E  
                        __ptext45 43C4                          __ptext37 5160  
                        __ptext29 3558                          __ptext70 5760  
                        __ptext62 571C                          __ptext54 4844  
                        __ptext46 4BFA                          __ptext38 2FB8  
                        __ptext71 51BC                          __ptext63 569E  
                        __ptext55 57D0                          __ptext47 237C  
                        __ptext39 44C8                          __ptext72 54A4  
                        __ptext64 4DDE                          __ptext56 5464  
                        __ptext48 4B4A                          __ptext73 56F4  
                        __ptext65 55C6                          __ptext57 3BC0  
                        __ptext49 49D4                          __ptext66 509A  
                        __ptext58 3A38                          __ptext67 31CE  
                        __ptext59 38A8                          __ptext68 5798  
                        __ptext69 4D48                  __size_of_isupper 0038  
                        _lcd_init 4D48                          _mainMenu 370C  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                    ??_secretMenu 005F                        strcpy@dest 0001  
                __size_of_strncmp 00D6                          _mcu_init 5798  
                        _exitLine 57CE                     __size_of_atoi 0190  
                   __size_of_main 00D6                     __size_of_dtoa 02E4  
           __size_of_speedControl 01BE             __size_of_timer_0_init 0012  
           secretMenu@textCursor2 00E1                          efgtoa@fp 0058  
                        efgtoa@ne 0085                          efgtoa@pp 0081  
                        efgtoa@ou 006F                          int$flags 005F  
                        _vfprintf 5030                          _stopMenu 4772  
          readAdcValue@adcChannel 0005                  ___aomod@dividend 0001  
              __end_of_secretMenu 2FB8                    _vfpfcnvrt$3010 00BD  
                  _vfpfcnvrt$3004 00B9                    _vfpfcnvrt$3005 00BB  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  _openLCD_Script 530E      _KD@fs_speed_controller$F1164 01DB  
    _KD@fs_speed_controller$F2204 01BB      _KD@fs_speed_controller$F2073 01C3  
    _KD@fs_speed_controller$F1339 01D3      _KD@fs_speed_controller$F2357 01B3  
    _KD@fs_speed_controller$F1839 01CB                          isdigit@c 0001  
                    _speedControl 339A                      _timer_0_init 57AE  
                    ??_startMotor 005E                Lcd_Write_Char@temp 0002  
                        intlevel2 0000                         sprintf@ap 00D9  
                     ??_pauseMenu 005F       __size_of_buttonControlFlags 01CC  
                        isspace@c 0001                  ___lldiv@dividend 0001  
                       strcpy@src 0003                          isupper@c 0001  
                       strncmp@_l 0001                         strncmp@_r 0003  
                      _OSCCONbits 000FD3                     ??_system_init 0002  
                     efgtoa@nmode 008D                      _procces_data 0130  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 00AD  
                 ___aomod@counter 0011                Lcd_Set_Cursor@temp 0008  
                ??_menuInitialize 0001                __end_of_startMotor 5634  
     _KD@fs_speed_controller$F950 01E3             __size_of_stateMachine 00B2  
                     ??_startMenu 0001               _stopTimeSettingMenu 40AA  
          __end_of_openLCD_Script 5358                          sprintf@f 00DB  
                        tolower@c 0007                          sprintf@s 00CF  
          __size_of___fpclassifyf 00FE                  ___lldiv@quotient 0009  
                     ??_stopMotor 005E                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
                     _timer_value 018F                     ___fladd@signs 0041  
                      _PWM1_setDC 4ED6                        _PWM2_setDC 4E5C  
                    ___aodiv@sign 0012                      ___fladd@aexp 0042  
                    ___fladd@bexp 0043              ?_stopTimeSettingMenu 0001  
                    ?_eepromWrite 0001             _speedLimitSettingMenu 41B6  
                    ___aomod@sign 0012                      _stateMachine 4A98  
