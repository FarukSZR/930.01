

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sat Aug 15 18:06:56 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=2
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=2
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=3
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=1
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=3
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=3
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=3
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=3
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=3
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=2
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=2
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=2
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=2
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=2
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=1
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=1
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=3
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=3
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=3
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=3
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=3
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=3
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=3
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=3
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=2
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    80                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    81                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    82                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    83                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    84                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    85  0000                     
    86                           ; Version 2.20
    87                           ; Generated 05/05/2020 GMT
    88                           ; 
    89                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    90                           ; All rights reserved.
    91                           ; 
    92                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    93                           ; 
    94                           ; Redistribution and use in source and binary forms, with or without modification, are
    95                           ; permitted provided that the following conditions are met:
    96                           ; 
    97                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    98                           ;        conditions and the following disclaimer.
    99                           ; 
   100                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   101                           ;        of conditions and the following disclaimer in the documentation and/or other
   102                           ;        materials provided with the distribution.
   103                           ; 
   104                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   105                           ;        software without specific prior written permission.
   106                           ; 
   107                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   108                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   109                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   110                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   111                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   112                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   113                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   114                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   115                           ; 
   116                           ; 
   117                           ; Code-generator required, PIC18F45K22 Definitions
   118                           ; 
   119                           ; SFR Addresses
   120  0000                     
   121                           	psect	eeprom_data
   122  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   123  0000                     
   124                           	psect	idataBANK1
   125  005C96                     __pidataBANK1:
   126                           	callstack 0
   127                           
   128                           ;initializer for _KD@fs_speed_controller$F1781
   129  005C96  0000               	dw	0
   130  005C98  3F80               	dw	16256
   131                           
   132                           ;initializer for _KP@fs_speed_controller$F1780
   133  005C9A  CCCD               	dw	52429
   134  005C9C  3E4C               	dw	15948
   135                           
   136                           ;initializer for _KD@fs_speed_controller$F1597
   137  005C9E  0000               	dw	0
   138  005CA0  3F80               	dw	16256
   139                           
   140                           ;initializer for _KP@fs_speed_controller$F1596
   141  005CA2  CCCD               	dw	52429
   142  005CA4  3E4C               	dw	15948
   143                           
   144                           ;initializer for _KD@fs_speed_controller$F1180
   145  005CA6  0000               	dw	0
   146  005CA8  3F80               	dw	16256
   147                           
   148                           ;initializer for _KP@fs_speed_controller$F1179
   149  005CAA  CCCD               	dw	52429
   150  005CAC  3E4C               	dw	15948
   151                           
   152                           ;initializer for _KD
   153  005CAE  0000               	dw	0
   154  005CB0  3F80               	dw	16256
   155                           
   156                           ;initializer for _KP
   157  005CB2  CCCD               	dw	52429
   158  005CB4  3E4C               	dw	15948
   159  0000                     _ANSELCbits	set	3898
   160  0000                     _ANSELBbits	set	3897
   161  0000                     _ANSELDbits	set	3899
   162  0000                     _ANSELEbits	set	3900
   163  0000                     _ANSELAbits	set	3896
   164  0000                     _T0CON	set	4053
   165  0000                     _TMR0L	set	4054
   166  0000                     _TMR0H	set	4055
   167  0000                     _INTCONbits	set	4082
   168  0000                     _CCPR2L	set	3943
   169  0000                     _CCPR1L	set	4030
   170  0000                     _PR2	set	4027
   171  0000                     _TMR2	set	4028
   172  0000                     _T2CONbits	set	4026
   173  0000                     _CCP2CON	set	3942
   174  0000                     _CCP1CON	set	4029
   175  0000                     _LATCbits	set	3979
   176  0000                     _LATDbits	set	3980
   177  0000                     _TRISCbits	set	3988
   178  0000                     _OSCTUNEbits	set	3995
   179  0000                     _OSCCONbits	set	4051
   180  0000                     _TRISBbits	set	3987
   181  0000                     _TRISDbits	set	3989
   182  0000                     _PORTDbits	set	3971
   183  0000                     _PORTBbits	set	3969
   184  0000                     _PIR2bits	set	4001
   185  0000                     _EECON2	set	4007
   186  0000                     _EEDATA	set	4008
   187  0000                     _EECON1bits	set	4006
   188  0000                     _EEADR	set	4009
   189  0000                     _ADCON2bits	set	4032
   190  0000                     _ADCON1	set	4033
   191  0000                     _ADCON0	set	4034
   192  0000                     _TRISEbits	set	3990
   193  0000                     _TRISAbits	set	3986
   194  0000                     _ADRESL	set	4035
   195  0000                     _ADRESH	set	4036
   196  0000                     _ADCON0bits	set	4034
   197                           
   198                           	psect	smallconst
   199  000600                     __psmallconst:
   200                           	callstack 0
   201  000600  00                 	db	0
   202  000601                     STR_4:
   203  000601  25                 	db	37
   204  000602  64                 	db	100	;'d'
   205  000603  20                 	db	32
   206  000604  20                 	db	32
   207  000605  20                 	db	32
   208  000606  20                 	db	32
   209  000607  20                 	db	32
   210  000608  20                 	db	32
   211  000609  20                 	db	32
   212  00060A  20                 	db	32
   213  00060B  20                 	db	32
   214  00060C  20                 	db	32
   215  00060D  20                 	db	32
   216  00060E  20                 	db	32
   217  00060F  20                 	db	32
   218  000610  20                 	db	32
   219  000611  20                 	db	32
   220  000612  00                 	db	0
   221  000613                     STR_13:
   222  000613  50                 	db	80	;'P'
   223  000614  49                 	db	73	;'I'
   224  000615  44                 	db	68	;'D'
   225  000616  20                 	db	32
   226  000617  50                 	db	80	;'P'
   227  000618  41                 	db	65	;'A'
   228  000619  52                 	db	82	;'R'
   229  00061A  41                 	db	65	;'A'
   230  00061B  4D                 	db	77	;'M'
   231  00061C  20                 	db	32
   232  00061D  20                 	db	32
   233  00061E  20                 	db	32
   234  00061F  20                 	db	32
   235  000620  20                 	db	32
   236  000621  20                 	db	32
   237  000622  20                 	db	32
   238  000623  00                 	db	0
   239  000624                     STR_7:
   240  000624  48                 	db	72	;'H'
   241  000625  49                 	db	73	;'I'
   242  000626  5A                 	db	90	;'Z'
   243  000627  20                 	db	32
   244  000628  4C                 	db	76	;'L'
   245  000629  69                 	db	105	;'i'
   246  00062A  4D                 	db	77	;'M'
   247  00062B  69                 	db	105	;'i'
   248  00062C  54                 	db	84	;'T'
   249  00062D  69                 	db	105	;'i'
   250  00062E  20                 	db	32
   251  00062F  20                 	db	32
   252  000630  20                 	db	32
   253  000631  20                 	db	32
   254  000632  20                 	db	32
   255  000633  20                 	db	32
   256  000634  00                 	db	0
   257  000635                     STR_1:
   258  000635  4B                 	db	75	;'K'
   259  000636  41                 	db	65	;'A'
   260  000637  4C                 	db	76	;'L'
   261  000638  41                 	db	65	;'A'
   262  000639  4E                 	db	78	;'N'
   263  00063A  20                 	db	32
   264  00063B  5A                 	db	90	;'Z'
   265  00063C  41                 	db	65	;'A'
   266  00063D  4D                 	db	77	;'M'
   267  00063E  41                 	db	65	;'A'
   268  00063F  4E                 	db	78	;'N'
   269  000640  20                 	db	32
   270  000641  20                 	db	32
   271  000642  20                 	db	32
   272  000643  20                 	db	32
   273  000644  20                 	db	32
   274  000645  00                 	db	0
   275  000646                     STR_9:
   276  000646  5A                 	db	90	;'Z'
   277  000647  41                 	db	65	;'A'
   278  000648  4D                 	db	77	;'M'
   279  000649  41                 	db	65	;'A'
   280  00064A  4E                 	db	78	;'N'
   281  00064B  20                 	db	32
   282  00064C  44                 	db	68	;'D'
   283  00064D  4F                 	db	79	;'O'
   284  00064E  4C                 	db	76	;'L'
   285  00064F  44                 	db	68	;'D'
   286  000650  55                 	db	85	;'U'
   287  000651  20                 	db	32
   288  000652  20                 	db	32
   289  000653  20                 	db	32
   290  000654  20                 	db	32
   291  000655  20                 	db	32
   292  000656  00                 	db	0
   293  000657                     STR_11:
   294  000657  48                 	db	72	;'H'
   295  000658  41                 	db	65	;'A'
   296  000659  52                 	db	82	;'R'
   297  00065A  45                 	db	69	;'E'
   298  00065B  4B                 	db	75	;'K'
   299  00065C  45                 	db	69	;'E'
   300  00065D  54                 	db	84	;'T'
   301  00065E  20                 	db	32
   302  00065F  44                 	db	68	;'D'
   303  000660  55                 	db	85	;'U'
   304  000661  52                 	db	82	;'R'
   305  000662  44                 	db	68	;'D'
   306  000663  55                 	db	85	;'U'
   307  000664  20                 	db	32
   308  000665  20                 	db	32
   309  000666  20                 	db	32
   310  000667  00                 	db	0
   311  000668                     STR_3:
   312  000668  48                 	db	72	;'H'
   313  000669  41                 	db	65	;'A'
   314  00066A  52                 	db	82	;'R'
   315  00066B  45                 	db	69	;'E'
   316  00066C  4B                 	db	75	;'K'
   317  00066D  54                 	db	84	;'T'
   318  00066E  20                 	db	32
   319  00066F  5A                 	db	90	;'Z'
   320  000670  41                 	db	65	;'A'
   321  000671  4D                 	db	77	;'M'
   322  000672  41                 	db	65	;'A'
   323  000673  4E                 	db	78	;'N'
   324  000674  49                 	db	73	;'I'
   325  000675  20                 	db	32
   326  000676  64                 	db	100	;'d'
   327  000677  6B                 	db	107	;'k'
   328  000678  00                 	db	0
   329  000679                     STR_5:
   330  000679  44                 	db	68	;'D'
   331  00067A  55                 	db	85	;'U'
   332  00067B  52                 	db	82	;'R'
   333  00067C  4D                 	db	77	;'M'
   334  00067D  41                 	db	65	;'A'
   335  00067E  20                 	db	32
   336  00067F  5A                 	db	90	;'Z'
   337  000680  41                 	db	65	;'A'
   338  000681  4D                 	db	77	;'M'
   339  000682  41                 	db	65	;'A'
   340  000683  4E                 	db	78	;'N'
   341  000684  49                 	db	73	;'I'
   342  000685  20                 	db	32
   343  000686  20                 	db	32
   344  000687  6D                 	db	109	;'m'
   345  000688  73                 	db	115	;'s'
   346  000689  00                 	db	0
   347  00068A                     STR_6:
   348  00068A  25                 	db	37
   349  00068B  64                 	db	100	;'d'
   350  00068C  20                 	db	32
   351  00068D  20                 	db	32
   352  00068E  20                 	db	32
   353  00068F  20                 	db	32
   354  000690  20                 	db	32
   355  000691  20                 	db	32
   356  000692  20                 	db	32
   357  000693  20                 	db	32
   358  000694  20                 	db	32
   359  000695  20                 	db	32
   360  000696  20                 	db	32
   361  000697  20                 	db	32
   362  000698  20                 	db	32
   363  000699  00                 	db	0
   364  00069A                     STR_10:
   365  00069A  20                 	db	32
   366  00069B  20                 	db	32
   367  00069C  20                 	db	32
   368  00069D  20                 	db	32
   369  00069E  20                 	db	32
   370  00069F  20                 	db	32
   371  0006A0  25                 	db	37
   372  0006A1  64                 	db	100	;'d'
   373  0006A2  3A                 	db	58	;':'
   374  0006A3  25                 	db	37
   375  0006A4  64                 	db	100	;'d'
   376  0006A5  20                 	db	32
   377  0006A6  20                 	db	32
   378  0006A7  20                 	db	32
   379  0006A8  20                 	db	32
   380  0006A9  00                 	db	0
   381  0006AA                     STR_2:
   382  0006AA  20                 	db	32
   383  0006AB  20                 	db	32
   384  0006AC  20                 	db	32
   385  0006AD  20                 	db	32
   386  0006AE  20                 	db	32
   387  0006AF  20                 	db	32
   388  0006B0  25                 	db	37
   389  0006B1  64                 	db	100	;'d'
   390  0006B2  3A                 	db	58	;':'
   391  0006B3  25                 	db	37
   392  0006B4  64                 	db	100	;'d'
   393  0006B5  20                 	db	32
   394  0006B6  20                 	db	32
   395  0006B7  20                 	db	32
   396  0006B8  00                 	db	0
   397  0006B9                     STR_14:
   398  0006B9  4B                 	db	75	;'K'
   399  0006BA  70                 	db	112	;'p'
   400  0006BB  3A                 	db	58	;':'
   401  0006BC  25                 	db	37
   402  0006BD  35                 	db	53	;'5'
   403  0006BE  2E                 	db	46
   404  0006BF  31                 	db	49	;'1'
   405  0006C0  66                 	db	102	;'f'
   406  0006C1  20                 	db	32
   407  0006C2  20                 	db	32
   408  0006C3  20                 	db	32
   409  0006C4  20                 	db	32
   410  0006C5  20                 	db	32
   411  0006C6  00                 	db	0
   412  0006C7                     STR_16:
   413  0006C7  4B                 	db	75	;'K'
   414  0006C8  64                 	db	100	;'d'
   415  0006C9  3A                 	db	58	;':'
   416  0006CA  25                 	db	37
   417  0006CB  35                 	db	53	;'5'
   418  0006CC  2E                 	db	46
   419  0006CD  31                 	db	49	;'1'
   420  0006CE  66                 	db	102	;'f'
   421  0006CF  20                 	db	32
   422  0006D0  20                 	db	32
   423  0006D1  20                 	db	32
   424  0006D2  20                 	db	32
   425  0006D3  00                 	db	0
   426  0006D4                     STR_17:
   427  0006D4  49                 	db	73	;'I'
   428  0006D5  4E                 	db	78	;'N'
   429  0006D6  46                 	db	70	;'F'
   430  0006D7  00                 	db	0
   431  0006D8                     STR_21:
   432  0006D8  4E                 	db	78	;'N'
   433  0006D9  41                 	db	65	;'A'
   434  0006DA  4E                 	db	78	;'N'
   435  0006DB  00                 	db	0
   436  0006DC                     STR_18:
   437  0006DC  69                 	db	105	;'i'
   438  0006DD  6E                 	db	110	;'n'
   439  0006DE  66                 	db	102	;'f'
   440  0006DF  00                 	db	0
   441  0006E0                     STR_22:
   442  0006E0  6E                 	db	110	;'n'
   443  0006E1  61                 	db	97	;'a'
   444  0006E2  6E                 	db	110	;'n'
   445  0006E3  00                 	db	0
   446  0006E4                     STR_25:
   447  0006E4  6C                 	db	108	;'l'
   448  0006E5  66                 	db	102	;'f'
   449  0006E6  00                 	db	0
   450  0006E7  00                 	db	0	; dummy byte at the end
   451  0000                     
   452                           ; #config settings
   453                           
   454                           	psect	cinit
   455  0057F6                     __pcinit:
   456                           	callstack 0
   457  0057F6                     start_initialization:
   458                           	callstack 0
   459  0057F6                     __initialization:
   460                           	callstack 0
   461                           
   462                           ; Initialize objects allocated to BANK1 (32 bytes)
   463                           ; load TBLPTR registers with __pidataBANK1
   464  0057F6  0E96               	movlw	low __pidataBANK1
   465  0057F8  6EF6               	movwf	tblptrl,c
   466  0057FA  0E5C               	movlw	high __pidataBANK1
   467  0057FC  6EF7               	movwf	tblptrh,c
   468  0057FE  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   469  005800  6EF8               	movwf	tblptru,c
   470  005802  EE01  F0AB         	lfsr	0,__pdataBANK1
   471  005806  EE10 F020          	lfsr	1,32
   472  00580A                     copy_data0:
   473  00580A  0009               	tblrd		*+
   474  00580C  CFF5 FFEE          	movff	tablat,postinc0
   475  005810  50E5               	movf	postdec1,w,c
   476  005812  50E1               	movf	fsr1l,w,c
   477  005814  E1FA               	bnz	copy_data0
   478                           
   479                           ; Clear objects allocated to BANK2 (80 bytes)
   480  005816  EE02  F000         	lfsr	0,__pbssBANK2
   481  00581A  0E50               	movlw	80
   482  00581C                     clear_0:
   483  00581C  6AEE               	clrf	postinc0,c
   484  00581E  06E8               	decf	wreg,f,c
   485  005820  E1FD               	bnz	clear_0
   486                           
   487                           ; Clear objects allocated to BANK1 (171 bytes)
   488  005822  EE01  F000         	lfsr	0,__pbssBANK1
   489  005826  0EAB               	movlw	171
   490  005828                     clear_1:
   491  005828  6AEE               	clrf	postinc0,c
   492  00582A  06E8               	decf	wreg,f,c
   493  00582C  E1FD               	bnz	clear_1
   494                           
   495                           ; Clear objects allocated to BANK0 (13 bytes)
   496  00582E  EE00  F0F3         	lfsr	0,__pbssBANK0
   497  005832  0E0D               	movlw	13
   498  005834                     clear_2:
   499  005834  6AEE               	clrf	postinc0,c
   500  005836  06E8               	decf	wreg,f,c
   501  005838  E1FD               	bnz	clear_2
   502  00583A                     end_of_initialization:
   503                           	callstack 0
   504  00583A                     __end_of__initialization:
   505                           	callstack 0
   506  00583A  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   507  00583C  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   508  00583E  0E00               	movlw	low (__Lmediumconst shr (0+16))
   509  005840  6EF8               	movwf	tblptru,c
   510  005842  0100               	movlb	0
   511  005844  EF86  F026         	goto	_main	;jump to C main() function
   512                           
   513                           	psect	bssBANK0
   514  0000F3                     __pbssBANK0:
   515                           	callstack 0
   516  0000F3                     _timer_value:
   517                           	callstack 0
   518  0000F3                     	ds	10
   519  0000FD                     _menu_flags:
   520                           	callstack 0
   521  0000FD                     	ds	1
   522  0000FE                     _button_bounce_controller:
   523                           	callstack 0
   524  0000FE                     	ds	1
   525  0000FF                     _pauseIsClick:
   526                           	callstack 0
   527  0000FF                     	ds	1
   528                           
   529                           	psect	bssBANK1
   530  000100                     __pbssBANK1:
   531                           	callstack 0
   532  000100                     _convert_data:
   533                           	callstack 0
   534  000100                     	ds	48
   535  000130                     _procces_data:
   536                           	callstack 0
   537  000130                     	ds	32
   538  000150                     _controller:
   539                           	callstack 0
   540  000150                     	ds	19
   541  000163                     	ds	16
   542  000173                     _adc_raw_data:
   543                           	callstack 0
   544  000173                     	ds	16
   545  000183                     _driver_limit:
   546                           	callstack 0
   547  000183                     	ds	12
   548  00018F                     floorf@F524:
   549                           	callstack 0
   550  00018F                     	ds	4
   551  000193                     ___fpclassifyf@F463:
   552                           	callstack 0
   553  000193                     	ds	4
   554  000197                     fabsf@F463:
   555                           	callstack 0
   556  000197                     	ds	4
   557  00019B                     _menu_value:
   558                           	callstack 0
   559  00019B                     	ds	3
   560  00019E                     _nout:
   561                           	callstack 0
   562  00019E                     	ds	2
   563  0001A0                     _width:
   564                           	callstack 0
   565  0001A0                     	ds	2
   566  0001A2                     _prec:
   567                           	callstack 0
   568  0001A2                     	ds	2
   569  0001A4                     _flags:
   570                           	callstack 0
   571  0001A4                     	ds	2
   572  0001A6                     stateMachine@secretMenuCounter:
   573                           	callstack 0
   574  0001A6                     	ds	1
   575  0001A7                     _menu_selected:
   576                           	callstack 0
   577  0001A7                     	ds	1
   578  0001A8                     _stopIsClick:
   579                           	callstack 0
   580  0001A8                     	ds	1
   581  0001A9                     _startIsClick:
   582                           	callstack 0
   583  0001A9                     	ds	1
   584  0001AA                     _timer_counter_flag:
   585                           	callstack 0
   586  0001AA                     	ds	1
   587                           
   588                           	psect	dataBANK1
   589  0001AB                     __pdataBANK1:
   590                           	callstack 0
   591  0001AB                     	ds	4
   592  0001AF                     	ds	4
   593  0001B3                     _KD@fs_speed_controller$F1597:
   594                           	callstack 0
   595  0001B3                     	ds	4
   596  0001B7                     _KP@fs_speed_controller$F1596:
   597                           	callstack 0
   598  0001B7                     	ds	4
   599  0001BB                     	ds	4
   600  0001BF                     	ds	4
   601  0001C3                     	ds	4
   602  0001C7                     	ds	4
   603                           
   604                           	psect	bssBANK2
   605  000200                     __pbssBANK2:
   606                           	callstack 0
   607  000200                     _dbuf:
   608                           	callstack 0
   609  000200                     	ds	80
   610                           
   611                           	psect	cstackBANK0
   612  000060                     __pcstackBANK0:
   613                           	callstack 0
   614  000060                     floorf@m:
   615                           	callstack 0
   616                           
   617                           ; 4 bytes @ 0x0
   618  000060                     	ds	4
   619  000064                     floorf@e:
   620                           	callstack 0
   621                           
   622                           ; 2 bytes @ 0x4
   623  000064                     	ds	2
   624  000066                     floorf@u:
   625                           	callstack 0
   626                           
   627                           ; 4 bytes @ 0x6
   628  000066                     	ds	4
   629  00006A                     ??_efgtoa:
   630                           
   631                           ; 1 bytes @ 0xA
   632  00006A                     	ds	5
   633  00006F                     efgtoa@ou:
   634                           	callstack 0
   635                           
   636                           ; 4 bytes @ 0xF
   637  00006F                     	ds	4
   638  000073                     _efgtoa$2503:
   639                           	callstack 0
   640                           
   641                           ; 2 bytes @ 0x13
   642  000073                     	ds	2
   643  000075                     _efgtoa$2504:
   644                           	callstack 0
   645                           
   646                           ; 2 bytes @ 0x15
   647  000075                     	ds	2
   648  000077                     _efgtoa$2508:
   649                           	callstack 0
   650                           
   651                           ; 2 bytes @ 0x17
   652  000077                     	ds	2
   653  000079                     _efgtoa$2512:
   654                           	callstack 0
   655                           
   656                           ; 2 bytes @ 0x19
   657  000079                     	ds	2
   658  00007B                     _efgtoa$2513:
   659                           	callstack 0
   660                           
   661                           ; 2 bytes @ 0x1B
   662  00007B                     	ds	2
   663  00007D                     _efgtoa$2514:
   664                           	callstack 0
   665                           
   666                           ; 2 bytes @ 0x1D
   667  00007D                     	ds	2
   668  00007F                     efgtoa@t:
   669                           	callstack 0
   670                           
   671                           ; 2 bytes @ 0x1F
   672  00007F                     	ds	2
   673  000081                     efgtoa@pp:
   674                           	callstack 0
   675                           
   676                           ; 2 bytes @ 0x21
   677  000081                     	ds	2
   678  000083                     efgtoa@m:
   679                           	callstack 0
   680                           
   681                           ; 2 bytes @ 0x23
   682  000083                     	ds	2
   683  000085                     efgtoa@ne:
   684                           	callstack 0
   685                           
   686                           ; 2 bytes @ 0x25
   687  000085                     	ds	2
   688  000087                     efgtoa@d:
   689                           	callstack 0
   690                           
   691                           ; 2 bytes @ 0x27
   692  000087                     	ds	2
   693  000089                     efgtoa@sign:
   694                           	callstack 0
   695                           
   696                           ; 2 bytes @ 0x29
   697  000089                     	ds	2
   698  00008B                     efgtoa@p:
   699                           	callstack 0
   700                           
   701                           ; 2 bytes @ 0x2B
   702  00008B                     	ds	2
   703  00008D                     efgtoa@nmode:
   704                           	callstack 0
   705                           
   706                           ; 1 bytes @ 0x2D
   707  00008D                     	ds	1
   708  00008E                     efgtoa@w:
   709                           	callstack 0
   710                           
   711                           ; 2 bytes @ 0x2E
   712  00008E                     	ds	2
   713  000090                     efgtoa@mode:
   714                           	callstack 0
   715                           
   716                           ; 1 bytes @ 0x30
   717  000090                     	ds	1
   718  000091                     efgtoa@h:
   719                           	callstack 0
   720                           
   721                           ; 4 bytes @ 0x31
   722  000091                     	ds	4
   723  000095                     efgtoa@l:
   724                           	callstack 0
   725                           
   726                           ; 4 bytes @ 0x35
   727  000095                     	ds	4
   728  000099                     efgtoa@i:
   729                           	callstack 0
   730                           
   731                           ; 2 bytes @ 0x39
   732  000099                     	ds	2
   733  00009B                     efgtoa@g:
   734                           	callstack 0
   735                           
   736                           ; 4 bytes @ 0x3B
   737  00009B                     	ds	4
   738  00009F                     efgtoa@e:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x3F
   742  00009F                     	ds	2
   743  0000A1                     efgtoa@n:
   744                           	callstack 0
   745                           
   746                           ; 2 bytes @ 0x41
   747  0000A1                     	ds	2
   748  0000A3                     efgtoa@u:
   749                           	callstack 0
   750                           
   751                           ; 4 bytes @ 0x43
   752  0000A3                     	ds	4
   753  0000A7                     ?_vfpfcnvrt:
   754                           	callstack 0
   755  0000A7                     vfpfcnvrt@fp:
   756                           	callstack 0
   757                           
   758                           ; 2 bytes @ 0x47
   759  0000A7                     	ds	2
   760  0000A9                     vfpfcnvrt@fmt:
   761                           	callstack 0
   762                           
   763                           ; 2 bytes @ 0x49
   764  0000A9                     	ds	2
   765  0000AB                     vfpfcnvrt@ap:
   766                           	callstack 0
   767                           
   768                           ; 2 bytes @ 0x4B
   769  0000AB                     	ds	2
   770  0000AD                     ??_vfpfcnvrt:
   771                           
   772                           ; 1 bytes @ 0x4D
   773  0000AD                     	ds	4
   774  0000B1                     vfpfcnvrt@ll:
   775                           	callstack 0
   776                           
   777                           ; 8 bytes @ 0x51
   778  0000B1                     	ds	8
   779  0000B9                     _vfpfcnvrt$2528:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x59
   783  0000B9                     	ds	2
   784  0000BB                     _vfpfcnvrt$2529:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x5B
   788  0000BB                     	ds	2
   789  0000BD                     _vfpfcnvrt$2534:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x5D
   793  0000BD                     	ds	2
   794  0000BF                     vfpfcnvrt@f:
   795                           	callstack 0
   796                           
   797                           ; 4 bytes @ 0x5F
   798  0000BF                     	ds	4
   799  0000C3                     vfpfcnvrt@ct:
   800                           	callstack 0
   801                           
   802                           ; 3 bytes @ 0x63
   803  0000C3                     	ds	3
   804  0000C6                     vfpfcnvrt@c:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x66
   808  0000C6                     	ds	1
   809  0000C7                     ?_vfprintf:
   810                           	callstack 0
   811  0000C7                     vfprintf@fp:
   812                           	callstack 0
   813                           
   814                           ; 2 bytes @ 0x67
   815  0000C7                     	ds	2
   816  0000C9                     vfprintf@fmt:
   817                           	callstack 0
   818                           
   819                           ; 2 bytes @ 0x69
   820  0000C9                     	ds	2
   821  0000CB                     vfprintf@ap:
   822                           	callstack 0
   823                           
   824                           ; 2 bytes @ 0x6B
   825  0000CB                     	ds	2
   826  0000CD                     vfprintf@cfmt:
   827                           	callstack 0
   828                           
   829                           ; 2 bytes @ 0x6D
   830  0000CD                     	ds	2
   831  0000CF                     ?_sprintf:
   832                           	callstack 0
   833  0000CF                     sprintf@s:
   834                           	callstack 0
   835                           
   836                           ; 2 bytes @ 0x6F
   837  0000CF                     	ds	2
   838  0000D1                     sprintf@fmt:
   839                           	callstack 0
   840                           
   841                           ; 2 bytes @ 0x71
   842  0000D1                     	ds	8
   843  0000D9                     sprintf@ap:
   844                           	callstack 0
   845                           
   846                           ; 2 bytes @ 0x79
   847  0000D9                     	ds	2
   848  0000DB                     sprintf@f:
   849                           	callstack 0
   850                           
   851                           ; 6 bytes @ 0x7B
   852  0000DB                     	ds	6
   853  0000E1                     ??_stateMachine:
   854                           
   855                           ; 1 bytes @ 0x81
   856  0000E1                     	ds	2
   857  0000E3                     stateMachine@textCursor2:
   858                           	callstack 0
   859                           
   860                           ; 16 bytes @ 0x83
   861  0000E3                     	ds	16
   862                           
   863                           	psect	cstackCOMRAM
   864  000001                     __pcstackCOMRAM:
   865                           	callstack 0
   866  000001                     ?_strlen:
   867                           	callstack 0
   868  000001                     ?___fpclassifyf:
   869                           	callstack 0
   870  000001                     ?_isupper:
   871                           	callstack 0
   872  000001                     ?_isdigit:
   873                           	callstack 0
   874  000001                     ?_strncmp:
   875                           	callstack 0
   876  000001                     ?_isspace:
   877                           	callstack 0
   878  000001                     ?_readAdcValue:
   879                           	callstack 0
   880  000001                     ?___wmul:
   881                           	callstack 0
   882  000001                     ?___awdiv:
   883                           	callstack 0
   884  000001                     ?___awmod:
   885                           	callstack 0
   886  000001                     ?___lmul:
   887                           	callstack 0
   888  000001                     ?___lldiv:
   889                           	callstack 0
   890  000001                     ?___flneg:
   891                           	callstack 0
   892  000001                     ?___aodiv:
   893                           	callstack 0
   894  000001                     ?___aomod:
   895                           	callstack 0
   896  000001                     eepromRead@address:
   897                           	callstack 0
   898  000001                     eepromWrite@data:
   899                           	callstack 0
   900  000001                     Lcd_Port@a:
   901                           	callstack 0
   902  000001                     ___wmul@multiplier:
   903                           	callstack 0
   904  000001                     ___awdiv@dividend:
   905                           	callstack 0
   906  000001                     ___awmod@dividend:
   907                           	callstack 0
   908  000001                     isdigit@c:
   909                           	callstack 0
   910  000001                     isspace@c:
   911                           	callstack 0
   912  000001                     isupper@c:
   913                           	callstack 0
   914  000001                     fputc@c:
   915                           	callstack 0
   916  000001                     strcpy@dest:
   917                           	callstack 0
   918  000001                     strlen@s:
   919                           	callstack 0
   920  000001                     strncmp@_l:
   921                           	callstack 0
   922  000001                     ___lmul@multiplier:
   923                           	callstack 0
   924  000001                     ___lldiv@dividend:
   925                           	callstack 0
   926  000001                     ___fleq@ff1:
   927                           	callstack 0
   928  000001                     ___flneg@f1:
   929                           	callstack 0
   930  000001                     ___fpclassifyf@x:
   931                           	callstack 0
   932  000001                     ___aodiv@dividend:
   933                           	callstack 0
   934  000001                     ___aomod@dividend:
   935                           	callstack 0
   936                           
   937                           ; 8 bytes @ 0x0
   938  000001                     	ds	1
   939  000002                     ??_system_init:
   940  000002                     ??_Lcd_Cmd:
   941  000002                     eepromWrite@address:
   942                           	callstack 0
   943  000002                     Lcd_Write_Char@temp:
   944                           	callstack 0
   945                           
   946                           ; 1 bytes @ 0x1
   947  000002                     	ds	1
   948  000003                     ??_isupper:
   949  000003                     ??_isdigit:
   950  000003                     ??_isspace:
   951  000003                     ??_readAdcValue:
   952  000003                     Lcd_Cmd@a:
   953                           	callstack 0
   954  000003                     Lcd_Write_Char@y:
   955                           	callstack 0
   956  000003                     ___wmul@multiplicand:
   957                           	callstack 0
   958  000003                     ___awdiv@divisor:
   959                           	callstack 0
   960  000003                     ___awmod@divisor:
   961                           	callstack 0
   962  000003                     fputc@fp:
   963                           	callstack 0
   964  000003                     strcpy@src:
   965                           	callstack 0
   966  000003                     strlen@a:
   967                           	callstack 0
   968  000003                     strncmp@_r:
   969                           	callstack 0
   970                           
   971                           ; 2 bytes @ 0x2
   972  000003                     	ds	1
   973  000004                     ??_lcd_init:
   974  000004                     Lcd_Set_Cursor@b:
   975                           	callstack 0
   976  000004                     Lcd_Write_Char@a:
   977                           	callstack 0
   978                           
   979                           ; 1 bytes @ 0x3
   980  000004                     	ds	1
   981  000005                     ??_fputc:
   982  000005                     ??___fpclassifyf:
   983  000005                     ??_strcpy:
   984  000005                     readAdcValue@adcChannel:
   985                           	callstack 0
   986  000005                     Lcd_Set_Cursor@a:
   987                           	callstack 0
   988  000005                     ___awdiv@counter:
   989                           	callstack 0
   990  000005                     ___awmod@counter:
   991                           	callstack 0
   992  000005                     Lcd_Write_String@a:
   993                           	callstack 0
   994  000005                     ___wmul@product:
   995                           	callstack 0
   996  000005                     strncmp@n:
   997                           	callstack 0
   998  000005                     ___lmul@multiplicand:
   999                           	callstack 0
  1000  000005                     ___lldiv@divisor:
  1001                           	callstack 0
  1002  000005                     ___fleq@ff2:
  1003                           	callstack 0
  1004                           
  1005                           ; 4 bytes @ 0x4
  1006  000005                     	ds	1
  1007  000006                     Lcd_Set_Cursor@z:
  1008                           	callstack 0
  1009  000006                     ___awdiv@sign:
  1010                           	callstack 0
  1011  000006                     ___awmod@sign:
  1012                           	callstack 0
  1013  000006                     readAdcValue@adcValue:
  1014                           	callstack 0
  1015                           
  1016                           ; 2 bytes @ 0x5
  1017  000006                     	ds	1
  1018  000007                     ??_strncmp:
  1019  000007                     ??_Lcd_Write_String:
  1020  000007                     ?_tolower:
  1021                           	callstack 0
  1022  000007                     Lcd_Set_Cursor@y:
  1023                           	callstack 0
  1024  000007                     _isspace$2601:
  1025                           	callstack 0
  1026  000007                     ___awdiv@quotient:
  1027                           	callstack 0
  1028  000007                     strcpy@s:
  1029                           	callstack 0
  1030  000007                     tolower@c:
  1031                           	callstack 0
  1032                           
  1033                           ; 2 bytes @ 0x6
  1034  000007                     	ds	1
  1035  000008                     ?_atoi:
  1036                           	callstack 0
  1037  000008                     Lcd_Set_Cursor@temp:
  1038                           	callstack 0
  1039  000008                     atoi@s:
  1040                           	callstack 0
  1041  000008                     strncmp@l:
  1042                           	callstack 0
  1043                           
  1044                           ; 2 bytes @ 0x7
  1045  000008                     	ds	1
  1046  000009                     ??_tolower:
  1047  000009                     ??___fleq:
  1048  000009                     Lcd_Write_String@i:
  1049                           	callstack 0
  1050  000009                     ___fpclassifyf@e:
  1051                           	callstack 0
  1052  000009                     strcpy@d:
  1053                           	callstack 0
  1054  000009                     ___lmul@product:
  1055                           	callstack 0
  1056  000009                     ___lldiv@quotient:
  1057                           	callstack 0
  1058  000009                     ___aodiv@divisor:
  1059                           	callstack 0
  1060  000009                     ___aomod@divisor:
  1061                           	callstack 0
  1062                           
  1063                           ; 8 bytes @ 0x8
  1064  000009                     	ds	1
  1065  00000A                     ??_atoi:
  1066  00000A                     fputs@s:
  1067                           	callstack 0
  1068  00000A                     strncmp@r:
  1069                           	callstack 0
  1070                           
  1071                           ; 2 bytes @ 0x9
  1072  00000A                     	ds	1
  1073  00000B                     ___fpclassifyf@u:
  1074                           	callstack 0
  1075                           
  1076                           ; 4 bytes @ 0xA
  1077  00000B                     	ds	1
  1078  00000C                     fputs@fp:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0xB
  1082  00000C                     	ds	1
  1083  00000D                     ___lldiv@counter:
  1084                           	callstack 0
  1085  00000D                     _tolower$2665:
  1086                           	callstack 0
  1087                           
  1088                           ; 2 bytes @ 0xC
  1089  00000D                     	ds	1
  1090  00000E                     ?___xxtofl:
  1091                           	callstack 0
  1092  00000E                     fputs@c:
  1093                           	callstack 0
  1094  00000E                     atoi@neg:
  1095                           	callstack 0
  1096  00000E                     ___xxtofl@val:
  1097                           	callstack 0
  1098                           
  1099                           ; 4 bytes @ 0xD
  1100  00000E                     	ds	1
  1101  00000F                     fputs@i:
  1102                           	callstack 0
  1103                           
  1104                           ; 2 bytes @ 0xE
  1105  00000F                     	ds	1
  1106  000010                     _atoi$2570:
  1107                           	callstack 0
  1108                           
  1109                           ; 2 bytes @ 0xF
  1110  000010                     	ds	1
  1111  000011                     ?_pad:
  1112                           	callstack 0
  1113  000011                     ___aodiv@counter:
  1114                           	callstack 0
  1115  000011                     ___aomod@counter:
  1116                           	callstack 0
  1117  000011                     pad@fp:
  1118                           	callstack 0
  1119                           
  1120                           ; 2 bytes @ 0x10
  1121  000011                     	ds	1
  1122  000012                     ??___xxtofl:
  1123  000012                     ___aodiv@sign:
  1124                           	callstack 0
  1125  000012                     ___aomod@sign:
  1126                           	callstack 0
  1127  000012                     _atoi$2572:
  1128                           	callstack 0
  1129                           
  1130                           ; 2 bytes @ 0x11
  1131  000012                     	ds	1
  1132  000013                     ?_abs:
  1133                           	callstack 0
  1134  000013                     pad@buf:
  1135                           	callstack 0
  1136  000013                     abs@a:
  1137                           	callstack 0
  1138  000013                     ___aodiv@quotient:
  1139                           	callstack 0
  1140                           
  1141                           ; 8 bytes @ 0x12
  1142  000013                     	ds	1
  1143  000014                     _atoi$2571:
  1144                           	callstack 0
  1145                           
  1146                           ; 1 bytes @ 0x13
  1147  000014                     	ds	1
  1148  000015                     ??_abs:
  1149  000015                     pad@p:
  1150                           	callstack 0
  1151  000015                     atoi@n:
  1152                           	callstack 0
  1153                           
  1154                           ; 2 bytes @ 0x14
  1155  000015                     	ds	1
  1156  000016                     ___xxtofl@sign:
  1157                           	callstack 0
  1158                           
  1159                           ; 1 bytes @ 0x15
  1160  000016                     	ds	1
  1161  000017                     ??_pad:
  1162  000017                     ___xxtofl@exp:
  1163                           	callstack 0
  1164                           
  1165                           ; 1 bytes @ 0x16
  1166  000017                     	ds	1
  1167  000018                     pad@i:
  1168                           	callstack 0
  1169  000018                     ___xxtofl@arg:
  1170                           	callstack 0
  1171                           
  1172                           ; 4 bytes @ 0x17
  1173  000018                     	ds	2
  1174  00001A                     pad@w:
  1175                           	callstack 0
  1176                           
  1177                           ; 2 bytes @ 0x19
  1178  00001A                     	ds	2
  1179  00001C                     ??_calculatedAverageValue:
  1180  00001C                     ?_dtoa:
  1181                           	callstack 0
  1182  00001C                     ?_fabsf:
  1183                           	callstack 0
  1184  00001C                     ?___flmul:
  1185                           	callstack 0
  1186  00001C                     dtoa@fp:
  1187                           	callstack 0
  1188  00001C                     ___flmul@b:
  1189                           	callstack 0
  1190  00001C                     fabsf@x:
  1191                           	callstack 0
  1192                           
  1193                           ; 4 bytes @ 0x1B
  1194  00001C                     	ds	2
  1195  00001E                     dtoa@d:
  1196                           	callstack 0
  1197                           
  1198                           ; 8 bytes @ 0x1D
  1199  00001E                     	ds	2
  1200  000020                     ___flmul@a:
  1201                           	callstack 0
  1202  000020                     fabsf@u:
  1203                           	callstack 0
  1204                           
  1205                           ; 4 bytes @ 0x1F
  1206  000020                     	ds	4
  1207  000024                     ??___flmul:
  1208                           
  1209                           ; 1 bytes @ 0x23
  1210  000024                     	ds	2
  1211  000026                     ??_dtoa:
  1212                           
  1213                           ; 1 bytes @ 0x25
  1214  000026                     	ds	2
  1215  000028                     ___flmul@sign:
  1216                           	callstack 0
  1217                           
  1218                           ; 1 bytes @ 0x27
  1219  000028                     	ds	1
  1220  000029                     ___flmul@grs:
  1221                           	callstack 0
  1222                           
  1223                           ; 4 bytes @ 0x28
  1224  000029                     	ds	4
  1225  00002D                     ___flmul@aexp:
  1226                           	callstack 0
  1227                           
  1228                           ; 1 bytes @ 0x2C
  1229  00002D                     	ds	1
  1230  00002E                     ___flmul@bexp:
  1231                           	callstack 0
  1232  00002E                     _dtoa$2479:
  1233                           	callstack 0
  1234                           
  1235                           ; 2 bytes @ 0x2D
  1236  00002E                     	ds	1
  1237  00002F                     ___flmul@prod:
  1238                           	callstack 0
  1239                           
  1240                           ; 4 bytes @ 0x2E
  1241  00002F                     	ds	1
  1242  000030                     dtoa@p:
  1243                           	callstack 0
  1244                           
  1245                           ; 2 bytes @ 0x2F
  1246  000030                     	ds	2
  1247  000032                     dtoa@w:
  1248                           	callstack 0
  1249                           
  1250                           ; 2 bytes @ 0x31
  1251  000032                     	ds	1
  1252  000033                     ___flmul@temp:
  1253                           	callstack 0
  1254                           
  1255                           ; 2 bytes @ 0x32
  1256  000033                     	ds	1
  1257  000034                     dtoa@s:
  1258                           	callstack 0
  1259                           
  1260                           ; 2 bytes @ 0x33
  1261  000034                     	ds	1
  1262  000035                     ?___fladd:
  1263                           	callstack 0
  1264  000035                     ?___fldiv:
  1265                           	callstack 0
  1266  000035                     ___flge@ff1:
  1267                           	callstack 0
  1268  000035                     ___fladd@b:
  1269                           	callstack 0
  1270  000035                     ___fldiv@b:
  1271                           	callstack 0
  1272                           
  1273                           ; 4 bytes @ 0x34
  1274  000035                     	ds	1
  1275  000036                     dtoa@n:
  1276                           	callstack 0
  1277                           
  1278                           ; 8 bytes @ 0x35
  1279  000036                     	ds	3
  1280  000039                     ___flge@ff2:
  1281                           	callstack 0
  1282  000039                     ___fladd@a:
  1283                           	callstack 0
  1284  000039                     ___fldiv@a:
  1285                           	callstack 0
  1286                           
  1287                           ; 4 bytes @ 0x38
  1288  000039                     	ds	4
  1289  00003D                     ??___fladd:
  1290  00003D                     ??___fldiv:
  1291  00003D                     ??___flge:
  1292                           
  1293                           ; 1 bytes @ 0x3C
  1294  00003D                     	ds	1
  1295  00003E                     dtoa@i:
  1296                           	callstack 0
  1297                           
  1298                           ; 2 bytes @ 0x3D
  1299  00003E                     	ds	3
  1300  000041                     ___fladd@signs:
  1301                           	callstack 0
  1302  000041                     ___fldiv@rem:
  1303                           	callstack 0
  1304                           
  1305                           ; 4 bytes @ 0x40
  1306  000041                     	ds	1
  1307  000042                     ___fladd@aexp:
  1308                           	callstack 0
  1309                           
  1310                           ; 1 bytes @ 0x41
  1311  000042                     	ds	1
  1312  000043                     ___fladd@bexp:
  1313                           	callstack 0
  1314                           
  1315                           ; 1 bytes @ 0x42
  1316  000043                     	ds	1
  1317  000044                     ___fladd@grs:
  1318                           	callstack 0
  1319                           
  1320                           ; 1 bytes @ 0x43
  1321  000044                     	ds	1
  1322  000045                     ?___flsub:
  1323                           	callstack 0
  1324  000045                     ___fldiv@sign:
  1325                           	callstack 0
  1326  000045                     ___flsub@b:
  1327                           	callstack 0
  1328                           
  1329                           ; 4 bytes @ 0x44
  1330  000045                     	ds	1
  1331  000046                     ___fldiv@new_exp:
  1332                           	callstack 0
  1333                           
  1334                           ; 2 bytes @ 0x45
  1335  000046                     	ds	2
  1336  000048                     ___fldiv@grs:
  1337                           	callstack 0
  1338                           
  1339                           ; 4 bytes @ 0x47
  1340  000048                     	ds	1
  1341  000049                     ___flsub@a:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x48
  1345  000049                     	ds	3
  1346  00004C                     ___fldiv@bexp:
  1347                           	callstack 0
  1348                           
  1349                           ; 1 bytes @ 0x4B
  1350  00004C                     	ds	1
  1351  00004D                     ___fldiv@aexp:
  1352                           	callstack 0
  1353                           
  1354                           ; 1 bytes @ 0x4C
  1355  00004D                     	ds	1
  1356  00004E                     ?_floorf:
  1357                           	callstack 0
  1358  00004E                     ?___fltol:
  1359                           	callstack 0
  1360  00004E                     ___fltol@f1:
  1361                           	callstack 0
  1362  00004E                     floorf@x:
  1363                           	callstack 0
  1364                           
  1365                           ; 4 bytes @ 0x4D
  1366  00004E                     	ds	4
  1367  000052                     ??_floorf:
  1368  000052                     ??___fltol:
  1369                           
  1370                           ; 1 bytes @ 0x51
  1371  000052                     	ds	4
  1372  000056                     ___fltol@sign1:
  1373                           	callstack 0
  1374                           
  1375                           ; 1 bytes @ 0x55
  1376  000056                     	ds	1
  1377  000057                     ___fltol@exp1:
  1378                           	callstack 0
  1379                           
  1380                           ; 1 bytes @ 0x56
  1381  000057                     	ds	1
  1382  000058                     ??_scanAdcConversion:
  1383  000058                     ?_efgtoa:
  1384                           	callstack 0
  1385  000058                     PWM1_setDC@dutycycle:
  1386                           	callstack 0
  1387  000058                     PWM2_setDC@dutycycle:
  1388                           	callstack 0
  1389  000058                     efgtoa@fp:
  1390                           	callstack 0
  1391  000058                     speedControl@position:
  1392                           	callstack 0
  1393                           
  1394                           ; 4 bytes @ 0x57
  1395  000058                     	ds	2
  1396  00005A                     ??_PWM1_setDC:
  1397  00005A                     ??_PWM2_setDC:
  1398  00005A                     efgtoa@f:
  1399                           	callstack 0
  1400                           
  1401                           ; 4 bytes @ 0x59
  1402  00005A                     	ds	2
  1403  00005C                     ??_speedControl:
  1404  00005C                     PWM1_setDC@duty:
  1405                           	callstack 0
  1406  00005C                     PWM2_setDC@duty:
  1407                           	callstack 0
  1408                           
  1409                           ; 2 bytes @ 0x5B
  1410  00005C                     	ds	2
  1411  00005E                     efgtoa@c:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x5D
  1415  00005E                     	ds	1
  1416  00005F                     
  1417                           ; 1 bytes @ 0x5E
  1418 ;;
  1419 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1420 ;;
  1421 ;; *************** function _main *****************
  1422 ;; Defined at:
  1423 ;;		line 40 in file "fs_main.c"
  1424 ;; Parameters:    Size  Location     Type
  1425 ;;		None
  1426 ;; Auto vars:     Size  Location     Type
  1427 ;;		None
  1428 ;; Return value:  Size  Location     Type
  1429 ;;                  1    wreg      void 
  1430 ;; Registers used:
  1431 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1432 ;; Tracked objects:
  1433 ;;		On entry : 0/0
  1434 ;;		On exit  : 0/0
  1435 ;;		Unchanged: 0/0
  1436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1437 ;;      Params:         0       0       0       0       0       0       0
  1438 ;;      Locals:         0       0       0       0       0       0       0
  1439 ;;      Temps:          0       0       0       0       0       0       0
  1440 ;;      Totals:         0       0       0       0       0       0       0
  1441 ;;Total ram usage:        0 bytes
  1442 ;; Hardware stack levels required when called:   11
  1443 ;; This function calls:
  1444 ;;		_Lcd_Clear
  1445 ;;		_PWM1_setDC
  1446 ;;		_PWM2_setDC
  1447 ;;		_PWM_Init
  1448 ;;		_adcInit
  1449 ;;		_lcd_init
  1450 ;;		_mcu_init
  1451 ;;		_menuControl
  1452 ;;		_menuInitialize
  1453 ;;		_system_init
  1454 ;;		_timer_0_init
  1455 ;; This function is called by:
  1456 ;;		Startup code after reset
  1457 ;; This function uses a non-reentrant model
  1458 ;;
  1459                           
  1460                           	psect	text0
  1461  004D0C                     __ptext0:
  1462                           	callstack 0
  1463  004D0C                     _main:
  1464                           	callstack 20
  1465  004D0C                     
  1466                           ;fs_main.c: 42:     mcu_init();
  1467  004D0C  EC79  F02E         	call	_mcu_init	;wreg free
  1468  004D10                     
  1469                           ;fs_main.c: 43:     menuInitialize();
  1470  004D10  EC10  F02E         	call	_menuInitialize	;wreg free
  1471  004D14                     
  1472                           ;fs_main.c: 45:     adcInit();
  1473  004D14  ECFC  F02C         	call	_adcInit	;wreg free
  1474  004D18                     
  1475                           ;fs_main.c: 47:     timer_0_init();
  1476  004D18  EC84  F02E         	call	_timer_0_init	;wreg free
  1477  004D1C                     
  1478                           ;fs_main.c: 48:     lcd_init();
  1479  004D1C  EC97  F029         	call	_lcd_init	;wreg free
  1480  004D20                     
  1481                           ;fs_main.c: 49:     system_init();
  1482  004D20  EC70  F024         	call	_system_init	;wreg free
  1483  004D24                     
  1484                           ;fs_main.c: 50:     Lcd_Clear();
  1485  004D24  EC8D  F02E         	call	_Lcd_Clear	;wreg free
  1486  004D28                     
  1487                           ;fs_main.c: 52:     PWM_Init();
  1488  004D28  EC24  F02E         	call	_PWM_Init	;wreg free
  1489  004D2C                     
  1490                           ;fs_main.c: 53:     PWM1_setDC(0);
  1491  004D2C  0E00               	movlw	0
  1492  004D2E  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1493  004D30  0E00               	movlw	0
  1494  004D32  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1495  004D34  EC5E  F02A         	call	_PWM1_setDC	;wreg free
  1496  004D38                     
  1497                           ;fs_main.c: 54:     PWM2_setDC(0);
  1498  004D38  0E00               	movlw	0
  1499  004D3A  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1500  004D3C  0E00               	movlw	0
  1501  004D3E  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1502  004D40  EC21  F02A         	call	_PWM2_setDC	;wreg free
  1503  004D44                     l6223:
  1504                           
  1505                           ;fs_main.c: 57: {;fs_main.c: 58:     if (timer_counter_flag.one_second_flag == 1)
  1506  004D44  0101               	movlb	1	; () banked
  1507  004D46  A1AA               	btfss	_timer_counter_flag& (0+255),0,b
  1508  004D48  EFA8  F026         	goto	u7681
  1509  004D4C  EFAA  F026         	goto	u7680
  1510  004D50                     u7681:
  1511  004D50  EFFD  F026         	goto	l6249
  1512  004D54                     u7680:
  1513  004D54                     
  1514                           ; BSR set to: 1
  1515                           ;fs_main.c: 59:     {;fs_main.c: 60:         timer_counter_flag.one_second_flag = 0;
  1516  004D54  91AA               	bcf	_timer_counter_flag& (0+255),0,b
  1517  004D56                     
  1518                           ; BSR set to: 1
  1519                           ;fs_main.c: 62:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1520  004D56  05A9               	decf	_startIsClick& (0+255),w,b
  1521  004D58  A4D8               	btfss	status,2,c
  1522  004D5A  EFB1  F026         	goto	u7691
  1523  004D5E  EFB3  F026         	goto	u7690
  1524  004D62                     u7691:
  1525  004D62  EFFD  F026         	goto	l6249
  1526  004D66                     u7690:
  1527  004D66                     
  1528                           ; BSR set to: 1
  1529  004D66  0100               	movlb	0	; () banked
  1530  004D68  51FF               	movf	_pauseIsClick& (0+255),w,b
  1531  004D6A  A4D8               	btfss	status,2,c
  1532  004D6C  EFBA  F026         	goto	u7701
  1533  004D70  EFBC  F026         	goto	u7700
  1534  004D74                     u7701:
  1535  004D74  EFFD  F026         	goto	l6249
  1536  004D78                     u7700:
  1537  004D78                     
  1538                           ; BSR set to: 0
  1539  004D78  0101               	movlb	1	; () banked
  1540  004D7A  51A8               	movf	_stopIsClick& (0+255),w,b
  1541  004D7C  A4D8               	btfss	status,2,c
  1542  004D7E  EFC3  F026         	goto	u7711
  1543  004D82  EFC5  F026         	goto	u7710
  1544  004D86                     u7711:
  1545  004D86  EFFD  F026         	goto	l6249
  1546  004D8A                     u7710:
  1547  004D8A                     
  1548                           ; BSR set to: 1
  1549  004D8A  51A7               	movf	_menu_selected& (0+255),w,b
  1550  004D8C  A4D8               	btfss	status,2,c
  1551  004D8E  EFCB  F026         	goto	u7721
  1552  004D92  EFCD  F026         	goto	u7720
  1553  004D96                     u7721:
  1554  004D96  EFFD  F026         	goto	l6249
  1555  004D9A                     u7720:
  1556  004D9A                     
  1557                           ; BSR set to: 1
  1558                           ;fs_main.c: 63:         {;fs_main.c: 64:             timer_value.second++;
  1559  004D9A  0100               	movlb	0	; () banked
  1560  004D9C  4BF3               	infsnz	_timer_value& (0+255),f,b
  1561  004D9E  2BF4               	incf	(_timer_value+1)& (0+255),f,b
  1562  004DA0                     
  1563                           ; BSR set to: 0
  1564                           ;fs_main.c: 65:             timer_value.remainingSecond = 60 - timer_value.second;
  1565  004DA0  51F3               	movf	_timer_value& (0+255),w,b
  1566  004DA2  083C               	sublw	60
  1567  004DA4  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1568  004DA6  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1569  004DA8  A0D8               	btfss	status,0,c
  1570  004DAA  2AE8               	incf	wreg,f,c
  1571  004DAC  0800               	sublw	0
  1572  004DAE  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1573  004DB0                     
  1574                           ; BSR set to: 0
  1575                           ;fs_main.c: 67:             if (timer_value.remainingSecond == 59 )
  1576  004DB0  0E3B               	movlw	59
  1577  004DB2  19F7               	xorwf	(_timer_value+4)& (0+255),w,b
  1578  004DB4  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  1579  004DB6  A4D8               	btfss	status,2,c
  1580  004DB8  EFE0  F026         	goto	u7731
  1581  004DBC  EFE2  F026         	goto	u7730
  1582  004DC0                     u7731:
  1583  004DC0  EFEE  F026         	goto	l6245
  1584  004DC4                     u7730:
  1585  004DC4                     
  1586                           ; BSR set to: 0
  1587                           ;fs_main.c: 68:             {;fs_main.c: 69:                 timer_value.minute++;
  1588  004DC4  4BF5               	infsnz	(_timer_value+2)& (0+255),f,b
  1589  004DC6  2BF6               	incf	(_timer_value+3)& (0+255),f,b
  1590  004DC8                     
  1591                           ; BSR set to: 0
  1592                           ;fs_main.c: 70:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1593  004DC8  51F5               	movf	(_timer_value+2)& (0+255),w,b
  1594  004DCA  0101               	movlb	1	; () banked
  1595  004DCC  5D9B               	subwf	_menu_value& (0+255),w,b
  1596  004DCE  0100               	movlb	0	; () banked
  1597  004DD0  6FF9               	movwf	(_timer_value+6)& (0+255),b
  1598  004DD2  51F6               	movf	(_timer_value+3)& (0+255),w,b
  1599  004DD4  A0D8               	btfss	status,0,c
  1600  004DD6  29F6               	incf	(_timer_value+3)& (0+255),w,b
  1601  004DD8  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1602  004DDA  5FFA               	subwf	(_timer_value+7)& (0+255),f,b
  1603  004DDC                     l6245:
  1604                           
  1605                           ; BSR set to: 0
  1606                           ;fs_main.c: 73:             if (timer_value.second > 59)
  1607  004DDC  51F4               	movf	(_timer_value+1)& (0+255),w,b
  1608  004DDE  E109               	bnz	u7740
  1609  004DE0  0E3C               	movlw	60
  1610  004DE2  5DF3               	subwf	_timer_value& (0+255),w,b
  1611  004DE4  A0D8               	btfss	status,0,c
  1612  004DE6  EFF7  F026         	goto	u7741
  1613  004DEA  EFF9  F026         	goto	u7740
  1614  004DEE                     u7741:
  1615  004DEE  EFFD  F026         	goto	l6249
  1616  004DF2                     u7740:
  1617  004DF2                     
  1618                           ; BSR set to: 0
  1619                           ;fs_main.c: 74:             {;fs_main.c: 75:                 timer_value.second = 0;
  1620  004DF2  0E00               	movlw	0
  1621  004DF4  6FF4               	movwf	(_timer_value+1)& (0+255),b
  1622  004DF6  0E00               	movlw	0
  1623  004DF8  6FF3               	movwf	_timer_value& (0+255),b
  1624  004DFA                     l6249:
  1625                           
  1626                           ;fs_main.c: 80:     menuControl();
  1627  004DFA  EC9B  F02A         	call	_menuControl	;wreg free
  1628  004DFE  EFA2  F026         	goto	l6223
  1629  004E02  EF34  F000         	goto	start
  1630  004E06                     __end_of_main:
  1631                           	callstack 0
  1632                           
  1633 ;; *************** function _timer_0_init *****************
  1634 ;; Defined at:
  1635 ;;		line 67 in file "fs_timer.c"
  1636 ;; Parameters:    Size  Location     Type
  1637 ;;		None
  1638 ;; Auto vars:     Size  Location     Type
  1639 ;;		None
  1640 ;; Return value:  Size  Location     Type
  1641 ;;                  1    wreg      void 
  1642 ;; Registers used:
  1643 ;;		wreg, status,2
  1644 ;; Tracked objects:
  1645 ;;		On entry : 0/0
  1646 ;;		On exit  : 0/0
  1647 ;;		Unchanged: 0/0
  1648 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1649 ;;      Params:         0       0       0       0       0       0       0
  1650 ;;      Locals:         0       0       0       0       0       0       0
  1651 ;;      Temps:          0       0       0       0       0       0       0
  1652 ;;      Totals:         0       0       0       0       0       0       0
  1653 ;;Total ram usage:        0 bytes
  1654 ;; Hardware stack levels used:    1
  1655 ;; Hardware stack levels required when called:    1
  1656 ;; This function calls:
  1657 ;;		Nothing
  1658 ;; This function is called by:
  1659 ;;		_main
  1660 ;; This function uses a non-reentrant model
  1661 ;;
  1662                           
  1663                           	psect	text1
  1664  005D08                     __ptext1:
  1665                           	callstack 0
  1666  005D08                     _timer_0_init:
  1667                           	callstack 29
  1668  005D08                     
  1669                           ;fs_timer.c: 69:   T0CON = 0x81;
  1670  005D08  0E81               	movlw	129
  1671  005D0A  6ED5               	movwf	213,c	;volatile
  1672                           
  1673                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1674  005D0C  0E63               	movlw	99
  1675  005D0E  6ED7               	movwf	215,c	;volatile
  1676                           
  1677                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1678  005D10  0EC0               	movlw	192
  1679  005D12  6ED6               	movwf	214,c	;volatile
  1680  005D14                     
  1681                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1682  005D14  8EF2               	bsf	242,7,c	;volatile
  1683  005D16                     
  1684                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1685  005D16  8AF2               	bsf	242,5,c	;volatile
  1686  005D18  0012               	return		;funcret
  1687  005D1A                     __end_of_timer_0_init:
  1688                           	callstack 0
  1689                           
  1690 ;; *************** function _system_init *****************
  1691 ;; Defined at:
  1692 ;;		line 56 in file "fs_mcu.c"
  1693 ;; Parameters:    Size  Location     Type
  1694 ;;		None
  1695 ;; Auto vars:     Size  Location     Type
  1696 ;;		None
  1697 ;; Return value:  Size  Location     Type
  1698 ;;                  1    wreg      void 
  1699 ;; Registers used:
  1700 ;;		wreg, status,2, cstack
  1701 ;; Tracked objects:
  1702 ;;		On entry : 0/0
  1703 ;;		On exit  : 0/0
  1704 ;;		Unchanged: 0/0
  1705 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1706 ;;      Params:         0       0       0       0       0       0       0
  1707 ;;      Locals:         0       0       0       0       0       0       0
  1708 ;;      Temps:          2       0       0       0       0       0       0
  1709 ;;      Totals:         2       0       0       0       0       0       0
  1710 ;;Total ram usage:        2 bytes
  1711 ;; Hardware stack levels used:    1
  1712 ;; Hardware stack levels required when called:    2
  1713 ;; This function calls:
  1714 ;;		_eepromRead
  1715 ;; This function is called by:
  1716 ;;		_main
  1717 ;; This function uses a non-reentrant model
  1718 ;;
  1719                           
  1720                           	psect	text2
  1721  0048E0                     __ptext2:
  1722                           	callstack 0
  1723  0048E0                     _system_init:
  1724                           	callstack 28
  1725  0048E0                     
  1726                           ;fs_mcu.c: 58:     driver_limit.pay = 0;
  1727  0048E0  0E00               	movlw	0
  1728  0048E2  0101               	movlb	1	; () banked
  1729  0048E4  6F83               	movwf	_driver_limit& (0+255),b
  1730  0048E6  0E00               	movlw	0
  1731  0048E8  6F84               	movwf	(_driver_limit+1)& (0+255),b
  1732  0048EA  0E00               	movlw	0
  1733  0048EC  6F85               	movwf	(_driver_limit+2)& (0+255),b
  1734  0048EE  0E00               	movlw	0
  1735  0048F0  6F86               	movwf	(_driver_limit+3)& (0+255),b
  1736                           
  1737                           ;fs_mcu.c: 59:     driver_limit.payda = 0;
  1738  0048F2  0E00               	movlw	0
  1739  0048F4  6F87               	movwf	(_driver_limit+4)& (0+255),b
  1740  0048F6  0E00               	movlw	0
  1741  0048F8  6F88               	movwf	(_driver_limit+5)& (0+255),b
  1742  0048FA  0E00               	movlw	0
  1743  0048FC  6F89               	movwf	(_driver_limit+6)& (0+255),b
  1744  0048FE  0E00               	movlw	0
  1745  004900  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  1746                           
  1747                           ;fs_mcu.c: 60:     driver_limit.ortalama = 0;
  1748  004902  0E00               	movlw	0
  1749  004904  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  1750  004906  0E00               	movlw	0
  1751  004908  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  1752  00490A  0E00               	movlw	0
  1753  00490C  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  1754  00490E  0E00               	movlw	0
  1755  004910  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  1756                           
  1757                           ;fs_mcu.c: 61:     convert_data.convert_channel_0 = 0;
  1758  004912  0E00               	movlw	0
  1759  004914  6F00               	movwf	_convert_data& (0+255),b
  1760  004916  0E00               	movlw	0
  1761  004918  6F01               	movwf	(_convert_data+1)& (0+255),b
  1762  00491A  0E00               	movlw	0
  1763  00491C  6F02               	movwf	(_convert_data+2)& (0+255),b
  1764  00491E  0E00               	movlw	0
  1765  004920  6F03               	movwf	(_convert_data+3)& (0+255),b
  1766                           
  1767                           ;fs_mcu.c: 62:     convert_data.convert_channel_1 = 0;
  1768  004922  0E00               	movlw	0
  1769  004924  6F04               	movwf	(_convert_data+4)& (0+255),b
  1770  004926  0E00               	movlw	0
  1771  004928  6F05               	movwf	(_convert_data+5)& (0+255),b
  1772  00492A  0E00               	movlw	0
  1773  00492C  6F06               	movwf	(_convert_data+6)& (0+255),b
  1774  00492E  0E00               	movlw	0
  1775  004930  6F07               	movwf	(_convert_data+7)& (0+255),b
  1776                           
  1777                           ;fs_mcu.c: 63:     convert_data.convert_channel_2 = 0;
  1778  004932  0E00               	movlw	0
  1779  004934  6F08               	movwf	(_convert_data+8)& (0+255),b
  1780  004936  0E00               	movlw	0
  1781  004938  6F09               	movwf	(_convert_data+9)& (0+255),b
  1782  00493A  0E00               	movlw	0
  1783  00493C  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1784  00493E  0E00               	movlw	0
  1785  004940  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1786                           
  1787                           ;fs_mcu.c: 64:     convert_data.convert_channel_3 = 0;
  1788  004942  0E00               	movlw	0
  1789  004944  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1790  004946  0E00               	movlw	0
  1791  004948  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1792  00494A  0E00               	movlw	0
  1793  00494C  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1794  00494E  0E00               	movlw	0
  1795  004950  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1796                           
  1797                           ;fs_mcu.c: 65:     convert_data.convert_channel_4 = 0;
  1798  004952  0E00               	movlw	0
  1799  004954  6F10               	movwf	(_convert_data+16)& (0+255),b
  1800  004956  0E00               	movlw	0
  1801  004958  6F11               	movwf	(_convert_data+17)& (0+255),b
  1802  00495A  0E00               	movlw	0
  1803  00495C  6F12               	movwf	(_convert_data+18)& (0+255),b
  1804  00495E  0E00               	movlw	0
  1805  004960  6F13               	movwf	(_convert_data+19)& (0+255),b
  1806                           
  1807                           ;fs_mcu.c: 66:     convert_data.convert_channel_5 = 0;
  1808  004962  0E00               	movlw	0
  1809  004964  6F14               	movwf	(_convert_data+20)& (0+255),b
  1810  004966  0E00               	movlw	0
  1811  004968  6F15               	movwf	(_convert_data+21)& (0+255),b
  1812  00496A  0E00               	movlw	0
  1813  00496C  6F16               	movwf	(_convert_data+22)& (0+255),b
  1814  00496E  0E00               	movlw	0
  1815  004970  6F17               	movwf	(_convert_data+23)& (0+255),b
  1816                           
  1817                           ;fs_mcu.c: 67:     convert_data.convert_channel_6 = 0;
  1818  004972  0E00               	movlw	0
  1819  004974  6F18               	movwf	(_convert_data+24)& (0+255),b
  1820  004976  0E00               	movlw	0
  1821  004978  6F19               	movwf	(_convert_data+25)& (0+255),b
  1822  00497A  0E00               	movlw	0
  1823  00497C  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1824  00497E  0E00               	movlw	0
  1825  004980  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1826                           
  1827                           ;fs_mcu.c: 68:     convert_data.convert_channel_7 = 0;
  1828  004982  0E00               	movlw	0
  1829  004984  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1830  004986  0E00               	movlw	0
  1831  004988  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1832  00498A  0E00               	movlw	0
  1833  00498C  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1834  00498E  0E00               	movlw	0
  1835  004990  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1836                           
  1837                           ;fs_mcu.c: 69:     controller.leftMotorSpeed = 0;
  1838  004992  0E00               	movlw	0
  1839  004994  6F57               	movwf	(_controller+7)& (0+255),b
  1840  004996  0E00               	movlw	0
  1841  004998  6F56               	movwf	(_controller+6)& (0+255),b
  1842                           
  1843                           ;fs_mcu.c: 70:     controller.rightMotorSpeed = 0;
  1844  00499A  0E00               	movlw	0
  1845  00499C  6F59               	movwf	(_controller+9)& (0+255),b
  1846  00499E  0E00               	movlw	0
  1847  0049A0  6F58               	movwf	(_controller+8)& (0+255),b
  1848                           
  1849                           ;fs_mcu.c: 71:     timer_value.timer_0_counter = 0;
  1850  0049A2  0E00               	movlw	0
  1851  0049A4  0100               	movlb	0	; () banked
  1852  0049A6  6FFC               	movwf	(_timer_value+9)& (0+255),b
  1853                           
  1854                           ;fs_mcu.c: 72:     controller.error = 0;
  1855  0049A8  0E00               	movlw	0
  1856  0049AA  0101               	movlb	1	; () banked
  1857  0049AC  6F51               	movwf	(_controller+1)& (0+255),b
  1858  0049AE  0E00               	movlw	0
  1859  0049B0  6F50               	movwf	_controller& (0+255),b
  1860  0049B2                     
  1861                           ; BSR set to: 1
  1862                           ;fs_mcu.c: 74:     button_bounce_controller.menu = 0;
  1863  0049B2  0100               	movlb	0	; () banked
  1864  0049B4  91FE               	bcf	_button_bounce_controller& (0+255),0,b
  1865  0049B6                     
  1866                           ; BSR set to: 0
  1867                           ;fs_mcu.c: 75:     button_bounce_controller.pause = 0;
  1868  0049B6  97FE               	bcf	_button_bounce_controller& (0+255),3,b
  1869  0049B8                     
  1870                           ; BSR set to: 0
  1871                           ;fs_mcu.c: 76:     button_bounce_controller.start = 0;
  1872  0049B8  93FE               	bcf	_button_bounce_controller& (0+255),1,b
  1873  0049BA                     
  1874                           ; BSR set to: 0
  1875                           ;fs_mcu.c: 77:     button_bounce_controller.stop = 0;
  1876  0049BA  95FE               	bcf	_button_bounce_controller& (0+255),2,b
  1877  0049BC                     
  1878                           ; BSR set to: 0
  1879                           ;fs_mcu.c: 78:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1880  0049BC  0E00               	movlw	0
  1881  0049BE  EC5B  F02E         	call	_eepromRead
  1882  0049C2  0101               	movlb	1	; () banked
  1883  0049C4  6F9B               	movwf	_menu_value& (0+255),b
  1884  0049C6                     
  1885                           ; BSR set to: 1
  1886                           ;fs_mcu.c: 79:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1887  0049C6  0E01               	movlw	1
  1888  0049C8  EC5B  F02E         	call	_eepromRead
  1889  0049CC  0101               	movlb	1	; () banked
  1890  0049CE  6F9C               	movwf	(_menu_value+1)& (0+255),b
  1891  0049D0                     
  1892                           ; BSR set to: 1
  1893                           ;fs_mcu.c: 80:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1894  0049D0  0E02               	movlw	2
  1895  0049D2  EC5B  F02E         	call	_eepromRead
  1896  0049D6  0101               	movlb	1	; () banked
  1897  0049D8  6F9D               	movwf	(_menu_value+2)& (0+255),b
  1898  0049DA                     
  1899                           ; BSR set to: 1
  1900                           ;fs_mcu.c: 82:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1901  0049DA  0E39               	movlw	57
  1902  0049DC  6E03               	movwf	(??_system_init+1)^0,c
  1903  0049DE  0ED2               	movlw	210
  1904  0049E0  6E02               	movwf	??_system_init^0,c
  1905  0049E2  0E4C               	movlw	76
  1906  0049E4                     u7797:
  1907  0049E4  2EE8               	decfsz	wreg,f,c
  1908  0049E6  D7FE               	bra	u7797
  1909  0049E8  2E02               	decfsz	??_system_init^0,f,c
  1910  0049EA  D7FC               	bra	u7797
  1911  0049EC  2E03               	decfsz	(??_system_init+1)^0,f,c
  1912  0049EE  D7FA               	bra	u7797
  1913  0049F0  D000               	nop2	
  1914  0049F2                     
  1915                           ;fs_mcu.c: 83:     timer_value.remainingMinute = menu_value.driver_time;
  1916  0049F2  C19B  F0F9         	movff	_menu_value,_timer_value+6
  1917  0049F6  0100               	movlb	0	; () banked
  1918  0049F8  6BFA               	clrf	(_timer_value+7)& (0+255),b
  1919  0049FA                     
  1920                           ; BSR set to: 0
  1921                           ;fs_mcu.c: 84:     timer_value.remainingSecond = 0;
  1922  0049FA  0E00               	movlw	0
  1923  0049FC  6FF8               	movwf	(_timer_value+5)& (0+255),b
  1924  0049FE  0E00               	movlw	0
  1925  004A00  6FF7               	movwf	(_timer_value+4)& (0+255),b
  1926  004A02                     
  1927                           ; BSR set to: 0
  1928  004A02  0012               	return		;funcret
  1929  004A04                     __end_of_system_init:
  1930                           	callstack 0
  1931                           
  1932 ;; *************** function _eepromRead *****************
  1933 ;; Defined at:
  1934 ;;		line 36 in file "fs_eeprom.c"
  1935 ;; Parameters:    Size  Location     Type
  1936 ;;  address         1    wreg     unsigned char 
  1937 ;; Auto vars:     Size  Location     Type
  1938 ;;  address         1    0[COMRAM] unsigned char 
  1939 ;; Return value:  Size  Location     Type
  1940 ;;                  1    wreg      unsigned char 
  1941 ;; Registers used:
  1942 ;;		wreg, status,2
  1943 ;; Tracked objects:
  1944 ;;		On entry : 0/0
  1945 ;;		On exit  : 0/0
  1946 ;;		Unchanged: 0/0
  1947 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1948 ;;      Params:         0       0       0       0       0       0       0
  1949 ;;      Locals:         1       0       0       0       0       0       0
  1950 ;;      Temps:          0       0       0       0       0       0       0
  1951 ;;      Totals:         1       0       0       0       0       0       0
  1952 ;;Total ram usage:        1 bytes
  1953 ;; Hardware stack levels used:    1
  1954 ;; Hardware stack levels required when called:    1
  1955 ;; This function calls:
  1956 ;;		Nothing
  1957 ;; This function is called by:
  1958 ;;		_system_init
  1959 ;; This function uses a non-reentrant model
  1960 ;;
  1961                           
  1962                           	psect	text3
  1963  005CB6                     __ptext3:
  1964                           	callstack 0
  1965  005CB6                     _eepromRead:
  1966                           	callstack 28
  1967                           
  1968                           ; BSR set to: 0
  1969                           ;incstack = 0
  1970                           ;eepromRead@address stored from wreg
  1971  005CB6  6E01               	movwf	eepromRead@address^0,c
  1972  005CB8                     
  1973                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1974  005CB8  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1975  005CBC                     
  1976                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1977  005CBC  9EA6               	bcf	166,7,c	;volsfr
  1978  005CBE                     
  1979                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1980  005CBE  9CA6               	bcf	166,6,c	;volsfr
  1981  005CC0                     
  1982                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1983  005CC0  80A6               	bsf	166,0,c	;volsfr
  1984  005CC2                     l70:
  1985  005CC2  B0A6               	btfsc	166,0,c	;volsfr
  1986  005CC4  EF66  F02E         	goto	u6841
  1987  005CC8  EF68  F02E         	goto	u6840
  1988  005CCC                     u6841:
  1989  005CCC  EF61  F02E         	goto	l70
  1990  005CD0                     u6840:
  1991  005CD0                     
  1992                           ;fs_eeprom.c: 51:     return EEDATA;
  1993  005CD0  50A8               	movf	168,w,c	;volatile
  1994  005CD2  0012               	return		;funcret
  1995  005CD4                     __end_of_eepromRead:
  1996                           	callstack 0
  1997                           
  1998 ;; *************** function _menuInitialize *****************
  1999 ;; Defined at:
  2000 ;;		line 38 in file "fs_menu_controller.c"
  2001 ;; Parameters:    Size  Location     Type
  2002 ;;		None
  2003 ;; Auto vars:     Size  Location     Type
  2004 ;;		None
  2005 ;; Return value:  Size  Location     Type
  2006 ;;                  1    wreg      void 
  2007 ;; Registers used:
  2008 ;;		None
  2009 ;; Tracked objects:
  2010 ;;		On entry : 0/0
  2011 ;;		On exit  : 0/0
  2012 ;;		Unchanged: 0/0
  2013 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2014 ;;      Params:         0       0       0       0       0       0       0
  2015 ;;      Locals:         0       0       0       0       0       0       0
  2016 ;;      Temps:          0       0       0       0       0       0       0
  2017 ;;      Totals:         0       0       0       0       0       0       0
  2018 ;;Total ram usage:        0 bytes
  2019 ;; Hardware stack levels used:    1
  2020 ;; Hardware stack levels required when called:    1
  2021 ;; This function calls:
  2022 ;;		Nothing
  2023 ;; This function is called by:
  2024 ;;		_main
  2025 ;; This function uses a non-reentrant model
  2026 ;;
  2027                           
  2028                           	psect	text4
  2029  005C20                     __ptext4:
  2030                           	callstack 0
  2031  005C20                     _menuInitialize:
  2032                           	callstack 29
  2033  005C20                     
  2034                           ;fs_menu_controller.c: 41:     TRISBbits.RB6 = 1;
  2035  005C20  8C93               	bsf	147,6,c	;volatile
  2036                           
  2037                           ;fs_menu_controller.c: 44:     TRISBbits.RB7 = 1;
  2038  005C22  8E93               	bsf	147,7,c	;volatile
  2039                           
  2040                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD4 = 0;
  2041  005C24  010F               	movlb	15	; () banked
  2042  005C26  993B               	bcf	59,4,b	;volatile
  2043                           
  2044                           ;fs_menu_controller.c: 47:     TRISDbits.RD4 = 1;
  2045  005C28  8895               	bsf	149,4,c	;volatile
  2046                           
  2047                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD0 = 0;
  2048  005C2A  913B               	bcf	59,0,b	;volatile
  2049                           
  2050                           ;fs_menu_controller.c: 50:     TRISDbits.RD0 = 1;
  2051  005C2C  8095               	bsf	149,0,c	;volatile
  2052                           
  2053                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD1 = 0;
  2054  005C2E  933B               	bcf	59,1,b	;volatile
  2055                           
  2056                           ;fs_menu_controller.c: 53:     TRISDbits.RD1 = 1;
  2057  005C30  8295               	bsf	149,1,c	;volatile
  2058                           
  2059                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD2 = 0;
  2060  005C32  953B               	bcf	59,2,b	;volatile
  2061                           
  2062                           ;fs_menu_controller.c: 56:     TRISDbits.RD2 = 1;
  2063  005C34  8495               	bsf	149,2,c	;volatile
  2064                           
  2065                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD3 = 0;
  2066  005C36  973B               	bcf	59,3,b	;volatile
  2067                           
  2068                           ;fs_menu_controller.c: 59:     TRISDbits.RD3 = 1;
  2069  005C38  8695               	bsf	149,3,c	;volatile
  2070                           
  2071                           ;fs_menu_controller.c: 61:     ANSELDbits.ANSD5 = 0;
  2072  005C3A  9B3B               	bcf	59,5,b	;volatile
  2073                           
  2074                           ;fs_menu_controller.c: 62:     TRISDbits.RD5 = 0;
  2075  005C3C  9A95               	bcf	149,5,c	;volatile
  2076                           
  2077                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC5 = 0;
  2078  005C3E  9B3A               	bcf	58,5,b	;volatile
  2079                           
  2080                           ;fs_menu_controller.c: 65:     TRISCbits.RC5 = 0;
  2081  005C40  9A94               	bcf	148,5,c	;volatile
  2082                           
  2083                           ;fs_menu_controller.c: 67:     ANSELCbits.ANSC4 = 0;
  2084  005C42  993A               	bcf	58,4,b	;volatile
  2085                           
  2086                           ;fs_menu_controller.c: 68:     TRISCbits.RC4 = 0;
  2087  005C44  9894               	bcf	148,4,c	;volatile
  2088  005C46                     
  2089                           ; BSR set to: 15
  2090  005C46  0012               	return		;funcret
  2091  005C48                     __end_of_menuInitialize:
  2092                           	callstack 0
  2093                           
  2094 ;; *************** function _menuControl *****************
  2095 ;; Defined at:
  2096 ;;		line 162 in file "fs_menu_controller.c"
  2097 ;; Parameters:    Size  Location     Type
  2098 ;;		None
  2099 ;; Auto vars:     Size  Location     Type
  2100 ;;		None
  2101 ;; Return value:  Size  Location     Type
  2102 ;;                  1    wreg      void 
  2103 ;; Registers used:
  2104 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2105 ;; Tracked objects:
  2106 ;;		On entry : 0/0
  2107 ;;		On exit  : 0/0
  2108 ;;		Unchanged: 0/0
  2109 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2110 ;;      Params:         0       0       0       0       0       0       0
  2111 ;;      Locals:         0       0       0       0       0       0       0
  2112 ;;      Temps:          0       0       0       0       0       0       0
  2113 ;;      Totals:         0       0       0       0       0       0       0
  2114 ;;Total ram usage:        0 bytes
  2115 ;; Hardware stack levels used:    1
  2116 ;; Hardware stack levels required when called:   10
  2117 ;; This function calls:
  2118 ;;		_buttonControlFlags
  2119 ;;		_stateMachine
  2120 ;; This function is called by:
  2121 ;;		_main
  2122 ;; This function uses a non-reentrant model
  2123 ;;
  2124                           
  2125                           	psect	text5
  2126  005536                     __ptext5:
  2127                           	callstack 0
  2128  005536                     _menuControl:
  2129                           	callstack 20
  2130  005536                     
  2131                           ;fs_menu_controller.c: 164:     buttonControlFlags();
  2132  005536  ECFC  F022         	call	_buttonControlFlags	;wreg free
  2133  00553A                     
  2134                           ;fs_menu_controller.c: 165:     stateMachine();
  2135  00553A  EC57  F009         	call	_stateMachine	;wreg free
  2136  00553E                     
  2137                           ;fs_menu_controller.c: 167:     if (menu_flags.menu_start_flag == 1)
  2138  00553E  0100               	movlb	0	; () banked
  2139  005540  A3FD               	btfss	_menu_flags& (0+255),1,b
  2140  005542  EFA5  F02A         	goto	u7651
  2141  005546  EFA7  F02A         	goto	u7650
  2142  00554A                     u7651:
  2143  00554A  EFB1  F02A         	goto	l6187
  2144  00554E                     u7650:
  2145  00554E                     
  2146                           ; BSR set to: 0
  2147                           ;fs_menu_controller.c: 168:     {;fs_menu_controller.c: 169:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2148  00554E  93FD               	bcf	_menu_flags& (0+255),1,b
  2149  005550                     
  2150                           ; BSR set to: 0
  2151                           ;fs_menu_controller.c: 170:         startIsClick = 1;
  2152  005550  0E01               	movlw	1
  2153  005552  0101               	movlb	1	; () banked
  2154  005554  6FA9               	movwf	_startIsClick& (0+255),b
  2155                           
  2156                           ;fs_menu_controller.c: 171:         pauseIsClick = 0;
  2157  005556  0E00               	movlw	0
  2158  005558  0100               	movlb	0	; () banked
  2159  00555A  6FFF               	movwf	_pauseIsClick& (0+255),b
  2160                           
  2161                           ;fs_menu_controller.c: 172:         stopIsClick = 0;
  2162  00555C  0E00               	movlw	0
  2163  00555E  0101               	movlb	1	; () banked
  2164  005560  6FA8               	movwf	_stopIsClick& (0+255),b
  2165  005562                     l6187:
  2166                           
  2167                           ;fs_menu_controller.c: 175:     if (menu_flags.menu_pause_flag == 1)
  2168  005562  0100               	movlb	0	; () banked
  2169  005564  A7FD               	btfss	_menu_flags& (0+255),3,b
  2170  005566  EFB7  F02A         	goto	u7661
  2171  00556A  EFB9  F02A         	goto	u7660
  2172  00556E                     u7661:
  2173  00556E  EFC1  F02A         	goto	l6193
  2174  005572                     u7660:
  2175  005572                     
  2176                           ; BSR set to: 0
  2177                           ;fs_menu_controller.c: 176:     {;fs_menu_controller.c: 177:         menu_flags.menu_pau
      +                          se_flag = 0;
  2178  005572  97FD               	bcf	_menu_flags& (0+255),3,b
  2179  005574                     
  2180                           ; BSR set to: 0
  2181                           ;fs_menu_controller.c: 178:         pauseIsClick = 1;
  2182  005574  0E01               	movlw	1
  2183  005576  6FFF               	movwf	_pauseIsClick& (0+255),b
  2184                           
  2185                           ;fs_menu_controller.c: 179:         startIsClick = 0;
  2186  005578  0E00               	movlw	0
  2187  00557A  0101               	movlb	1	; () banked
  2188  00557C  6FA9               	movwf	_startIsClick& (0+255),b
  2189                           
  2190                           ;fs_menu_controller.c: 180:         stopIsClick = 0;
  2191  00557E  0E00               	movlw	0
  2192  005580  6FA8               	movwf	_stopIsClick& (0+255),b
  2193  005582                     l6193:
  2194                           
  2195                           ;fs_menu_controller.c: 183:     if (menu_flags.menu_stop_flag == 1)
  2196  005582  0100               	movlb	0	; () banked
  2197  005584  A5FD               	btfss	_menu_flags& (0+255),2,b
  2198  005586  EFC7  F02A         	goto	u7671
  2199  00558A  EFC9  F02A         	goto	u7670
  2200  00558E                     u7671:
  2201  00558E  EFD1  F02A         	goto	l329
  2202  005592                     u7670:
  2203  005592                     
  2204                           ; BSR set to: 0
  2205                           ;fs_menu_controller.c: 184:     {;fs_menu_controller.c: 185:         menu_flags.menu_sto
      +                          p_flag = 0;
  2206  005592  95FD               	bcf	_menu_flags& (0+255),2,b
  2207  005594                     
  2208                           ; BSR set to: 0
  2209                           ;fs_menu_controller.c: 186:         pauseIsClick = 0;
  2210  005594  0E00               	movlw	0
  2211  005596  6FFF               	movwf	_pauseIsClick& (0+255),b
  2212                           
  2213                           ;fs_menu_controller.c: 187:         startIsClick = 0;
  2214  005598  0E00               	movlw	0
  2215  00559A  0101               	movlb	1	; () banked
  2216  00559C  6FA9               	movwf	_startIsClick& (0+255),b
  2217                           
  2218                           ;fs_menu_controller.c: 188:         stopIsClick = 1;
  2219  00559E  0E01               	movlw	1
  2220  0055A0  6FA8               	movwf	_stopIsClick& (0+255),b
  2221  0055A2                     l329:
  2222  0055A2  0012               	return		;funcret
  2223  0055A4                     __end_of_menuControl:
  2224                           	callstack 0
  2225                           
  2226 ;; *************** function _stateMachine *****************
  2227 ;; Defined at:
  2228 ;;		line 199 in file "fs_menu_controller.c"
  2229 ;; Parameters:    Size  Location     Type
  2230 ;;		None
  2231 ;; Auto vars:     Size  Location     Type
  2232 ;;  textCursor2    16  131[BANK0 ] unsigned char [16]
  2233 ;; Return value:  Size  Location     Type
  2234 ;;                  1    wreg      void 
  2235 ;; Registers used:
  2236 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2237 ;; Tracked objects:
  2238 ;;		On entry : 0/0
  2239 ;;		On exit  : 0/0
  2240 ;;		Unchanged: 0/0
  2241 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2242 ;;      Params:         0       0       0       0       0       0       0
  2243 ;;      Locals:         0      16       0       0       0       0       0
  2244 ;;      Temps:          0       2       0       0       0       0       0
  2245 ;;      Totals:         0      18       0       0       0       0       0
  2246 ;;Total ram usage:       18 bytes
  2247 ;; Hardware stack levels used:    1
  2248 ;; Hardware stack levels required when called:    9
  2249 ;; This function calls:
  2250 ;;		_Lcd_Set_Cursor
  2251 ;;		_Lcd_Write_String
  2252 ;;		___fladd
  2253 ;;		___flge
  2254 ;;		___flsub
  2255 ;;		_eepromWrite
  2256 ;;		_sprintf
  2257 ;;		_startMotor
  2258 ;;		_stopMotor
  2259 ;; This function is called by:
  2260 ;;		_menuControl
  2261 ;; This function uses a non-reentrant model
  2262 ;;
  2263                           
  2264                           	psect	text6
  2265  0012AE                     __ptext6:
  2266                           	callstack 0
  2267  0012AE                     _stateMachine:
  2268                           	callstack 20
  2269  0012AE                     
  2270                           ;fs_menu_controller.c: 201:     char textCursor2[16] = {0};
  2271  0012AE  EE20  F0E3         	lfsr	2,stateMachine@textCursor2
  2272  0012B2  0E0F               	movlw	15
  2273  0012B4                     u7091:
  2274  0012B4  6ADE               	clrf	postinc2,c
  2275  0012B6  06E8               	decf	wreg,f,c
  2276  0012B8  E2FD               	bc	u7091
  2277                           
  2278                           ;fs_menu_controller.c: 202:     static uint8_t secretMenuCounter = 0;;fs_menu_controller
      +                          .c: 204:     switch (menu_selected)
  2279  0012BA  EF33  F00E         	goto	l6093
  2280  0012BE                     l5733:
  2281                           
  2282                           ; BSR set to: 0
  2283                           ;fs_menu_controller.c: 208:             Lcd_Set_Cursor(1,1);
  2284  0012BE  0E01               	movlw	1
  2285  0012C0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2286  0012C2  0E01               	movlw	1
  2287  0012C4  EC3C  F02B         	call	_Lcd_Set_Cursor
  2288  0012C8                     
  2289                           ;fs_menu_controller.c: 209:             Lcd_Write_String("KALAN ZAMAN     ");
  2290  0012C8  0E35               	movlw	low STR_1
  2291  0012CA  6E05               	movwf	Lcd_Write_String@a^0,c
  2292  0012CC  0E06               	movlw	high STR_1
  2293  0012CE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2294  0012D0  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  2295  0012D4                     
  2296                           ;fs_menu_controller.c: 210:             Lcd_Set_Cursor(2,1);
  2297  0012D4  0E01               	movlw	1
  2298  0012D6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2299  0012D8  0E02               	movlw	2
  2300  0012DA  EC3C  F02B         	call	_Lcd_Set_Cursor
  2301  0012DE                     
  2302                           ;fs_menu_controller.c: 211:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2303  0012DE  0EE3               	movlw	low stateMachine@textCursor2
  2304  0012E0  0100               	movlb	0	; () banked
  2305  0012E2  6FCF               	movwf	sprintf@s& (0+255),b
  2306  0012E4  0E00               	movlw	high stateMachine@textCursor2
  2307  0012E6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2308  0012E8  0EAA               	movlw	low STR_2
  2309  0012EA  6FD1               	movwf	sprintf@fmt& (0+255),b
  2310  0012EC  0E06               	movlw	high STR_2
  2311  0012EE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2312  0012F0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  2313  0012F4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  2314  0012F8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  2315  0012FC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  2316  001300  EC24  F02C         	call	_sprintf	;wreg free
  2317  001304                     
  2318                           ;fs_menu_controller.c: 212:             Lcd_Write_String(textCursor2);
  2319  001304  0EE3               	movlw	low stateMachine@textCursor2
  2320  001306  6E05               	movwf	Lcd_Write_String@a^0,c
  2321  001308  0E00               	movlw	high stateMachine@textCursor2
  2322  00130A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2323  00130C  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  2324  001310                     
  2325                           ;fs_menu_controller.c: 214:             if ( timer_value.menu_login_delay == 100)
  2326  001310  0E64               	movlw	100
  2327  001312  0100               	movlb	0	; () banked
  2328  001314  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2329  001316  A4D8               	btfss	status,2,c
  2330  001318  EF90  F009         	goto	u7101
  2331  00131C  EF92  F009         	goto	u7100
  2332  001320                     u7101:
  2333  001320  EF99  F009         	goto	l5747
  2334  001324                     u7100:
  2335  001324                     
  2336                           ; BSR set to: 0
  2337                           ;fs_menu_controller.c: 215:             {;fs_menu_controller.c: 216:                 tim
      +                          er_value.menu_login_delay = 0;
  2338  001324  0E00               	movlw	0
  2339  001326  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2340                           
  2341                           ;fs_menu_controller.c: 217:                 menu_selected = DRIVER_TIME_SETTING;
  2342  001328  0E01               	movlw	1
  2343  00132A  0101               	movlb	1	; () banked
  2344  00132C  6FA7               	movwf	_menu_selected& (0+255),b
  2345                           
  2346                           ;fs_menu_controller.c: 218:                 startIsClick = 0;
  2347  00132E  0E00               	movlw	0
  2348  001330  6FA9               	movwf	_startIsClick& (0+255),b
  2349  001332                     l5747:
  2350                           
  2351                           ;fs_menu_controller.c: 221:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2352  001332  0100               	movlb	0	; () banked
  2353  001334  BFFA               	btfsc	(_timer_value+7)& (0+255),7,b
  2354  001336  EFA7  F009         	goto	u7110
  2355  00133A  51FA               	movf	(_timer_value+7)& (0+255),w,b
  2356  00133C  E106               	bnz	u7111
  2357  00133E  05F9               	decf	(_timer_value+6)& (0+255),w,b
  2358  001340  B0D8               	btfsc	status,0,c
  2359  001342  EFA5  F009         	goto	u7111
  2360  001346  EFA7  F009         	goto	u7110
  2361  00134A                     u7111:
  2362  00134A  EFBB  F009         	goto	l339
  2363  00134E                     u7110:
  2364  00134E                     
  2365                           ; BSR set to: 0
  2366  00134E  51F7               	movf	(_timer_value+4)& (0+255),w,b
  2367  001350  11F8               	iorwf	(_timer_value+5)& (0+255),w,b
  2368  001352  A4D8               	btfss	status,2,c
  2369  001354  EFAE  F009         	goto	u7121
  2370  001358  EFB0  F009         	goto	u7120
  2371  00135C                     u7121:
  2372  00135C  EFBB  F009         	goto	l339
  2373  001360                     u7120:
  2374  001360                     
  2375                           ; BSR set to: 0
  2376                           ;fs_menu_controller.c: 222:             {;fs_menu_controller.c: 223:                 men
      +                          u_selected = STOP_MENU;
  2377  001360  0E04               	movlw	4
  2378  001362  0101               	movlb	1	; () banked
  2379  001364  6FA7               	movwf	_menu_selected& (0+255),b
  2380                           
  2381                           ;fs_menu_controller.c: 224:                 timer_value.minute = 0;
  2382  001366  0E00               	movlw	0
  2383  001368  0100               	movlb	0	; () banked
  2384  00136A  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2385  00136C  0E00               	movlw	0
  2386  00136E  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2387                           
  2388                           ;fs_menu_controller.c: 225:                 startIsClick = 0;
  2389  001370  0E00               	movlw	0
  2390  001372  0101               	movlb	1	; () banked
  2391  001374  6FA9               	movwf	_startIsClick& (0+255),b
  2392  001376                     l339:
  2393                           
  2394                           ;fs_menu_controller.c: 228:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2395  001376  0101               	movlb	1	; () banked
  2396  001378  51A9               	movf	_startIsClick& (0+255),w,b
  2397  00137A  A4D8               	btfss	status,2,c
  2398  00137C  EFC2  F009         	goto	u7131
  2399  001380  EFC4  F009         	goto	u7130
  2400  001384                     u7131:
  2401  001384  EFE5  F009         	goto	l340
  2402  001388                     u7130:
  2403  001388                     
  2404                           ; BSR set to: 1
  2405  001388  0100               	movlb	0	; () banked
  2406  00138A  05FF               	decf	_pauseIsClick& (0+255),w,b
  2407  00138C  A4D8               	btfss	status,2,c
  2408  00138E  EFCB  F009         	goto	u7141
  2409  001392  EFCD  F009         	goto	u7140
  2410  001396                     u7141:
  2411  001396  EFE5  F009         	goto	l340
  2412  00139A                     u7140:
  2413  00139A                     
  2414                           ; BSR set to: 0
  2415  00139A  0101               	movlb	1	; () banked
  2416  00139C  51A8               	movf	_stopIsClick& (0+255),w,b
  2417  00139E  A4D8               	btfss	status,2,c
  2418  0013A0  EFD4  F009         	goto	u7151
  2419  0013A4  EFD6  F009         	goto	u7150
  2420  0013A8                     u7151:
  2421  0013A8  EFE5  F009         	goto	l340
  2422  0013AC                     u7150:
  2423  0013AC                     
  2424                           ; BSR set to: 1
  2425  0013AC  51A7               	movf	_menu_selected& (0+255),w,b
  2426  0013AE  A4D8               	btfss	status,2,c
  2427  0013B0  EFDC  F009         	goto	u7161
  2428  0013B4  EFDE  F009         	goto	u7160
  2429  0013B8                     u7161:
  2430  0013B8  EFE5  F009         	goto	l340
  2431  0013BC                     u7160:
  2432  0013BC                     
  2433                           ; BSR set to: 1
  2434                           ;fs_menu_controller.c: 229:             {;fs_menu_controller.c: 230:                 men
      +                          u_selected = PAUSE_MENU;
  2435  0013BC  0E06               	movlw	6
  2436  0013BE  6FA7               	movwf	_menu_selected& (0+255),b
  2437  0013C0                     
  2438                           ; BSR set to: 1
  2439                           ;fs_menu_controller.c: 231:                 LATDbits.LATD5 = 0;
  2440  0013C0  9A8C               	bcf	140,5,c	;volatile
  2441  0013C2                     
  2442                           ; BSR set to: 1
  2443                           ;fs_menu_controller.c: 232:                 LATCbits.LATC5 = 0;
  2444  0013C2  9A8B               	bcf	139,5,c	;volatile
  2445  0013C4                     
  2446                           ; BSR set to: 1
  2447                           ;fs_menu_controller.c: 233:                 LATCbits.LATC4 = 0;
  2448  0013C4  988B               	bcf	139,4,c	;volatile
  2449                           
  2450                           ;fs_menu_controller.c: 234:                 startIsClick = 0;
  2451  0013C6  0E00               	movlw	0
  2452  0013C8  6FA9               	movwf	_startIsClick& (0+255),b
  2453  0013CA                     l340:
  2454                           
  2455                           ;fs_menu_controller.c: 237:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2456  0013CA  0101               	movlb	1	; () banked
  2457  0013CC  51A9               	movf	_startIsClick& (0+255),w,b
  2458  0013CE  A4D8               	btfss	status,2,c
  2459  0013D0  EFEC  F009         	goto	u7171
  2460  0013D4  EFEE  F009         	goto	u7170
  2461  0013D8                     u7171:
  2462  0013D8  EF1E  F00A         	goto	l5783
  2463  0013DC                     u7170:
  2464  0013DC                     
  2465                           ; BSR set to: 1
  2466  0013DC  0100               	movlb	0	; () banked
  2467  0013DE  51FF               	movf	_pauseIsClick& (0+255),w,b
  2468  0013E0  A4D8               	btfss	status,2,c
  2469  0013E2  EFF5  F009         	goto	u7181
  2470  0013E6  EFF7  F009         	goto	u7180
  2471  0013EA                     u7181:
  2472  0013EA  EF1E  F00A         	goto	l5783
  2473  0013EE                     u7180:
  2474  0013EE                     
  2475                           ; BSR set to: 0
  2476  0013EE  0101               	movlb	1	; () banked
  2477  0013F0  05A8               	decf	_stopIsClick& (0+255),w,b
  2478  0013F2  A4D8               	btfss	status,2,c
  2479  0013F4  EFFE  F009         	goto	u7191
  2480  0013F8  EF00  F00A         	goto	u7190
  2481  0013FC                     u7191:
  2482  0013FC  EF1E  F00A         	goto	l5783
  2483  001400                     u7190:
  2484  001400                     
  2485                           ; BSR set to: 1
  2486  001400  51A7               	movf	_menu_selected& (0+255),w,b
  2487  001402  A4D8               	btfss	status,2,c
  2488  001404  EF06  F00A         	goto	u7201
  2489  001408  EF08  F00A         	goto	u7200
  2490  00140C                     u7201:
  2491  00140C  EF1E  F00A         	goto	l5783
  2492  001410                     u7200:
  2493  001410                     
  2494                           ; BSR set to: 1
  2495                           ;fs_menu_controller.c: 238:             {;fs_menu_controller.c: 239:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2496  001410  C19B  F0F9         	movff	_menu_value,_timer_value+6
  2497  001414  0100               	movlb	0	; () banked
  2498  001416  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2499  001418                     
  2500                           ; BSR set to: 0
  2501                           ;fs_menu_controller.c: 240:                  timer_value.remainingSecond = 0;
  2502  001418  0E00               	movlw	0
  2503  00141A  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2504  00141C  0E00               	movlw	0
  2505  00141E  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2506                           
  2507                           ;fs_menu_controller.c: 241:                  timer_value.second = 0;
  2508  001420  0E00               	movlw	0
  2509  001422  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2510  001424  0E00               	movlw	0
  2511  001426  6FF3               	movwf	_timer_value& (0+255),b
  2512                           
  2513                           ;fs_menu_controller.c: 242:                  timer_value.minute = 0;
  2514  001428  0E00               	movlw	0
  2515  00142A  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2516  00142C  0E00               	movlw	0
  2517  00142E  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2518  001430                     
  2519                           ; BSR set to: 0
  2520                           ;fs_menu_controller.c: 243:                  LATDbits.LATD5 = 0;
  2521  001430  9A8C               	bcf	140,5,c	;volatile
  2522  001432                     
  2523                           ; BSR set to: 0
  2524                           ;fs_menu_controller.c: 244:                  LATCbits.LATC5 = 0;
  2525  001432  9A8B               	bcf	139,5,c	;volatile
  2526  001434                     
  2527                           ; BSR set to: 0
  2528                           ;fs_menu_controller.c: 245:                  LATCbits.LATC4 = 0;
  2529  001434  988B               	bcf	139,4,c	;volatile
  2530                           
  2531                           ;fs_menu_controller.c: 246:                  startIsClick = 0;
  2532  001436  0E00               	movlw	0
  2533  001438  0101               	movlb	1	; () banked
  2534  00143A  6FA9               	movwf	_startIsClick& (0+255),b
  2535  00143C                     l5783:
  2536                           
  2537                           ;fs_menu_controller.c: 249:             if ( (startIsClick == 1) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 0) )
  2538  00143C  0101               	movlb	1	; () banked
  2539  00143E  05A9               	decf	_startIsClick& (0+255),w,b
  2540  001440  A4D8               	btfss	status,2,c
  2541  001442  EF25  F00A         	goto	u7211
  2542  001446  EF27  F00A         	goto	u7210
  2543  00144A                     u7211:
  2544  00144A  EF66  F00E         	goto	l379
  2545  00144E                     u7210:
  2546  00144E                     
  2547                           ; BSR set to: 1
  2548  00144E  0100               	movlb	0	; () banked
  2549  001450  51FF               	movf	_pauseIsClick& (0+255),w,b
  2550  001452  A4D8               	btfss	status,2,c
  2551  001454  EF2E  F00A         	goto	u7221
  2552  001458  EF30  F00A         	goto	u7220
  2553  00145C                     u7221:
  2554  00145C  EF66  F00E         	goto	l379
  2555  001460                     u7220:
  2556  001460                     
  2557                           ; BSR set to: 0
  2558  001460  0101               	movlb	1	; () banked
  2559  001462  51A8               	movf	_stopIsClick& (0+255),w,b
  2560  001464  A4D8               	btfss	status,2,c
  2561  001466  EF37  F00A         	goto	u7231
  2562  00146A  EF39  F00A         	goto	u7230
  2563  00146E                     u7231:
  2564  00146E  EF66  F00E         	goto	l379
  2565  001472                     u7230:
  2566  001472                     
  2567                           ; BSR set to: 1
  2568                           ;fs_menu_controller.c: 250:             {;fs_menu_controller.c: 251:                 sta
      +                          rtMotor();
  2569  001472  ECA9  F02D         	call	_startMotor	;wreg free
  2570  001476                     
  2571                           ;fs_menu_controller.c: 252:                 LATDbits.LATD5 = 1;
  2572  001476  8A8C               	bsf	140,5,c	;volatile
  2573  001478                     
  2574                           ;fs_menu_controller.c: 253:                 LATCbits.LATC5 = 1;
  2575  001478  8A8B               	bsf	139,5,c	;volatile
  2576  00147A                     
  2577                           ;fs_menu_controller.c: 254:                 LATCbits.LATC4 = 1;
  2578  00147A  888B               	bsf	139,4,c	;volatile
  2579  00147C  EF66  F00E         	goto	l379
  2580  001480                     l5797:
  2581                           
  2582                           ; BSR set to: 0
  2583                           ;fs_menu_controller.c: 262:             startIsClick = 0;
  2584  001480  0E00               	movlw	0
  2585  001482  0101               	movlb	1	; () banked
  2586  001484  6FA9               	movwf	_startIsClick& (0+255),b
  2587  001486                     
  2588                           ; BSR set to: 1
  2589                           ;fs_menu_controller.c: 263:             if (menu_flags.menu_input_flag == 1)
  2590  001486  0100               	movlb	0	; () banked
  2591  001488  A1FD               	btfss	_menu_flags& (0+255),0,b
  2592  00148A  EF49  F00A         	goto	u7241
  2593  00148E  EF4B  F00A         	goto	u7240
  2594  001492                     u7241:
  2595  001492  EF4F  F00A         	goto	l5805
  2596  001496                     u7240:
  2597  001496                     
  2598                           ; BSR set to: 0
  2599                           ;fs_menu_controller.c: 264:             {;fs_menu_controller.c: 265:                 men
      +                          u_flags.menu_input_flag = 0;
  2600  001496  91FD               	bcf	_menu_flags& (0+255),0,b
  2601  001498                     
  2602                           ; BSR set to: 0
  2603                           ;fs_menu_controller.c: 266:                 menu_selected = STOP_TIME_SETTING;
  2604  001498  0E02               	movlw	2
  2605  00149A  0101               	movlb	1	; () banked
  2606  00149C  6FA7               	movwf	_menu_selected& (0+255),b
  2607  00149E                     l5805:
  2608                           
  2609                           ;fs_menu_controller.c: 269:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2610  00149E  0100               	movlb	0	; () banked
  2611  0014A0  A9FD               	btfss	_menu_flags& (0+255),4,b
  2612  0014A2  EF55  F00A         	goto	u7251
  2613  0014A6  EF57  F00A         	goto	u7250
  2614  0014AA                     u7251:
  2615  0014AA  EF79  F00A         	goto	l5823
  2616  0014AE                     u7250:
  2617  0014AE                     
  2618                           ; BSR set to: 0
  2619  0014AE  0E1E               	movlw	30
  2620  0014B0  0101               	movlb	1	; () banked
  2621  0014B2  619B               	cpfslt	_menu_value& (0+255),b
  2622  0014B4  EF5E  F00A         	goto	u7261
  2623  0014B8  EF60  F00A         	goto	u7260
  2624  0014BC                     u7261:
  2625  0014BC  EF79  F00A         	goto	l5823
  2626  0014C0                     u7260:
  2627  0014C0                     
  2628                           ; BSR set to: 1
  2629                           ;fs_menu_controller.c: 270:             {;fs_menu_controller.c: 271:                 men
      +                          u_flags.menu_increase_flag = 0;
  2630  0014C0  0100               	movlb	0	; () banked
  2631  0014C2  99FD               	bcf	_menu_flags& (0+255),4,b
  2632  0014C4                     
  2633                           ; BSR set to: 0
  2634                           ;fs_menu_controller.c: 272:                 menu_value.driver_time++;
  2635  0014C4  0101               	movlb	1	; () banked
  2636  0014C6  2B9B               	incf	_menu_value& (0+255),f,b
  2637  0014C8                     
  2638                           ; BSR set to: 1
  2639                           ;fs_menu_controller.c: 273:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2640  0014C8  C19B  F001         	movff	_menu_value,eepromWrite@data
  2641  0014CC  0E00               	movlw	0
  2642  0014CE  ECF9  F02D         	call	_eepromWrite
  2643  0014D2                     
  2644                           ;fs_menu_controller.c: 274:                 timer_value.minute =0 ;
  2645  0014D2  0E00               	movlw	0
  2646  0014D4  0100               	movlb	0	; () banked
  2647  0014D6  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2648  0014D8  0E00               	movlw	0
  2649  0014DA  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2650  0014DC                     
  2651                           ; BSR set to: 0
  2652                           ;fs_menu_controller.c: 275:                 timer_value.second = 0;
  2653  0014DC  0E00               	movlw	0
  2654  0014DE  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2655  0014E0  0E00               	movlw	0
  2656  0014E2  6FF3               	movwf	_timer_value& (0+255),b
  2657  0014E4                     
  2658                           ; BSR set to: 0
  2659                           ;fs_menu_controller.c: 276:                 timer_value.remainingSecond = 0;
  2660  0014E4  0E00               	movlw	0
  2661  0014E6  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2662  0014E8  0E00               	movlw	0
  2663  0014EA  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2664  0014EC                     
  2665                           ; BSR set to: 0
  2666                           ;fs_menu_controller.c: 277:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2667  0014EC  C19B  F0F9         	movff	_menu_value,_timer_value+6
  2668  0014F0  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2669  0014F2                     l5823:
  2670                           
  2671                           ;fs_menu_controller.c: 280:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time >= 0))
  2672  0014F2  0100               	movlb	0	; () banked
  2673  0014F4  ABFD               	btfss	_menu_flags& (0+255),5,b
  2674  0014F6  EF7F  F00A         	goto	u7271
  2675  0014FA  EF81  F00A         	goto	u7270
  2676  0014FE                     u7271:
  2677  0014FE  EF99  F00A         	goto	l5839
  2678  001502                     u7270:
  2679  001502                     
  2680                           ; BSR set to: 0
  2681                           ;fs_menu_controller.c: 281:             {;fs_menu_controller.c: 282:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2682  001502  9BFD               	bcf	_menu_flags& (0+255),5,b
  2683  001504                     
  2684                           ; BSR set to: 0
  2685                           ;fs_menu_controller.c: 283:                  menu_value.driver_time--;
  2686  001504  0101               	movlb	1	; () banked
  2687  001506  079B               	decf	_menu_value& (0+255),f,b
  2688  001508                     
  2689                           ; BSR set to: 1
  2690                           ;fs_menu_controller.c: 284:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2691  001508  C19B  F001         	movff	_menu_value,eepromWrite@data
  2692  00150C  0E00               	movlw	0
  2693  00150E  ECF9  F02D         	call	_eepromWrite
  2694  001512                     
  2695                           ;fs_menu_controller.c: 285:                  timer_value.minute =0 ;
  2696  001512  0E00               	movlw	0
  2697  001514  0100               	movlb	0	; () banked
  2698  001516  6FF6               	movwf	(_timer_value+3)& (0+255),b
  2699  001518  0E00               	movlw	0
  2700  00151A  6FF5               	movwf	(_timer_value+2)& (0+255),b
  2701  00151C                     
  2702                           ; BSR set to: 0
  2703                           ;fs_menu_controller.c: 286:                  timer_value.second = 0;
  2704  00151C  0E00               	movlw	0
  2705  00151E  6FF4               	movwf	(_timer_value+1)& (0+255),b
  2706  001520  0E00               	movlw	0
  2707  001522  6FF3               	movwf	_timer_value& (0+255),b
  2708  001524                     
  2709                           ; BSR set to: 0
  2710                           ;fs_menu_controller.c: 287:                  timer_value.remainingSecond = 0;
  2711  001524  0E00               	movlw	0
  2712  001526  6FF8               	movwf	(_timer_value+5)& (0+255),b
  2713  001528  0E00               	movlw	0
  2714  00152A  6FF7               	movwf	(_timer_value+4)& (0+255),b
  2715  00152C                     
  2716                           ; BSR set to: 0
  2717                           ;fs_menu_controller.c: 288:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2718  00152C  C19B  F0F9         	movff	_menu_value,_timer_value+6
  2719  001530  6BFA               	clrf	(_timer_value+7)& (0+255),b
  2720  001532                     l5839:
  2721                           
  2722                           ; BSR set to: 0
  2723                           ;fs_menu_controller.c: 290:             Lcd_Set_Cursor(1,1);
  2724  001532  0E01               	movlw	1
  2725  001534  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2726  001536  0E01               	movlw	1
  2727  001538  EC3C  F02B         	call	_Lcd_Set_Cursor
  2728  00153C                     
  2729                           ;fs_menu_controller.c: 291:             Lcd_Write_String("HAREKT ZAMANI dk");
  2730  00153C  0E68               	movlw	low STR_3
  2731  00153E  6E05               	movwf	Lcd_Write_String@a^0,c
  2732  001540  0E06               	movlw	high STR_3
  2733  001542  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2734  001544  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  2735  001548                     
  2736                           ;fs_menu_controller.c: 292:             Lcd_Set_Cursor(2,1);
  2737  001548  0E01               	movlw	1
  2738  00154A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2739  00154C  0E02               	movlw	2
  2740  00154E  EC3C  F02B         	call	_Lcd_Set_Cursor
  2741  001552                     
  2742                           ;fs_menu_controller.c: 293:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2743  001552  0EE3               	movlw	low stateMachine@textCursor2
  2744  001554  0100               	movlb	0	; () banked
  2745  001556  6FCF               	movwf	sprintf@s& (0+255),b
  2746  001558  0E00               	movlw	high stateMachine@textCursor2
  2747  00155A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2748  00155C  0E01               	movlw	low STR_4
  2749  00155E  6FD1               	movwf	sprintf@fmt& (0+255),b
  2750  001560  0E06               	movlw	high STR_4
  2751  001562  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2752  001564  C19B  F0D3         	movff	_menu_value,?_sprintf+4
  2753  001568  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2754  00156A  EC24  F02C         	call	_sprintf	;wreg free
  2755  00156E                     
  2756                           ;fs_menu_controller.c: 294:             Lcd_Write_String(textCursor2);
  2757  00156E  0EE3               	movlw	low stateMachine@textCursor2
  2758  001570  6E05               	movwf	Lcd_Write_String@a^0,c
  2759  001572  0E00               	movlw	high stateMachine@textCursor2
  2760  001574  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2761  001576  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  2762  00157A                     
  2763                           ;fs_menu_controller.c: 296:             if(timer_value.menu_login_delay == 100)
  2764  00157A  0E64               	movlw	100
  2765  00157C  0100               	movlb	0	; () banked
  2766  00157E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2767  001580  A4D8               	btfss	status,2,c
  2768  001582  EFC5  F00A         	goto	u7281
  2769  001586  EFC7  F00A         	goto	u7280
  2770  00158A                     u7281:
  2771  00158A  EFCC  F00A         	goto	l5853
  2772  00158E                     u7280:
  2773  00158E                     
  2774                           ; BSR set to: 0
  2775                           ;fs_menu_controller.c: 297:             {;fs_menu_controller.c: 298:                 tim
      +                          er_value.menu_login_delay = 0;
  2776  00158E  0E00               	movlw	0
  2777  001590  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2778                           
  2779                           ;fs_menu_controller.c: 299:                 menu_selected = PAUSE_MENU;
  2780  001592  0E06               	movlw	6
  2781  001594  0101               	movlb	1	; () banked
  2782  001596  6FA7               	movwf	_menu_selected& (0+255),b
  2783  001598                     l5853:
  2784                           
  2785                           ;fs_menu_controller.c: 302:         stopMotor();
  2786  001598  EC1B  F02D         	call	_stopMotor	;wreg free
  2787                           
  2788                           ;fs_menu_controller.c: 304:         break;
  2789  00159C  EF66  F00E         	goto	l379
  2790  0015A0                     l5855:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;fs_menu_controller.c: 308:             startIsClick = 0;
  2794  0015A0  0E00               	movlw	0
  2795  0015A2  0101               	movlb	1	; () banked
  2796  0015A4  6FA9               	movwf	_startIsClick& (0+255),b
  2797  0015A6                     
  2798                           ; BSR set to: 1
  2799                           ;fs_menu_controller.c: 309:             stopMotor();
  2800  0015A6  EC1B  F02D         	call	_stopMotor	;wreg free
  2801  0015AA                     
  2802                           ;fs_menu_controller.c: 311:             if (menu_flags.menu_input_flag == 1)
  2803  0015AA  0100               	movlb	0	; () banked
  2804  0015AC  A1FD               	btfss	_menu_flags& (0+255),0,b
  2805  0015AE  EFDB  F00A         	goto	u7291
  2806  0015B2  EFDD  F00A         	goto	u7290
  2807  0015B6                     u7291:
  2808  0015B6  EFE1  F00A         	goto	l5865
  2809  0015BA                     u7290:
  2810  0015BA                     
  2811                           ; BSR set to: 0
  2812                           ;fs_menu_controller.c: 312:             {;fs_menu_controller.c: 313:                 men
      +                          u_flags.menu_input_flag = 0;
  2813  0015BA  91FD               	bcf	_menu_flags& (0+255),0,b
  2814  0015BC                     
  2815                           ; BSR set to: 0
  2816                           ;fs_menu_controller.c: 314:                 menu_selected = SPEED_LIMIT_SETTING;
  2817  0015BC  0E03               	movlw	3
  2818  0015BE  0101               	movlb	1	; () banked
  2819  0015C0  6FA7               	movwf	_menu_selected& (0+255),b
  2820  0015C2                     l5865:
  2821                           
  2822                           ;fs_menu_controller.c: 317:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 250))
  2823  0015C2  0100               	movlb	0	; () banked
  2824  0015C4  A9FD               	btfss	_menu_flags& (0+255),4,b
  2825  0015C6  EFE7  F00A         	goto	u7301
  2826  0015CA  EFE9  F00A         	goto	u7300
  2827  0015CE                     u7301:
  2828  0015CE  EFFC  F00A         	goto	l5875
  2829  0015D2                     u7300:
  2830  0015D2                     
  2831                           ; BSR set to: 0
  2832  0015D2  0EFA               	movlw	250
  2833  0015D4  0101               	movlb	1	; () banked
  2834  0015D6  619C               	cpfslt	(_menu_value+1)& (0+255),b
  2835  0015D8  EFF0  F00A         	goto	u7311
  2836  0015DC  EFF2  F00A         	goto	u7310
  2837  0015E0                     u7311:
  2838  0015E0  EFFC  F00A         	goto	l5875
  2839  0015E4                     u7310:
  2840  0015E4                     
  2841                           ; BSR set to: 1
  2842                           ;fs_menu_controller.c: 318:             {;fs_menu_controller.c: 319:                 men
      +                          u_flags.menu_increase_flag = 0;
  2843  0015E4  0100               	movlb	0	; () banked
  2844  0015E6  99FD               	bcf	_menu_flags& (0+255),4,b
  2845  0015E8                     
  2846                           ; BSR set to: 0
  2847                           ;fs_menu_controller.c: 320:                 menu_value.stop_time += 10;
  2848  0015E8  0E0A               	movlw	10
  2849  0015EA  0101               	movlb	1	; () banked
  2850  0015EC  279C               	addwf	(_menu_value+1)& (0+255),f,b
  2851  0015EE                     
  2852                           ; BSR set to: 1
  2853                           ;fs_menu_controller.c: 321:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2854  0015EE  C19C  F001         	movff	_menu_value+1,eepromWrite@data
  2855  0015F2  0E01               	movlw	1
  2856  0015F4  ECF9  F02D         	call	_eepromWrite
  2857  0015F8                     l5875:
  2858                           
  2859                           ;fs_menu_controller.c: 324:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 10))
  2860  0015F8  0100               	movlb	0	; () banked
  2861  0015FA  ABFD               	btfss	_menu_flags& (0+255),5,b
  2862  0015FC  EF02  F00B         	goto	u7321
  2863  001600  EF04  F00B         	goto	u7320
  2864  001604                     u7321:
  2865  001604  EF17  F00B         	goto	l5885
  2866  001608                     u7320:
  2867  001608                     
  2868                           ; BSR set to: 0
  2869  001608  0E0A               	movlw	10
  2870  00160A  0101               	movlb	1	; () banked
  2871  00160C  659C               	cpfsgt	(_menu_value+1)& (0+255),b
  2872  00160E  EF0B  F00B         	goto	u7331
  2873  001612  EF0D  F00B         	goto	u7330
  2874  001616                     u7331:
  2875  001616  EF17  F00B         	goto	l5885
  2876  00161A                     u7330:
  2877  00161A                     
  2878                           ; BSR set to: 1
  2879                           ;fs_menu_controller.c: 325:             {;fs_menu_controller.c: 326:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2880  00161A  0100               	movlb	0	; () banked
  2881  00161C  9BFD               	bcf	_menu_flags& (0+255),5,b
  2882  00161E                     
  2883                           ; BSR set to: 0
  2884                           ;fs_menu_controller.c: 327:                  menu_value.stop_time -= 10;
  2885  00161E  0E0A               	movlw	10
  2886  001620  0101               	movlb	1	; () banked
  2887  001622  5F9C               	subwf	(_menu_value+1)& (0+255),f,b
  2888  001624                     
  2889                           ; BSR set to: 1
  2890                           ;fs_menu_controller.c: 328:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2891  001624  C19C  F001         	movff	_menu_value+1,eepromWrite@data
  2892  001628  0E01               	movlw	1
  2893  00162A  ECF9  F02D         	call	_eepromWrite
  2894  00162E                     l5885:
  2895                           
  2896                           ;fs_menu_controller.c: 330:             Lcd_Set_Cursor(1,1);
  2897  00162E  0E01               	movlw	1
  2898  001630  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2899  001632  0E01               	movlw	1
  2900  001634  EC3C  F02B         	call	_Lcd_Set_Cursor
  2901  001638                     
  2902                           ;fs_menu_controller.c: 331:             Lcd_Write_String("DURMA ZAMANI  ms");
  2903  001638  0E79               	movlw	low STR_5
  2904  00163A  6E05               	movwf	Lcd_Write_String@a^0,c
  2905  00163C  0E06               	movlw	high STR_5
  2906  00163E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2907  001640  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  2908  001644                     
  2909                           ;fs_menu_controller.c: 332:             Lcd_Set_Cursor(2,1);
  2910  001644  0E01               	movlw	1
  2911  001646  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2912  001648  0E02               	movlw	2
  2913  00164A  EC3C  F02B         	call	_Lcd_Set_Cursor
  2914  00164E                     
  2915                           ;fs_menu_controller.c: 333:             sprintf(textCursor2,"%d             ",menu_value
      +                          .stop_time);
  2916  00164E  0EE3               	movlw	low stateMachine@textCursor2
  2917  001650  0100               	movlb	0	; () banked
  2918  001652  6FCF               	movwf	sprintf@s& (0+255),b
  2919  001654  0E00               	movlw	high stateMachine@textCursor2
  2920  001656  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2921  001658  0E8A               	movlw	low STR_6
  2922  00165A  6FD1               	movwf	sprintf@fmt& (0+255),b
  2923  00165C  0E06               	movlw	high STR_6
  2924  00165E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2925  001660  C19C  F0D3         	movff	_menu_value+1,?_sprintf+4
  2926  001664  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2927  001666  EC24  F02C         	call	_sprintf	;wreg free
  2928  00166A                     
  2929                           ;fs_menu_controller.c: 334:             Lcd_Write_String(textCursor2);
  2930  00166A  0EE3               	movlw	low stateMachine@textCursor2
  2931  00166C  6E05               	movwf	Lcd_Write_String@a^0,c
  2932  00166E  0E00               	movlw	high stateMachine@textCursor2
  2933  001670  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2934  001672  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  2935  001676                     
  2936                           ;fs_menu_controller.c: 336:             if(timer_value.menu_login_delay == 100)
  2937  001676  0E64               	movlw	100
  2938  001678  0100               	movlb	0	; () banked
  2939  00167A  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  2940  00167C  A4D8               	btfss	status,2,c
  2941  00167E  EF43  F00B         	goto	u7341
  2942  001682  EF45  F00B         	goto	u7340
  2943  001686                     u7341:
  2944  001686  EF66  F00E         	goto	l379
  2945  00168A                     u7340:
  2946  00168A                     l5897:
  2947                           
  2948                           ; BSR set to: 0
  2949                           ;fs_menu_controller.c: 337:             {;fs_menu_controller.c: 338:                 tim
      +                          er_value.menu_login_delay = 0;
  2950  00168A  0E00               	movlw	0
  2951  00168C  6FFB               	movwf	(_timer_value+8)& (0+255),b
  2952                           
  2953                           ;fs_menu_controller.c: 339:                 menu_selected = PAUSE_MENU;
  2954  00168E  0E06               	movlw	6
  2955  001690  0101               	movlb	1	; () banked
  2956  001692  6FA7               	movwf	_menu_selected& (0+255),b
  2957  001694  EF66  F00E         	goto	l379
  2958  001698                     l5899:
  2959                           
  2960                           ; BSR set to: 0
  2961                           ;fs_menu_controller.c: 344:             stopMotor();
  2962  001698  EC1B  F02D         	call	_stopMotor	;wreg free
  2963  00169C                     
  2964                           ;fs_menu_controller.c: 345:             startIsClick = 0;
  2965  00169C  0E00               	movlw	0
  2966  00169E  0101               	movlb	1	; () banked
  2967  0016A0  6FA9               	movwf	_startIsClick& (0+255),b
  2968  0016A2                     
  2969                           ; BSR set to: 1
  2970                           ;fs_menu_controller.c: 350:             if (menu_flags.menu_input_flag == 1)
  2971  0016A2  0100               	movlb	0	; () banked
  2972  0016A4  A1FD               	btfss	_menu_flags& (0+255),0,b
  2973  0016A6  EF57  F00B         	goto	u7351
  2974  0016AA  EF59  F00B         	goto	u7350
  2975  0016AE                     u7351:
  2976  0016AE  EF5D  F00B         	goto	l5909
  2977  0016B2                     u7350:
  2978  0016B2                     
  2979                           ; BSR set to: 0
  2980                           ;fs_menu_controller.c: 351:             {;fs_menu_controller.c: 352:                 men
      +                          u_flags.menu_input_flag = 0;
  2981  0016B2  91FD               	bcf	_menu_flags& (0+255),0,b
  2982  0016B4                     
  2983                           ; BSR set to: 0
  2984                           ;fs_menu_controller.c: 353:                 menu_selected = DRIVER_TIME_SETTING;
  2985  0016B4  0E01               	movlw	1
  2986  0016B6  0101               	movlb	1	; () banked
  2987  0016B8  6FA7               	movwf	_menu_selected& (0+255),b
  2988  0016BA                     l5909:
  2989                           
  2990                           ;fs_menu_controller.c: 356:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2991  0016BA  0100               	movlb	0	; () banked
  2992  0016BC  A9FD               	btfss	_menu_flags& (0+255),4,b
  2993  0016BE  EF63  F00B         	goto	u7361
  2994  0016C2  EF65  F00B         	goto	u7360
  2995  0016C6                     u7361:
  2996  0016C6  EF77  F00B         	goto	l5919
  2997  0016CA                     u7360:
  2998  0016CA                     
  2999                           ; BSR set to: 0
  3000  0016CA  0E05               	movlw	5
  3001  0016CC  0101               	movlb	1	; () banked
  3002  0016CE  619D               	cpfslt	(_menu_value+2)& (0+255),b
  3003  0016D0  EF6C  F00B         	goto	u7371
  3004  0016D4  EF6E  F00B         	goto	u7370
  3005  0016D8                     u7371:
  3006  0016D8  EF77  F00B         	goto	l5919
  3007  0016DC                     u7370:
  3008  0016DC                     
  3009                           ; BSR set to: 1
  3010                           ;fs_menu_controller.c: 357:             {;fs_menu_controller.c: 358:                 men
      +                          u_flags.menu_increase_flag = 0;
  3011  0016DC  0100               	movlb	0	; () banked
  3012  0016DE  99FD               	bcf	_menu_flags& (0+255),4,b
  3013  0016E0                     
  3014                           ; BSR set to: 0
  3015                           ;fs_menu_controller.c: 359:                 menu_value.speed_limit += 1;
  3016  0016E0  0101               	movlb	1	; () banked
  3017  0016E2  2B9D               	incf	(_menu_value+2)& (0+255),f,b
  3018  0016E4                     
  3019                           ; BSR set to: 1
  3020                           ;fs_menu_controller.c: 360:                 eepromWrite(0x02,menu_value.speed_limit);
  3021  0016E4  C19D  F001         	movff	_menu_value+2,eepromWrite@data
  3022  0016E8  0E02               	movlw	2
  3023  0016EA  ECF9  F02D         	call	_eepromWrite
  3024  0016EE                     l5919:
  3025                           
  3026                           ;fs_menu_controller.c: 363:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 1))
  3027  0016EE  0100               	movlb	0	; () banked
  3028  0016F0  ABFD               	btfss	_menu_flags& (0+255),5,b
  3029  0016F2  EF7D  F00B         	goto	u7381
  3030  0016F6  EF7F  F00B         	goto	u7380
  3031  0016FA                     u7381:
  3032  0016FA  EF91  F00B         	goto	l5929
  3033  0016FE                     u7380:
  3034  0016FE                     
  3035                           ; BSR set to: 0
  3036  0016FE  0E01               	movlw	1
  3037  001700  0101               	movlb	1	; () banked
  3038  001702  659D               	cpfsgt	(_menu_value+2)& (0+255),b
  3039  001704  EF86  F00B         	goto	u7391
  3040  001708  EF88  F00B         	goto	u7390
  3041  00170C                     u7391:
  3042  00170C  EF91  F00B         	goto	l5929
  3043  001710                     u7390:
  3044  001710                     
  3045                           ; BSR set to: 1
  3046                           ;fs_menu_controller.c: 364:             {;fs_menu_controller.c: 365:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  3047  001710  0100               	movlb	0	; () banked
  3048  001712  9BFD               	bcf	_menu_flags& (0+255),5,b
  3049  001714                     
  3050                           ; BSR set to: 0
  3051                           ;fs_menu_controller.c: 366:                  menu_value.speed_limit -= 1;
  3052  001714  0101               	movlb	1	; () banked
  3053  001716  079D               	decf	(_menu_value+2)& (0+255),f,b
  3054  001718                     
  3055                           ; BSR set to: 1
  3056                           ;fs_menu_controller.c: 367:                  eepromWrite(0x02,menu_value.speed_limit);
  3057  001718  C19D  F001         	movff	_menu_value+2,eepromWrite@data
  3058  00171C  0E02               	movlw	2
  3059  00171E  ECF9  F02D         	call	_eepromWrite
  3060  001722                     l5929:
  3061                           
  3062                           ;fs_menu_controller.c: 369:             Lcd_Set_Cursor(1,1);
  3063  001722  0E01               	movlw	1
  3064  001724  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3065  001726  0E01               	movlw	1
  3066  001728  EC3C  F02B         	call	_Lcd_Set_Cursor
  3067  00172C                     
  3068                           ;fs_menu_controller.c: 370:             Lcd_Write_String("HIZ LiMiTi      ");
  3069  00172C  0E24               	movlw	low STR_7
  3070  00172E  6E05               	movwf	Lcd_Write_String@a^0,c
  3071  001730  0E06               	movlw	high STR_7
  3072  001732  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3073  001734  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3074  001738                     
  3075                           ;fs_menu_controller.c: 371:             Lcd_Set_Cursor(2,1);
  3076  001738  0E01               	movlw	1
  3077  00173A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3078  00173C  0E02               	movlw	2
  3079  00173E  EC3C  F02B         	call	_Lcd_Set_Cursor
  3080  001742                     
  3081                           ;fs_menu_controller.c: 372:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  3082  001742  0EE3               	movlw	low stateMachine@textCursor2
  3083  001744  0100               	movlb	0	; () banked
  3084  001746  6FCF               	movwf	sprintf@s& (0+255),b
  3085  001748  0E00               	movlw	high stateMachine@textCursor2
  3086  00174A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3087  00174C  0E01               	movlw	low STR_4
  3088  00174E  6FD1               	movwf	sprintf@fmt& (0+255),b
  3089  001750  0E06               	movlw	high STR_4
  3090  001752  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3091  001754  C19D  F0D3         	movff	_menu_value+2,?_sprintf+4
  3092  001758  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3093  00175A  EC24  F02C         	call	_sprintf	;wreg free
  3094  00175E                     
  3095                           ;fs_menu_controller.c: 373:             Lcd_Write_String(textCursor2);
  3096  00175E  0EE3               	movlw	low stateMachine@textCursor2
  3097  001760  6E05               	movwf	Lcd_Write_String@a^0,c
  3098  001762  0E00               	movlw	high stateMachine@textCursor2
  3099  001764  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3100  001766  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3101  00176A                     
  3102                           ;fs_menu_controller.c: 375:             if(timer_value.menu_login_delay == 100)
  3103  00176A  0E64               	movlw	100
  3104  00176C  0100               	movlb	0	; () banked
  3105  00176E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3106  001770  A4D8               	btfss	status,2,c
  3107  001772  EFBD  F00B         	goto	u7401
  3108  001776  EFBF  F00B         	goto	u7400
  3109  00177A                     u7401:
  3110  00177A  EF66  F00E         	goto	l379
  3111  00177E                     u7400:
  3112  00177E  EF45  F00B         	goto	l5897
  3113  001782                     l5943:
  3114                           
  3115                           ; BSR set to: 0
  3116                           ;fs_menu_controller.c: 383:             startIsClick = 0;
  3117  001782  0E00               	movlw	0
  3118  001784  0101               	movlb	1	; () banked
  3119  001786  6FA9               	movwf	_startIsClick& (0+255),b
  3120                           
  3121                           ;fs_menu_controller.c: 384:             pauseIsClick = 0;
  3122  001788  0E00               	movlw	0
  3123  00178A  0100               	movlb	0	; () banked
  3124  00178C  6FFF               	movwf	_pauseIsClick& (0+255),b
  3125                           
  3126                           ;fs_menu_controller.c: 385:             stopIsClick = 1;
  3127  00178E  0E01               	movlw	1
  3128  001790  0101               	movlb	1	; () banked
  3129  001792  6FA8               	movwf	_stopIsClick& (0+255),b
  3130  001794                     
  3131                           ; BSR set to: 1
  3132                           ;fs_menu_controller.c: 387:             Lcd_Set_Cursor(1,1);
  3133  001794  0E01               	movlw	1
  3134  001796  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3135  001798  0E01               	movlw	1
  3136  00179A  EC3C  F02B         	call	_Lcd_Set_Cursor
  3137  00179E                     
  3138                           ;fs_menu_controller.c: 388:             Lcd_Write_String("ZAMAN DOLDU     ");
  3139  00179E  0E46               	movlw	low STR_9
  3140  0017A0  6E05               	movwf	Lcd_Write_String@a^0,c
  3141  0017A2  0E06               	movlw	high STR_9
  3142  0017A4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3143  0017A6  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3144  0017AA                     
  3145                           ;fs_menu_controller.c: 390:             timer_value.remainingSecond = 0;
  3146  0017AA  0E00               	movlw	0
  3147  0017AC  0100               	movlb	0	; () banked
  3148  0017AE  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3149  0017B0  0E00               	movlw	0
  3150  0017B2  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3151  0017B4                     
  3152                           ; BSR set to: 0
  3153                           ;fs_menu_controller.c: 391:             timer_value.remainingMinute = 0;
  3154  0017B4  0E00               	movlw	0
  3155  0017B6  6FFA               	movwf	(_timer_value+7)& (0+255),b
  3156  0017B8  0E00               	movlw	0
  3157  0017BA  6FF9               	movwf	(_timer_value+6)& (0+255),b
  3158  0017BC                     
  3159                           ; BSR set to: 0
  3160                           ;fs_menu_controller.c: 392:             timer_value.second = 0;
  3161  0017BC  0E00               	movlw	0
  3162  0017BE  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3163  0017C0  0E00               	movlw	0
  3164  0017C2  6FF3               	movwf	_timer_value& (0+255),b
  3165  0017C4                     
  3166                           ; BSR set to: 0
  3167                           ;fs_menu_controller.c: 394:              Lcd_Set_Cursor(2,1);
  3168  0017C4  0E01               	movlw	1
  3169  0017C6  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3170  0017C8  0E02               	movlw	2
  3171  0017CA  EC3C  F02B         	call	_Lcd_Set_Cursor
  3172  0017CE                     
  3173                           ;fs_menu_controller.c: 395:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3174  0017CE  0EE3               	movlw	low stateMachine@textCursor2
  3175  0017D0  0100               	movlb	0	; () banked
  3176  0017D2  6FCF               	movwf	sprintf@s& (0+255),b
  3177  0017D4  0E00               	movlw	high stateMachine@textCursor2
  3178  0017D6  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3179  0017D8  0E9A               	movlw	low STR_10
  3180  0017DA  6FD1               	movwf	sprintf@fmt& (0+255),b
  3181  0017DC  0E06               	movlw	high STR_10
  3182  0017DE  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3183  0017E0  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3184  0017E4  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3185  0017E8  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3186  0017EC  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3187  0017F0  EC24  F02C         	call	_sprintf	;wreg free
  3188  0017F4                     
  3189                           ;fs_menu_controller.c: 396:             Lcd_Write_String(textCursor2);
  3190  0017F4  0EE3               	movlw	low stateMachine@textCursor2
  3191  0017F6  6E05               	movwf	Lcd_Write_String@a^0,c
  3192  0017F8  0E00               	movlw	high stateMachine@textCursor2
  3193  0017FA  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3194  0017FC  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3195  001800                     
  3196                           ;fs_menu_controller.c: 398:         if (menu_flags.menu_start_flag == 1)
  3197  001800  0100               	movlb	0	; () banked
  3198  001802  A3FD               	btfss	_menu_flags& (0+255),1,b
  3199  001804  EF06  F00C         	goto	u7411
  3200  001808  EF08  F00C         	goto	u7410
  3201  00180C                     u7411:
  3202  00180C  EF1D  F00C         	goto	l5967
  3203  001810                     u7410:
  3204  001810                     
  3205                           ; BSR set to: 0
  3206                           ;fs_menu_controller.c: 399:         {;fs_menu_controller.c: 400:             menu_flags.
      +                          menu_start_flag = 0;
  3207  001810  93FD               	bcf	_menu_flags& (0+255),1,b
  3208  001812                     
  3209                           ; BSR set to: 0
  3210                           ;fs_menu_controller.c: 401:             menu_selected = START_MENU;
  3211  001812  0E05               	movlw	5
  3212  001814  0101               	movlb	1	; () banked
  3213  001816  6FA7               	movwf	_menu_selected& (0+255),b
  3214                           
  3215                           ;fs_menu_controller.c: 403:             startIsClick = 1;
  3216  001818  0E01               	movlw	1
  3217  00181A  6FA9               	movwf	_startIsClick& (0+255),b
  3218                           
  3219                           ;fs_menu_controller.c: 404:             pauseIsClick = 0;
  3220  00181C  0E00               	movlw	0
  3221  00181E  0100               	movlb	0	; () banked
  3222  001820  6FFF               	movwf	_pauseIsClick& (0+255),b
  3223                           
  3224                           ;fs_menu_controller.c: 405:             stopIsClick = 0;
  3225  001822  0E00               	movlw	0
  3226  001824  0101               	movlb	1	; () banked
  3227  001826  6FA8               	movwf	_stopIsClick& (0+255),b
  3228                           
  3229                           ;fs_menu_controller.c: 406:             timer_value.second = 0;
  3230  001828  0E00               	movlw	0
  3231  00182A  0100               	movlb	0	; () banked
  3232  00182C  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3233  00182E  0E00               	movlw	0
  3234  001830  6FF3               	movwf	_timer_value& (0+255),b
  3235                           
  3236                           ;fs_menu_controller.c: 407:             timer_value.minute = 0;
  3237  001832  0E00               	movlw	0
  3238  001834  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3239  001836  0E00               	movlw	0
  3240  001838  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3241  00183A                     l5967:
  3242                           
  3243                           ; BSR set to: 0
  3244                           ;fs_menu_controller.c: 410:         if ( timer_value.menu_login_delay == 100)
  3245  00183A  0E64               	movlw	100
  3246  00183C  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3247  00183E  A4D8               	btfss	status,2,c
  3248  001840  EF24  F00C         	goto	u7421
  3249  001844  EF26  F00C         	goto	u7420
  3250  001848                     u7421:
  3251  001848  EFCC  F00A         	goto	l5853
  3252  00184C                     u7420:
  3253  00184C                     
  3254                           ; BSR set to: 0
  3255                           ;fs_menu_controller.c: 411:         {;fs_menu_controller.c: 412:             timer_value
      +                          .menu_login_delay = 0;
  3256  00184C  0E00               	movlw	0
  3257  00184E  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3258                           
  3259                           ;fs_menu_controller.c: 413:             menu_selected = DRIVER_TIME_SETTING;
  3260  001850  0E01               	movlw	1
  3261  001852  0101               	movlb	1	; () banked
  3262  001854  6FA7               	movwf	_menu_selected& (0+255),b
  3263  001856  EFCC  F00A         	goto	l5853
  3264  00185A                     l362:
  3265                           
  3266                           ; BSR set to: 0
  3267                           ;fs_menu_controller.c: 421:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  3268  00185A  C19B  F0F9         	movff	_menu_value,_timer_value+6
  3269  00185E  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3270  001860                     
  3271                           ; BSR set to: 0
  3272                           ;fs_menu_controller.c: 423:             startIsClick = 1;
  3273  001860  0E01               	movlw	1
  3274  001862  0101               	movlb	1	; () banked
  3275  001864  6FA9               	movwf	_startIsClick& (0+255),b
  3276                           
  3277                           ;fs_menu_controller.c: 424:             stopIsClick = 0;
  3278  001866  0E00               	movlw	0
  3279  001868  6FA8               	movwf	_stopIsClick& (0+255),b
  3280                           
  3281                           ;fs_menu_controller.c: 425:             menu_selected = MAIN_MENU;
  3282  00186A  0E00               	movlw	0
  3283  00186C  6FA7               	movwf	_menu_selected& (0+255),b
  3284                           
  3285                           ;fs_menu_controller.c: 426:         break;
  3286  00186E  EF66  F00E         	goto	l379
  3287  001872                     l5975:
  3288                           
  3289                           ; BSR set to: 0
  3290                           ;fs_menu_controller.c: 429:             startIsClick = 0;
  3291  001872  0E00               	movlw	0
  3292  001874  0101               	movlb	1	; () banked
  3293  001876  6FA9               	movwf	_startIsClick& (0+255),b
  3294  001878                     
  3295                           ; BSR set to: 1
  3296                           ;fs_menu_controller.c: 433:             Lcd_Set_Cursor(1,1);
  3297  001878  0E01               	movlw	1
  3298  00187A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3299  00187C  0E01               	movlw	1
  3300  00187E  EC3C  F02B         	call	_Lcd_Set_Cursor
  3301  001882                     
  3302                           ;fs_menu_controller.c: 434:             Lcd_Write_String("HAREKET DURDU   ");
  3303  001882  0E57               	movlw	low STR_11
  3304  001884  6E05               	movwf	Lcd_Write_String@a^0,c
  3305  001886  0E06               	movlw	high STR_11
  3306  001888  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3307  00188A  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3308  00188E                     
  3309                           ;fs_menu_controller.c: 435:             Lcd_Set_Cursor(2,1);
  3310  00188E  0E01               	movlw	1
  3311  001890  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3312  001892  0E02               	movlw	2
  3313  001894  EC3C  F02B         	call	_Lcd_Set_Cursor
  3314  001898                     
  3315                           ;fs_menu_controller.c: 436:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  3316  001898  0EE3               	movlw	low stateMachine@textCursor2
  3317  00189A  0100               	movlb	0	; () banked
  3318  00189C  6FCF               	movwf	sprintf@s& (0+255),b
  3319  00189E  0E00               	movlw	high stateMachine@textCursor2
  3320  0018A0  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3321  0018A2  0E9A               	movlw	low STR_10
  3322  0018A4  6FD1               	movwf	sprintf@fmt& (0+255),b
  3323  0018A6  0E06               	movlw	high STR_10
  3324  0018A8  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3325  0018AA  C0F9  F0D3         	movff	_timer_value+6,?_sprintf+4
  3326  0018AE  C0FA  F0D4         	movff	_timer_value+7,?_sprintf+5
  3327  0018B2  C0F7  F0D5         	movff	_timer_value+4,?_sprintf+6
  3328  0018B6  C0F8  F0D6         	movff	_timer_value+5,?_sprintf+7
  3329  0018BA  EC24  F02C         	call	_sprintf	;wreg free
  3330  0018BE                     
  3331                           ;fs_menu_controller.c: 437:             Lcd_Write_String(textCursor2);
  3332  0018BE  0EE3               	movlw	low stateMachine@textCursor2
  3333  0018C0  6E05               	movwf	Lcd_Write_String@a^0,c
  3334  0018C2  0E00               	movlw	high stateMachine@textCursor2
  3335  0018C4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3336  0018C6  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3337  0018CA                     
  3338                           ;fs_menu_controller.c: 439:             if (menu_flags.menu_start_flag == 1)
  3339  0018CA  0100               	movlb	0	; () banked
  3340  0018CC  A3FD               	btfss	_menu_flags& (0+255),1,b
  3341  0018CE  EF6B  F00C         	goto	u7431
  3342  0018D2  EF6D  F00C         	goto	u7430
  3343  0018D6                     u7431:
  3344  0018D6  EF79  F00C         	goto	l364
  3345  0018DA                     u7430:
  3346  0018DA                     
  3347                           ; BSR set to: 0
  3348                           ;fs_menu_controller.c: 440:             {;fs_menu_controller.c: 441:                 men
      +                          u_flags.menu_start_flag = 0;
  3349  0018DA  93FD               	bcf	_menu_flags& (0+255),1,b
  3350  0018DC                     
  3351                           ; BSR set to: 0
  3352                           ;fs_menu_controller.c: 442:                 menu_selected = MAIN_MENU;
  3353  0018DC  0E00               	movlw	0
  3354  0018DE  0101               	movlb	1	; () banked
  3355  0018E0  6FA7               	movwf	_menu_selected& (0+255),b
  3356                           
  3357                           ;fs_menu_controller.c: 444:                 startIsClick = 1;
  3358  0018E2  0E01               	movlw	1
  3359  0018E4  6FA9               	movwf	_startIsClick& (0+255),b
  3360                           
  3361                           ;fs_menu_controller.c: 445:                 pauseIsClick = 0;
  3362  0018E6  0E00               	movlw	0
  3363  0018E8  0100               	movlb	0	; () banked
  3364  0018EA  6FFF               	movwf	_pauseIsClick& (0+255),b
  3365                           
  3366                           ;fs_menu_controller.c: 446:                 stopIsClick = 0;
  3367  0018EC  0E00               	movlw	0
  3368  0018EE  0101               	movlb	1	; () banked
  3369  0018F0  6FA8               	movwf	_stopIsClick& (0+255),b
  3370  0018F2                     l364:
  3371                           
  3372                           ;fs_menu_controller.c: 449:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3373  0018F2  0101               	movlb	1	; () banked
  3374  0018F4  51A9               	movf	_startIsClick& (0+255),w,b
  3375  0018F6  A4D8               	btfss	status,2,c
  3376  0018F8  EF80  F00C         	goto	u7441
  3377  0018FC  EF82  F00C         	goto	u7440
  3378  001900                     u7441:
  3379  001900  EFAD  F00C         	goto	l6003
  3380  001904                     u7440:
  3381  001904                     
  3382                           ; BSR set to: 1
  3383  001904  0100               	movlb	0	; () banked
  3384  001906  51FF               	movf	_pauseIsClick& (0+255),w,b
  3385  001908  A4D8               	btfss	status,2,c
  3386  00190A  EF89  F00C         	goto	u7451
  3387  00190E  EF8B  F00C         	goto	u7450
  3388  001912                     u7451:
  3389  001912  EFAD  F00C         	goto	l6003
  3390  001916                     u7450:
  3391  001916                     
  3392                           ; BSR set to: 0
  3393  001916  0101               	movlb	1	; () banked
  3394  001918  05A8               	decf	_stopIsClick& (0+255),w,b
  3395  00191A  A4D8               	btfss	status,2,c
  3396  00191C  EF92  F00C         	goto	u7461
  3397  001920  EF94  F00C         	goto	u7460
  3398  001924                     u7461:
  3399  001924  EFAD  F00C         	goto	l6003
  3400  001928                     u7460:
  3401  001928                     
  3402                           ; BSR set to: 1
  3403  001928  0E06               	movlw	6
  3404  00192A  19A7               	xorwf	_menu_selected& (0+255),w,b
  3405  00192C  A4D8               	btfss	status,2,c
  3406  00192E  EF9B  F00C         	goto	u7471
  3407  001932  EF9D  F00C         	goto	u7470
  3408  001936                     u7471:
  3409  001936  EFAD  F00C         	goto	l6003
  3410  00193A                     u7470:
  3411  00193A                     
  3412                           ; BSR set to: 1
  3413                           ;fs_menu_controller.c: 450:             {;fs_menu_controller.c: 451:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3414  00193A  C19B  F0F9         	movff	_menu_value,_timer_value+6
  3415  00193E  0100               	movlb	0	; () banked
  3416  001940  6BFA               	clrf	(_timer_value+7)& (0+255),b
  3417  001942                     
  3418                           ; BSR set to: 0
  3419                           ;fs_menu_controller.c: 452:                  timer_value.remainingSecond = 0;
  3420  001942  0E00               	movlw	0
  3421  001944  6FF8               	movwf	(_timer_value+5)& (0+255),b
  3422  001946  0E00               	movlw	0
  3423  001948  6FF7               	movwf	(_timer_value+4)& (0+255),b
  3424                           
  3425                           ;fs_menu_controller.c: 453:                  timer_value.second = 0;
  3426  00194A  0E00               	movlw	0
  3427  00194C  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3428  00194E  0E00               	movlw	0
  3429  001950  6FF3               	movwf	_timer_value& (0+255),b
  3430                           
  3431                           ;fs_menu_controller.c: 454:                  timer_value.minute = 0;
  3432  001952  0E00               	movlw	0
  3433  001954  6FF6               	movwf	(_timer_value+3)& (0+255),b
  3434  001956  0E00               	movlw	0
  3435  001958  6FF5               	movwf	(_timer_value+2)& (0+255),b
  3436  00195A                     l6003:
  3437                           
  3438                           ;fs_menu_controller.c: 458:             if ( timer_value.menu_login_delay == 100)
  3439  00195A  0E64               	movlw	100
  3440  00195C  0100               	movlb	0	; () banked
  3441  00195E  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3442  001960  A4D8               	btfss	status,2,c
  3443  001962  EFB5  F00C         	goto	u7481
  3444  001966  EFB7  F00C         	goto	u7480
  3445  00196A                     u7481:
  3446  00196A  EFBC  F00C         	goto	l6007
  3447  00196E                     u7480:
  3448  00196E                     
  3449                           ; BSR set to: 0
  3450                           ;fs_menu_controller.c: 459:             {;fs_menu_controller.c: 460:                 tim
      +                          er_value.menu_login_delay = 0;
  3451  00196E  0E00               	movlw	0
  3452  001970  6FFB               	movwf	(_timer_value+8)& (0+255),b
  3453                           
  3454                           ;fs_menu_controller.c: 461:                 menu_selected = DRIVER_TIME_SETTING;
  3455  001972  0E01               	movlw	1
  3456  001974  0101               	movlb	1	; () banked
  3457  001976  6FA7               	movwf	_menu_selected& (0+255),b
  3458  001978                     l6007:
  3459                           
  3460                           ;fs_menu_controller.c: 464:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3461  001978  0100               	movlb	0	; () banked
  3462  00197A  A9FD               	btfss	_menu_flags& (0+255),4,b
  3463  00197C  EFC2  F00C         	goto	u7491
  3464  001980  EFC4  F00C         	goto	u7490
  3465  001984                     u7491:
  3466  001984  EFCC  F00A         	goto	l5853
  3467  001988                     u7490:
  3468  001988                     
  3469                           ; BSR set to: 0
  3470  001988  ABFD               	btfss	_menu_flags& (0+255),5,b
  3471  00198A  EFC9  F00C         	goto	u7501
  3472  00198E  EFCB  F00C         	goto	u7500
  3473  001992                     u7501:
  3474  001992  EFCC  F00A         	goto	l5853
  3475  001996                     u7500:
  3476  001996                     
  3477                           ; BSR set to: 0
  3478                           ;fs_menu_controller.c: 465:             {;fs_menu_controller.c: 466:                 men
      +                          u_selected = SECRET_MENU;
  3479  001996  0E08               	movlw	8
  3480  001998  0101               	movlb	1	; () banked
  3481  00199A  6FA7               	movwf	_menu_selected& (0+255),b
  3482                           
  3483                           ;fs_menu_controller.c: 467:                 secretMenuCounter = 1;
  3484  00199C  0E01               	movlw	1
  3485  00199E  6FA6               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3486  0019A0  EFCC  F00A         	goto	l5853
  3487  0019A4                     l6015:
  3488                           
  3489                           ; BSR set to: 0
  3490                           ;fs_menu_controller.c: 479:             startIsClick = 0;
  3491  0019A4  0E00               	movlw	0
  3492  0019A6  0101               	movlb	1	; () banked
  3493  0019A8  6FA9               	movwf	_startIsClick& (0+255),b
  3494  0019AA                     
  3495                           ; BSR set to: 1
  3496                           ;fs_menu_controller.c: 480:             stopMotor();
  3497  0019AA  EC1B  F02D         	call	_stopMotor	;wreg free
  3498  0019AE                     
  3499                           ;fs_menu_controller.c: 484:             timer_value.second = 0;
  3500  0019AE  0E00               	movlw	0
  3501  0019B0  0100               	movlb	0	; () banked
  3502  0019B2  6FF4               	movwf	(_timer_value+1)& (0+255),b
  3503  0019B4  0E00               	movlw	0
  3504  0019B6  6FF3               	movwf	_timer_value& (0+255),b
  3505  0019B8                     
  3506                           ; BSR set to: 0
  3507                           ;fs_menu_controller.c: 486:             if (menu_flags.menu_input_flag == 1)
  3508  0019B8  A1FD               	btfss	_menu_flags& (0+255),0,b
  3509  0019BA  EFE1  F00C         	goto	u7511
  3510  0019BE  EFE3  F00C         	goto	u7510
  3511  0019C2                     u7511:
  3512  0019C2  EFF0  F00C         	goto	l6031
  3513  0019C6                     u7510:
  3514  0019C6                     
  3515                           ; BSR set to: 0
  3516                           ;fs_menu_controller.c: 487:             {;fs_menu_controller.c: 488:                 men
      +                          u_flags.menu_input_flag = 0;
  3517  0019C6  91FD               	bcf	_menu_flags& (0+255),0,b
  3518  0019C8                     
  3519                           ; BSR set to: 0
  3520                           ;fs_menu_controller.c: 489:                 secretMenuCounter++;
  3521  0019C8  0101               	movlb	1	; () banked
  3522  0019CA  2BA6               	incf	stateMachine@secretMenuCounter& (0+255),f,b
  3523  0019CC                     
  3524                           ; BSR set to: 1
  3525                           ;fs_menu_controller.c: 491:                 if (secretMenuCounter >2)
  3526  0019CC  0E02               	movlw	2
  3527  0019CE  65A6               	cpfsgt	stateMachine@secretMenuCounter& (0+255),b
  3528  0019D0  EFEC  F00C         	goto	u7521
  3529  0019D4  EFEE  F00C         	goto	u7520
  3530  0019D8                     u7521:
  3531  0019D8  EFF0  F00C         	goto	l6031
  3532  0019DC                     u7520:
  3533  0019DC                     
  3534                           ; BSR set to: 1
  3535                           ;fs_menu_controller.c: 492:                 {;fs_menu_controller.c: 493:                
      +                               secretMenuCounter = 1;
  3536  0019DC  0E01               	movlw	1
  3537  0019DE  6FA6               	movwf	stateMachine@secretMenuCounter& (0+255),b
  3538  0019E0                     l6031:
  3539                           
  3540                           ;fs_menu_controller.c: 497:             if (secretMenuCounter == 1)
  3541  0019E0  0101               	movlb	1	; () banked
  3542  0019E2  05A6               	decf	stateMachine@secretMenuCounter& (0+255),w,b
  3543  0019E4  A4D8               	btfss	status,2,c
  3544  0019E6  EFF7  F00C         	goto	u7531
  3545  0019EA  EFF9  F00C         	goto	u7530
  3546  0019EE                     u7531:
  3547  0019EE  EF8B  F00D         	goto	l6059
  3548  0019F2                     u7530:
  3549  0019F2                     
  3550                           ; BSR set to: 1
  3551                           ;fs_menu_controller.c: 498:             {;fs_menu_controller.c: 499:                 Lcd
      +                          _Set_Cursor(1,1);
  3552  0019F2  0E01               	movlw	1
  3553  0019F4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3554  0019F6  0E01               	movlw	1
  3555  0019F8  EC3C  F02B         	call	_Lcd_Set_Cursor
  3556  0019FC                     
  3557                           ;fs_menu_controller.c: 500:                 Lcd_Write_String("PID PARAM       ");
  3558  0019FC  0E13               	movlw	low STR_13
  3559  0019FE  6E05               	movwf	Lcd_Write_String@a^0,c
  3560  001A00  0E06               	movlw	high STR_13
  3561  001A02  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3562  001A04  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3563  001A08                     
  3564                           ;fs_menu_controller.c: 501:                 Lcd_Set_Cursor(2,1);
  3565  001A08  0E01               	movlw	1
  3566  001A0A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3567  001A0C  0E02               	movlw	2
  3568  001A0E  EC3C  F02B         	call	_Lcd_Set_Cursor
  3569  001A12                     
  3570                           ;fs_menu_controller.c: 502:                 sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3571  001A12  0EE3               	movlw	low stateMachine@textCursor2
  3572  001A14  0100               	movlb	0	; () banked
  3573  001A16  6FCF               	movwf	sprintf@s& (0+255),b
  3574  001A18  0E00               	movlw	high stateMachine@textCursor2
  3575  001A1A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3576  001A1C  0EB9               	movlw	low STR_14
  3577  001A1E  6FD1               	movwf	sprintf@fmt& (0+255),b
  3578  001A20  0E06               	movlw	high STR_14
  3579  001A22  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3580  001A24  C1B7  F0D3         	movff	_KP@fs_speed_controller$F1596,?_sprintf+4
  3581  001A28  C1B8  F0D4         	movff	_KP@fs_speed_controller$F1596+1,?_sprintf+5
  3582  001A2C  C1B9  F0D5         	movff	_KP@fs_speed_controller$F1596+2,?_sprintf+6
  3583  001A30  C1BA  F0D6         	movff	_KP@fs_speed_controller$F1596+3,?_sprintf+7
  3584  001A34  EC24  F02C         	call	_sprintf	;wreg free
  3585  001A38                     
  3586                           ;fs_menu_controller.c: 503:                 Lcd_Write_String(textCursor2);
  3587  001A38  0EE3               	movlw	low stateMachine@textCursor2
  3588  001A3A  6E05               	movwf	Lcd_Write_String@a^0,c
  3589  001A3C  0E00               	movlw	high stateMachine@textCursor2
  3590  001A3E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3591  001A40  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3592  001A44                     
  3593                           ;fs_menu_controller.c: 505:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KP < 2.5))
  3594  001A44  0100               	movlb	0	; () banked
  3595  001A46  A9FD               	btfss	_menu_flags& (0+255),4,b
  3596  001A48  EF28  F00D         	goto	u7541
  3597  001A4C  EF2A  F00D         	goto	u7540
  3598  001A50                     u7541:
  3599  001A50  EF5F  F00D         	goto	l6051
  3600  001A54                     u7540:
  3601  001A54                     
  3602                           ; BSR set to: 0
  3603  001A54  C1B7  F035         	movff	_KP@fs_speed_controller$F1596,___flge@ff1
  3604  001A58  C1B8  F036         	movff	_KP@fs_speed_controller$F1596+1,___flge@ff1+1
  3605  001A5C  C1B9  F037         	movff	_KP@fs_speed_controller$F1596+2,___flge@ff1+2
  3606  001A60  C1BA  F038         	movff	_KP@fs_speed_controller$F1596+3,___flge@ff1+3
  3607  001A64  0E00               	movlw	0
  3608  001A66  6E39               	movwf	___flge@ff2^0,c
  3609  001A68  0E00               	movlw	0
  3610  001A6A  6E3A               	movwf	(___flge@ff2+1)^0,c
  3611  001A6C  0E20               	movlw	32
  3612  001A6E  6E3B               	movwf	(___flge@ff2+2)^0,c
  3613  001A70  0E40               	movlw	64
  3614  001A72  6E3C               	movwf	(___flge@ff2+3)^0,c
  3615  001A74  EC85  F025         	call	___flge	;wreg free
  3616  001A78  B0D8               	btfsc	status,0,c
  3617  001A7A  EF41  F00D         	goto	u7551
  3618  001A7E  EF43  F00D         	goto	u7550
  3619  001A82                     u7551:
  3620  001A82  EF5F  F00D         	goto	l6051
  3621  001A86                     u7550:
  3622  001A86                     
  3623                           ;fs_menu_controller.c: 506:                 {;fs_menu_controller.c: 507:                
      +                               menu_flags.menu_increase_flag = 0;
  3624  001A86  0100               	movlb	0	; () banked
  3625  001A88  99FD               	bcf	_menu_flags& (0+255),4,b
  3626  001A8A                     
  3627                           ; BSR set to: 0
  3628                           ;fs_menu_controller.c: 508:                     KP += 0.1;
  3629  001A8A  C1B7  F035         	movff	_KP@fs_speed_controller$F1596,___fladd@b
  3630  001A8E  C1B8  F036         	movff	_KP@fs_speed_controller$F1596+1,___fladd@b+1
  3631  001A92  C1B9  F037         	movff	_KP@fs_speed_controller$F1596+2,___fladd@b+2
  3632  001A96  C1BA  F038         	movff	_KP@fs_speed_controller$F1596+3,___fladd@b+3
  3633  001A9A  0ECD               	movlw	205
  3634  001A9C  6E39               	movwf	___fladd@a^0,c
  3635  001A9E  0ECC               	movlw	204
  3636  001AA0  6E3A               	movwf	(___fladd@a+1)^0,c
  3637  001AA2  0ECC               	movlw	204
  3638  001AA4  6E3B               	movwf	(___fladd@a+2)^0,c
  3639  001AA6  0E3D               	movlw	61
  3640  001AA8  6E3C               	movwf	(___fladd@a+3)^0,c
  3641  001AAA  EC85  F015         	call	___fladd	;wreg free
  3642  001AAE  C035  F1B7         	movff	?___fladd,_KP@fs_speed_controller$F1596
  3643  001AB2  C036  F1B8         	movff	?___fladd+1,_KP@fs_speed_controller$F1596+1
  3644  001AB6  C037  F1B9         	movff	?___fladd+2,_KP@fs_speed_controller$F1596+2
  3645  001ABA  C038  F1BA         	movff	?___fladd+3,_KP@fs_speed_controller$F1596+3
  3646  001ABE                     l6051:
  3647                           
  3648                           ;fs_menu_controller.c: 511:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KP >= 0))
  3649  001ABE  0100               	movlb	0	; () banked
  3650  001AC0  ABFD               	btfss	_menu_flags& (0+255),5,b
  3651  001AC2  EF65  F00D         	goto	u7561
  3652  001AC6  EF67  F00D         	goto	u7560
  3653  001ACA                     u7561:
  3654  001ACA  EF8B  F00D         	goto	l6059
  3655  001ACE                     u7560:
  3656  001ACE                     
  3657                           ; BSR set to: 0
  3658  001ACE  0101               	movlb	1	; () banked
  3659  001AD0  BFBA               	btfsc	(_KP@fs_speed_controller$F1596+3)& (0+255),7,b
  3660  001AD2  EF6D  F00D         	goto	u7571
  3661  001AD6  EF6F  F00D         	goto	u7570
  3662  001ADA                     u7571:
  3663  001ADA  EF8B  F00D         	goto	l6059
  3664  001ADE                     u7570:
  3665  001ADE                     
  3666                           ; BSR set to: 1
  3667                           ;fs_menu_controller.c: 512:                 {;fs_menu_controller.c: 513:                
      +                               menu_flags.menu_decrease_flag = 0;
  3668  001ADE  0100               	movlb	0	; () banked
  3669  001AE0  9BFD               	bcf	_menu_flags& (0+255),5,b
  3670  001AE2                     
  3671                           ; BSR set to: 0
  3672                           ;fs_menu_controller.c: 514:                      KP -= 0.1;
  3673  001AE2  C1B7  F045         	movff	_KP@fs_speed_controller$F1596,___flsub@b
  3674  001AE6  C1B8  F046         	movff	_KP@fs_speed_controller$F1596+1,___flsub@b+1
  3675  001AEA  C1B9  F047         	movff	_KP@fs_speed_controller$F1596+2,___flsub@b+2
  3676  001AEE  C1BA  F048         	movff	_KP@fs_speed_controller$F1596+3,___flsub@b+3
  3677  001AF2  0ECD               	movlw	205
  3678  001AF4  6E49               	movwf	___flsub@a^0,c
  3679  001AF6  0ECC               	movlw	204
  3680  001AF8  6E4A               	movwf	(___flsub@a+1)^0,c
  3681  001AFA  0ECC               	movlw	204
  3682  001AFC  6E4B               	movwf	(___flsub@a+2)^0,c
  3683  001AFE  0E3D               	movlw	61
  3684  001B00  6E4C               	movwf	(___flsub@a+3)^0,c
  3685  001B02  EC76  F02C         	call	___flsub	;wreg free
  3686  001B06  C045  F1B7         	movff	?___flsub,_KP@fs_speed_controller$F1596
  3687  001B0A  C046  F1B8         	movff	?___flsub+1,_KP@fs_speed_controller$F1596+1
  3688  001B0E  C047  F1B9         	movff	?___flsub+2,_KP@fs_speed_controller$F1596+2
  3689  001B12  C048  F1BA         	movff	?___flsub+3,_KP@fs_speed_controller$F1596+3
  3690  001B16                     l6059:
  3691                           
  3692                           ;fs_menu_controller.c: 518:             if (secretMenuCounter == 2)
  3693  001B16  0E02               	movlw	2
  3694  001B18  0101               	movlb	1	; () banked
  3695  001B1A  19A6               	xorwf	stateMachine@secretMenuCounter& (0+255),w,b
  3696  001B1C  A4D8               	btfss	status,2,c
  3697  001B1E  EF93  F00D         	goto	u7581
  3698  001B22  EF95  F00D         	goto	u7580
  3699  001B26                     u7581:
  3700  001B26  EF27  F00E         	goto	l6087
  3701  001B2A                     u7580:
  3702  001B2A                     
  3703                           ; BSR set to: 1
  3704                           ;fs_menu_controller.c: 519:             {;fs_menu_controller.c: 520:                 Lcd
      +                          _Set_Cursor(1,1);
  3705  001B2A  0E01               	movlw	1
  3706  001B2C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3707  001B2E  0E01               	movlw	1
  3708  001B30  EC3C  F02B         	call	_Lcd_Set_Cursor
  3709  001B34                     
  3710                           ;fs_menu_controller.c: 521:                 Lcd_Write_String("PID PARAM       ");
  3711  001B34  0E13               	movlw	low STR_13
  3712  001B36  6E05               	movwf	Lcd_Write_String@a^0,c
  3713  001B38  0E06               	movlw	high STR_13
  3714  001B3A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3715  001B3C  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3716  001B40                     
  3717                           ;fs_menu_controller.c: 522:                 Lcd_Set_Cursor(2,1);
  3718  001B40  0E01               	movlw	1
  3719  001B42  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3720  001B44  0E02               	movlw	2
  3721  001B46  EC3C  F02B         	call	_Lcd_Set_Cursor
  3722  001B4A                     
  3723                           ;fs_menu_controller.c: 523:                 sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3724  001B4A  0EE3               	movlw	low stateMachine@textCursor2
  3725  001B4C  0100               	movlb	0	; () banked
  3726  001B4E  6FCF               	movwf	sprintf@s& (0+255),b
  3727  001B50  0E00               	movlw	high stateMachine@textCursor2
  3728  001B52  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3729  001B54  0EC7               	movlw	low STR_16
  3730  001B56  6FD1               	movwf	sprintf@fmt& (0+255),b
  3731  001B58  0E06               	movlw	high STR_16
  3732  001B5A  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3733  001B5C  C1B3  F0D3         	movff	_KD@fs_speed_controller$F1597,?_sprintf+4
  3734  001B60  C1B4  F0D4         	movff	_KD@fs_speed_controller$F1597+1,?_sprintf+5
  3735  001B64  C1B5  F0D5         	movff	_KD@fs_speed_controller$F1597+2,?_sprintf+6
  3736  001B68  C1B6  F0D6         	movff	_KD@fs_speed_controller$F1597+3,?_sprintf+7
  3737  001B6C  EC24  F02C         	call	_sprintf	;wreg free
  3738  001B70                     
  3739                           ;fs_menu_controller.c: 524:                 Lcd_Write_String(textCursor2);
  3740  001B70  0EE3               	movlw	low stateMachine@textCursor2
  3741  001B72  6E05               	movwf	Lcd_Write_String@a^0,c
  3742  001B74  0E00               	movlw	high stateMachine@textCursor2
  3743  001B76  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3744  001B78  ECE2  F029         	call	_Lcd_Write_String	;wreg free
  3745  001B7C                     
  3746                           ;fs_menu_controller.c: 526:                 if ((menu_flags.menu_increase_flag == 1) && 
      +                          (KD < 2.5))
  3747  001B7C  0100               	movlb	0	; () banked
  3748  001B7E  A9FD               	btfss	_menu_flags& (0+255),4,b
  3749  001B80  EFC4  F00D         	goto	u7591
  3750  001B84  EFC6  F00D         	goto	u7590
  3751  001B88                     u7591:
  3752  001B88  EFFB  F00D         	goto	l6079
  3753  001B8C                     u7590:
  3754  001B8C                     
  3755                           ; BSR set to: 0
  3756  001B8C  C1B3  F035         	movff	_KD@fs_speed_controller$F1597,___flge@ff1
  3757  001B90  C1B4  F036         	movff	_KD@fs_speed_controller$F1597+1,___flge@ff1+1
  3758  001B94  C1B5  F037         	movff	_KD@fs_speed_controller$F1597+2,___flge@ff1+2
  3759  001B98  C1B6  F038         	movff	_KD@fs_speed_controller$F1597+3,___flge@ff1+3
  3760  001B9C  0E00               	movlw	0
  3761  001B9E  6E39               	movwf	___flge@ff2^0,c
  3762  001BA0  0E00               	movlw	0
  3763  001BA2  6E3A               	movwf	(___flge@ff2+1)^0,c
  3764  001BA4  0E20               	movlw	32
  3765  001BA6  6E3B               	movwf	(___flge@ff2+2)^0,c
  3766  001BA8  0E40               	movlw	64
  3767  001BAA  6E3C               	movwf	(___flge@ff2+3)^0,c
  3768  001BAC  EC85  F025         	call	___flge	;wreg free
  3769  001BB0  B0D8               	btfsc	status,0,c
  3770  001BB2  EFDD  F00D         	goto	u7601
  3771  001BB6  EFDF  F00D         	goto	u7600
  3772  001BBA                     u7601:
  3773  001BBA  EFFB  F00D         	goto	l6079
  3774  001BBE                     u7600:
  3775  001BBE                     
  3776                           ;fs_menu_controller.c: 527:                 {;fs_menu_controller.c: 528:                
      +                               menu_flags.menu_increase_flag = 0;
  3777  001BBE  0100               	movlb	0	; () banked
  3778  001BC0  99FD               	bcf	_menu_flags& (0+255),4,b
  3779  001BC2                     
  3780                           ; BSR set to: 0
  3781                           ;fs_menu_controller.c: 529:                     KD += 0.1;
  3782  001BC2  C1B3  F035         	movff	_KD@fs_speed_controller$F1597,___fladd@b
  3783  001BC6  C1B4  F036         	movff	_KD@fs_speed_controller$F1597+1,___fladd@b+1
  3784  001BCA  C1B5  F037         	movff	_KD@fs_speed_controller$F1597+2,___fladd@b+2
  3785  001BCE  C1B6  F038         	movff	_KD@fs_speed_controller$F1597+3,___fladd@b+3
  3786  001BD2  0ECD               	movlw	205
  3787  001BD4  6E39               	movwf	___fladd@a^0,c
  3788  001BD6  0ECC               	movlw	204
  3789  001BD8  6E3A               	movwf	(___fladd@a+1)^0,c
  3790  001BDA  0ECC               	movlw	204
  3791  001BDC  6E3B               	movwf	(___fladd@a+2)^0,c
  3792  001BDE  0E3D               	movlw	61
  3793  001BE0  6E3C               	movwf	(___fladd@a+3)^0,c
  3794  001BE2  EC85  F015         	call	___fladd	;wreg free
  3795  001BE6  C035  F1B3         	movff	?___fladd,_KD@fs_speed_controller$F1597
  3796  001BEA  C036  F1B4         	movff	?___fladd+1,_KD@fs_speed_controller$F1597+1
  3797  001BEE  C037  F1B5         	movff	?___fladd+2,_KD@fs_speed_controller$F1597+2
  3798  001BF2  C038  F1B6         	movff	?___fladd+3,_KD@fs_speed_controller$F1597+3
  3799  001BF6                     l6079:
  3800                           
  3801                           ;fs_menu_controller.c: 532:                 if ((menu_flags.menu_decrease_flag == 1) && 
      +                          (KD >= 0))
  3802  001BF6  0100               	movlb	0	; () banked
  3803  001BF8  ABFD               	btfss	_menu_flags& (0+255),5,b
  3804  001BFA  EF01  F00E         	goto	u7611
  3805  001BFE  EF03  F00E         	goto	u7610
  3806  001C02                     u7611:
  3807  001C02  EF27  F00E         	goto	l6087
  3808  001C06                     u7610:
  3809  001C06                     
  3810                           ; BSR set to: 0
  3811  001C06  0101               	movlb	1	; () banked
  3812  001C08  BFB6               	btfsc	(_KD@fs_speed_controller$F1597+3)& (0+255),7,b
  3813  001C0A  EF09  F00E         	goto	u7621
  3814  001C0E  EF0B  F00E         	goto	u7620
  3815  001C12                     u7621:
  3816  001C12  EF27  F00E         	goto	l6087
  3817  001C16                     u7620:
  3818  001C16                     
  3819                           ; BSR set to: 1
  3820                           ;fs_menu_controller.c: 533:                 {;fs_menu_controller.c: 534:                
      +                               menu_flags.menu_decrease_flag = 0;
  3821  001C16  0100               	movlb	0	; () banked
  3822  001C18  9BFD               	bcf	_menu_flags& (0+255),5,b
  3823  001C1A                     
  3824                           ; BSR set to: 0
  3825                           ;fs_menu_controller.c: 535:                      KD -= 0.1;
  3826  001C1A  C1B3  F045         	movff	_KD@fs_speed_controller$F1597,___flsub@b
  3827  001C1E  C1B4  F046         	movff	_KD@fs_speed_controller$F1597+1,___flsub@b+1
  3828  001C22  C1B5  F047         	movff	_KD@fs_speed_controller$F1597+2,___flsub@b+2
  3829  001C26  C1B6  F048         	movff	_KD@fs_speed_controller$F1597+3,___flsub@b+3
  3830  001C2A  0ECD               	movlw	205
  3831  001C2C  6E49               	movwf	___flsub@a^0,c
  3832  001C2E  0ECC               	movlw	204
  3833  001C30  6E4A               	movwf	(___flsub@a+1)^0,c
  3834  001C32  0ECC               	movlw	204
  3835  001C34  6E4B               	movwf	(___flsub@a+2)^0,c
  3836  001C36  0E3D               	movlw	61
  3837  001C38  6E4C               	movwf	(___flsub@a+3)^0,c
  3838  001C3A  EC76  F02C         	call	___flsub	;wreg free
  3839  001C3E  C045  F1B3         	movff	?___flsub,_KD@fs_speed_controller$F1597
  3840  001C42  C046  F1B4         	movff	?___flsub+1,_KD@fs_speed_controller$F1597+1
  3841  001C46  C047  F1B5         	movff	?___flsub+2,_KD@fs_speed_controller$F1597+2
  3842  001C4A  C048  F1B6         	movff	?___flsub+3,_KD@fs_speed_controller$F1597+3
  3843  001C4E                     l6087:
  3844                           
  3845                           ;fs_menu_controller.c: 539:             if ( timer_value.menu_login_delay == 100)
  3846  001C4E  0E64               	movlw	100
  3847  001C50  0100               	movlb	0	; () banked
  3848  001C52  19FB               	xorwf	(_timer_value+8)& (0+255),w,b
  3849  001C54  A4D8               	btfss	status,2,c
  3850  001C56  EF2F  F00E         	goto	u7631
  3851  001C5A  EF31  F00E         	goto	u7630
  3852  001C5E                     u7631:
  3853  001C5E  EF66  F00E         	goto	l379
  3854  001C62                     u7630:
  3855  001C62  EF45  F00B         	goto	l5897
  3856  001C66                     l6093:
  3857  001C66  0101               	movlb	1	; () banked
  3858  001C68  51A7               	movf	_menu_selected& (0+255),w,b
  3859  001C6A  0100               	movlb	0	; () banked
  3860  001C6C  6FE1               	movwf	??_stateMachine& (0+255),b
  3861  001C6E  6BE2               	clrf	(??_stateMachine+1)& (0+255),b
  3862                           
  3863                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3864                           ; Switch size 1, requested type "simple"
  3865                           ; Number of cases is 1, Range of values is 0 to 0
  3866                           ; switch strategies available:
  3867                           ; Name         Instructions Cycles
  3868                           ; simple_byte            4     3 (average)
  3869                           ;	Chosen strategy is simple_byte
  3870  001C70  51E2               	movf	(??_stateMachine+1)& (0+255),w,b
  3871  001C72  0A00               	xorlw	0	; case 0
  3872  001C74  B4D8               	btfsc	status,2,c
  3873  001C76  EF3F  F00E         	goto	l6333
  3874  001C7A  EF66  F00E         	goto	l379
  3875  001C7E                     l6333:
  3876                           
  3877                           ; BSR set to: 0
  3878                           ; Switch size 1, requested type "simple"
  3879                           ; Number of cases is 9, Range of values is 0 to 8
  3880                           ; switch strategies available:
  3881                           ; Name         Instructions Cycles
  3882                           ; simple_byte           28    15 (average)
  3883                           ;	Chosen strategy is simple_byte
  3884  001C7E  51E1               	movf	??_stateMachine& (0+255),w,b
  3885  001C80  0A00               	xorlw	0	; case 0
  3886  001C82  B4D8               	btfsc	status,2,c
  3887  001C84  EF5F  F009         	goto	l5733
  3888  001C88  0A01               	xorlw	1	; case 1
  3889  001C8A  B4D8               	btfsc	status,2,c
  3890  001C8C  EF40  F00A         	goto	l5797
  3891  001C90  0A03               	xorlw	3	; case 2
  3892  001C92  B4D8               	btfsc	status,2,c
  3893  001C94  EFD0  F00A         	goto	l5855
  3894  001C98  0A01               	xorlw	1	; case 3
  3895  001C9A  B4D8               	btfsc	status,2,c
  3896  001C9C  EF4C  F00B         	goto	l5899
  3897  001CA0  0A07               	xorlw	7	; case 4
  3898  001CA2  B4D8               	btfsc	status,2,c
  3899  001CA4  EFC1  F00B         	goto	l5943
  3900  001CA8  0A01               	xorlw	1	; case 5
  3901  001CAA  B4D8               	btfsc	status,2,c
  3902  001CAC  EF2D  F00C         	goto	l362
  3903  001CB0  0A03               	xorlw	3	; case 6
  3904  001CB2  B4D8               	btfsc	status,2,c
  3905  001CB4  EF39  F00C         	goto	l5975
  3906  001CB8  0A01               	xorlw	1	; case 7
  3907  001CBA  B4D8               	btfsc	status,2,c
  3908  001CBC  EF66  F00E         	goto	l379
  3909  001CC0  0A0F               	xorlw	15	; case 8
  3910  001CC2  B4D8               	btfsc	status,2,c
  3911  001CC4  EFD2  F00C         	goto	l6015
  3912  001CC8  EF66  F00E         	goto	l379
  3913  001CCC                     l379:
  3914  001CCC  0012               	return		;funcret
  3915  001CCE                     __end_of_stateMachine:
  3916                           	callstack 0
  3917                           
  3918 ;; *************** function _stopMotor *****************
  3919 ;; Defined at:
  3920 ;;		line 79 in file "fs_speed_controller.c"
  3921 ;; Parameters:    Size  Location     Type
  3922 ;;		None
  3923 ;; Auto vars:     Size  Location     Type
  3924 ;;		None
  3925 ;; Return value:  Size  Location     Type
  3926 ;;                  1    wreg      void 
  3927 ;; Registers used:
  3928 ;;		wreg, status,2, status,0, cstack
  3929 ;; Tracked objects:
  3930 ;;		On entry : 0/0
  3931 ;;		On exit  : 0/0
  3932 ;;		Unchanged: 0/0
  3933 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3934 ;;      Params:         0       0       0       0       0       0       0
  3935 ;;      Locals:         0       0       0       0       0       0       0
  3936 ;;      Temps:          0       0       0       0       0       0       0
  3937 ;;      Totals:         0       0       0       0       0       0       0
  3938 ;;Total ram usage:        0 bytes
  3939 ;; Hardware stack levels used:    1
  3940 ;; Hardware stack levels required when called:    3
  3941 ;; This function calls:
  3942 ;;		_PWM1_setDC
  3943 ;;		_PWM2_setDC
  3944 ;; This function is called by:
  3945 ;;		_stateMachine
  3946 ;; This function uses a non-reentrant model
  3947 ;;
  3948                           
  3949                           	psect	text7
  3950  005A36                     __ptext7:
  3951                           	callstack 0
  3952  005A36                     _stopMotor:
  3953                           	callstack 25
  3954  005A36                     
  3955                           ;fs_speed_controller.c: 81:     controller.rightMotorSpeed = 0;
  3956  005A36  0E00               	movlw	0
  3957  005A38  0101               	movlb	1	; () banked
  3958  005A3A  6F59               	movwf	(_controller+9)& (0+255),b
  3959  005A3C  0E00               	movlw	0
  3960  005A3E  6F58               	movwf	(_controller+8)& (0+255),b
  3961                           
  3962                           ;fs_speed_controller.c: 82:     controller.leftMotorSpeed = 0;
  3963  005A40  0E00               	movlw	0
  3964  005A42  6F57               	movwf	(_controller+7)& (0+255),b
  3965  005A44  0E00               	movlw	0
  3966  005A46  6F56               	movwf	(_controller+6)& (0+255),b
  3967                           
  3968                           ;fs_speed_controller.c: 83:     driver_limit.ortalama = 0;
  3969  005A48  0E00               	movlw	0
  3970  005A4A  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  3971  005A4C  0E00               	movlw	0
  3972  005A4E  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  3973  005A50  0E00               	movlw	0
  3974  005A52  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  3975  005A54  0E00               	movlw	0
  3976  005A56  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  3977  005A58                     
  3978                           ; BSR set to: 1
  3979                           ;fs_speed_controller.c: 84:     PWM1_setDC(controller.leftMotorSpeed);
  3980  005A58  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  3981  005A5C  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  3982  005A60  EC5E  F02A         	call	_PWM1_setDC	;wreg free
  3983  005A64                     
  3984                           ;fs_speed_controller.c: 85:     PWM2_setDC(controller.rightMotorSpeed);
  3985  005A64  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  3986  005A68  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  3987  005A6C  EC21  F02A         	call	_PWM2_setDC	;wreg free
  3988  005A70  0012               	return		;funcret
  3989  005A72                     __end_of_stopMotor:
  3990                           	callstack 0
  3991                           
  3992 ;; *************** function _startMotor *****************
  3993 ;; Defined at:
  3994 ;;		line 95 in file "fs_speed_controller.c"
  3995 ;; Parameters:    Size  Location     Type
  3996 ;;		None
  3997 ;; Auto vars:     Size  Location     Type
  3998 ;;		None
  3999 ;; Return value:  Size  Location     Type
  4000 ;;                  1    wreg      void 
  4001 ;; Registers used:
  4002 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4003 ;; Tracked objects:
  4004 ;;		On entry : 0/0
  4005 ;;		On exit  : 0/0
  4006 ;;		Unchanged: 0/0
  4007 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4008 ;;      Params:         0       0       0       0       0       0       0
  4009 ;;      Locals:         0       0       0       0       0       0       0
  4010 ;;      Temps:          0       0       0       0       0       0       0
  4011 ;;      Totals:         0       0       0       0       0       0       0
  4012 ;;Total ram usage:        0 bytes
  4013 ;; Hardware stack levels used:    1
  4014 ;; Hardware stack levels required when called:    3
  4015 ;; This function calls:
  4016 ;;		_PWM1_setDC
  4017 ;;		_PWM2_setDC
  4018 ;;		_calculatedAverageValue
  4019 ;;		_scanAdcConversion
  4020 ;;		_speedControl
  4021 ;; This function is called by:
  4022 ;;		_stateMachine
  4023 ;; This function uses a non-reentrant model
  4024 ;;
  4025                           
  4026                           	psect	text8
  4027  005B52                     __ptext8:
  4028                           	callstack 0
  4029  005B52                     _startMotor:
  4030                           	callstack 25
  4031  005B52                     
  4032                           ;fs_speed_controller.c: 97:         scanAdcConversion();
  4033  005B52  EC67  F00E         	call	_scanAdcConversion	;wreg free
  4034  005B56                     
  4035                           ;fs_speed_controller.c: 98:         calculatedAverageValue();
  4036  005B56  ECC7  F01B         	call	_calculatedAverageValue	;wreg free
  4037  005B5A                     
  4038                           ;fs_speed_controller.c: 99:         speedControl(driver_limit.ortalama);
  4039  005B5A  C18B  F058         	movff	_driver_limit+8,speedControl@position
  4040  005B5E  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  4041  005B62  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  4042  005B66  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  4043  005B6A  ECB7  F01F         	call	_speedControl	;wreg free
  4044                           
  4045                           ;fs_speed_controller.c: 100:         PWM1_setDC(controller.leftMotorSpeed);
  4046  005B6E  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  4047  005B72  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  4048  005B76  EC5E  F02A         	call	_PWM1_setDC	;wreg free
  4049                           
  4050                           ;fs_speed_controller.c: 101:         PWM2_setDC(controller.rightMotorSpeed);
  4051  005B7A  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  4052  005B7E  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  4053  005B82  EC21  F02A         	call	_PWM2_setDC	;wreg free
  4054  005B86  0012               	return		;funcret
  4055  005B88                     __end_of_startMotor:
  4056                           	callstack 0
  4057                           
  4058 ;; *************** function _speedControl *****************
  4059 ;; Defined at:
  4060 ;;		line 38 in file "fs_speed_controller.c"
  4061 ;; Parameters:    Size  Location     Type
  4062 ;;  position        4   87[COMRAM] float 
  4063 ;; Auto vars:     Size  Location     Type
  4064 ;;  pos             4    0        float 
  4065 ;; Return value:  Size  Location     Type
  4066 ;;                  1    wreg      void 
  4067 ;; Registers used:
  4068 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4069 ;; Tracked objects:
  4070 ;;		On entry : 0/0
  4071 ;;		On exit  : 0/0
  4072 ;;		Unchanged: 0/0
  4073 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4074 ;;      Params:         4       0       0       0       0       0       0
  4075 ;;      Locals:         0       4       0       0       0       0       0
  4076 ;;      Temps:          2       0       0       0       0       0       0
  4077 ;;      Totals:         6       4       0       0       0       0       0
  4078 ;;Total ram usage:       10 bytes
  4079 ;; Hardware stack levels used:    1
  4080 ;; Hardware stack levels required when called:    2
  4081 ;; This function calls:
  4082 ;;		___fladd
  4083 ;;		___flmul
  4084 ;;		___fltol
  4085 ;;		___xxtofl
  4086 ;; This function is called by:
  4087 ;;		_startMotor
  4088 ;; This function uses a non-reentrant model
  4089 ;;
  4090                           
  4091                           	psect	text9
  4092  003F6E                     __ptext9:
  4093                           	callstack 0
  4094  003F6E                     _speedControl:
  4095                           	callstack 25
  4096  003F6E                     
  4097                           ;fs_speed_controller.c: 44:     controller.error = (int16_t)(position - 3400.0);
  4098  003F6E  0E00               	movlw	0
  4099  003F70  6E39               	movwf	___fladd@a^0,c
  4100  003F72  0E80               	movlw	128
  4101  003F74  6E3A               	movwf	(___fladd@a+1)^0,c
  4102  003F76  0E54               	movlw	84
  4103  003F78  6E3B               	movwf	(___fladd@a+2)^0,c
  4104  003F7A  0EC5               	movlw	197
  4105  003F7C  6E3C               	movwf	(___fladd@a+3)^0,c
  4106  003F7E  C058  F035         	movff	speedControl@position,___fladd@b
  4107  003F82  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4108  003F86  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4109  003F8A  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4110  003F8E  EC85  F015         	call	___fladd	;wreg free
  4111  003F92  C035  F04E         	movff	?___fladd,___fltol@f1
  4112  003F96  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4113  003F9A  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4114  003F9E  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4115  003FA2  EC02  F025         	call	___fltol	;wreg free
  4116  003FA6  C04E  F150         	movff	?___fltol,_controller
  4117  003FAA  C04F  F151         	movff	?___fltol+1,_controller+1
  4118  003FAE  0E00               	movlw	0
  4119  003FB0  6E20               	movwf	___flmul@a^0,c
  4120  003FB2  0E00               	movlw	0
  4121  003FB4  6E21               	movwf	(___flmul@a+1)^0,c
  4122  003FB6  0E80               	movlw	128
  4123  003FB8  6E22               	movwf	(___flmul@a+2)^0,c
  4124  003FBA  0E3F               	movlw	63
  4125  003FBC  6E23               	movwf	(___flmul@a+3)^0,c
  4126  003FBE  0101               	movlb	1	; () banked
  4127  003FC0  5152               	movf	(_controller+2)& (0+255),w,b
  4128  003FC2  5D50               	subwf	_controller& (0+255),w,b
  4129  003FC4  6E5C               	movwf	??_speedControl^0,c
  4130  003FC6  5153               	movf	(_controller+3)& (0+255),w,b
  4131  003FC8  5951               	subwfb	(_controller+1)& (0+255),w,b
  4132  003FCA  6E5D               	movwf	(??_speedControl+1)^0,c
  4133  003FCC  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4134  003FD0  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4135  003FD4  0E00               	movlw	0
  4136  003FD6  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4137  003FD8  0EFF               	movlw	-1
  4138  003FDA  6E10               	movwf	(___xxtofl@val+2)^0,c
  4139  003FDC  6E11               	movwf	(___xxtofl@val+3)^0,c
  4140  003FDE  0E01               	movlw	1
  4141  003FE0  EC96  F020         	call	___xxtofl
  4142  003FE4  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4143  003FE8  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4144  003FEC  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4145  003FF0  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4146  003FF4  ECE5  F017         	call	___flmul	;wreg free
  4147  003FF8  C01C  F039         	movff	?___flmul,___fladd@a
  4148  003FFC  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4149  004000  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4150  004004  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4151  004008  0ECD               	movlw	205
  4152  00400A  6E20               	movwf	___flmul@a^0,c
  4153  00400C  0ECC               	movlw	204
  4154  00400E  6E21               	movwf	(___flmul@a+1)^0,c
  4155  004010  0E4C               	movlw	76
  4156  004012  6E22               	movwf	(___flmul@a+2)^0,c
  4157  004014  0E3E               	movlw	62
  4158  004016  6E23               	movwf	(___flmul@a+3)^0,c
  4159  004018  C150  F00E         	movff	_controller,___xxtofl@val
  4160  00401C  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4161  004020  0E00               	movlw	0
  4162  004022  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4163  004024  0EFF               	movlw	-1
  4164  004026  6E10               	movwf	(___xxtofl@val+2)^0,c
  4165  004028  6E11               	movwf	(___xxtofl@val+3)^0,c
  4166  00402A  0E01               	movlw	1
  4167  00402C  EC96  F020         	call	___xxtofl
  4168  004030  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4169  004034  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4170  004038  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4171  00403C  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4172  004040  ECE5  F017         	call	___flmul	;wreg free
  4173  004044  C01C  F035         	movff	?___flmul,___fladd@b
  4174  004048  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4175  00404C  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4176  004050  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4177  004054  EC85  F015         	call	___fladd	;wreg free
  4178  004058  C035  F04E         	movff	?___fladd,___fltol@f1
  4179  00405C  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4180  004060  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4181  004064  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4182  004068  EC02  F025         	call	___fltol	;wreg free
  4183  00406C  C04E  F154         	movff	?___fltol,_controller+4
  4184  004070  C04F  F155         	movff	?___fltol+1,_controller+5
  4185  004074                     
  4186                           ;fs_speed_controller.c: 46:     controller.lastError = controller.error;
  4187  004074  C150  F152         	movff	_controller,_controller+2
  4188  004078  C151  F153         	movff	_controller+1,_controller+3
  4189  00407C                     
  4190                           ;fs_speed_controller.c: 48:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4191  00407C  0E0E               	movlw	14
  4192  00407E  0101               	movlb	1	; () banked
  4193  004080  2554               	addwf	(_controller+4)& (0+255),w,b
  4194  004082  6F56               	movwf	(_controller+6)& (0+255),b
  4195  004084  0E01               	movlw	1
  4196  004086  2155               	addwfc	(_controller+5)& (0+255),w,b
  4197  004088  6F57               	movwf	(_controller+7)& (0+255),b
  4198  00408A                     
  4199                           ; BSR set to: 1
  4200                           ;fs_speed_controller.c: 49:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4201  00408A  5154               	movf	(_controller+4)& (0+255),w,b
  4202  00408C  08C8               	sublw	200
  4203  00408E  6F58               	movwf	(_controller+8)& (0+255),b
  4204  004090  5155               	movf	(_controller+5)& (0+255),w,b
  4205  004092  A0D8               	btfss	status,0,c
  4206  004094  2AE8               	incf	wreg,f,c
  4207  004096  0800               	sublw	0
  4208  004098  6F59               	movwf	(_controller+9)& (0+255),b
  4209  00409A                     
  4210                           ; BSR set to: 1
  4211                           ;fs_speed_controller.c: 51:     if (controller.leftMotorSpeed < 50)
  4212  00409A  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4213  00409C  EF5B  F020         	goto	u6730
  4214  0040A0  5157               	movf	(_controller+7)& (0+255),w,b
  4215  0040A2  E107               	bnz	u6731
  4216  0040A4  0E32               	movlw	50
  4217  0040A6  5D56               	subwf	(_controller+6)& (0+255),w,b
  4218  0040A8  B0D8               	btfsc	status,0,c
  4219  0040AA  EF59  F020         	goto	u6731
  4220  0040AE  EF5B  F020         	goto	u6730
  4221  0040B2                     u6731:
  4222  0040B2  EF5F  F020         	goto	l5589
  4223  0040B6                     u6730:
  4224  0040B6                     
  4225                           ; BSR set to: 1
  4226                           ;fs_speed_controller.c: 52:     {;fs_speed_controller.c: 53:         controller.leftMoto
      +                          rSpeed = 50;
  4227  0040B6  0E00               	movlw	0
  4228  0040B8  6F57               	movwf	(_controller+7)& (0+255),b
  4229  0040BA  0E32               	movlw	50
  4230  0040BC  6F56               	movwf	(_controller+6)& (0+255),b
  4231  0040BE                     l5589:
  4232                           
  4233                           ; BSR set to: 1
  4234                           ;fs_speed_controller.c: 56:     if (controller.rightMotorSpeed < 50)
  4235  0040BE  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4236  0040C0  EF6D  F020         	goto	u6740
  4237  0040C4  5159               	movf	(_controller+9)& (0+255),w,b
  4238  0040C6  E107               	bnz	u6741
  4239  0040C8  0E32               	movlw	50
  4240  0040CA  5D58               	subwf	(_controller+8)& (0+255),w,b
  4241  0040CC  B0D8               	btfsc	status,0,c
  4242  0040CE  EF6B  F020         	goto	u6741
  4243  0040D2  EF6D  F020         	goto	u6740
  4244  0040D6                     u6741:
  4245  0040D6  EF71  F020         	goto	l5593
  4246  0040DA                     u6740:
  4247  0040DA                     
  4248                           ; BSR set to: 1
  4249                           ;fs_speed_controller.c: 57:     {;fs_speed_controller.c: 58:       controller.rightMotor
      +                          Speed = 50;
  4250  0040DA  0E00               	movlw	0
  4251  0040DC  6F59               	movwf	(_controller+9)& (0+255),b
  4252  0040DE  0E32               	movlw	50
  4253  0040E0  6F58               	movwf	(_controller+8)& (0+255),b
  4254  0040E2                     l5593:
  4255                           
  4256                           ; BSR set to: 1
  4257                           ;fs_speed_controller.c: 61:     if (controller.leftMotorSpeed > 350)
  4258  0040E2  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4259  0040E4  EF7D  F020         	goto	u6751
  4260  0040E8  0E5F               	movlw	95
  4261  0040EA  5D56               	subwf	(_controller+6)& (0+255),w,b
  4262  0040EC  0E01               	movlw	1
  4263  0040EE  5957               	subwfb	(_controller+7)& (0+255),w,b
  4264  0040F0  A0D8               	btfss	status,0,c
  4265  0040F2  EF7D  F020         	goto	u6751
  4266  0040F6  EF7F  F020         	goto	u6750
  4267  0040FA                     u6751:
  4268  0040FA  EF83  F020         	goto	l5597
  4269  0040FE                     u6750:
  4270  0040FE                     
  4271                           ; BSR set to: 1
  4272                           ;fs_speed_controller.c: 62:    {;fs_speed_controller.c: 63:         controller.leftMotor
      +                          Speed = 350;
  4273  0040FE  0E01               	movlw	1
  4274  004100  6F57               	movwf	(_controller+7)& (0+255),b
  4275  004102  0E5E               	movlw	94
  4276  004104  6F56               	movwf	(_controller+6)& (0+255),b
  4277  004106                     l5597:
  4278                           
  4279                           ; BSR set to: 1
  4280                           ;fs_speed_controller.c: 66:     if (controller.rightMotorSpeed > 350)
  4281  004106  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4282  004108  EF8F  F020         	goto	u6761
  4283  00410C  0E5F               	movlw	95
  4284  00410E  5D58               	subwf	(_controller+8)& (0+255),w,b
  4285  004110  0E01               	movlw	1
  4286  004112  5959               	subwfb	(_controller+9)& (0+255),w,b
  4287  004114  A0D8               	btfss	status,0,c
  4288  004116  EF8F  F020         	goto	u6761
  4289  00411A  EF91  F020         	goto	u6760
  4290  00411E                     u6761:
  4291  00411E  EF95  F020         	goto	l437
  4292  004122                     u6760:
  4293  004122                     
  4294                           ; BSR set to: 1
  4295                           ;fs_speed_controller.c: 67:     {;fs_speed_controller.c: 68:         controller.rightMot
      +                          orSpeed = 350;
  4296  004122  0E01               	movlw	1
  4297  004124  6F59               	movwf	(_controller+9)& (0+255),b
  4298  004126  0E5E               	movlw	94
  4299  004128  6F58               	movwf	(_controller+8)& (0+255),b
  4300  00412A                     l437:
  4301                           
  4302                           ; BSR set to: 1
  4303  00412A  0012               	return		;funcret
  4304  00412C                     __end_of_speedControl:
  4305                           	callstack 0
  4306                           
  4307 ;; *************** function _scanAdcConversion *****************
  4308 ;; Defined at:
  4309 ;;		line 93 in file "fs_adc.c"
  4310 ;; Parameters:    Size  Location     Type
  4311 ;;		None
  4312 ;; Auto vars:     Size  Location     Type
  4313 ;;		None
  4314 ;; Return value:  Size  Location     Type
  4315 ;;                  1    wreg      void 
  4316 ;; Registers used:
  4317 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4318 ;; Tracked objects:
  4319 ;;		On entry : 0/0
  4320 ;;		On exit  : 0/0
  4321 ;;		Unchanged: 0/0
  4322 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4323 ;;      Params:         0       0       0       0       0       0       0
  4324 ;;      Locals:         0       0       0       0       0       0       0
  4325 ;;      Temps:          2       0       0       0       0       0       0
  4326 ;;      Totals:         2       0       0       0       0       0       0
  4327 ;;Total ram usage:        2 bytes
  4328 ;; Hardware stack levels used:    1
  4329 ;; Hardware stack levels required when called:    2
  4330 ;; This function calls:
  4331 ;;		___fldiv
  4332 ;;		___flmul
  4333 ;;		___fltol
  4334 ;;		___xxtofl
  4335 ;;		_readAdcValue
  4336 ;; This function is called by:
  4337 ;;		_startMotor
  4338 ;; This function uses a non-reentrant model
  4339 ;;
  4340                           
  4341                           	psect	text10
  4342  001CCE                     __ptext10:
  4343                           	callstack 0
  4344  001CCE                     _scanAdcConversion:
  4345                           	callstack 25
  4346  001CCE                     
  4347                           ;fs_adc.c: 95:     switch(timer_value.timer_0_counter)
  4348  001CCE  EF3B  F012         	goto	l5509
  4349  001CD2                     l5457:
  4350                           
  4351                           ; BSR set to: 0
  4352                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4353  001CD2  0E00               	movlw	0
  4354  001CD4  ECBB  F02C         	call	_readAdcValue
  4355  001CD8  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4356  001CDC  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4357  001CE0                     
  4358                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4359  001CE0  0E00               	movlw	0
  4360  001CE2  6E20               	movwf	___flmul@a^0,c
  4361  001CE4  0E00               	movlw	0
  4362  001CE6  6E21               	movwf	(___flmul@a+1)^0,c
  4363  001CE8  0EA0               	movlw	160
  4364  001CEA  6E22               	movwf	(___flmul@a+2)^0,c
  4365  001CEC  0E40               	movlw	64
  4366  001CEE  6E23               	movwf	(___flmul@a+3)^0,c
  4367  001CF0  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4368  001CF4  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4369  001CF8  6A10               	clrf	(___xxtofl@val+2)^0,c
  4370  001CFA  6A11               	clrf	(___xxtofl@val+3)^0,c
  4371  001CFC  0E00               	movlw	0
  4372  001CFE  EC96  F020         	call	___xxtofl
  4373  001D02  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4374  001D06  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4375  001D0A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4376  001D0E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4377  001D12  ECE5  F017         	call	___flmul	;wreg free
  4378  001D16  C01C  F035         	movff	?___flmul,___fldiv@b
  4379  001D1A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4380  001D1E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4381  001D22  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4382  001D26  0E00               	movlw	0
  4383  001D28  6E39               	movwf	___fldiv@a^0,c
  4384  001D2A  0E00               	movlw	0
  4385  001D2C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4386  001D2E  0E80               	movlw	128
  4387  001D30  6E3B               	movwf	(___fldiv@a+2)^0,c
  4388  001D32  0E44               	movlw	68
  4389  001D34  6E3C               	movwf	(___fldiv@a+3)^0,c
  4390  001D36  ECFA  F019         	call	___fldiv	;wreg free
  4391  001D3A  C035  F130         	movff	?___fldiv,_procces_data
  4392  001D3E  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4393  001D42  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4394  001D46  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4395  001D4A                     
  4396                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4397  001D4A  0E00               	movlw	0
  4398  001D4C  6E39               	movwf	___fldiv@a^0,c
  4399  001D4E  0E00               	movlw	0
  4400  001D50  6E3A               	movwf	(___fldiv@a+1)^0,c
  4401  001D52  0EA0               	movlw	160
  4402  001D54  6E3B               	movwf	(___fldiv@a+2)^0,c
  4403  001D56  0E40               	movlw	64
  4404  001D58  6E3C               	movwf	(___fldiv@a+3)^0,c
  4405  001D5A  0E00               	movlw	0
  4406  001D5C  6E20               	movwf	___flmul@a^0,c
  4407  001D5E  0EC0               	movlw	192
  4408  001D60  6E21               	movwf	(___flmul@a+1)^0,c
  4409  001D62  0E79               	movlw	121
  4410  001D64  6E22               	movwf	(___flmul@a+2)^0,c
  4411  001D66  0E44               	movlw	68
  4412  001D68  6E23               	movwf	(___flmul@a+3)^0,c
  4413  001D6A  C130  F01C         	movff	_procces_data,___flmul@b
  4414  001D6E  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4415  001D72  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4416  001D76  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4417  001D7A  ECE5  F017         	call	___flmul	;wreg free
  4418  001D7E  C01C  F035         	movff	?___flmul,___fldiv@b
  4419  001D82  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4420  001D86  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4421  001D8A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4422  001D8E  ECFA  F019         	call	___fldiv	;wreg free
  4423  001D92  C035  F04E         	movff	?___fldiv,___fltol@f1
  4424  001D96  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4425  001D9A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4426  001D9E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4427  001DA2  EC02  F025         	call	___fltol	;wreg free
  4428  001DA6  C04E  F100         	movff	?___fltol,_convert_data
  4429  001DAA  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4430  001DAE  C050  F102         	movff	?___fltol+2,_convert_data+2
  4431  001DB2  C051  F103         	movff	?___fltol+3,_convert_data+3
  4432                           
  4433                           ;fs_adc.c: 101:         break;
  4434  001DB6  EF69  F012         	goto	l54
  4435  001DBA                     l5463:
  4436                           
  4437                           ; BSR set to: 0
  4438                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4439  001DBA  0E01               	movlw	1
  4440  001DBC  ECBB  F02C         	call	_readAdcValue
  4441  001DC0  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4442  001DC4  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4443  001DC8                     
  4444                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4445  001DC8  0E00               	movlw	0
  4446  001DCA  6E20               	movwf	___flmul@a^0,c
  4447  001DCC  0E00               	movlw	0
  4448  001DCE  6E21               	movwf	(___flmul@a+1)^0,c
  4449  001DD0  0EA0               	movlw	160
  4450  001DD2  6E22               	movwf	(___flmul@a+2)^0,c
  4451  001DD4  0E40               	movlw	64
  4452  001DD6  6E23               	movwf	(___flmul@a+3)^0,c
  4453  001DD8  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4454  001DDC  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4455  001DE0  6A10               	clrf	(___xxtofl@val+2)^0,c
  4456  001DE2  6A11               	clrf	(___xxtofl@val+3)^0,c
  4457  001DE4  0E00               	movlw	0
  4458  001DE6  EC96  F020         	call	___xxtofl
  4459  001DEA  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4460  001DEE  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4461  001DF2  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4462  001DF6  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4463  001DFA  ECE5  F017         	call	___flmul	;wreg free
  4464  001DFE  C01C  F035         	movff	?___flmul,___fldiv@b
  4465  001E02  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4466  001E06  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4467  001E0A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4468  001E0E  0E00               	movlw	0
  4469  001E10  6E39               	movwf	___fldiv@a^0,c
  4470  001E12  0E00               	movlw	0
  4471  001E14  6E3A               	movwf	(___fldiv@a+1)^0,c
  4472  001E16  0E80               	movlw	128
  4473  001E18  6E3B               	movwf	(___fldiv@a+2)^0,c
  4474  001E1A  0E44               	movlw	68
  4475  001E1C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4476  001E1E  ECFA  F019         	call	___fldiv	;wreg free
  4477  001E22  C035  F134         	movff	?___fldiv,_procces_data+4
  4478  001E26  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4479  001E2A  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4480  001E2E  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4481  001E32                     
  4482                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4483  001E32  0E00               	movlw	0
  4484  001E34  6E39               	movwf	___fldiv@a^0,c
  4485  001E36  0E00               	movlw	0
  4486  001E38  6E3A               	movwf	(___fldiv@a+1)^0,c
  4487  001E3A  0EA0               	movlw	160
  4488  001E3C  6E3B               	movwf	(___fldiv@a+2)^0,c
  4489  001E3E  0E40               	movlw	64
  4490  001E40  6E3C               	movwf	(___fldiv@a+3)^0,c
  4491  001E42  0E00               	movlw	0
  4492  001E44  6E20               	movwf	___flmul@a^0,c
  4493  001E46  0EC0               	movlw	192
  4494  001E48  6E21               	movwf	(___flmul@a+1)^0,c
  4495  001E4A  0E79               	movlw	121
  4496  001E4C  6E22               	movwf	(___flmul@a+2)^0,c
  4497  001E4E  0E44               	movlw	68
  4498  001E50  6E23               	movwf	(___flmul@a+3)^0,c
  4499  001E52  C134  F01C         	movff	_procces_data+4,___flmul@b
  4500  001E56  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4501  001E5A  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4502  001E5E  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4503  001E62  ECE5  F017         	call	___flmul	;wreg free
  4504  001E66  C01C  F035         	movff	?___flmul,___fldiv@b
  4505  001E6A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4506  001E6E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4507  001E72  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4508  001E76  ECFA  F019         	call	___fldiv	;wreg free
  4509  001E7A  C035  F04E         	movff	?___fldiv,___fltol@f1
  4510  001E7E  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4511  001E82  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4512  001E86  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4513  001E8A  EC02  F025         	call	___fltol	;wreg free
  4514  001E8E  C04E  F104         	movff	?___fltol,_convert_data+4
  4515  001E92  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4516  001E96  C050  F106         	movff	?___fltol+2,_convert_data+6
  4517  001E9A  C051  F107         	movff	?___fltol+3,_convert_data+7
  4518                           
  4519                           ;fs_adc.c: 107:         break;
  4520  001E9E  EF69  F012         	goto	l54
  4521  001EA2                     l5469:
  4522                           
  4523                           ; BSR set to: 0
  4524                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4525  001EA2  0E02               	movlw	2
  4526  001EA4  ECBB  F02C         	call	_readAdcValue
  4527  001EA8  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4528  001EAC  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4529  001EB0                     
  4530                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4531  001EB0  0E00               	movlw	0
  4532  001EB2  6E20               	movwf	___flmul@a^0,c
  4533  001EB4  0E00               	movlw	0
  4534  001EB6  6E21               	movwf	(___flmul@a+1)^0,c
  4535  001EB8  0EA0               	movlw	160
  4536  001EBA  6E22               	movwf	(___flmul@a+2)^0,c
  4537  001EBC  0E40               	movlw	64
  4538  001EBE  6E23               	movwf	(___flmul@a+3)^0,c
  4539  001EC0  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4540  001EC4  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4541  001EC8  6A10               	clrf	(___xxtofl@val+2)^0,c
  4542  001ECA  6A11               	clrf	(___xxtofl@val+3)^0,c
  4543  001ECC  0E00               	movlw	0
  4544  001ECE  EC96  F020         	call	___xxtofl
  4545  001ED2  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4546  001ED6  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4547  001EDA  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4548  001EDE  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4549  001EE2  ECE5  F017         	call	___flmul	;wreg free
  4550  001EE6  C01C  F035         	movff	?___flmul,___fldiv@b
  4551  001EEA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4552  001EEE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4553  001EF2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4554  001EF6  0E00               	movlw	0
  4555  001EF8  6E39               	movwf	___fldiv@a^0,c
  4556  001EFA  0E00               	movlw	0
  4557  001EFC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4558  001EFE  0E80               	movlw	128
  4559  001F00  6E3B               	movwf	(___fldiv@a+2)^0,c
  4560  001F02  0E44               	movlw	68
  4561  001F04  6E3C               	movwf	(___fldiv@a+3)^0,c
  4562  001F06  ECFA  F019         	call	___fldiv	;wreg free
  4563  001F0A  C035  F138         	movff	?___fldiv,_procces_data+8
  4564  001F0E  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4565  001F12  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4566  001F16  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4567  001F1A                     
  4568                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4569  001F1A  0E00               	movlw	0
  4570  001F1C  6E39               	movwf	___fldiv@a^0,c
  4571  001F1E  0E00               	movlw	0
  4572  001F20  6E3A               	movwf	(___fldiv@a+1)^0,c
  4573  001F22  0EA0               	movlw	160
  4574  001F24  6E3B               	movwf	(___fldiv@a+2)^0,c
  4575  001F26  0E40               	movlw	64
  4576  001F28  6E3C               	movwf	(___fldiv@a+3)^0,c
  4577  001F2A  0E00               	movlw	0
  4578  001F2C  6E20               	movwf	___flmul@a^0,c
  4579  001F2E  0EC0               	movlw	192
  4580  001F30  6E21               	movwf	(___flmul@a+1)^0,c
  4581  001F32  0E79               	movlw	121
  4582  001F34  6E22               	movwf	(___flmul@a+2)^0,c
  4583  001F36  0E44               	movlw	68
  4584  001F38  6E23               	movwf	(___flmul@a+3)^0,c
  4585  001F3A  C138  F01C         	movff	_procces_data+8,___flmul@b
  4586  001F3E  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4587  001F42  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4588  001F46  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4589  001F4A  ECE5  F017         	call	___flmul	;wreg free
  4590  001F4E  C01C  F035         	movff	?___flmul,___fldiv@b
  4591  001F52  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4592  001F56  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4593  001F5A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4594  001F5E  ECFA  F019         	call	___fldiv	;wreg free
  4595  001F62  C035  F04E         	movff	?___fldiv,___fltol@f1
  4596  001F66  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4597  001F6A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4598  001F6E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4599  001F72  EC02  F025         	call	___fltol	;wreg free
  4600  001F76  C04E  F108         	movff	?___fltol,_convert_data+8
  4601  001F7A  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4602  001F7E  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4603  001F82  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4604  001F86                     
  4605                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4606  001F86  0E00               	movlw	0
  4607  001F88  6E39               	movwf	___fldiv@a^0,c
  4608  001F8A  0E00               	movlw	0
  4609  001F8C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4610  001F8E  0EA0               	movlw	160
  4611  001F90  6E3B               	movwf	(___fldiv@a+2)^0,c
  4612  001F92  0E40               	movlw	64
  4613  001F94  6E3C               	movwf	(___fldiv@a+3)^0,c
  4614  001F96  0E00               	movlw	0
  4615  001F98  6E20               	movwf	___flmul@a^0,c
  4616  001F9A  0EC0               	movlw	192
  4617  001F9C  6E21               	movwf	(___flmul@a+1)^0,c
  4618  001F9E  0E79               	movlw	121
  4619  001FA0  6E22               	movwf	(___flmul@a+2)^0,c
  4620  001FA2  0E44               	movlw	68
  4621  001FA4  6E23               	movwf	(___flmul@a+3)^0,c
  4622  001FA6  C138  F01C         	movff	_procces_data+8,___flmul@b
  4623  001FAA  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4624  001FAE  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4625  001FB2  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4626  001FB6  ECE5  F017         	call	___flmul	;wreg free
  4627  001FBA  C01C  F035         	movff	?___flmul,___fldiv@b
  4628  001FBE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4629  001FC2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4630  001FC6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4631  001FCA  ECFA  F019         	call	___fldiv	;wreg free
  4632  001FCE  C035  F04E         	movff	?___fldiv,___fltol@f1
  4633  001FD2  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4634  001FD6  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4635  001FDA  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4636  001FDE  EC02  F025         	call	___fltol	;wreg free
  4637  001FE2  C04E  F124         	movff	?___fltol,_convert_data+36
  4638  001FE6  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4639                           
  4640                           ;fs_adc.c: 114:         break;
  4641  001FEA  EF69  F012         	goto	l54
  4642  001FEE                     l5477:
  4643                           
  4644                           ; BSR set to: 0
  4645                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4646  001FEE  0E03               	movlw	3
  4647  001FF0  ECBB  F02C         	call	_readAdcValue
  4648  001FF4  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4649  001FF8  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4650  001FFC                     
  4651                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4652  001FFC  0E00               	movlw	0
  4653  001FFE  6E20               	movwf	___flmul@a^0,c
  4654  002000  0E00               	movlw	0
  4655  002002  6E21               	movwf	(___flmul@a+1)^0,c
  4656  002004  0EA0               	movlw	160
  4657  002006  6E22               	movwf	(___flmul@a+2)^0,c
  4658  002008  0E40               	movlw	64
  4659  00200A  6E23               	movwf	(___flmul@a+3)^0,c
  4660  00200C  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4661  002010  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4662  002014  6A10               	clrf	(___xxtofl@val+2)^0,c
  4663  002016  6A11               	clrf	(___xxtofl@val+3)^0,c
  4664  002018  0E00               	movlw	0
  4665  00201A  EC96  F020         	call	___xxtofl
  4666  00201E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4667  002022  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4668  002026  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4669  00202A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4670  00202E  ECE5  F017         	call	___flmul	;wreg free
  4671  002032  C01C  F035         	movff	?___flmul,___fldiv@b
  4672  002036  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4673  00203A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4674  00203E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4675  002042  0E00               	movlw	0
  4676  002044  6E39               	movwf	___fldiv@a^0,c
  4677  002046  0E00               	movlw	0
  4678  002048  6E3A               	movwf	(___fldiv@a+1)^0,c
  4679  00204A  0E80               	movlw	128
  4680  00204C  6E3B               	movwf	(___fldiv@a+2)^0,c
  4681  00204E  0E44               	movlw	68
  4682  002050  6E3C               	movwf	(___fldiv@a+3)^0,c
  4683  002052  ECFA  F019         	call	___fldiv	;wreg free
  4684  002056  C035  F13C         	movff	?___fldiv,_procces_data+12
  4685  00205A  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4686  00205E  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4687  002062  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4688  002066                     
  4689                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4690  002066  0E00               	movlw	0
  4691  002068  6E39               	movwf	___fldiv@a^0,c
  4692  00206A  0E00               	movlw	0
  4693  00206C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4694  00206E  0EA0               	movlw	160
  4695  002070  6E3B               	movwf	(___fldiv@a+2)^0,c
  4696  002072  0E40               	movlw	64
  4697  002074  6E3C               	movwf	(___fldiv@a+3)^0,c
  4698  002076  0E00               	movlw	0
  4699  002078  6E20               	movwf	___flmul@a^0,c
  4700  00207A  0EC0               	movlw	192
  4701  00207C  6E21               	movwf	(___flmul@a+1)^0,c
  4702  00207E  0E79               	movlw	121
  4703  002080  6E22               	movwf	(___flmul@a+2)^0,c
  4704  002082  0E44               	movlw	68
  4705  002084  6E23               	movwf	(___flmul@a+3)^0,c
  4706  002086  C13C  F01C         	movff	_procces_data+12,___flmul@b
  4707  00208A  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  4708  00208E  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  4709  002092  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  4710  002096  ECE5  F017         	call	___flmul	;wreg free
  4711  00209A  C01C  F035         	movff	?___flmul,___fldiv@b
  4712  00209E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4713  0020A2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4714  0020A6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4715  0020AA  ECFA  F019         	call	___fldiv	;wreg free
  4716  0020AE  C035  F04E         	movff	?___fldiv,___fltol@f1
  4717  0020B2  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4718  0020B6  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4719  0020BA  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4720  0020BE  EC02  F025         	call	___fltol	;wreg free
  4721  0020C2  C04E  F10C         	movff	?___fltol,_convert_data+12
  4722  0020C6  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  4723  0020CA  C050  F10E         	movff	?___fltol+2,_convert_data+14
  4724  0020CE  C051  F10F         	movff	?___fltol+3,_convert_data+15
  4725                           
  4726                           ;fs_adc.c: 120:         break;
  4727  0020D2  EF69  F012         	goto	l54
  4728  0020D6                     l5483:
  4729                           
  4730                           ; BSR set to: 0
  4731                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  4732  0020D6  0E04               	movlw	4
  4733  0020D8  ECBB  F02C         	call	_readAdcValue
  4734  0020DC  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  4735  0020E0  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  4736  0020E4                     
  4737                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  4738  0020E4  0E00               	movlw	0
  4739  0020E6  6E20               	movwf	___flmul@a^0,c
  4740  0020E8  0E00               	movlw	0
  4741  0020EA  6E21               	movwf	(___flmul@a+1)^0,c
  4742  0020EC  0EA0               	movlw	160
  4743  0020EE  6E22               	movwf	(___flmul@a+2)^0,c
  4744  0020F0  0E40               	movlw	64
  4745  0020F2  6E23               	movwf	(___flmul@a+3)^0,c
  4746  0020F4  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  4747  0020F8  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  4748  0020FC  6A10               	clrf	(___xxtofl@val+2)^0,c
  4749  0020FE  6A11               	clrf	(___xxtofl@val+3)^0,c
  4750  002100  0E00               	movlw	0
  4751  002102  EC96  F020         	call	___xxtofl
  4752  002106  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4753  00210A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4754  00210E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4755  002112  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4756  002116  ECE5  F017         	call	___flmul	;wreg free
  4757  00211A  C01C  F035         	movff	?___flmul,___fldiv@b
  4758  00211E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4759  002122  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4760  002126  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4761  00212A  0E00               	movlw	0
  4762  00212C  6E39               	movwf	___fldiv@a^0,c
  4763  00212E  0E00               	movlw	0
  4764  002130  6E3A               	movwf	(___fldiv@a+1)^0,c
  4765  002132  0E80               	movlw	128
  4766  002134  6E3B               	movwf	(___fldiv@a+2)^0,c
  4767  002136  0E44               	movlw	68
  4768  002138  6E3C               	movwf	(___fldiv@a+3)^0,c
  4769  00213A  ECFA  F019         	call	___fldiv	;wreg free
  4770  00213E  C035  F140         	movff	?___fldiv,_procces_data+16
  4771  002142  C036  F141         	movff	?___fldiv+1,_procces_data+17
  4772  002146  C037  F142         	movff	?___fldiv+2,_procces_data+18
  4773  00214A  C038  F143         	movff	?___fldiv+3,_procces_data+19
  4774  00214E                     
  4775                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  4776  00214E  0E00               	movlw	0
  4777  002150  6E39               	movwf	___fldiv@a^0,c
  4778  002152  0E00               	movlw	0
  4779  002154  6E3A               	movwf	(___fldiv@a+1)^0,c
  4780  002156  0EA0               	movlw	160
  4781  002158  6E3B               	movwf	(___fldiv@a+2)^0,c
  4782  00215A  0E40               	movlw	64
  4783  00215C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4784  00215E  0E00               	movlw	0
  4785  002160  6E20               	movwf	___flmul@a^0,c
  4786  002162  0EC0               	movlw	192
  4787  002164  6E21               	movwf	(___flmul@a+1)^0,c
  4788  002166  0E79               	movlw	121
  4789  002168  6E22               	movwf	(___flmul@a+2)^0,c
  4790  00216A  0E44               	movlw	68
  4791  00216C  6E23               	movwf	(___flmul@a+3)^0,c
  4792  00216E  C140  F01C         	movff	_procces_data+16,___flmul@b
  4793  002172  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  4794  002176  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  4795  00217A  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  4796  00217E  ECE5  F017         	call	___flmul	;wreg free
  4797  002182  C01C  F035         	movff	?___flmul,___fldiv@b
  4798  002186  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4799  00218A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4800  00218E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4801  002192  ECFA  F019         	call	___fldiv	;wreg free
  4802  002196  C035  F04E         	movff	?___fldiv,___fltol@f1
  4803  00219A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4804  00219E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4805  0021A2  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4806  0021A6  EC02  F025         	call	___fltol	;wreg free
  4807  0021AA  C04E  F110         	movff	?___fltol,_convert_data+16
  4808  0021AE  C04F  F111         	movff	?___fltol+1,_convert_data+17
  4809  0021B2  C050  F112         	movff	?___fltol+2,_convert_data+18
  4810  0021B6  C051  F113         	movff	?___fltol+3,_convert_data+19
  4811                           
  4812                           ;fs_adc.c: 126:         break;
  4813  0021BA  EF69  F012         	goto	l54
  4814  0021BE                     l5489:
  4815                           
  4816                           ; BSR set to: 0
  4817                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  4818  0021BE  0E05               	movlw	5
  4819  0021C0  ECBB  F02C         	call	_readAdcValue
  4820  0021C4  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  4821  0021C8  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  4822  0021CC                     
  4823                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  4824  0021CC  0E00               	movlw	0
  4825  0021CE  6E20               	movwf	___flmul@a^0,c
  4826  0021D0  0E00               	movlw	0
  4827  0021D2  6E21               	movwf	(___flmul@a+1)^0,c
  4828  0021D4  0EA0               	movlw	160
  4829  0021D6  6E22               	movwf	(___flmul@a+2)^0,c
  4830  0021D8  0E40               	movlw	64
  4831  0021DA  6E23               	movwf	(___flmul@a+3)^0,c
  4832  0021DC  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  4833  0021E0  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  4834  0021E4  6A10               	clrf	(___xxtofl@val+2)^0,c
  4835  0021E6  6A11               	clrf	(___xxtofl@val+3)^0,c
  4836  0021E8  0E00               	movlw	0
  4837  0021EA  EC96  F020         	call	___xxtofl
  4838  0021EE  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4839  0021F2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4840  0021F6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4841  0021FA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4842  0021FE  ECE5  F017         	call	___flmul	;wreg free
  4843  002202  C01C  F035         	movff	?___flmul,___fldiv@b
  4844  002206  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4845  00220A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4846  00220E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4847  002212  0E00               	movlw	0
  4848  002214  6E39               	movwf	___fldiv@a^0,c
  4849  002216  0E00               	movlw	0
  4850  002218  6E3A               	movwf	(___fldiv@a+1)^0,c
  4851  00221A  0E80               	movlw	128
  4852  00221C  6E3B               	movwf	(___fldiv@a+2)^0,c
  4853  00221E  0E44               	movlw	68
  4854  002220  6E3C               	movwf	(___fldiv@a+3)^0,c
  4855  002222  ECFA  F019         	call	___fldiv	;wreg free
  4856  002226  C035  F144         	movff	?___fldiv,_procces_data+20
  4857  00222A  C036  F145         	movff	?___fldiv+1,_procces_data+21
  4858  00222E  C037  F146         	movff	?___fldiv+2,_procces_data+22
  4859  002232  C038  F147         	movff	?___fldiv+3,_procces_data+23
  4860  002236                     
  4861                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  4862  002236  0E00               	movlw	0
  4863  002238  6E39               	movwf	___fldiv@a^0,c
  4864  00223A  0E00               	movlw	0
  4865  00223C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4866  00223E  0EA0               	movlw	160
  4867  002240  6E3B               	movwf	(___fldiv@a+2)^0,c
  4868  002242  0E40               	movlw	64
  4869  002244  6E3C               	movwf	(___fldiv@a+3)^0,c
  4870  002246  0E00               	movlw	0
  4871  002248  6E20               	movwf	___flmul@a^0,c
  4872  00224A  0EC0               	movlw	192
  4873  00224C  6E21               	movwf	(___flmul@a+1)^0,c
  4874  00224E  0E79               	movlw	121
  4875  002250  6E22               	movwf	(___flmul@a+2)^0,c
  4876  002252  0E44               	movlw	68
  4877  002254  6E23               	movwf	(___flmul@a+3)^0,c
  4878  002256  C144  F01C         	movff	_procces_data+20,___flmul@b
  4879  00225A  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  4880  00225E  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  4881  002262  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  4882  002266  ECE5  F017         	call	___flmul	;wreg free
  4883  00226A  C01C  F035         	movff	?___flmul,___fldiv@b
  4884  00226E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4885  002272  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4886  002276  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4887  00227A  ECFA  F019         	call	___fldiv	;wreg free
  4888  00227E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4889  002282  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4890  002286  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4891  00228A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4892  00228E  EC02  F025         	call	___fltol	;wreg free
  4893  002292  C04E  F114         	movff	?___fltol,_convert_data+20
  4894  002296  C04F  F115         	movff	?___fltol+1,_convert_data+21
  4895  00229A  C050  F116         	movff	?___fltol+2,_convert_data+22
  4896  00229E  C051  F117         	movff	?___fltol+3,_convert_data+23
  4897                           
  4898                           ;fs_adc.c: 132:         break;
  4899  0022A2  EF69  F012         	goto	l54
  4900  0022A6                     l5495:
  4901                           
  4902                           ; BSR set to: 0
  4903                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  4904  0022A6  0E06               	movlw	6
  4905  0022A8  ECBB  F02C         	call	_readAdcValue
  4906  0022AC  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  4907  0022B0  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  4908  0022B4                     
  4909                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  4910  0022B4  0E00               	movlw	0
  4911  0022B6  6E20               	movwf	___flmul@a^0,c
  4912  0022B8  0E00               	movlw	0
  4913  0022BA  6E21               	movwf	(___flmul@a+1)^0,c
  4914  0022BC  0EA0               	movlw	160
  4915  0022BE  6E22               	movwf	(___flmul@a+2)^0,c
  4916  0022C0  0E40               	movlw	64
  4917  0022C2  6E23               	movwf	(___flmul@a+3)^0,c
  4918  0022C4  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  4919  0022C8  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  4920  0022CC  6A10               	clrf	(___xxtofl@val+2)^0,c
  4921  0022CE  6A11               	clrf	(___xxtofl@val+3)^0,c
  4922  0022D0  0E00               	movlw	0
  4923  0022D2  EC96  F020         	call	___xxtofl
  4924  0022D6  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4925  0022DA  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4926  0022DE  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4927  0022E2  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4928  0022E6  ECE5  F017         	call	___flmul	;wreg free
  4929  0022EA  C01C  F035         	movff	?___flmul,___fldiv@b
  4930  0022EE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4931  0022F2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4932  0022F6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4933  0022FA  0E00               	movlw	0
  4934  0022FC  6E39               	movwf	___fldiv@a^0,c
  4935  0022FE  0E00               	movlw	0
  4936  002300  6E3A               	movwf	(___fldiv@a+1)^0,c
  4937  002302  0E80               	movlw	128
  4938  002304  6E3B               	movwf	(___fldiv@a+2)^0,c
  4939  002306  0E44               	movlw	68
  4940  002308  6E3C               	movwf	(___fldiv@a+3)^0,c
  4941  00230A  ECFA  F019         	call	___fldiv	;wreg free
  4942  00230E  C035  F148         	movff	?___fldiv,_procces_data+24
  4943  002312  C036  F149         	movff	?___fldiv+1,_procces_data+25
  4944  002316  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  4945  00231A  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  4946  00231E                     
  4947                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  4948  00231E  0E00               	movlw	0
  4949  002320  6E39               	movwf	___fldiv@a^0,c
  4950  002322  0E00               	movlw	0
  4951  002324  6E3A               	movwf	(___fldiv@a+1)^0,c
  4952  002326  0EA0               	movlw	160
  4953  002328  6E3B               	movwf	(___fldiv@a+2)^0,c
  4954  00232A  0E40               	movlw	64
  4955  00232C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4956  00232E  0E00               	movlw	0
  4957  002330  6E20               	movwf	___flmul@a^0,c
  4958  002332  0EC0               	movlw	192
  4959  002334  6E21               	movwf	(___flmul@a+1)^0,c
  4960  002336  0E79               	movlw	121
  4961  002338  6E22               	movwf	(___flmul@a+2)^0,c
  4962  00233A  0E44               	movlw	68
  4963  00233C  6E23               	movwf	(___flmul@a+3)^0,c
  4964  00233E  C148  F01C         	movff	_procces_data+24,___flmul@b
  4965  002342  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  4966  002346  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  4967  00234A  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  4968  00234E  ECE5  F017         	call	___flmul	;wreg free
  4969  002352  C01C  F035         	movff	?___flmul,___fldiv@b
  4970  002356  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4971  00235A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4972  00235E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4973  002362  ECFA  F019         	call	___fldiv	;wreg free
  4974  002366  C035  F04E         	movff	?___fldiv,___fltol@f1
  4975  00236A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4976  00236E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4977  002372  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4978  002376  EC02  F025         	call	___fltol	;wreg free
  4979  00237A  C04E  F118         	movff	?___fltol,_convert_data+24
  4980  00237E  C04F  F119         	movff	?___fltol+1,_convert_data+25
  4981  002382  C050  F11A         	movff	?___fltol+2,_convert_data+26
  4982  002386  C051  F11B         	movff	?___fltol+3,_convert_data+27
  4983                           
  4984                           ;fs_adc.c: 138:         break;
  4985  00238A  EF69  F012         	goto	l54
  4986  00238E                     l5501:
  4987                           
  4988                           ; BSR set to: 0
  4989                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  4990  00238E  0E07               	movlw	7
  4991  002390  ECBB  F02C         	call	_readAdcValue
  4992  002394  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  4993  002398  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  4994  00239C                     
  4995                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  4996  00239C  0E00               	movlw	0
  4997  00239E  6E20               	movwf	___flmul@a^0,c
  4998  0023A0  0E00               	movlw	0
  4999  0023A2  6E21               	movwf	(___flmul@a+1)^0,c
  5000  0023A4  0EA0               	movlw	160
  5001  0023A6  6E22               	movwf	(___flmul@a+2)^0,c
  5002  0023A8  0E40               	movlw	64
  5003  0023AA  6E23               	movwf	(___flmul@a+3)^0,c
  5004  0023AC  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  5005  0023B0  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  5006  0023B4  6A10               	clrf	(___xxtofl@val+2)^0,c
  5007  0023B6  6A11               	clrf	(___xxtofl@val+3)^0,c
  5008  0023B8  0E00               	movlw	0
  5009  0023BA  EC96  F020         	call	___xxtofl
  5010  0023BE  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5011  0023C2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5012  0023C6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5013  0023CA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5014  0023CE  ECE5  F017         	call	___flmul	;wreg free
  5015  0023D2  C01C  F035         	movff	?___flmul,___fldiv@b
  5016  0023D6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5017  0023DA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5018  0023DE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5019  0023E2  0E00               	movlw	0
  5020  0023E4  6E39               	movwf	___fldiv@a^0,c
  5021  0023E6  0E00               	movlw	0
  5022  0023E8  6E3A               	movwf	(___fldiv@a+1)^0,c
  5023  0023EA  0E80               	movlw	128
  5024  0023EC  6E3B               	movwf	(___fldiv@a+2)^0,c
  5025  0023EE  0E44               	movlw	68
  5026  0023F0  6E3C               	movwf	(___fldiv@a+3)^0,c
  5027  0023F2  ECFA  F019         	call	___fldiv	;wreg free
  5028  0023F6  C035  F14C         	movff	?___fldiv,_procces_data+28
  5029  0023FA  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  5030  0023FE  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  5031  002402  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  5032  002406                     
  5033                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  5034  002406  0E00               	movlw	0
  5035  002408  6E39               	movwf	___fldiv@a^0,c
  5036  00240A  0E00               	movlw	0
  5037  00240C  6E3A               	movwf	(___fldiv@a+1)^0,c
  5038  00240E  0EA0               	movlw	160
  5039  002410  6E3B               	movwf	(___fldiv@a+2)^0,c
  5040  002412  0E40               	movlw	64
  5041  002414  6E3C               	movwf	(___fldiv@a+3)^0,c
  5042  002416  0E00               	movlw	0
  5043  002418  6E20               	movwf	___flmul@a^0,c
  5044  00241A  0EC0               	movlw	192
  5045  00241C  6E21               	movwf	(___flmul@a+1)^0,c
  5046  00241E  0E79               	movlw	121
  5047  002420  6E22               	movwf	(___flmul@a+2)^0,c
  5048  002422  0E44               	movlw	68
  5049  002424  6E23               	movwf	(___flmul@a+3)^0,c
  5050  002426  C14C  F01C         	movff	_procces_data+28,___flmul@b
  5051  00242A  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  5052  00242E  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  5053  002432  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  5054  002436  ECE5  F017         	call	___flmul	;wreg free
  5055  00243A  C01C  F035         	movff	?___flmul,___fldiv@b
  5056  00243E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5057  002442  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5058  002446  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5059  00244A  ECFA  F019         	call	___fldiv	;wreg free
  5060  00244E  C035  F04E         	movff	?___fldiv,___fltol@f1
  5061  002452  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5062  002456  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5063  00245A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5064  00245E  EC02  F025         	call	___fltol	;wreg free
  5065  002462  C04E  F11C         	movff	?___fltol,_convert_data+28
  5066  002466  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5067  00246A  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5068  00246E  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5069                           
  5070                           ;fs_adc.c: 144:         break;
  5071  002472  EF69  F012         	goto	l54
  5072  002476                     l5509:
  5073  002476  0100               	movlb	0	; () banked
  5074  002478  51FC               	movf	(_timer_value+9)& (0+255),w,b
  5075  00247A  6E58               	movwf	??_scanAdcConversion^0,c
  5076  00247C  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5077                           
  5078                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5079                           ; Switch size 1, requested type "simple"
  5080                           ; Number of cases is 1, Range of values is 0 to 0
  5081                           ; switch strategies available:
  5082                           ; Name         Instructions Cycles
  5083                           ; simple_byte            4     3 (average)
  5084                           ;	Chosen strategy is simple_byte
  5085  00247E  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5086  002480  0A00               	xorlw	0	; case 0
  5087  002482  B4D8               	btfsc	status,2,c
  5088  002484  EF46  F012         	goto	l6335
  5089  002488  EF69  F012         	goto	l54
  5090  00248C                     l6335:
  5091                           
  5092                           ; BSR set to: 0
  5093                           ; Switch size 1, requested type "simple"
  5094                           ; Number of cases is 8, Range of values is 1 to 8
  5095                           ; switch strategies available:
  5096                           ; Name         Instructions Cycles
  5097                           ; simple_byte           25    13 (average)
  5098                           ;	Chosen strategy is simple_byte
  5099  00248C  5058               	movf	??_scanAdcConversion^0,w,c
  5100  00248E  0A01               	xorlw	1	; case 1
  5101  002490  B4D8               	btfsc	status,2,c
  5102  002492  EF69  F00E         	goto	l5457
  5103  002496  0A03               	xorlw	3	; case 2
  5104  002498  B4D8               	btfsc	status,2,c
  5105  00249A  EFDD  F00E         	goto	l5463
  5106  00249E  0A01               	xorlw	1	; case 3
  5107  0024A0  B4D8               	btfsc	status,2,c
  5108  0024A2  EF51  F00F         	goto	l5469
  5109  0024A6  0A07               	xorlw	7	; case 4
  5110  0024A8  B4D8               	btfsc	status,2,c
  5111  0024AA  EFF7  F00F         	goto	l5477
  5112  0024AE  0A01               	xorlw	1	; case 5
  5113  0024B0  B4D8               	btfsc	status,2,c
  5114  0024B2  EF6B  F010         	goto	l5483
  5115  0024B6  0A03               	xorlw	3	; case 6
  5116  0024B8  B4D8               	btfsc	status,2,c
  5117  0024BA  EFDF  F010         	goto	l5489
  5118  0024BE  0A01               	xorlw	1	; case 7
  5119  0024C0  B4D8               	btfsc	status,2,c
  5120  0024C2  EF53  F011         	goto	l5495
  5121  0024C6  0A0F               	xorlw	15	; case 8
  5122  0024C8  B4D8               	btfsc	status,2,c
  5123  0024CA  EFC7  F011         	goto	l5501
  5124  0024CE  EF69  F012         	goto	l54
  5125  0024D2                     l54:
  5126  0024D2  0012               	return		;funcret
  5127  0024D4                     __end_of_scanAdcConversion:
  5128                           	callstack 0
  5129                           
  5130 ;; *************** function _readAdcValue *****************
  5131 ;; Defined at:
  5132 ;;		line 34 in file "fs_adc.c"
  5133 ;; Parameters:    Size  Location     Type
  5134 ;;  adcChannel      1    wreg     unsigned char 
  5135 ;; Auto vars:     Size  Location     Type
  5136 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5137 ;;  adcValue        2    5[COMRAM] unsigned short 
  5138 ;; Return value:  Size  Location     Type
  5139 ;;                  2    0[COMRAM] unsigned short 
  5140 ;; Registers used:
  5141 ;;		wreg, status,2, status,0
  5142 ;; Tracked objects:
  5143 ;;		On entry : 0/0
  5144 ;;		On exit  : 0/0
  5145 ;;		Unchanged: 0/0
  5146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5147 ;;      Params:         2       0       0       0       0       0       0
  5148 ;;      Locals:         3       0       0       0       0       0       0
  5149 ;;      Temps:          2       0       0       0       0       0       0
  5150 ;;      Totals:         7       0       0       0       0       0       0
  5151 ;;Total ram usage:        7 bytes
  5152 ;; Hardware stack levels used:    1
  5153 ;; Hardware stack levels required when called:    1
  5154 ;; This function calls:
  5155 ;;		Nothing
  5156 ;; This function is called by:
  5157 ;;		_scanAdcConversion
  5158 ;; This function uses a non-reentrant model
  5159 ;;
  5160                           
  5161                           	psect	text11
  5162  005976                     __ptext11:
  5163                           	callstack 0
  5164  005976                     _readAdcValue:
  5165                           	callstack 25
  5166                           
  5167                           ;incstack = 0
  5168                           ;readAdcValue@adcChannel stored from wreg
  5169  005976  6E05               	movwf	readAdcValue@adcChannel^0,c
  5170  005978                     
  5171                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5172  005978  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5173  00597C  4603               	rlncf	??_readAdcValue^0,f,c
  5174  00597E  4603               	rlncf	??_readAdcValue^0,f,c
  5175  005980  50C2               	movf	194,w,c	;volatile
  5176  005982  1803               	xorwf	??_readAdcValue^0,w,c
  5177  005984  0B83               	andlw	-125
  5178  005986  1803               	xorwf	??_readAdcValue^0,w,c
  5179  005988  6EC2               	movwf	194,c	;volatile
  5180  00598A                     
  5181                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5182  00598A  80C2               	bsf	194,0,c	;volatile
  5183  00598C                     
  5184                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5185  00598C  82C2               	bsf	194,1,c	;volatile
  5186  00598E                     l35:
  5187  00598E  B2C2               	btfsc	194,1,c	;volatile
  5188  005990  EFCC  F02C         	goto	u6301
  5189  005994  EFCE  F02C         	goto	u6300
  5190  005998                     u6301:
  5191  005998  EFC7  F02C         	goto	l35
  5192  00599C                     u6300:
  5193  00599C                     
  5194                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5195  00599C  50C4               	movf	196,w,c	;volatile
  5196  00599E  6E04               	movwf	(??_readAdcValue+1)^0,c
  5197  0059A0  6A03               	clrf	??_readAdcValue^0,c
  5198  0059A2  50C3               	movf	195,w,c	;volatile
  5199  0059A4  2403               	addwf	??_readAdcValue^0,w,c
  5200  0059A6  6E06               	movwf	readAdcValue@adcValue^0,c
  5201  0059A8  0E00               	movlw	0
  5202  0059AA  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5203  0059AC  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5204  0059AE                     
  5205                           ;fs_adc.c: 43:     return adcValue;
  5206  0059AE  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5207  0059B2  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5208  0059B6  0012               	return		;funcret
  5209  0059B8                     __end_of_readAdcValue:
  5210                           	callstack 0
  5211                           
  5212 ;; *************** function _calculatedAverageValue *****************
  5213 ;; Defined at:
  5214 ;;		line 154 in file "fs_adc.c"
  5215 ;; Parameters:    Size  Location     Type
  5216 ;;		None
  5217 ;; Auto vars:     Size  Location     Type
  5218 ;;		None
  5219 ;; Return value:  Size  Location     Type
  5220 ;;                  1    wreg      void 
  5221 ;; Registers used:
  5222 ;;		wreg, status,2, status,0, cstack
  5223 ;; Tracked objects:
  5224 ;;		On entry : 0/0
  5225 ;;		On exit  : 0/0
  5226 ;;		Unchanged: 0/0
  5227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5228 ;;      Params:         0       0       0       0       0       0       0
  5229 ;;      Locals:         0       0       0       0       0       0       0
  5230 ;;      Temps:         24       0       0       0       0       0       0
  5231 ;;      Totals:        24       0       0       0       0       0       0
  5232 ;;Total ram usage:       24 bytes
  5233 ;; Hardware stack levels used:    1
  5234 ;; Hardware stack levels required when called:    2
  5235 ;; This function calls:
  5236 ;;		___lldiv
  5237 ;;		___lmul
  5238 ;;		___xxtofl
  5239 ;; This function is called by:
  5240 ;;		_startMotor
  5241 ;; This function uses a non-reentrant model
  5242 ;;
  5243                           
  5244                           	psect	text12
  5245  00378E                     __ptext12:
  5246                           	callstack 0
  5247  00378E                     _calculatedAverageValue:
  5248                           	callstack 25
  5249  00378E                     
  5250                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5251  00378E  0E00               	movlw	0
  5252  003790  0101               	movlb	1	; () banked
  5253  003792  6F83               	movwf	_driver_limit& (0+255),b
  5254  003794  0E00               	movlw	0
  5255  003796  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5256  003798  0E00               	movlw	0
  5257  00379A  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5258  00379C  0E00               	movlw	0
  5259  00379E  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5260                           
  5261                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5262  0037A0  0E00               	movlw	0
  5263  0037A2  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5264  0037A4  0E00               	movlw	0
  5265  0037A6  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5266  0037A8  0E00               	movlw	0
  5267  0037AA  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5268  0037AC  0E00               	movlw	0
  5269  0037AE  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5270                           
  5271                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5272  0037B0  0E00               	movlw	0
  5273  0037B2  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5274  0037B4  0E00               	movlw	0
  5275  0037B6  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5276  0037B8  0E00               	movlw	0
  5277  0037BA  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5278  0037BC  0E00               	movlw	0
  5279  0037BE  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5280  0037C0                     
  5281                           ; BSR set to: 1
  5282                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5283  0037C0  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5284  0037C4  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5285  0037C8  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5286  0037CC  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5287  0037D0  0EB8               	movlw	184
  5288  0037D2  6E05               	movwf	___lmul@multiplicand^0,c
  5289  0037D4  0E0B               	movlw	11
  5290  0037D6  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5291  0037D8  0E00               	movlw	0
  5292  0037DA  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5293  0037DC  0E00               	movlw	0
  5294  0037DE  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5295  0037E0  ECD2  F02A         	call	___lmul	;wreg free
  5296  0037E4  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5297  0037E8  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5298  0037EC  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5299  0037F0  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5300  0037F4  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5301  0037F8  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5302  0037FC  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5303  003800  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5304  003804  0ED0               	movlw	208
  5305  003806  6E05               	movwf	___lmul@multiplicand^0,c
  5306  003808  0E07               	movlw	7
  5307  00380A  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5308  00380C  0E00               	movlw	0
  5309  00380E  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5310  003810  0E00               	movlw	0
  5311  003812  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5312  003814  ECD2  F02A         	call	___lmul	;wreg free
  5313  003818  5001               	movf	?___lmul^0,w,c
  5314  00381A  241C               	addwf	??_calculatedAverageValue^0,w,c
  5315  00381C  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5316  00381E  5002               	movf	(?___lmul+1)^0,w,c
  5317  003820  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5318  003822  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5319  003824  5003               	movf	(?___lmul+2)^0,w,c
  5320  003826  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5321  003828  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5322  00382A  5004               	movf	(?___lmul+3)^0,w,c
  5323  00382C  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5324  00382E  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5325  003830  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5326  003834  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5327  003838  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5328  00383C  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5329  003840  0EE8               	movlw	232
  5330  003842  6E05               	movwf	___lmul@multiplicand^0,c
  5331  003844  0E03               	movlw	3
  5332  003846  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5333  003848  0E00               	movlw	0
  5334  00384A  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5335  00384C  0E00               	movlw	0
  5336  00384E  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5337  003850  ECD2  F02A         	call	___lmul	;wreg free
  5338  003854  5001               	movf	?___lmul^0,w,c
  5339  003856  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5340  003858  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5341  00385A  5002               	movf	(?___lmul+1)^0,w,c
  5342  00385C  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5343  00385E  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5344  003860  5003               	movf	(?___lmul+2)^0,w,c
  5345  003862  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5346  003864  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5347  003866  5004               	movf	(?___lmul+3)^0,w,c
  5348  003868  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5349  00386A  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5350  00386C  0101               	movlb	1	; () banked
  5351  00386E  5100               	movf	_convert_data& (0+255),w,b
  5352  003870  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5353  003872  6F83               	movwf	_driver_limit& (0+255),b
  5354  003874  5101               	movf	(_convert_data+1)& (0+255),w,b
  5355  003876  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5356  003878  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5357  00387A  5102               	movf	(_convert_data+2)& (0+255),w,b
  5358  00387C  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5359  00387E  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5360  003880  5103               	movf	(_convert_data+3)& (0+255),w,b
  5361  003882  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5362  003884  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5363  003886                     
  5364                           ; BSR set to: 1
  5365                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5366  003886  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5367  00388A  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5368  00388E  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5369  003892  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5370  003896  0E58               	movlw	88
  5371  003898  6E05               	movwf	___lmul@multiplicand^0,c
  5372  00389A  0E1B               	movlw	27
  5373  00389C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5374  00389E  0E00               	movlw	0
  5375  0038A0  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5376  0038A2  0E00               	movlw	0
  5377  0038A4  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5378  0038A6  ECD2  F02A         	call	___lmul	;wreg free
  5379  0038AA  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5380  0038AE  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5381  0038B2  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5382  0038B6  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5383  0038BA  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5384  0038BE  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5385  0038C2  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5386  0038C6  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5387  0038CA  0E70               	movlw	112
  5388  0038CC  6E05               	movwf	___lmul@multiplicand^0,c
  5389  0038CE  0E17               	movlw	23
  5390  0038D0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5391  0038D2  0E00               	movlw	0
  5392  0038D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5393  0038D6  0E00               	movlw	0
  5394  0038D8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5395  0038DA  ECD2  F02A         	call	___lmul	;wreg free
  5396  0038DE  5001               	movf	?___lmul^0,w,c
  5397  0038E0  241C               	addwf	??_calculatedAverageValue^0,w,c
  5398  0038E2  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5399  0038E4  5002               	movf	(?___lmul+1)^0,w,c
  5400  0038E6  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5401  0038E8  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5402  0038EA  5003               	movf	(?___lmul+2)^0,w,c
  5403  0038EC  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5404  0038EE  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5405  0038F0  5004               	movf	(?___lmul+3)^0,w,c
  5406  0038F2  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5407  0038F4  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5408  0038F6  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5409  0038FA  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5410  0038FE  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5411  003902  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5412  003906  0E88               	movlw	136
  5413  003908  6E05               	movwf	___lmul@multiplicand^0,c
  5414  00390A  0E13               	movlw	19
  5415  00390C  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5416  00390E  0E00               	movlw	0
  5417  003910  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5418  003912  0E00               	movlw	0
  5419  003914  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5420  003916  ECD2  F02A         	call	___lmul	;wreg free
  5421  00391A  5001               	movf	?___lmul^0,w,c
  5422  00391C  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5423  00391E  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5424  003920  5002               	movf	(?___lmul+1)^0,w,c
  5425  003922  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5426  003924  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5427  003926  5003               	movf	(?___lmul+2)^0,w,c
  5428  003928  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5429  00392A  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5430  00392C  5004               	movf	(?___lmul+3)^0,w,c
  5431  00392E  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5432  003930  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5433  003932  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5434  003936  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5435  00393A  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5436  00393E  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5437  003942  0EA0               	movlw	160
  5438  003944  6E05               	movwf	___lmul@multiplicand^0,c
  5439  003946  0E0F               	movlw	15
  5440  003948  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5441  00394A  0E00               	movlw	0
  5442  00394C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5443  00394E  0E00               	movlw	0
  5444  003950  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5445  003952  ECD2  F02A         	call	___lmul	;wreg free
  5446  003956  5001               	movf	?___lmul^0,w,c
  5447  003958  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5448  00395A  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5449  00395C  5002               	movf	(?___lmul+1)^0,w,c
  5450  00395E  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5451  003960  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5452  003962  5003               	movf	(?___lmul+2)^0,w,c
  5453  003964  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5454  003966  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5455  003968  5004               	movf	(?___lmul+3)^0,w,c
  5456  00396A  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5457  00396C  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5458  00396E  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5459  003970  0101               	movlb	1	; () banked
  5460  003972  2783               	addwf	_driver_limit& (0+255),f,b
  5461  003974  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5462  003976  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5463  003978  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5464  00397A  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5465  00397C  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5466  00397E  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5467  003980                     
  5468                           ; BSR set to: 1
  5469                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5470  003980  5108               	movf	(_convert_data+8)& (0+255),w,b
  5471  003982  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5472  003984  6E1C               	movwf	??_calculatedAverageValue^0,c
  5473  003986  5109               	movf	(_convert_data+9)& (0+255),w,b
  5474  003988  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5475  00398A  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5476  00398C  510A               	movf	(_convert_data+10)& (0+255),w,b
  5477  00398E  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5478  003990  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5479  003992  510B               	movf	(_convert_data+11)& (0+255),w,b
  5480  003994  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5481  003996  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5482  003998  510C               	movf	(_convert_data+12)& (0+255),w,b
  5483  00399A  241C               	addwf	??_calculatedAverageValue^0,w,c
  5484  00399C  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5485  00399E  510D               	movf	(_convert_data+13)& (0+255),w,b
  5486  0039A0  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5487  0039A2  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5488  0039A4  510E               	movf	(_convert_data+14)& (0+255),w,b
  5489  0039A6  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5490  0039A8  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5491  0039AA  510F               	movf	(_convert_data+15)& (0+255),w,b
  5492  0039AC  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5493  0039AE  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5494  0039B0  5110               	movf	(_convert_data+16)& (0+255),w,b
  5495  0039B2  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5496  0039B4  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5497  0039B6  5111               	movf	(_convert_data+17)& (0+255),w,b
  5498  0039B8  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5499  0039BA  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5500  0039BC  5112               	movf	(_convert_data+18)& (0+255),w,b
  5501  0039BE  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5502  0039C0  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5503  0039C2  5113               	movf	(_convert_data+19)& (0+255),w,b
  5504  0039C4  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5505  0039C6  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5506  0039C8  5114               	movf	(_convert_data+20)& (0+255),w,b
  5507  0039CA  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5508  0039CC  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5509  0039CE  5115               	movf	(_convert_data+21)& (0+255),w,b
  5510  0039D0  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5511  0039D2  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5512  0039D4  5116               	movf	(_convert_data+22)& (0+255),w,b
  5513  0039D6  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5514  0039D8  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5515  0039DA  5117               	movf	(_convert_data+23)& (0+255),w,b
  5516  0039DC  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5517  0039DE  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5518  0039E0  5118               	movf	(_convert_data+24)& (0+255),w,b
  5519  0039E2  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5520  0039E4  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5521  0039E6  5119               	movf	(_convert_data+25)& (0+255),w,b
  5522  0039E8  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5523  0039EA  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5524  0039EC  511A               	movf	(_convert_data+26)& (0+255),w,b
  5525  0039EE  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5526  0039F0  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5527  0039F2  511B               	movf	(_convert_data+27)& (0+255),w,b
  5528  0039F4  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5529  0039F6  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5530  0039F8  511C               	movf	(_convert_data+28)& (0+255),w,b
  5531  0039FA  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5532  0039FC  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5533  0039FE  511D               	movf	(_convert_data+29)& (0+255),w,b
  5534  003A00  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5535  003A02  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5536  003A04  511E               	movf	(_convert_data+30)& (0+255),w,b
  5537  003A06  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5538  003A08  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5539  003A0A  511F               	movf	(_convert_data+31)& (0+255),w,b
  5540  003A0C  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5541  003A0E  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5542  003A10  5100               	movf	_convert_data& (0+255),w,b
  5543  003A12  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5544  003A14  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5545  003A16  5101               	movf	(_convert_data+1)& (0+255),w,b
  5546  003A18  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5547  003A1A  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5548  003A1C  5102               	movf	(_convert_data+2)& (0+255),w,b
  5549  003A1E  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5550  003A20  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5551  003A22  5103               	movf	(_convert_data+3)& (0+255),w,b
  5552  003A24  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5553  003A26  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5554  003A28                     
  5555                           ; BSR set to: 1
  5556                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5557  003A28  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5558  003A2C  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5559  003A30  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5560  003A34  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5561  003A38  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5562  003A3C  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5563  003A40  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5564  003A44  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5565  003A48  EC45  F029         	call	___lldiv	;wreg free
  5566  003A4C  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5567  003A50  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5568  003A54  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5569  003A58  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5570  003A5C  0E00               	movlw	0
  5571  003A5E  EC96  F020         	call	___xxtofl
  5572  003A62  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5573  003A66  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5574  003A6A  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5575  003A6E  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5576  003A72  0012               	return		;funcret
  5577  003A74                     __end_of_calculatedAverageValue:
  5578                           	callstack 0
  5579                           
  5580 ;; *************** function ___lmul *****************
  5581 ;; Defined at:
  5582 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5583 ;; Parameters:    Size  Location     Type
  5584 ;;  multiplier      4    0[COMRAM] unsigned long 
  5585 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5586 ;; Auto vars:     Size  Location     Type
  5587 ;;  product         4    8[COMRAM] unsigned long 
  5588 ;; Return value:  Size  Location     Type
  5589 ;;                  4    0[COMRAM] unsigned long 
  5590 ;; Registers used:
  5591 ;;		wreg, status,2, status,0
  5592 ;; Tracked objects:
  5593 ;;		On entry : 0/0
  5594 ;;		On exit  : 0/0
  5595 ;;		Unchanged: 0/0
  5596 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5597 ;;      Params:         8       0       0       0       0       0       0
  5598 ;;      Locals:         4       0       0       0       0       0       0
  5599 ;;      Temps:          0       0       0       0       0       0       0
  5600 ;;      Totals:        12       0       0       0       0       0       0
  5601 ;;Total ram usage:       12 bytes
  5602 ;; Hardware stack levels used:    1
  5603 ;; Hardware stack levels required when called:    1
  5604 ;; This function calls:
  5605 ;;		Nothing
  5606 ;; This function is called by:
  5607 ;;		_calculatedAverageValue
  5608 ;; This function uses a non-reentrant model
  5609 ;;
  5610                           
  5611                           	psect	text13
  5612  0055A4                     __ptext13:
  5613                           	callstack 0
  5614  0055A4                     ___lmul:
  5615                           	callstack 25
  5616  0055A4  0E00               	movlw	0
  5617  0055A6  6E09               	movwf	___lmul@product^0,c
  5618  0055A8  0E00               	movlw	0
  5619  0055AA  6E0A               	movwf	(___lmul@product+1)^0,c
  5620  0055AC  0E00               	movlw	0
  5621  0055AE  6E0B               	movwf	(___lmul@product+2)^0,c
  5622  0055B0  0E00               	movlw	0
  5623  0055B2  6E0C               	movwf	(___lmul@product+3)^0,c
  5624  0055B4                     l5261:
  5625  0055B4  A001               	btfss	___lmul@multiplier^0,0,c
  5626  0055B6  EFDF  F02A         	goto	u6351
  5627  0055BA  EFE1  F02A         	goto	u6350
  5628  0055BE                     u6351:
  5629  0055BE  EFE9  F02A         	goto	l5265
  5630  0055C2                     u6350:
  5631  0055C2  5005               	movf	___lmul@multiplicand^0,w,c
  5632  0055C4  2609               	addwf	___lmul@product^0,f,c
  5633  0055C6  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5634  0055C8  220A               	addwfc	(___lmul@product+1)^0,f,c
  5635  0055CA  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5636  0055CC  220B               	addwfc	(___lmul@product+2)^0,f,c
  5637  0055CE  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5638  0055D0  220C               	addwfc	(___lmul@product+3)^0,f,c
  5639  0055D2                     l5265:
  5640  0055D2  90D8               	bcf	status,0,c
  5641  0055D4  3605               	rlcf	___lmul@multiplicand^0,f,c
  5642  0055D6  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5643  0055D8  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5644  0055DA  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5645  0055DC  90D8               	bcf	status,0,c
  5646  0055DE  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5647  0055E0  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5648  0055E2  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5649  0055E4  3201               	rrcf	___lmul@multiplier^0,f,c
  5650  0055E6  5001               	movf	___lmul@multiplier^0,w,c
  5651  0055E8  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5652  0055EA  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5653  0055EC  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5654  0055EE  A4D8               	btfss	status,2,c
  5655  0055F0  EFFC  F02A         	goto	u6361
  5656  0055F4  EFFE  F02A         	goto	u6360
  5657  0055F8                     u6361:
  5658  0055F8  EFDA  F02A         	goto	l5261
  5659  0055FC                     u6360:
  5660  0055FC  C009  F001         	movff	___lmul@product,?___lmul
  5661  005600  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5662  005604  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5663  005608  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5664  00560C  0012               	return		;funcret
  5665  00560E                     __end_of___lmul:
  5666                           	callstack 0
  5667                           
  5668 ;; *************** function ___lldiv *****************
  5669 ;; Defined at:
  5670 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5671 ;; Parameters:    Size  Location     Type
  5672 ;;  dividend        4    0[COMRAM] unsigned long 
  5673 ;;  divisor         4    4[COMRAM] unsigned long 
  5674 ;; Auto vars:     Size  Location     Type
  5675 ;;  quotient        4    8[COMRAM] unsigned long 
  5676 ;;  counter         1   12[COMRAM] unsigned char 
  5677 ;; Return value:  Size  Location     Type
  5678 ;;                  4    0[COMRAM] unsigned long 
  5679 ;; Registers used:
  5680 ;;		wreg, status,2, status,0
  5681 ;; Tracked objects:
  5682 ;;		On entry : 0/0
  5683 ;;		On exit  : 0/0
  5684 ;;		Unchanged: 0/0
  5685 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5686 ;;      Params:         8       0       0       0       0       0       0
  5687 ;;      Locals:         5       0       0       0       0       0       0
  5688 ;;      Temps:          0       0       0       0       0       0       0
  5689 ;;      Totals:        13       0       0       0       0       0       0
  5690 ;;Total ram usage:       13 bytes
  5691 ;; Hardware stack levels used:    1
  5692 ;; Hardware stack levels required when called:    1
  5693 ;; This function calls:
  5694 ;;		Nothing
  5695 ;; This function is called by:
  5696 ;;		_calculatedAverageValue
  5697 ;; This function uses a non-reentrant model
  5698 ;;
  5699                           
  5700                           	psect	text14
  5701  00528A                     __ptext14:
  5702                           	callstack 0
  5703  00528A                     ___lldiv:
  5704                           	callstack 25
  5705  00528A  0E00               	movlw	0
  5706  00528C  6E09               	movwf	___lldiv@quotient^0,c
  5707  00528E  0E00               	movlw	0
  5708  005290  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  5709  005292  0E00               	movlw	0
  5710  005294  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  5711  005296  0E00               	movlw	0
  5712  005298  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  5713  00529A  5005               	movf	___lldiv@divisor^0,w,c
  5714  00529C  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  5715  00529E  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  5716  0052A0  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  5717  0052A2  B4D8               	btfsc	status,2,c
  5718  0052A4  EF56  F029         	goto	u6371
  5719  0052A8  EF58  F029         	goto	u6370
  5720  0052AC                     u6371:
  5721  0052AC  EF8E  F029         	goto	l511
  5722  0052B0                     u6370:
  5723  0052B0  0E01               	movlw	1
  5724  0052B2  6E0D               	movwf	___lldiv@counter^0,c
  5725  0052B4  EF62  F029         	goto	l5277
  5726  0052B8                     l5275:
  5727  0052B8  90D8               	bcf	status,0,c
  5728  0052BA  3605               	rlcf	___lldiv@divisor^0,f,c
  5729  0052BC  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  5730  0052BE  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  5731  0052C0  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  5732  0052C2  2A0D               	incf	___lldiv@counter^0,f,c
  5733  0052C4                     l5277:
  5734  0052C4  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  5735  0052C6  EF67  F029         	goto	u6381
  5736  0052CA  EF69  F029         	goto	u6380
  5737  0052CE                     u6381:
  5738  0052CE  EF5C  F029         	goto	l5275
  5739  0052D2                     u6380:
  5740  0052D2                     l5279:
  5741  0052D2  90D8               	bcf	status,0,c
  5742  0052D4  3609               	rlcf	___lldiv@quotient^0,f,c
  5743  0052D6  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  5744  0052D8  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  5745  0052DA  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  5746  0052DC  5005               	movf	___lldiv@divisor^0,w,c
  5747  0052DE  5C01               	subwf	___lldiv@dividend^0,w,c
  5748  0052E0  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5749  0052E2  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  5750  0052E4  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5751  0052E6  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  5752  0052E8  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5753  0052EA  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  5754  0052EC  A0D8               	btfss	status,0,c
  5755  0052EE  EF7B  F029         	goto	u6391
  5756  0052F2  EF7D  F029         	goto	u6390
  5757  0052F6                     u6391:
  5758  0052F6  EF86  F029         	goto	l5287
  5759  0052FA                     u6390:
  5760  0052FA  5005               	movf	___lldiv@divisor^0,w,c
  5761  0052FC  5E01               	subwf	___lldiv@dividend^0,f,c
  5762  0052FE  5006               	movf	(___lldiv@divisor+1)^0,w,c
  5763  005300  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  5764  005302  5007               	movf	(___lldiv@divisor+2)^0,w,c
  5765  005304  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  5766  005306  5008               	movf	(___lldiv@divisor+3)^0,w,c
  5767  005308  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  5768  00530A  8009               	bsf	___lldiv@quotient^0,0,c
  5769  00530C                     l5287:
  5770  00530C  90D8               	bcf	status,0,c
  5771  00530E  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  5772  005310  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  5773  005312  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  5774  005314  3205               	rrcf	___lldiv@divisor^0,f,c
  5775  005316  2E0D               	decfsz	___lldiv@counter^0,f,c
  5776  005318  EF69  F029         	goto	l5279
  5777  00531C                     l511:
  5778  00531C  C009  F001         	movff	___lldiv@quotient,?___lldiv
  5779  005320  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  5780  005324  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  5781  005328  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  5782  00532C  0012               	return		;funcret
  5783  00532E                     __end_of___lldiv:
  5784                           	callstack 0
  5785                           
  5786 ;; *************** function _PWM2_setDC *****************
  5787 ;; Defined at:
  5788 ;;		line 59 in file "fs_pwm.c"
  5789 ;; Parameters:    Size  Location     Type
  5790 ;;  dutycycle       2   87[COMRAM] short 
  5791 ;; Auto vars:     Size  Location     Type
  5792 ;;  duty            2   91[COMRAM] unsigned short 
  5793 ;; Return value:  Size  Location     Type
  5794 ;;                  1    wreg      void 
  5795 ;; Registers used:
  5796 ;;		wreg, status,2, status,0, cstack
  5797 ;; Tracked objects:
  5798 ;;		On entry : 0/0
  5799 ;;		On exit  : 0/0
  5800 ;;		Unchanged: 0/0
  5801 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5802 ;;      Params:         2       0       0       0       0       0       0
  5803 ;;      Locals:         2       0       0       0       0       0       0
  5804 ;;      Temps:          2       0       0       0       0       0       0
  5805 ;;      Totals:         6       0       0       0       0       0       0
  5806 ;;Total ram usage:        6 bytes
  5807 ;; Hardware stack levels used:    1
  5808 ;; Hardware stack levels required when called:    2
  5809 ;; This function calls:
  5810 ;;		___fltol
  5811 ;;		___xxtofl
  5812 ;;		_fabsf
  5813 ;; This function is called by:
  5814 ;;		_main
  5815 ;;		_stopMotor
  5816 ;;		_startMotor
  5817 ;; This function uses a non-reentrant model
  5818 ;;
  5819                           
  5820                           	psect	text15
  5821  005442                     __ptext15:
  5822                           	callstack 0
  5823  005442                     _PWM2_setDC:
  5824                           	callstack 25
  5825  005442                     
  5826                           ;fs_pwm.c: 63:     if (dutycycle <= 1023)
  5827  005442  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  5828  005444  EF2D  F02A         	goto	u6720
  5829  005448  0E04               	movlw	4
  5830  00544A  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  5831  00544C  B0D8               	btfsc	status,0,c
  5832  00544E  EF2B  F02A         	goto	u6721
  5833  005452  EF2D  F02A         	goto	u6720
  5834  005456                     u6721:
  5835  005456  EF5D  F02A         	goto	l408
  5836  00545A                     u6720:
  5837  00545A                     
  5838                           ;fs_pwm.c: 64:     {;fs_pwm.c: 65:         duty = (uint16_t) fabsf(dutycycle);
  5839  00545A  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  5840  00545E  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  5841  005462  0E00               	movlw	0
  5842  005464  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5843  005466  0EFF               	movlw	-1
  5844  005468  6E10               	movwf	(___xxtofl@val+2)^0,c
  5845  00546A  6E11               	movwf	(___xxtofl@val+3)^0,c
  5846  00546C  0E01               	movlw	1
  5847  00546E  EC96  F020         	call	___xxtofl
  5848  005472  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5849  005476  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5850  00547A  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5851  00547E  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5852  005482  ECDF  F02D         	call	_fabsf	;wreg free
  5853  005486  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5854  00548A  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5855  00548E  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5856  005492  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5857  005496  EC02  F025         	call	___fltol	;wreg free
  5858  00549A  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  5859  00549E  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  5860  0054A2                     
  5861                           ;fs_pwm.c: 66:         CCPR2L = duty>>2;
  5862  0054A2  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  5863  0054A6  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  5864  0054AA  90D8               	bcf	status,0,c
  5865  0054AC  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5866  0054AE  325A               	rrcf	??_PWM2_setDC^0,f,c
  5867  0054B0  90D8               	bcf	status,0,c
  5868  0054B2  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  5869  0054B4  325A               	rrcf	??_PWM2_setDC^0,f,c
  5870  0054B6  505A               	movf	??_PWM2_setDC^0,w,c
  5871  0054B8  6E67               	movwf	103,c	;volatile
  5872  0054BA                     l408:
  5873  0054BA  0012               	return		;funcret
  5874  0054BC                     __end_of_PWM2_setDC:
  5875                           	callstack 0
  5876                           
  5877 ;; *************** function _PWM1_setDC *****************
  5878 ;; Defined at:
  5879 ;;		line 43 in file "fs_pwm.c"
  5880 ;; Parameters:    Size  Location     Type
  5881 ;;  dutycycle       2   87[COMRAM] short 
  5882 ;; Auto vars:     Size  Location     Type
  5883 ;;  duty            2   91[COMRAM] unsigned short 
  5884 ;; Return value:  Size  Location     Type
  5885 ;;                  1    wreg      void 
  5886 ;; Registers used:
  5887 ;;		wreg, status,2, status,0, cstack
  5888 ;; Tracked objects:
  5889 ;;		On entry : 0/0
  5890 ;;		On exit  : 0/0
  5891 ;;		Unchanged: 0/0
  5892 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5893 ;;      Params:         2       0       0       0       0       0       0
  5894 ;;      Locals:         2       0       0       0       0       0       0
  5895 ;;      Temps:          2       0       0       0       0       0       0
  5896 ;;      Totals:         6       0       0       0       0       0       0
  5897 ;;Total ram usage:        6 bytes
  5898 ;; Hardware stack levels used:    1
  5899 ;; Hardware stack levels required when called:    2
  5900 ;; This function calls:
  5901 ;;		___fltol
  5902 ;;		___xxtofl
  5903 ;;		_fabsf
  5904 ;; This function is called by:
  5905 ;;		_main
  5906 ;;		_stopMotor
  5907 ;;		_startMotor
  5908 ;; This function uses a non-reentrant model
  5909 ;;
  5910                           
  5911                           	psect	text16
  5912  0054BC                     __ptext16:
  5913                           	callstack 0
  5914  0054BC                     _PWM1_setDC:
  5915                           	callstack 25
  5916  0054BC                     
  5917                           ;fs_pwm.c: 47:     if (dutycycle <= 1023)
  5918  0054BC  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  5919  0054BE  EF6A  F02A         	goto	u6710
  5920  0054C2  0E04               	movlw	4
  5921  0054C4  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  5922  0054C6  B0D8               	btfsc	status,0,c
  5923  0054C8  EF68  F02A         	goto	u6711
  5924  0054CC  EF6A  F02A         	goto	u6710
  5925  0054D0                     u6711:
  5926  0054D0  EF9A  F02A         	goto	l404
  5927  0054D4                     u6710:
  5928  0054D4                     
  5929                           ;fs_pwm.c: 48:     {;fs_pwm.c: 49:         duty = (uint16_t) fabsf(dutycycle);
  5930  0054D4  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  5931  0054D8  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  5932  0054DC  0E00               	movlw	0
  5933  0054DE  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  5934  0054E0  0EFF               	movlw	-1
  5935  0054E2  6E10               	movwf	(___xxtofl@val+2)^0,c
  5936  0054E4  6E11               	movwf	(___xxtofl@val+3)^0,c
  5937  0054E6  0E01               	movlw	1
  5938  0054E8  EC96  F020         	call	___xxtofl
  5939  0054EC  C00E  F01C         	movff	?___xxtofl,fabsf@x
  5940  0054F0  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  5941  0054F4  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  5942  0054F8  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  5943  0054FC  ECDF  F02D         	call	_fabsf	;wreg free
  5944  005500  C01C  F04E         	movff	?_fabsf,___fltol@f1
  5945  005504  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  5946  005508  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  5947  00550C  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  5948  005510  EC02  F025         	call	___fltol	;wreg free
  5949  005514  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  5950  005518  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  5951  00551C                     
  5952                           ;fs_pwm.c: 50:         CCPR1L = duty>>2;
  5953  00551C  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  5954  005520  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  5955  005524  90D8               	bcf	status,0,c
  5956  005526  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5957  005528  325A               	rrcf	??_PWM1_setDC^0,f,c
  5958  00552A  90D8               	bcf	status,0,c
  5959  00552C  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  5960  00552E  325A               	rrcf	??_PWM1_setDC^0,f,c
  5961  005530  505A               	movf	??_PWM1_setDC^0,w,c
  5962  005532  6EBE               	movwf	190,c	;volatile
  5963  005534                     l404:
  5964  005534  0012               	return		;funcret
  5965  005536                     __end_of_PWM1_setDC:
  5966                           	callstack 0
  5967                           
  5968 ;; *************** function _fabsf *****************
  5969 ;; Defined at:
  5970 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  5971 ;; Parameters:    Size  Location     Type
  5972 ;;  x               4   27[COMRAM] float 
  5973 ;; Auto vars:     Size  Location     Type
  5974 ;;  u               4   31[COMRAM] struct .
  5975 ;; Return value:  Size  Location     Type
  5976 ;;                  4   27[COMRAM] float 
  5977 ;; Registers used:
  5978 ;;		status,2, status,0
  5979 ;; Tracked objects:
  5980 ;;		On entry : 0/0
  5981 ;;		On exit  : 0/0
  5982 ;;		Unchanged: 0/0
  5983 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5984 ;;      Params:         4       0       0       0       0       0       0
  5985 ;;      Locals:         4       0       0       0       0       0       0
  5986 ;;      Temps:          0       0       0       0       0       0       0
  5987 ;;      Totals:         8       0       0       0       0       0       0
  5988 ;;Total ram usage:        8 bytes
  5989 ;; Hardware stack levels used:    1
  5990 ;; Hardware stack levels required when called:    1
  5991 ;; This function calls:
  5992 ;;		Nothing
  5993 ;; This function is called by:
  5994 ;;		_PWM1_setDC
  5995 ;;		_PWM2_setDC
  5996 ;; This function uses a non-reentrant model
  5997 ;;
  5998                           
  5999                           	psect	text17
  6000  005BBE                     __ptext17:
  6001                           	callstack 0
  6002  005BBE                     _fabsf:
  6003                           	callstack 25
  6004  005BBE  C197  F020         	movff	fabsf@F463,fabsf@u
  6005  005BC2  C198  F021         	movff	fabsf@F463+1,fabsf@u+1
  6006  005BC6  C199  F022         	movff	fabsf@F463+2,fabsf@u+2
  6007  005BCA  C19A  F023         	movff	fabsf@F463+3,fabsf@u+3
  6008  005BCE  C01C  F020         	movff	fabsf@x,fabsf@u
  6009  005BD2  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  6010  005BD6  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  6011  005BDA  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  6012  005BDE  9E23               	bcf	(fabsf@u+3)^0,7,c
  6013  005BE0  C020  F01C         	movff	fabsf@u,?_fabsf
  6014  005BE4  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  6015  005BE8  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  6016  005BEC  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  6017  005BF0  0012               	return		;funcret
  6018  005BF2                     __end_of_fabsf:
  6019                           	callstack 0
  6020                           
  6021 ;; *************** function ___xxtofl *****************
  6022 ;; Defined at:
  6023 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  6024 ;; Parameters:    Size  Location     Type
  6025 ;;  sign            1    wreg     unsigned char 
  6026 ;;  val             4   13[COMRAM] long 
  6027 ;; Auto vars:     Size  Location     Type
  6028 ;;  sign            1   21[COMRAM] unsigned char 
  6029 ;;  arg             4   23[COMRAM] unsigned long 
  6030 ;;  exp             1   22[COMRAM] unsigned char 
  6031 ;; Return value:  Size  Location     Type
  6032 ;;                  4   13[COMRAM] unsigned char 
  6033 ;; Registers used:
  6034 ;;		wreg, status,2, status,0
  6035 ;; Tracked objects:
  6036 ;;		On entry : 0/0
  6037 ;;		On exit  : 0/0
  6038 ;;		Unchanged: 0/0
  6039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6040 ;;      Params:         4       0       0       0       0       0       0
  6041 ;;      Locals:         6       0       0       0       0       0       0
  6042 ;;      Temps:          4       0       0       0       0       0       0
  6043 ;;      Totals:        14       0       0       0       0       0       0
  6044 ;;Total ram usage:       14 bytes
  6045 ;; Hardware stack levels used:    1
  6046 ;; Hardware stack levels required when called:    1
  6047 ;; This function calls:
  6048 ;;		Nothing
  6049 ;; This function is called by:
  6050 ;;		_scanAdcConversion
  6051 ;;		_calculatedAverageValue
  6052 ;;		_PWM1_setDC
  6053 ;;		_PWM2_setDC
  6054 ;;		_speedControl
  6055 ;; This function uses a non-reentrant model
  6056 ;;
  6057                           
  6058                           	psect	text18
  6059  00412C                     __ptext18:
  6060                           	callstack 0
  6061  00412C                     ___xxtofl:
  6062                           	callstack 25
  6063                           
  6064                           ;incstack = 0
  6065                           ;___xxtofl@sign stored from wreg
  6066  00412C  6E16               	movwf	___xxtofl@sign^0,c
  6067  00412E  5016               	movf	___xxtofl@sign^0,w,c
  6068  004130  B4D8               	btfsc	status,2,c
  6069  004132  EF9D  F020         	goto	u6401
  6070  004136  EF9F  F020         	goto	u6400
  6071  00413A                     u6401:
  6072  00413A  EFC1  F020         	goto	l1139
  6073  00413E                     u6400:
  6074  00413E  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6075  004140  EFA6  F020         	goto	u6410
  6076  004144  EFA4  F020         	goto	u6411
  6077  004148                     u6411:
  6078  004148  EFC1  F020         	goto	l1139
  6079  00414C                     u6410:
  6080  00414C  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6081  004150  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6082  004154  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6083  004158  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6084  00415C  1E12               	comf	??___xxtofl^0,f,c
  6085  00415E  1E13               	comf	(??___xxtofl+1)^0,f,c
  6086  004160  1E14               	comf	(??___xxtofl+2)^0,f,c
  6087  004162  1E15               	comf	(??___xxtofl+3)^0,f,c
  6088  004164  2A12               	incf	??___xxtofl^0,f,c
  6089  004166  0E00               	movlw	0
  6090  004168  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6091  00416A  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6092  00416C  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6093  00416E  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6094  004172  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6095  004176  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6096  00417A  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6097  00417E  EFC9  F020         	goto	l5297
  6098  004182                     l1139:
  6099  004182  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6100  004186  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6101  00418A  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6102  00418E  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6103  004192                     l5297:
  6104  004192  500E               	movf	___xxtofl@val^0,w,c
  6105  004194  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6106  004196  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6107  004198  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6108  00419A  A4D8               	btfss	status,2,c
  6109  00419C  EFD2  F020         	goto	u6421
  6110  0041A0  EFD4  F020         	goto	u6420
  6111  0041A4                     u6421:
  6112  0041A4  EFDE  F020         	goto	l5303
  6113  0041A8                     u6420:
  6114  0041A8  0E00               	movlw	0
  6115  0041AA  6E0E               	movwf	?___xxtofl^0,c
  6116  0041AC  0E00               	movlw	0
  6117  0041AE  6E0F               	movwf	(?___xxtofl+1)^0,c
  6118  0041B0  0E00               	movlw	0
  6119  0041B2  6E10               	movwf	(?___xxtofl+2)^0,c
  6120  0041B4  0E00               	movlw	0
  6121  0041B6  6E11               	movwf	(?___xxtofl+3)^0,c
  6122  0041B8  EF6F  F021         	goto	l1142
  6123  0041BC                     l5303:
  6124  0041BC  0E96               	movlw	150
  6125  0041BE  6E17               	movwf	___xxtofl@exp^0,c
  6126  0041C0  EFE8  F020         	goto	l5307
  6127  0041C4                     l5305:
  6128  0041C4  2A17               	incf	___xxtofl@exp^0,f,c
  6129  0041C6  90D8               	bcf	status,0,c
  6130  0041C8  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6131  0041CA  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6132  0041CC  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6133  0041CE  3218               	rrcf	___xxtofl@arg^0,f,c
  6134  0041D0                     l5307:
  6135  0041D0  0E00               	movlw	0
  6136  0041D2  1418               	andwf	___xxtofl@arg^0,w,c
  6137  0041D4  6E12               	movwf	??___xxtofl^0,c
  6138  0041D6  0E00               	movlw	0
  6139  0041D8  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6140  0041DA  6E13               	movwf	(??___xxtofl+1)^0,c
  6141  0041DC  0E00               	movlw	0
  6142  0041DE  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6143  0041E0  6E14               	movwf	(??___xxtofl+2)^0,c
  6144  0041E2  0EFE               	movlw	254
  6145  0041E4  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6146  0041E6  6E15               	movwf	(??___xxtofl+3)^0,c
  6147  0041E8  5012               	movf	??___xxtofl^0,w,c
  6148  0041EA  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6149  0041EC  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6150  0041EE  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6151  0041F0  A4D8               	btfss	status,2,c
  6152  0041F2  EFFD  F020         	goto	u6431
  6153  0041F6  EFFF  F020         	goto	u6430
  6154  0041FA                     u6431:
  6155  0041FA  EFE2  F020         	goto	l5305
  6156  0041FE                     u6430:
  6157  0041FE  EF0D  F021         	goto	l1146
  6158  004202                     l5309:
  6159  004202  2A17               	incf	___xxtofl@exp^0,f,c
  6160  004204  0E01               	movlw	1
  6161  004206  2618               	addwf	___xxtofl@arg^0,f,c
  6162  004208  0E00               	movlw	0
  6163  00420A  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6164  00420C  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6165  00420E  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6166  004210  90D8               	bcf	status,0,c
  6167  004212  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6168  004214  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6169  004216  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6170  004218  3218               	rrcf	___xxtofl@arg^0,f,c
  6171  00421A                     l1146:
  6172  00421A  0E00               	movlw	0
  6173  00421C  1418               	andwf	___xxtofl@arg^0,w,c
  6174  00421E  6E12               	movwf	??___xxtofl^0,c
  6175  004220  0E00               	movlw	0
  6176  004222  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6177  004224  6E13               	movwf	(??___xxtofl+1)^0,c
  6178  004226  0E00               	movlw	0
  6179  004228  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6180  00422A  6E14               	movwf	(??___xxtofl+2)^0,c
  6181  00422C  0EFF               	movlw	255
  6182  00422E  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6183  004230  6E15               	movwf	(??___xxtofl+3)^0,c
  6184  004232  5012               	movf	??___xxtofl^0,w,c
  6185  004234  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6186  004236  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6187  004238  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6188  00423A  A4D8               	btfss	status,2,c
  6189  00423C  EF22  F021         	goto	u6441
  6190  004240  EF24  F021         	goto	u6440
  6191  004244                     u6441:
  6192  004244  EF01  F021         	goto	l5309
  6193  004248                     u6440:
  6194  004248  EF2C  F021         	goto	l5317
  6195  00424C                     l5315:
  6196  00424C  0617               	decf	___xxtofl@exp^0,f,c
  6197  00424E  90D8               	bcf	status,0,c
  6198  004250  3618               	rlcf	___xxtofl@arg^0,f,c
  6199  004252  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6200  004254  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6201  004256  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6202  004258                     l5317:
  6203  004258  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6204  00425A  EF31  F021         	goto	u6451
  6205  00425E  EF33  F021         	goto	u6450
  6206  004262                     u6451:
  6207  004262  EF3B  F021         	goto	l1153
  6208  004266                     u6450:
  6209  004266  0E02               	movlw	2
  6210  004268  6017               	cpfslt	___xxtofl@exp^0,c
  6211  00426A  EF39  F021         	goto	u6461
  6212  00426E  EF3B  F021         	goto	u6460
  6213  004272                     u6461:
  6214  004272  EF26  F021         	goto	l5315
  6215  004276                     u6460:
  6216  004276                     l1153:
  6217  004276  B017               	btfsc	___xxtofl@exp^0,0,c
  6218  004278  EF40  F021         	goto	u6471
  6219  00427C  EF42  F021         	goto	u6470
  6220  004280                     u6471:
  6221  004280  EF43  F021         	goto	l5323
  6222  004284                     u6470:
  6223  004284  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6224  004286                     l5323:
  6225  004286  90D8               	bcf	status,0,c
  6226  004288  3217               	rrcf	___xxtofl@exp^0,f,c
  6227  00428A  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6228  00428E  6A13               	clrf	(??___xxtofl+1)^0,c
  6229  004290  6A14               	clrf	(??___xxtofl+2)^0,c
  6230  004292  6A15               	clrf	(??___xxtofl+3)^0,c
  6231  004294  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6232  004298  6A14               	clrf	(??___xxtofl+2)^0,c
  6233  00429A  6A13               	clrf	(??___xxtofl+1)^0,c
  6234  00429C  6A12               	clrf	??___xxtofl^0,c
  6235  00429E  5012               	movf	??___xxtofl^0,w,c
  6236  0042A0  1218               	iorwf	___xxtofl@arg^0,f,c
  6237  0042A2  5013               	movf	(??___xxtofl+1)^0,w,c
  6238  0042A4  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6239  0042A6  5014               	movf	(??___xxtofl+2)^0,w,c
  6240  0042A8  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6241  0042AA  5015               	movf	(??___xxtofl+3)^0,w,c
  6242  0042AC  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6243  0042AE  5016               	movf	___xxtofl@sign^0,w,c
  6244  0042B0  B4D8               	btfsc	status,2,c
  6245  0042B2  EF5D  F021         	goto	u6481
  6246  0042B6  EF5F  F021         	goto	u6480
  6247  0042BA                     u6481:
  6248  0042BA  EF67  F021         	goto	l5333
  6249  0042BE                     u6480:
  6250  0042BE  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6251  0042C0  EF66  F021         	goto	u6490
  6252  0042C4  EF64  F021         	goto	u6491
  6253  0042C8                     u6491:
  6254  0042C8  EF67  F021         	goto	l5333
  6255  0042CC                     u6490:
  6256  0042CC  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6257  0042CE                     l5333:
  6258  0042CE  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6259  0042D2  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6260  0042D6  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6261  0042DA  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6262  0042DE                     l1142:
  6263  0042DE  0012               	return		;funcret
  6264  0042E0                     __end_of___xxtofl:
  6265                           	callstack 0
  6266                           
  6267 ;; *************** function _sprintf *****************
  6268 ;; Defined at:
  6269 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6270 ;; Parameters:    Size  Location     Type
  6271 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6272 ;;		 -> stateMachine@textCursor2(16), 
  6273 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6274 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6275 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
  6276 ;; Auto vars:     Size  Location     Type
  6277 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6278 ;;  ap              2  121[BANK0 ] PTR void [1]
  6279 ;;		 -> ?_sprintf(2), 
  6280 ;;  ret             2    0        int 
  6281 ;; Return value:  Size  Location     Type
  6282 ;;                  2  111[BANK0 ] int 
  6283 ;; Registers used:
  6284 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6285 ;; Tracked objects:
  6286 ;;		On entry : 0/0
  6287 ;;		On exit  : 0/0
  6288 ;;		Unchanged: 0/0
  6289 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6290 ;;      Params:         0       8       0       0       0       0       0
  6291 ;;      Locals:         0      10       0       0       0       0       0
  6292 ;;      Temps:          0       0       0       0       0       0       0
  6293 ;;      Totals:         0      18       0       0       0       0       0
  6294 ;;Total ram usage:       18 bytes
  6295 ;; Hardware stack levels used:    1
  6296 ;; Hardware stack levels required when called:    8
  6297 ;; This function calls:
  6298 ;;		_vfprintf
  6299 ;; This function is called by:
  6300 ;;		_stateMachine
  6301 ;; This function uses a non-reentrant model
  6302 ;;
  6303                           
  6304                           	psect	text19
  6305  005848                     __ptext19:
  6306                           	callstack 0
  6307  005848                     _sprintf:
  6308                           	callstack 20
  6309  005848  0ED3               	movlw	low (?_sprintf+4)
  6310  00584A  0100               	movlb	0	; () banked
  6311  00584C  6FD9               	movwf	sprintf@ap& (0+255),b
  6312  00584E  0E00               	movlw	high (?_sprintf+4)
  6313  005850  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6314  005852  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6315  005856  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6316  00585A                     
  6317                           ; BSR set to: 0
  6318  00585A  0E00               	movlw	0
  6319  00585C  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  6320  00585E  0E00               	movlw	0
  6321  005860  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  6322  005862                     
  6323                           ; BSR set to: 0
  6324  005862  0E00               	movlw	0
  6325  005864  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  6326  005866  0E00               	movlw	0
  6327  005868  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  6328  00586A                     
  6329                           ; BSR set to: 0
  6330  00586A  0EDB               	movlw	low sprintf@f
  6331  00586C  6FC7               	movwf	vfprintf@fp& (0+255),b
  6332  00586E  0E00               	movlw	high sprintf@f
  6333  005870  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  6334  005872  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  6335  005876  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  6336  00587A  0ED9               	movlw	low sprintf@ap
  6337  00587C  6FCB               	movwf	vfprintf@ap& (0+255),b
  6338  00587E  0E00               	movlw	high sprintf@ap
  6339  005880  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  6340  005882  EC07  F02B         	call	_vfprintf	;wreg free
  6341  005886  0100               	movlb	0	; () banked
  6342  005888  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  6343  00588A  25CF               	addwf	sprintf@s& (0+255),w,b
  6344  00588C  6ED9               	movwf	fsr2l,c
  6345  00588E  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  6346  005890  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  6347  005892  6EDA               	movwf	fsr2h,c
  6348  005894  0E00               	movlw	0
  6349  005896  6EDF               	movwf	indf2,c
  6350  005898                     
  6351                           ; BSR set to: 0
  6352  005898  0012               	return		;funcret
  6353  00589A                     __end_of_sprintf:
  6354                           	callstack 0
  6355                           
  6356 ;; *************** function _vfprintf *****************
  6357 ;; Defined at:
  6358 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6359 ;; Parameters:    Size  Location     Type
  6360 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  6361 ;;		 -> sprintf@f(6), 
  6362 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  6363 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6364 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
  6365 ;;  ap              2  107[BANK0 ] PTR PTR void 
  6366 ;;		 -> sprintf@ap(2), 
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  6369 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
  6370 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
  6371 ;; Return value:  Size  Location     Type
  6372 ;;                  2  103[BANK0 ] int 
  6373 ;; Registers used:
  6374 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6375 ;; Tracked objects:
  6376 ;;		On entry : 0/0
  6377 ;;		On exit  : 0/0
  6378 ;;		Unchanged: 0/0
  6379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6380 ;;      Params:         0       6       0       0       0       0       0
  6381 ;;      Locals:         0       2       0       0       0       0       0
  6382 ;;      Temps:          0       0       0       0       0       0       0
  6383 ;;      Totals:         0       8       0       0       0       0       0
  6384 ;;Total ram usage:        8 bytes
  6385 ;; Hardware stack levels used:    1
  6386 ;; Hardware stack levels required when called:    7
  6387 ;; This function calls:
  6388 ;;		_vfpfcnvrt
  6389 ;; This function is called by:
  6390 ;;		_sprintf
  6391 ;; This function uses a non-reentrant model
  6392 ;;
  6393                           
  6394                           	psect	text20
  6395  00560E                     __ptext20:
  6396                           	callstack 0
  6397  00560E                     _vfprintf:
  6398                           	callstack 20
  6399  00560E                     
  6400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  6401  00560E  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  6402  005612  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  6403  005616                     
  6404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  6405  005616  0E00               	movlw	0
  6406  005618  0101               	movlb	1	; () banked
  6407  00561A  6F9F               	movwf	(_nout+1)& (0+255),b
  6408  00561C  0E00               	movlw	0
  6409  00561E  6F9E               	movwf	_nout& (0+255),b
  6410                           
  6411                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6412  005620  EF29  F02B         	goto	l5607
  6413  005624                     l5605:
  6414                           
  6415                           ; BSR set to: 1
  6416                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  6417  005624  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  6418  005628  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  6419  00562C  0ECD               	movlw	low vfprintf@cfmt
  6420  00562E  0100               	movlb	0	; () banked
  6421  005630  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  6422  005632  0E00               	movlw	high vfprintf@cfmt
  6423  005634  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  6424  005636  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  6425  00563A  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  6426  00563E  EC6A  F012         	call	_vfpfcnvrt	;wreg free
  6427  005642  0100               	movlb	0	; () banked
  6428  005644  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  6429  005646  0101               	movlb	1	; () banked
  6430  005648  279E               	addwf	_nout& (0+255),f,b
  6431  00564A  0100               	movlb	0	; () banked
  6432  00564C  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  6433  00564E  0101               	movlb	1	; () banked
  6434  005650  239F               	addwfc	(_nout+1)& (0+255),f,b
  6435  005652                     l5607:
  6436                           
  6437                           ; BSR set to: 1
  6438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  6439  005652  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  6440  005656  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  6441  00565A                     	if	0	;tblptru may be non-zero
  6442  00565A                     	endif
  6443  00565A                     	if	0	;tblptru may be non-zero
  6444  00565A                     	endif
  6445  00565A  0008               	tblrd		*
  6446  00565C  50F5               	movf	tablat,w,c
  6447  00565E  0900               	iorlw	0
  6448  005660  A4D8               	btfss	status,2,c
  6449  005662  EF35  F02B         	goto	u6771
  6450  005666  EF37  F02B         	goto	u6770
  6451  00566A                     u6771:
  6452  00566A  EF12  F02B         	goto	l5605
  6453  00566E                     u6770:
  6454  00566E                     
  6455                           ; BSR set to: 1
  6456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  6457  00566E  C19E  F0C7         	movff	_nout,?_vfprintf
  6458  005672  C19F  F0C8         	movff	_nout+1,?_vfprintf+1
  6459  005676                     
  6460                           ; BSR set to: 1
  6461  005676  0012               	return		;funcret
  6462  005678                     __end_of_vfprintf:
  6463                           	callstack 0
  6464                           
  6465 ;; *************** function _vfpfcnvrt *****************
  6466 ;; Defined at:
  6467 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  6468 ;; Parameters:    Size  Location     Type
  6469 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  6470 ;;		 -> sprintf@f(6), 
  6471 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  6472 ;;		 -> vfprintf@cfmt(2), 
  6473 ;;  ap              2   75[BANK0 ] PTR PTR void 
  6474 ;;		 -> sprintf@ap(2), 
  6475 ;; Auto vars:     Size  Location     Type
  6476 ;;  ll              8   81[BANK0 ] long long 
  6477 ;;  llu             8    0        unsigned long long 
  6478 ;;  f               4   95[BANK0 ] unsigned long long 
  6479 ;;  ct              3   99[BANK0 ] unsigned char [3]
  6480 ;;  vp              3    0        PTR void 
  6481 ;;  cp              3    0        PTR unsigned char 
  6482 ;;  i               2    0        int 
  6483 ;;  done            2    0        int 
  6484 ;;  c               1  102[BANK0 ] unsigned char 
  6485 ;; Return value:  Size  Location     Type
  6486 ;;                  2   71[BANK0 ] int 
  6487 ;; Registers used:
  6488 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6489 ;; Tracked objects:
  6490 ;;		On entry : 0/0
  6491 ;;		On exit  : 0/0
  6492 ;;		Unchanged: 0/0
  6493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6494 ;;      Params:         0       6       0       0       0       0       0
  6495 ;;      Locals:         0      22       0       0       0       0       0
  6496 ;;      Temps:          0       4       0       0       0       0       0
  6497 ;;      Totals:         0      32       0       0       0       0       0
  6498 ;;Total ram usage:       32 bytes
  6499 ;; Hardware stack levels used:    1
  6500 ;; Hardware stack levels required when called:    6
  6501 ;; This function calls:
  6502 ;;		_atoi
  6503 ;;		_dtoa
  6504 ;;		_efgtoa
  6505 ;;		_fputc
  6506 ;;		_isdigit
  6507 ;;		_isupper
  6508 ;;		_strncmp
  6509 ;;		_tolower
  6510 ;; This function is called by:
  6511 ;;		_vfprintf
  6512 ;; This function uses a non-reentrant model
  6513 ;;
  6514                           
  6515                           	psect	text21
  6516  0024D4                     __ptext21:
  6517                           	callstack 0
  6518  0024D4                     _vfpfcnvrt:
  6519                           	callstack 20
  6520  0024D4                     
  6521                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  6522  0024D4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6523  0024D8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6524  0024DC  CFDE FFF6          	movff	postinc2,tblptrl
  6525  0024E0  CFDD FFF7          	movff	postdec2,tblptrh
  6526  0024E4                     	if	0	;tblptru may be non-zero
  6527  0024E4                     	endif
  6528  0024E4                     	if	0	;tblptru may be non-zero
  6529  0024E4                     	endif
  6530  0024E4  0008               	tblrd		*
  6531  0024E6  50F5               	movf	tablat,w,c
  6532  0024E8  0A25               	xorlw	37
  6533  0024EA  A4D8               	btfss	status,2,c
  6534  0024EC  EF7A  F012         	goto	u6501
  6535  0024F0  EF7C  F012         	goto	u6500
  6536  0024F4                     u6501:
  6537  0024F4  EF69  F015         	goto	l5447
  6538  0024F8                     u6500:
  6539  0024F8                     
  6540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  6541  0024F8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6542  0024FC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6543  002500  2ADE               	incf	postinc2,f,c
  6544  002502  0E00               	movlw	0
  6545  002504  22DD               	addwfc	postdec2,f,c
  6546  002506                     
  6547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  6548  002506  0E00               	movlw	0
  6549  002508  0101               	movlb	1	; () banked
  6550  00250A  6FA1               	movwf	(_width+1)& (0+255),b
  6551  00250C  0E00               	movlw	0
  6552  00250E  6FA0               	movwf	_width& (0+255),b
  6553  002510  C1A0  F1A4         	movff	_width,_flags
  6554  002514  C1A1  F1A5         	movff	_width+1,_flags+1
  6555  002518                     
  6556                           ; BSR set to: 1
  6557                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  6558  002518  69A2               	setf	_prec& (0+255),b
  6559  00251A  69A3               	setf	(_prec+1)& (0+255),b
  6560  00251C                     
  6561                           ; BSR set to: 1
  6562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  6563  00251C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6564  002520  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6565  002524  CFDE FFF6          	movff	postinc2,tblptrl
  6566  002528  CFDD FFF7          	movff	postdec2,tblptrh
  6567  00252C                     	if	0	;tblptru may be non-zero
  6568  00252C                     	endif
  6569  00252C                     	if	0	;tblptru may be non-zero
  6570  00252C                     	endif
  6571  00252C  0008               	tblrd		*
  6572  00252E  50F5               	movf	tablat,w,c
  6573  002530  0A2A               	xorlw	42
  6574  002532  A4D8               	btfss	status,2,c
  6575  002534  EF9E  F012         	goto	u6511
  6576  002538  EFA0  F012         	goto	u6510
  6577  00253C                     u6511:
  6578  00253C  EFC9  F012         	goto	l5353
  6579  002540                     u6510:
  6580  002540                     
  6581                           ; BSR set to: 1
  6582                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  6583  002540  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6584  002544  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6585  002548  2ADE               	incf	postinc2,f,c
  6586  00254A  0E00               	movlw	0
  6587  00254C  22DD               	addwfc	postdec2,f,c
  6588                           
  6589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  6590  00254E  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6591  002552  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6592  002556  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6593  00255A  0E02               	movlw	2
  6594  00255C  26DE               	addwf	postinc2,f,c
  6595  00255E  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6596  002562  0E00               	movlw	0
  6597  002564  22DD               	addwfc	postdec2,f,c
  6598  002566  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6599  00256A  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6600  00256E  CFDE F1A0          	movff	postinc2,_width
  6601  002572  CFDD F1A1          	movff	postdec2,_width+1
  6602  002576                     
  6603                           ; BSR set to: 1
  6604                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  6605  002576  BFA1               	btfsc	(_width+1)& (0+255),7,b
  6606  002578  EFC2  F012         	goto	u6520
  6607  00257C  EFC0  F012         	goto	u6521
  6608  002580                     u6521:
  6609  002580  EF0D  F013         	goto	l5363
  6610  002584                     u6520:
  6611  002584                     
  6612                           ; BSR set to: 1
  6613                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  6614  002584  81A4               	bsf	_flags& (0+255),0,b
  6615                           
  6616                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  6617  002586  6DA0               	negf	_width& (0+255),b
  6618  002588  1FA1               	comf	(_width+1)& (0+255),f,b
  6619  00258A  B0D8               	btfsc	status,0,c
  6620  00258C  2BA1               	incf	(_width+1)& (0+255),f,b
  6621  00258E  EF0D  F013         	goto	l5363
  6622  002592                     l5353:
  6623                           
  6624                           ; BSR set to: 1
  6625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  6626  002592  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6627  002596  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6628  00259A  CFDE F008          	movff	postinc2,atoi@s
  6629  00259E  CFDD F009          	movff	postdec2,atoi@s+1
  6630  0025A2  EC70  F021         	call	_atoi	;wreg free
  6631  0025A6  C008  F1A0         	movff	?_atoi,_width
  6632  0025AA  C009  F1A1         	movff	?_atoi+1,_width+1
  6633                           
  6634                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6635  0025AE  EFE0  F012         	goto	l5357
  6636  0025B2                     l5355:
  6637                           
  6638                           ; BSR set to: 0
  6639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  6640  0025B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6641  0025B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6642  0025BA  2ADE               	incf	postinc2,f,c
  6643  0025BC  0E00               	movlw	0
  6644  0025BE  22DD               	addwfc	postdec2,f,c
  6645  0025C0                     l5357:
  6646  0025C0  0ED0               	movlw	208
  6647  0025C2  0100               	movlb	0	; () banked
  6648  0025C4  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6649  0025C6  0EFF               	movlw	255
  6650  0025C8  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6651  0025CA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6652  0025CE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6653  0025D2  CFDE FFF6          	movff	postinc2,tblptrl
  6654  0025D6  CFDD FFF7          	movff	postdec2,tblptrh
  6655  0025DA                     	if	0	;tblptru may be non-zero
  6656  0025DA                     	endif
  6657  0025DA                     	if	0	;tblptru may be non-zero
  6658  0025DA                     	endif
  6659  0025DA  0008               	tblrd		*
  6660  0025DC  50F5               	movf	tablat,w,c
  6661  0025DE  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6662  0025E0  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6663  0025E2  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6664  0025E4  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6665  0025E6  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6666  0025E8  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6667  0025EA  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6668  0025EC  E10A               	bnz	u6530
  6669  0025EE  0E0A               	movlw	10
  6670  0025F0  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6671  0025F2  A0D8               	btfss	status,0,c
  6672  0025F4  EFFE  F012         	goto	u6531
  6673  0025F8  EF01  F013         	goto	u6530
  6674  0025FC                     u6531:
  6675  0025FC  0E01               	movlw	1
  6676  0025FE  EF02  F013         	goto	u6540
  6677  002602                     u6530:
  6678  002602  0E00               	movlw	0
  6679  002604                     u6540:
  6680  002604  6FB9               	movwf	_vfpfcnvrt$2528& (0+255),b
  6681  002606  6BBA               	clrf	(_vfpfcnvrt$2528+1)& (0+255),b
  6682  002608                     
  6683                           ; BSR set to: 0
  6684  002608  51B9               	movf	_vfpfcnvrt$2528& (0+255),w,b
  6685  00260A  11BA               	iorwf	(_vfpfcnvrt$2528+1)& (0+255),w,b
  6686  00260C  A4D8               	btfss	status,2,c
  6687  00260E  EF0B  F013         	goto	u6551
  6688  002612  EF0D  F013         	goto	u6550
  6689  002616                     u6551:
  6690  002616  EFD9  F012         	goto	l5355
  6691  00261A                     u6550:
  6692  00261A                     l5363:
  6693                           
  6694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  6695  00261A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6696  00261E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6697  002622  CFDE FFF6          	movff	postinc2,tblptrl
  6698  002626  CFDD FFF7          	movff	postdec2,tblptrh
  6699  00262A                     	if	0	;tblptru may be non-zero
  6700  00262A                     	endif
  6701  00262A                     	if	0	;tblptru may be non-zero
  6702  00262A                     	endif
  6703  00262A  0008               	tblrd		*
  6704  00262C  50F5               	movf	tablat,w,c
  6705  00262E  0A2E               	xorlw	46
  6706  002630  A4D8               	btfss	status,2,c
  6707  002632  EF1D  F013         	goto	u6561
  6708  002636  EF1F  F013         	goto	u6560
  6709  00263A                     u6561:
  6710  00263A  EF9E  F013         	goto	l5383
  6711  00263E                     u6560:
  6712  00263E                     
  6713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  6714  00263E  0E00               	movlw	0
  6715  002640  0101               	movlb	1	; () banked
  6716  002642  6FA3               	movwf	(_prec+1)& (0+255),b
  6717  002644  0E00               	movlw	0
  6718  002646  6FA2               	movwf	_prec& (0+255),b
  6719  002648                     
  6720                           ; BSR set to: 1
  6721                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  6722  002648  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6723  00264C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6724  002650  2ADE               	incf	postinc2,f,c
  6725  002652  0E00               	movlw	0
  6726  002654  22DD               	addwfc	postdec2,f,c
  6727  002656                     
  6728                           ; BSR set to: 1
  6729                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  6730  002656  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6731  00265A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6732  00265E  CFDE FFF6          	movff	postinc2,tblptrl
  6733  002662  CFDD FFF7          	movff	postdec2,tblptrh
  6734  002666                     	if	0	;tblptru may be non-zero
  6735  002666                     	endif
  6736  002666                     	if	0	;tblptru may be non-zero
  6737  002666                     	endif
  6738  002666  0008               	tblrd		*
  6739  002668  50F5               	movf	tablat,w,c
  6740  00266A  0A2A               	xorlw	42
  6741  00266C  A4D8               	btfss	status,2,c
  6742  00266E  EF3B  F013         	goto	u6571
  6743  002672  EF3D  F013         	goto	u6570
  6744  002676                     u6571:
  6745  002676  EF5A  F013         	goto	l5373
  6746  00267A                     u6570:
  6747  00267A                     
  6748                           ; BSR set to: 1
  6749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  6750  00267A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6751  00267E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6752  002682  2ADE               	incf	postinc2,f,c
  6753  002684  0E00               	movlw	0
  6754  002686  22DD               	addwfc	postdec2,f,c
  6755                           
  6756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  6757  002688  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6758  00268C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6759  002690  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6760  002694  0E02               	movlw	2
  6761  002696  26DE               	addwf	postinc2,f,c
  6762  002698  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6763  00269C  0E00               	movlw	0
  6764  00269E  22DD               	addwfc	postdec2,f,c
  6765  0026A0  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6766  0026A4  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6767  0026A8  CFDE F1A2          	movff	postinc2,_prec
  6768  0026AC  CFDD F1A3          	movff	postdec2,_prec+1
  6769                           
  6770                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  6771  0026B0  EF9E  F013         	goto	l5383
  6772  0026B4                     l5373:
  6773                           
  6774                           ; BSR set to: 1
  6775                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  6776  0026B4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6777  0026B8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6778  0026BC  CFDE F008          	movff	postinc2,atoi@s
  6779  0026C0  CFDD F009          	movff	postdec2,atoi@s+1
  6780  0026C4  EC70  F021         	call	_atoi	;wreg free
  6781  0026C8  C008  F1A2         	movff	?_atoi,_prec
  6782  0026CC  C009  F1A3         	movff	?_atoi+1,_prec+1
  6783                           
  6784                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  6785  0026D0  EF71  F013         	goto	l5377
  6786  0026D4                     l5375:
  6787                           
  6788                           ; BSR set to: 0
  6789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  6790  0026D4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6791  0026D8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6792  0026DC  2ADE               	incf	postinc2,f,c
  6793  0026DE  0E00               	movlw	0
  6794  0026E0  22DD               	addwfc	postdec2,f,c
  6795  0026E2                     l5377:
  6796  0026E2  0ED0               	movlw	208
  6797  0026E4  0100               	movlb	0	; () banked
  6798  0026E6  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  6799  0026E8  0EFF               	movlw	255
  6800  0026EA  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  6801  0026EC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6802  0026F0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6803  0026F4  CFDE FFF6          	movff	postinc2,tblptrl
  6804  0026F8  CFDD FFF7          	movff	postdec2,tblptrh
  6805  0026FC                     	if	0	;tblptru may be non-zero
  6806  0026FC                     	endif
  6807  0026FC                     	if	0	;tblptru may be non-zero
  6808  0026FC                     	endif
  6809  0026FC  0008               	tblrd		*
  6810  0026FE  50F5               	movf	tablat,w,c
  6811  002700  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  6812  002702  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  6813  002704  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  6814  002706  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  6815  002708  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  6816  00270A  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  6817  00270C  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  6818  00270E  E10A               	bnz	u6580
  6819  002710  0E0A               	movlw	10
  6820  002712  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  6821  002714  A0D8               	btfss	status,0,c
  6822  002716  EF8F  F013         	goto	u6581
  6823  00271A  EF92  F013         	goto	u6580
  6824  00271E                     u6581:
  6825  00271E  0E01               	movlw	1
  6826  002720  EF93  F013         	goto	u6590
  6827  002724                     u6580:
  6828  002724  0E00               	movlw	0
  6829  002726                     u6590:
  6830  002726  6FBB               	movwf	_vfpfcnvrt$2529& (0+255),b
  6831  002728  6BBC               	clrf	(_vfpfcnvrt$2529+1)& (0+255),b
  6832  00272A                     
  6833                           ; BSR set to: 0
  6834  00272A  51BB               	movf	_vfpfcnvrt$2529& (0+255),w,b
  6835  00272C  11BC               	iorwf	(_vfpfcnvrt$2529+1)& (0+255),w,b
  6836  00272E  A4D8               	btfss	status,2,c
  6837  002730  EF9C  F013         	goto	u6601
  6838  002734  EF9E  F013         	goto	u6600
  6839  002738                     u6601:
  6840  002738  EF6A  F013         	goto	l5375
  6841  00273C                     u6600:
  6842  00273C                     l5383:
  6843                           
  6844                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  6845  00273C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6846  002740  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6847  002744  CFDE FFF6          	movff	postinc2,tblptrl
  6848  002748  CFDD FFF7          	movff	postdec2,tblptrh
  6849  00274C                     	if	0	;tblptru may be non-zero
  6850  00274C                     	endif
  6851  00274C                     	if	0	;tblptru may be non-zero
  6852  00274C                     	endif
  6853  00274C  0008               	tblrd		*
  6854  00274E  50F5               	movf	tablat,w,c
  6855  002750  6E07               	movwf	tolower@c^0,c
  6856  002752  6A08               	clrf	(tolower@c+1)^0,c
  6857  002754  EC6F  F02B         	call	_tolower	;wreg free
  6858  002758  5007               	movf	?_tolower^0,w,c
  6859  00275A  0100               	movlb	0	; () banked
  6860  00275C  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  6861  00275E                     
  6862                           ; BSR set to: 0
  6863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  6864  00275E  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  6865  002760  B4D8               	btfsc	status,2,c
  6866  002762  EFB5  F013         	goto	u6611
  6867  002766  EFB7  F013         	goto	u6610
  6868  00276A                     u6611:
  6869  00276A  EFF1  F013         	goto	l5393
  6870  00276E                     u6610:
  6871  00276E                     
  6872                           ; BSR set to: 0
  6873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  6874  00276E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6875  002772  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6876  002776  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6877  00277A  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6878  00277E  0E01               	movlw	1
  6879  002780  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6880  002782  0E00               	movlw	0
  6881  002784  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6882  002786  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6883  00278A  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6884  00278E                     	if	0	;tblptru may be non-zero
  6885  00278E                     	endif
  6886  00278E                     	if	0	;tblptru may be non-zero
  6887  00278E                     	endif
  6888  00278E  0008               	tblrd		*
  6889  002790  50F5               	movf	tablat,w,c
  6890  002792  6E07               	movwf	tolower@c^0,c
  6891  002794  6A08               	clrf	(tolower@c+1)^0,c
  6892  002796  EC6F  F02B         	call	_tolower	;wreg free
  6893  00279A  5007               	movf	?_tolower^0,w,c
  6894  00279C  0100               	movlb	0	; () banked
  6895  00279E  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  6896  0027A0                     
  6897                           ; BSR set to: 0
  6898                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  6899  0027A0  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  6900  0027A2  B4D8               	btfsc	status,2,c
  6901  0027A4  EFD6  F013         	goto	u6621
  6902  0027A8  EFD8  F013         	goto	u6620
  6903  0027AC                     u6621:
  6904  0027AC  EFF1  F013         	goto	l5393
  6905  0027B0                     u6620:
  6906  0027B0                     
  6907                           ; BSR set to: 0
  6908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  6909  0027B0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6910  0027B4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6911  0027B8  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  6912  0027BC  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  6913  0027C0  0E02               	movlw	2
  6914  0027C2  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  6915  0027C4  0E00               	movlw	0
  6916  0027C6  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  6917  0027C8  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  6918  0027CC  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  6919  0027D0                     	if	0	;tblptru may be non-zero
  6920  0027D0                     	endif
  6921  0027D0                     	if	0	;tblptru may be non-zero
  6922  0027D0                     	endif
  6923  0027D0  0008               	tblrd		*
  6924  0027D2  50F5               	movf	tablat,w,c
  6925  0027D4  6E07               	movwf	tolower@c^0,c
  6926  0027D6  6A08               	clrf	(tolower@c+1)^0,c
  6927  0027D8  EC6F  F02B         	call	_tolower	;wreg free
  6928  0027DC  5007               	movf	?_tolower^0,w,c
  6929  0027DE  0100               	movlb	0	; () banked
  6930  0027E0  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  6931  0027E2                     l5393:
  6932                           
  6933                           ; BSR set to: 0
  6934                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  6935  0027E2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6936  0027E6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6937  0027EA  CFDE FFF6          	movff	postinc2,tblptrl
  6938  0027EE  CFDD FFF7          	movff	postdec2,tblptrh
  6939  0027F2                     	if	0	;tblptru may be non-zero
  6940  0027F2                     	endif
  6941  0027F2                     	if	0	;tblptru may be non-zero
  6942  0027F2                     	endif
  6943  0027F2  0008               	tblrd		*
  6944  0027F4  50F5               	movf	tablat,w,c
  6945  0027F6  0A64               	xorlw	100
  6946  0027F8  B4D8               	btfsc	status,2,c
  6947  0027FA  EF01  F014         	goto	u6631
  6948  0027FE  EF03  F014         	goto	u6630
  6949  002802                     u6631:
  6950  002802  EF15  F014         	goto	l5397
  6951  002806                     u6630:
  6952  002806                     
  6953                           ; BSR set to: 0
  6954  002806  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6955  00280A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6956  00280E  CFDE FFF6          	movff	postinc2,tblptrl
  6957  002812  CFDD FFF7          	movff	postdec2,tblptrh
  6958  002816                     	if	0	;tblptru may be non-zero
  6959  002816                     	endif
  6960  002816                     	if	0	;tblptru may be non-zero
  6961  002816                     	endif
  6962  002816  0008               	tblrd		*
  6963  002818  50F5               	movf	tablat,w,c
  6964  00281A  0A69               	xorlw	105
  6965  00281C  A4D8               	btfss	status,2,c
  6966  00281E  EF13  F014         	goto	u6641
  6967  002822  EF15  F014         	goto	u6640
  6968  002826                     u6641:
  6969  002826  EF55  F014         	goto	l5403
  6970  00282A                     u6640:
  6971  00282A                     l5397:
  6972                           
  6973                           ; BSR set to: 0
  6974                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  6975  00282A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  6976  00282E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  6977  002832  2ADE               	incf	postinc2,f,c
  6978  002834  0E00               	movlw	0
  6979  002836  22DD               	addwfc	postdec2,f,c
  6980                           
  6981                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  6982  002838  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  6983  00283C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  6984  002840  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  6985  002844  0E02               	movlw	2
  6986  002846  26DE               	addwf	postinc2,f,c
  6987  002848  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  6988  00284C  0E00               	movlw	0
  6989  00284E  22DD               	addwfc	postdec2,f,c
  6990  002850  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  6991  002854  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  6992  002858  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  6993  00285C  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  6994  002860  0E00               	movlw	0
  6995  002862  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  6996  002864  0EFF               	movlw	-1
  6997  002866  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  6998  002868  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  6999  00286A  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7000  00286C  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7001  00286E  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7002  002870  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7003  002872                     
  7004                           ; BSR set to: 0
  7005                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  7006  002872  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7007  002876  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7008  00287A  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7009  00287E  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7010  002882  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7011  002886  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7012  00288A  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7013  00288E  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7014  002892  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7015  002896  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7016  00289A  EC3A  F01D         	call	_dtoa	;wreg free
  7017  00289E  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  7018  0028A2  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7019  0028A6  EF84  F015         	goto	l1361
  7020  0028AA                     l5403:
  7021                           
  7022                           ; BSR set to: 0
  7023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  7024  0028AA  0E66               	movlw	102
  7025  0028AC  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  7026  0028AE  A4D8               	btfss	status,2,c
  7027  0028B0  EF5C  F014         	goto	u6651
  7028  0028B4  EF5E  F014         	goto	u6650
  7029  0028B8                     u6651:
  7030  0028B8  EF9E  F014         	goto	l5415
  7031  0028BC                     u6650:
  7032  0028BC                     
  7033                           ; BSR set to: 0
  7034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  7035  0028BC  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7036  0028C0  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7037  0028C4  CFDE FFF6          	movff	postinc2,tblptrl
  7038  0028C8  CFDD FFF7          	movff	postdec2,tblptrh
  7039  0028CC                     	if	0	;tblptru may be non-zero
  7040  0028CC                     	endif
  7041  0028CC                     	if	0	;tblptru may be non-zero
  7042  0028CC                     	endif
  7043  0028CC  0008               	tblrd		*
  7044  0028CE  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7045  0028D2                     
  7046                           ; BSR set to: 0
  7047                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  7048  0028D2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7049  0028D6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7050  0028DA  2ADE               	incf	postinc2,f,c
  7051  0028DC  0E00               	movlw	0
  7052  0028DE  22DD               	addwfc	postdec2,f,c
  7053  0028E0                     
  7054                           ; BSR set to: 0
  7055                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7056  0028E0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7057  0028E4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7058  0028E8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7059  0028EC  0E04               	movlw	4
  7060  0028EE  26DE               	addwf	postinc2,f,c
  7061  0028F0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7062  0028F4  0E00               	movlw	0
  7063  0028F6  22DD               	addwfc	postdec2,f,c
  7064  0028F8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7065  0028FC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7066  002900  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7067  002904  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7068  002908  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7069  00290C  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7070  002910                     l5411:
  7071                           
  7072                           ; BSR set to: 0
  7073                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7074  002910  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7075  002914  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7076  002918  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7077  00291C  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7078  002920  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7079  002924  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7080  002928  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7081  00292C  EC74  F003         	call	_efgtoa	;wreg free
  7082  002930  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7083  002934  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7084  002938  EF84  F015         	goto	l1361
  7085  00293C                     l5415:
  7086                           
  7087                           ; BSR set to: 0
  7088                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7089  00293C  0EC3               	movlw	low vfpfcnvrt@ct
  7090  00293E  6E01               	movwf	strncmp@_l^0,c
  7091  002940  0E00               	movlw	high vfpfcnvrt@ct
  7092  002942  6E02               	movwf	(strncmp@_l+1)^0,c
  7093  002944  0EE4               	movlw	low STR_25
  7094  002946  6E03               	movwf	strncmp@_r^0,c
  7095  002948  0E06               	movlw	high STR_25
  7096  00294A  6E04               	movwf	(strncmp@_r+1)^0,c
  7097  00294C  0E00               	movlw	0
  7098  00294E  6E06               	movwf	(strncmp@n+1)^0,c
  7099  002950  0E02               	movlw	2
  7100  002952  6E05               	movwf	strncmp@n^0,c
  7101  002954  EC03  F027         	call	_strncmp	;wreg free
  7102  002958  5001               	movf	?_strncmp^0,w,c
  7103  00295A  1002               	iorwf	(?_strncmp+1)^0,w,c
  7104  00295C  A4D8               	btfss	status,2,c
  7105  00295E  EFB3  F014         	goto	u6661
  7106  002962  EFB5  F014         	goto	u6660
  7107  002966                     u6661:
  7108  002966  EF31  F015         	goto	l5431
  7109  00296A                     u6660:
  7110  00296A                     
  7111                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7112  00296A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7113  00296E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7114  002972  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7115  002976  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7116  00297A  0E01               	movlw	1
  7117  00297C  0100               	movlb	0	; () banked
  7118  00297E  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7119  002980  0E00               	movlw	0
  7120  002982  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7121  002984  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7122  002988  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7123  00298C                     	if	0	;tblptru may be non-zero
  7124  00298C                     	endif
  7125  00298C                     	if	0	;tblptru may be non-zero
  7126  00298C                     	endif
  7127  00298C  0008               	tblrd		*
  7128  00298E  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7129  002992  0EBF               	movlw	191
  7130  002994  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7131  002996  0EFF               	movlw	255
  7132  002998  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7133  00299A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7134  00299E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7135  0029A2  CFDE FFF6          	movff	postinc2,tblptrl
  7136  0029A6  CFDD FFF7          	movff	postdec2,tblptrh
  7137  0029AA                     	if	0	;tblptru may be non-zero
  7138  0029AA                     	endif
  7139  0029AA                     	if	0	;tblptru may be non-zero
  7140  0029AA                     	endif
  7141  0029AA  0008               	tblrd		*
  7142  0029AC  50F5               	movf	tablat,w,c
  7143  0029AE  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7144  0029B0  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7145  0029B2  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7146  0029B4  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7147  0029B6  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7148  0029B8  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7149  0029BA  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7150  0029BC  E10A               	bnz	u6670
  7151  0029BE  0E1A               	movlw	26
  7152  0029C0  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7153  0029C2  A0D8               	btfss	status,0,c
  7154  0029C4  EFE6  F014         	goto	u6671
  7155  0029C8  EFE9  F014         	goto	u6670
  7156  0029CC                     u6671:
  7157  0029CC  0E01               	movlw	1
  7158  0029CE  EFEA  F014         	goto	u6680
  7159  0029D2                     u6670:
  7160  0029D2  0E00               	movlw	0
  7161  0029D4                     u6680:
  7162  0029D4  6FBD               	movwf	_vfpfcnvrt$2534& (0+255),b
  7163  0029D6  6BBE               	clrf	(_vfpfcnvrt$2534+1)& (0+255),b
  7164  0029D8                     
  7165                           ; BSR set to: 0
  7166  0029D8  51BD               	movf	_vfpfcnvrt$2534& (0+255),w,b
  7167  0029DA  11BE               	iorwf	(_vfpfcnvrt$2534+1)& (0+255),w,b
  7168  0029DC  B4D8               	btfsc	status,2,c
  7169  0029DE  EFF3  F014         	goto	u6691
  7170  0029E2  EFF5  F014         	goto	u6690
  7171  0029E6                     u6691:
  7172  0029E6  EF0F  F015         	goto	l5425
  7173  0029EA                     u6690:
  7174  0029EA                     
  7175                           ; BSR set to: 0
  7176                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7177  0029EA  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7178  0029EE  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7179  0029F2  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7180  0029F6  0E04               	movlw	4
  7181  0029F8  26DE               	addwf	postinc2,f,c
  7182  0029FA  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7183  0029FE  0E00               	movlw	0
  7184  002A00  22DD               	addwfc	postdec2,f,c
  7185  002A02  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7186  002A06  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7187  002A0A  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7188  002A0E  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7189  002A12  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7190  002A16  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7191                           
  7192                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7193  002A1A  EF27  F015         	goto	l1369
  7194  002A1E                     l5425:
  7195                           
  7196                           ; BSR set to: 0
  7197                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7198  002A1E  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7199  002A22  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7200  002A26  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7201  002A2A  0E04               	movlw	4
  7202  002A2C  26DE               	addwf	postinc2,f,c
  7203  002A2E  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7204  002A32  0E00               	movlw	0
  7205  002A34  22DD               	addwfc	postdec2,f,c
  7206  002A36  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7207  002A3A  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7208  002A3E  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7209  002A42  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7210  002A46  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7211  002A4A  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7212  002A4E                     l1369:
  7213                           
  7214                           ; BSR set to: 0
  7215                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7216  002A4E  0E02               	movlw	2
  7217  002A50  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7218  002A54  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7219  002A58  26DE               	addwf	postinc2,f,c
  7220  002A5A  0E00               	movlw	0
  7221  002A5C  22DD               	addwfc	postdec2,f,c
  7222  002A5E  EF88  F014         	goto	l5411
  7223  002A62                     l5431:
  7224                           
  7225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7226  002A62  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7227  002A66  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7228  002A6A  CFDE FFF6          	movff	postinc2,tblptrl
  7229  002A6E  CFDD FFF7          	movff	postdec2,tblptrh
  7230  002A72                     	if	0	;tblptru may be non-zero
  7231  002A72                     	endif
  7232  002A72                     	if	0	;tblptru may be non-zero
  7233  002A72                     	endif
  7234  002A72  0008               	tblrd		*
  7235  002A74  50F5               	movf	tablat,w,c
  7236  002A76  0A25               	xorlw	37
  7237  002A78  A4D8               	btfss	status,2,c
  7238  002A7A  EF41  F015         	goto	u6701
  7239  002A7E  EF43  F015         	goto	u6700
  7240  002A82                     u6701:
  7241  002A82  EF5B  F015         	goto	l5441
  7242  002A86                     u6700:
  7243  002A86                     
  7244                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7245  002A86  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7246  002A8A  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7247  002A8E  2ADE               	incf	postinc2,f,c
  7248  002A90  0E00               	movlw	0
  7249  002A92  22DD               	addwfc	postdec2,f,c
  7250  002A94                     
  7251                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7252  002A94  0E00               	movlw	0
  7253  002A96  6E02               	movwf	(fputc@c+1)^0,c
  7254  002A98  0E25               	movlw	37
  7255  002A9A  6E01               	movwf	fputc@c^0,c
  7256  002A9C  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7257  002AA0  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7258  002AA4  EC6E  F027         	call	_fputc	;wreg free
  7259  002AA8                     l5437:
  7260                           
  7261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7262  002AA8  0E00               	movlw	0
  7263  002AAA  0100               	movlb	0	; () banked
  7264  002AAC  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7265  002AAE  0E01               	movlw	1
  7266  002AB0  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7267  002AB2  EF84  F015         	goto	l1361
  7268  002AB6                     l5441:
  7269                           
  7270                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7271  002AB6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7272  002ABA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7273  002ABE  2ADE               	incf	postinc2,f,c
  7274  002AC0  0E00               	movlw	0
  7275  002AC2  22DD               	addwfc	postdec2,f,c
  7276  002AC4                     
  7277                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7278  002AC4  0E00               	movlw	0
  7279  002AC6  0100               	movlb	0	; () banked
  7280  002AC8  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7281  002ACA  0E00               	movlw	0
  7282  002ACC  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7283  002ACE  EF84  F015         	goto	l1361
  7284  002AD2                     l5447:
  7285                           
  7286                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7287  002AD2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7288  002AD6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7289  002ADA  CFDE FFF6          	movff	postinc2,tblptrl
  7290  002ADE  CFDD FFF7          	movff	postdec2,tblptrh
  7291  002AE2                     	if	0	;tblptru may be non-zero
  7292  002AE2                     	endif
  7293  002AE2                     	if	0	;tblptru may be non-zero
  7294  002AE2                     	endif
  7295  002AE2  0008               	tblrd		*
  7296  002AE4  50F5               	movf	tablat,w,c
  7297  002AE6  6E01               	movwf	fputc@c^0,c
  7298  002AE8  6A02               	clrf	(fputc@c+1)^0,c
  7299  002AEA  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7300  002AEE  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7301  002AF2  EC6E  F027         	call	_fputc	;wreg free
  7302  002AF6                     
  7303                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7304  002AF6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7305  002AFA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7306  002AFE  2ADE               	incf	postinc2,f,c
  7307  002B00  0E00               	movlw	0
  7308  002B02  22DD               	addwfc	postdec2,f,c
  7309  002B04  EF54  F015         	goto	l5437
  7310  002B08                     l1361:
  7311  002B08  0012               	return		;funcret
  7312  002B0A                     __end_of_vfpfcnvrt:
  7313                           	callstack 0
  7314                           
  7315 ;; *************** function _strncmp *****************
  7316 ;; Defined at:
  7317 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  7318 ;; Parameters:    Size  Location     Type
  7319 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  7320 ;;		 -> vfpfcnvrt@ct(3), 
  7321 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  7322 ;;		 -> STR_27(3), 
  7323 ;;  n               2    4[COMRAM] unsigned int 
  7324 ;; Auto vars:     Size  Location     Type
  7325 ;;  r               2    9[COMRAM] PTR const unsigned char 
  7326 ;;		 -> STR_27(3), 
  7327 ;;  l               2    7[COMRAM] PTR const unsigned char 
  7328 ;;		 -> vfpfcnvrt@ct(3), 
  7329 ;; Return value:  Size  Location     Type
  7330 ;;                  2    0[COMRAM] int 
  7331 ;; Registers used:
  7332 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  7333 ;; Tracked objects:
  7334 ;;		On entry : 0/0
  7335 ;;		On exit  : 0/0
  7336 ;;		Unchanged: 0/0
  7337 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7338 ;;      Params:         6       0       0       0       0       0       0
  7339 ;;      Locals:         4       0       0       0       0       0       0
  7340 ;;      Temps:          1       0       0       0       0       0       0
  7341 ;;      Totals:        11       0       0       0       0       0       0
  7342 ;;Total ram usage:       11 bytes
  7343 ;; Hardware stack levels used:    1
  7344 ;; Hardware stack levels required when called:    1
  7345 ;; This function calls:
  7346 ;;		Nothing
  7347 ;; This function is called by:
  7348 ;;		_vfpfcnvrt
  7349 ;; This function uses a non-reentrant model
  7350 ;;
  7351                           
  7352                           	psect	text22
  7353  004E06                     __ptext22:
  7354                           	callstack 0
  7355  004E06                     _strncmp:
  7356                           	callstack 24
  7357  004E06  C001  F008         	movff	strncmp@_l,strncmp@l
  7358  004E0A  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  7359  004E0E  C003  F00A         	movff	strncmp@_r,strncmp@r
  7360  004E12  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  7361  004E16  0605               	decf	strncmp@n^0,f,c
  7362  004E18  A0D8               	btfss	status,0,c
  7363  004E1A  0606               	decf	(strncmp@n+1)^0,f,c
  7364  004E1C  2805               	incf	strncmp@n^0,w,c
  7365  004E1E  E106               	bnz	u6251
  7366  004E20  2806               	incf	(strncmp@n+1)^0,w,c
  7367  004E22  A4D8               	btfss	status,2,c
  7368  004E24  EF16  F027         	goto	u6251
  7369  004E28  EF18  F027         	goto	u6250
  7370  004E2C                     u6251:
  7371  004E2C  EF25  F027         	goto	l5209
  7372  004E30                     u6250:
  7373  004E30  0E00               	movlw	0
  7374  004E32  6E02               	movwf	(?_strncmp+1)^0,c
  7375  004E34  0E00               	movlw	0
  7376  004E36  6E01               	movwf	?_strncmp^0,c
  7377  004E38  EF6D  F027         	goto	l1497
  7378  004E3C                     l5207:
  7379  004E3C  4A08               	infsnz	strncmp@l^0,f,c
  7380  004E3E  2A09               	incf	(strncmp@l+1)^0,f,c
  7381  004E40  4A0A               	infsnz	strncmp@r^0,f,c
  7382  004E42  2A0B               	incf	(strncmp@r+1)^0,f,c
  7383  004E44  0605               	decf	strncmp@n^0,f,c
  7384  004E46  A0D8               	btfss	status,0,c
  7385  004E48  0606               	decf	(strncmp@n+1)^0,f,c
  7386  004E4A                     l5209:
  7387  004E4A  C008  FFD9         	movff	strncmp@l,fsr2l
  7388  004E4E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7389  004E52  50DF               	movf	indf2,w,c
  7390  004E54  B4D8               	btfsc	status,2,c
  7391  004E56  EF2F  F027         	goto	u6261
  7392  004E5A  EF31  F027         	goto	u6260
  7393  004E5E                     u6261:
  7394  004E5E  EF5C  F027         	goto	l5217
  7395  004E62                     u6260:
  7396  004E62  C00A  FFF6         	movff	strncmp@r,tblptrl
  7397  004E66  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7398  004E6A                     	if	0	;tblptru may be non-zero
  7399  004E6A                     	endif
  7400  004E6A                     	if	0	;tblptru may be non-zero
  7401  004E6A                     	endif
  7402  004E6A  0008               	tblrd		*
  7403  004E6C  50F5               	movf	tablat,w,c
  7404  004E6E  0900               	iorlw	0
  7405  004E70  B4D8               	btfsc	status,2,c
  7406  004E72  EF3D  F027         	goto	u6271
  7407  004E76  EF3F  F027         	goto	u6270
  7408  004E7A                     u6271:
  7409  004E7A  EF5C  F027         	goto	l5217
  7410  004E7E                     u6270:
  7411  004E7E  5005               	movf	strncmp@n^0,w,c
  7412  004E80  1006               	iorwf	(strncmp@n+1)^0,w,c
  7413  004E82  B4D8               	btfsc	status,2,c
  7414  004E84  EF46  F027         	goto	u6281
  7415  004E88  EF48  F027         	goto	u6280
  7416  004E8C                     u6281:
  7417  004E8C  EF5C  F027         	goto	l5217
  7418  004E90                     u6280:
  7419  004E90  C008  FFD9         	movff	strncmp@l,fsr2l
  7420  004E94  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7421  004E98  50DF               	movf	indf2,w,c
  7422  004E9A  6E07               	movwf	??_strncmp^0,c
  7423  004E9C  C00A  FFF6         	movff	strncmp@r,tblptrl
  7424  004EA0  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7425  004EA4                     	if	0	;tblptru may be non-zero
  7426  004EA4                     	endif
  7427  004EA4                     	if	0	;tblptru may be non-zero
  7428  004EA4                     	endif
  7429  004EA4  0008               	tblrd		*
  7430  004EA6  50F5               	movf	tablat,w,c
  7431  004EA8  1807               	xorwf	??_strncmp^0,w,c
  7432  004EAA  B4D8               	btfsc	status,2,c
  7433  004EAC  EF5A  F027         	goto	u6291
  7434  004EB0  EF5C  F027         	goto	u6290
  7435  004EB4                     u6291:
  7436  004EB4  EF1E  F027         	goto	l5207
  7437  004EB8                     u6290:
  7438  004EB8                     l5217:
  7439  004EB8  C008  FFD9         	movff	strncmp@l,fsr2l
  7440  004EBC  C009  FFDA         	movff	strncmp@l+1,fsr2h
  7441  004EC0  50DF               	movf	indf2,w,c
  7442  004EC2  6E07               	movwf	??_strncmp^0,c
  7443  004EC4  C00A  FFF6         	movff	strncmp@r,tblptrl
  7444  004EC8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  7445  004ECC                     	if	0	;tblptru may be non-zero
  7446  004ECC                     	endif
  7447  004ECC                     	if	0	;tblptru may be non-zero
  7448  004ECC                     	endif
  7449  004ECC  0008               	tblrd		*
  7450  004ECE  50F5               	movf	tablat,w,c
  7451  004ED0  5C07               	subwf	??_strncmp^0,w,c
  7452  004ED2  6E01               	movwf	?_strncmp^0,c
  7453  004ED4  6A02               	clrf	(?_strncmp+1)^0,c
  7454  004ED6  A0D8               	btfss	status,0,c
  7455  004ED8  0602               	decf	(?_strncmp+1)^0,f,c
  7456  004EDA                     l1497:
  7457  004EDA  0012               	return		;funcret
  7458  004EDC                     __end_of_strncmp:
  7459                           	callstack 0
  7460                           
  7461 ;; *************** function _efgtoa *****************
  7462 ;; Defined at:
  7463 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7464 ;; Parameters:    Size  Location     Type
  7465 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  7466 ;;		 -> sprintf@f(6), 
  7467 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  7468 ;;  c               1   93[COMRAM] unsigned char 
  7469 ;; Auto vars:     Size  Location     Type
  7470 ;;  u               4   67[BANK0 ] unsigned char 
  7471 ;;  g               4   59[BANK0 ] unsigned char 
  7472 ;;  l               4   53[BANK0 ] unsigned char 
  7473 ;;  h               4   49[BANK0 ] unsigned char 
  7474 ;;  ou              4   15[BANK0 ] unsigned char 
  7475 ;;  n               2   65[BANK0 ] int 
  7476 ;;  e               2   63[BANK0 ] int 
  7477 ;;  i               2   57[BANK0 ] int 
  7478 ;;  w               2   46[BANK0 ] int 
  7479 ;;  p               2   43[BANK0 ] int 
  7480 ;;  sign            2   41[BANK0 ] int 
  7481 ;;  d               2   39[BANK0 ] int 
  7482 ;;  ne              2   37[BANK0 ] int 
  7483 ;;  m               2   35[BANK0 ] int 
  7484 ;;  pp              2   33[BANK0 ] int 
  7485 ;;  t               2   31[BANK0 ] int 
  7486 ;;  mode            1   48[BANK0 ] unsigned char 
  7487 ;;  nmode           1   45[BANK0 ] unsigned char 
  7488 ;; Return value:  Size  Location     Type
  7489 ;;                  2   87[COMRAM] int 
  7490 ;; Registers used:
  7491 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7492 ;; Tracked objects:
  7493 ;;		On entry : 0/0
  7494 ;;		On exit  : 0/0
  7495 ;;		Unchanged: 0/0
  7496 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7497 ;;      Params:         7       0       0       0       0       0       0
  7498 ;;      Locals:         0      56       0       0       0       0       0
  7499 ;;      Temps:          0       5       0       0       0       0       0
  7500 ;;      Totals:         7      61       0       0       0       0       0
  7501 ;;Total ram usage:       68 bytes
  7502 ;; Hardware stack levels used:    1
  7503 ;; Hardware stack levels required when called:    5
  7504 ;; This function calls:
  7505 ;;		___awdiv
  7506 ;;		___awmod
  7507 ;;		___fladd
  7508 ;;		___fldiv
  7509 ;;		___fleq
  7510 ;;		___flge
  7511 ;;		___flmul
  7512 ;;		___flneg
  7513 ;;		___flsub
  7514 ;;		___fltol
  7515 ;;		___fpclassifyf
  7516 ;;		_floorf
  7517 ;;		_isupper
  7518 ;;		_pad
  7519 ;;		_strcpy
  7520 ;;		_tolower
  7521 ;; This function is called by:
  7522 ;;		_vfpfcnvrt
  7523 ;; This function uses a non-reentrant model
  7524 ;;
  7525                           
  7526                           	psect	text23
  7527  0006E8                     __ptext23:
  7528                           	callstack 0
  7529  0006E8                     _efgtoa:
  7530                           	callstack 20
  7531  0006E8                     
  7532                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  7533  0006E8  0E00               	movlw	0
  7534  0006EA  0100               	movlb	0	; () banked
  7535  0006EC  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7536  0006EE  0E00               	movlw	0
  7537  0006F0  6F89               	movwf	efgtoa@sign& (0+255),b
  7538  0006F2                     
  7539                           ; BSR set to: 0
  7540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  7541  0006F2  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  7542  0006F6  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  7543  0006FA  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  7544  0006FE  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  7545  000702                     
  7546                           ; BSR set to: 0
  7547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  7548  000702  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  7549  000704  EF88  F003         	goto	u5660
  7550  000708  EF86  F003         	goto	u5661
  7551  00070C                     u5661:
  7552  00070C  EF9E  F003         	goto	l4871
  7553  000710                     u5660:
  7554  000710                     
  7555                           ; BSR set to: 0
  7556                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  7557  000710  0E00               	movlw	0
  7558  000712  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  7559  000714  0E01               	movlw	1
  7560  000716  6F89               	movwf	efgtoa@sign& (0+255),b
  7561  000718                     
  7562                           ; BSR set to: 0
  7563                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  7564  000718  C09B  F001         	movff	efgtoa@g,___flneg@f1
  7565  00071C  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  7566  000720  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  7567  000724  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  7568  000728  EC55  F02D         	call	___flneg	;wreg free
  7569  00072C  C001  F09B         	movff	?___flneg,efgtoa@g
  7570  000730  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  7571  000734  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  7572  000738  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  7573  00073C                     l4871:
  7574                           
  7575                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  7576  00073C  0E00               	movlw	0
  7577  00073E  0100               	movlb	0	; () banked
  7578  000740  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  7579  000742  0E00               	movlw	0
  7580  000744  6FA1               	movwf	efgtoa@n& (0+255),b
  7581  000746                     
  7582                           ; BSR set to: 0
  7583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  7584  000746  C1A0  F08E         	movff	_width,efgtoa@w
  7585  00074A  C1A1  F08F         	movff	_width+1,efgtoa@w+1
  7586  00074E                     
  7587                           ; BSR set to: 0
  7588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  7589  00074E  5189               	movf	efgtoa@sign& (0+255),w,b
  7590  000750  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7591  000752  A4D8               	btfss	status,2,c
  7592  000754  EFAE  F003         	goto	u5671
  7593  000758  EFB0  F003         	goto	u5670
  7594  00075C                     u5671:
  7595  00075C  EFB8  F003         	goto	l4879
  7596  000760                     u5670:
  7597  000760                     
  7598                           ; BSR set to: 0
  7599  000760  0101               	movlb	1	; () banked
  7600  000762  A5A4               	btfss	_flags& (0+255),2,b
  7601  000764  EFB6  F003         	goto	u5681
  7602  000768  EFB8  F003         	goto	u5680
  7603  00076C                     u5681:
  7604  00076C  EFD3  F003         	goto	l4891
  7605  000770                     u5680:
  7606  000770                     l4879:
  7607                           
  7608                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  7609  000770  0100               	movlb	0	; () banked
  7610  000772  5189               	movf	efgtoa@sign& (0+255),w,b
  7611  000774  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  7612  000776  A4D8               	btfss	status,2,c
  7613  000778  EFC0  F003         	goto	u5691
  7614  00077C  EFC2  F003         	goto	u5690
  7615  000780                     u5691:
  7616  000780  EFC8  F003         	goto	l4883
  7617  000784                     u5690:
  7618  000784                     
  7619                           ; BSR set to: 0
  7620  000784  0E00               	movlw	0
  7621  000786  6F74               	movwf	(_efgtoa$2503+1)& (0+255),b
  7622  000788  0E2B               	movlw	43
  7623  00078A  6F73               	movwf	_efgtoa$2503& (0+255),b
  7624  00078C  EFCC  F003         	goto	l4885
  7625  000790                     l4883:
  7626                           
  7627                           ; BSR set to: 0
  7628  000790  0E00               	movlw	0
  7629  000792  6F74               	movwf	(_efgtoa$2503+1)& (0+255),b
  7630  000794  0E2D               	movlw	45
  7631  000796  6F73               	movwf	_efgtoa$2503& (0+255),b
  7632  000798                     l4885:
  7633                           
  7634                           ; BSR set to: 0
  7635  000798  C073  F200         	movff	_efgtoa$2503,_dbuf
  7636  00079C                     
  7637                           ; BSR set to: 0
  7638                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  7639  00079C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  7640  00079E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  7641  0007A0                     
  7642                           ; BSR set to: 0
  7643                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  7644  0007A0  078E               	decf	efgtoa@w& (0+255),f,b
  7645  0007A2  A0D8               	btfss	status,0,c
  7646  0007A4  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  7647  0007A6                     l4891:
  7648                           
  7649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7650  0007A6  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7651  0007AA  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7652  0007AE  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7653  0007B2  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7654  0007B6  EC07  F026         	call	___fpclassifyf	;wreg free
  7655  0007BA  0401               	decf	?___fpclassifyf^0,w,c
  7656  0007BC  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7657  0007BE  A4D8               	btfss	status,2,c
  7658  0007C0  EFE4  F003         	goto	u5701
  7659  0007C4  EFE6  F003         	goto	u5700
  7660  0007C8                     u5701:
  7661  0007C8  EF3D  F004         	goto	l4909
  7662  0007CC                     u5700:
  7663  0007CC  0EBF               	movlw	191
  7664  0007CE  0100               	movlb	0	; () banked
  7665  0007D0  6F6A               	movwf	??_efgtoa& (0+255),b
  7666  0007D2  0EFF               	movlw	255
  7667  0007D4  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7668  0007D6  505E               	movf	efgtoa@c^0,w,c
  7669  0007D8  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7670  0007DA  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7671  0007DC  516A               	movf	??_efgtoa& (0+255),w,b
  7672  0007DE  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7673  0007E0  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7674  0007E2  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7675  0007E4  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7676  0007E6  E10A               	bnz	u5710
  7677  0007E8  0E1A               	movlw	26
  7678  0007EA  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7679  0007EC  A0D8               	btfss	status,0,c
  7680  0007EE  EFFB  F003         	goto	u5711
  7681  0007F2  EFFE  F003         	goto	u5710
  7682  0007F6                     u5711:
  7683  0007F6  0E01               	movlw	1
  7684  0007F8  EFFF  F003         	goto	u5720
  7685  0007FC                     u5710:
  7686  0007FC  0E00               	movlw	0
  7687  0007FE                     u5720:
  7688  0007FE  6F75               	movwf	_efgtoa$2504& (0+255),b
  7689  000800  6B76               	clrf	(_efgtoa$2504+1)& (0+255),b
  7690  000802                     
  7691                           ; BSR set to: 0
  7692  000802  5175               	movf	_efgtoa$2504& (0+255),w,b
  7693  000804  1176               	iorwf	(_efgtoa$2504+1)& (0+255),w,b
  7694  000806  B4D8               	btfsc	status,2,c
  7695  000808  EF08  F004         	goto	u5731
  7696  00080C  EF0A  F004         	goto	u5730
  7697  000810                     u5731:
  7698  000810  EF18  F004         	goto	l4901
  7699  000814                     u5730:
  7700  000814                     
  7701                           ; BSR set to: 0
  7702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  7703  000814  0E00               	movlw	low _dbuf
  7704  000816  25A1               	addwf	efgtoa@n& (0+255),w,b
  7705  000818  6E01               	movwf	strcpy@dest^0,c
  7706  00081A  0E02               	movlw	high _dbuf
  7707  00081C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7708  00081E  6E02               	movwf	(strcpy@dest+1)^0,c
  7709  000820  0ED4               	movlw	low STR_17
  7710  000822  6E03               	movwf	strcpy@src^0,c
  7711  000824  0E06               	movlw	high STR_17
  7712  000826  6E04               	movwf	(strcpy@src+1)^0,c
  7713  000828  EC9F  F02B         	call	_strcpy	;wreg free
  7714                           
  7715                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  7716  00082C  EF24  F004         	goto	l4903
  7717  000830                     l4901:
  7718                           
  7719                           ; BSR set to: 0
  7720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  7721  000830  0E00               	movlw	low _dbuf
  7722  000832  25A1               	addwf	efgtoa@n& (0+255),w,b
  7723  000834  6E01               	movwf	strcpy@dest^0,c
  7724  000836  0E02               	movlw	high _dbuf
  7725  000838  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7726  00083A  6E02               	movwf	(strcpy@dest+1)^0,c
  7727  00083C  0EDC               	movlw	low STR_18
  7728  00083E  6E03               	movwf	strcpy@src^0,c
  7729  000840  0E06               	movlw	high STR_18
  7730  000842  6E04               	movwf	(strcpy@src+1)^0,c
  7731  000844  EC9F  F02B         	call	_strcpy	;wreg free
  7732  000848                     l4903:
  7733                           
  7734                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  7735  000848  0100               	movlb	0	; () banked
  7736  00084A  0EFD               	movlw	253
  7737  00084C  278E               	addwf	efgtoa@w& (0+255),f,b
  7738  00084E  0EFF               	movlw	255
  7739  000850  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  7740  000852                     l4905:
  7741                           
  7742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  7743  000852  C058  F011         	movff	efgtoa@fp,pad@fp
  7744  000856  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  7745  00085A  0E00               	movlw	low _dbuf
  7746  00085C  6E13               	movwf	pad@buf^0,c
  7747  00085E  0E02               	movlw	high _dbuf
  7748  000860  6E14               	movwf	(pad@buf+1)^0,c
  7749  000862  C08E  F015         	movff	efgtoa@w,pad@p
  7750  000866  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  7751  00086A  ECD3  F027         	call	_pad	;wreg free
  7752  00086E  C011  F058         	movff	?_pad,?_efgtoa
  7753  000872  C012  F059         	movff	?_pad+1,?_efgtoa+1
  7754  000876  EF56  F009         	goto	l1259
  7755  00087A                     l4909:
  7756                           
  7757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  7758  00087A  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  7759  00087E  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  7760  000882  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  7761  000886  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  7762  00088A  EC07  F026         	call	___fpclassifyf	;wreg free
  7763  00088E  5001               	movf	?___fpclassifyf^0,w,c
  7764  000890  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  7765  000892  A4D8               	btfss	status,2,c
  7766  000894  EF4E  F004         	goto	u5741
  7767  000898  EF50  F004         	goto	u5740
  7768  00089C                     u5741:
  7769  00089C  EF90  F004         	goto	l4927
  7770  0008A0                     u5740:
  7771  0008A0  0EBF               	movlw	191
  7772  0008A2  0100               	movlb	0	; () banked
  7773  0008A4  6F6A               	movwf	??_efgtoa& (0+255),b
  7774  0008A6  0EFF               	movlw	255
  7775  0008A8  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  7776  0008AA  505E               	movf	efgtoa@c^0,w,c
  7777  0008AC  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  7778  0008AE  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  7779  0008B0  516A               	movf	??_efgtoa& (0+255),w,b
  7780  0008B2  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  7781  0008B4  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  7782  0008B6  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  7783  0008B8  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  7784  0008BA  E10A               	bnz	u5750
  7785  0008BC  0E1A               	movlw	26
  7786  0008BE  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  7787  0008C0  A0D8               	btfss	status,0,c
  7788  0008C2  EF65  F004         	goto	u5751
  7789  0008C6  EF68  F004         	goto	u5750
  7790  0008CA                     u5751:
  7791  0008CA  0E01               	movlw	1
  7792  0008CC  EF69  F004         	goto	u5760
  7793  0008D0                     u5750:
  7794  0008D0  0E00               	movlw	0
  7795  0008D2                     u5760:
  7796  0008D2  6F77               	movwf	_efgtoa$2508& (0+255),b
  7797  0008D4  6B78               	clrf	(_efgtoa$2508+1)& (0+255),b
  7798  0008D6                     
  7799                           ; BSR set to: 0
  7800  0008D6  5177               	movf	_efgtoa$2508& (0+255),w,b
  7801  0008D8  1178               	iorwf	(_efgtoa$2508+1)& (0+255),w,b
  7802  0008DA  B4D8               	btfsc	status,2,c
  7803  0008DC  EF72  F004         	goto	u5771
  7804  0008E0  EF74  F004         	goto	u5770
  7805  0008E4                     u5771:
  7806  0008E4  EF82  F004         	goto	l4919
  7807  0008E8                     u5770:
  7808  0008E8                     
  7809                           ; BSR set to: 0
  7810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  7811  0008E8  0E00               	movlw	low _dbuf
  7812  0008EA  25A1               	addwf	efgtoa@n& (0+255),w,b
  7813  0008EC  6E01               	movwf	strcpy@dest^0,c
  7814  0008EE  0E02               	movlw	high _dbuf
  7815  0008F0  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7816  0008F2  6E02               	movwf	(strcpy@dest+1)^0,c
  7817  0008F4  0ED8               	movlw	low STR_21
  7818  0008F6  6E03               	movwf	strcpy@src^0,c
  7819  0008F8  0E06               	movlw	high STR_21
  7820  0008FA  6E04               	movwf	(strcpy@src+1)^0,c
  7821  0008FC  EC9F  F02B         	call	_strcpy	;wreg free
  7822                           
  7823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  7824  000900  EF24  F004         	goto	l4903
  7825  000904                     l4919:
  7826                           
  7827                           ; BSR set to: 0
  7828                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  7829  000904  0E00               	movlw	low _dbuf
  7830  000906  25A1               	addwf	efgtoa@n& (0+255),w,b
  7831  000908  6E01               	movwf	strcpy@dest^0,c
  7832  00090A  0E02               	movlw	high _dbuf
  7833  00090C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  7834  00090E  6E02               	movwf	(strcpy@dest+1)^0,c
  7835  000910  0EE0               	movlw	low STR_22
  7836  000912  6E03               	movwf	strcpy@src^0,c
  7837  000914  0E06               	movlw	high STR_22
  7838  000916  6E04               	movwf	(strcpy@src+1)^0,c
  7839  000918  EC9F  F02B         	call	_strcpy	;wreg free
  7840  00091C  EF24  F004         	goto	l4903
  7841  000920                     l4927:
  7842                           
  7843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  7844  000920  0E00               	movlw	0
  7845  000922  0100               	movlb	0	; () banked
  7846  000924  6FA3               	movwf	efgtoa@u& (0+255),b
  7847  000926  0E00               	movlw	0
  7848  000928  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  7849  00092A  0E80               	movlw	128
  7850  00092C  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  7851  00092E  0E3F               	movlw	63
  7852  000930  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  7853                           
  7854                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  7855  000932  0E00               	movlw	0
  7856  000934  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  7857  000936  0E00               	movlw	0
  7858  000938  6F9F               	movwf	efgtoa@e& (0+255),b
  7859  00093A                     
  7860                           ; BSR set to: 0
  7861                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  7862  00093A  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  7863  00093E  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  7864  000942  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  7865  000946  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  7866  00094A  0E00               	movlw	0
  7867  00094C  6E05               	movwf	___fleq@ff2^0,c
  7868  00094E  0E00               	movlw	0
  7869  000950  6E06               	movwf	(___fleq@ff2+1)^0,c
  7870  000952  0E00               	movlw	0
  7871  000954  6E07               	movwf	(___fleq@ff2+2)^0,c
  7872  000956  0E00               	movlw	0
  7873  000958  6E08               	movwf	(___fleq@ff2+3)^0,c
  7874  00095A  ECF0  F028         	call	___fleq	;wreg free
  7875  00095E  B0D8               	btfsc	status,0,c
  7876  000960  EFB4  F004         	goto	u5781
  7877  000964  EFB6  F004         	goto	u5780
  7878  000968                     u5781:
  7879  000968  EF39  F005         	goto	l4945
  7880  00096C                     u5780:
  7881  00096C  EFD5  F004         	goto	l4937
  7882  000970                     l4933:
  7883                           
  7884                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  7885  000970  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7886  000974  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7887  000978  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7888  00097C  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7889  000980  0E00               	movlw	0
  7890  000982  6E20               	movwf	___flmul@a^0,c
  7891  000984  0E00               	movlw	0
  7892  000986  6E21               	movwf	(___flmul@a+1)^0,c
  7893  000988  0E20               	movlw	32
  7894  00098A  6E22               	movwf	(___flmul@a+2)^0,c
  7895  00098C  0E41               	movlw	65
  7896  00098E  6E23               	movwf	(___flmul@a+3)^0,c
  7897  000990  ECE5  F017         	call	___flmul	;wreg free
  7898  000994  C01C  F0A3         	movff	?___flmul,efgtoa@u
  7899  000998  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  7900  00099C  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  7901  0009A0  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  7902  0009A4                     
  7903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  7904  0009A4  0100               	movlb	0	; () banked
  7905  0009A6  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  7906  0009A8  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  7907  0009AA                     l4937:
  7908                           
  7909                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  7910  0009AA  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7911  0009AE  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7912  0009B2  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7913  0009B6  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7914  0009BA  0E00               	movlw	0
  7915  0009BC  6E20               	movwf	___flmul@a^0,c
  7916  0009BE  0E00               	movlw	0
  7917  0009C0  6E21               	movwf	(___flmul@a+1)^0,c
  7918  0009C2  0E20               	movlw	32
  7919  0009C4  6E22               	movwf	(___flmul@a+2)^0,c
  7920  0009C6  0E41               	movlw	65
  7921  0009C8  6E23               	movwf	(___flmul@a+3)^0,c
  7922  0009CA  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  7923  0009CE  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  7924  0009D2  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  7925  0009D6  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  7926  0009DA  ECE5  F017         	call	___flmul	;wreg free
  7927  0009DE  C01C  F039         	movff	?___flmul,___flge@ff2
  7928  0009E2  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  7929  0009E6  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  7930  0009EA  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  7931  0009EE  EC85  F025         	call	___flge	;wreg free
  7932  0009F2  B0D8               	btfsc	status,0,c
  7933  0009F4  EFFE  F004         	goto	u5791
  7934  0009F8  EF00  F005         	goto	u5790
  7935  0009FC                     u5791:
  7936  0009FC  EFB8  F004         	goto	l4933
  7937  000A00                     u5790:
  7938  000A00  EF20  F005         	goto	l4943
  7939  000A04                     l4939:
  7940                           
  7941                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  7942  000A04  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  7943  000A08  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  7944  000A0C  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  7945  000A10  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  7946  000A14  0E00               	movlw	0
  7947  000A16  6E39               	movwf	___fldiv@a^0,c
  7948  000A18  0E00               	movlw	0
  7949  000A1A  6E3A               	movwf	(___fldiv@a+1)^0,c
  7950  000A1C  0E20               	movlw	32
  7951  000A1E  6E3B               	movwf	(___fldiv@a+2)^0,c
  7952  000A20  0E41               	movlw	65
  7953  000A22  6E3C               	movwf	(___fldiv@a+3)^0,c
  7954  000A24  ECFA  F019         	call	___fldiv	;wreg free
  7955  000A28  C035  F0A3         	movff	?___fldiv,efgtoa@u
  7956  000A2C  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  7957  000A30  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  7958  000A34  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  7959  000A38                     
  7960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  7961  000A38  0100               	movlb	0	; () banked
  7962  000A3A  079F               	decf	efgtoa@e& (0+255),f,b
  7963  000A3C  A0D8               	btfss	status,0,c
  7964  000A3E  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  7965  000A40                     l4943:
  7966                           
  7967                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  7968  000A40  C09B  F035         	movff	efgtoa@g,___flge@ff1
  7969  000A44  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  7970  000A48  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  7971  000A4C  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  7972  000A50  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  7973  000A54  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  7974  000A58  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  7975  000A5C  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  7976  000A60  EC85  F025         	call	___flge	;wreg free
  7977  000A64  A0D8               	btfss	status,0,c
  7978  000A66  EF37  F005         	goto	u5801
  7979  000A6A  EF39  F005         	goto	u5800
  7980  000A6E                     u5801:
  7981  000A6E  EF02  F005         	goto	l4939
  7982  000A72                     u5800:
  7983  000A72                     l4945:
  7984                           
  7985                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  7986  000A72  C05E  F007         	movff	efgtoa@c,tolower@c
  7987  000A76  6A08               	clrf	(tolower@c+1)^0,c
  7988  000A78  EC6F  F02B         	call	_tolower	;wreg free
  7989  000A7C  5007               	movf	?_tolower^0,w,c
  7990  000A7E  0100               	movlb	0	; () banked
  7991  000A80  6F90               	movwf	efgtoa@mode& (0+255),b
  7992  000A82                     
  7993                           ; BSR set to: 0
  7994                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  7995  000A82  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  7996  000A86                     
  7997                           ; BSR set to: 0
  7998                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  7999  000A86  0E67               	movlw	103
  8000  000A88  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8001  000A8A  A4D8               	btfss	status,2,c
  8002  000A8C  EF4A  F005         	goto	u5811
  8003  000A90  EF4C  F005         	goto	u5810
  8004  000A94                     u5811:
  8005  000A94  EF74  F005         	goto	l4959
  8006  000A98                     u5810:
  8007  000A98                     
  8008                           ; BSR set to: 0
  8009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  8010  000A98  0101               	movlb	1	; () banked
  8011  000A9A  51A2               	movf	_prec& (0+255),w,b
  8012  000A9C  11A3               	iorwf	(_prec+1)& (0+255),w,b
  8013  000A9E  A4D8               	btfss	status,2,c
  8014  000AA0  EF54  F005         	goto	u5821
  8015  000AA4  EF56  F005         	goto	u5820
  8016  000AA8                     u5821:
  8017  000AA8  EF5A  F005         	goto	l4955
  8018  000AAC                     u5820:
  8019  000AAC                     
  8020                           ; BSR set to: 1
  8021                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  8022  000AAC  0E00               	movlw	0
  8023  000AAE  6FA3               	movwf	(_prec+1)& (0+255),b
  8024  000AB0  0E01               	movlw	1
  8025  000AB2  6FA2               	movwf	_prec& (0+255),b
  8026  000AB4                     l4955:
  8027                           
  8028                           ; BSR set to: 1
  8029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  8030  000AB4  BFA3               	btfsc	(_prec+1)& (0+255),7,b
  8031  000AB6  EF67  F005         	goto	u5830
  8032  000ABA  51A3               	movf	(_prec+1)& (0+255),w,b
  8033  000ABC  E106               	bnz	u5831
  8034  000ABE  05A2               	decf	_prec& (0+255),w,b
  8035  000AC0  B0D8               	btfsc	status,0,c
  8036  000AC2  EF65  F005         	goto	u5831
  8037  000AC6  EF67  F005         	goto	u5830
  8038  000ACA                     u5831:
  8039  000ACA  EF6E  F005         	goto	l1277
  8040  000ACE                     u5830:
  8041  000ACE                     l4957:
  8042                           
  8043                           ; BSR set to: 1
  8044  000ACE  0E00               	movlw	0
  8045  000AD0  0100               	movlb	0	; () banked
  8046  000AD2  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8047  000AD4  0E06               	movlw	6
  8048  000AD6  6F8B               	movwf	efgtoa@p& (0+255),b
  8049  000AD8  EF7E  F005         	goto	l4965
  8050  000ADC                     l1277:
  8051                           
  8052                           ; BSR set to: 1
  8053  000ADC  C1A2  F08B         	movff	_prec,efgtoa@p
  8054  000AE0  C1A3  F08C         	movff	_prec+1,efgtoa@p+1
  8055  000AE4  EF7E  F005         	goto	l4965
  8056  000AE8                     l4959:
  8057                           
  8058                           ; BSR set to: 0
  8059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  8060  000AE8  0101               	movlb	1	; () banked
  8061  000AEA  BFA3               	btfsc	(_prec+1)& (0+255),7,b
  8062  000AEC  EF7A  F005         	goto	u5841
  8063  000AF0  EF7C  F005         	goto	u5840
  8064  000AF4                     u5841:
  8065  000AF4  EF67  F005         	goto	l4957
  8066  000AF8                     u5840:
  8067  000AF8  EF6E  F005         	goto	l1277
  8068  000AFC                     l4965:
  8069                           
  8070                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8071  000AFC  0E67               	movlw	103
  8072  000AFE  0100               	movlb	0	; () banked
  8073  000B00  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8074  000B02  A4D8               	btfss	status,2,c
  8075  000B04  EF86  F005         	goto	u5851
  8076  000B08  EF88  F005         	goto	u5850
  8077  000B0C                     u5851:
  8078  000B0C  EFB7  F005         	goto	l4975
  8079  000B10                     u5850:
  8080  000B10                     
  8081                           ; BSR set to: 0
  8082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8083  000B10  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8084  000B12  EF96  F005         	goto	u5860
  8085  000B16  0EFC               	movlw	252
  8086  000B18  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8087  000B1A  0EFF               	movlw	255
  8088  000B1C  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8089  000B1E  A0D8               	btfss	status,0,c
  8090  000B20  EF94  F005         	goto	u5861
  8091  000B24  EF96  F005         	goto	u5860
  8092  000B28                     u5861:
  8093  000B28  EFB5  F005         	goto	l4973
  8094  000B2C                     u5860:
  8095  000B2C                     
  8096                           ; BSR set to: 0
  8097  000B2C  0EFF               	movlw	255
  8098  000B2E  6F6A               	movwf	??_efgtoa& (0+255),b
  8099  000B30  0EFF               	movlw	255
  8100  000B32  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8101  000B34  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8102  000B38  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8103  000B3C  516A               	movf	??_efgtoa& (0+255),w,b
  8104  000B3E  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8105  000B40  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8106  000B42  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8107  000B44  519F               	movf	efgtoa@e& (0+255),w,b
  8108  000B46  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8109  000B48  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8110  000B4A  0A80               	xorlw	128
  8111  000B4C  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8112  000B4E  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8113  000B50  0A80               	xorlw	128
  8114  000B52  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8115  000B54  A0D8               	btfss	status,0,c
  8116  000B56  EFAF  F005         	goto	u5871
  8117  000B5A  EFB1  F005         	goto	u5870
  8118  000B5E                     u5871:
  8119  000B5E  EFB5  F005         	goto	l4973
  8120  000B62                     u5870:
  8121  000B62                     
  8122                           ; BSR set to: 0
  8123                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8124  000B62  0E66               	movlw	102
  8125  000B64  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8126                           
  8127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8128  000B66  EFB7  F005         	goto	l4975
  8129  000B6A                     l4973:
  8130                           
  8131                           ; BSR set to: 0
  8132                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8133  000B6A  0E65               	movlw	101
  8134  000B6C  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8135  000B6E                     l4975:
  8136                           
  8137                           ; BSR set to: 0
  8138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8139  000B6E  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8140  000B72  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8141  000B76                     
  8142                           ; BSR set to: 0
  8143                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8144  000B76  0E67               	movlw	103
  8145  000B78  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8146  000B7A  A4D8               	btfss	status,2,c
  8147  000B7C  EFC2  F005         	goto	u5881
  8148  000B80  EFC4  F005         	goto	u5880
  8149  000B84                     u5881:
  8150  000B84  EFD4  F005         	goto	l4983
  8151  000B88                     u5880:
  8152  000B88                     
  8153                           ; BSR set to: 0
  8154  000B88  0E66               	movlw	102
  8155  000B8A  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8156  000B8C  A4D8               	btfss	status,2,c
  8157  000B8E  EFCB  F005         	goto	u5891
  8158  000B92  EFCD  F005         	goto	u5890
  8159  000B96                     u5891:
  8160  000B96  EFD6  F005         	goto	l4985
  8161  000B9A                     u5890:
  8162  000B9A                     
  8163                           ; BSR set to: 0
  8164  000B9A  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8165  000B9C  EFD4  F005         	goto	u5900
  8166  000BA0  EFD2  F005         	goto	u5901
  8167  000BA4                     u5901:
  8168  000BA4  EFD6  F005         	goto	l4985
  8169  000BA8                     u5900:
  8170  000BA8                     l4983:
  8171                           
  8172                           ; BSR set to: 0
  8173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8174  000BA8  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8175  000BAA  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8176  000BAC                     l4985:
  8177                           
  8178                           ; BSR set to: 0
  8179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8180  000BAC  0E66               	movlw	102
  8181  000BAE  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8182  000BB0  A4D8               	btfss	status,2,c
  8183  000BB2  EFDD  F005         	goto	u5911
  8184  000BB6  EFDF  F005         	goto	u5910
  8185  000BBA                     u5911:
  8186  000BBA  EFFF  F005         	goto	l4995
  8187  000BBE                     u5910:
  8188  000BBE                     
  8189                           ; BSR set to: 0
  8190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8191  000BBE  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8192  000BC0  EFE6  F005         	goto	u5920
  8193  000BC4  EFE4  F005         	goto	u5921
  8194  000BC8                     u5921:
  8195  000BC8  EFF2  F005         	goto	l4991
  8196  000BCC                     u5920:
  8197  000BCC                     
  8198                           ; BSR set to: 0
  8199                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8200  000BCC  0E00               	movlw	0
  8201  000BCE  6FA3               	movwf	efgtoa@u& (0+255),b
  8202  000BD0  0E00               	movlw	0
  8203  000BD2  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8204  000BD4  0E80               	movlw	128
  8205  000BD6  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8206  000BD8  0E3F               	movlw	63
  8207  000BDA  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8208                           
  8209                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8210  000BDC  0E00               	movlw	0
  8211  000BDE  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8212  000BE0  0E00               	movlw	0
  8213  000BE2  6F9F               	movwf	efgtoa@e& (0+255),b
  8214  000BE4                     l4991:
  8215                           
  8216                           ; BSR set to: 0
  8217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8218  000BE4  0E67               	movlw	103
  8219  000BE6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8220  000BE8  B4D8               	btfsc	status,2,c
  8221  000BEA  EFF9  F005         	goto	u5931
  8222  000BEE  EFFB  F005         	goto	u5930
  8223  000BF2                     u5931:
  8224  000BF2  EFFF  F005         	goto	l4995
  8225  000BF6                     u5930:
  8226  000BF6                     
  8227                           ; BSR set to: 0
  8228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8229  000BF6  519F               	movf	efgtoa@e& (0+255),w,b
  8230  000BF8  2783               	addwf	efgtoa@m& (0+255),f,b
  8231  000BFA  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8232  000BFC  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8233  000BFE                     l4995:
  8234                           
  8235                           ; BSR set to: 0
  8236                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8237  000BFE  0E00               	movlw	0
  8238  000C00  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8239  000C02  0E00               	movlw	0
  8240  000C04  6F99               	movwf	efgtoa@i& (0+255),b
  8241  000C06                     
  8242                           ; BSR set to: 0
  8243                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8244  000C06  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8245  000C0A  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8246  000C0E  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8247  000C12  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8248  000C16                     
  8249                           ; BSR set to: 0
  8250                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8251  000C16  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8252  000C1A  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8253  000C1E  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8254  000C22  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8255                           
  8256                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8257  000C26  EF90  F006         	goto	l5009
  8258  000C2A                     l5001:
  8259                           
  8260                           ; BSR set to: 0
  8261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8262  000C2A  C091  F035         	movff	efgtoa@h,___fldiv@b
  8263  000C2E  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8264  000C32  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8265  000C36  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8266  000C3A  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8267  000C3E  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8268  000C42  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8269  000C46  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8270  000C4A  ECFA  F019         	call	___fldiv	;wreg free
  8271  000C4E  C035  F04E         	movff	?___fldiv,floorf@x
  8272  000C52  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8273  000C56  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8274  000C5A  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8275  000C5E  ECAC  F01E         	call	_floorf	;wreg free
  8276  000C62  C04E  F095         	movff	?_floorf,efgtoa@l
  8277  000C66  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8278  000C6A  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8279  000C6E  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8280                           
  8281                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8282  000C72  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8283  000C76  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8284  000C7A  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8285  000C7E  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8286  000C82  EC02  F025         	call	___fltol	;wreg free
  8287  000C86  C04E  F087         	movff	?___fltol,efgtoa@d
  8288  000C8A  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8289  000C8E                     
  8290                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8291  000C8E  C091  F045         	movff	efgtoa@h,___flsub@b
  8292  000C92  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8293  000C96  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8294  000C9A  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8295  000C9E  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8296  000CA2  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8297  000CA6  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8298  000CAA  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8299  000CAE  C095  F01C         	movff	efgtoa@l,___flmul@b
  8300  000CB2  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8301  000CB6  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8302  000CBA  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8303  000CBE  ECE5  F017         	call	___flmul	;wreg free
  8304  000CC2  C01C  F049         	movff	?___flmul,___flsub@a
  8305  000CC6  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8306  000CCA  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8307  000CCE  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8308  000CD2  EC76  F02C         	call	___flsub	;wreg free
  8309  000CD6  C045  F091         	movff	?___flsub,efgtoa@h
  8310  000CDA  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8311  000CDE  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8312  000CE2  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8313  000CE6                     
  8314                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8315  000CE6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8316  000CEA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8317  000CEE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8318  000CF2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8319  000CF6  0E00               	movlw	0
  8320  000CF8  6E39               	movwf	___fldiv@a^0,c
  8321  000CFA  0E00               	movlw	0
  8322  000CFC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8323  000CFE  0E20               	movlw	32
  8324  000D00  6E3B               	movwf	(___fldiv@a+2)^0,c
  8325  000D02  0E41               	movlw	65
  8326  000D04  6E3C               	movwf	(___fldiv@a+3)^0,c
  8327  000D06  ECFA  F019         	call	___fldiv	;wreg free
  8328  000D0A  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8329  000D0E  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8330  000D12  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8331  000D16  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8332  000D1A                     
  8333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  8334  000D1A  0100               	movlb	0	; () banked
  8335  000D1C  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8336  000D1E  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8337  000D20                     l5009:
  8338                           
  8339                           ; BSR set to: 0
  8340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8341  000D20  5183               	movf	efgtoa@m& (0+255),w,b
  8342  000D22  5D99               	subwf	efgtoa@i& (0+255),w,b
  8343  000D24  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8344  000D26  0A80               	xorlw	128
  8345  000D28  6F6A               	movwf	??_efgtoa& (0+255),b
  8346  000D2A  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8347  000D2C  0A80               	xorlw	128
  8348  000D2E  596A               	subwfb	??_efgtoa& (0+255),w,b
  8349  000D30  A0D8               	btfss	status,0,c
  8350  000D32  EF9D  F006         	goto	u5941
  8351  000D36  EF9F  F006         	goto	u5940
  8352  000D3A                     u5941:
  8353  000D3A  EF15  F006         	goto	l5001
  8354  000D3E                     u5940:
  8355  000D3E                     
  8356                           ; BSR set to: 0
  8357                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  8358  000D3E  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8359  000D42  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8360  000D46  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8361  000D4A  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8362  000D4E  0E00               	movlw	0
  8363  000D50  6E20               	movwf	___flmul@a^0,c
  8364  000D52  0E00               	movlw	0
  8365  000D54  6E21               	movwf	(___flmul@a+1)^0,c
  8366  000D56  0EA0               	movlw	160
  8367  000D58  6E22               	movwf	(___flmul@a+2)^0,c
  8368  000D5A  0E40               	movlw	64
  8369  000D5C  6E23               	movwf	(___flmul@a+3)^0,c
  8370  000D5E  ECE5  F017         	call	___flmul	;wreg free
  8371  000D62  C01C  F095         	movff	?___flmul,efgtoa@l
  8372  000D66  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  8373  000D6A  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  8374  000D6E  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  8375  000D72                     
  8376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  8377  000D72  C091  F035         	movff	efgtoa@h,___flge@ff1
  8378  000D76  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  8379  000D7A  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  8380  000D7E  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  8381  000D82  C095  F039         	movff	efgtoa@l,___flge@ff2
  8382  000D86  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  8383  000D8A  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  8384  000D8E  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  8385  000D92  EC85  F025         	call	___flge	;wreg free
  8386  000D96  B0D8               	btfsc	status,0,c
  8387  000D98  EFD0  F006         	goto	u5951
  8388  000D9C  EFD2  F006         	goto	u5950
  8389  000DA0                     u5951:
  8390  000DA0  EFDD  F006         	goto	l5017
  8391  000DA4                     u5950:
  8392  000DA4                     
  8393                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  8394  000DA4  0E00               	movlw	0
  8395  000DA6  0100               	movlb	0	; () banked
  8396  000DA8  6F95               	movwf	efgtoa@l& (0+255),b
  8397  000DAA  0E00               	movlw	0
  8398  000DAC  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8399  000DAE  0E00               	movlw	0
  8400  000DB0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8401  000DB2  0E00               	movlw	0
  8402  000DB4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8403                           
  8404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  8405  000DB6  EF06  F007         	goto	l5023
  8406  000DBA                     l5017:
  8407                           
  8408                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  8409  000DBA  C091  F001         	movff	efgtoa@h,___fleq@ff1
  8410  000DBE  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  8411  000DC2  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  8412  000DC6  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  8413  000DCA  C095  F005         	movff	efgtoa@l,___fleq@ff2
  8414  000DCE  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  8415  000DD2  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  8416  000DD6  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  8417  000DDA  ECF0  F028         	call	___fleq	;wreg free
  8418  000DDE  A0D8               	btfss	status,0,c
  8419  000DE0  EFF4  F006         	goto	u5961
  8420  000DE4  EFF6  F006         	goto	u5960
  8421  000DE8                     u5961:
  8422  000DE8  EF06  F007         	goto	l5023
  8423  000DEC                     u5960:
  8424  000DEC  0100               	movlb	0	; () banked
  8425  000DEE  B187               	btfsc	efgtoa@d& (0+255),0,b
  8426  000DF0  EFFC  F006         	goto	u5971
  8427  000DF4  EFFE  F006         	goto	u5970
  8428  000DF8                     u5971:
  8429  000DF8  EF06  F007         	goto	l5023
  8430  000DFC                     u5970:
  8431  000DFC                     
  8432                           ; BSR set to: 0
  8433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  8434  000DFC  0E00               	movlw	0
  8435  000DFE  6F95               	movwf	efgtoa@l& (0+255),b
  8436  000E00  0E00               	movlw	0
  8437  000E02  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  8438  000E04  0E00               	movlw	0
  8439  000E06  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  8440  000E08  0E00               	movlw	0
  8441  000E0A  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  8442  000E0C                     l5023:
  8443                           
  8444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  8445  000E0C  C09B  F035         	movff	efgtoa@g,___fladd@b
  8446  000E10  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  8447  000E14  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  8448  000E18  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  8449  000E1C  C095  F039         	movff	efgtoa@l,___fladd@a
  8450  000E20  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  8451  000E24  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  8452  000E28  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  8453  000E2C  EC85  F015         	call	___fladd	;wreg free
  8454  000E30  C035  F091         	movff	?___fladd,efgtoa@h
  8455  000E34  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  8456  000E38  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  8457  000E3C  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  8458  000E40                     
  8459                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  8460  000E40  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  8461  000E44  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  8462  000E48  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  8463  000E4C  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  8464  000E50                     
  8465                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  8466  000E50  0E65               	movlw	101
  8467  000E52  0100               	movlb	0	; () banked
  8468  000E54  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8469  000E56  B4D8               	btfsc	status,2,c
  8470  000E58  EF30  F007         	goto	u5981
  8471  000E5C  EF32  F007         	goto	u5980
  8472  000E60                     u5981:
  8473  000E60  EF38  F007         	goto	l5031
  8474  000E64                     u5980:
  8475  000E64                     
  8476                           ; BSR set to: 0
  8477  000E64  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  8478  000E68  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  8479  000E6C  EF3C  F007         	goto	l1303
  8480  000E70                     l5031:
  8481                           
  8482                           ; BSR set to: 0
  8483  000E70  0E00               	movlw	0
  8484  000E72  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  8485  000E74  0E00               	movlw	0
  8486  000E76  6F85               	movwf	efgtoa@ne& (0+255),b
  8487  000E78                     l1303:
  8488                           
  8489                           ; BSR set to: 0
  8490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  8491  000E78  0E00               	movlw	0
  8492  000E7A  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8493  000E7C  0E00               	movlw	0
  8494  000E7E  6F81               	movwf	efgtoa@pp& (0+255),b
  8495                           
  8496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  8497  000E80  0E00               	movlw	0
  8498  000E82  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  8499  000E84  0E00               	movlw	0
  8500  000E86  6F7F               	movwf	efgtoa@t& (0+255),b
  8501                           
  8502                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  8503  000E88  0E00               	movlw	0
  8504  000E8A  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8505  000E8C  0E00               	movlw	0
  8506  000E8E  6F99               	movwf	efgtoa@i& (0+255),b
  8507                           
  8508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8509  000E90  EF39  F008         	goto	l5081
  8510  000E94                     l5033:
  8511                           
  8512                           ; BSR set to: 0
  8513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  8514  000E94  C091  F035         	movff	efgtoa@h,___fldiv@b
  8515  000E98  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8516  000E9C  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8517  000EA0  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8518  000EA4  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8519  000EA8  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8520  000EAC  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8521  000EB0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8522  000EB4  ECFA  F019         	call	___fldiv	;wreg free
  8523  000EB8  C035  F04E         	movff	?___fldiv,floorf@x
  8524  000EBC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8525  000EC0  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8526  000EC4  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8527  000EC8  ECAC  F01E         	call	_floorf	;wreg free
  8528  000ECC  C04E  F095         	movff	?_floorf,efgtoa@l
  8529  000ED0  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8530  000ED4  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8531  000ED8  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8532                           
  8533                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  8534  000EDC  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8535  000EE0  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8536  000EE4  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8537  000EE8  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8538  000EEC  EC02  F025         	call	___fltol	;wreg free
  8539  000EF0  C04E  F087         	movff	?___fltol,efgtoa@d
  8540  000EF4  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8541  000EF8                     
  8542                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  8543  000EF8  0101               	movlb	1	; () banked
  8544  000EFA  B9A4               	btfsc	_flags& (0+255),4,b
  8545  000EFC  EF82  F007         	goto	u5991
  8546  000F00  EF84  F007         	goto	u5990
  8547  000F04                     u5991:
  8548  000F04  EFA2  F007         	goto	l5045
  8549  000F08                     u5990:
  8550  000F08                     
  8551                           ; BSR set to: 1
  8552  000F08  0100               	movlb	0	; () banked
  8553  000F0A  5187               	movf	efgtoa@d& (0+255),w,b
  8554  000F0C  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  8555  000F0E  A4D8               	btfss	status,2,c
  8556  000F10  EF8C  F007         	goto	u6001
  8557  000F14  EF8E  F007         	goto	u6000
  8558  000F18                     u6001:
  8559  000F18  EFA2  F007         	goto	l5045
  8560  000F1C                     u6000:
  8561  000F1C                     
  8562                           ; BSR set to: 0
  8563  000F1C  0E67               	movlw	103
  8564  000F1E  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8565  000F20  A4D8               	btfss	status,2,c
  8566  000F22  EF95  F007         	goto	u6011
  8567  000F26  EF97  F007         	goto	u6010
  8568  000F2A                     u6011:
  8569  000F2A  EFA2  F007         	goto	l5045
  8570  000F2E                     u6010:
  8571  000F2E                     
  8572                           ; BSR set to: 0
  8573  000F2E  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8574  000F30  EF9E  F007         	goto	u6020
  8575  000F34  EF9C  F007         	goto	u6021
  8576  000F38                     u6021:
  8577  000F38  EFA2  F007         	goto	l5045
  8578  000F3C                     u6020:
  8579  000F3C                     
  8580                           ; BSR set to: 0
  8581                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  8582  000F3C  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  8583  000F3E  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  8584                           
  8585                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  8586  000F40  EFED  F007         	goto	l5073
  8587  000F44                     l5045:
  8588                           
  8589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  8590  000F44  0100               	movlb	0	; () banked
  8591  000F46  5181               	movf	efgtoa@pp& (0+255),w,b
  8592  000F48  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8593  000F4A  A4D8               	btfss	status,2,c
  8594  000F4C  EFAA  F007         	goto	u6031
  8595  000F50  EFAC  F007         	goto	u6030
  8596  000F54                     u6031:
  8597  000F54  EFD6  F007         	goto	l5065
  8598  000F58                     u6030:
  8599  000F58                     
  8600                           ; BSR set to: 0
  8601  000F58  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  8602  000F5A  EFB3  F007         	goto	u6040
  8603  000F5E  EFB1  F007         	goto	u6041
  8604  000F62                     u6041:
  8605  000F62  EFD6  F007         	goto	l5065
  8606  000F66                     u6040:
  8607  000F66                     
  8608                           ; BSR set to: 0
  8609                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  8610  000F66  0E00               	movlw	low _dbuf
  8611  000F68  25A1               	addwf	efgtoa@n& (0+255),w,b
  8612  000F6A  6ED9               	movwf	fsr2l,c
  8613  000F6C  0E02               	movlw	high _dbuf
  8614  000F6E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8615  000F70  6EDA               	movwf	fsr2h,c
  8616  000F72  0E2E               	movlw	46
  8617  000F74  6EDF               	movwf	indf2,c
  8618  000F76                     
  8619                           ; BSR set to: 0
  8620  000F76  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8621  000F78  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8622  000F7A                     
  8623                           ; BSR set to: 0
  8624                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  8625  000F7A  078E               	decf	efgtoa@w& (0+255),f,b
  8626  000F7C  A0D8               	btfss	status,0,c
  8627  000F7E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8628  000F80                     
  8629                           ; BSR set to: 0
  8630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  8631  000F80  0E00               	movlw	0
  8632  000F82  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  8633  000F84  0E01               	movlw	1
  8634  000F86  6F81               	movwf	efgtoa@pp& (0+255),b
  8635  000F88  EFD6  F007         	goto	l5065
  8636  000F8C                     l5057:
  8637                           
  8638                           ; BSR set to: 0
  8639                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  8640  000F8C  0E00               	movlw	low _dbuf
  8641  000F8E  25A1               	addwf	efgtoa@n& (0+255),w,b
  8642  000F90  6ED9               	movwf	fsr2l,c
  8643  000F92  0E02               	movlw	high _dbuf
  8644  000F94  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8645  000F96  6EDA               	movwf	fsr2h,c
  8646  000F98  0E30               	movlw	48
  8647  000F9A  6EDF               	movwf	indf2,c
  8648  000F9C                     
  8649                           ; BSR set to: 0
  8650  000F9C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8651  000F9E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8652  000FA0                     
  8653                           ; BSR set to: 0
  8654                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  8655  000FA0  078E               	decf	efgtoa@w& (0+255),f,b
  8656  000FA2  A0D8               	btfss	status,0,c
  8657  000FA4  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8658  000FA6                     
  8659                           ; BSR set to: 0
  8660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  8661  000FA6  077F               	decf	efgtoa@t& (0+255),f,b
  8662  000FA8  A0D8               	btfss	status,0,c
  8663  000FAA  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  8664  000FAC                     l5065:
  8665                           
  8666                           ; BSR set to: 0
  8667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  8668  000FAC  517F               	movf	efgtoa@t& (0+255),w,b
  8669  000FAE  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  8670  000FB0  A4D8               	btfss	status,2,c
  8671  000FB2  EFDD  F007         	goto	u6051
  8672  000FB6  EFDF  F007         	goto	u6050
  8673  000FBA                     u6051:
  8674  000FBA  EFC6  F007         	goto	l5057
  8675  000FBE                     u6050:
  8676  000FBE                     
  8677                           ; BSR set to: 0
  8678                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  8679  000FBE  0E00               	movlw	low _dbuf
  8680  000FC0  25A1               	addwf	efgtoa@n& (0+255),w,b
  8681  000FC2  6ED9               	movwf	fsr2l,c
  8682  000FC4  0E02               	movlw	high _dbuf
  8683  000FC6  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8684  000FC8  6EDA               	movwf	fsr2h,c
  8685  000FCA  5187               	movf	efgtoa@d& (0+255),w,b
  8686  000FCC  0F30               	addlw	48
  8687  000FCE  6EDF               	movwf	indf2,c
  8688  000FD0                     
  8689                           ; BSR set to: 0
  8690  000FD0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8691  000FD2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8692  000FD4                     
  8693                           ; BSR set to: 0
  8694                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  8695  000FD4  078E               	decf	efgtoa@w& (0+255),f,b
  8696  000FD6  A0D8               	btfss	status,0,c
  8697  000FD8  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8698  000FDA                     l5073:
  8699                           
  8700                           ; BSR set to: 0
  8701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  8702  000FDA  C091  F045         	movff	efgtoa@h,___flsub@b
  8703  000FDE  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8704  000FE2  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8705  000FE6  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8706  000FEA  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8707  000FEE  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8708  000FF2  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8709  000FF6  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8710  000FFA  C095  F01C         	movff	efgtoa@l,___flmul@b
  8711  000FFE  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8712  001002  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8713  001006  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8714  00100A  ECE5  F017         	call	___flmul	;wreg free
  8715  00100E  C01C  F049         	movff	?___flmul,___flsub@a
  8716  001012  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8717  001016  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8718  00101A  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8719  00101E  EC76  F02C         	call	___flsub	;wreg free
  8720  001022  C045  F091         	movff	?___flsub,efgtoa@h
  8721  001026  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8722  00102A  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8723  00102E  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8724  001032                     
  8725                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  8726  001032  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8727  001036  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8728  00103A  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8729  00103E  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8730  001042  0E00               	movlw	0
  8731  001044  6E39               	movwf	___fldiv@a^0,c
  8732  001046  0E00               	movlw	0
  8733  001048  6E3A               	movwf	(___fldiv@a+1)^0,c
  8734  00104A  0E20               	movlw	32
  8735  00104C  6E3B               	movwf	(___fldiv@a+2)^0,c
  8736  00104E  0E41               	movlw	65
  8737  001050  6E3C               	movwf	(___fldiv@a+3)^0,c
  8738  001052  ECFA  F019         	call	___fldiv	;wreg free
  8739  001056  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8740  00105A  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8741  00105E  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8742  001062  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8743  001066                     
  8744                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  8745  001066  0100               	movlb	0	; () banked
  8746  001068  0785               	decf	efgtoa@ne& (0+255),f,b
  8747  00106A  A0D8               	btfss	status,0,c
  8748  00106C  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  8749  00106E                     
  8750                           ; BSR set to: 0
  8751                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  8752  00106E  4B99               	infsnz	efgtoa@i& (0+255),f,b
  8753  001070  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  8754  001072                     l5081:
  8755                           
  8756                           ; BSR set to: 0
  8757                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  8758  001072  5183               	movf	efgtoa@m& (0+255),w,b
  8759  001074  5D99               	subwf	efgtoa@i& (0+255),w,b
  8760  001076  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  8761  001078  0A80               	xorlw	128
  8762  00107A  6F6A               	movwf	??_efgtoa& (0+255),b
  8763  00107C  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  8764  00107E  0A80               	xorlw	128
  8765  001080  596A               	subwfb	??_efgtoa& (0+255),w,b
  8766  001082  B0D8               	btfsc	status,0,c
  8767  001084  EF46  F008         	goto	u6061
  8768  001088  EF48  F008         	goto	u6060
  8769  00108C                     u6061:
  8770  00108C  EF56  F008         	goto	l5085
  8771  001090                     u6060:
  8772  001090                     
  8773                           ; BSR set to: 0
  8774  001090  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  8775  001092  EF54  F008         	goto	u6071
  8776  001096  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  8777  001098  E109               	bnz	u6070
  8778  00109A  0E4B               	movlw	75
  8779  00109C  5DA1               	subwf	efgtoa@n& (0+255),w,b
  8780  00109E  A0D8               	btfss	status,0,c
  8781  0010A0  EF54  F008         	goto	u6071
  8782  0010A4  EF56  F008         	goto	u6070
  8783  0010A8                     u6071:
  8784  0010A8  EF4A  F007         	goto	l5033
  8785  0010AC                     u6070:
  8786  0010AC                     l5085:
  8787                           
  8788                           ; BSR set to: 0
  8789                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  8790  0010AC  5181               	movf	efgtoa@pp& (0+255),w,b
  8791  0010AE  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  8792  0010B0  A4D8               	btfss	status,2,c
  8793  0010B2  EF5D  F008         	goto	u6081
  8794  0010B6  EF5F  F008         	goto	u6080
  8795  0010BA                     u6081:
  8796  0010BA  EF72  F008         	goto	l5093
  8797  0010BE                     u6080:
  8798  0010BE                     
  8799                           ; BSR set to: 0
  8800  0010BE  0101               	movlb	1	; () banked
  8801  0010C0  A9A4               	btfss	_flags& (0+255),4,b
  8802  0010C2  EF65  F008         	goto	u6091
  8803  0010C6  EF67  F008         	goto	u6090
  8804  0010CA                     u6091:
  8805  0010CA  EF72  F008         	goto	l5093
  8806  0010CE                     u6090:
  8807  0010CE                     
  8808                           ; BSR set to: 1
  8809                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  8810  0010CE  0E00               	movlw	low _dbuf
  8811  0010D0  0100               	movlb	0	; () banked
  8812  0010D2  25A1               	addwf	efgtoa@n& (0+255),w,b
  8813  0010D4  6ED9               	movwf	fsr2l,c
  8814  0010D6  0E02               	movlw	high _dbuf
  8815  0010D8  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8816  0010DA  6EDA               	movwf	fsr2h,c
  8817  0010DC  0E2E               	movlw	46
  8818  0010DE  6EDF               	movwf	indf2,c
  8819  0010E0                     
  8820                           ; BSR set to: 0
  8821  0010E0  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8822  0010E2  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8823  0010E4                     l5093:
  8824                           
  8825                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  8826  0010E4  0E00               	movlw	low _dbuf
  8827  0010E6  0100               	movlb	0	; () banked
  8828  0010E8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8829  0010EA  6ED9               	movwf	fsr2l,c
  8830  0010EC  0E02               	movlw	high _dbuf
  8831  0010EE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8832  0010F0  6EDA               	movwf	fsr2h,c
  8833  0010F2  0E00               	movlw	0
  8834  0010F4  6EDF               	movwf	indf2,c
  8835  0010F6                     
  8836                           ; BSR set to: 0
  8837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  8838  0010F6  0E65               	movlw	101
  8839  0010F8  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8840  0010FA  A4D8               	btfss	status,2,c
  8841  0010FC  EF82  F008         	goto	u6101
  8842  001100  EF84  F008         	goto	u6100
  8843  001104                     u6101:
  8844  001104  EF29  F004         	goto	l4905
  8845  001108                     u6100:
  8846  001108                     
  8847                           ; BSR set to: 0
  8848                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  8849  001108  0E00               	movlw	0
  8850  00110A  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8851  00110C  0E4F               	movlw	79
  8852  00110E  6F99               	movwf	efgtoa@i& (0+255),b
  8853  001110                     
  8854                           ; BSR set to: 0
  8855                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  8856  001110  0E00               	movlw	low _dbuf
  8857  001112  2599               	addwf	efgtoa@i& (0+255),w,b
  8858  001114  6ED9               	movwf	fsr2l,c
  8859  001116  0E02               	movlw	high _dbuf
  8860  001118  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8861  00111A  6EDA               	movwf	fsr2h,c
  8862  00111C  0E00               	movlw	0
  8863  00111E  6EDF               	movwf	indf2,c
  8864  001120                     
  8865                           ; BSR set to: 0
  8866                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  8867  001120  0E00               	movlw	0
  8868  001122  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8869  001124  0E00               	movlw	0
  8870  001126  6F89               	movwf	efgtoa@sign& (0+255),b
  8871  001128                     
  8872                           ; BSR set to: 0
  8873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  8874  001128  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8875  00112A  EF9B  F008         	goto	u6110
  8876  00112E  EF99  F008         	goto	u6111
  8877  001132                     u6111:
  8878  001132  EFA3  F008         	goto	l5109
  8879  001136                     u6110:
  8880  001136                     
  8881                           ; BSR set to: 0
  8882                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  8883  001136  0E00               	movlw	0
  8884  001138  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8885  00113A  0E01               	movlw	1
  8886  00113C  6F89               	movwf	efgtoa@sign& (0+255),b
  8887  00113E                     
  8888                           ; BSR set to: 0
  8889                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  8890  00113E  6D9F               	negf	efgtoa@e& (0+255),b
  8891  001140  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  8892  001142  B0D8               	btfsc	status,0,c
  8893  001144  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8894  001146                     l5109:
  8895                           
  8896                           ; BSR set to: 0
  8897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  8898  001146  0E00               	movlw	0
  8899  001148  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8900  00114A  0E02               	movlw	2
  8901  00114C  6F8B               	movwf	efgtoa@p& (0+255),b
  8902                           
  8903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8904  00114E  EFD4  F008         	goto	l5121
  8905  001152                     l5111:
  8906                           
  8907                           ; BSR set to: 0
  8908                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  8909  001152  0799               	decf	efgtoa@i& (0+255),f,b
  8910  001154  A0D8               	btfss	status,0,c
  8911  001156  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8912  001158                     
  8913                           ; BSR set to: 0
  8914                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  8915  001158  0E00               	movlw	low _dbuf
  8916  00115A  2599               	addwf	efgtoa@i& (0+255),w,b
  8917  00115C  6ED9               	movwf	fsr2l,c
  8918  00115E  0E02               	movlw	high _dbuf
  8919  001160  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  8920  001162  6EDA               	movwf	fsr2h,c
  8921  001164  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  8922  001168  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  8923  00116C  0E00               	movlw	0
  8924  00116E  6E04               	movwf	(___awmod@divisor+1)^0,c
  8925  001170  0E0A               	movlw	10
  8926  001172  6E03               	movwf	___awmod@divisor^0,c
  8927  001174  EC98  F028         	call	___awmod	;wreg free
  8928  001178  5001               	movf	?___awmod^0,w,c
  8929  00117A  0F30               	addlw	48
  8930  00117C  6EDF               	movwf	indf2,c
  8931  00117E                     
  8932                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  8933  00117E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  8934  001182  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  8935  001186  0E00               	movlw	0
  8936  001188  6E04               	movwf	(___awdiv@divisor+1)^0,c
  8937  00118A  0E0A               	movlw	10
  8938  00118C  6E03               	movwf	___awdiv@divisor^0,c
  8939  00118E  EC36  F028         	call	___awdiv	;wreg free
  8940  001192  C001  F09F         	movff	?___awdiv,efgtoa@e
  8941  001196  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  8942  00119A                     
  8943                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  8944  00119A  0100               	movlb	0	; () banked
  8945  00119C  078B               	decf	efgtoa@p& (0+255),f,b
  8946  00119E  A0D8               	btfss	status,0,c
  8947  0011A0  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  8948  0011A2                     
  8949                           ; BSR set to: 0
  8950                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  8951  0011A2  078E               	decf	efgtoa@w& (0+255),f,b
  8952  0011A4  A0D8               	btfss	status,0,c
  8953  0011A6  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8954  0011A8                     l5121:
  8955                           
  8956                           ; BSR set to: 0
  8957                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  8958  0011A8  519F               	movf	efgtoa@e& (0+255),w,b
  8959  0011AA  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  8960  0011AC  A4D8               	btfss	status,2,c
  8961  0011AE  EFDB  F008         	goto	u6121
  8962  0011B2  EFDD  F008         	goto	u6120
  8963  0011B6                     u6121:
  8964  0011B6  EFA9  F008         	goto	l5111
  8965  0011BA                     u6120:
  8966  0011BA                     
  8967                           ; BSR set to: 0
  8968  0011BA  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  8969  0011BC  EFEA  F008         	goto	u6130
  8970  0011C0  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  8971  0011C2  E106               	bnz	u6131
  8972  0011C4  058B               	decf	efgtoa@p& (0+255),w,b
  8973  0011C6  B0D8               	btfsc	status,0,c
  8974  0011C8  EFE8  F008         	goto	u6131
  8975  0011CC  EFEA  F008         	goto	u6130
  8976  0011D0                     u6131:
  8977  0011D0  EFA9  F008         	goto	l5111
  8978  0011D4                     u6130:
  8979  0011D4                     
  8980                           ; BSR set to: 0
  8981                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  8982  0011D4  0799               	decf	efgtoa@i& (0+255),f,b
  8983  0011D6  A0D8               	btfss	status,0,c
  8984  0011D8  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  8985  0011DA                     
  8986                           ; BSR set to: 0
  8987                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  8988  0011DA  5189               	movf	efgtoa@sign& (0+255),w,b
  8989  0011DC  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8990  0011DE  A4D8               	btfss	status,2,c
  8991  0011E0  EFF4  F008         	goto	u6141
  8992  0011E4  EFF6  F008         	goto	u6140
  8993  0011E8                     u6141:
  8994  0011E8  EFFC  F008         	goto	l5131
  8995  0011EC                     u6140:
  8996  0011EC                     
  8997                           ; BSR set to: 0
  8998  0011EC  0E00               	movlw	0
  8999  0011EE  6F7A               	movwf	(_efgtoa$2512+1)& (0+255),b
  9000  0011F0  0E2B               	movlw	43
  9001  0011F2  6F79               	movwf	_efgtoa$2512& (0+255),b
  9002  0011F4  EF00  F009         	goto	l5133
  9003  0011F8                     l5131:
  9004                           
  9005                           ; BSR set to: 0
  9006  0011F8  0E00               	movlw	0
  9007  0011FA  6F7A               	movwf	(_efgtoa$2512+1)& (0+255),b
  9008  0011FC  0E2D               	movlw	45
  9009  0011FE  6F79               	movwf	_efgtoa$2512& (0+255),b
  9010  001200                     l5133:
  9011                           
  9012                           ; BSR set to: 0
  9013  001200  0E00               	movlw	low _dbuf
  9014  001202  2599               	addwf	efgtoa@i& (0+255),w,b
  9015  001204  6ED9               	movwf	fsr2l,c
  9016  001206  0E02               	movlw	high _dbuf
  9017  001208  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9018  00120A  6EDA               	movwf	fsr2h,c
  9019  00120C  C079  FFDF         	movff	_efgtoa$2512,indf2
  9020  001210                     
  9021                           ; BSR set to: 0
  9022                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  9023  001210  078E               	decf	efgtoa@w& (0+255),f,b
  9024  001212  A0D8               	btfss	status,0,c
  9025  001214  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9026  001216                     
  9027                           ; BSR set to: 0
  9028                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9029  001216  0799               	decf	efgtoa@i& (0+255),f,b
  9030  001218  A0D8               	btfss	status,0,c
  9031  00121A  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9032  00121C                     
  9033                           ; BSR set to: 0
  9034  00121C  0EBF               	movlw	191
  9035  00121E  6F6A               	movwf	??_efgtoa& (0+255),b
  9036  001220  0EFF               	movlw	255
  9037  001222  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  9038  001224  505E               	movf	efgtoa@c^0,w,c
  9039  001226  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  9040  001228  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  9041  00122A  516A               	movf	??_efgtoa& (0+255),w,b
  9042  00122C  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  9043  00122E  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  9044  001230  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9045  001232  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  9046  001234  E10A               	bnz	u6150
  9047  001236  0E1A               	movlw	26
  9048  001238  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  9049  00123A  A0D8               	btfss	status,0,c
  9050  00123C  EF22  F009         	goto	u6151
  9051  001240  EF25  F009         	goto	u6150
  9052  001244                     u6151:
  9053  001244  0E01               	movlw	1
  9054  001246  EF26  F009         	goto	u6160
  9055  00124A                     u6150:
  9056  00124A  0E00               	movlw	0
  9057  00124C                     u6160:
  9058  00124C  6F7D               	movwf	_efgtoa$2514& (0+255),b
  9059  00124E  6B7E               	clrf	(_efgtoa$2514+1)& (0+255),b
  9060  001250                     
  9061                           ; BSR set to: 0
  9062  001250  517D               	movf	_efgtoa$2514& (0+255),w,b
  9063  001252  117E               	iorwf	(_efgtoa$2514+1)& (0+255),w,b
  9064  001254  A4D8               	btfss	status,2,c
  9065  001256  EF2F  F009         	goto	u6171
  9066  00125A  EF31  F009         	goto	u6170
  9067  00125E                     u6171:
  9068  00125E  EF37  F009         	goto	l5147
  9069  001262                     u6170:
  9070  001262                     
  9071                           ; BSR set to: 0
  9072  001262  0E00               	movlw	0
  9073  001264  6F7C               	movwf	(_efgtoa$2513+1)& (0+255),b
  9074  001266  0E65               	movlw	101
  9075  001268  6F7B               	movwf	_efgtoa$2513& (0+255),b
  9076  00126A  EF3B  F009         	goto	l5149
  9077  00126E                     l5147:
  9078                           
  9079                           ; BSR set to: 0
  9080  00126E  0E00               	movlw	0
  9081  001270  6F7C               	movwf	(_efgtoa$2513+1)& (0+255),b
  9082  001272  0E45               	movlw	69
  9083  001274  6F7B               	movwf	_efgtoa$2513& (0+255),b
  9084  001276                     l5149:
  9085                           
  9086                           ; BSR set to: 0
  9087  001276  0E00               	movlw	low _dbuf
  9088  001278  2599               	addwf	efgtoa@i& (0+255),w,b
  9089  00127A  6ED9               	movwf	fsr2l,c
  9090  00127C  0E02               	movlw	high _dbuf
  9091  00127E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9092  001280  6EDA               	movwf	fsr2h,c
  9093  001282  C07B  FFDF         	movff	_efgtoa$2513,indf2
  9094  001286                     
  9095                           ; BSR set to: 0
  9096                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9097  001286  078E               	decf	efgtoa@w& (0+255),f,b
  9098  001288  A0D8               	btfss	status,0,c
  9099  00128A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9100  00128C                     
  9101                           ; BSR set to: 0
  9102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9103  00128C  0E00               	movlw	low _dbuf
  9104  00128E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9105  001290  6E01               	movwf	strcpy@dest^0,c
  9106  001292  0E02               	movlw	high _dbuf
  9107  001294  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9108  001296  6E02               	movwf	(strcpy@dest+1)^0,c
  9109  001298  0E00               	movlw	low _dbuf
  9110  00129A  2599               	addwf	efgtoa@i& (0+255),w,b
  9111  00129C  6E03               	movwf	strcpy@src^0,c
  9112  00129E  0E02               	movlw	high _dbuf
  9113  0012A0  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9114  0012A2  6E04               	movwf	(strcpy@src+1)^0,c
  9115  0012A4  EC9F  F02B         	call	_strcpy	;wreg free
  9116  0012A8  EF29  F004         	goto	l4905
  9117  0012AC                     l1259:
  9118  0012AC  0012               	return		;funcret
  9119  0012AE                     __end_of_efgtoa:
  9120                           	callstack 0
  9121                           
  9122 ;; *************** function _tolower *****************
  9123 ;; Defined at:
  9124 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9125 ;; Parameters:    Size  Location     Type
  9126 ;;  c               2    6[COMRAM] int 
  9127 ;; Auto vars:     Size  Location     Type
  9128 ;;		None
  9129 ;; Return value:  Size  Location     Type
  9130 ;;                  2    6[COMRAM] int 
  9131 ;; Registers used:
  9132 ;;		wreg, status,2, status,0
  9133 ;; Tracked objects:
  9134 ;;		On entry : 0/0
  9135 ;;		On exit  : 0/0
  9136 ;;		Unchanged: 0/0
  9137 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9138 ;;      Params:         2       0       0       0       0       0       0
  9139 ;;      Locals:         2       0       0       0       0       0       0
  9140 ;;      Temps:          4       0       0       0       0       0       0
  9141 ;;      Totals:         8       0       0       0       0       0       0
  9142 ;;Total ram usage:        8 bytes
  9143 ;; Hardware stack levels used:    1
  9144 ;; Hardware stack levels required when called:    2
  9145 ;; This function calls:
  9146 ;;		_isupper
  9147 ;; This function is called by:
  9148 ;;		_efgtoa
  9149 ;;		_vfpfcnvrt
  9150 ;; This function uses a non-reentrant model
  9151 ;;
  9152                           
  9153                           	psect	text24
  9154  0056DE                     __ptext24:
  9155                           	callstack 0
  9156  0056DE                     _tolower:
  9157                           	callstack 23
  9158  0056DE  0EBF               	movlw	191
  9159  0056E0  6E09               	movwf	??_tolower^0,c
  9160  0056E2  0EFF               	movlw	255
  9161  0056E4  6E0A               	movwf	(??_tolower+1)^0,c
  9162  0056E6  C007  F00B         	movff	tolower@c,??_tolower+2
  9163  0056EA  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9164  0056EE  5009               	movf	??_tolower^0,w,c
  9165  0056F0  260B               	addwf	(??_tolower+2)^0,f,c
  9166  0056F2  500A               	movf	(??_tolower+1)^0,w,c
  9167  0056F4  220C               	addwfc	(??_tolower+3)^0,f,c
  9168  0056F6  500C               	movf	(??_tolower+3)^0,w,c
  9169  0056F8  E10A               	bnz	u5340
  9170  0056FA  0E1A               	movlw	26
  9171  0056FC  5C0B               	subwf	(??_tolower+2)^0,w,c
  9172  0056FE  A0D8               	btfss	status,0,c
  9173  005700  EF84  F02B         	goto	u5341
  9174  005704  EF87  F02B         	goto	u5340
  9175  005708                     u5341:
  9176  005708  0E01               	movlw	1
  9177  00570A  EF88  F02B         	goto	u5350
  9178  00570E                     u5340:
  9179  00570E  0E00               	movlw	0
  9180  005710                     u5350:
  9181  005710  6E0D               	movwf	_tolower$2665^0,c
  9182  005712  6A0E               	clrf	(_tolower$2665+1)^0,c
  9183  005714  500D               	movf	_tolower$2665^0,w,c
  9184  005716  100E               	iorwf	(_tolower$2665+1)^0,w,c
  9185  005718  B4D8               	btfsc	status,2,c
  9186  00571A  EF91  F02B         	goto	u5361
  9187  00571E  EF93  F02B         	goto	u5360
  9188  005722                     u5361:
  9189  005722  EF9A  F02B         	goto	l1507
  9190  005726                     u5360:
  9191  005726  0E20               	movlw	32
  9192  005728  1007               	iorwf	tolower@c^0,w,c
  9193  00572A  6E07               	movwf	?_tolower^0,c
  9194  00572C  5008               	movf	(tolower@c+1)^0,w,c
  9195  00572E  6E08               	movwf	(?_tolower+1)^0,c
  9196  005730  EF9E  F02B         	goto	l1512
  9197  005734                     l1507:
  9198  005734  C007  F007         	movff	tolower@c,?_tolower
  9199  005738  C008  F008         	movff	tolower@c+1,?_tolower+1
  9200  00573C                     l1512:
  9201  00573C  0012               	return		;funcret
  9202  00573E                     __end_of_tolower:
  9203                           	callstack 0
  9204                           
  9205 ;; *************** function _isupper *****************
  9206 ;; Defined at:
  9207 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9208 ;; Parameters:    Size  Location     Type
  9209 ;;  c               2    0[COMRAM] int 
  9210 ;; Auto vars:     Size  Location     Type
  9211 ;;		None
  9212 ;; Return value:  Size  Location     Type
  9213 ;;                  2    0[COMRAM] int 
  9214 ;; Registers used:
  9215 ;;		wreg, status,2, status,0
  9216 ;; Tracked objects:
  9217 ;;		On entry : 0/0
  9218 ;;		On exit  : 0/0
  9219 ;;		Unchanged: 0/0
  9220 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9221 ;;      Params:         2       0       0       0       0       0       0
  9222 ;;      Locals:         0       0       0       0       0       0       0
  9223 ;;      Temps:          4       0       0       0       0       0       0
  9224 ;;      Totals:         6       0       0       0       0       0       0
  9225 ;;Total ram usage:        6 bytes
  9226 ;; Hardware stack levels used:    1
  9227 ;; Hardware stack levels required when called:    1
  9228 ;; This function calls:
  9229 ;;		Nothing
  9230 ;; This function is called by:
  9231 ;;		_efgtoa
  9232 ;;		_vfpfcnvrt
  9233 ;;		_tolower
  9234 ;; This function uses a non-reentrant model
  9235 ;;
  9236                           
  9237                           	psect	text25
  9238  005A72                     __ptext25:
  9239                           	callstack 0
  9240  005A72                     _isupper:
  9241                           	callstack 23
  9242  005A72  0EBF               	movlw	191
  9243  005A74  6E03               	movwf	??_isupper^0,c
  9244  005A76  0EFF               	movlw	255
  9245  005A78  6E04               	movwf	(??_isupper+1)^0,c
  9246  005A7A  C001  F005         	movff	isupper@c,??_isupper+2
  9247  005A7E  C002  F006         	movff	isupper@c+1,??_isupper+3
  9248  005A82  5003               	movf	??_isupper^0,w,c
  9249  005A84  2605               	addwf	(??_isupper+2)^0,f,c
  9250  005A86  5004               	movf	(??_isupper+1)^0,w,c
  9251  005A88  2206               	addwfc	(??_isupper+3)^0,f,c
  9252  005A8A  5006               	movf	(??_isupper+3)^0,w,c
  9253  005A8C  E10A               	bnz	u4350
  9254  005A8E  0E1A               	movlw	26
  9255  005A90  5C05               	subwf	(??_isupper+2)^0,w,c
  9256  005A92  A0D8               	btfss	status,0,c
  9257  005A94  EF4E  F02D         	goto	u4351
  9258  005A98  EF51  F02D         	goto	u4350
  9259  005A9C                     u4351:
  9260  005A9C  0E01               	movlw	1
  9261  005A9E  EF52  F02D         	goto	u4360
  9262  005AA2                     u4350:
  9263  005AA2  0E00               	movlw	0
  9264  005AA4                     u4360:
  9265  005AA4  6E01               	movwf	?_isupper^0,c
  9266  005AA6  6A02               	clrf	(?_isupper+1)^0,c
  9267  005AA8  0012               	return		;funcret
  9268  005AAA                     __end_of_isupper:
  9269                           	callstack 0
  9270                           
  9271 ;; *************** function _strcpy *****************
  9272 ;; Defined at:
  9273 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9274 ;; Parameters:    Size  Location     Type
  9275 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9276 ;;		 -> dbuf(80), 
  9277 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9278 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9279 ;;		 -> dbuf(80), 
  9280 ;; Auto vars:     Size  Location     Type
  9281 ;;  d               2    8[COMRAM] PTR unsigned char 
  9282 ;;		 -> dbuf(80), 
  9283 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9284 ;;		 -> STR_22(4), STR_21(4), STR_18(4), STR_17(4), 
  9285 ;;		 -> dbuf(80), 
  9286 ;; Return value:  Size  Location     Type
  9287 ;;                  2    0[COMRAM] PTR unsigned char 
  9288 ;; Registers used:
  9289 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9290 ;; Tracked objects:
  9291 ;;		On entry : 0/0
  9292 ;;		On exit  : 0/0
  9293 ;;		Unchanged: 0/0
  9294 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9295 ;;      Params:         4       0       0       0       0       0       0
  9296 ;;      Locals:         4       0       0       0       0       0       0
  9297 ;;      Temps:          2       0       0       0       0       0       0
  9298 ;;      Totals:        10       0       0       0       0       0       0
  9299 ;;Total ram usage:       10 bytes
  9300 ;; Hardware stack levels used:    1
  9301 ;; Hardware stack levels required when called:    1
  9302 ;; This function calls:
  9303 ;;		Nothing
  9304 ;; This function is called by:
  9305 ;;		_efgtoa
  9306 ;; This function uses a non-reentrant model
  9307 ;;
  9308                           
  9309                           	psect	text26
  9310  00573E                     __ptext26:
  9311                           	callstack 0
  9312  00573E                     _strcpy:
  9313                           	callstack 23
  9314  00573E  C003  F007         	movff	strcpy@src,strcpy@s
  9315  005742  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9316  005746  C001  F009         	movff	strcpy@dest,strcpy@d
  9317  00574A  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9318  00574E                     l4743:
  9319  00574E  5007               	movf	strcpy@s^0,w,c
  9320  005750  6E05               	movwf	??_strcpy^0,c
  9321  005752  5008               	movf	(strcpy@s+1)^0,w,c
  9322  005754  6E06               	movwf	(??_strcpy+1)^0,c
  9323  005756  4A07               	infsnz	strcpy@s^0,f,c
  9324  005758  2A08               	incf	(strcpy@s+1)^0,f,c
  9325  00575A  C005  FFF6         	movff	??_strcpy,tblptrl
  9326  00575E  C006  FFF7         	movff	??_strcpy+1,tblptrh
  9327  005762  6AF8               	clrf	tblptru,c
  9328  005764  C009  FFD9         	movff	strcpy@d,fsr2l
  9329  005768  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  9330  00576C  4A09               	infsnz	strcpy@d^0,f,c
  9331  00576E  2A0A               	incf	(strcpy@d+1)^0,f,c
  9332  005770  0E05               	movlw	(high __ramtop+-1)
  9333  005772  64F7               	cpfsgt	tblptrh,c
  9334  005774  D003               	bra	u5327
  9335  005776  0008               	tblrd		*
  9336  005778  50F5               	movf	tablat,w,c
  9337  00577A  D005               	bra	u5320
  9338  00577C                     u5327:
  9339  00577C  CFF6 FFE1          	movff	tblptrl,fsr1l
  9340  005780  CFF7 FFE2          	movff	tblptrh,fsr1h
  9341  005784  50E7               	movf	indf1,w,c
  9342  005786                     u5320:
  9343  005786  6EDF               	movwf	indf2,c
  9344  005788  50DF               	movf	indf2,w,c
  9345  00578A  A4D8               	btfss	status,2,c
  9346  00578C  EFCA  F02B         	goto	u5331
  9347  005790  EFCC  F02B         	goto	u5330
  9348  005794                     u5331:
  9349  005794  EFA7  F02B         	goto	l4743
  9350  005798                     u5330:
  9351  005798  0012               	return		;funcret
  9352  00579A                     __end_of_strcpy:
  9353                           	callstack 0
  9354                           
  9355 ;; *************** function _floorf *****************
  9356 ;; Defined at:
  9357 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  9358 ;; Parameters:    Size  Location     Type
  9359 ;;  x               4   77[COMRAM] float 
  9360 ;; Auto vars:     Size  Location     Type
  9361 ;;  u               4    6[BANK0 ] struct .
  9362 ;;  m               4    0[BANK0 ] unsigned long 
  9363 ;;  e               2    4[BANK0 ] int 
  9364 ;; Return value:  Size  Location     Type
  9365 ;;                  4   77[COMRAM] float 
  9366 ;; Registers used:
  9367 ;;		wreg, status,2, status,0
  9368 ;; Tracked objects:
  9369 ;;		On entry : 0/0
  9370 ;;		On exit  : 0/0
  9371 ;;		Unchanged: 0/0
  9372 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9373 ;;      Params:         4       0       0       0       0       0       0
  9374 ;;      Locals:         0      10       0       0       0       0       0
  9375 ;;      Temps:          6       0       0       0       0       0       0
  9376 ;;      Totals:        10      10       0       0       0       0       0
  9377 ;;Total ram usage:       20 bytes
  9378 ;; Hardware stack levels used:    1
  9379 ;; Hardware stack levels required when called:    1
  9380 ;; This function calls:
  9381 ;;		Nothing
  9382 ;; This function is called by:
  9383 ;;		_efgtoa
  9384 ;; This function uses a non-reentrant model
  9385 ;;
  9386                           
  9387                           	psect	text27
  9388  003D58                     __ptext27:
  9389                           	callstack 0
  9390  003D58                     _floorf:
  9391                           	callstack 23
  9392  003D58  C18F  F066         	movff	floorf@F524,floorf@u
  9393  003D5C  C190  F067         	movff	floorf@F524+1,floorf@u+1
  9394  003D60  C191  F068         	movff	floorf@F524+2,floorf@u+2
  9395  003D64  C192  F069         	movff	floorf@F524+3,floorf@u+3
  9396  003D68  C04E  F066         	movff	floorf@x,floorf@u
  9397  003D6C  C04F  F067         	movff	floorf@x+1,floorf@u+1
  9398  003D70  C050  F068         	movff	floorf@x+2,floorf@u+2
  9399  003D74  C051  F069         	movff	floorf@x+3,floorf@u+3
  9400  003D78  0E81               	movlw	129
  9401  003D7A  6E52               	movwf	??_floorf^0,c
  9402  003D7C  0EFF               	movlw	255
  9403  003D7E  6E53               	movwf	(??_floorf+1)^0,c
  9404  003D80  C066  F054         	movff	floorf@u,??_floorf+2
  9405  003D84  C067  F055         	movff	floorf@u+1,??_floorf+3
  9406  003D88  C068  F056         	movff	floorf@u+2,??_floorf+4
  9407  003D8C  C069  F057         	movff	floorf@u+3,??_floorf+5
  9408  003D90  0E18               	movlw	24
  9409  003D92  EFD0  F01E         	goto	u5370
  9410  003D96                     u5375:
  9411  003D96  90D8               	bcf	status,0,c
  9412  003D98  3257               	rrcf	(??_floorf+5)^0,f,c
  9413  003D9A  3256               	rrcf	(??_floorf+4)^0,f,c
  9414  003D9C  3255               	rrcf	(??_floorf+3)^0,f,c
  9415  003D9E  3254               	rrcf	(??_floorf+2)^0,f,c
  9416  003DA0                     u5370:
  9417  003DA0  2EE8               	decfsz	wreg,f,c
  9418  003DA2  EFCB  F01E         	goto	u5375
  9419  003DA6  5054               	movf	(??_floorf+2)^0,w,c
  9420  003DA8  2452               	addwf	??_floorf^0,w,c
  9421  003DAA  0100               	movlb	0	; () banked
  9422  003DAC  6F64               	movwf	floorf@e& (0+255),b
  9423  003DAE  0E00               	movlw	0
  9424  003DB0  2053               	addwfc	(??_floorf+1)^0,w,c
  9425  003DB2  6F65               	movwf	(floorf@e+1)& (0+255),b
  9426  003DB4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9427  003DB6  EFE6  F01E         	goto	u5381
  9428  003DBA  5165               	movf	(floorf@e+1)& (0+255),w,b
  9429  003DBC  E109               	bnz	u5380
  9430  003DBE  0E17               	movlw	23
  9431  003DC0  5D64               	subwf	floorf@e& (0+255),w,b
  9432  003DC2  A0D8               	btfss	status,0,c
  9433  003DC4  EFE6  F01E         	goto	u5381
  9434  003DC8  EFE8  F01E         	goto	u5380
  9435  003DCC                     u5381:
  9436  003DCC  EFF2  F01E         	goto	l4761
  9437  003DD0                     u5380:
  9438  003DD0                     l4759:
  9439                           
  9440                           ; BSR set to: 0
  9441  003DD0  C04E  F04E         	movff	floorf@x,?_floorf
  9442  003DD4  C04F  F04F         	movff	floorf@x+1,?_floorf+1
  9443  003DD8  C050  F050         	movff	floorf@x+2,?_floorf+2
  9444  003DDC  C051  F051         	movff	floorf@x+3,?_floorf+3
  9445  003DE0  EFB6  F01F         	goto	l1431
  9446  003DE4                     l4761:
  9447                           
  9448                           ; BSR set to: 0
  9449  003DE4  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
  9450  003DE6  EFF7  F01E         	goto	u5391
  9451  003DEA  EFF9  F01E         	goto	u5390
  9452  003DEE                     u5391:
  9453  003DEE  EF6A  F01F         	goto	l4771
  9454  003DF2                     u5390:
  9455  003DF2                     
  9456                           ; BSR set to: 0
  9457  003DF2  C064  F052         	movff	floorf@e,??_floorf
  9458  003DF6  0EFF               	movlw	255
  9459  003DF8  6E53               	movwf	(??_floorf+1)^0,c
  9460  003DFA  0EFF               	movlw	255
  9461  003DFC  6E54               	movwf	(??_floorf+2)^0,c
  9462  003DFE  0E7F               	movlw	127
  9463  003E00  6E55               	movwf	(??_floorf+3)^0,c
  9464  003E02  0E00               	movlw	0
  9465  003E04  6E56               	movwf	(??_floorf+4)^0,c
  9466  003E06                     u5405:
  9467  003E06  6652               	tstfsz	??_floorf^0,c
  9468  003E08  EF08  F01F         	goto	u5406
  9469  003E0C  EF10  F01F         	goto	u5407
  9470  003E10                     u5406:
  9471  003E10  3456               	rlcf	(??_floorf+4)^0,w,c
  9472  003E12  3256               	rrcf	(??_floorf+4)^0,f,c
  9473  003E14  3255               	rrcf	(??_floorf+3)^0,f,c
  9474  003E16  3254               	rrcf	(??_floorf+2)^0,f,c
  9475  003E18  3253               	rrcf	(??_floorf+1)^0,f,c
  9476  003E1A  2E52               	decfsz	??_floorf^0,f,c
  9477  003E1C  EF03  F01F         	goto	u5405
  9478  003E20                     u5407:
  9479  003E20  C053  F060         	movff	??_floorf+1,floorf@m
  9480  003E24  C054  F061         	movff	??_floorf+2,floorf@m+1
  9481  003E28  C055  F062         	movff	??_floorf+3,floorf@m+2
  9482  003E2C  C056  F063         	movff	??_floorf+4,floorf@m+3
  9483  003E30  0100               	movlb	0	; () banked
  9484  003E32  5160               	movf	floorf@m& (0+255),w,b
  9485  003E34  1566               	andwf	floorf@u& (0+255),w,b
  9486  003E36  6E52               	movwf	??_floorf^0,c
  9487  003E38  5161               	movf	(floorf@m+1)& (0+255),w,b
  9488  003E3A  1567               	andwf	(floorf@u+1)& (0+255),w,b
  9489  003E3C  6E53               	movwf	(??_floorf+1)^0,c
  9490  003E3E  5162               	movf	(floorf@m+2)& (0+255),w,b
  9491  003E40  1568               	andwf	(floorf@u+2)& (0+255),w,b
  9492  003E42  6E54               	movwf	(??_floorf+2)^0,c
  9493  003E44  5163               	movf	(floorf@m+3)& (0+255),w,b
  9494  003E46  1569               	andwf	(floorf@u+3)& (0+255),w,b
  9495  003E48  6E55               	movwf	(??_floorf+3)^0,c
  9496  003E4A  5052               	movf	??_floorf^0,w,c
  9497  003E4C  1053               	iorwf	(??_floorf+1)^0,w,c
  9498  003E4E  1054               	iorwf	(??_floorf+2)^0,w,c
  9499  003E50  1055               	iorwf	(??_floorf+3)^0,w,c
  9500  003E52  A4D8               	btfss	status,2,c
  9501  003E54  EF2E  F01F         	goto	u5411
  9502  003E58  EF30  F01F         	goto	u5410
  9503  003E5C                     u5411:
  9504  003E5C  EF32  F01F         	goto	l4767
  9505  003E60                     u5410:
  9506  003E60  EFE8  F01E         	goto	l4759
  9507  003E64                     l4767:
  9508                           
  9509                           ; BSR set to: 0
  9510  003E64  C066  F052         	movff	floorf@u,??_floorf
  9511  003E68  C067  F053         	movff	floorf@u+1,??_floorf+1
  9512  003E6C  C068  F054         	movff	floorf@u+2,??_floorf+2
  9513  003E70  C069  F055         	movff	floorf@u+3,??_floorf+3
  9514  003E74  0E20               	movlw	32
  9515  003E76  EF42  F01F         	goto	u5420
  9516  003E7A                     u5425:
  9517  003E7A  90D8               	bcf	status,0,c
  9518  003E7C  3255               	rrcf	(??_floorf+3)^0,f,c
  9519  003E7E  3254               	rrcf	(??_floorf+2)^0,f,c
  9520  003E80  3253               	rrcf	(??_floorf+1)^0,f,c
  9521  003E82  3252               	rrcf	??_floorf^0,f,c
  9522  003E84                     u5420:
  9523  003E84  2EE8               	decfsz	wreg,f,c
  9524  003E86  EF3D  F01F         	goto	u5425
  9525  003E8A  5052               	movf	??_floorf^0,w,c
  9526  003E8C  1053               	iorwf	(??_floorf+1)^0,w,c
  9527  003E8E  1054               	iorwf	(??_floorf+2)^0,w,c
  9528  003E90  1055               	iorwf	(??_floorf+3)^0,w,c
  9529  003E92  B4D8               	btfsc	status,2,c
  9530  003E94  EF4E  F01F         	goto	u5431
  9531  003E98  EF50  F01F         	goto	u5430
  9532  003E9C                     u5431:
  9533  003E9C  EF58  F01F         	goto	l1434
  9534  003EA0                     u5430:
  9535  003EA0                     
  9536                           ; BSR set to: 0
  9537  003EA0  5160               	movf	floorf@m& (0+255),w,b
  9538  003EA2  2766               	addwf	floorf@u& (0+255),f,b
  9539  003EA4  5161               	movf	(floorf@m+1)& (0+255),w,b
  9540  003EA6  2367               	addwfc	(floorf@u+1)& (0+255),f,b
  9541  003EA8  5162               	movf	(floorf@m+2)& (0+255),w,b
  9542  003EAA  2368               	addwfc	(floorf@u+2)& (0+255),f,b
  9543  003EAC  5163               	movf	(floorf@m+3)& (0+255),w,b
  9544  003EAE  2369               	addwfc	(floorf@u+3)& (0+255),f,b
  9545  003EB0                     l1434:
  9546                           
  9547                           ; BSR set to: 0
  9548  003EB0  1D60               	comf	floorf@m& (0+255),w,b
  9549  003EB2  6E52               	movwf	??_floorf^0,c
  9550  003EB4  1D61               	comf	(floorf@m+1)& (0+255),w,b
  9551  003EB6  6E53               	movwf	(??_floorf+1)^0,c
  9552  003EB8  1D62               	comf	(floorf@m+2)& (0+255),w,b
  9553  003EBA  6E54               	movwf	(??_floorf+2)^0,c
  9554  003EBC  1D63               	comf	(floorf@m+3)& (0+255),w,b
  9555  003EBE  6E55               	movwf	(??_floorf+3)^0,c
  9556  003EC0  5052               	movf	??_floorf^0,w,c
  9557  003EC2  1766               	andwf	floorf@u& (0+255),f,b
  9558  003EC4  5053               	movf	(??_floorf+1)^0,w,c
  9559  003EC6  1767               	andwf	(floorf@u+1)& (0+255),f,b
  9560  003EC8  5054               	movf	(??_floorf+2)^0,w,c
  9561  003ECA  1768               	andwf	(floorf@u+2)& (0+255),f,b
  9562  003ECC  5055               	movf	(??_floorf+3)^0,w,c
  9563  003ECE  1769               	andwf	(floorf@u+3)& (0+255),f,b
  9564  003ED0  EFAE  F01F         	goto	l4779
  9565  003ED4                     l4771:
  9566                           
  9567                           ; BSR set to: 0
  9568  003ED4  C066  F052         	movff	floorf@u,??_floorf
  9569  003ED8  C067  F053         	movff	floorf@u+1,??_floorf+1
  9570  003EDC  C068  F054         	movff	floorf@u+2,??_floorf+2
  9571  003EE0  C069  F055         	movff	floorf@u+3,??_floorf+3
  9572  003EE4  0E20               	movlw	32
  9573  003EE6  EF7A  F01F         	goto	u5440
  9574  003EEA                     u5445:
  9575  003EEA  90D8               	bcf	status,0,c
  9576  003EEC  3255               	rrcf	(??_floorf+3)^0,f,c
  9577  003EEE  3254               	rrcf	(??_floorf+2)^0,f,c
  9578  003EF0  3253               	rrcf	(??_floorf+1)^0,f,c
  9579  003EF2  3252               	rrcf	??_floorf^0,f,c
  9580  003EF4                     u5440:
  9581  003EF4  2EE8               	decfsz	wreg,f,c
  9582  003EF6  EF75  F01F         	goto	u5445
  9583  003EFA  5052               	movf	??_floorf^0,w,c
  9584  003EFC  1053               	iorwf	(??_floorf+1)^0,w,c
  9585  003EFE  1054               	iorwf	(??_floorf+2)^0,w,c
  9586  003F00  1055               	iorwf	(??_floorf+3)^0,w,c
  9587  003F02  A4D8               	btfss	status,2,c
  9588  003F04  EF86  F01F         	goto	u5451
  9589  003F08  EF88  F01F         	goto	u5450
  9590  003F0C                     u5451:
  9591  003F0C  EF92  F01F         	goto	l4775
  9592  003F10                     u5450:
  9593  003F10                     
  9594                           ; BSR set to: 0
  9595  003F10  0E00               	movlw	0
  9596  003F12  6F66               	movwf	floorf@u& (0+255),b
  9597  003F14  0E00               	movlw	0
  9598  003F16  6F67               	movwf	(floorf@u+1)& (0+255),b
  9599  003F18  0E00               	movlw	0
  9600  003F1A  6F68               	movwf	(floorf@u+2)& (0+255),b
  9601  003F1C  0E00               	movlw	0
  9602  003F1E  6F69               	movwf	(floorf@u+3)& (0+255),b
  9603  003F20  EFAE  F01F         	goto	l4779
  9604  003F24                     l4775:
  9605                           
  9606                           ; BSR set to: 0
  9607  003F24  90D8               	bcf	status,0,c
  9608  003F26  3566               	rlcf	floorf@u& (0+255),w,b
  9609  003F28  6E52               	movwf	??_floorf^0,c
  9610  003F2A  3567               	rlcf	(floorf@u+1)& (0+255),w,b
  9611  003F2C  6E53               	movwf	(??_floorf+1)^0,c
  9612  003F2E  3568               	rlcf	(floorf@u+2)& (0+255),w,b
  9613  003F30  6E54               	movwf	(??_floorf+2)^0,c
  9614  003F32  3569               	rlcf	(floorf@u+3)& (0+255),w,b
  9615  003F34  6E55               	movwf	(??_floorf+3)^0,c
  9616  003F36  5052               	movf	??_floorf^0,w,c
  9617  003F38  1053               	iorwf	(??_floorf+1)^0,w,c
  9618  003F3A  1054               	iorwf	(??_floorf+2)^0,w,c
  9619  003F3C  1055               	iorwf	(??_floorf+3)^0,w,c
  9620  003F3E  B4D8               	btfsc	status,2,c
  9621  003F40  EFA4  F01F         	goto	u5461
  9622  003F44  EFA6  F01F         	goto	u5460
  9623  003F48                     u5461:
  9624  003F48  EFAE  F01F         	goto	l4779
  9625  003F4C                     u5460:
  9626  003F4C                     
  9627                           ; BSR set to: 0
  9628  003F4C  0E00               	movlw	0
  9629  003F4E  6F66               	movwf	floorf@u& (0+255),b
  9630  003F50  0E00               	movlw	0
  9631  003F52  6F67               	movwf	(floorf@u+1)& (0+255),b
  9632  003F54  0E80               	movlw	128
  9633  003F56  6F68               	movwf	(floorf@u+2)& (0+255),b
  9634  003F58  0EBF               	movlw	191
  9635  003F5A  6F69               	movwf	(floorf@u+3)& (0+255),b
  9636  003F5C                     l4779:
  9637                           
  9638                           ; BSR set to: 0
  9639  003F5C  C066  F04E         	movff	floorf@u,?_floorf
  9640  003F60  C067  F04F         	movff	floorf@u+1,?_floorf+1
  9641  003F64  C068  F050         	movff	floorf@u+2,?_floorf+2
  9642  003F68  C069  F051         	movff	floorf@u+3,?_floorf+3
  9643  003F6C                     l1431:
  9644                           
  9645                           ; BSR set to: 0
  9646  003F6C  0012               	return		;funcret
  9647  003F6E                     __end_of_floorf:
  9648                           	callstack 0
  9649                           
  9650 ;; *************** function ___fpclassifyf *****************
  9651 ;; Defined at:
  9652 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  9653 ;; Parameters:    Size  Location     Type
  9654 ;;  x               4    0[COMRAM] float 
  9655 ;; Auto vars:     Size  Location     Type
  9656 ;;  u               4   10[COMRAM] struct .
  9657 ;;  e               2    8[COMRAM] int 
  9658 ;; Return value:  Size  Location     Type
  9659 ;;                  2    0[COMRAM] int 
  9660 ;; Registers used:
  9661 ;;		wreg, status,2, status,0
  9662 ;; Tracked objects:
  9663 ;;		On entry : 0/0
  9664 ;;		On exit  : 0/0
  9665 ;;		Unchanged: 0/0
  9666 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9667 ;;      Params:         4       0       0       0       0       0       0
  9668 ;;      Locals:         6       0       0       0       0       0       0
  9669 ;;      Temps:          4       0       0       0       0       0       0
  9670 ;;      Totals:        14       0       0       0       0       0       0
  9671 ;;Total ram usage:       14 bytes
  9672 ;; Hardware stack levels used:    1
  9673 ;; Hardware stack levels required when called:    1
  9674 ;; This function calls:
  9675 ;;		Nothing
  9676 ;; This function is called by:
  9677 ;;		_efgtoa
  9678 ;; This function uses a non-reentrant model
  9679 ;;
  9680                           
  9681                           	psect	text28
  9682  004C0E                     __ptext28:
  9683                           	callstack 0
  9684  004C0E                     ___fpclassifyf:
  9685                           	callstack 23
  9686  004C0E  C193  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  9687  004C12  C194  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  9688  004C16  C195  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  9689  004C1A  C196  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  9690  004C1E  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  9691  004C22  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  9692  004C26  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  9693  004C2A  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  9694  004C2E  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9695  004C32  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9696  004C36  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9697  004C3A  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9698  004C3E  0E18               	movlw	24
  9699  004C40  EF27  F026         	goto	u5250
  9700  004C44                     u5255:
  9701  004C44  90D8               	bcf	status,0,c
  9702  004C46  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  9703  004C48  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  9704  004C4A  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  9705  004C4C  3205               	rrcf	??___fpclassifyf^0,f,c
  9706  004C4E                     u5250:
  9707  004C4E  2EE8               	decfsz	wreg,f,c
  9708  004C50  EF22  F026         	goto	u5255
  9709  004C54  5005               	movf	??___fpclassifyf^0,w,c
  9710  004C56  6E09               	movwf	___fpclassifyf@e^0,c
  9711  004C58  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  9712  004C5A  5009               	movf	___fpclassifyf@e^0,w,c
  9713  004C5C  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9714  004C5E  A4D8               	btfss	status,2,c
  9715  004C60  EF34  F026         	goto	u5261
  9716  004C64  EF36  F026         	goto	u5260
  9717  004C68                     u5261:
  9718  004C68  EF56  F026         	goto	l4731
  9719  004C6C                     u5260:
  9720  004C6C  90D8               	bcf	status,0,c
  9721  004C6E  340B               	rlcf	___fpclassifyf@u^0,w,c
  9722  004C70  6E05               	movwf	??___fpclassifyf^0,c
  9723  004C72  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  9724  004C74  6E06               	movwf	(??___fpclassifyf+1)^0,c
  9725  004C76  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  9726  004C78  6E07               	movwf	(??___fpclassifyf+2)^0,c
  9727  004C7A  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  9728  004C7C  6E08               	movwf	(??___fpclassifyf+3)^0,c
  9729  004C7E  5005               	movf	??___fpclassifyf^0,w,c
  9730  004C80  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9731  004C82  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9732  004C84  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9733  004C86  A4D8               	btfss	status,2,c
  9734  004C88  EF48  F026         	goto	u5271
  9735  004C8C  EF4A  F026         	goto	u5270
  9736  004C90                     u5271:
  9737  004C90  EF50  F026         	goto	l4727
  9738  004C94                     u5270:
  9739  004C94  0E00               	movlw	0
  9740  004C96  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9741  004C98  0E02               	movlw	2
  9742  004C9A  6E01               	movwf	?___fpclassifyf^0,c
  9743  004C9C  EF85  F026         	goto	l1386
  9744  004CA0                     l4727:
  9745  004CA0  0E00               	movlw	0
  9746  004CA2  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9747  004CA4  0E03               	movlw	3
  9748  004CA6  6E01               	movwf	?___fpclassifyf^0,c
  9749  004CA8  EF85  F026         	goto	l1386
  9750  004CAC                     l4731:
  9751  004CAC  2809               	incf	___fpclassifyf@e^0,w,c
  9752  004CAE  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  9753  004CB0  A4D8               	btfss	status,2,c
  9754  004CB2  EF5D  F026         	goto	u5281
  9755  004CB6  EF5F  F026         	goto	u5280
  9756  004CBA                     u5281:
  9757  004CBA  EF81  F026         	goto	l4737
  9758  004CBE                     u5280:
  9759  004CBE  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  9760  004CC2  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  9761  004CC6  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  9762  004CCA  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  9763  004CCE  0E09               	movlw	9
  9764  004CD0                     u5295:
  9765  004CD0  90D8               	bcf	status,0,c
  9766  004CD2  3605               	rlcf	??___fpclassifyf^0,f,c
  9767  004CD4  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  9768  004CD6  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  9769  004CD8  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  9770  004CDA  2EE8               	decfsz	wreg,f,c
  9771  004CDC  EF68  F026         	goto	u5295
  9772  004CE0  5005               	movf	??___fpclassifyf^0,w,c
  9773  004CE2  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  9774  004CE4  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  9775  004CE6  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  9776  004CE8  B4D8               	btfsc	status,2,c
  9777  004CEA  EF79  F026         	goto	u5301
  9778  004CEE  EF7C  F026         	goto	u5300
  9779  004CF2                     u5301:
  9780  004CF2  0E01               	movlw	1
  9781  004CF4  EF7D  F026         	goto	u5310
  9782  004CF8                     u5300:
  9783  004CF8  0E00               	movlw	0
  9784  004CFA                     u5310:
  9785  004CFA  6E01               	movwf	?___fpclassifyf^0,c
  9786  004CFC  6A02               	clrf	(?___fpclassifyf+1)^0,c
  9787  004CFE  EF85  F026         	goto	l1386
  9788  004D02                     l4737:
  9789  004D02  0E00               	movlw	0
  9790  004D04  6E02               	movwf	(?___fpclassifyf+1)^0,c
  9791  004D06  0E04               	movlw	4
  9792  004D08  6E01               	movwf	?___fpclassifyf^0,c
  9793  004D0A                     l1386:
  9794  004D0A  0012               	return		;funcret
  9795  004D0C                     __end_of___fpclassifyf:
  9796                           	callstack 0
  9797                           
  9798 ;; *************** function ___fltol *****************
  9799 ;; Defined at:
  9800 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  9801 ;; Parameters:    Size  Location     Type
  9802 ;;  f1              4   77[COMRAM] int 
  9803 ;; Auto vars:     Size  Location     Type
  9804 ;;  exp1            1   86[COMRAM] unsigned char 
  9805 ;;  sign1           1   85[COMRAM] unsigned char 
  9806 ;; Return value:  Size  Location     Type
  9807 ;;                  4   77[COMRAM] long 
  9808 ;; Registers used:
  9809 ;;		wreg, status,2, status,0
  9810 ;; Tracked objects:
  9811 ;;		On entry : 0/0
  9812 ;;		On exit  : 0/0
  9813 ;;		Unchanged: 0/0
  9814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9815 ;;      Params:         4       0       0       0       0       0       0
  9816 ;;      Locals:         2       0       0       0       0       0       0
  9817 ;;      Temps:          4       0       0       0       0       0       0
  9818 ;;      Totals:        10       0       0       0       0       0       0
  9819 ;;Total ram usage:       10 bytes
  9820 ;; Hardware stack levels used:    1
  9821 ;; Hardware stack levels required when called:    1
  9822 ;; This function calls:
  9823 ;;		Nothing
  9824 ;; This function is called by:
  9825 ;;		_scanAdcConversion
  9826 ;;		_PWM1_setDC
  9827 ;;		_PWM2_setDC
  9828 ;;		_speedControl
  9829 ;;		_efgtoa
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text29
  9834  004A04                     __ptext29:
  9835                           	callstack 0
  9836  004A04                     ___fltol:
  9837                           	callstack 25
  9838  004A04  3450               	rlcf	(___fltol@f1+2)^0,w,c
  9839  004A06  3451               	rlcf	(___fltol@f1+3)^0,w,c
  9840  004A08  6E57               	movwf	___fltol@exp1^0,c
  9841  004A0A  5057               	movf	___fltol@exp1^0,w,c
  9842  004A0C  A4D8               	btfss	status,2,c
  9843  004A0E  EF0B  F025         	goto	u5131
  9844  004A12  EF0D  F025         	goto	u5130
  9845  004A16                     u5131:
  9846  004A16  EF17  F025         	goto	l4655
  9847  004A1A                     u5130:
  9848  004A1A                     l4651:
  9849  004A1A  0E00               	movlw	0
  9850  004A1C  6E4E               	movwf	?___fltol^0,c
  9851  004A1E  0E00               	movlw	0
  9852  004A20  6E4F               	movwf	(?___fltol+1)^0,c
  9853  004A22  0E00               	movlw	0
  9854  004A24  6E50               	movwf	(?___fltol+2)^0,c
  9855  004A26  0E00               	movlw	0
  9856  004A28  6E51               	movwf	(?___fltol+3)^0,c
  9857  004A2A  EF84  F025         	goto	l781
  9858  004A2E                     l4655:
  9859  004A2E  C04E  F052         	movff	___fltol@f1,??___fltol
  9860  004A32  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
  9861  004A36  C050  F054         	movff	___fltol@f1+2,??___fltol+2
  9862  004A3A  C051  F055         	movff	___fltol@f1+3,??___fltol+3
  9863  004A3E  0E20               	movlw	32
  9864  004A40  EF27  F025         	goto	u5140
  9865  004A44                     u5145:
  9866  004A44  90D8               	bcf	status,0,c
  9867  004A46  3255               	rrcf	(??___fltol+3)^0,f,c
  9868  004A48  3254               	rrcf	(??___fltol+2)^0,f,c
  9869  004A4A  3253               	rrcf	(??___fltol+1)^0,f,c
  9870  004A4C  3252               	rrcf	??___fltol^0,f,c
  9871  004A4E                     u5140:
  9872  004A4E  2EE8               	decfsz	wreg,f,c
  9873  004A50  EF22  F025         	goto	u5145
  9874  004A54  5052               	movf	??___fltol^0,w,c
  9875  004A56  6E56               	movwf	___fltol@sign1^0,c
  9876  004A58  8E50               	bsf	(___fltol@f1+2)^0,7,c
  9877  004A5A  0EFF               	movlw	255
  9878  004A5C  164E               	andwf	___fltol@f1^0,f,c
  9879  004A5E  0EFF               	movlw	255
  9880  004A60  164F               	andwf	(___fltol@f1+1)^0,f,c
  9881  004A62  0EFF               	movlw	255
  9882  004A64  1650               	andwf	(___fltol@f1+2)^0,f,c
  9883  004A66  0E00               	movlw	0
  9884  004A68  1651               	andwf	(___fltol@f1+3)^0,f,c
  9885  004A6A  0E96               	movlw	150
  9886  004A6C  5E57               	subwf	___fltol@exp1^0,f,c
  9887  004A6E  BE57               	btfsc	___fltol@exp1^0,7,c
  9888  004A70  EF3E  F025         	goto	u5150
  9889  004A74  EF3C  F025         	goto	u5151
  9890  004A78                     u5151:
  9891  004A78  EF54  F025         	goto	l4675
  9892  004A7C                     u5150:
  9893  004A7C  5057               	movf	___fltol@exp1^0,w,c
  9894  004A7E  0A80               	xorlw	128
  9895  004A80  0F97               	addlw	151
  9896  004A82  B0D8               	btfsc	status,0,c
  9897  004A84  EF46  F025         	goto	u5161
  9898  004A88  EF48  F025         	goto	u5160
  9899  004A8C                     u5161:
  9900  004A8C  EF4A  F025         	goto	l4671
  9901  004A90                     u5160:
  9902  004A90  EF0D  F025         	goto	l4651
  9903  004A94                     l4671:
  9904  004A94  90D8               	bcf	status,0,c
  9905  004A96  3251               	rrcf	(___fltol@f1+3)^0,f,c
  9906  004A98  3250               	rrcf	(___fltol@f1+2)^0,f,c
  9907  004A9A  324F               	rrcf	(___fltol@f1+1)^0,f,c
  9908  004A9C  324E               	rrcf	___fltol@f1^0,f,c
  9909  004A9E  3E57               	incfsz	___fltol@exp1^0,f,c
  9910  004AA0  EF4A  F025         	goto	l4671
  9911  004AA4  EF6C  F025         	goto	l4685
  9912  004AA8                     l4675:
  9913  004AA8  0E1F               	movlw	31
  9914  004AAA  6457               	cpfsgt	___fltol@exp1^0,c
  9915  004AAC  EF5A  F025         	goto	u5171
  9916  004AB0  EF5C  F025         	goto	u5170
  9917  004AB4                     u5171:
  9918  004AB4  EF64  F025         	goto	l4683
  9919  004AB8                     u5170:
  9920  004AB8  EF0D  F025         	goto	l4651
  9921  004ABC                     l4681:
  9922  004ABC  90D8               	bcf	status,0,c
  9923  004ABE  364E               	rlcf	___fltol@f1^0,f,c
  9924  004AC0  364F               	rlcf	(___fltol@f1+1)^0,f,c
  9925  004AC2  3650               	rlcf	(___fltol@f1+2)^0,f,c
  9926  004AC4  3651               	rlcf	(___fltol@f1+3)^0,f,c
  9927  004AC6  0657               	decf	___fltol@exp1^0,f,c
  9928  004AC8                     l4683:
  9929  004AC8  5057               	movf	___fltol@exp1^0,w,c
  9930  004ACA  A4D8               	btfss	status,2,c
  9931  004ACC  EF6A  F025         	goto	u5181
  9932  004AD0  EF6C  F025         	goto	u5180
  9933  004AD4                     u5181:
  9934  004AD4  EF5E  F025         	goto	l4681
  9935  004AD8                     u5180:
  9936  004AD8                     l4685:
  9937  004AD8  5056               	movf	___fltol@sign1^0,w,c
  9938  004ADA  B4D8               	btfsc	status,2,c
  9939  004ADC  EF72  F025         	goto	u5191
  9940  004AE0  EF74  F025         	goto	u5190
  9941  004AE4                     u5191:
  9942  004AE4  EF7C  F025         	goto	l4689
  9943  004AE8                     u5190:
  9944  004AE8  1E51               	comf	(___fltol@f1+3)^0,f,c
  9945  004AEA  1E50               	comf	(___fltol@f1+2)^0,f,c
  9946  004AEC  1E4F               	comf	(___fltol@f1+1)^0,f,c
  9947  004AEE  6C4E               	negf	___fltol@f1^0,c
  9948  004AF0  0E00               	movlw	0
  9949  004AF2  224F               	addwfc	(___fltol@f1+1)^0,f,c
  9950  004AF4  2250               	addwfc	(___fltol@f1+2)^0,f,c
  9951  004AF6  2251               	addwfc	(___fltol@f1+3)^0,f,c
  9952  004AF8                     l4689:
  9953  004AF8  C04E  F04E         	movff	___fltol@f1,?___fltol
  9954  004AFC  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
  9955  004B00  C050  F050         	movff	___fltol@f1+2,?___fltol+2
  9956  004B04  C051  F051         	movff	___fltol@f1+3,?___fltol+3
  9957  004B08                     l781:
  9958  004B08  0012               	return		;funcret
  9959  004B0A                     __end_of___fltol:
  9960                           	callstack 0
  9961                           
  9962 ;; *************** function ___flsub *****************
  9963 ;; Defined at:
  9964 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  9965 ;; Parameters:    Size  Location     Type
  9966 ;;  b               4   68[COMRAM] long 
  9967 ;;  a               4   72[COMRAM] long 
  9968 ;; Auto vars:     Size  Location     Type
  9969 ;;		None
  9970 ;; Return value:  Size  Location     Type
  9971 ;;                  4   68[COMRAM] long 
  9972 ;; Registers used:
  9973 ;;		wreg, status,2, status,0, cstack
  9974 ;; Tracked objects:
  9975 ;;		On entry : 0/0
  9976 ;;		On exit  : 0/0
  9977 ;;		Unchanged: 0/0
  9978 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9979 ;;      Params:         8       0       0       0       0       0       0
  9980 ;;      Locals:         0       0       0       0       0       0       0
  9981 ;;      Temps:          0       0       0       0       0       0       0
  9982 ;;      Totals:         8       0       0       0       0       0       0
  9983 ;;Total ram usage:        8 bytes
  9984 ;; Hardware stack levels used:    1
  9985 ;; Hardware stack levels required when called:    2
  9986 ;; This function calls:
  9987 ;;		___fladd
  9988 ;; This function is called by:
  9989 ;;		_stateMachine
  9990 ;;		_efgtoa
  9991 ;; This function uses a non-reentrant model
  9992 ;;
  9993                           
  9994                           	psect	text30
  9995  0058EC                     __ptext30:
  9996                           	callstack 0
  9997  0058EC                     ___flsub:
  9998                           	callstack 22
  9999  0058EC  0E00               	movlw	0
 10000  0058EE  1A49               	xorwf	___flsub@a^0,f,c
 10001  0058F0  0E00               	movlw	0
 10002  0058F2  1A4A               	xorwf	(___flsub@a+1)^0,f,c
 10003  0058F4  0E00               	movlw	0
 10004  0058F6  1A4B               	xorwf	(___flsub@a+2)^0,f,c
 10005  0058F8  0E80               	movlw	128
 10006  0058FA  1A4C               	xorwf	(___flsub@a+3)^0,f,c
 10007  0058FC  C045  F035         	movff	___flsub@b,___fladd@b
 10008  005900  C046  F036         	movff	___flsub@b+1,___fladd@b+1
 10009  005904  C047  F037         	movff	___flsub@b+2,___fladd@b+2
 10010  005908  C048  F038         	movff	___flsub@b+3,___fladd@b+3
 10011  00590C  C049  F039         	movff	___flsub@a,___fladd@a
 10012  005910  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
 10013  005914  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
 10014  005918  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
 10015  00591C  EC85  F015         	call	___fladd	;wreg free
 10016  005920  C035  F045         	movff	?___fladd,?___flsub
 10017  005924  C036  F046         	movff	?___fladd+1,?___flsub+1
 10018  005928  C037  F047         	movff	?___fladd+2,?___flsub+2
 10019  00592C  C038  F048         	movff	?___fladd+3,?___flsub+3
 10020  005930  0012               	return		;funcret
 10021  005932                     __end_of___flsub:
 10022                           	callstack 0
 10023                           
 10024 ;; *************** function ___fladd *****************
 10025 ;; Defined at:
 10026 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10027 ;; Parameters:    Size  Location     Type
 10028 ;;  b               4   52[COMRAM] long 
 10029 ;;  a               4   56[COMRAM] long 
 10030 ;; Auto vars:     Size  Location     Type
 10031 ;;  grs             1   67[COMRAM] unsigned char 
 10032 ;;  bexp            1   66[COMRAM] unsigned char 
 10033 ;;  aexp            1   65[COMRAM] unsigned char 
 10034 ;;  signs           1   64[COMRAM] unsigned char 
 10035 ;; Return value:  Size  Location     Type
 10036 ;;                  4   52[COMRAM] unsigned char 
 10037 ;; Registers used:
 10038 ;;		wreg, status,2, status,0
 10039 ;; Tracked objects:
 10040 ;;		On entry : 0/0
 10041 ;;		On exit  : 0/0
 10042 ;;		Unchanged: 0/0
 10043 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10044 ;;      Params:         8       0       0       0       0       0       0
 10045 ;;      Locals:         4       0       0       0       0       0       0
 10046 ;;      Temps:          4       0       0       0       0       0       0
 10047 ;;      Totals:        16       0       0       0       0       0       0
 10048 ;;Total ram usage:       16 bytes
 10049 ;; Hardware stack levels used:    1
 10050 ;; Hardware stack levels required when called:    1
 10051 ;; This function calls:
 10052 ;;		Nothing
 10053 ;; This function is called by:
 10054 ;;		_stateMachine
 10055 ;;		_speedControl
 10056 ;;		___flsub
 10057 ;;		_efgtoa
 10058 ;; This function uses a non-reentrant model
 10059 ;;
 10060                           
 10061                           	psect	text31
 10062  002B0A                     __ptext31:
 10063                           	callstack 0
 10064  002B0A                     ___fladd:
 10065                           	callstack 25
 10066  002B0A  5038               	movf	(___fladd@b+3)^0,w,c
 10067  002B0C  0B80               	andlw	128
 10068  002B0E  6E41               	movwf	___fladd@signs^0,c
 10069  002B10  5038               	movf	(___fladd@b+3)^0,w,c
 10070  002B12  2438               	addwf	(___fladd@b+3)^0,w,c
 10071  002B14  6E43               	movwf	___fladd@bexp^0,c
 10072  002B16  AE37               	btfss	(___fladd@b+2)^0,7,c
 10073  002B18  EF90  F015         	goto	u3941
 10074  002B1C  EF92  F015         	goto	u3940
 10075  002B20                     u3941:
 10076  002B20  EF93  F015         	goto	l3945
 10077  002B24                     u3940:
 10078  002B24  8043               	bsf	___fladd@bexp^0,0,c
 10079  002B26                     l3945:
 10080  002B26  5043               	movf	___fladd@bexp^0,w,c
 10081  002B28  B4D8               	btfsc	status,2,c
 10082  002B2A  EF99  F015         	goto	u3951
 10083  002B2E  EF9B  F015         	goto	u3950
 10084  002B32                     u3951:
 10085  002B32  EFB0  F015         	goto	l3955
 10086  002B36                     u3950:
 10087  002B36  2843               	incf	___fladd@bexp^0,w,c
 10088  002B38  A4D8               	btfss	status,2,c
 10089  002B3A  EFA1  F015         	goto	u3961
 10090  002B3E  EFA3  F015         	goto	u3960
 10091  002B42                     u3961:
 10092  002B42  EFAB  F015         	goto	l3951
 10093  002B46                     u3960:
 10094  002B46  0E00               	movlw	0
 10095  002B48  6E35               	movwf	___fladd@b^0,c
 10096  002B4A  0E00               	movlw	0
 10097  002B4C  6E36               	movwf	(___fladd@b+1)^0,c
 10098  002B4E  0E00               	movlw	0
 10099  002B50  6E37               	movwf	(___fladd@b+2)^0,c
 10100  002B52  0E00               	movlw	0
 10101  002B54  6E38               	movwf	(___fladd@b+3)^0,c
 10102  002B56                     l3951:
 10103  002B56  8E37               	bsf	(___fladd@b+2)^0,7,c
 10104  002B58  0E00               	movlw	0
 10105  002B5A  6E38               	movwf	(___fladd@b+3)^0,c
 10106  002B5C  EFB8  F015         	goto	l3957
 10107  002B60                     l3955:
 10108  002B60  0E00               	movlw	0
 10109  002B62  6E35               	movwf	___fladd@b^0,c
 10110  002B64  0E00               	movlw	0
 10111  002B66  6E36               	movwf	(___fladd@b+1)^0,c
 10112  002B68  0E00               	movlw	0
 10113  002B6A  6E37               	movwf	(___fladd@b+2)^0,c
 10114  002B6C  0E00               	movlw	0
 10115  002B6E  6E38               	movwf	(___fladd@b+3)^0,c
 10116  002B70                     l3957:
 10117  002B70  503C               	movf	(___fladd@a+3)^0,w,c
 10118  002B72  0B80               	andlw	128
 10119  002B74  6E42               	movwf	___fladd@aexp^0,c
 10120  002B76  5041               	movf	___fladd@signs^0,w,c
 10121  002B78  1842               	xorwf	___fladd@aexp^0,w,c
 10122  002B7A  B4D8               	btfsc	status,2,c
 10123  002B7C  EFC2  F015         	goto	u3971
 10124  002B80  EFC4  F015         	goto	u3970
 10125  002B84                     u3971:
 10126  002B84  EFC5  F015         	goto	l3963
 10127  002B88                     u3970:
 10128  002B88  8C41               	bsf	___fladd@signs^0,6,c
 10129  002B8A                     l3963:
 10130  002B8A  503C               	movf	(___fladd@a+3)^0,w,c
 10131  002B8C  243C               	addwf	(___fladd@a+3)^0,w,c
 10132  002B8E  6E42               	movwf	___fladd@aexp^0,c
 10133  002B90  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10134  002B92  EFCD  F015         	goto	u3981
 10135  002B96  EFCF  F015         	goto	u3980
 10136  002B9A                     u3981:
 10137  002B9A  EFD0  F015         	goto	l3969
 10138  002B9E                     u3980:
 10139  002B9E  8042               	bsf	___fladd@aexp^0,0,c
 10140  002BA0                     l3969:
 10141  002BA0  5042               	movf	___fladd@aexp^0,w,c
 10142  002BA2  B4D8               	btfsc	status,2,c
 10143  002BA4  EFD6  F015         	goto	u3991
 10144  002BA8  EFD8  F015         	goto	u3990
 10145  002BAC                     u3991:
 10146  002BAC  EFED  F015         	goto	l3979
 10147  002BB0                     u3990:
 10148  002BB0  2842               	incf	___fladd@aexp^0,w,c
 10149  002BB2  A4D8               	btfss	status,2,c
 10150  002BB4  EFDE  F015         	goto	u4001
 10151  002BB8  EFE0  F015         	goto	u4000
 10152  002BBC                     u4001:
 10153  002BBC  EFE8  F015         	goto	l3975
 10154  002BC0                     u4000:
 10155  002BC0  0E00               	movlw	0
 10156  002BC2  6E39               	movwf	___fladd@a^0,c
 10157  002BC4  0E00               	movlw	0
 10158  002BC6  6E3A               	movwf	(___fladd@a+1)^0,c
 10159  002BC8  0E00               	movlw	0
 10160  002BCA  6E3B               	movwf	(___fladd@a+2)^0,c
 10161  002BCC  0E00               	movlw	0
 10162  002BCE  6E3C               	movwf	(___fladd@a+3)^0,c
 10163  002BD0                     l3975:
 10164  002BD0  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10165  002BD2  0E00               	movlw	0
 10166  002BD4  6E3C               	movwf	(___fladd@a+3)^0,c
 10167  002BD6  EFF5  F015         	goto	l3981
 10168  002BDA                     l3979:
 10169  002BDA  0E00               	movlw	0
 10170  002BDC  6E39               	movwf	___fladd@a^0,c
 10171  002BDE  0E00               	movlw	0
 10172  002BE0  6E3A               	movwf	(___fladd@a+1)^0,c
 10173  002BE2  0E00               	movlw	0
 10174  002BE4  6E3B               	movwf	(___fladd@a+2)^0,c
 10175  002BE6  0E00               	movlw	0
 10176  002BE8  6E3C               	movwf	(___fladd@a+3)^0,c
 10177  002BEA                     l3981:
 10178  002BEA  5043               	movf	___fladd@bexp^0,w,c
 10179  002BEC  5C42               	subwf	___fladd@aexp^0,w,c
 10180  002BEE  B0D8               	btfsc	status,0,c
 10181  002BF0  EFFC  F015         	goto	u4011
 10182  002BF4  EFFE  F015         	goto	u4010
 10183  002BF8                     u4011:
 10184  002BF8  EF25  F016         	goto	l4017
 10185  002BFC                     u4010:
 10186  002BFC  AC41               	btfss	___fladd@signs^0,6,c
 10187  002BFE  EF03  F016         	goto	u4021
 10188  002C02  EF05  F016         	goto	u4020
 10189  002C06                     u4021:
 10190  002C06  EF07  F016         	goto	l3987
 10191  002C0A                     u4020:
 10192  002C0A  0E80               	movlw	128
 10193  002C0C  1A41               	xorwf	___fladd@signs^0,f,c
 10194  002C0E                     l3987:
 10195  002C0E  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10196  002C12  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10197  002C16  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10198  002C1A  C035  F044         	movff	___fladd@b,___fladd@grs
 10199  002C1E  C039  F035         	movff	___fladd@a,___fladd@b
 10200  002C22  C044  F039         	movff	___fladd@grs,___fladd@a
 10201  002C26  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10202  002C2A  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10203  002C2E  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10204  002C32  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10205  002C36  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10206  002C3A  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10207  002C3E  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10208  002C42  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10209  002C46  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10210  002C4A                     l4017:
 10211  002C4A  0E00               	movlw	0
 10212  002C4C  6E44               	movwf	___fladd@grs^0,c
 10213  002C4E  5043               	movf	___fladd@bexp^0,w,c
 10214  002C50  C042  F03D         	movff	___fladd@aexp,??___fladd
 10215  002C54  6A3E               	clrf	(??___fladd+1)^0,c
 10216  002C56  5E3D               	subwf	??___fladd^0,f,c
 10217  002C58  0E00               	movlw	0
 10218  002C5A  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10219  002C5C  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10220  002C5E  EF3A  F016         	goto	u4031
 10221  002C62  503E               	movf	(??___fladd+1)^0,w,c
 10222  002C64  E109               	bnz	u4030
 10223  002C66  0E1A               	movlw	26
 10224  002C68  5C3D               	subwf	??___fladd^0,w,c
 10225  002C6A  A0D8               	btfss	status,0,c
 10226  002C6C  EF3A  F016         	goto	u4031
 10227  002C70  EF3C  F016         	goto	u4030
 10228  002C74                     u4031:
 10229  002C74  EF73  F016         	goto	l1013
 10230  002C78                     u4030:
 10231  002C78  5035               	movf	___fladd@b^0,w,c
 10232  002C7A  1036               	iorwf	(___fladd@b+1)^0,w,c
 10233  002C7C  1037               	iorwf	(___fladd@b+2)^0,w,c
 10234  002C7E  1038               	iorwf	(___fladd@b+3)^0,w,c
 10235  002C80  A4D8               	btfss	status,2,c
 10236  002C82  EF45  F016         	goto	u4041
 10237  002C86  EF48  F016         	goto	u4040
 10238  002C8A                     u4041:
 10239  002C8A  0E01               	movlw	1
 10240  002C8C  EF49  F016         	goto	u4050
 10241  002C90                     u4040:
 10242  002C90  0E00               	movlw	0
 10243  002C92                     u4050:
 10244  002C92  6E44               	movwf	___fladd@grs^0,c
 10245  002C94  0E00               	movlw	0
 10246  002C96  6E35               	movwf	___fladd@b^0,c
 10247  002C98  0E00               	movlw	0
 10248  002C9A  6E36               	movwf	(___fladd@b+1)^0,c
 10249  002C9C  0E00               	movlw	0
 10250  002C9E  6E37               	movwf	(___fladd@b+2)^0,c
 10251  002CA0  0E00               	movlw	0
 10252  002CA2  6E38               	movwf	(___fladd@b+3)^0,c
 10253  002CA4  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10254  002CA8  EF7C  F016         	goto	l1012
 10255  002CAC                     l1014:
 10256  002CAC  A044               	btfss	___fladd@grs^0,0,c
 10257  002CAE  EF5B  F016         	goto	u4061
 10258  002CB2  EF5D  F016         	goto	u4060
 10259  002CB6                     u4061:
 10260  002CB6  EF63  F016         	goto	l4029
 10261  002CBA                     u4060:
 10262  002CBA  90D8               	bcf	status,0,c
 10263  002CBC  3044               	rrcf	___fladd@grs^0,w,c
 10264  002CBE  0901               	iorlw	1
 10265  002CC0  6E44               	movwf	___fladd@grs^0,c
 10266  002CC2  EF65  F016         	goto	l4031
 10267  002CC6                     l4029:
 10268  002CC6  90D8               	bcf	status,0,c
 10269  002CC8  3244               	rrcf	___fladd@grs^0,f,c
 10270  002CCA                     l4031:
 10271  002CCA  A035               	btfss	___fladd@b^0,0,c
 10272  002CCC  EF6A  F016         	goto	u4071
 10273  002CD0  EF6C  F016         	goto	u4070
 10274  002CD4                     u4071:
 10275  002CD4  EF6D  F016         	goto	l4035
 10276  002CD8                     u4070:
 10277  002CD8  8E44               	bsf	___fladd@grs^0,7,c
 10278  002CDA                     l4035:
 10279  002CDA  3438               	rlcf	(___fladd@b+3)^0,w,c
 10280  002CDC  3238               	rrcf	(___fladd@b+3)^0,f,c
 10281  002CDE  3237               	rrcf	(___fladd@b+2)^0,f,c
 10282  002CE0  3236               	rrcf	(___fladd@b+1)^0,f,c
 10283  002CE2  3235               	rrcf	___fladd@b^0,f,c
 10284  002CE4  2A43               	incf	___fladd@bexp^0,f,c
 10285  002CE6                     l1013:
 10286  002CE6  5042               	movf	___fladd@aexp^0,w,c
 10287  002CE8  5C43               	subwf	___fladd@bexp^0,w,c
 10288  002CEA  A0D8               	btfss	status,0,c
 10289  002CEC  EF7A  F016         	goto	u4081
 10290  002CF0  EF7C  F016         	goto	u4080
 10291  002CF4                     u4081:
 10292  002CF4  EF56  F016         	goto	l1014
 10293  002CF8                     u4080:
 10294  002CF8                     l1012:
 10295  002CF8  BC41               	btfsc	___fladd@signs^0,6,c
 10296  002CFA  EF81  F016         	goto	u4091
 10297  002CFE  EF83  F016         	goto	u4090
 10298  002D02                     u4091:
 10299  002D02  EFC3  F016         	goto	l4063
 10300  002D06                     u4090:
 10301  002D06  5043               	movf	___fladd@bexp^0,w,c
 10302  002D08  A4D8               	btfss	status,2,c
 10303  002D0A  EF89  F016         	goto	u4101
 10304  002D0E  EF8B  F016         	goto	u4100
 10305  002D12                     u4101:
 10306  002D12  EF95  F016         	goto	l4045
 10307  002D16                     u4100:
 10308  002D16  0E00               	movlw	0
 10309  002D18  6E35               	movwf	?___fladd^0,c
 10310  002D1A  0E00               	movlw	0
 10311  002D1C  6E36               	movwf	(?___fladd+1)^0,c
 10312  002D1E  0E00               	movlw	0
 10313  002D20  6E37               	movwf	(?___fladd+2)^0,c
 10314  002D22  0E00               	movlw	0
 10315  002D24  6E38               	movwf	(?___fladd+3)^0,c
 10316  002D26  EFE4  F017         	goto	l1021
 10317  002D2A                     l4045:
 10318  002D2A  5039               	movf	___fladd@a^0,w,c
 10319  002D2C  2635               	addwf	___fladd@b^0,f,c
 10320  002D2E  503A               	movf	(___fladd@a+1)^0,w,c
 10321  002D30  2236               	addwfc	(___fladd@b+1)^0,f,c
 10322  002D32  503B               	movf	(___fladd@a+2)^0,w,c
 10323  002D34  2237               	addwfc	(___fladd@b+2)^0,f,c
 10324  002D36  503C               	movf	(___fladd@a+3)^0,w,c
 10325  002D38  2238               	addwfc	(___fladd@b+3)^0,f,c
 10326  002D3A  A038               	btfss	(___fladd@b+3)^0,0,c
 10327  002D3C  EFA2  F016         	goto	u4111
 10328  002D40  EFA4  F016         	goto	u4110
 10329  002D44                     u4111:
 10330  002D44  EF50  F017         	goto	l4099
 10331  002D48                     u4110:
 10332  002D48  A044               	btfss	___fladd@grs^0,0,c
 10333  002D4A  EFA9  F016         	goto	u4121
 10334  002D4E  EFAB  F016         	goto	u4120
 10335  002D52                     u4121:
 10336  002D52  EFB1  F016         	goto	l4053
 10337  002D56                     u4120:
 10338  002D56  90D8               	bcf	status,0,c
 10339  002D58  3044               	rrcf	___fladd@grs^0,w,c
 10340  002D5A  0901               	iorlw	1
 10341  002D5C  6E44               	movwf	___fladd@grs^0,c
 10342  002D5E  EFB3  F016         	goto	l4055
 10343  002D62                     l4053:
 10344  002D62  90D8               	bcf	status,0,c
 10345  002D64  3244               	rrcf	___fladd@grs^0,f,c
 10346  002D66                     l4055:
 10347  002D66  A035               	btfss	___fladd@b^0,0,c
 10348  002D68  EFB8  F016         	goto	u4131
 10349  002D6C  EFBA  F016         	goto	u4130
 10350  002D70                     u4131:
 10351  002D70  EFBB  F016         	goto	l4059
 10352  002D74                     u4130:
 10353  002D74  8E44               	bsf	___fladd@grs^0,7,c
 10354  002D76                     l4059:
 10355  002D76  3438               	rlcf	(___fladd@b+3)^0,w,c
 10356  002D78  3238               	rrcf	(___fladd@b+3)^0,f,c
 10357  002D7A  3237               	rrcf	(___fladd@b+2)^0,f,c
 10358  002D7C  3236               	rrcf	(___fladd@b+1)^0,f,c
 10359  002D7E  3235               	rrcf	___fladd@b^0,f,c
 10360  002D80  2A43               	incf	___fladd@bexp^0,f,c
 10361  002D82  EF50  F017         	goto	l4099
 10362  002D86                     l4063:
 10363  002D86  5039               	movf	___fladd@a^0,w,c
 10364  002D88  5C35               	subwf	___fladd@b^0,w,c
 10365  002D8A  503A               	movf	(___fladd@a+1)^0,w,c
 10366  002D8C  5836               	subwfb	(___fladd@b+1)^0,w,c
 10367  002D8E  503B               	movf	(___fladd@a+2)^0,w,c
 10368  002D90  5837               	subwfb	(___fladd@b+2)^0,w,c
 10369  002D92  5038               	movf	(___fladd@b+3)^0,w,c
 10370  002D94  0A80               	xorlw	128
 10371  002D96  6E3D               	movwf	??___fladd^0,c
 10372  002D98  503C               	movf	(___fladd@a+3)^0,w,c
 10373  002D9A  0A80               	xorlw	128
 10374  002D9C  583D               	subwfb	??___fladd^0,w,c
 10375  002D9E  B0D8               	btfsc	status,0,c
 10376  002DA0  EFD4  F016         	goto	u4141
 10377  002DA4  EFD6  F016         	goto	u4140
 10378  002DA8                     u4141:
 10379  002DA8  EF01  F017         	goto	l4073
 10380  002DAC                     u4140:
 10381  002DAC  5035               	movf	___fladd@b^0,w,c
 10382  002DAE  5C39               	subwf	___fladd@a^0,w,c
 10383  002DB0  6E3D               	movwf	??___fladd^0,c
 10384  002DB2  5036               	movf	(___fladd@b+1)^0,w,c
 10385  002DB4  583A               	subwfb	(___fladd@a+1)^0,w,c
 10386  002DB6  6E3E               	movwf	(??___fladd+1)^0,c
 10387  002DB8  5037               	movf	(___fladd@b+2)^0,w,c
 10388  002DBA  583B               	subwfb	(___fladd@a+2)^0,w,c
 10389  002DBC  6E3F               	movwf	(??___fladd+2)^0,c
 10390  002DBE  5038               	movf	(___fladd@b+3)^0,w,c
 10391  002DC0  583C               	subwfb	(___fladd@a+3)^0,w,c
 10392  002DC2  6E40               	movwf	(??___fladd+3)^0,c
 10393  002DC4  0EFF               	movlw	255
 10394  002DC6  243D               	addwf	??___fladd^0,w,c
 10395  002DC8  6E35               	movwf	___fladd@b^0,c
 10396  002DCA  0EFF               	movlw	255
 10397  002DCC  203E               	addwfc	(??___fladd+1)^0,w,c
 10398  002DCE  6E36               	movwf	(___fladd@b+1)^0,c
 10399  002DD0  0EFF               	movlw	255
 10400  002DD2  203F               	addwfc	(??___fladd+2)^0,w,c
 10401  002DD4  6E37               	movwf	(___fladd@b+2)^0,c
 10402  002DD6  0EFF               	movlw	255
 10403  002DD8  2040               	addwfc	(??___fladd+3)^0,w,c
 10404  002DDA  6E38               	movwf	(___fladd@b+3)^0,c
 10405  002DDC  0E80               	movlw	128
 10406  002DDE  1A41               	xorwf	___fladd@signs^0,f,c
 10407  002DE0  6C44               	negf	___fladd@grs^0,c
 10408  002DE2  5044               	movf	___fladd@grs^0,w,c
 10409  002DE4  A4D8               	btfss	status,2,c
 10410  002DE6  EFF7  F016         	goto	u4151
 10411  002DEA  EFF9  F016         	goto	u4150
 10412  002DEE                     u4151:
 10413  002DEE  EF09  F017         	goto	l1029
 10414  002DF2                     u4150:
 10415  002DF2  0E01               	movlw	1
 10416  002DF4  2635               	addwf	___fladd@b^0,f,c
 10417  002DF6  0E00               	movlw	0
 10418  002DF8  2236               	addwfc	(___fladd@b+1)^0,f,c
 10419  002DFA  2237               	addwfc	(___fladd@b+2)^0,f,c
 10420  002DFC  2238               	addwfc	(___fladd@b+3)^0,f,c
 10421  002DFE  EF09  F017         	goto	l1029
 10422  002E02                     l4073:
 10423  002E02  5039               	movf	___fladd@a^0,w,c
 10424  002E04  5E35               	subwf	___fladd@b^0,f,c
 10425  002E06  503A               	movf	(___fladd@a+1)^0,w,c
 10426  002E08  5A36               	subwfb	(___fladd@b+1)^0,f,c
 10427  002E0A  503B               	movf	(___fladd@a+2)^0,w,c
 10428  002E0C  5A37               	subwfb	(___fladd@b+2)^0,f,c
 10429  002E0E  503C               	movf	(___fladd@a+3)^0,w,c
 10430  002E10  5A38               	subwfb	(___fladd@b+3)^0,f,c
 10431  002E12                     l1029:
 10432  002E12  5035               	movf	___fladd@b^0,w,c
 10433  002E14  1036               	iorwf	(___fladd@b+1)^0,w,c
 10434  002E16  1037               	iorwf	(___fladd@b+2)^0,w,c
 10435  002E18  1038               	iorwf	(___fladd@b+3)^0,w,c
 10436  002E1A  A4D8               	btfss	status,2,c
 10437  002E1C  EF12  F017         	goto	u4161
 10438  002E20  EF14  F017         	goto	u4160
 10439  002E24                     u4161:
 10440  002E24  EF49  F017         	goto	l4097
 10441  002E28                     u4160:
 10442  002E28  5044               	movf	___fladd@grs^0,w,c
 10443  002E2A  A4D8               	btfss	status,2,c
 10444  002E2C  EF1A  F017         	goto	u4171
 10445  002E30  EF1C  F017         	goto	u4170
 10446  002E34                     u4171:
 10447  002E34  EF49  F017         	goto	l4097
 10448  002E38                     u4170:
 10449  002E38  0E00               	movlw	0
 10450  002E3A  6E35               	movwf	?___fladd^0,c
 10451  002E3C  0E00               	movlw	0
 10452  002E3E  6E36               	movwf	(?___fladd+1)^0,c
 10453  002E40  0E00               	movlw	0
 10454  002E42  6E37               	movwf	(?___fladd+2)^0,c
 10455  002E44  0E00               	movlw	0
 10456  002E46  6E38               	movwf	(?___fladd+3)^0,c
 10457  002E48  EFE4  F017         	goto	l1021
 10458  002E4C                     l4081:
 10459  002E4C  90D8               	bcf	status,0,c
 10460  002E4E  3635               	rlcf	___fladd@b^0,f,c
 10461  002E50  3636               	rlcf	(___fladd@b+1)^0,f,c
 10462  002E52  3637               	rlcf	(___fladd@b+2)^0,f,c
 10463  002E54  3638               	rlcf	(___fladd@b+3)^0,f,c
 10464  002E56  AE44               	btfss	___fladd@grs^0,7,c
 10465  002E58  EF30  F017         	goto	u4181
 10466  002E5C  EF32  F017         	goto	u4180
 10467  002E60                     u4181:
 10468  002E60  EF33  F017         	goto	l4087
 10469  002E64                     u4180:
 10470  002E64  8035               	bsf	___fladd@b^0,0,c
 10471  002E66                     l4087:
 10472  002E66  A044               	btfss	___fladd@grs^0,0,c
 10473  002E68  EF38  F017         	goto	u4191
 10474  002E6C  EF3A  F017         	goto	u4190
 10475  002E70                     u4191:
 10476  002E70  EF3E  F017         	goto	l4091
 10477  002E74                     u4190:
 10478  002E74  80D8               	bsf	status,0,c
 10479  002E76  3644               	rlcf	___fladd@grs^0,f,c
 10480  002E78  EF40  F017         	goto	l4093
 10481  002E7C                     l4091:
 10482  002E7C  90D8               	bcf	status,0,c
 10483  002E7E  3644               	rlcf	___fladd@grs^0,f,c
 10484  002E80                     l4093:
 10485  002E80  5043               	movf	___fladd@bexp^0,w,c
 10486  002E82  B4D8               	btfsc	status,2,c
 10487  002E84  EF46  F017         	goto	u4201
 10488  002E88  EF48  F017         	goto	u4200
 10489  002E8C                     u4201:
 10490  002E8C  EF49  F017         	goto	l4097
 10491  002E90                     u4200:
 10492  002E90  0643               	decf	___fladd@bexp^0,f,c
 10493  002E92                     l4097:
 10494  002E92  AE37               	btfss	(___fladd@b+2)^0,7,c
 10495  002E94  EF4E  F017         	goto	u4211
 10496  002E98  EF50  F017         	goto	u4210
 10497  002E9C                     u4211:
 10498  002E9C  EF26  F017         	goto	l4081
 10499  002EA0                     u4210:
 10500  002EA0                     l4099:
 10501  002EA0  0E00               	movlw	0
 10502  002EA2  6E42               	movwf	___fladd@aexp^0,c
 10503  002EA4  AE44               	btfss	___fladd@grs^0,7,c
 10504  002EA6  EF57  F017         	goto	u4221
 10505  002EAA  EF59  F017         	goto	u4220
 10506  002EAE                     u4221:
 10507  002EAE  EF71  F017         	goto	l1038
 10508  002EB2                     u4220:
 10509  002EB2  C044  F03D         	movff	___fladd@grs,??___fladd
 10510  002EB6  0E7F               	movlw	127
 10511  002EB8  163D               	andwf	??___fladd^0,f,c
 10512  002EBA  B4D8               	btfsc	status,2,c
 10513  002EBC  EF62  F017         	goto	u4231
 10514  002EC0  EF64  F017         	goto	u4230
 10515  002EC4                     u4231:
 10516  002EC4  EF68  F017         	goto	l1039
 10517  002EC8                     u4230:
 10518  002EC8                     l4105:
 10519  002EC8  0E01               	movlw	1
 10520  002ECA  6E42               	movwf	___fladd@aexp^0,c
 10521  002ECC  EF71  F017         	goto	l1038
 10522  002ED0                     l1039:
 10523  002ED0  A035               	btfss	___fladd@b^0,0,c
 10524  002ED2  EF6D  F017         	goto	u4241
 10525  002ED6  EF6F  F017         	goto	u4240
 10526  002EDA                     u4241:
 10527  002EDA  EF71  F017         	goto	l1038
 10528  002EDE                     u4240:
 10529  002EDE  EF64  F017         	goto	l4105
 10530  002EE2                     l1038:
 10531  002EE2  5042               	movf	___fladd@aexp^0,w,c
 10532  002EE4  B4D8               	btfsc	status,2,c
 10533  002EE6  EF77  F017         	goto	u4251
 10534  002EEA  EF79  F017         	goto	u4250
 10535  002EEE                     u4251:
 10536  002EEE  EFA4  F017         	goto	l4117
 10537  002EF2                     u4250:
 10538  002EF2  0E01               	movlw	1
 10539  002EF4  2635               	addwf	___fladd@b^0,f,c
 10540  002EF6  0E00               	movlw	0
 10541  002EF8  2236               	addwfc	(___fladd@b+1)^0,f,c
 10542  002EFA  2237               	addwfc	(___fladd@b+2)^0,f,c
 10543  002EFC  2238               	addwfc	(___fladd@b+3)^0,f,c
 10544  002EFE  A038               	btfss	(___fladd@b+3)^0,0,c
 10545  002F00  EF84  F017         	goto	u4261
 10546  002F04  EF86  F017         	goto	u4260
 10547  002F08                     u4261:
 10548  002F08  EFA4  F017         	goto	l4117
 10549  002F0C                     u4260:
 10550  002F0C  C035  F03D         	movff	___fladd@b,??___fladd
 10551  002F10  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 10552  002F14  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 10553  002F18  C038  F040         	movff	___fladd@b+3,??___fladd+3
 10554  002F1C  3440               	rlcf	(??___fladd+3)^0,w,c
 10555  002F1E  3240               	rrcf	(??___fladd+3)^0,f,c
 10556  002F20  323F               	rrcf	(??___fladd+2)^0,f,c
 10557  002F22  323E               	rrcf	(??___fladd+1)^0,f,c
 10558  002F24  323D               	rrcf	??___fladd^0,f,c
 10559  002F26  C03D  F035         	movff	??___fladd,___fladd@b
 10560  002F2A  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 10561  002F2E  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 10562  002F32  C040  F038         	movff	??___fladd+3,___fladd@b+3
 10563  002F36  2843               	incf	___fladd@bexp^0,w,c
 10564  002F38  B4D8               	btfsc	status,2,c
 10565  002F3A  EFA1  F017         	goto	u4271
 10566  002F3E  EFA3  F017         	goto	u4270
 10567  002F42                     u4271:
 10568  002F42  EFA4  F017         	goto	l4117
 10569  002F46                     u4270:
 10570  002F46  2A43               	incf	___fladd@bexp^0,f,c
 10571  002F48                     l4117:
 10572  002F48  2843               	incf	___fladd@bexp^0,w,c
 10573  002F4A  B4D8               	btfsc	status,2,c
 10574  002F4C  EFAA  F017         	goto	u4281
 10575  002F50  EFAC  F017         	goto	u4280
 10576  002F54                     u4281:
 10577  002F54  EFB4  F017         	goto	l4121
 10578  002F58                     u4280:
 10579  002F58  5043               	movf	___fladd@bexp^0,w,c
 10580  002F5A  A4D8               	btfss	status,2,c
 10581  002F5C  EFB2  F017         	goto	u4291
 10582  002F60  EFB4  F017         	goto	u4290
 10583  002F64                     u4291:
 10584  002F64  EFC6  F017         	goto	l4125
 10585  002F68                     u4290:
 10586  002F68                     l4121:
 10587  002F68  0E00               	movlw	0
 10588  002F6A  6E35               	movwf	___fladd@b^0,c
 10589  002F6C  0E00               	movlw	0
 10590  002F6E  6E36               	movwf	(___fladd@b+1)^0,c
 10591  002F70  0E00               	movlw	0
 10592  002F72  6E37               	movwf	(___fladd@b+2)^0,c
 10593  002F74  0E00               	movlw	0
 10594  002F76  6E38               	movwf	(___fladd@b+3)^0,c
 10595  002F78  5043               	movf	___fladd@bexp^0,w,c
 10596  002F7A  A4D8               	btfss	status,2,c
 10597  002F7C  EFC2  F017         	goto	u4301
 10598  002F80  EFC4  F017         	goto	u4300
 10599  002F84                     u4301:
 10600  002F84  EFC6  F017         	goto	l4125
 10601  002F88                     u4300:
 10602  002F88  0E00               	movlw	0
 10603  002F8A  6E41               	movwf	___fladd@signs^0,c
 10604  002F8C                     l4125:
 10605  002F8C  A043               	btfss	___fladd@bexp^0,0,c
 10606  002F8E  EFCB  F017         	goto	u4311
 10607  002F92  EFCD  F017         	goto	u4310
 10608  002F96                     u4311:
 10609  002F96  EFD0  F017         	goto	l4129
 10610  002F9A                     u4310:
 10611  002F9A  8E37               	bsf	(___fladd@b+2)^0,7,c
 10612  002F9C  EFD1  F017         	goto	l4131
 10613  002FA0                     l4129:
 10614  002FA0  9E37               	bcf	(___fladd@b+2)^0,7,c
 10615  002FA2                     l4131:
 10616  002FA2  90D8               	bcf	status,0,c
 10617  002FA4  3043               	rrcf	___fladd@bexp^0,w,c
 10618  002FA6  6E38               	movwf	(___fladd@b+3)^0,c
 10619  002FA8  AE41               	btfss	___fladd@signs^0,7,c
 10620  002FAA  EFD9  F017         	goto	u4321
 10621  002FAE  EFDB  F017         	goto	u4320
 10622  002FB2                     u4321:
 10623  002FB2  EFDC  F017         	goto	l4137
 10624  002FB6                     u4320:
 10625  002FB6  8E38               	bsf	(___fladd@b+3)^0,7,c
 10626  002FB8                     l4137:
 10627  002FB8  C035  F035         	movff	___fladd@b,?___fladd
 10628  002FBC  C036  F036         	movff	___fladd@b+1,?___fladd+1
 10629  002FC0  C037  F037         	movff	___fladd@b+2,?___fladd+2
 10630  002FC4  C038  F038         	movff	___fladd@b+3,?___fladd+3
 10631  002FC8                     l1021:
 10632  002FC8  0012               	return		;funcret
 10633  002FCA                     __end_of___fladd:
 10634                           	callstack 0
 10635                           
 10636 ;; *************** function ___flneg *****************
 10637 ;; Defined at:
 10638 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 10639 ;; Parameters:    Size  Location     Type
 10640 ;;  f1              4    0[COMRAM] unsigned char 
 10641 ;; Auto vars:     Size  Location     Type
 10642 ;;		None
 10643 ;; Return value:  Size  Location     Type
 10644 ;;                  4    0[COMRAM] unsigned char 
 10645 ;; Registers used:
 10646 ;;		wreg, status,2, status,0
 10647 ;; Tracked objects:
 10648 ;;		On entry : 0/0
 10649 ;;		On exit  : 0/0
 10650 ;;		Unchanged: 0/0
 10651 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10652 ;;      Params:         4       0       0       0       0       0       0
 10653 ;;      Locals:         0       0       0       0       0       0       0
 10654 ;;      Temps:          0       0       0       0       0       0       0
 10655 ;;      Totals:         4       0       0       0       0       0       0
 10656 ;;Total ram usage:        4 bytes
 10657 ;; Hardware stack levels used:    1
 10658 ;; Hardware stack levels required when called:    1
 10659 ;; This function calls:
 10660 ;;		Nothing
 10661 ;; This function is called by:
 10662 ;;		_efgtoa
 10663 ;; This function uses a non-reentrant model
 10664 ;;
 10665                           
 10666                           	psect	text32
 10667  005AAA                     __ptext32:
 10668                           	callstack 0
 10669  005AAA                     ___flneg:
 10670                           	callstack 23
 10671  005AAA  5001               	movf	___flneg@f1^0,w,c
 10672  005AAC  1002               	iorwf	(___flneg@f1+1)^0,w,c
 10673  005AAE  1003               	iorwf	(___flneg@f1+2)^0,w,c
 10674  005AB0  1004               	iorwf	(___flneg@f1+3)^0,w,c
 10675  005AB2  B4D8               	btfsc	status,2,c
 10676  005AB4  EF5E  F02D         	goto	u5121
 10677  005AB8  EF60  F02D         	goto	u5120
 10678  005ABC                     u5121:
 10679  005ABC  EF68  F02D         	goto	l4645
 10680  005AC0                     u5120:
 10681  005AC0  0E00               	movlw	0
 10682  005AC2  1A01               	xorwf	___flneg@f1^0,f,c
 10683  005AC4  0E00               	movlw	0
 10684  005AC6  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 10685  005AC8  0E00               	movlw	0
 10686  005ACA  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 10687  005ACC  0E80               	movlw	128
 10688  005ACE  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 10689  005AD0                     l4645:
 10690  005AD0  C001  F001         	movff	___flneg@f1,?___flneg
 10691  005AD4  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 10692  005AD8  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 10693  005ADC  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 10694  005AE0  0012               	return		;funcret
 10695  005AE2                     __end_of___flneg:
 10696                           	callstack 0
 10697                           
 10698 ;; *************** function ___flmul *****************
 10699 ;; Defined at:
 10700 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 10701 ;; Parameters:    Size  Location     Type
 10702 ;;  b               4   27[COMRAM] unsigned char 
 10703 ;;  a               4   31[COMRAM] unsigned char 
 10704 ;; Auto vars:     Size  Location     Type
 10705 ;;  prod            4   46[COMRAM] struct .
 10706 ;;  grs             4   40[COMRAM] unsigned long 
 10707 ;;  temp            2   50[COMRAM] struct .
 10708 ;;  bexp            1   45[COMRAM] unsigned char 
 10709 ;;  aexp            1   44[COMRAM] unsigned char 
 10710 ;;  sign            1   39[COMRAM] unsigned char 
 10711 ;; Return value:  Size  Location     Type
 10712 ;;                  4   27[COMRAM] unsigned char 
 10713 ;; Registers used:
 10714 ;;		wreg, status,2, status,0, prodl, prodh
 10715 ;; Tracked objects:
 10716 ;;		On entry : 0/0
 10717 ;;		On exit  : 0/0
 10718 ;;		Unchanged: 0/0
 10719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10720 ;;      Params:         8       0       0       0       0       0       0
 10721 ;;      Locals:        13       0       0       0       0       0       0
 10722 ;;      Temps:          4       0       0       0       0       0       0
 10723 ;;      Totals:        25       0       0       0       0       0       0
 10724 ;;Total ram usage:       25 bytes
 10725 ;; Hardware stack levels used:    1
 10726 ;; Hardware stack levels required when called:    1
 10727 ;; This function calls:
 10728 ;;		Nothing
 10729 ;; This function is called by:
 10730 ;;		_scanAdcConversion
 10731 ;;		_speedControl
 10732 ;;		_efgtoa
 10733 ;; This function uses a non-reentrant model
 10734 ;;
 10735                           
 10736                           	psect	text33
 10737  002FCA                     __ptext33:
 10738                           	callstack 0
 10739  002FCA                     ___flmul:
 10740                           	callstack 25
 10741  002FCA  501F               	movf	(___flmul@b+3)^0,w,c
 10742  002FCC  0B80               	andlw	128
 10743  002FCE  6E28               	movwf	___flmul@sign^0,c
 10744  002FD0  501F               	movf	(___flmul@b+3)^0,w,c
 10745  002FD2  241F               	addwf	(___flmul@b+3)^0,w,c
 10746  002FD4  6E2E               	movwf	___flmul@bexp^0,c
 10747  002FD6  AE1E               	btfss	(___flmul@b+2)^0,7,c
 10748  002FD8  EFF0  F017         	goto	u4731
 10749  002FDC  EFF2  F017         	goto	u4730
 10750  002FE0                     u4731:
 10751  002FE0  EFF3  F017         	goto	l4393
 10752  002FE4                     u4730:
 10753  002FE4  802E               	bsf	___flmul@bexp^0,0,c
 10754  002FE6                     l4393:
 10755  002FE6  502E               	movf	___flmul@bexp^0,w,c
 10756  002FE8  B4D8               	btfsc	status,2,c
 10757  002FEA  EFF9  F017         	goto	u4741
 10758  002FEE  EFFB  F017         	goto	u4740
 10759  002FF2                     u4741:
 10760  002FF2  EF0E  F018         	goto	l4401
 10761  002FF6                     u4740:
 10762  002FF6  282E               	incf	___flmul@bexp^0,w,c
 10763  002FF8  A4D8               	btfss	status,2,c
 10764  002FFA  EF01  F018         	goto	u4751
 10765  002FFE  EF03  F018         	goto	u4750
 10766  003002                     u4751:
 10767  003002  EF0B  F018         	goto	l4399
 10768  003006                     u4750:
 10769  003006  0E00               	movlw	0
 10770  003008  6E1C               	movwf	___flmul@b^0,c
 10771  00300A  0E00               	movlw	0
 10772  00300C  6E1D               	movwf	(___flmul@b+1)^0,c
 10773  00300E  0E00               	movlw	0
 10774  003010  6E1E               	movwf	(___flmul@b+2)^0,c
 10775  003012  0E00               	movlw	0
 10776  003014  6E1F               	movwf	(___flmul@b+3)^0,c
 10777  003016                     l4399:
 10778  003016  8E1E               	bsf	(___flmul@b+2)^0,7,c
 10779  003018  EF16  F018         	goto	l4403
 10780  00301C                     l4401:
 10781  00301C  0E00               	movlw	0
 10782  00301E  6E1C               	movwf	___flmul@b^0,c
 10783  003020  0E00               	movlw	0
 10784  003022  6E1D               	movwf	(___flmul@b+1)^0,c
 10785  003024  0E00               	movlw	0
 10786  003026  6E1E               	movwf	(___flmul@b+2)^0,c
 10787  003028  0E00               	movlw	0
 10788  00302A  6E1F               	movwf	(___flmul@b+3)^0,c
 10789  00302C                     l4403:
 10790  00302C  5023               	movf	(___flmul@a+3)^0,w,c
 10791  00302E  0B80               	andlw	128
 10792  003030  1A28               	xorwf	___flmul@sign^0,f,c
 10793  003032  5023               	movf	(___flmul@a+3)^0,w,c
 10794  003034  2423               	addwf	(___flmul@a+3)^0,w,c
 10795  003036  6E2D               	movwf	___flmul@aexp^0,c
 10796  003038  AE22               	btfss	(___flmul@a+2)^0,7,c
 10797  00303A  EF21  F018         	goto	u4761
 10798  00303E  EF23  F018         	goto	u4760
 10799  003042                     u4761:
 10800  003042  EF24  F018         	goto	l4411
 10801  003046                     u4760:
 10802  003046  802D               	bsf	___flmul@aexp^0,0,c
 10803  003048                     l4411:
 10804  003048  502D               	movf	___flmul@aexp^0,w,c
 10805  00304A  B4D8               	btfsc	status,2,c
 10806  00304C  EF2A  F018         	goto	u4771
 10807  003050  EF2C  F018         	goto	u4770
 10808  003054                     u4771:
 10809  003054  EF3F  F018         	goto	l4419
 10810  003058                     u4770:
 10811  003058  282D               	incf	___flmul@aexp^0,w,c
 10812  00305A  A4D8               	btfss	status,2,c
 10813  00305C  EF32  F018         	goto	u4781
 10814  003060  EF34  F018         	goto	u4780
 10815  003064                     u4781:
 10816  003064  EF3C  F018         	goto	l4417
 10817  003068                     u4780:
 10818  003068  0E00               	movlw	0
 10819  00306A  6E20               	movwf	___flmul@a^0,c
 10820  00306C  0E00               	movlw	0
 10821  00306E  6E21               	movwf	(___flmul@a+1)^0,c
 10822  003070  0E00               	movlw	0
 10823  003072  6E22               	movwf	(___flmul@a+2)^0,c
 10824  003074  0E00               	movlw	0
 10825  003076  6E23               	movwf	(___flmul@a+3)^0,c
 10826  003078                     l4417:
 10827  003078  8E22               	bsf	(___flmul@a+2)^0,7,c
 10828  00307A  EF47  F018         	goto	l1098
 10829  00307E                     l4419:
 10830  00307E  0E00               	movlw	0
 10831  003080  6E20               	movwf	___flmul@a^0,c
 10832  003082  0E00               	movlw	0
 10833  003084  6E21               	movwf	(___flmul@a+1)^0,c
 10834  003086  0E00               	movlw	0
 10835  003088  6E22               	movwf	(___flmul@a+2)^0,c
 10836  00308A  0E00               	movlw	0
 10837  00308C  6E23               	movwf	(___flmul@a+3)^0,c
 10838  00308E                     l1098:
 10839  00308E  502D               	movf	___flmul@aexp^0,w,c
 10840  003090  B4D8               	btfsc	status,2,c
 10841  003092  EF4D  F018         	goto	u4791
 10842  003096  EF4F  F018         	goto	u4790
 10843  00309A                     u4791:
 10844  00309A  EF57  F018         	goto	l4423
 10845  00309E                     u4790:
 10846  00309E  502E               	movf	___flmul@bexp^0,w,c
 10847  0030A0  A4D8               	btfss	status,2,c
 10848  0030A2  EF55  F018         	goto	u4801
 10849  0030A6  EF57  F018         	goto	u4800
 10850  0030AA                     u4801:
 10851  0030AA  EF61  F018         	goto	l4427
 10852  0030AE                     u4800:
 10853  0030AE                     l4423:
 10854  0030AE  0E00               	movlw	0
 10855  0030B0  6E1C               	movwf	?___flmul^0,c
 10856  0030B2  0E00               	movlw	0
 10857  0030B4  6E1D               	movwf	(?___flmul+1)^0,c
 10858  0030B6  0E00               	movlw	0
 10859  0030B8  6E1E               	movwf	(?___flmul+2)^0,c
 10860  0030BA  0E00               	movlw	0
 10861  0030BC  6E1F               	movwf	(?___flmul+3)^0,c
 10862  0030BE  EFF9  F019         	goto	l1102
 10863  0030C2                     l4427:
 10864  0030C2  5022               	movf	(___flmul@a+2)^0,w,c
 10865  0030C4  021C               	mulwf	___flmul@b^0,c
 10866  0030C6  CFF3 F033          	movff	prodl,___flmul@temp
 10867  0030CA  CFF4 F034          	movff	prodh,___flmul@temp+1
 10868  0030CE  5033               	movf	___flmul@temp^0,w,c
 10869  0030D0  6E29               	movwf	___flmul@grs^0,c
 10870  0030D2  6A2A               	clrf	(___flmul@grs+1)^0,c
 10871  0030D4  6A2B               	clrf	(___flmul@grs+2)^0,c
 10872  0030D6  6A2C               	clrf	(___flmul@grs+3)^0,c
 10873  0030D8  5034               	movf	(___flmul@temp+1)^0,w,c
 10874  0030DA  6E2F               	movwf	___flmul@prod^0,c
 10875  0030DC  6A30               	clrf	(___flmul@prod+1)^0,c
 10876  0030DE  6A31               	clrf	(___flmul@prod+2)^0,c
 10877  0030E0  6A32               	clrf	(___flmul@prod+3)^0,c
 10878  0030E2  5021               	movf	(___flmul@a+1)^0,w,c
 10879  0030E4  021D               	mulwf	(___flmul@b+1)^0,c
 10880  0030E6  CFF3 F033          	movff	prodl,___flmul@temp
 10881  0030EA  CFF4 F034          	movff	prodh,___flmul@temp+1
 10882  0030EE  5033               	movf	___flmul@temp^0,w,c
 10883  0030F0  2629               	addwf	___flmul@grs^0,f,c
 10884  0030F2  0E00               	movlw	0
 10885  0030F4  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10886  0030F6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10887  0030F8  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10888  0030FA  5034               	movf	(___flmul@temp+1)^0,w,c
 10889  0030FC  262F               	addwf	___flmul@prod^0,f,c
 10890  0030FE  0E00               	movlw	0
 10891  003100  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10892  003102  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10893  003104  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10894  003106  5020               	movf	___flmul@a^0,w,c
 10895  003108  021E               	mulwf	(___flmul@b+2)^0,c
 10896  00310A  CFF3 F033          	movff	prodl,___flmul@temp
 10897  00310E  CFF4 F034          	movff	prodh,___flmul@temp+1
 10898  003112  5033               	movf	___flmul@temp^0,w,c
 10899  003114  2629               	addwf	___flmul@grs^0,f,c
 10900  003116  0E00               	movlw	0
 10901  003118  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10902  00311A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10903  00311C  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10904  00311E  5034               	movf	(___flmul@temp+1)^0,w,c
 10905  003120  262F               	addwf	___flmul@prod^0,f,c
 10906  003122  0E00               	movlw	0
 10907  003124  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10908  003126  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10909  003128  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10910  00312A  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10911  00312E  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10912  003132  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10913  003136  6A29               	clrf	___flmul@grs^0,c
 10914  003138  5020               	movf	___flmul@a^0,w,c
 10915  00313A  021D               	mulwf	(___flmul@b+1)^0,c
 10916  00313C  CFF3 F033          	movff	prodl,___flmul@temp
 10917  003140  CFF4 F034          	movff	prodh,___flmul@temp+1
 10918  003144  5033               	movf	___flmul@temp^0,w,c
 10919  003146  2629               	addwf	___flmul@grs^0,f,c
 10920  003148  5034               	movf	(___flmul@temp+1)^0,w,c
 10921  00314A  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10922  00314C  0E00               	movlw	0
 10923  00314E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10924  003150  0E00               	movlw	0
 10925  003152  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10926  003154  5021               	movf	(___flmul@a+1)^0,w,c
 10927  003156  021C               	mulwf	___flmul@b^0,c
 10928  003158  CFF3 F033          	movff	prodl,___flmul@temp
 10929  00315C  CFF4 F034          	movff	prodh,___flmul@temp+1
 10930  003160  5033               	movf	___flmul@temp^0,w,c
 10931  003162  2629               	addwf	___flmul@grs^0,f,c
 10932  003164  5034               	movf	(___flmul@temp+1)^0,w,c
 10933  003166  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10934  003168  0E00               	movlw	0
 10935  00316A  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10936  00316C  0E00               	movlw	0
 10937  00316E  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10938  003170  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 10939  003174  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 10940  003178  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 10941  00317C  6A29               	clrf	___flmul@grs^0,c
 10942  00317E  5020               	movf	___flmul@a^0,w,c
 10943  003180  021C               	mulwf	___flmul@b^0,c
 10944  003182  CFF3 F033          	movff	prodl,___flmul@temp
 10945  003186  CFF4 F034          	movff	prodh,___flmul@temp+1
 10946  00318A  5033               	movf	___flmul@temp^0,w,c
 10947  00318C  2629               	addwf	___flmul@grs^0,f,c
 10948  00318E  5034               	movf	(___flmul@temp+1)^0,w,c
 10949  003190  222A               	addwfc	(___flmul@grs+1)^0,f,c
 10950  003192  0E00               	movlw	0
 10951  003194  222B               	addwfc	(___flmul@grs+2)^0,f,c
 10952  003196  0E00               	movlw	0
 10953  003198  222C               	addwfc	(___flmul@grs+3)^0,f,c
 10954  00319A  5022               	movf	(___flmul@a+2)^0,w,c
 10955  00319C  021D               	mulwf	(___flmul@b+1)^0,c
 10956  00319E  CFF3 F033          	movff	prodl,___flmul@temp
 10957  0031A2  CFF4 F034          	movff	prodh,___flmul@temp+1
 10958  0031A6  5033               	movf	___flmul@temp^0,w,c
 10959  0031A8  262F               	addwf	___flmul@prod^0,f,c
 10960  0031AA  5034               	movf	(___flmul@temp+1)^0,w,c
 10961  0031AC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10962  0031AE  0E00               	movlw	0
 10963  0031B0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10964  0031B2  0E00               	movlw	0
 10965  0031B4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10966  0031B6  5021               	movf	(___flmul@a+1)^0,w,c
 10967  0031B8  021E               	mulwf	(___flmul@b+2)^0,c
 10968  0031BA  CFF3 F033          	movff	prodl,___flmul@temp
 10969  0031BE  CFF4 F034          	movff	prodh,___flmul@temp+1
 10970  0031C2  5033               	movf	___flmul@temp^0,w,c
 10971  0031C4  262F               	addwf	___flmul@prod^0,f,c
 10972  0031C6  5034               	movf	(___flmul@temp+1)^0,w,c
 10973  0031C8  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10974  0031CA  0E00               	movlw	0
 10975  0031CC  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10976  0031CE  0E00               	movlw	0
 10977  0031D0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 10978  0031D2  5022               	movf	(___flmul@a+2)^0,w,c
 10979  0031D4  021E               	mulwf	(___flmul@b+2)^0,c
 10980  0031D6  CFF3 F033          	movff	prodl,___flmul@temp
 10981  0031DA  CFF4 F034          	movff	prodh,___flmul@temp+1
 10982  0031DE  5033               	movf	___flmul@temp^0,w,c
 10983  0031E0  6E24               	movwf	??___flmul^0,c
 10984  0031E2  5034               	movf	(___flmul@temp+1)^0,w,c
 10985  0031E4  6E25               	movwf	(??___flmul+1)^0,c
 10986  0031E6  6A26               	clrf	(??___flmul+2)^0,c
 10987  0031E8  6A27               	clrf	(??___flmul+3)^0,c
 10988  0031EA  C026  F027         	movff	??___flmul+2,??___flmul+3
 10989  0031EE  C025  F026         	movff	??___flmul+1,??___flmul+2
 10990  0031F2  C024  F025         	movff	??___flmul,??___flmul+1
 10991  0031F6  6A24               	clrf	??___flmul^0,c
 10992  0031F8  5024               	movf	??___flmul^0,w,c
 10993  0031FA  262F               	addwf	___flmul@prod^0,f,c
 10994  0031FC  5025               	movf	(??___flmul+1)^0,w,c
 10995  0031FE  2230               	addwfc	(___flmul@prod+1)^0,f,c
 10996  003200  5026               	movf	(??___flmul+2)^0,w,c
 10997  003202  2231               	addwfc	(___flmul@prod+2)^0,f,c
 10998  003204  5027               	movf	(??___flmul+3)^0,w,c
 10999  003206  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11000  003208  C029  F024         	movff	___flmul@grs,??___flmul
 11001  00320C  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 11002  003210  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 11003  003214  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 11004  003218  0E19               	movlw	25
 11005  00321A  EF14  F019         	goto	u4810
 11006  00321E                     u4815:
 11007  00321E  90D8               	bcf	status,0,c
 11008  003220  3227               	rrcf	(??___flmul+3)^0,f,c
 11009  003222  3226               	rrcf	(??___flmul+2)^0,f,c
 11010  003224  3225               	rrcf	(??___flmul+1)^0,f,c
 11011  003226  3224               	rrcf	??___flmul^0,f,c
 11012  003228                     u4810:
 11013  003228  2EE8               	decfsz	wreg,f,c
 11014  00322A  EF0F  F019         	goto	u4815
 11015  00322E  5024               	movf	??___flmul^0,w,c
 11016  003230  262F               	addwf	___flmul@prod^0,f,c
 11017  003232  5025               	movf	(??___flmul+1)^0,w,c
 11018  003234  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11019  003236  5026               	movf	(??___flmul+2)^0,w,c
 11020  003238  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11021  00323A  5027               	movf	(??___flmul+3)^0,w,c
 11022  00323C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11023  00323E  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11024  003242  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11025  003246  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11026  00324A  6A29               	clrf	___flmul@grs^0,c
 11027  00324C  502D               	movf	___flmul@aexp^0,w,c
 11028  00324E  C02E  F024         	movff	___flmul@bexp,??___flmul
 11029  003252  6A25               	clrf	(??___flmul+1)^0,c
 11030  003254  2624               	addwf	??___flmul^0,f,c
 11031  003256  0E00               	movlw	0
 11032  003258  2225               	addwfc	(??___flmul+1)^0,f,c
 11033  00325A  0E82               	movlw	130
 11034  00325C  2424               	addwf	??___flmul^0,w,c
 11035  00325E  6E33               	movwf	___flmul@temp^0,c
 11036  003260  0EFF               	movlw	255
 11037  003262  2025               	addwfc	(??___flmul+1)^0,w,c
 11038  003264  6E34               	movwf	(___flmul@temp+1)^0,c
 11039  003266  EF4A  F019         	goto	l4475
 11040  00326A                     l4469:
 11041  00326A  90D8               	bcf	status,0,c
 11042  00326C  362F               	rlcf	___flmul@prod^0,f,c
 11043  00326E  3630               	rlcf	(___flmul@prod+1)^0,f,c
 11044  003270  3631               	rlcf	(___flmul@prod+2)^0,f,c
 11045  003272  3632               	rlcf	(___flmul@prod+3)^0,f,c
 11046  003274  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11047  003276  EF3F  F019         	goto	u4821
 11048  00327A  EF41  F019         	goto	u4820
 11049  00327E                     u4821:
 11050  00327E  EF42  F019         	goto	l1105
 11051  003282                     u4820:
 11052  003282  802F               	bsf	___flmul@prod^0,0,c
 11053  003284                     l1105:
 11054  003284  90D8               	bcf	status,0,c
 11055  003286  3629               	rlcf	___flmul@grs^0,f,c
 11056  003288  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11057  00328A  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11058  00328C  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11059  00328E  0633               	decf	___flmul@temp^0,f,c
 11060  003290  A0D8               	btfss	status,0,c
 11061  003292  0634               	decf	(___flmul@temp+1)^0,f,c
 11062  003294                     l4475:
 11063  003294  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11064  003296  EF4F  F019         	goto	u4831
 11065  00329A  EF51  F019         	goto	u4830
 11066  00329E                     u4831:
 11067  00329E  EF35  F019         	goto	l4469
 11068  0032A2                     u4830:
 11069  0032A2  0E00               	movlw	0
 11070  0032A4  6E2D               	movwf	___flmul@aexp^0,c
 11071  0032A6  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11072  0032A8  EF58  F019         	goto	u4841
 11073  0032AC  EF5A  F019         	goto	u4840
 11074  0032B0                     u4841:
 11075  0032B0  EF7E  F019         	goto	l1107
 11076  0032B4                     u4840:
 11077  0032B4  0EFF               	movlw	255
 11078  0032B6  1429               	andwf	___flmul@grs^0,w,c
 11079  0032B8  6E24               	movwf	??___flmul^0,c
 11080  0032BA  0EFF               	movlw	255
 11081  0032BC  142A               	andwf	(___flmul@grs+1)^0,w,c
 11082  0032BE  6E25               	movwf	(??___flmul+1)^0,c
 11083  0032C0  0EFF               	movlw	255
 11084  0032C2  142B               	andwf	(___flmul@grs+2)^0,w,c
 11085  0032C4  6E26               	movwf	(??___flmul+2)^0,c
 11086  0032C6  0E7F               	movlw	127
 11087  0032C8  142C               	andwf	(___flmul@grs+3)^0,w,c
 11088  0032CA  6E27               	movwf	(??___flmul+3)^0,c
 11089  0032CC  5024               	movf	??___flmul^0,w,c
 11090  0032CE  1025               	iorwf	(??___flmul+1)^0,w,c
 11091  0032D0  1026               	iorwf	(??___flmul+2)^0,w,c
 11092  0032D2  1027               	iorwf	(??___flmul+3)^0,w,c
 11093  0032D4  B4D8               	btfsc	status,2,c
 11094  0032D6  EF6F  F019         	goto	u4851
 11095  0032DA  EF71  F019         	goto	u4850
 11096  0032DE                     u4851:
 11097  0032DE  EF75  F019         	goto	l1108
 11098  0032E2                     u4850:
 11099  0032E2                     l4483:
 11100  0032E2  0E01               	movlw	1
 11101  0032E4  6E2D               	movwf	___flmul@aexp^0,c
 11102  0032E6  EF7E  F019         	goto	l1107
 11103  0032EA                     l1108:
 11104  0032EA  A02F               	btfss	___flmul@prod^0,0,c
 11105  0032EC  EF7A  F019         	goto	u4861
 11106  0032F0  EF7C  F019         	goto	u4860
 11107  0032F4                     u4861:
 11108  0032F4  EF7E  F019         	goto	l1107
 11109  0032F8                     u4860:
 11110  0032F8  EF71  F019         	goto	l4483
 11111  0032FC                     l1107:
 11112  0032FC  502D               	movf	___flmul@aexp^0,w,c
 11113  0032FE  B4D8               	btfsc	status,2,c
 11114  003300  EF84  F019         	goto	u4871
 11115  003304  EF86  F019         	goto	u4870
 11116  003308                     u4871:
 11117  003308  EFAA  F019         	goto	l4495
 11118  00330C                     u4870:
 11119  00330C  0E01               	movlw	1
 11120  00330E  262F               	addwf	___flmul@prod^0,f,c
 11121  003310  0E00               	movlw	0
 11122  003312  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11123  003314  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11124  003316  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11125  003318  A032               	btfss	(___flmul@prod+3)^0,0,c
 11126  00331A  EF91  F019         	goto	u4881
 11127  00331E  EF93  F019         	goto	u4880
 11128  003322                     u4881:
 11129  003322  EFAA  F019         	goto	l4495
 11130  003326                     u4880:
 11131  003326  C02F  F024         	movff	___flmul@prod,??___flmul
 11132  00332A  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11133  00332E  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11134  003332  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11135  003336  3427               	rlcf	(??___flmul+3)^0,w,c
 11136  003338  3227               	rrcf	(??___flmul+3)^0,f,c
 11137  00333A  3226               	rrcf	(??___flmul+2)^0,f,c
 11138  00333C  3225               	rrcf	(??___flmul+1)^0,f,c
 11139  00333E  3224               	rrcf	??___flmul^0,f,c
 11140  003340  C024  F02F         	movff	??___flmul,___flmul@prod
 11141  003344  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11142  003348  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11143  00334C  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11144  003350  4A33               	infsnz	___flmul@temp^0,f,c
 11145  003352  2A34               	incf	(___flmul@temp+1)^0,f,c
 11146  003354                     l4495:
 11147  003354  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11148  003356  EFB5  F019         	goto	u4891
 11149  00335A  5034               	movf	(___flmul@temp+1)^0,w,c
 11150  00335C  E108               	bnz	u4890
 11151  00335E  2833               	incf	___flmul@temp^0,w,c
 11152  003360  A0D8               	btfss	status,0,c
 11153  003362  EFB5  F019         	goto	u4891
 11154  003366  EFB7  F019         	goto	u4890
 11155  00336A                     u4891:
 11156  00336A  EFC1  F019         	goto	l4499
 11157  00336E                     u4890:
 11158  00336E  0E00               	movlw	0
 11159  003370  6E2F               	movwf	___flmul@prod^0,c
 11160  003372  0E00               	movlw	0
 11161  003374  6E30               	movwf	(___flmul@prod+1)^0,c
 11162  003376  0E80               	movlw	128
 11163  003378  6E31               	movwf	(___flmul@prod+2)^0,c
 11164  00337A  0E7F               	movlw	127
 11165  00337C  6E32               	movwf	(___flmul@prod+3)^0,c
 11166  00337E  EFEF  F019         	goto	l4511
 11167  003382                     l4499:
 11168  003382  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11169  003384  EFCE  F019         	goto	u4900
 11170  003388  5034               	movf	(___flmul@temp+1)^0,w,c
 11171  00338A  E106               	bnz	u4901
 11172  00338C  0433               	decf	___flmul@temp^0,w,c
 11173  00338E  B0D8               	btfsc	status,0,c
 11174  003390  EFCC  F019         	goto	u4901
 11175  003394  EFCE  F019         	goto	u4900
 11176  003398                     u4901:
 11177  003398  EFDA  F019         	goto	l1115
 11178  00339C                     u4900:
 11179  00339C  0E00               	movlw	0
 11180  00339E  6E2F               	movwf	___flmul@prod^0,c
 11181  0033A0  0E00               	movlw	0
 11182  0033A2  6E30               	movwf	(___flmul@prod+1)^0,c
 11183  0033A4  0E00               	movlw	0
 11184  0033A6  6E31               	movwf	(___flmul@prod+2)^0,c
 11185  0033A8  0E00               	movlw	0
 11186  0033AA  6E32               	movwf	(___flmul@prod+3)^0,c
 11187  0033AC  0E00               	movlw	0
 11188  0033AE  6E28               	movwf	___flmul@sign^0,c
 11189  0033B0  EFEF  F019         	goto	l4511
 11190  0033B4                     l1115:
 11191  0033B4  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11192  0033B8  0EFF               	movlw	255
 11193  0033BA  162F               	andwf	___flmul@prod^0,f,c
 11194  0033BC  0EFF               	movlw	255
 11195  0033BE  1630               	andwf	(___flmul@prod+1)^0,f,c
 11196  0033C0  0E7F               	movlw	127
 11197  0033C2  1631               	andwf	(___flmul@prod+2)^0,f,c
 11198  0033C4  0E00               	movlw	0
 11199  0033C6  1632               	andwf	(___flmul@prod+3)^0,f,c
 11200  0033C8  A02E               	btfss	___flmul@bexp^0,0,c
 11201  0033CA  EFE9  F019         	goto	u4911
 11202  0033CE  EFEB  F019         	goto	u4910
 11203  0033D2                     u4911:
 11204  0033D2  EFEC  F019         	goto	l4509
 11205  0033D6                     u4910:
 11206  0033D6  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11207  0033D8                     l4509:
 11208  0033D8  90D8               	bcf	status,0,c
 11209  0033DA  302E               	rrcf	___flmul@bexp^0,w,c
 11210  0033DC  6E32               	movwf	(___flmul@prod+3)^0,c
 11211  0033DE                     l4511:
 11212  0033DE  5028               	movf	___flmul@sign^0,w,c
 11213  0033E0  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11214  0033E2  C02F  F01C         	movff	___flmul@prod,?___flmul
 11215  0033E6  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11216  0033EA  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11217  0033EE  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11218  0033F2                     l1102:
 11219  0033F2  0012               	return		;funcret
 11220  0033F4                     __end_of___flmul:
 11221                           	callstack 0
 11222                           
 11223 ;; *************** function ___flge *****************
 11224 ;; Defined at:
 11225 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  ff1             4   52[COMRAM] unsigned char 
 11228 ;;  ff2             4   56[COMRAM] unsigned char 
 11229 ;; Auto vars:     Size  Location     Type
 11230 ;;		None
 11231 ;; Return value:  Size  Location     Type
 11232 ;;		None               void
 11233 ;; Registers used:
 11234 ;;		wreg, status,2, status,0
 11235 ;; Tracked objects:
 11236 ;;		On entry : 0/0
 11237 ;;		On exit  : 0/0
 11238 ;;		Unchanged: 0/0
 11239 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11240 ;;      Params:         8       0       0       0       0       0       0
 11241 ;;      Locals:         0       0       0       0       0       0       0
 11242 ;;      Temps:          4       0       0       0       0       0       0
 11243 ;;      Totals:        12       0       0       0       0       0       0
 11244 ;;Total ram usage:       12 bytes
 11245 ;; Hardware stack levels used:    1
 11246 ;; Hardware stack levels required when called:    1
 11247 ;; This function calls:
 11248 ;;		Nothing
 11249 ;; This function is called by:
 11250 ;;		_stateMachine
 11251 ;;		_efgtoa
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text34
 11256  004B0A                     __ptext34:
 11257                           	callstack 0
 11258  004B0A                     ___flge:
 11259                           	callstack 23
 11260  004B0A  0E00               	movlw	0
 11261  004B0C  1435               	andwf	___flge@ff1^0,w,c
 11262  004B0E  6E3D               	movwf	??___flge^0,c
 11263  004B10  0E00               	movlw	0
 11264  004B12  1436               	andwf	(___flge@ff1+1)^0,w,c
 11265  004B14  6E3E               	movwf	(??___flge+1)^0,c
 11266  004B16  0E80               	movlw	128
 11267  004B18  1437               	andwf	(___flge@ff1+2)^0,w,c
 11268  004B1A  6E3F               	movwf	(??___flge+2)^0,c
 11269  004B1C  0E7F               	movlw	127
 11270  004B1E  1438               	andwf	(___flge@ff1+3)^0,w,c
 11271  004B20  6E40               	movwf	(??___flge+3)^0,c
 11272  004B22  503D               	movf	??___flge^0,w,c
 11273  004B24  103E               	iorwf	(??___flge+1)^0,w,c
 11274  004B26  103F               	iorwf	(??___flge+2)^0,w,c
 11275  004B28  1040               	iorwf	(??___flge+3)^0,w,c
 11276  004B2A  A4D8               	btfss	status,2,c
 11277  004B2C  EF9A  F025         	goto	u5071
 11278  004B30  EF9C  F025         	goto	u5070
 11279  004B34                     u5071:
 11280  004B34  EFA4  F025         	goto	l4623
 11281  004B38                     u5070:
 11282  004B38  0E00               	movlw	0
 11283  004B3A  6E35               	movwf	___flge@ff1^0,c
 11284  004B3C  0E00               	movlw	0
 11285  004B3E  6E36               	movwf	(___flge@ff1+1)^0,c
 11286  004B40  0E00               	movlw	0
 11287  004B42  6E37               	movwf	(___flge@ff1+2)^0,c
 11288  004B44  0E00               	movlw	0
 11289  004B46  6E38               	movwf	(___flge@ff1+3)^0,c
 11290  004B48                     l4623:
 11291  004B48  0E00               	movlw	0
 11292  004B4A  1439               	andwf	___flge@ff2^0,w,c
 11293  004B4C  6E3D               	movwf	??___flge^0,c
 11294  004B4E  0E00               	movlw	0
 11295  004B50  143A               	andwf	(___flge@ff2+1)^0,w,c
 11296  004B52  6E3E               	movwf	(??___flge+1)^0,c
 11297  004B54  0E80               	movlw	128
 11298  004B56  143B               	andwf	(___flge@ff2+2)^0,w,c
 11299  004B58  6E3F               	movwf	(??___flge+2)^0,c
 11300  004B5A  0E7F               	movlw	127
 11301  004B5C  143C               	andwf	(___flge@ff2+3)^0,w,c
 11302  004B5E  6E40               	movwf	(??___flge+3)^0,c
 11303  004B60  503D               	movf	??___flge^0,w,c
 11304  004B62  103E               	iorwf	(??___flge+1)^0,w,c
 11305  004B64  103F               	iorwf	(??___flge+2)^0,w,c
 11306  004B66  1040               	iorwf	(??___flge+3)^0,w,c
 11307  004B68  A4D8               	btfss	status,2,c
 11308  004B6A  EFB9  F025         	goto	u5081
 11309  004B6E  EFBB  F025         	goto	u5080
 11310  004B72                     u5081:
 11311  004B72  EFC3  F025         	goto	l4627
 11312  004B76                     u5080:
 11313  004B76  0E00               	movlw	0
 11314  004B78  6E39               	movwf	___flge@ff2^0,c
 11315  004B7A  0E00               	movlw	0
 11316  004B7C  6E3A               	movwf	(___flge@ff2+1)^0,c
 11317  004B7E  0E00               	movlw	0
 11318  004B80  6E3B               	movwf	(___flge@ff2+2)^0,c
 11319  004B82  0E00               	movlw	0
 11320  004B84  6E3C               	movwf	(___flge@ff2+3)^0,c
 11321  004B86                     l4627:
 11322  004B86  AE38               	btfss	(___flge@ff1+3)^0,7,c
 11323  004B88  EFC8  F025         	goto	u5091
 11324  004B8C  EFCA  F025         	goto	u5090
 11325  004B90                     u5091:
 11326  004B90  EFD3  F025         	goto	l4631
 11327  004B94                     u5090:
 11328  004B94  6C35               	negf	___flge@ff1^0,c
 11329  004B96  1E36               	comf	(___flge@ff1+1)^0,f,c
 11330  004B98  B0D8               	btfsc	status,0,c
 11331  004B9A  2A36               	incf	(___flge@ff1+1)^0,f,c
 11332  004B9C  1E37               	comf	(___flge@ff1+2)^0,f,c
 11333  004B9E  B0D8               	btfsc	status,0,c
 11334  004BA0  2A37               	incf	(___flge@ff1+2)^0,f,c
 11335  004BA2  0E80               	movlw	128
 11336  004BA4  5638               	subfwb	(___flge@ff1+3)^0,f,c
 11337  004BA6                     l4631:
 11338  004BA6  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 11339  004BA8  EFD8  F025         	goto	u5101
 11340  004BAC  EFDA  F025         	goto	u5100
 11341  004BB0                     u5101:
 11342  004BB0  EFE3  F025         	goto	l749
 11343  004BB4                     u5100:
 11344  004BB4  6C39               	negf	___flge@ff2^0,c
 11345  004BB6  1E3A               	comf	(___flge@ff2+1)^0,f,c
 11346  004BB8  B0D8               	btfsc	status,0,c
 11347  004BBA  2A3A               	incf	(___flge@ff2+1)^0,f,c
 11348  004BBC  1E3B               	comf	(___flge@ff2+2)^0,f,c
 11349  004BBE  B0D8               	btfsc	status,0,c
 11350  004BC0  2A3B               	incf	(___flge@ff2+2)^0,f,c
 11351  004BC2  0E80               	movlw	128
 11352  004BC4  563C               	subfwb	(___flge@ff2+3)^0,f,c
 11353  004BC6                     l749:
 11354  004BC6  0E00               	movlw	0
 11355  004BC8  1A35               	xorwf	___flge@ff1^0,f,c
 11356  004BCA  0E00               	movlw	0
 11357  004BCC  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 11358  004BCE  0E00               	movlw	0
 11359  004BD0  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 11360  004BD2  0E80               	movlw	128
 11361  004BD4  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 11362  004BD6  0E00               	movlw	0
 11363  004BD8  1A39               	xorwf	___flge@ff2^0,f,c
 11364  004BDA  0E00               	movlw	0
 11365  004BDC  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 11366  004BDE  0E00               	movlw	0
 11367  004BE0  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 11368  004BE2  0E80               	movlw	128
 11369  004BE4  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 11370  004BE6  5039               	movf	___flge@ff2^0,w,c
 11371  004BE8  5C35               	subwf	___flge@ff1^0,w,c
 11372  004BEA  503A               	movf	(___flge@ff2+1)^0,w,c
 11373  004BEC  5836               	subwfb	(___flge@ff1+1)^0,w,c
 11374  004BEE  503B               	movf	(___flge@ff2+2)^0,w,c
 11375  004BF0  5837               	subwfb	(___flge@ff1+2)^0,w,c
 11376  004BF2  503C               	movf	(___flge@ff2+3)^0,w,c
 11377  004BF4  5838               	subwfb	(___flge@ff1+3)^0,w,c
 11378  004BF6  B0D8               	btfsc	status,0,c
 11379  004BF8  EF00  F026         	goto	u5111
 11380  004BFC  EF02  F026         	goto	u5110
 11381  004C00                     u5111:
 11382  004C00  EF05  F026         	goto	l4637
 11383  004C04                     u5110:
 11384  004C04  90D8               	bcf	status,0,c
 11385  004C06  EF06  F026         	goto	l754
 11386  004C0A                     l4637:
 11387  004C0A  80D8               	bsf	status,0,c
 11388  004C0C                     l754:
 11389  004C0C  0012               	return		;funcret
 11390  004C0E                     __end_of___flge:
 11391                           	callstack 0
 11392                           
 11393 ;; *************** function ___fleq *****************
 11394 ;; Defined at:
 11395 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 11396 ;; Parameters:    Size  Location     Type
 11397 ;;  ff1             4    0[COMRAM] unsigned char 
 11398 ;;  ff2             4    4[COMRAM] unsigned char 
 11399 ;; Auto vars:     Size  Location     Type
 11400 ;;		None
 11401 ;; Return value:  Size  Location     Type
 11402 ;;		None               void
 11403 ;; Registers used:
 11404 ;;		wreg, status,2, status,0
 11405 ;; Tracked objects:
 11406 ;;		On entry : 0/0
 11407 ;;		On exit  : 0/0
 11408 ;;		Unchanged: 0/0
 11409 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11410 ;;      Params:         8       0       0       0       0       0       0
 11411 ;;      Locals:         0       0       0       0       0       0       0
 11412 ;;      Temps:          4       0       0       0       0       0       0
 11413 ;;      Totals:        12       0       0       0       0       0       0
 11414 ;;Total ram usage:       12 bytes
 11415 ;; Hardware stack levels used:    1
 11416 ;; Hardware stack levels required when called:    1
 11417 ;; This function calls:
 11418 ;;		Nothing
 11419 ;; This function is called by:
 11420 ;;		_efgtoa
 11421 ;; This function uses a non-reentrant model
 11422 ;;
 11423                           
 11424                           	psect	text35
 11425  0051E0                     __ptext35:
 11426                           	callstack 0
 11427  0051E0                     ___fleq:
 11428                           	callstack 23
 11429  0051E0  0E00               	movlw	0
 11430  0051E2  1401               	andwf	___fleq@ff1^0,w,c
 11431  0051E4  6E09               	movwf	??___fleq^0,c
 11432  0051E6  0E00               	movlw	0
 11433  0051E8  1402               	andwf	(___fleq@ff1+1)^0,w,c
 11434  0051EA  6E0A               	movwf	(??___fleq+1)^0,c
 11435  0051EC  0E80               	movlw	128
 11436  0051EE  1403               	andwf	(___fleq@ff1+2)^0,w,c
 11437  0051F0  6E0B               	movwf	(??___fleq+2)^0,c
 11438  0051F2  0E7F               	movlw	127
 11439  0051F4  1404               	andwf	(___fleq@ff1+3)^0,w,c
 11440  0051F6  6E0C               	movwf	(??___fleq+3)^0,c
 11441  0051F8  5009               	movf	??___fleq^0,w,c
 11442  0051FA  100A               	iorwf	(??___fleq+1)^0,w,c
 11443  0051FC  100B               	iorwf	(??___fleq+2)^0,w,c
 11444  0051FE  100C               	iorwf	(??___fleq+3)^0,w,c
 11445  005200  A4D8               	btfss	status,2,c
 11446  005202  EF05  F029         	goto	u5041
 11447  005206  EF07  F029         	goto	u5040
 11448  00520A                     u5041:
 11449  00520A  EF0F  F029         	goto	l4607
 11450  00520E                     u5040:
 11451  00520E  0E00               	movlw	0
 11452  005210  6E01               	movwf	___fleq@ff1^0,c
 11453  005212  0E00               	movlw	0
 11454  005214  6E02               	movwf	(___fleq@ff1+1)^0,c
 11455  005216  0E00               	movlw	0
 11456  005218  6E03               	movwf	(___fleq@ff1+2)^0,c
 11457  00521A  0E00               	movlw	0
 11458  00521C  6E04               	movwf	(___fleq@ff1+3)^0,c
 11459  00521E                     l4607:
 11460  00521E  0E00               	movlw	0
 11461  005220  1405               	andwf	___fleq@ff2^0,w,c
 11462  005222  6E09               	movwf	??___fleq^0,c
 11463  005224  0E00               	movlw	0
 11464  005226  1406               	andwf	(___fleq@ff2+1)^0,w,c
 11465  005228  6E0A               	movwf	(??___fleq+1)^0,c
 11466  00522A  0E80               	movlw	128
 11467  00522C  1407               	andwf	(___fleq@ff2+2)^0,w,c
 11468  00522E  6E0B               	movwf	(??___fleq+2)^0,c
 11469  005230  0E7F               	movlw	127
 11470  005232  1408               	andwf	(___fleq@ff2+3)^0,w,c
 11471  005234  6E0C               	movwf	(??___fleq+3)^0,c
 11472  005236  5009               	movf	??___fleq^0,w,c
 11473  005238  100A               	iorwf	(??___fleq+1)^0,w,c
 11474  00523A  100B               	iorwf	(??___fleq+2)^0,w,c
 11475  00523C  100C               	iorwf	(??___fleq+3)^0,w,c
 11476  00523E  A4D8               	btfss	status,2,c
 11477  005240  EF24  F029         	goto	u5051
 11478  005244  EF26  F029         	goto	u5050
 11479  005248                     u5051:
 11480  005248  EF2E  F029         	goto	l4611
 11481  00524C                     u5050:
 11482  00524C  0E00               	movlw	0
 11483  00524E  6E05               	movwf	___fleq@ff2^0,c
 11484  005250  0E00               	movlw	0
 11485  005252  6E06               	movwf	(___fleq@ff2+1)^0,c
 11486  005254  0E00               	movlw	0
 11487  005256  6E07               	movwf	(___fleq@ff2+2)^0,c
 11488  005258  0E00               	movlw	0
 11489  00525A  6E08               	movwf	(___fleq@ff2+3)^0,c
 11490  00525C                     l4611:
 11491  00525C  5005               	movf	___fleq@ff2^0,w,c
 11492  00525E  1801               	xorwf	___fleq@ff1^0,w,c
 11493  005260  E10F               	bnz	u5060
 11494  005262  5006               	movf	(___fleq@ff2+1)^0,w,c
 11495  005264  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 11496  005266  E10C               	bnz	u5060
 11497  005268  5007               	movf	(___fleq@ff2+2)^0,w,c
 11498  00526A  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 11499  00526C  E109               	bnz	u5060
 11500  00526E  5008               	movf	(___fleq@ff2+3)^0,w,c
 11501  005270  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 11502  005272  B4D8               	btfsc	status,2,c
 11503  005274  EF3E  F029         	goto	u5061
 11504  005278  EF40  F029         	goto	u5060
 11505  00527C                     u5061:
 11506  00527C  EF43  F029         	goto	l4615
 11507  005280                     u5060:
 11508  005280  90D8               	bcf	status,0,c
 11509  005282  EF44  F029         	goto	l743
 11510  005286                     l4615:
 11511  005286  80D8               	bsf	status,0,c
 11512  005288                     l743:
 11513  005288  0012               	return		;funcret
 11514  00528A                     __end_of___fleq:
 11515                           	callstack 0
 11516                           
 11517 ;; *************** function ___fldiv *****************
 11518 ;; Defined at:
 11519 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 11520 ;; Parameters:    Size  Location     Type
 11521 ;;  b               4   52[COMRAM] unsigned char 
 11522 ;;  a               4   56[COMRAM] unsigned char 
 11523 ;; Auto vars:     Size  Location     Type
 11524 ;;  grs             4   71[COMRAM] unsigned long 
 11525 ;;  rem             4   64[COMRAM] unsigned long 
 11526 ;;  new_exp         2   69[COMRAM] short 
 11527 ;;  aexp            1   76[COMRAM] unsigned char 
 11528 ;;  bexp            1   75[COMRAM] unsigned char 
 11529 ;;  sign            1   68[COMRAM] unsigned char 
 11530 ;; Return value:  Size  Location     Type
 11531 ;;                  4   52[COMRAM] unsigned char 
 11532 ;; Registers used:
 11533 ;;		wreg, status,2, status,0
 11534 ;; Tracked objects:
 11535 ;;		On entry : 0/0
 11536 ;;		On exit  : 0/0
 11537 ;;		Unchanged: 0/0
 11538 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11539 ;;      Params:         8       0       0       0       0       0       0
 11540 ;;      Locals:        13       0       0       0       0       0       0
 11541 ;;      Temps:          4       0       0       0       0       0       0
 11542 ;;      Totals:        25       0       0       0       0       0       0
 11543 ;;Total ram usage:       25 bytes
 11544 ;; Hardware stack levels used:    1
 11545 ;; Hardware stack levels required when called:    1
 11546 ;; This function calls:
 11547 ;;		Nothing
 11548 ;; This function is called by:
 11549 ;;		_scanAdcConversion
 11550 ;;		_efgtoa
 11551 ;; This function uses a non-reentrant model
 11552 ;;
 11553                           
 11554                           	psect	text36
 11555  0033F4                     __ptext36:
 11556                           	callstack 0
 11557  0033F4                     ___fldiv:
 11558                           	callstack 25
 11559  0033F4  5038               	movf	(___fldiv@b+3)^0,w,c
 11560  0033F6  0B80               	andlw	128
 11561  0033F8  6E45               	movwf	___fldiv@sign^0,c
 11562  0033FA  5038               	movf	(___fldiv@b+3)^0,w,c
 11563  0033FC  2438               	addwf	(___fldiv@b+3)^0,w,c
 11564  0033FE  6E4C               	movwf	___fldiv@bexp^0,c
 11565  003400  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11566  003402  EF05  F01A         	goto	u4501
 11567  003406  EF07  F01A         	goto	u4500
 11568  00340A                     u4501:
 11569  00340A  EF08  F01A         	goto	l4255
 11570  00340E                     u4500:
 11571  00340E  804C               	bsf	___fldiv@bexp^0,0,c
 11572  003410                     l4255:
 11573  003410  504C               	movf	___fldiv@bexp^0,w,c
 11574  003412  B4D8               	btfsc	status,2,c
 11575  003414  EF0E  F01A         	goto	u4511
 11576  003418  EF10  F01A         	goto	u4510
 11577  00341C                     u4511:
 11578  00341C  EF25  F01A         	goto	l4265
 11579  003420                     u4510:
 11580  003420  284C               	incf	___fldiv@bexp^0,w,c
 11581  003422  A4D8               	btfss	status,2,c
 11582  003424  EF16  F01A         	goto	u4521
 11583  003428  EF18  F01A         	goto	u4520
 11584  00342C                     u4521:
 11585  00342C  EF20  F01A         	goto	l4261
 11586  003430                     u4520:
 11587  003430  0E00               	movlw	0
 11588  003432  6E35               	movwf	___fldiv@b^0,c
 11589  003434  0E00               	movlw	0
 11590  003436  6E36               	movwf	(___fldiv@b+1)^0,c
 11591  003438  0E00               	movlw	0
 11592  00343A  6E37               	movwf	(___fldiv@b+2)^0,c
 11593  00343C  0E00               	movlw	0
 11594  00343E  6E38               	movwf	(___fldiv@b+3)^0,c
 11595  003440                     l4261:
 11596  003440  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11597  003442  0E00               	movlw	0
 11598  003444  6E38               	movwf	(___fldiv@b+3)^0,c
 11599  003446  EF2D  F01A         	goto	l4267
 11600  00344A                     l4265:
 11601  00344A  0E00               	movlw	0
 11602  00344C  6E35               	movwf	___fldiv@b^0,c
 11603  00344E  0E00               	movlw	0
 11604  003450  6E36               	movwf	(___fldiv@b+1)^0,c
 11605  003452  0E00               	movlw	0
 11606  003454  6E37               	movwf	(___fldiv@b+2)^0,c
 11607  003456  0E00               	movlw	0
 11608  003458  6E38               	movwf	(___fldiv@b+3)^0,c
 11609  00345A                     l4267:
 11610  00345A  503C               	movf	(___fldiv@a+3)^0,w,c
 11611  00345C  0B80               	andlw	128
 11612  00345E  1A45               	xorwf	___fldiv@sign^0,f,c
 11613  003460  503C               	movf	(___fldiv@a+3)^0,w,c
 11614  003462  243C               	addwf	(___fldiv@a+3)^0,w,c
 11615  003464  6E4D               	movwf	___fldiv@aexp^0,c
 11616  003466  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 11617  003468  EF38  F01A         	goto	u4531
 11618  00346C  EF3A  F01A         	goto	u4530
 11619  003470                     u4531:
 11620  003470  EF3B  F01A         	goto	l4275
 11621  003474                     u4530:
 11622  003474  804D               	bsf	___fldiv@aexp^0,0,c
 11623  003476                     l4275:
 11624  003476  504D               	movf	___fldiv@aexp^0,w,c
 11625  003478  B4D8               	btfsc	status,2,c
 11626  00347A  EF41  F01A         	goto	u4541
 11627  00347E  EF43  F01A         	goto	u4540
 11628  003482                     u4541:
 11629  003482  EF58  F01A         	goto	l4285
 11630  003486                     u4540:
 11631  003486  284D               	incf	___fldiv@aexp^0,w,c
 11632  003488  A4D8               	btfss	status,2,c
 11633  00348A  EF49  F01A         	goto	u4551
 11634  00348E  EF4B  F01A         	goto	u4550
 11635  003492                     u4551:
 11636  003492  EF53  F01A         	goto	l4281
 11637  003496                     u4550:
 11638  003496  0E00               	movlw	0
 11639  003498  6E39               	movwf	___fldiv@a^0,c
 11640  00349A  0E00               	movlw	0
 11641  00349C  6E3A               	movwf	(___fldiv@a+1)^0,c
 11642  00349E  0E00               	movlw	0
 11643  0034A0  6E3B               	movwf	(___fldiv@a+2)^0,c
 11644  0034A2  0E00               	movlw	0
 11645  0034A4  6E3C               	movwf	(___fldiv@a+3)^0,c
 11646  0034A6                     l4281:
 11647  0034A6  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 11648  0034A8  0E00               	movlw	0
 11649  0034AA  6E3C               	movwf	(___fldiv@a+3)^0,c
 11650  0034AC  EF60  F01A         	goto	l4287
 11651  0034B0                     l4285:
 11652  0034B0  0E00               	movlw	0
 11653  0034B2  6E39               	movwf	___fldiv@a^0,c
 11654  0034B4  0E00               	movlw	0
 11655  0034B6  6E3A               	movwf	(___fldiv@a+1)^0,c
 11656  0034B8  0E00               	movlw	0
 11657  0034BA  6E3B               	movwf	(___fldiv@a+2)^0,c
 11658  0034BC  0E00               	movlw	0
 11659  0034BE  6E3C               	movwf	(___fldiv@a+3)^0,c
 11660  0034C0                     l4287:
 11661  0034C0  5039               	movf	___fldiv@a^0,w,c
 11662  0034C2  103A               	iorwf	(___fldiv@a+1)^0,w,c
 11663  0034C4  103B               	iorwf	(___fldiv@a+2)^0,w,c
 11664  0034C6  103C               	iorwf	(___fldiv@a+3)^0,w,c
 11665  0034C8  A4D8               	btfss	status,2,c
 11666  0034CA  EF69  F01A         	goto	u4561
 11667  0034CE  EF6B  F01A         	goto	u4560
 11668  0034D2                     u4561:
 11669  0034D2  EF83  F01A         	goto	l4299
 11670  0034D6                     u4560:
 11671  0034D6  0E00               	movlw	0
 11672  0034D8  6E35               	movwf	___fldiv@b^0,c
 11673  0034DA  0E00               	movlw	0
 11674  0034DC  6E36               	movwf	(___fldiv@b+1)^0,c
 11675  0034DE  0E00               	movlw	0
 11676  0034E0  6E37               	movwf	(___fldiv@b+2)^0,c
 11677  0034E2  0E00               	movlw	0
 11678  0034E4  6E38               	movwf	(___fldiv@b+3)^0,c
 11679  0034E6  0E80               	movlw	128
 11680  0034E8  1237               	iorwf	(___fldiv@b+2)^0,f,c
 11681  0034EA  0E7F               	movlw	127
 11682  0034EC  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11683  0034EE                     l4293:
 11684  0034EE  5045               	movf	___fldiv@sign^0,w,c
 11685  0034F0  1238               	iorwf	(___fldiv@b+3)^0,f,c
 11686  0034F2  C035  F035         	movff	___fldiv@b,?___fldiv
 11687  0034F6  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 11688  0034FA  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 11689  0034FE  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 11690  003502  EFC6  F01B         	goto	l1066
 11691  003506                     l4299:
 11692  003506  504C               	movf	___fldiv@bexp^0,w,c
 11693  003508  A4D8               	btfss	status,2,c
 11694  00350A  EF89  F01A         	goto	u4571
 11695  00350E  EF8B  F01A         	goto	u4570
 11696  003512                     u4571:
 11697  003512  EF95  F01A         	goto	l4307
 11698  003516                     u4570:
 11699  003516  0E00               	movlw	0
 11700  003518  6E35               	movwf	?___fldiv^0,c
 11701  00351A  0E00               	movlw	0
 11702  00351C  6E36               	movwf	(?___fldiv+1)^0,c
 11703  00351E  0E00               	movlw	0
 11704  003520  6E37               	movwf	(?___fldiv+2)^0,c
 11705  003522  0E00               	movlw	0
 11706  003524  6E38               	movwf	(?___fldiv+3)^0,c
 11707  003526  EFC6  F01B         	goto	l1066
 11708  00352A                     l4307:
 11709  00352A  504D               	movf	___fldiv@aexp^0,w,c
 11710  00352C  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 11711  003530  6A3E               	clrf	(??___fldiv+1)^0,c
 11712  003532  5E3D               	subwf	??___fldiv^0,f,c
 11713  003534  0E00               	movlw	0
 11714  003536  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 11715  003538  0E7F               	movlw	127
 11716  00353A  243D               	addwf	??___fldiv^0,w,c
 11717  00353C  6E46               	movwf	___fldiv@new_exp^0,c
 11718  00353E  0E00               	movlw	0
 11719  003540  203E               	addwfc	(??___fldiv+1)^0,w,c
 11720  003542  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11721  003544  C035  F041         	movff	___fldiv@b,___fldiv@rem
 11722  003548  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 11723  00354C  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 11724  003550  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 11725  003554  0E00               	movlw	0
 11726  003556  6E35               	movwf	___fldiv@b^0,c
 11727  003558  0E00               	movlw	0
 11728  00355A  6E36               	movwf	(___fldiv@b+1)^0,c
 11729  00355C  0E00               	movlw	0
 11730  00355E  6E37               	movwf	(___fldiv@b+2)^0,c
 11731  003560  0E00               	movlw	0
 11732  003562  6E38               	movwf	(___fldiv@b+3)^0,c
 11733  003564  0E00               	movlw	0
 11734  003566  6E48               	movwf	___fldiv@grs^0,c
 11735  003568  0E00               	movlw	0
 11736  00356A  6E49               	movwf	(___fldiv@grs+1)^0,c
 11737  00356C  0E00               	movlw	0
 11738  00356E  6E4A               	movwf	(___fldiv@grs+2)^0,c
 11739  003570  0E00               	movlw	0
 11740  003572  6E4B               	movwf	(___fldiv@grs+3)^0,c
 11741  003574  0E00               	movlw	0
 11742  003576  6E4D               	movwf	___fldiv@aexp^0,c
 11743  003578  EFF6  F01A         	goto	l1068
 11744  00357C                     l4317:
 11745  00357C  504D               	movf	___fldiv@aexp^0,w,c
 11746  00357E  B4D8               	btfsc	status,2,c
 11747  003580  EFC4  F01A         	goto	u4581
 11748  003584  EFC6  F01A         	goto	u4580
 11749  003588                     u4581:
 11750  003588  EFDD  F01A         	goto	l4325
 11751  00358C                     u4580:
 11752  00358C  90D8               	bcf	status,0,c
 11753  00358E  3641               	rlcf	___fldiv@rem^0,f,c
 11754  003590  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 11755  003592  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 11756  003594  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 11757  003596  90D8               	bcf	status,0,c
 11758  003598  3635               	rlcf	___fldiv@b^0,f,c
 11759  00359A  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11760  00359C  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11761  00359E  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11762  0035A0  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11763  0035A2  EFD5  F01A         	goto	u4591
 11764  0035A6  EFD7  F01A         	goto	u4590
 11765  0035AA                     u4591:
 11766  0035AA  EFD8  F01A         	goto	l1071
 11767  0035AE                     u4590:
 11768  0035AE  8035               	bsf	___fldiv@b^0,0,c
 11769  0035B0                     l1071:
 11770  0035B0  90D8               	bcf	status,0,c
 11771  0035B2  3648               	rlcf	___fldiv@grs^0,f,c
 11772  0035B4  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11773  0035B6  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11774  0035B8  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11775  0035BA                     l4325:
 11776  0035BA  5039               	movf	___fldiv@a^0,w,c
 11777  0035BC  5C41               	subwf	___fldiv@rem^0,w,c
 11778  0035BE  503A               	movf	(___fldiv@a+1)^0,w,c
 11779  0035C0  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 11780  0035C2  503B               	movf	(___fldiv@a+2)^0,w,c
 11781  0035C4  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 11782  0035C6  503C               	movf	(___fldiv@a+3)^0,w,c
 11783  0035C8  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 11784  0035CA  A0D8               	btfss	status,0,c
 11785  0035CC  EFEA  F01A         	goto	u4601
 11786  0035D0  EFEC  F01A         	goto	u4600
 11787  0035D4                     u4601:
 11788  0035D4  EFF5  F01A         	goto	l4331
 11789  0035D8                     u4600:
 11790  0035D8  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 11791  0035DA  5039               	movf	___fldiv@a^0,w,c
 11792  0035DC  5E41               	subwf	___fldiv@rem^0,f,c
 11793  0035DE  503A               	movf	(___fldiv@a+1)^0,w,c
 11794  0035E0  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 11795  0035E2  503B               	movf	(___fldiv@a+2)^0,w,c
 11796  0035E4  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 11797  0035E6  503C               	movf	(___fldiv@a+3)^0,w,c
 11798  0035E8  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 11799  0035EA                     l4331:
 11800  0035EA  2A4D               	incf	___fldiv@aexp^0,f,c
 11801  0035EC                     l1068:
 11802  0035EC  0E19               	movlw	25
 11803  0035EE  644D               	cpfsgt	___fldiv@aexp^0,c
 11804  0035F0  EFFC  F01A         	goto	u4611
 11805  0035F4  EFFE  F01A         	goto	u4610
 11806  0035F8                     u4611:
 11807  0035F8  EFBE  F01A         	goto	l4317
 11808  0035FC                     u4610:
 11809  0035FC  5041               	movf	___fldiv@rem^0,w,c
 11810  0035FE  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 11811  003600  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 11812  003602  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 11813  003604  B4D8               	btfsc	status,2,c
 11814  003606  EF07  F01B         	goto	u4621
 11815  00360A  EF09  F01B         	goto	u4620
 11816  00360E                     u4621:
 11817  00360E  EF21  F01B         	goto	l4343
 11818  003612                     u4620:
 11819  003612  8048               	bsf	___fldiv@grs^0,0,c
 11820  003614  EF21  F01B         	goto	l4343
 11821  003618                     l4337:
 11822  003618  90D8               	bcf	status,0,c
 11823  00361A  3635               	rlcf	___fldiv@b^0,f,c
 11824  00361C  3636               	rlcf	(___fldiv@b+1)^0,f,c
 11825  00361E  3637               	rlcf	(___fldiv@b+2)^0,f,c
 11826  003620  3638               	rlcf	(___fldiv@b+3)^0,f,c
 11827  003622  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11828  003624  EF16  F01B         	goto	u4631
 11829  003628  EF18  F01B         	goto	u4630
 11830  00362C                     u4631:
 11831  00362C  EF19  F01B         	goto	l1077
 11832  003630                     u4630:
 11833  003630  8035               	bsf	___fldiv@b^0,0,c
 11834  003632                     l1077:
 11835  003632  90D8               	bcf	status,0,c
 11836  003634  3648               	rlcf	___fldiv@grs^0,f,c
 11837  003636  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 11838  003638  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 11839  00363A  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 11840  00363C  0646               	decf	___fldiv@new_exp^0,f,c
 11841  00363E  A0D8               	btfss	status,0,c
 11842  003640  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 11843  003642                     l4343:
 11844  003642  AE37               	btfss	(___fldiv@b+2)^0,7,c
 11845  003644  EF26  F01B         	goto	u4641
 11846  003648  EF28  F01B         	goto	u4640
 11847  00364C                     u4641:
 11848  00364C  EF0C  F01B         	goto	l4337
 11849  003650                     u4640:
 11850  003650  0E00               	movlw	0
 11851  003652  6E4D               	movwf	___fldiv@aexp^0,c
 11852  003654  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 11853  003656  EF2F  F01B         	goto	u4651
 11854  00365A  EF31  F01B         	goto	u4650
 11855  00365E                     u4651:
 11856  00365E  EF55  F01B         	goto	l1079
 11857  003662                     u4650:
 11858  003662  0EFF               	movlw	255
 11859  003664  1448               	andwf	___fldiv@grs^0,w,c
 11860  003666  6E3D               	movwf	??___fldiv^0,c
 11861  003668  0EFF               	movlw	255
 11862  00366A  1449               	andwf	(___fldiv@grs+1)^0,w,c
 11863  00366C  6E3E               	movwf	(??___fldiv+1)^0,c
 11864  00366E  0EFF               	movlw	255
 11865  003670  144A               	andwf	(___fldiv@grs+2)^0,w,c
 11866  003672  6E3F               	movwf	(??___fldiv+2)^0,c
 11867  003674  0E7F               	movlw	127
 11868  003676  144B               	andwf	(___fldiv@grs+3)^0,w,c
 11869  003678  6E40               	movwf	(??___fldiv+3)^0,c
 11870  00367A  503D               	movf	??___fldiv^0,w,c
 11871  00367C  103E               	iorwf	(??___fldiv+1)^0,w,c
 11872  00367E  103F               	iorwf	(??___fldiv+2)^0,w,c
 11873  003680  1040               	iorwf	(??___fldiv+3)^0,w,c
 11874  003682  B4D8               	btfsc	status,2,c
 11875  003684  EF46  F01B         	goto	u4661
 11876  003688  EF48  F01B         	goto	u4660
 11877  00368C                     u4661:
 11878  00368C  EF4C  F01B         	goto	l1080
 11879  003690                     u4660:
 11880  003690                     l4351:
 11881  003690  0E01               	movlw	1
 11882  003692  6E4D               	movwf	___fldiv@aexp^0,c
 11883  003694  EF55  F01B         	goto	l1079
 11884  003698                     l1080:
 11885  003698  A035               	btfss	___fldiv@b^0,0,c
 11886  00369A  EF51  F01B         	goto	u4671
 11887  00369E  EF53  F01B         	goto	u4670
 11888  0036A2                     u4671:
 11889  0036A2  EF55  F01B         	goto	l1079
 11890  0036A6                     u4670:
 11891  0036A6  EF48  F01B         	goto	l4351
 11892  0036AA                     l1079:
 11893  0036AA  504D               	movf	___fldiv@aexp^0,w,c
 11894  0036AC  B4D8               	btfsc	status,2,c
 11895  0036AE  EF5B  F01B         	goto	u4681
 11896  0036B2  EF5D  F01B         	goto	u4680
 11897  0036B6                     u4681:
 11898  0036B6  EF81  F01B         	goto	l4363
 11899  0036BA                     u4680:
 11900  0036BA  0E01               	movlw	1
 11901  0036BC  2635               	addwf	___fldiv@b^0,f,c
 11902  0036BE  0E00               	movlw	0
 11903  0036C0  2236               	addwfc	(___fldiv@b+1)^0,f,c
 11904  0036C2  2237               	addwfc	(___fldiv@b+2)^0,f,c
 11905  0036C4  2238               	addwfc	(___fldiv@b+3)^0,f,c
 11906  0036C6  A038               	btfss	(___fldiv@b+3)^0,0,c
 11907  0036C8  EF68  F01B         	goto	u4691
 11908  0036CC  EF6A  F01B         	goto	u4690
 11909  0036D0                     u4691:
 11910  0036D0  EF81  F01B         	goto	l4363
 11911  0036D4                     u4690:
 11912  0036D4  C035  F03D         	movff	___fldiv@b,??___fldiv
 11913  0036D8  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 11914  0036DC  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 11915  0036E0  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 11916  0036E4  3440               	rlcf	(??___fldiv+3)^0,w,c
 11917  0036E6  3240               	rrcf	(??___fldiv+3)^0,f,c
 11918  0036E8  323F               	rrcf	(??___fldiv+2)^0,f,c
 11919  0036EA  323E               	rrcf	(??___fldiv+1)^0,f,c
 11920  0036EC  323D               	rrcf	??___fldiv^0,f,c
 11921  0036EE  C03D  F035         	movff	??___fldiv,___fldiv@b
 11922  0036F2  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 11923  0036F6  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 11924  0036FA  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 11925  0036FE  4A46               	infsnz	___fldiv@new_exp^0,f,c
 11926  003700  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 11927  003702                     l4363:
 11928  003702  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11929  003704  EF8C  F01B         	goto	u4701
 11930  003708  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11931  00370A  E108               	bnz	u4700
 11932  00370C  2846               	incf	___fldiv@new_exp^0,w,c
 11933  00370E  A0D8               	btfss	status,0,c
 11934  003710  EF8C  F01B         	goto	u4701
 11935  003714  EF8E  F01B         	goto	u4700
 11936  003718                     u4701:
 11937  003718  EF99  F01B         	goto	l4367
 11938  00371C                     u4700:
 11939  00371C  0E00               	movlw	0
 11940  00371E  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11941  003720  6846               	setf	___fldiv@new_exp^0,c
 11942  003722  0E00               	movlw	0
 11943  003724  6E35               	movwf	___fldiv@b^0,c
 11944  003726  0E00               	movlw	0
 11945  003728  6E36               	movwf	(___fldiv@b+1)^0,c
 11946  00372A  0E00               	movlw	0
 11947  00372C  6E37               	movwf	(___fldiv@b+2)^0,c
 11948  00372E  0E00               	movlw	0
 11949  003730  6E38               	movwf	(___fldiv@b+3)^0,c
 11950  003732                     l4367:
 11951  003732  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 11952  003734  EFA6  F01B         	goto	u4710
 11953  003738  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 11954  00373A  E106               	bnz	u4711
 11955  00373C  0446               	decf	___fldiv@new_exp^0,w,c
 11956  00373E  B0D8               	btfsc	status,0,c
 11957  003740  EFA4  F01B         	goto	u4711
 11958  003744  EFA6  F01B         	goto	u4710
 11959  003748                     u4711:
 11960  003748  EFB4  F01B         	goto	l4371
 11961  00374C                     u4710:
 11962  00374C  0E00               	movlw	0
 11963  00374E  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 11964  003750  0E00               	movlw	0
 11965  003752  6E46               	movwf	___fldiv@new_exp^0,c
 11966  003754  0E00               	movlw	0
 11967  003756  6E35               	movwf	___fldiv@b^0,c
 11968  003758  0E00               	movlw	0
 11969  00375A  6E36               	movwf	(___fldiv@b+1)^0,c
 11970  00375C  0E00               	movlw	0
 11971  00375E  6E37               	movwf	(___fldiv@b+2)^0,c
 11972  003760  0E00               	movlw	0
 11973  003762  6E38               	movwf	(___fldiv@b+3)^0,c
 11974  003764  0E00               	movlw	0
 11975  003766  6E45               	movwf	___fldiv@sign^0,c
 11976  003768                     l4371:
 11977  003768  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 11978  00376C  A04C               	btfss	___fldiv@bexp^0,0,c
 11979  00376E  EFBB  F01B         	goto	u4721
 11980  003772  EFBD  F01B         	goto	u4720
 11981  003776                     u4721:
 11982  003776  EFC0  F01B         	goto	l4377
 11983  00377A                     u4720:
 11984  00377A  8E37               	bsf	(___fldiv@b+2)^0,7,c
 11985  00377C  EFC1  F01B         	goto	l4379
 11986  003780                     l4377:
 11987  003780  9E37               	bcf	(___fldiv@b+2)^0,7,c
 11988  003782                     l4379:
 11989  003782  90D8               	bcf	status,0,c
 11990  003784  304C               	rrcf	___fldiv@bexp^0,w,c
 11991  003786  6E38               	movwf	(___fldiv@b+3)^0,c
 11992  003788  EF77  F01A         	goto	l4293
 11993  00378C                     l1066:
 11994  00378C  0012               	return		;funcret
 11995  00378E                     __end_of___fldiv:
 11996                           	callstack 0
 11997                           
 11998 ;; *************** function ___awmod *****************
 11999 ;; Defined at:
 12000 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 12001 ;; Parameters:    Size  Location     Type
 12002 ;;  dividend        2    0[COMRAM] int 
 12003 ;;  divisor         2    2[COMRAM] int 
 12004 ;; Auto vars:     Size  Location     Type
 12005 ;;  sign            1    5[COMRAM] unsigned char 
 12006 ;;  counter         1    4[COMRAM] unsigned char 
 12007 ;; Return value:  Size  Location     Type
 12008 ;;                  2    0[COMRAM] int 
 12009 ;; Registers used:
 12010 ;;		wreg, status,2, status,0
 12011 ;; Tracked objects:
 12012 ;;		On entry : 0/0
 12013 ;;		On exit  : 0/0
 12014 ;;		Unchanged: 0/0
 12015 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12016 ;;      Params:         4       0       0       0       0       0       0
 12017 ;;      Locals:         2       0       0       0       0       0       0
 12018 ;;      Temps:          0       0       0       0       0       0       0
 12019 ;;      Totals:         6       0       0       0       0       0       0
 12020 ;;Total ram usage:        6 bytes
 12021 ;; Hardware stack levels used:    1
 12022 ;; Hardware stack levels required when called:    1
 12023 ;; This function calls:
 12024 ;;		Nothing
 12025 ;; This function is called by:
 12026 ;;		_efgtoa
 12027 ;; This function uses a non-reentrant model
 12028 ;;
 12029                           
 12030                           	psect	text37
 12031  005130                     __ptext37:
 12032                           	callstack 0
 12033  005130                     ___awmod:
 12034                           	callstack 23
 12035  005130  0E00               	movlw	0
 12036  005132  6E06               	movwf	___awmod@sign^0,c
 12037  005134  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12038  005136  EFA1  F028         	goto	u4980
 12039  00513A  EF9F  F028         	goto	u4981
 12040  00513E                     u4981:
 12041  00513E  EFA7  F028         	goto	l4575
 12042  005142                     u4980:
 12043  005142  6C01               	negf	___awmod@dividend^0,c
 12044  005144  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12045  005146  B0D8               	btfsc	status,0,c
 12046  005148  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12047  00514A  0E01               	movlw	1
 12048  00514C  6E06               	movwf	___awmod@sign^0,c
 12049  00514E                     l4575:
 12050  00514E  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12051  005150  EFAE  F028         	goto	u4990
 12052  005154  EFAC  F028         	goto	u4991
 12053  005158                     u4991:
 12054  005158  EFB2  F028         	goto	l4579
 12055  00515C                     u4990:
 12056  00515C  6C03               	negf	___awmod@divisor^0,c
 12057  00515E  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12058  005160  B0D8               	btfsc	status,0,c
 12059  005162  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12060  005164                     l4579:
 12061  005164  5003               	movf	___awmod@divisor^0,w,c
 12062  005166  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12063  005168  B4D8               	btfsc	status,2,c
 12064  00516A  EFB9  F028         	goto	u5001
 12065  00516E  EFBB  F028         	goto	u5000
 12066  005172                     u5001:
 12067  005172  EFDF  F028         	goto	l4595
 12068  005176                     u5000:
 12069  005176  0E01               	movlw	1
 12070  005178  6E05               	movwf	___awmod@counter^0,c
 12071  00517A  EFC3  F028         	goto	l4585
 12072  00517E                     l4583:
 12073  00517E  90D8               	bcf	status,0,c
 12074  005180  3603               	rlcf	___awmod@divisor^0,f,c
 12075  005182  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12076  005184  2A05               	incf	___awmod@counter^0,f,c
 12077  005186                     l4585:
 12078  005186  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12079  005188  EFC8  F028         	goto	u5011
 12080  00518C  EFCA  F028         	goto	u5010
 12081  005190                     u5011:
 12082  005190  EFBF  F028         	goto	l4583
 12083  005194                     u5010:
 12084  005194                     l4587:
 12085  005194  5003               	movf	___awmod@divisor^0,w,c
 12086  005196  5C01               	subwf	___awmod@dividend^0,w,c
 12087  005198  5004               	movf	(___awmod@divisor+1)^0,w,c
 12088  00519A  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12089  00519C  A0D8               	btfss	status,0,c
 12090  00519E  EFD3  F028         	goto	u5021
 12091  0051A2  EFD5  F028         	goto	u5020
 12092  0051A6                     u5021:
 12093  0051A6  EFD9  F028         	goto	l4591
 12094  0051AA                     u5020:
 12095  0051AA  5003               	movf	___awmod@divisor^0,w,c
 12096  0051AC  5E01               	subwf	___awmod@dividend^0,f,c
 12097  0051AE  5004               	movf	(___awmod@divisor+1)^0,w,c
 12098  0051B0  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12099  0051B2                     l4591:
 12100  0051B2  90D8               	bcf	status,0,c
 12101  0051B4  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12102  0051B6  3203               	rrcf	___awmod@divisor^0,f,c
 12103  0051B8  2E05               	decfsz	___awmod@counter^0,f,c
 12104  0051BA  EFCA  F028         	goto	l4587
 12105  0051BE                     l4595:
 12106  0051BE  5006               	movf	___awmod@sign^0,w,c
 12107  0051C0  B4D8               	btfsc	status,2,c
 12108  0051C2  EFE5  F028         	goto	u5031
 12109  0051C6  EFE7  F028         	goto	u5030
 12110  0051CA                     u5031:
 12111  0051CA  EFEB  F028         	goto	l4599
 12112  0051CE                     u5030:
 12113  0051CE  6C01               	negf	___awmod@dividend^0,c
 12114  0051D0  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12115  0051D2  B0D8               	btfsc	status,0,c
 12116  0051D4  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12117  0051D6                     l4599:
 12118  0051D6  C001  F001         	movff	___awmod@dividend,?___awmod
 12119  0051DA  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12120  0051DE  0012               	return		;funcret
 12121  0051E0                     __end_of___awmod:
 12122                           	callstack 0
 12123                           
 12124 ;; *************** function ___awdiv *****************
 12125 ;; Defined at:
 12126 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12127 ;; Parameters:    Size  Location     Type
 12128 ;;  dividend        2    0[COMRAM] int 
 12129 ;;  divisor         2    2[COMRAM] int 
 12130 ;; Auto vars:     Size  Location     Type
 12131 ;;  quotient        2    6[COMRAM] int 
 12132 ;;  sign            1    5[COMRAM] unsigned char 
 12133 ;;  counter         1    4[COMRAM] unsigned char 
 12134 ;; Return value:  Size  Location     Type
 12135 ;;                  2    0[COMRAM] int 
 12136 ;; Registers used:
 12137 ;;		wreg, status,2, status,0
 12138 ;; Tracked objects:
 12139 ;;		On entry : 0/0
 12140 ;;		On exit  : 0/0
 12141 ;;		Unchanged: 0/0
 12142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12143 ;;      Params:         4       0       0       0       0       0       0
 12144 ;;      Locals:         4       0       0       0       0       0       0
 12145 ;;      Temps:          0       0       0       0       0       0       0
 12146 ;;      Totals:         8       0       0       0       0       0       0
 12147 ;;Total ram usage:        8 bytes
 12148 ;; Hardware stack levels used:    1
 12149 ;; Hardware stack levels required when called:    1
 12150 ;; This function calls:
 12151 ;;		Nothing
 12152 ;; This function is called by:
 12153 ;;		_efgtoa
 12154 ;; This function uses a non-reentrant model
 12155 ;;
 12156                           
 12157                           	psect	text38
 12158  00506C                     __ptext38:
 12159                           	callstack 0
 12160  00506C                     ___awdiv:
 12161                           	callstack 23
 12162  00506C  0E00               	movlw	0
 12163  00506E  6E06               	movwf	___awdiv@sign^0,c
 12164  005070  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12165  005072  EF3F  F028         	goto	u4920
 12166  005076  EF3D  F028         	goto	u4921
 12167  00507A                     u4921:
 12168  00507A  EF45  F028         	goto	l4531
 12169  00507E                     u4920:
 12170  00507E  6C03               	negf	___awdiv@divisor^0,c
 12171  005080  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12172  005082  B0D8               	btfsc	status,0,c
 12173  005084  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12174  005086  0E01               	movlw	1
 12175  005088  6E06               	movwf	___awdiv@sign^0,c
 12176  00508A                     l4531:
 12177  00508A  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12178  00508C  EF4C  F028         	goto	u4930
 12179  005090  EF4A  F028         	goto	u4931
 12180  005094                     u4931:
 12181  005094  EF52  F028         	goto	l4537
 12182  005098                     u4930:
 12183  005098  6C01               	negf	___awdiv@dividend^0,c
 12184  00509A  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12185  00509C  B0D8               	btfsc	status,0,c
 12186  00509E  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12187  0050A0  0E01               	movlw	1
 12188  0050A2  1A06               	xorwf	___awdiv@sign^0,f,c
 12189  0050A4                     l4537:
 12190  0050A4  0E00               	movlw	0
 12191  0050A6  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12192  0050A8  0E00               	movlw	0
 12193  0050AA  6E07               	movwf	___awdiv@quotient^0,c
 12194  0050AC  5003               	movf	___awdiv@divisor^0,w,c
 12195  0050AE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12196  0050B0  B4D8               	btfsc	status,2,c
 12197  0050B2  EF5D  F028         	goto	u4941
 12198  0050B6  EF5F  F028         	goto	u4940
 12199  0050BA                     u4941:
 12200  0050BA  EF87  F028         	goto	l4559
 12201  0050BE                     u4940:
 12202  0050BE  0E01               	movlw	1
 12203  0050C0  6E05               	movwf	___awdiv@counter^0,c
 12204  0050C2  EF67  F028         	goto	l4545
 12205  0050C6                     l4543:
 12206  0050C6  90D8               	bcf	status,0,c
 12207  0050C8  3603               	rlcf	___awdiv@divisor^0,f,c
 12208  0050CA  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12209  0050CC  2A05               	incf	___awdiv@counter^0,f,c
 12210  0050CE                     l4545:
 12211  0050CE  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12212  0050D0  EF6C  F028         	goto	u4951
 12213  0050D4  EF6E  F028         	goto	u4950
 12214  0050D8                     u4951:
 12215  0050D8  EF63  F028         	goto	l4543
 12216  0050DC                     u4950:
 12217  0050DC                     l4547:
 12218  0050DC  90D8               	bcf	status,0,c
 12219  0050DE  3607               	rlcf	___awdiv@quotient^0,f,c
 12220  0050E0  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12221  0050E2  5003               	movf	___awdiv@divisor^0,w,c
 12222  0050E4  5C01               	subwf	___awdiv@dividend^0,w,c
 12223  0050E6  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12224  0050E8  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12225  0050EA  A0D8               	btfss	status,0,c
 12226  0050EC  EF7A  F028         	goto	u4961
 12227  0050F0  EF7C  F028         	goto	u4960
 12228  0050F4                     u4961:
 12229  0050F4  EF81  F028         	goto	l4555
 12230  0050F8                     u4960:
 12231  0050F8  5003               	movf	___awdiv@divisor^0,w,c
 12232  0050FA  5E01               	subwf	___awdiv@dividend^0,f,c
 12233  0050FC  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12234  0050FE  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12235  005100  8007               	bsf	___awdiv@quotient^0,0,c
 12236  005102                     l4555:
 12237  005102  90D8               	bcf	status,0,c
 12238  005104  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12239  005106  3203               	rrcf	___awdiv@divisor^0,f,c
 12240  005108  2E05               	decfsz	___awdiv@counter^0,f,c
 12241  00510A  EF6E  F028         	goto	l4547
 12242  00510E                     l4559:
 12243  00510E  5006               	movf	___awdiv@sign^0,w,c
 12244  005110  B4D8               	btfsc	status,2,c
 12245  005112  EF8D  F028         	goto	u4971
 12246  005116  EF8F  F028         	goto	u4970
 12247  00511A                     u4971:
 12248  00511A  EF93  F028         	goto	l4563
 12249  00511E                     u4970:
 12250  00511E  6C07               	negf	___awdiv@quotient^0,c
 12251  005120  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12252  005122  B0D8               	btfsc	status,0,c
 12253  005124  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12254  005126                     l4563:
 12255  005126  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12256  00512A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12257  00512E  0012               	return		;funcret
 12258  005130                     __end_of___awdiv:
 12259                           	callstack 0
 12260                           
 12261 ;; *************** function _dtoa *****************
 12262 ;; Defined at:
 12263 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12264 ;; Parameters:    Size  Location     Type
 12265 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12266 ;;		 -> sprintf@f(6), 
 12267 ;;  d               8   29[COMRAM] long long 
 12268 ;; Auto vars:     Size  Location     Type
 12269 ;;  n               8   53[COMRAM] long long 
 12270 ;;  i               2   61[COMRAM] int 
 12271 ;;  s               2   51[COMRAM] int 
 12272 ;;  w               2   49[COMRAM] int 
 12273 ;;  p               2   47[COMRAM] int 
 12274 ;; Return value:  Size  Location     Type
 12275 ;;                  2   27[COMRAM] int 
 12276 ;; Registers used:
 12277 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12278 ;; Tracked objects:
 12279 ;;		On entry : 0/0
 12280 ;;		On exit  : 0/0
 12281 ;;		Unchanged: 0/0
 12282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12283 ;;      Params:        10       0       0       0       0       0       0
 12284 ;;      Locals:        18       0       0       0       0       0       0
 12285 ;;      Temps:          8       0       0       0       0       0       0
 12286 ;;      Totals:        36       0       0       0       0       0       0
 12287 ;;Total ram usage:       36 bytes
 12288 ;; Hardware stack levels used:    1
 12289 ;; Hardware stack levels required when called:    5
 12290 ;; This function calls:
 12291 ;;		___aodiv
 12292 ;;		___aomod
 12293 ;;		_abs
 12294 ;;		_pad
 12295 ;; This function is called by:
 12296 ;;		_vfpfcnvrt
 12297 ;; This function uses a non-reentrant model
 12298 ;;
 12299                           
 12300                           	psect	text39
 12301  003A74                     __ptext39:
 12302                           	callstack 0
 12303  003A74                     _dtoa:
 12304                           	callstack 20
 12305  003A74                     
 12306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12307  003A74  C01E  F036         	movff	dtoa@d,dtoa@n
 12308  003A78  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12309  003A7C  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12310  003A80  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12311  003A84  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12312  003A88  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12313  003A8C  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12314  003A90  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12315  003A94                     
 12316                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12317  003A94  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12318  003A96  EF4F  F01D         	goto	u5511
 12319  003A9A  EF52  F01D         	goto	u5510
 12320  003A9E                     u5511:
 12321  003A9E  0E01               	movlw	1
 12322  003AA0  EF53  F01D         	goto	u5520
 12323  003AA4                     u5510:
 12324  003AA4  0E00               	movlw	0
 12325  003AA6                     u5520:
 12326  003AA6  6E34               	movwf	dtoa@s^0,c
 12327  003AA8  6A35               	clrf	(dtoa@s+1)^0,c
 12328                           
 12329                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 12330  003AAA  5034               	movf	dtoa@s^0,w,c
 12331  003AAC  1035               	iorwf	(dtoa@s+1)^0,w,c
 12332  003AAE  B4D8               	btfsc	status,2,c
 12333  003AB0  EF5C  F01D         	goto	u5531
 12334  003AB4  EF5E  F01D         	goto	u5530
 12335  003AB8                     u5531:
 12336  003AB8  EF6E  F01D         	goto	l4805
 12337  003ABC                     u5530:
 12338  003ABC                     
 12339                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 12340  003ABC  1E3D               	comf	(dtoa@n+7)^0,f,c
 12341  003ABE  1E3C               	comf	(dtoa@n+6)^0,f,c
 12342  003AC0  1E3B               	comf	(dtoa@n+5)^0,f,c
 12343  003AC2  1E3A               	comf	(dtoa@n+4)^0,f,c
 12344  003AC4  1E39               	comf	(dtoa@n+3)^0,f,c
 12345  003AC6  1E38               	comf	(dtoa@n+2)^0,f,c
 12346  003AC8  1E37               	comf	(dtoa@n+1)^0,f,c
 12347  003ACA  6C36               	negf	dtoa@n^0,c
 12348  003ACC  0E00               	movlw	0
 12349  003ACE  2237               	addwfc	(dtoa@n+1)^0,f,c
 12350  003AD0  2238               	addwfc	(dtoa@n+2)^0,f,c
 12351  003AD2  2239               	addwfc	(dtoa@n+3)^0,f,c
 12352  003AD4  223A               	addwfc	(dtoa@n+4)^0,f,c
 12353  003AD6  223B               	addwfc	(dtoa@n+5)^0,f,c
 12354  003AD8  223C               	addwfc	(dtoa@n+6)^0,f,c
 12355  003ADA  223D               	addwfc	(dtoa@n+7)^0,f,c
 12356  003ADC                     l4805:
 12357                           
 12358                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 12359  003ADC  0101               	movlb	1	; () banked
 12360  003ADE  BFA3               	btfsc	(_prec+1)& (0+255),7,b
 12361  003AE0  EF74  F01D         	goto	u5541
 12362  003AE4  EF76  F01D         	goto	u5540
 12363  003AE8                     u5541:
 12364  003AE8  EF77  F01D         	goto	l4809
 12365  003AEC                     u5540:
 12366  003AEC                     
 12367                           ; BSR set to: 1
 12368                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 12369  003AEC  93A4               	bcf	_flags& (0+255),1,b
 12370  003AEE                     l4809:
 12371                           
 12372                           ; BSR set to: 1
 12373                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 12374  003AEE  BFA3               	btfsc	(_prec+1)& (0+255),7,b
 12375  003AF0  EF84  F01D         	goto	u5550
 12376  003AF4  51A3               	movf	(_prec+1)& (0+255),w,b
 12377  003AF6  E106               	bnz	u5551
 12378  003AF8  05A2               	decf	_prec& (0+255),w,b
 12379  003AFA  B0D8               	btfsc	status,0,c
 12380  003AFC  EF82  F01D         	goto	u5551
 12381  003B00  EF84  F01D         	goto	u5550
 12382  003B04                     u5551:
 12383  003B04  EF8A  F01D         	goto	l1221
 12384  003B08                     u5550:
 12385  003B08                     
 12386                           ; BSR set to: 1
 12387  003B08  0E00               	movlw	0
 12388  003B0A  6E31               	movwf	(dtoa@p+1)^0,c
 12389  003B0C  0E01               	movlw	1
 12390  003B0E  6E30               	movwf	dtoa@p^0,c
 12391  003B10  EF8E  F01D         	goto	l1223
 12392  003B14                     l1221:
 12393                           
 12394                           ; BSR set to: 1
 12395  003B14  C1A2  F030         	movff	_prec,dtoa@p
 12396  003B18  C1A3  F031         	movff	_prec+1,dtoa@p+1
 12397  003B1C                     l1223:
 12398                           
 12399                           ; BSR set to: 1
 12400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 12401  003B1C  C1A0  F032         	movff	_width,dtoa@w
 12402  003B20  C1A1  F033         	movff	_width+1,dtoa@w+1
 12403  003B24                     
 12404                           ; BSR set to: 1
 12405                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 12406  003B24  5034               	movf	dtoa@s^0,w,c
 12407  003B26  1035               	iorwf	(dtoa@s+1)^0,w,c
 12408  003B28  A4D8               	btfss	status,2,c
 12409  003B2A  EF99  F01D         	goto	u5561
 12410  003B2E  EF9B  F01D         	goto	u5560
 12411  003B32                     u5561:
 12412  003B32  EFA2  F01D         	goto	l4817
 12413  003B36                     u5560:
 12414  003B36                     
 12415                           ; BSR set to: 1
 12416  003B36  A5A4               	btfss	_flags& (0+255),2,b
 12417  003B38  EFA0  F01D         	goto	u5571
 12418  003B3C  EFA2  F01D         	goto	u5570
 12419  003B40                     u5571:
 12420  003B40  EFA5  F01D         	goto	l4819
 12421  003B44                     u5570:
 12422  003B44                     l4817:
 12423                           
 12424                           ; BSR set to: 1
 12425                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 12426  003B44  0632               	decf	dtoa@w^0,f,c
 12427  003B46  A0D8               	btfss	status,0,c
 12428  003B48  0633               	decf	(dtoa@w+1)^0,f,c
 12429  003B4A                     l4819:
 12430                           
 12431                           ; BSR set to: 1
 12432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 12433  003B4A  0E00               	movlw	0
 12434  003B4C  6E3F               	movwf	(dtoa@i+1)^0,c
 12435  003B4E  0E4F               	movlw	79
 12436  003B50  6E3E               	movwf	dtoa@i^0,c
 12437  003B52                     
 12438                           ; BSR set to: 1
 12439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 12440  003B52  0E00               	movlw	0
 12441  003B54  0102               	movlb	2	; () banked
 12442  003B56  6F4F               	movwf	(_dbuf+79)& (0+255),b
 12443                           
 12444                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12445  003B58  EF2A  F01E         	goto	l4833
 12446  003B5C                     l4823:
 12447                           
 12448                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 12449  003B5C  063E               	decf	dtoa@i^0,f,c
 12450  003B5E  A0D8               	btfss	status,0,c
 12451  003B60  063F               	decf	(dtoa@i+1)^0,f,c
 12452  003B62                     
 12453                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 12454  003B62  0E00               	movlw	low _dbuf
 12455  003B64  243E               	addwf	dtoa@i^0,w,c
 12456  003B66  6ED9               	movwf	fsr2l,c
 12457  003B68  0E02               	movlw	high _dbuf
 12458  003B6A  203F               	addwfc	(dtoa@i+1)^0,w,c
 12459  003B6C  6EDA               	movwf	fsr2h,c
 12460  003B6E  C036  F001         	movff	dtoa@n,___aomod@dividend
 12461  003B72  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 12462  003B76  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 12463  003B7A  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 12464  003B7E  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 12465  003B82  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 12466  003B86  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 12467  003B8A  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 12468  003B8E  0E0A               	movlw	10
 12469  003B90  6E09               	movwf	___aomod@divisor^0,c
 12470  003B92  0E00               	movlw	0
 12471  003B94  6E0A               	movwf	(___aomod@divisor+1)^0,c
 12472  003B96  0E00               	movlw	0
 12473  003B98  6E0B               	movwf	(___aomod@divisor+2)^0,c
 12474  003B9A  0E00               	movlw	0
 12475  003B9C  6E0C               	movwf	(___aomod@divisor+3)^0,c
 12476  003B9E  0E00               	movlw	0
 12477  003BA0  6E0D               	movwf	(___aomod@divisor+4)^0,c
 12478  003BA2  0E00               	movlw	0
 12479  003BA4  6E0E               	movwf	(___aomod@divisor+5)^0,c
 12480  003BA6  0E00               	movlw	0
 12481  003BA8  6E0F               	movwf	(___aomod@divisor+6)^0,c
 12482  003BAA  0E00               	movlw	0
 12483  003BAC  6E10               	movwf	(___aomod@divisor+7)^0,c
 12484  003BAE  ECBE  F023         	call	___aomod	;wreg free
 12485  003BB2  C001  F026         	movff	?___aomod,??_dtoa
 12486  003BB6  C002  F027         	movff	?___aomod+1,??_dtoa+1
 12487  003BBA  C003  F028         	movff	?___aomod+2,??_dtoa+2
 12488  003BBE  C004  F029         	movff	?___aomod+3,??_dtoa+3
 12489  003BC2  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 12490  003BC6  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 12491  003BCA  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 12492  003BCE  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 12493  003BD2  C026  F013         	movff	??_dtoa,abs@a
 12494  003BD6  C028  F014         	movff	??_dtoa+2,abs@a+1
 12495  003BDA  ECDC  F02C         	call	_abs	;wreg free
 12496  003BDE  5013               	movf	?_abs^0,w,c
 12497  003BE0  0F30               	addlw	48
 12498  003BE2  6EDF               	movwf	indf2,c
 12499  003BE4                     
 12500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 12501  003BE4  0630               	decf	dtoa@p^0,f,c
 12502  003BE6  A0D8               	btfss	status,0,c
 12503  003BE8  0631               	decf	(dtoa@p+1)^0,f,c
 12504  003BEA                     
 12505                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 12506  003BEA  0632               	decf	dtoa@w^0,f,c
 12507  003BEC  A0D8               	btfss	status,0,c
 12508  003BEE  0633               	decf	(dtoa@w+1)^0,f,c
 12509  003BF0                     
 12510                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 12511  003BF0  C036  F001         	movff	dtoa@n,___aodiv@dividend
 12512  003BF4  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 12513  003BF8  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 12514  003BFC  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 12515  003C00  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 12516  003C04  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 12517  003C08  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 12518  003C0C  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 12519  003C10  0E0A               	movlw	10
 12520  003C12  6E09               	movwf	___aodiv@divisor^0,c
 12521  003C14  0E00               	movlw	0
 12522  003C16  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 12523  003C18  0E00               	movlw	0
 12524  003C1A  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 12525  003C1C  0E00               	movlw	0
 12526  003C1E  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 12527  003C20  0E00               	movlw	0
 12528  003C22  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 12529  003C24  0E00               	movlw	0
 12530  003C26  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 12531  003C28  0E00               	movlw	0
 12532  003C2A  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 12533  003C2C  0E00               	movlw	0
 12534  003C2E  6E10               	movwf	(___aodiv@divisor+7)^0,c
 12535  003C30  EC38  F022         	call	___aodiv	;wreg free
 12536  003C34  C001  F036         	movff	?___aodiv,dtoa@n
 12537  003C38  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 12538  003C3C  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 12539  003C40  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 12540  003C44  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 12541  003C48  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 12542  003C4C  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 12543  003C50  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 12544  003C54                     l4833:
 12545                           
 12546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 12547  003C54  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 12548  003C56  EF35  F01E         	goto	u5581
 12549  003C5A  503F               	movf	(dtoa@i+1)^0,w,c
 12550  003C5C  E108               	bnz	u5580
 12551  003C5E  043E               	decf	dtoa@i^0,w,c
 12552  003C60  A0D8               	btfss	status,0,c
 12553  003C62  EF35  F01E         	goto	u5581
 12554  003C66  EF37  F01E         	goto	u5580
 12555  003C6A                     u5581:
 12556  003C6A  EF68  F01E         	goto	l4843
 12557  003C6E                     u5580:
 12558  003C6E  5036               	movf	dtoa@n^0,w,c
 12559  003C70  1037               	iorwf	(dtoa@n+1)^0,w,c
 12560  003C72  1038               	iorwf	(dtoa@n+2)^0,w,c
 12561  003C74  1039               	iorwf	(dtoa@n+3)^0,w,c
 12562  003C76  103A               	iorwf	(dtoa@n+4)^0,w,c
 12563  003C78  103B               	iorwf	(dtoa@n+5)^0,w,c
 12564  003C7A  103C               	iorwf	(dtoa@n+6)^0,w,c
 12565  003C7C  103D               	iorwf	(dtoa@n+7)^0,w,c
 12566  003C7E  A4D8               	btfss	status,2,c
 12567  003C80  EF44  F01E         	goto	u5591
 12568  003C84  EF46  F01E         	goto	u5590
 12569  003C88                     u5591:
 12570  003C88  EFAE  F01D         	goto	l4823
 12571  003C8C                     u5590:
 12572  003C8C  BE31               	btfsc	(dtoa@p+1)^0,7,c
 12573  003C8E  EF53  F01E         	goto	u5600
 12574  003C92  5031               	movf	(dtoa@p+1)^0,w,c
 12575  003C94  E106               	bnz	u5601
 12576  003C96  0430               	decf	dtoa@p^0,w,c
 12577  003C98  B0D8               	btfsc	status,0,c
 12578  003C9A  EF51  F01E         	goto	u5601
 12579  003C9E  EF53  F01E         	goto	u5600
 12580  003CA2                     u5601:
 12581  003CA2  EFAE  F01D         	goto	l4823
 12582  003CA6                     u5600:
 12583  003CA6  BE33               	btfsc	(dtoa@w+1)^0,7,c
 12584  003CA8  EF5E  F01E         	goto	u5611
 12585  003CAC  5033               	movf	(dtoa@w+1)^0,w,c
 12586  003CAE  E108               	bnz	u5610
 12587  003CB0  0432               	decf	dtoa@w^0,w,c
 12588  003CB2  A0D8               	btfss	status,0,c
 12589  003CB4  EF5E  F01E         	goto	u5611
 12590  003CB8  EF60  F01E         	goto	u5610
 12591  003CBC                     u5611:
 12592  003CBC  EF68  F01E         	goto	l4843
 12593  003CC0                     u5610:
 12594  003CC0  0101               	movlb	1	; () banked
 12595  003CC2  B3A4               	btfsc	_flags& (0+255),1,b
 12596  003CC4  EF66  F01E         	goto	u5621
 12597  003CC8  EF68  F01E         	goto	u5620
 12598  003CCC                     u5621:
 12599  003CCC  EFAE  F01D         	goto	l4823
 12600  003CD0                     u5620:
 12601  003CD0                     l4843:
 12602                           
 12603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 12604  003CD0  5034               	movf	dtoa@s^0,w,c
 12605  003CD2  1035               	iorwf	(dtoa@s+1)^0,w,c
 12606  003CD4  A4D8               	btfss	status,2,c
 12607  003CD6  EF6F  F01E         	goto	u5631
 12608  003CDA  EF71  F01E         	goto	u5630
 12609  003CDE                     u5631:
 12610  003CDE  EF79  F01E         	goto	l4847
 12611  003CE2                     u5630:
 12612  003CE2  0101               	movlb	1	; () banked
 12613  003CE4  A5A4               	btfss	_flags& (0+255),2,b
 12614  003CE6  EF77  F01E         	goto	u5641
 12615  003CEA  EF79  F01E         	goto	u5640
 12616  003CEE                     u5641:
 12617  003CEE  EF97  F01E         	goto	l4857
 12618  003CF2                     u5640:
 12619  003CF2                     l4847:
 12620                           
 12621                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 12622  003CF2  063E               	decf	dtoa@i^0,f,c
 12623  003CF4  A0D8               	btfss	status,0,c
 12624  003CF6  063F               	decf	(dtoa@i+1)^0,f,c
 12625  003CF8                     
 12626                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 12627  003CF8  5034               	movf	dtoa@s^0,w,c
 12628  003CFA  1035               	iorwf	(dtoa@s+1)^0,w,c
 12629  003CFC  A4D8               	btfss	status,2,c
 12630  003CFE  EF83  F01E         	goto	u5651
 12631  003D02  EF85  F01E         	goto	u5650
 12632  003D06                     u5651:
 12633  003D06  EF8B  F01E         	goto	l4853
 12634  003D0A                     u5650:
 12635  003D0A  0E00               	movlw	0
 12636  003D0C  6E2F               	movwf	(_dtoa$2479+1)^0,c
 12637  003D0E  0E2B               	movlw	43
 12638  003D10  6E2E               	movwf	_dtoa$2479^0,c
 12639  003D12  EF8F  F01E         	goto	l4855
 12640  003D16                     l4853:
 12641  003D16  0E00               	movlw	0
 12642  003D18  6E2F               	movwf	(_dtoa$2479+1)^0,c
 12643  003D1A  0E2D               	movlw	45
 12644  003D1C  6E2E               	movwf	_dtoa$2479^0,c
 12645  003D1E                     l4855:
 12646  003D1E  0E00               	movlw	low _dbuf
 12647  003D20  243E               	addwf	dtoa@i^0,w,c
 12648  003D22  6ED9               	movwf	fsr2l,c
 12649  003D24  0E02               	movlw	high _dbuf
 12650  003D26  203F               	addwfc	(dtoa@i+1)^0,w,c
 12651  003D28  6EDA               	movwf	fsr2h,c
 12652  003D2A  C02E  FFDF         	movff	_dtoa$2479,indf2
 12653  003D2E                     l4857:
 12654                           
 12655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 12656  003D2E  C01C  F011         	movff	dtoa@fp,pad@fp
 12657  003D32  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 12658  003D36  0E00               	movlw	low _dbuf
 12659  003D38  243E               	addwf	dtoa@i^0,w,c
 12660  003D3A  6E13               	movwf	pad@buf^0,c
 12661  003D3C  0E02               	movlw	high _dbuf
 12662  003D3E  203F               	addwfc	(dtoa@i+1)^0,w,c
 12663  003D40  6E14               	movwf	(pad@buf+1)^0,c
 12664  003D42  C032  F015         	movff	dtoa@w,pad@p
 12665  003D46  C033  F016         	movff	dtoa@w+1,pad@p+1
 12666  003D4A  ECD3  F027         	call	_pad	;wreg free
 12667  003D4E  C011  F01C         	movff	?_pad,?_dtoa
 12668  003D52  C012  F01D         	movff	?_pad+1,?_dtoa+1
 12669  003D56  0012               	return		;funcret
 12670  003D58                     __end_of_dtoa:
 12671                           	callstack 0
 12672                           
 12673 ;; *************** function _pad *****************
 12674 ;; Defined at:
 12675 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12676 ;; Parameters:    Size  Location     Type
 12677 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 12678 ;;		 -> sprintf@f(6), 
 12679 ;;  buf             2   18[COMRAM] PTR unsigned char 
 12680 ;;		 -> dbuf(80), 
 12681 ;;  p               2   20[COMRAM] int 
 12682 ;; Auto vars:     Size  Location     Type
 12683 ;;  w               2   25[COMRAM] int 
 12684 ;;  i               2   23[COMRAM] int 
 12685 ;; Return value:  Size  Location     Type
 12686 ;;                  2   16[COMRAM] int 
 12687 ;; Registers used:
 12688 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12689 ;; Tracked objects:
 12690 ;;		On entry : 0/0
 12691 ;;		On exit  : 0/0
 12692 ;;		Unchanged: 0/0
 12693 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12694 ;;      Params:         6       0       0       0       0       0       0
 12695 ;;      Locals:         4       0       0       0       0       0       0
 12696 ;;      Temps:          1       0       0       0       0       0       0
 12697 ;;      Totals:        11       0       0       0       0       0       0
 12698 ;;Total ram usage:       11 bytes
 12699 ;; Hardware stack levels used:    1
 12700 ;; Hardware stack levels required when called:    4
 12701 ;; This function calls:
 12702 ;;		_fputc
 12703 ;;		_fputs
 12704 ;;		_strlen
 12705 ;; This function is called by:
 12706 ;;		_dtoa
 12707 ;;		_efgtoa
 12708 ;; This function uses a non-reentrant model
 12709 ;;
 12710                           
 12711                           	psect	text40
 12712  004FA6                     __ptext40:
 12713                           	callstack 0
 12714  004FA6                     _pad:
 12715                           	callstack 20
 12716  004FA6                     
 12717                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 12718  004FA6  0101               	movlb	1	; () banked
 12719  004FA8  A1A4               	btfss	_flags& (0+255),0,b
 12720  004FAA  EFD9  F027         	goto	u5201
 12721  004FAE  EFDB  F027         	goto	u5200
 12722  004FB2                     u5201:
 12723  004FB2  EFE5  F027         	goto	l4697
 12724  004FB6                     u5200:
 12725  004FB6                     
 12726                           ; BSR set to: 1
 12727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 12728  004FB6  C013  F00A         	movff	pad@buf,fputs@s
 12729  004FBA  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12730  004FBE  C011  F00C         	movff	pad@fp,fputs@fp
 12731  004FC2  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12732  004FC6  EC99  F02C         	call	_fputs	;wreg free
 12733  004FCA                     l4697:
 12734                           
 12735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 12736  004FCA  BE16               	btfsc	(pad@p+1)^0,7,c
 12737  004FCC  EFEA  F027         	goto	u5211
 12738  004FD0  EFEC  F027         	goto	u5210
 12739  004FD4                     u5211:
 12740  004FD4  EFF2  F027         	goto	l4701
 12741  004FD8                     u5210:
 12742  004FD8  C015  F01A         	movff	pad@p,pad@w
 12743  004FDC  C016  F01B         	movff	pad@p+1,pad@w+1
 12744  004FE0  EFF6  F027         	goto	l1210
 12745  004FE4                     l4701:
 12746  004FE4  0E00               	movlw	0
 12747  004FE6  6E1B               	movwf	(pad@w+1)^0,c
 12748  004FE8  0E00               	movlw	0
 12749  004FEA  6E1A               	movwf	pad@w^0,c
 12750  004FEC                     l1210:
 12751                           
 12752                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 12753  004FEC  0E00               	movlw	0
 12754  004FEE  6E19               	movwf	(pad@i+1)^0,c
 12755  004FF0  0E00               	movlw	0
 12756  004FF2  6E18               	movwf	pad@i^0,c
 12757                           
 12758                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12759  004FF4  EF08  F028         	goto	l4707
 12760  004FF8                     l4703:
 12761                           
 12762                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 12763  004FF8  0E00               	movlw	0
 12764  004FFA  6E02               	movwf	(fputc@c+1)^0,c
 12765  004FFC  0E20               	movlw	32
 12766  004FFE  6E01               	movwf	fputc@c^0,c
 12767  005000  C011  F003         	movff	pad@fp,fputc@fp
 12768  005004  C012  F004         	movff	pad@fp+1,fputc@fp+1
 12769  005008  EC6E  F027         	call	_fputc	;wreg free
 12770  00500C                     
 12771                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 12772  00500C  4A18               	infsnz	pad@i^0,f,c
 12773  00500E  2A19               	incf	(pad@i+1)^0,f,c
 12774  005010                     l4707:
 12775                           
 12776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 12777  005010  501A               	movf	pad@w^0,w,c
 12778  005012  5C18               	subwf	pad@i^0,w,c
 12779  005014  5019               	movf	(pad@i+1)^0,w,c
 12780  005016  0A80               	xorlw	128
 12781  005018  6E17               	movwf	??_pad^0,c
 12782  00501A  501B               	movf	(pad@w+1)^0,w,c
 12783  00501C  0A80               	xorlw	128
 12784  00501E  5817               	subwfb	??_pad^0,w,c
 12785  005020  A0D8               	btfss	status,0,c
 12786  005022  EF15  F028         	goto	u5221
 12787  005026  EF17  F028         	goto	u5220
 12788  00502A                     u5221:
 12789  00502A  EFFC  F027         	goto	l4703
 12790  00502E                     u5220:
 12791  00502E                     
 12792                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 12793  00502E  0101               	movlb	1	; () banked
 12794  005030  B1A4               	btfsc	_flags& (0+255),0,b
 12795  005032  EF1D  F028         	goto	u5231
 12796  005036  EF1F  F028         	goto	u5230
 12797  00503A                     u5231:
 12798  00503A  EF29  F028         	goto	l4711
 12799  00503E                     u5230:
 12800  00503E                     
 12801                           ; BSR set to: 1
 12802                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 12803  00503E  C013  F00A         	movff	pad@buf,fputs@s
 12804  005042  C014  F00B         	movff	pad@buf+1,fputs@s+1
 12805  005046  C011  F00C         	movff	pad@fp,fputs@fp
 12806  00504A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 12807  00504E  EC99  F02C         	call	_fputs	;wreg free
 12808  005052                     l4711:
 12809                           
 12810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 12811  005052  C013  F001         	movff	pad@buf,strlen@s
 12812  005056  C014  F002         	movff	pad@buf+1,strlen@s+1
 12813  00505A  ECC4  F02D         	call	_strlen	;wreg free
 12814  00505E  501A               	movf	pad@w^0,w,c
 12815  005060  2401               	addwf	?_strlen^0,w,c
 12816  005062  6E11               	movwf	?_pad^0,c
 12817  005064  501B               	movf	(pad@w+1)^0,w,c
 12818  005066  2002               	addwfc	(?_strlen+1)^0,w,c
 12819  005068  6E12               	movwf	(?_pad+1)^0,c
 12820  00506A  0012               	return		;funcret
 12821  00506C                     __end_of_pad:
 12822                           	callstack 0
 12823                           
 12824 ;; *************** function _strlen *****************
 12825 ;; Defined at:
 12826 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 12827 ;; Parameters:    Size  Location     Type
 12828 ;;  s               2    0[COMRAM] PTR const unsigned char 
 12829 ;;		 -> dbuf(80), 
 12830 ;; Auto vars:     Size  Location     Type
 12831 ;;  a               2    2[COMRAM] PTR const unsigned char 
 12832 ;;		 -> dbuf(80), 
 12833 ;; Return value:  Size  Location     Type
 12834 ;;                  2    0[COMRAM] unsigned int 
 12835 ;; Registers used:
 12836 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 12837 ;; Tracked objects:
 12838 ;;		On entry : 0/0
 12839 ;;		On exit  : 0/0
 12840 ;;		Unchanged: 0/0
 12841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12842 ;;      Params:         2       0       0       0       0       0       0
 12843 ;;      Locals:         2       0       0       0       0       0       0
 12844 ;;      Temps:          0       0       0       0       0       0       0
 12845 ;;      Totals:         4       0       0       0       0       0       0
 12846 ;;Total ram usage:        4 bytes
 12847 ;; Hardware stack levels used:    1
 12848 ;; Hardware stack levels required when called:    1
 12849 ;; This function calls:
 12850 ;;		Nothing
 12851 ;; This function is called by:
 12852 ;;		_pad
 12853 ;; This function uses a non-reentrant model
 12854 ;;
 12855                           
 12856                           	psect	text41
 12857  005B88                     __ptext41:
 12858                           	callstack 0
 12859  005B88                     _strlen:
 12860                           	callstack 22
 12861  005B88  C001  F003         	movff	strlen@s,strlen@a
 12862  005B8C  C002  F004         	movff	strlen@s+1,strlen@a+1
 12863  005B90  EFCC  F02D         	goto	l4153
 12864  005B94                     l4151:
 12865  005B94  4A01               	infsnz	strlen@s^0,f,c
 12866  005B96  2A02               	incf	(strlen@s+1)^0,f,c
 12867  005B98                     l4153:
 12868  005B98  C001  FFD9         	movff	strlen@s,fsr2l
 12869  005B9C  C002  FFDA         	movff	strlen@s+1,fsr2h
 12870  005BA0  50DF               	movf	indf2,w,c
 12871  005BA2  A4D8               	btfss	status,2,c
 12872  005BA4  EFD6  F02D         	goto	u4341
 12873  005BA8  EFD8  F02D         	goto	u4340
 12874  005BAC                     u4341:
 12875  005BAC  EFCA  F02D         	goto	l4151
 12876  005BB0                     u4340:
 12877  005BB0  5003               	movf	strlen@a^0,w,c
 12878  005BB2  5C01               	subwf	strlen@s^0,w,c
 12879  005BB4  6E01               	movwf	?_strlen^0,c
 12880  005BB6  5004               	movf	(strlen@a+1)^0,w,c
 12881  005BB8  5802               	subwfb	(strlen@s+1)^0,w,c
 12882  005BBA  6E02               	movwf	(?_strlen+1)^0,c
 12883  005BBC  0012               	return		;funcret
 12884  005BBE                     __end_of_strlen:
 12885                           	callstack 0
 12886                           
 12887 ;; *************** function _fputs *****************
 12888 ;; Defined at:
 12889 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 12890 ;; Parameters:    Size  Location     Type
 12891 ;;  s               2    9[COMRAM] PTR const unsigned char 
 12892 ;;		 -> dbuf(80), 
 12893 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 12894 ;;		 -> sprintf@f(6), 
 12895 ;; Auto vars:     Size  Location     Type
 12896 ;;  i               2   14[COMRAM] int 
 12897 ;;  c               1   13[COMRAM] unsigned char 
 12898 ;; Return value:  Size  Location     Type
 12899 ;;                  2    9[COMRAM] int 
 12900 ;; Registers used:
 12901 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12902 ;; Tracked objects:
 12903 ;;		On entry : 0/0
 12904 ;;		On exit  : 0/0
 12905 ;;		Unchanged: 0/0
 12906 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12907 ;;      Params:         4       0       0       0       0       0       0
 12908 ;;      Locals:         3       0       0       0       0       0       0
 12909 ;;      Temps:          0       0       0       0       0       0       0
 12910 ;;      Totals:         7       0       0       0       0       0       0
 12911 ;;Total ram usage:        7 bytes
 12912 ;; Hardware stack levels used:    1
 12913 ;; Hardware stack levels required when called:    3
 12914 ;; This function calls:
 12915 ;;		_fputc
 12916 ;; This function is called by:
 12917 ;;		_pad
 12918 ;; This function uses a non-reentrant model
 12919 ;;
 12920                           
 12921                           	psect	text42
 12922  005932                     __ptext42:
 12923                           	callstack 0
 12924  005932                     _fputs:
 12925                           	callstack 20
 12926  005932  0E00               	movlw	0
 12927  005934  6E10               	movwf	(fputs@i+1)^0,c
 12928  005936  0E00               	movlw	0
 12929  005938  6E0F               	movwf	fputs@i^0,c
 12930  00593A  EFAA  F02C         	goto	l4147
 12931  00593E                     l4143:
 12932  00593E  C00E  F001         	movff	fputs@c,fputc@c
 12933  005942  6A02               	clrf	(fputc@c+1)^0,c
 12934  005944  C00C  F003         	movff	fputs@fp,fputc@fp
 12935  005948  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 12936  00594C  EC6E  F027         	call	_fputc	;wreg free
 12937  005950  4A0F               	infsnz	fputs@i^0,f,c
 12938  005952  2A10               	incf	(fputs@i+1)^0,f,c
 12939  005954                     l4147:
 12940  005954  500F               	movf	fputs@i^0,w,c
 12941  005956  240A               	addwf	fputs@s^0,w,c
 12942  005958  6ED9               	movwf	fsr2l,c
 12943  00595A  5010               	movf	(fputs@i+1)^0,w,c
 12944  00595C  200B               	addwfc	(fputs@s+1)^0,w,c
 12945  00595E  6EDA               	movwf	fsr2h,c
 12946  005960  50DF               	movf	indf2,w,c
 12947  005962  6E0E               	movwf	fputs@c^0,c
 12948  005964  500E               	movf	fputs@c^0,w,c
 12949  005966  A4D8               	btfss	status,2,c
 12950  005968  EFB8  F02C         	goto	u4331
 12951  00596C  EFBA  F02C         	goto	u4330
 12952  005970                     u4331:
 12953  005970  EF9F  F02C         	goto	l4143
 12954  005974                     u4330:
 12955  005974  0012               	return		;funcret
 12956  005976                     __end_of_fputs:
 12957                           	callstack 0
 12958                           
 12959 ;; *************** function _fputc *****************
 12960 ;; Defined at:
 12961 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 12962 ;; Parameters:    Size  Location     Type
 12963 ;;  c               2    0[COMRAM] int 
 12964 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 12965 ;;		 -> sprintf@f(6), 
 12966 ;; Auto vars:     Size  Location     Type
 12967 ;;		None
 12968 ;; Return value:  Size  Location     Type
 12969 ;;                  2    0[COMRAM] int 
 12970 ;; Registers used:
 12971 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12972 ;; Tracked objects:
 12973 ;;		On entry : 0/0
 12974 ;;		On exit  : 0/0
 12975 ;;		Unchanged: 0/0
 12976 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12977 ;;      Params:         4       0       0       0       0       0       0
 12978 ;;      Locals:         0       0       0       0       0       0       0
 12979 ;;      Temps:          5       0       0       0       0       0       0
 12980 ;;      Totals:         9       0       0       0       0       0       0
 12981 ;;Total ram usage:        9 bytes
 12982 ;; Hardware stack levels used:    1
 12983 ;; Hardware stack levels required when called:    2
 12984 ;; This function calls:
 12985 ;;		_putch
 12986 ;; This function is called by:
 12987 ;;		_pad
 12988 ;;		_vfpfcnvrt
 12989 ;;		_fputs
 12990 ;; This function uses a non-reentrant model
 12991 ;;
 12992                           
 12993                           	psect	text43
 12994  004EDC                     __ptext43:
 12995                           	callstack 0
 12996  004EDC                     _fputc:
 12997                           	callstack 23
 12998  004EDC  5003               	movf	fputc@fp^0,w,c
 12999  004EDE  1004               	iorwf	(fputc@fp+1)^0,w,c
 13000  004EE0  B4D8               	btfsc	status,2,c
 13001  004EE2  EF75  F027         	goto	u3901
 13002  004EE6  EF77  F027         	goto	u3900
 13003  004EEA                     u3901:
 13004  004EEA  EF80  F027         	goto	l3929
 13005  004EEE                     u3900:
 13006  004EEE  5003               	movf	fputc@fp^0,w,c
 13007  004EF0  1004               	iorwf	(fputc@fp+1)^0,w,c
 13008  004EF2  A4D8               	btfss	status,2,c
 13009  004EF4  EF7E  F027         	goto	u3911
 13010  004EF8  EF80  F027         	goto	u3910
 13011  004EFC                     u3911:
 13012  004EFC  EF85  F027         	goto	l3931
 13013  004F00                     u3910:
 13014  004F00                     l3929:
 13015  004F00  5001               	movf	fputc@c^0,w,c
 13016  004F02  EC94  F02E         	call	_putch
 13017  004F06  EFD2  F027         	goto	l1470
 13018  004F0A                     l3931:
 13019  004F0A  EE20 F004          	lfsr	2,4
 13020  004F0E  5003               	movf	fputc@fp^0,w,c
 13021  004F10  26D9               	addwf	fsr2l,f,c
 13022  004F12  5004               	movf	(fputc@fp+1)^0,w,c
 13023  004F14  22DA               	addwfc	fsr2h,f,c
 13024  004F16  50DE               	movf	postinc2,w,c
 13025  004F18  10DE               	iorwf	postinc2,w,c
 13026  004F1A  B4D8               	btfsc	status,2,c
 13027  004F1C  EF92  F027         	goto	u3921
 13028  004F20  EF94  F027         	goto	u3920
 13029  004F24                     u3921:
 13030  004F24  EFAF  F027         	goto	l3935
 13031  004F28                     u3920:
 13032  004F28  EE20 F004          	lfsr	2,4
 13033  004F2C  5003               	movf	fputc@fp^0,w,c
 13034  004F2E  26D9               	addwf	fsr2l,f,c
 13035  004F30  5004               	movf	(fputc@fp+1)^0,w,c
 13036  004F32  22DA               	addwfc	fsr2h,f,c
 13037  004F34  EE10 F002          	lfsr	1,2
 13038  004F38  5003               	movf	fputc@fp^0,w,c
 13039  004F3A  26E1               	addwf	fsr1l,f,c
 13040  004F3C  5004               	movf	(fputc@fp+1)^0,w,c
 13041  004F3E  22E2               	addwfc	fsr1h,f,c
 13042  004F40  50DE               	movf	postinc2,w,c
 13043  004F42  5CE6               	subwf	postinc1,w,c
 13044  004F44  50E6               	movf	postinc1,w,c
 13045  004F46  0A80               	xorlw	128
 13046  004F48  6E09               	movwf	(??_fputc+4)^0,c
 13047  004F4A  50DE               	movf	postinc2,w,c
 13048  004F4C  0A80               	xorlw	128
 13049  004F4E  5809               	subwfb	(??_fputc+4)^0,w,c
 13050  004F50  B0D8               	btfsc	status,0,c
 13051  004F52  EFAD  F027         	goto	u3931
 13052  004F56  EFAF  F027         	goto	u3930
 13053  004F5A                     u3931:
 13054  004F5A  EFD2  F027         	goto	l1470
 13055  004F5E                     u3930:
 13056  004F5E                     l3935:
 13057  004F5E  EE20 F002          	lfsr	2,2
 13058  004F62  5003               	movf	fputc@fp^0,w,c
 13059  004F64  26D9               	addwf	fsr2l,f,c
 13060  004F66  5004               	movf	(fputc@fp+1)^0,w,c
 13061  004F68  22DA               	addwfc	fsr2h,f,c
 13062  004F6A  CFDE F005          	movff	postinc2,??_fputc
 13063  004F6E  CFDD F006          	movff	postdec2,??_fputc+1
 13064  004F72  C003  FFD9         	movff	fputc@fp,fsr2l
 13065  004F76  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13066  004F7A  CFDE F007          	movff	postinc2,??_fputc+2
 13067  004F7E  CFDD F008          	movff	postdec2,??_fputc+3
 13068  004F82  5005               	movf	??_fputc^0,w,c
 13069  004F84  2407               	addwf	(??_fputc+2)^0,w,c
 13070  004F86  6ED9               	movwf	fsr2l,c
 13071  004F88  5006               	movf	(??_fputc+1)^0,w,c
 13072  004F8A  2008               	addwfc	(??_fputc+3)^0,w,c
 13073  004F8C  6EDA               	movwf	fsr2h,c
 13074  004F8E  C001  FFDF         	movff	fputc@c,indf2
 13075  004F92  EE20 F002          	lfsr	2,2
 13076  004F96  5003               	movf	fputc@fp^0,w,c
 13077  004F98  26D9               	addwf	fsr2l,f,c
 13078  004F9A  5004               	movf	(fputc@fp+1)^0,w,c
 13079  004F9C  22DA               	addwfc	fsr2h,f,c
 13080  004F9E  2ADE               	incf	postinc2,f,c
 13081  004FA0  0E00               	movlw	0
 13082  004FA2  22DD               	addwfc	postdec2,f,c
 13083  004FA4                     l1470:
 13084  004FA4  0012               	return		;funcret
 13085  004FA6                     __end_of_fputc:
 13086                           	callstack 0
 13087                           
 13088 ;; *************** function _putch *****************
 13089 ;; Defined at:
 13090 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13091 ;; Parameters:    Size  Location     Type
 13092 ;;  c               1    wreg     unsigned char 
 13093 ;; Auto vars:     Size  Location     Type
 13094 ;;  c               1    0[COMRAM] unsigned char 
 13095 ;; Return value:  Size  Location     Type
 13096 ;;                  1    wreg      void 
 13097 ;; Registers used:
 13098 ;;		wreg
 13099 ;; Tracked objects:
 13100 ;;		On entry : 0/0
 13101 ;;		On exit  : 0/0
 13102 ;;		Unchanged: 0/0
 13103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13104 ;;      Params:         0       0       0       0       0       0       0
 13105 ;;      Locals:         0       0       0       0       0       0       0
 13106 ;;      Temps:          0       0       0       0       0       0       0
 13107 ;;      Totals:         0       0       0       0       0       0       0
 13108 ;;Total ram usage:        0 bytes
 13109 ;; Hardware stack levels used:    1
 13110 ;; Hardware stack levels required when called:    1
 13111 ;; This function calls:
 13112 ;;		Nothing
 13113 ;; This function is called by:
 13114 ;;		_fputc
 13115 ;; This function uses a non-reentrant model
 13116 ;;
 13117                           
 13118                           	psect	text44
 13119  005D28                     __ptext44:
 13120                           	callstack 0
 13121  005D28                     _putch:
 13122                           	callstack 23
 13123  005D28  0012               	return		;funcret
 13124  005D2A                     __end_of_putch:
 13125                           	callstack 0
 13126                           
 13127 ;; *************** function _abs *****************
 13128 ;; Defined at:
 13129 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13130 ;; Parameters:    Size  Location     Type
 13131 ;;  a               2   18[COMRAM] int 
 13132 ;; Auto vars:     Size  Location     Type
 13133 ;;		None
 13134 ;; Return value:  Size  Location     Type
 13135 ;;                  2   18[COMRAM] int 
 13136 ;; Registers used:
 13137 ;;		wreg, status,2, status,0
 13138 ;; Tracked objects:
 13139 ;;		On entry : 0/0
 13140 ;;		On exit  : 0/0
 13141 ;;		Unchanged: 0/0
 13142 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13143 ;;      Params:         2       0       0       0       0       0       0
 13144 ;;      Locals:         0       0       0       0       0       0       0
 13145 ;;      Temps:          2       0       0       0       0       0       0
 13146 ;;      Totals:         4       0       0       0       0       0       0
 13147 ;;Total ram usage:        4 bytes
 13148 ;; Hardware stack levels used:    1
 13149 ;; Hardware stack levels required when called:    1
 13150 ;; This function calls:
 13151 ;;		Nothing
 13152 ;; This function is called by:
 13153 ;;		_dtoa
 13154 ;; This function uses a non-reentrant model
 13155 ;;
 13156                           
 13157                           	psect	text45
 13158  0059B8                     __ptext45:
 13159                           	callstack 0
 13160  0059B8                     _abs:
 13161                           	callstack 23
 13162  0059B8  BE14               	btfsc	(abs@a+1)^0,7,c
 13163  0059BA  EFE9  F02C         	goto	u5240
 13164  0059BE  5014               	movf	(abs@a+1)^0,w,c
 13165  0059C0  E106               	bnz	u5241
 13166  0059C2  0413               	decf	abs@a^0,w,c
 13167  0059C4  B0D8               	btfsc	status,0,c
 13168  0059C6  EFE7  F02C         	goto	u5241
 13169  0059CA  EFE9  F02C         	goto	u5240
 13170  0059CE                     u5241:
 13171  0059CE  EFF7  F02C         	goto	l1391
 13172  0059D2                     u5240:
 13173  0059D2  C013  F015         	movff	abs@a,??_abs
 13174  0059D6  C014  F016         	movff	abs@a+1,??_abs+1
 13175  0059DA  1E15               	comf	??_abs^0,f,c
 13176  0059DC  1E16               	comf	(??_abs+1)^0,f,c
 13177  0059DE  4A15               	infsnz	??_abs^0,f,c
 13178  0059E0  2A16               	incf	(??_abs+1)^0,f,c
 13179  0059E2  C015  F013         	movff	??_abs,?_abs
 13180  0059E6  C016  F014         	movff	??_abs+1,?_abs+1
 13181  0059EA  EFFB  F02C         	goto	l1394
 13182  0059EE                     l1391:
 13183  0059EE  C013  F013         	movff	abs@a,?_abs
 13184  0059F2  C014  F014         	movff	abs@a+1,?_abs+1
 13185  0059F6                     l1394:
 13186  0059F6  0012               	return		;funcret
 13187  0059F8                     __end_of_abs:
 13188                           	callstack 0
 13189                           
 13190 ;; *************** function ___aomod *****************
 13191 ;; Defined at:
 13192 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13193 ;; Parameters:    Size  Location     Type
 13194 ;;  dividend        8    0[COMRAM] long long 
 13195 ;;  divisor         8    8[COMRAM] long long 
 13196 ;; Auto vars:     Size  Location     Type
 13197 ;;  sign            1   17[COMRAM] unsigned char 
 13198 ;;  counter         1   16[COMRAM] unsigned char 
 13199 ;; Return value:  Size  Location     Type
 13200 ;;                  8    0[COMRAM] long long 
 13201 ;; Registers used:
 13202 ;;		wreg, status,2, status,0
 13203 ;; Tracked objects:
 13204 ;;		On entry : 0/0
 13205 ;;		On exit  : 0/0
 13206 ;;		Unchanged: 0/0
 13207 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13208 ;;      Params:        16       0       0       0       0       0       0
 13209 ;;      Locals:         2       0       0       0       0       0       0
 13210 ;;      Temps:          0       0       0       0       0       0       0
 13211 ;;      Totals:        18       0       0       0       0       0       0
 13212 ;;Total ram usage:       18 bytes
 13213 ;; Hardware stack levels used:    1
 13214 ;; Hardware stack levels required when called:    1
 13215 ;; This function calls:
 13216 ;;		Nothing
 13217 ;; This function is called by:
 13218 ;;		_dtoa
 13219 ;; This function uses a non-reentrant model
 13220 ;;
 13221                           
 13222                           	psect	text46
 13223  00477C                     __ptext46:
 13224                           	callstack 0
 13225  00477C                     ___aomod:
 13226                           	callstack 23
 13227  00477C  0E00               	movlw	0
 13228  00477E  6E12               	movwf	___aomod@sign^0,c
 13229  004780  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13230  004782  EFC7  F023         	goto	u4440
 13231  004786  EFC5  F023         	goto	u4441
 13232  00478A                     u4441:
 13233  00478A  EFD9  F023         	goto	l4221
 13234  00478E                     u4440:
 13235  00478E  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13236  004790  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13237  004792  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13238  004794  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13239  004796  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13240  004798  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13241  00479A  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13242  00479C  6C01               	negf	___aomod@dividend^0,c
 13243  00479E  0E00               	movlw	0
 13244  0047A0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13245  0047A2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13246  0047A4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13247  0047A6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13248  0047A8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13249  0047AA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13250  0047AC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13251  0047AE  0E01               	movlw	1
 13252  0047B0  6E12               	movwf	___aomod@sign^0,c
 13253  0047B2                     l4221:
 13254  0047B2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13255  0047B4  EFE0  F023         	goto	u4450
 13256  0047B8  EFDE  F023         	goto	u4451
 13257  0047BC                     u4451:
 13258  0047BC  EFF0  F023         	goto	l4225
 13259  0047C0                     u4450:
 13260  0047C0  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13261  0047C2  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13262  0047C4  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13263  0047C6  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13264  0047C8  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13265  0047CA  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13266  0047CC  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13267  0047CE  6C09               	negf	___aomod@divisor^0,c
 13268  0047D0  0E00               	movlw	0
 13269  0047D2  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13270  0047D4  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13271  0047D6  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13272  0047D8  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13273  0047DA  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13274  0047DC  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13275  0047DE  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13276  0047E0                     l4225:
 13277  0047E0  5009               	movf	___aomod@divisor^0,w,c
 13278  0047E2  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13279  0047E4  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13280  0047E6  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13281  0047E8  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13282  0047EA  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13283  0047EC  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13284  0047EE  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13285  0047F0  B4D8               	btfsc	status,2,c
 13286  0047F2  EFFD  F023         	goto	u4461
 13287  0047F6  EFFF  F023         	goto	u4460
 13288  0047FA                     u4461:
 13289  0047FA  EF47  F024         	goto	l4241
 13290  0047FE                     u4460:
 13291  0047FE  0E01               	movlw	1
 13292  004800  6E11               	movwf	___aomod@counter^0,c
 13293  004802  EF0D  F024         	goto	l4231
 13294  004806                     l4229:
 13295  004806  90D8               	bcf	status,0,c
 13296  004808  3609               	rlcf	___aomod@divisor^0,f,c
 13297  00480A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13298  00480C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13299  00480E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13300  004810  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13301  004812  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13302  004814  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13303  004816  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13304  004818  2A11               	incf	___aomod@counter^0,f,c
 13305  00481A                     l4231:
 13306  00481A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13307  00481C  EF12  F024         	goto	u4471
 13308  004820  EF14  F024         	goto	u4470
 13309  004824                     u4471:
 13310  004824  EF03  F024         	goto	l4229
 13311  004828                     u4470:
 13312  004828                     l4233:
 13313  004828  5009               	movf	___aomod@divisor^0,w,c
 13314  00482A  5C01               	subwf	___aomod@dividend^0,w,c
 13315  00482C  500A               	movf	(___aomod@divisor+1)^0,w,c
 13316  00482E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13317  004830  500B               	movf	(___aomod@divisor+2)^0,w,c
 13318  004832  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13319  004834  500C               	movf	(___aomod@divisor+3)^0,w,c
 13320  004836  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 13321  004838  500D               	movf	(___aomod@divisor+4)^0,w,c
 13322  00483A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 13323  00483C  500E               	movf	(___aomod@divisor+5)^0,w,c
 13324  00483E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 13325  004840  500F               	movf	(___aomod@divisor+6)^0,w,c
 13326  004842  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 13327  004844  5010               	movf	(___aomod@divisor+7)^0,w,c
 13328  004846  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 13329  004848  A0D8               	btfss	status,0,c
 13330  00484A  EF29  F024         	goto	u4481
 13331  00484E  EF2B  F024         	goto	u4480
 13332  004852                     u4481:
 13333  004852  EF3B  F024         	goto	l4237
 13334  004856                     u4480:
 13335  004856  5009               	movf	___aomod@divisor^0,w,c
 13336  004858  5E01               	subwf	___aomod@dividend^0,f,c
 13337  00485A  500A               	movf	(___aomod@divisor+1)^0,w,c
 13338  00485C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 13339  00485E  500B               	movf	(___aomod@divisor+2)^0,w,c
 13340  004860  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 13341  004862  500C               	movf	(___aomod@divisor+3)^0,w,c
 13342  004864  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 13343  004866  500D               	movf	(___aomod@divisor+4)^0,w,c
 13344  004868  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 13345  00486A  500E               	movf	(___aomod@divisor+5)^0,w,c
 13346  00486C  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 13347  00486E  500F               	movf	(___aomod@divisor+6)^0,w,c
 13348  004870  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 13349  004872  5010               	movf	(___aomod@divisor+7)^0,w,c
 13350  004874  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 13351  004876                     l4237:
 13352  004876  90D8               	bcf	status,0,c
 13353  004878  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 13354  00487A  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 13355  00487C  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 13356  00487E  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 13357  004880  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 13358  004882  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 13359  004884  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 13360  004886  3209               	rrcf	___aomod@divisor^0,f,c
 13361  004888  2E11               	decfsz	___aomod@counter^0,f,c
 13362  00488A  EF14  F024         	goto	l4233
 13363  00488E                     l4241:
 13364  00488E  5012               	movf	___aomod@sign^0,w,c
 13365  004890  B4D8               	btfsc	status,2,c
 13366  004892  EF4D  F024         	goto	u4491
 13367  004896  EF4F  F024         	goto	u4490
 13368  00489A                     u4491:
 13369  00489A  EF5F  F024         	goto	l4245
 13370  00489E                     u4490:
 13371  00489E  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13372  0048A0  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13373  0048A2  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13374  0048A4  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13375  0048A6  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13376  0048A8  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13377  0048AA  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13378  0048AC  6C01               	negf	___aomod@dividend^0,c
 13379  0048AE  0E00               	movlw	0
 13380  0048B0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13381  0048B2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13382  0048B4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13383  0048B6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13384  0048B8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13385  0048BA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13386  0048BC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13387  0048BE                     l4245:
 13388  0048BE  C001  F001         	movff	___aomod@dividend,?___aomod
 13389  0048C2  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 13390  0048C6  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 13391  0048CA  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 13392  0048CE  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 13393  0048D2  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 13394  0048D6  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 13395  0048DA  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 13396  0048DE  0012               	return		;funcret
 13397  0048E0                     __end_of___aomod:
 13398                           	callstack 0
 13399                           
 13400 ;; *************** function ___aodiv *****************
 13401 ;; Defined at:
 13402 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 13403 ;; Parameters:    Size  Location     Type
 13404 ;;  dividend        8    0[COMRAM] long long 
 13405 ;;  divisor         8    8[COMRAM] long long 
 13406 ;; Auto vars:     Size  Location     Type
 13407 ;;  quotient        8   18[COMRAM] long long 
 13408 ;;  sign            1   17[COMRAM] unsigned char 
 13409 ;;  counter         1   16[COMRAM] unsigned char 
 13410 ;; Return value:  Size  Location     Type
 13411 ;;                  8    0[COMRAM] long long 
 13412 ;; Registers used:
 13413 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13414 ;; Tracked objects:
 13415 ;;		On entry : 0/0
 13416 ;;		On exit  : 0/0
 13417 ;;		Unchanged: 0/0
 13418 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13419 ;;      Params:        16       0       0       0       0       0       0
 13420 ;;      Locals:        10       0       0       0       0       0       0
 13421 ;;      Temps:          0       0       0       0       0       0       0
 13422 ;;      Totals:        26       0       0       0       0       0       0
 13423 ;;Total ram usage:       26 bytes
 13424 ;; Hardware stack levels used:    1
 13425 ;; Hardware stack levels required when called:    1
 13426 ;; This function calls:
 13427 ;;		Nothing
 13428 ;; This function is called by:
 13429 ;;		_dtoa
 13430 ;; This function uses a non-reentrant model
 13431 ;;
 13432                           
 13433                           	psect	text47
 13434  004470                     __ptext47:
 13435                           	callstack 0
 13436  004470                     ___aodiv:
 13437                           	callstack 23
 13438  004470  0E00               	movlw	0
 13439  004472  6E12               	movwf	___aodiv@sign^0,c
 13440  004474  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 13441  004476  EF41  F022         	goto	u4370
 13442  00447A  EF3F  F022         	goto	u4371
 13443  00447E                     u4371:
 13444  00447E  EF53  F022         	goto	l4177
 13445  004482                     u4370:
 13446  004482  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 13447  004484  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 13448  004486  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 13449  004488  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 13450  00448A  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 13451  00448C  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 13452  00448E  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 13453  004490  6C09               	negf	___aodiv@divisor^0,c
 13454  004492  0E00               	movlw	0
 13455  004494  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 13456  004496  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 13457  004498  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 13458  00449A  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 13459  00449C  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 13460  00449E  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 13461  0044A0  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 13462  0044A2  0E01               	movlw	1
 13463  0044A4  6E12               	movwf	___aodiv@sign^0,c
 13464  0044A6                     l4177:
 13465  0044A6  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 13466  0044A8  EF5A  F022         	goto	u4380
 13467  0044AC  EF58  F022         	goto	u4381
 13468  0044B0                     u4381:
 13469  0044B0  EF6C  F022         	goto	l4183
 13470  0044B4                     u4380:
 13471  0044B4  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 13472  0044B6  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 13473  0044B8  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 13474  0044BA  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 13475  0044BC  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 13476  0044BE  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 13477  0044C0  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 13478  0044C2  6C01               	negf	___aodiv@dividend^0,c
 13479  0044C4  0E00               	movlw	0
 13480  0044C6  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 13481  0044C8  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 13482  0044CA  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 13483  0044CC  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 13484  0044CE  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 13485  0044D0  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 13486  0044D2  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 13487  0044D4  0E01               	movlw	1
 13488  0044D6  1A12               	xorwf	___aodiv@sign^0,f,c
 13489  0044D8                     l4183:
 13490  0044D8  EE20  F013         	lfsr	2,___aodiv@quotient
 13491  0044DC  0E07               	movlw	7
 13492  0044DE                     u4391:
 13493  0044DE  6ADE               	clrf	postinc2,c
 13494  0044E0  06E8               	decf	wreg,f,c
 13495  0044E2  E2FD               	bc	u4391
 13496  0044E4  5009               	movf	___aodiv@divisor^0,w,c
 13497  0044E6  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 13498  0044E8  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 13499  0044EA  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 13500  0044EC  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 13501  0044EE  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 13502  0044F0  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 13503  0044F2  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 13504  0044F4  B4D8               	btfsc	status,2,c
 13505  0044F6  EF7F  F022         	goto	u4401
 13506  0044FA  EF81  F022         	goto	u4400
 13507  0044FE                     u4401:
 13508  0044FE  EFD3  F022         	goto	l4205
 13509  004502                     u4400:
 13510  004502  0E01               	movlw	1
 13511  004504  6E11               	movwf	___aodiv@counter^0,c
 13512  004506  EF8F  F022         	goto	l4191
 13513  00450A                     l4189:
 13514  00450A  90D8               	bcf	status,0,c
 13515  00450C  3609               	rlcf	___aodiv@divisor^0,f,c
 13516  00450E  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 13517  004510  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 13518  004512  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 13519  004514  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 13520  004516  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 13521  004518  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 13522  00451A  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 13523  00451C  2A11               	incf	___aodiv@counter^0,f,c
 13524  00451E                     l4191:
 13525  00451E  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 13526  004520  EF94  F022         	goto	u4411
 13527  004524  EF96  F022         	goto	u4410
 13528  004528                     u4411:
 13529  004528  EF85  F022         	goto	l4189
 13530  00452C                     u4410:
 13531  00452C                     l4193:
 13532  00452C  90D8               	bcf	status,0,c
 13533  00452E  3613               	rlcf	___aodiv@quotient^0,f,c
 13534  004530  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 13535  004532  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 13536  004534  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 13537  004536  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 13538  004538  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 13539  00453A  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 13540  00453C  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 13541  00453E  5009               	movf	___aodiv@divisor^0,w,c
 13542  004540  5C01               	subwf	___aodiv@dividend^0,w,c
 13543  004542  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13544  004544  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 13545  004546  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13546  004548  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 13547  00454A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13548  00454C  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 13549  00454E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13550  004550  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 13551  004552  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13552  004554  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 13553  004556  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13554  004558  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 13555  00455A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13556  00455C  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 13557  00455E  A0D8               	btfss	status,0,c
 13558  004560  EFB4  F022         	goto	u4421
 13559  004564  EFB6  F022         	goto	u4420
 13560  004568                     u4421:
 13561  004568  EFC7  F022         	goto	l4201
 13562  00456C                     u4420:
 13563  00456C  5009               	movf	___aodiv@divisor^0,w,c
 13564  00456E  5E01               	subwf	___aodiv@dividend^0,f,c
 13565  004570  500A               	movf	(___aodiv@divisor+1)^0,w,c
 13566  004572  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 13567  004574  500B               	movf	(___aodiv@divisor+2)^0,w,c
 13568  004576  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 13569  004578  500C               	movf	(___aodiv@divisor+3)^0,w,c
 13570  00457A  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 13571  00457C  500D               	movf	(___aodiv@divisor+4)^0,w,c
 13572  00457E  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 13573  004580  500E               	movf	(___aodiv@divisor+5)^0,w,c
 13574  004582  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 13575  004584  500F               	movf	(___aodiv@divisor+6)^0,w,c
 13576  004586  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 13577  004588  5010               	movf	(___aodiv@divisor+7)^0,w,c
 13578  00458A  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 13579  00458C  8013               	bsf	___aodiv@quotient^0,0,c
 13580  00458E                     l4201:
 13581  00458E  90D8               	bcf	status,0,c
 13582  004590  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 13583  004592  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 13584  004594  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 13585  004596  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 13586  004598  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 13587  00459A  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 13588  00459C  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 13589  00459E  3209               	rrcf	___aodiv@divisor^0,f,c
 13590  0045A0  2E11               	decfsz	___aodiv@counter^0,f,c
 13591  0045A2  EF96  F022         	goto	l4193
 13592  0045A6                     l4205:
 13593  0045A6  5012               	movf	___aodiv@sign^0,w,c
 13594  0045A8  B4D8               	btfsc	status,2,c
 13595  0045AA  EFD9  F022         	goto	u4431
 13596  0045AE  EFDB  F022         	goto	u4430
 13597  0045B2                     u4431:
 13598  0045B2  EFEB  F022         	goto	l4209
 13599  0045B6                     u4430:
 13600  0045B6  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 13601  0045B8  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 13602  0045BA  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 13603  0045BC  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 13604  0045BE  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 13605  0045C0  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 13606  0045C2  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 13607  0045C4  6C13               	negf	___aodiv@quotient^0,c
 13608  0045C6  0E00               	movlw	0
 13609  0045C8  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 13610  0045CA  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 13611  0045CC  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 13612  0045CE  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 13613  0045D0  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 13614  0045D2  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 13615  0045D4  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 13616  0045D6                     l4209:
 13617  0045D6  C013  F001         	movff	___aodiv@quotient,?___aodiv
 13618  0045DA  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 13619  0045DE  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 13620  0045E2  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 13621  0045E6  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 13622  0045EA  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 13623  0045EE  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 13624  0045F2  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 13625  0045F6  0012               	return		;funcret
 13626  0045F8                     __end_of___aodiv:
 13627                           	callstack 0
 13628                           
 13629 ;; *************** function _atoi *****************
 13630 ;; Defined at:
 13631 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 13632 ;; Parameters:    Size  Location     Type
 13633 ;;  s               2    7[COMRAM] PTR const unsigned char 
 13634 ;;		 -> STR_16(13), STR_14(14), STR_12(16), STR_10(16), 
 13635 ;;		 -> STR_8(18), STR_6(16), STR_4(18), STR_2(15), 
 13636 ;; Auto vars:     Size  Location     Type
 13637 ;;  n               2   20[COMRAM] int 
 13638 ;;  neg             2   13[COMRAM] int 
 13639 ;; Return value:  Size  Location     Type
 13640 ;;                  2    7[COMRAM] int 
 13641 ;; Registers used:
 13642 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 13643 ;; Tracked objects:
 13644 ;;		On entry : 0/0
 13645 ;;		On exit  : 0/0
 13646 ;;		Unchanged: 0/0
 13647 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13648 ;;      Params:         2       0       0       0       0       0       0
 13649 ;;      Locals:         9       0       0       0       0       0       0
 13650 ;;      Temps:          4       0       0       0       0       0       0
 13651 ;;      Totals:        15       0       0       0       0       0       0
 13652 ;;Total ram usage:       15 bytes
 13653 ;; Hardware stack levels used:    1
 13654 ;; Hardware stack levels required when called:    2
 13655 ;; This function calls:
 13656 ;;		___wmul
 13657 ;;		_isdigit
 13658 ;;		_isspace
 13659 ;; This function is called by:
 13660 ;;		_vfpfcnvrt
 13661 ;; This function uses a non-reentrant model
 13662 ;;
 13663                           
 13664                           	psect	text48
 13665  0042E0                     __ptext48:
 13666                           	callstack 0
 13667  0042E0                     _atoi:
 13668                           	callstack 23
 13669  0042E0  0E00               	movlw	0
 13670  0042E2  6E16               	movwf	(atoi@n+1)^0,c
 13671  0042E4  0E00               	movlw	0
 13672  0042E6  6E15               	movwf	atoi@n^0,c
 13673  0042E8  0E00               	movlw	0
 13674  0042EA  6E0F               	movwf	(atoi@neg+1)^0,c
 13675  0042EC  0E00               	movlw	0
 13676  0042EE  6E0E               	movwf	atoi@neg^0,c
 13677  0042F0  EF7C  F021         	goto	l5163
 13678  0042F4                     l5161:
 13679  0042F4  4A08               	infsnz	atoi@s^0,f,c
 13680  0042F6  2A09               	incf	(atoi@s+1)^0,f,c
 13681  0042F8                     l5163:
 13682  0042F8  0E01               	movlw	1
 13683  0042FA  6E14               	movwf	_atoi$2571^0,c
 13684  0042FC  C008  FFF6         	movff	atoi@s,tblptrl
 13685  004300  C009  FFF7         	movff	atoi@s+1,tblptrh
 13686  004304                     	if	0	;tblptru may be non-zero
 13687  004304                     	endif
 13688  004304                     	if	0	;tblptru may be non-zero
 13689  004304                     	endif
 13690  004304  0008               	tblrd		*
 13691  004306  50F5               	movf	tablat,w,c
 13692  004308  0A20               	xorlw	32
 13693  00430A  B4D8               	btfsc	status,2,c
 13694  00430C  EF8A  F021         	goto	u6181
 13695  004310  EF8C  F021         	goto	u6180
 13696  004314                     u6181:
 13697  004314  EFA9  F021         	goto	l5171
 13698  004318                     u6180:
 13699  004318  0EF7               	movlw	247
 13700  00431A  6E0A               	movwf	??_atoi^0,c
 13701  00431C  0EFF               	movlw	255
 13702  00431E  6E0B               	movwf	(??_atoi+1)^0,c
 13703  004320  C008  FFF6         	movff	atoi@s,tblptrl
 13704  004324  C009  FFF7         	movff	atoi@s+1,tblptrh
 13705  004328                     	if	0	;tblptru may be non-zero
 13706  004328                     	endif
 13707  004328                     	if	0	;tblptru may be non-zero
 13708  004328                     	endif
 13709  004328  0008               	tblrd		*
 13710  00432A  50F5               	movf	tablat,w,c
 13711  00432C  6E0C               	movwf	(??_atoi+2)^0,c
 13712  00432E  6A0D               	clrf	(??_atoi+3)^0,c
 13713  004330  500A               	movf	??_atoi^0,w,c
 13714  004332  260C               	addwf	(??_atoi+2)^0,f,c
 13715  004334  500B               	movf	(??_atoi+1)^0,w,c
 13716  004336  220D               	addwfc	(??_atoi+3)^0,f,c
 13717  004338  500D               	movf	(??_atoi+3)^0,w,c
 13718  00433A  E109               	bnz	u6190
 13719  00433C  0E05               	movlw	5
 13720  00433E  5C0C               	subwf	(??_atoi+2)^0,w,c
 13721  004340  A0D8               	btfss	status,0,c
 13722  004342  EFA5  F021         	goto	u6191
 13723  004346  EFA7  F021         	goto	u6190
 13724  00434A                     u6191:
 13725  00434A  EFA9  F021         	goto	l5171
 13726  00434E                     u6190:
 13727  00434E  0E00               	movlw	0
 13728  004350  6E14               	movwf	_atoi$2571^0,c
 13729  004352                     l5171:
 13730  004352  C014  F010         	movff	_atoi$2571,_atoi$2570
 13731  004356  6A11               	clrf	(_atoi$2570+1)^0,c
 13732  004358  5010               	movf	_atoi$2570^0,w,c
 13733  00435A  1011               	iorwf	(_atoi$2570+1)^0,w,c
 13734  00435C  A4D8               	btfss	status,2,c
 13735  00435E  EFB3  F021         	goto	u6201
 13736  004362  EFB5  F021         	goto	u6200
 13737  004366                     u6201:
 13738  004366  EF7A  F021         	goto	l5161
 13739  00436A                     u6200:
 13740  00436A  EFBF  F021         	goto	l5181
 13741  00436E                     l5177:
 13742  00436E  0E00               	movlw	0
 13743  004370  6E0F               	movwf	(atoi@neg+1)^0,c
 13744  004372  0E01               	movlw	1
 13745  004374  6E0E               	movwf	atoi@neg^0,c
 13746  004376                     l5179:
 13747  004376  4A08               	infsnz	atoi@s^0,f,c
 13748  004378  2A09               	incf	(atoi@s+1)^0,f,c
 13749  00437A  EFF4  F021         	goto	l5187
 13750  00437E                     l5181:
 13751  00437E  C008  FFF6         	movff	atoi@s,tblptrl
 13752  004382  C009  FFF7         	movff	atoi@s+1,tblptrh
 13753  004386                     	if	0	;tblptru may be non-zero
 13754  004386                     	endif
 13755  004386                     	if	0	;tblptru may be non-zero
 13756  004386                     	endif
 13757  004386  0008               	tblrd		*
 13758  004388  50F5               	movf	tablat,w,c
 13759  00438A  6E0A               	movwf	??_atoi^0,c
 13760  00438C  6A0B               	clrf	(??_atoi+1)^0,c
 13761                           
 13762                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 13763                           ; Switch size 1, requested type "simple"
 13764                           ; Number of cases is 1, Range of values is 0 to 0
 13765                           ; switch strategies available:
 13766                           ; Name         Instructions Cycles
 13767                           ; simple_byte            4     3 (average)
 13768                           ;	Chosen strategy is simple_byte
 13769  00438E  500B               	movf	(??_atoi+1)^0,w,c
 13770  004390  0A00               	xorlw	0	; case 0
 13771  004392  B4D8               	btfsc	status,2,c
 13772  004394  EFCE  F021         	goto	l6337
 13773  004398  EFF4  F021         	goto	l5187
 13774  00439C                     l6337:
 13775                           
 13776                           ; Switch size 1, requested type "simple"
 13777                           ; Number of cases is 2, Range of values is 43 to 45
 13778                           ; switch strategies available:
 13779                           ; Name         Instructions Cycles
 13780                           ; simple_byte            7     4 (average)
 13781                           ;	Chosen strategy is simple_byte
 13782  00439C  500A               	movf	??_atoi^0,w,c
 13783  00439E  0A2B               	xorlw	43	; case 43
 13784  0043A0  B4D8               	btfsc	status,2,c
 13785  0043A2  EFBB  F021         	goto	l5179
 13786  0043A6  0A06               	xorlw	6	; case 45
 13787  0043A8  B4D8               	btfsc	status,2,c
 13788  0043AA  EFB7  F021         	goto	l5177
 13789  0043AE  EFF4  F021         	goto	l5187
 13790  0043B2                     l5183:
 13791  0043B2  C015  F001         	movff	atoi@n,___wmul@multiplier
 13792  0043B6  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 13793  0043BA  0E00               	movlw	0
 13794  0043BC  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 13795  0043BE  0E0A               	movlw	10
 13796  0043C0  6E03               	movwf	___wmul@multiplicand^0,c
 13797  0043C2  EC38  F02E         	call	___wmul	;wreg free
 13798  0043C6  C008  FFF6         	movff	atoi@s,tblptrl
 13799  0043CA  C009  FFF7         	movff	atoi@s+1,tblptrh
 13800  0043CE                     	if	0	;tblptru may be non-zero
 13801  0043CE                     	endif
 13802  0043CE                     	if	0	;tblptru may be non-zero
 13803  0043CE                     	endif
 13804  0043CE  0008               	tblrd		*
 13805  0043D0  50F5               	movf	tablat,w,c
 13806  0043D2  5E01               	subwf	?___wmul^0,f,c
 13807  0043D4  0E00               	movlw	0
 13808  0043D6  5A02               	subwfb	(?___wmul+1)^0,f,c
 13809  0043D8  0E30               	movlw	48
 13810  0043DA  2401               	addwf	?___wmul^0,w,c
 13811  0043DC  6E15               	movwf	atoi@n^0,c
 13812  0043DE  0E00               	movlw	0
 13813  0043E0  2002               	addwfc	(?___wmul+1)^0,w,c
 13814  0043E2  6E16               	movwf	(atoi@n+1)^0,c
 13815  0043E4  EFBB  F021         	goto	l5179
 13816  0043E8                     l5187:
 13817  0043E8  0ED0               	movlw	208
 13818  0043EA  6E0A               	movwf	??_atoi^0,c
 13819  0043EC  0EFF               	movlw	255
 13820  0043EE  6E0B               	movwf	(??_atoi+1)^0,c
 13821  0043F0  C008  FFF6         	movff	atoi@s,tblptrl
 13822  0043F4  C009  FFF7         	movff	atoi@s+1,tblptrh
 13823  0043F8                     	if	0	;tblptru may be non-zero
 13824  0043F8                     	endif
 13825  0043F8                     	if	0	;tblptru may be non-zero
 13826  0043F8                     	endif
 13827  0043F8  0008               	tblrd		*
 13828  0043FA  50F5               	movf	tablat,w,c
 13829  0043FC  6E0C               	movwf	(??_atoi+2)^0,c
 13830  0043FE  6A0D               	clrf	(??_atoi+3)^0,c
 13831  004400  500A               	movf	??_atoi^0,w,c
 13832  004402  260C               	addwf	(??_atoi+2)^0,f,c
 13833  004404  500B               	movf	(??_atoi+1)^0,w,c
 13834  004406  220D               	addwfc	(??_atoi+3)^0,f,c
 13835  004408  500D               	movf	(??_atoi+3)^0,w,c
 13836  00440A  E10A               	bnz	u6210
 13837  00440C  0E0A               	movlw	10
 13838  00440E  5C0C               	subwf	(??_atoi+2)^0,w,c
 13839  004410  A0D8               	btfss	status,0,c
 13840  004412  EF0D  F022         	goto	u6211
 13841  004416  EF10  F022         	goto	u6210
 13842  00441A                     u6211:
 13843  00441A  0E01               	movlw	1
 13844  00441C  EF11  F022         	goto	u6220
 13845  004420                     u6210:
 13846  004420  0E00               	movlw	0
 13847  004422                     u6220:
 13848  004422  6E12               	movwf	_atoi$2572^0,c
 13849  004424  6A13               	clrf	(_atoi$2572+1)^0,c
 13850  004426  5012               	movf	_atoi$2572^0,w,c
 13851  004428  1013               	iorwf	(_atoi$2572+1)^0,w,c
 13852  00442A  A4D8               	btfss	status,2,c
 13853  00442C  EF1A  F022         	goto	u6231
 13854  004430  EF1C  F022         	goto	u6230
 13855  004434                     u6231:
 13856  004434  EFD9  F021         	goto	l5183
 13857  004438                     u6230:
 13858  004438  500E               	movf	atoi@neg^0,w,c
 13859  00443A  100F               	iorwf	(atoi@neg+1)^0,w,c
 13860  00443C  A4D8               	btfss	status,2,c
 13861  00443E  EF23  F022         	goto	u6241
 13862  004442  EF25  F022         	goto	u6240
 13863  004446                     u6241:
 13864  004446  EF33  F022         	goto	l1422
 13865  00444A                     u6240:
 13866  00444A  C015  F00A         	movff	atoi@n,??_atoi
 13867  00444E  C016  F00B         	movff	atoi@n+1,??_atoi+1
 13868  004452  1E0A               	comf	??_atoi^0,f,c
 13869  004454  1E0B               	comf	(??_atoi+1)^0,f,c
 13870  004456  4A0A               	infsnz	??_atoi^0,f,c
 13871  004458  2A0B               	incf	(??_atoi+1)^0,f,c
 13872  00445A  C00A  F008         	movff	??_atoi,?_atoi
 13873  00445E  C00B  F009         	movff	??_atoi+1,?_atoi+1
 13874  004462  EF37  F022         	goto	l1425
 13875  004466                     l1422:
 13876  004466  C015  F008         	movff	atoi@n,?_atoi
 13877  00446A  C016  F009         	movff	atoi@n+1,?_atoi+1
 13878  00446E                     l1425:
 13879  00446E  0012               	return		;funcret
 13880  004470                     __end_of_atoi:
 13881                           	callstack 0
 13882                           
 13883 ;; *************** function _isspace *****************
 13884 ;; Defined at:
 13885 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 13886 ;; Parameters:    Size  Location     Type
 13887 ;;  c               2    0[COMRAM] int 
 13888 ;; Auto vars:     Size  Location     Type
 13889 ;;		None
 13890 ;; Return value:  Size  Location     Type
 13891 ;;                  2    0[COMRAM] int 
 13892 ;; Registers used:
 13893 ;;		wreg, status,2, status,0
 13894 ;; Tracked objects:
 13895 ;;		On entry : 0/0
 13896 ;;		On exit  : 0/0
 13897 ;;		Unchanged: 0/0
 13898 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13899 ;;      Params:         2       0       0       0       0       0       0
 13900 ;;      Locals:         1       0       0       0       0       0       0
 13901 ;;      Temps:          4       0       0       0       0       0       0
 13902 ;;      Totals:         7       0       0       0       0       0       0
 13903 ;;Total ram usage:        7 bytes
 13904 ;; Hardware stack levels used:    1
 13905 ;; Hardware stack levels required when called:    1
 13906 ;; This function calls:
 13907 ;;		Nothing
 13908 ;; This function is called by:
 13909 ;;		_atoi
 13910 ;; This function uses a non-reentrant model
 13911 ;;
 13912                           
 13913                           	psect	text49
 13914  00589A                     __ptext49:
 13915                           	callstack 0
 13916  00589A                     _isspace:
 13917                           	callstack 23
 13918  00589A  0E01               	movlw	1
 13919  00589C  6E07               	movwf	_isspace$2601^0,c
 13920  00589E  0E20               	movlw	32
 13921  0058A0  1801               	xorwf	isspace@c^0,w,c
 13922  0058A2  1002               	iorwf	(isspace@c+1)^0,w,c
 13923  0058A4  B4D8               	btfsc	status,2,c
 13924  0058A6  EF57  F02C         	goto	u5491
 13925  0058AA  EF59  F02C         	goto	u5490
 13926  0058AE                     u5491:
 13927  0058AE  EF72  F02C         	goto	l4795
 13928  0058B2                     u5490:
 13929  0058B2  0EF7               	movlw	247
 13930  0058B4  6E03               	movwf	??_isspace^0,c
 13931  0058B6  0EFF               	movlw	255
 13932  0058B8  6E04               	movwf	(??_isspace+1)^0,c
 13933  0058BA  C001  F005         	movff	isspace@c,??_isspace+2
 13934  0058BE  C002  F006         	movff	isspace@c+1,??_isspace+3
 13935  0058C2  5003               	movf	??_isspace^0,w,c
 13936  0058C4  2605               	addwf	(??_isspace+2)^0,f,c
 13937  0058C6  5004               	movf	(??_isspace+1)^0,w,c
 13938  0058C8  2206               	addwfc	(??_isspace+3)^0,f,c
 13939  0058CA  5006               	movf	(??_isspace+3)^0,w,c
 13940  0058CC  E109               	bnz	u5500
 13941  0058CE  0E05               	movlw	5
 13942  0058D0  5C05               	subwf	(??_isspace+2)^0,w,c
 13943  0058D2  A0D8               	btfss	status,0,c
 13944  0058D4  EF6E  F02C         	goto	u5501
 13945  0058D8  EF70  F02C         	goto	u5500
 13946  0058DC                     u5501:
 13947  0058DC  EF72  F02C         	goto	l4795
 13948  0058E0                     u5500:
 13949  0058E0  0E00               	movlw	0
 13950  0058E2  6E07               	movwf	_isspace$2601^0,c
 13951  0058E4                     l4795:
 13952  0058E4  C007  F001         	movff	_isspace$2601,?_isspace
 13953  0058E8  6A02               	clrf	(?_isspace+1)^0,c
 13954  0058EA  0012               	return		;funcret
 13955  0058EC                     __end_of_isspace:
 13956                           	callstack 0
 13957                           
 13958 ;; *************** function _isdigit *****************
 13959 ;; Defined at:
 13960 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 13961 ;; Parameters:    Size  Location     Type
 13962 ;;  c               2    0[COMRAM] int 
 13963 ;; Auto vars:     Size  Location     Type
 13964 ;;		None
 13965 ;; Return value:  Size  Location     Type
 13966 ;;                  2    0[COMRAM] int 
 13967 ;; Registers used:
 13968 ;;		wreg, status,2, status,0
 13969 ;; Tracked objects:
 13970 ;;		On entry : 0/0
 13971 ;;		On exit  : 0/0
 13972 ;;		Unchanged: 0/0
 13973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13974 ;;      Params:         2       0       0       0       0       0       0
 13975 ;;      Locals:         0       0       0       0       0       0       0
 13976 ;;      Temps:          4       0       0       0       0       0       0
 13977 ;;      Totals:         6       0       0       0       0       0       0
 13978 ;;Total ram usage:        6 bytes
 13979 ;; Hardware stack levels used:    1
 13980 ;; Hardware stack levels required when called:    1
 13981 ;; This function calls:
 13982 ;;		Nothing
 13983 ;; This function is called by:
 13984 ;;		_vfpfcnvrt
 13985 ;;		_atoi
 13986 ;; This function uses a non-reentrant model
 13987 ;;
 13988                           
 13989                           	psect	text50
 13990  005AE2                     __ptext50:
 13991                           	callstack 0
 13992  005AE2                     _isdigit:
 13993                           	callstack 24
 13994  005AE2  0ED0               	movlw	208
 13995  005AE4  6E03               	movwf	??_isdigit^0,c
 13996  005AE6  0EFF               	movlw	255
 13997  005AE8  6E04               	movwf	(??_isdigit+1)^0,c
 13998  005AEA  C001  F005         	movff	isdigit@c,??_isdigit+2
 13999  005AEE  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 14000  005AF2  5003               	movf	??_isdigit^0,w,c
 14001  005AF4  2605               	addwf	(??_isdigit+2)^0,f,c
 14002  005AF6  5004               	movf	(??_isdigit+1)^0,w,c
 14003  005AF8  2206               	addwfc	(??_isdigit+3)^0,f,c
 14004  005AFA  5006               	movf	(??_isdigit+3)^0,w,c
 14005  005AFC  E10A               	bnz	u5470
 14006  005AFE  0E0A               	movlw	10
 14007  005B00  5C05               	subwf	(??_isdigit+2)^0,w,c
 14008  005B02  A0D8               	btfss	status,0,c
 14009  005B04  EF86  F02D         	goto	u5471
 14010  005B08  EF89  F02D         	goto	u5470
 14011  005B0C                     u5471:
 14012  005B0C  0E01               	movlw	1
 14013  005B0E  EF8A  F02D         	goto	u5480
 14014  005B12                     u5470:
 14015  005B12  0E00               	movlw	0
 14016  005B14                     u5480:
 14017  005B14  6E01               	movwf	?_isdigit^0,c
 14018  005B16  6A02               	clrf	(?_isdigit+1)^0,c
 14019  005B18  0012               	return		;funcret
 14020  005B1A                     __end_of_isdigit:
 14021                           	callstack 0
 14022                           
 14023 ;; *************** function ___wmul *****************
 14024 ;; Defined at:
 14025 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 14026 ;; Parameters:    Size  Location     Type
 14027 ;;  multiplier      2    0[COMRAM] unsigned int 
 14028 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14029 ;; Auto vars:     Size  Location     Type
 14030 ;;  product         2    4[COMRAM] unsigned int 
 14031 ;; Return value:  Size  Location     Type
 14032 ;;                  2    0[COMRAM] unsigned int 
 14033 ;; Registers used:
 14034 ;;		wreg, status,2, status,0, prodl, prodh
 14035 ;; Tracked objects:
 14036 ;;		On entry : 0/0
 14037 ;;		On exit  : 0/0
 14038 ;;		Unchanged: 0/0
 14039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14040 ;;      Params:         4       0       0       0       0       0       0
 14041 ;;      Locals:         2       0       0       0       0       0       0
 14042 ;;      Temps:          0       0       0       0       0       0       0
 14043 ;;      Totals:         6       0       0       0       0       0       0
 14044 ;;Total ram usage:        6 bytes
 14045 ;; Hardware stack levels used:    1
 14046 ;; Hardware stack levels required when called:    1
 14047 ;; This function calls:
 14048 ;;		Nothing
 14049 ;; This function is called by:
 14050 ;;		_atoi
 14051 ;; This function uses a non-reentrant model
 14052 ;;
 14053                           
 14054                           	psect	text51
 14055  005C70                     __ptext51:
 14056                           	callstack 0
 14057  005C70                     ___wmul:
 14058                           	callstack 23
 14059  005C70  5001               	movf	___wmul@multiplier^0,w,c
 14060  005C72  0203               	mulwf	___wmul@multiplicand^0,c
 14061  005C74  CFF3 F005          	movff	prodl,___wmul@product
 14062  005C78  CFF4 F006          	movff	prodh,___wmul@product+1
 14063  005C7C  5001               	movf	___wmul@multiplier^0,w,c
 14064  005C7E  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14065  005C80  50F3               	movf	243,w,c
 14066  005C82  2606               	addwf	(___wmul@product+1)^0,f,c
 14067  005C84  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14068  005C86  0203               	mulwf	___wmul@multiplicand^0,c
 14069  005C88  50F3               	movf	243,w,c
 14070  005C8A  2606               	addwf	(___wmul@product+1)^0,f,c
 14071  005C8C  C005  F001         	movff	___wmul@product,?___wmul
 14072  005C90  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14073  005C94  0012               	return		;funcret
 14074  005C96                     __end_of___wmul:
 14075                           	callstack 0
 14076                           
 14077 ;; *************** function _eepromWrite *****************
 14078 ;; Defined at:
 14079 ;;		line 62 in file "fs_eeprom.c"
 14080 ;; Parameters:    Size  Location     Type
 14081 ;;  address         1    wreg     unsigned char 
 14082 ;;  data            1    0[COMRAM] unsigned char 
 14083 ;; Auto vars:     Size  Location     Type
 14084 ;;  address         1    1[COMRAM] unsigned char 
 14085 ;; Return value:  Size  Location     Type
 14086 ;;                  1    wreg      void 
 14087 ;; Registers used:
 14088 ;;		wreg, status,2
 14089 ;; Tracked objects:
 14090 ;;		On entry : 0/0
 14091 ;;		On exit  : 0/0
 14092 ;;		Unchanged: 0/0
 14093 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14094 ;;      Params:         1       0       0       0       0       0       0
 14095 ;;      Locals:         1       0       0       0       0       0       0
 14096 ;;      Temps:          0       0       0       0       0       0       0
 14097 ;;      Totals:         2       0       0       0       0       0       0
 14098 ;;Total ram usage:        2 bytes
 14099 ;; Hardware stack levels used:    1
 14100 ;; Hardware stack levels required when called:    1
 14101 ;; This function calls:
 14102 ;;		Nothing
 14103 ;; This function is called by:
 14104 ;;		_stateMachine
 14105 ;; This function uses a non-reentrant model
 14106 ;;
 14107                           
 14108                           	psect	text52
 14109  005BF2                     __ptext52:
 14110                           	callstack 0
 14111  005BF2                     _eepromWrite:
 14112                           	callstack 27
 14113                           
 14114                           ;incstack = 0
 14115                           ;eepromWrite@address stored from wreg
 14116  005BF2  6E02               	movwf	eepromWrite@address^0,c
 14117  005BF4                     
 14118                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 14119  005BF4  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14120  005BF8                     
 14121                           ;fs_eeprom.c: 68:     EEDATA = data;
 14122  005BF8  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14123  005BFC                     
 14124                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 14125  005BFC  9EA6               	bcf	166,7,c	;volsfr
 14126  005BFE                     
 14127                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 14128  005BFE  9CA6               	bcf	166,6,c	;volsfr
 14129  005C00                     
 14130                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 14131  005C00  84A6               	bsf	166,2,c	;volsfr
 14132  005C02                     
 14133                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 14134  005C02  0E55               	movlw	85
 14135  005C04  6EA7               	movwf	167,c	;volsfr
 14136  005C06                     
 14137                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 14138  005C06  0EAA               	movlw	170
 14139  005C08  6EA7               	movwf	167,c	;volsfr
 14140  005C0A                     
 14141                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 14142  005C0A  82A6               	bsf	166,1,c	;volsfr
 14143  005C0C                     l76:
 14144                           
 14145                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 14146  005C0C  A8A1               	btfss	161,4,c	;volatile
 14147  005C0E  EF0B  F02E         	goto	u6781
 14148  005C12  EF0D  F02E         	goto	u6780
 14149  005C16                     u6781:
 14150  005C16  EF06  F02E         	goto	l76
 14151  005C1A                     u6780:
 14152  005C1A                     
 14153                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 14154  005C1A  98A1               	bcf	161,4,c	;volatile
 14155                           
 14156                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 14157  005C1C  94A6               	bcf	166,2,c	;volsfr
 14158  005C1E  0012               	return		;funcret
 14159  005C20                     __end_of_eepromWrite:
 14160                           	callstack 0
 14161                           
 14162 ;; *************** function _Lcd_Write_String *****************
 14163 ;; Defined at:
 14164 ;;		line 155 in file "fs_lcd.c"
 14165 ;; Parameters:    Size  Location     Type
 14166 ;;  a               2    4[COMRAM] PTR unsigned char 
 14167 ;;		 -> STR_15(17), STR_13(17), STR_11(17), STR_9(17), 
 14168 ;;		 -> STR_7(17), STR_5(17), STR_3(17), STR_1(17), 
 14169 ;;		 -> stateMachine@textCursor2(16), 
 14170 ;; Auto vars:     Size  Location     Type
 14171 ;;  i               2    8[COMRAM] int 
 14172 ;; Return value:  Size  Location     Type
 14173 ;;                  1    wreg      void 
 14174 ;; Registers used:
 14175 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14176 ;; Tracked objects:
 14177 ;;		On entry : 0/0
 14178 ;;		On exit  : 0/0
 14179 ;;		Unchanged: 0/0
 14180 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14181 ;;      Params:         2       0       0       0       0       0       0
 14182 ;;      Locals:         2       0       0       0       0       0       0
 14183 ;;      Temps:          2       0       0       0       0       0       0
 14184 ;;      Totals:         6       0       0       0       0       0       0
 14185 ;;Total ram usage:        6 bytes
 14186 ;; Hardware stack levels used:    1
 14187 ;; Hardware stack levels required when called:    3
 14188 ;; This function calls:
 14189 ;;		_Lcd_Write_Char
 14190 ;; This function is called by:
 14191 ;;		_stateMachine
 14192 ;; This function uses a non-reentrant model
 14193 ;;
 14194                           
 14195                           	psect	text53
 14196  0053C4                     __ptext53:
 14197                           	callstack 0
 14198  0053C4                     _Lcd_Write_String:
 14199                           	callstack 25
 14200  0053C4                     
 14201                           ;fs_lcd.c: 155: void Lcd_Write_String(char *a);fs_lcd.c: 156: {;fs_lcd.c: 157:    int i;
      +                          ;fs_lcd.c: 158:    for(i=0;a[i]!='\0';i++)
 14202  0053C4  0E00               	movlw	0
 14203  0053C6  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14204  0053C8  0E00               	movlw	0
 14205  0053CA  6E09               	movwf	Lcd_Write_String@i^0,c
 14206  0053CC  EF02  F02A         	goto	l5647
 14207  0053D0                     l5643:
 14208                           
 14209                           ;fs_lcd.c: 159:    Lcd_Write_Char(a[i]);
 14210  0053D0  5009               	movf	Lcd_Write_String@i^0,w,c
 14211  0053D2  2405               	addwf	Lcd_Write_String@a^0,w,c
 14212  0053D4  6E07               	movwf	??_Lcd_Write_String^0,c
 14213  0053D6  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14214  0053D8  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14215  0053DA  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14216  0053DC  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14217  0053E0  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14218  0053E4  6AF8               	clrf	tblptru,c
 14219  0053E6  0E05               	movlw	(high __ramtop+-1)
 14220  0053E8  64F7               	cpfsgt	tblptrh,c
 14221  0053EA  D003               	bra	u6817
 14222  0053EC  0008               	tblrd		*
 14223  0053EE  50F5               	movf	tablat,w,c
 14224  0053F0  D005               	bra	u6810
 14225  0053F2                     u6817:
 14226  0053F2  CFF6 FFE1          	movff	tblptrl,fsr1l
 14227  0053F6  CFF7 FFE2          	movff	tblptrh,fsr1h
 14228  0053FA  50E7               	movf	indf1,w,c
 14229  0053FC                     u6810:
 14230  0053FC  EC8D  F02D         	call	_Lcd_Write_Char
 14231  005400  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14232  005402  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14233  005404                     l5647:
 14234  005404  5009               	movf	Lcd_Write_String@i^0,w,c
 14235  005406  2405               	addwf	Lcd_Write_String@a^0,w,c
 14236  005408  6E07               	movwf	??_Lcd_Write_String^0,c
 14237  00540A  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14238  00540C  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14239  00540E  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14240  005410  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14241  005414  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14242  005418  6AF8               	clrf	tblptru,c
 14243  00541A  0E05               	movlw	(high __ramtop+-1)
 14244  00541C  64F7               	cpfsgt	tblptrh,c
 14245  00541E  D003               	bra	u6827
 14246  005420  0008               	tblrd		*
 14247  005422  50F5               	movf	tablat,w,c
 14248  005424  D005               	bra	u6820
 14249  005426                     u6827:
 14250  005426  CFF6 FFE1          	movff	tblptrl,fsr1l
 14251  00542A  CFF7 FFE2          	movff	tblptrh,fsr1h
 14252  00542E  50E7               	movf	indf1,w,c
 14253  005430                     u6820:
 14254  005430  0900               	iorlw	0
 14255  005432  A4D8               	btfss	status,2,c
 14256  005434  EF1E  F02A         	goto	u6831
 14257  005438  EF20  F02A         	goto	u6830
 14258  00543C                     u6831:
 14259  00543C  EFE8  F029         	goto	l5643
 14260  005440                     u6830:
 14261  005440  0012               	return		;funcret
 14262  005442                     __end_of_Lcd_Write_String:
 14263                           	callstack 0
 14264                           
 14265 ;; *************** function _Lcd_Write_Char *****************
 14266 ;; Defined at:
 14267 ;;		line 132 in file "fs_lcd.c"
 14268 ;; Parameters:    Size  Location     Type
 14269 ;;  a               1    wreg     unsigned char 
 14270 ;; Auto vars:     Size  Location     Type
 14271 ;;  a               1    3[COMRAM] unsigned char 
 14272 ;;  y               1    2[COMRAM] unsigned char 
 14273 ;;  temp            1    1[COMRAM] unsigned char 
 14274 ;; Return value:  Size  Location     Type
 14275 ;;                  1    wreg      void 
 14276 ;; Registers used:
 14277 ;;		wreg, status,2, status,0, cstack
 14278 ;; Tracked objects:
 14279 ;;		On entry : 0/0
 14280 ;;		On exit  : 0/0
 14281 ;;		Unchanged: 0/0
 14282 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14283 ;;      Params:         0       0       0       0       0       0       0
 14284 ;;      Locals:         3       0       0       0       0       0       0
 14285 ;;      Temps:          0       0       0       0       0       0       0
 14286 ;;      Totals:         3       0       0       0       0       0       0
 14287 ;;Total ram usage:        3 bytes
 14288 ;; Hardware stack levels used:    1
 14289 ;; Hardware stack levels required when called:    2
 14290 ;; This function calls:
 14291 ;;		_Lcd_Port
 14292 ;; This function is called by:
 14293 ;;		_Lcd_Write_String
 14294 ;; This function uses a non-reentrant model
 14295 ;;
 14296                           
 14297                           	psect	text54
 14298  005B1A                     __ptext54:
 14299                           	callstack 0
 14300  005B1A                     _Lcd_Write_Char:
 14301                           	callstack 25
 14302                           
 14303                           ;incstack = 0
 14304                           ;Lcd_Write_Char@a stored from wreg
 14305  005B1A  6E04               	movwf	Lcd_Write_Char@a^0,c
 14306  005B1C                     
 14307                           ;fs_lcd.c: 132: void Lcd_Write_Char(char a);fs_lcd.c: 133: {;fs_lcd.c: 134:    char temp
      +                          ,y;;fs_lcd.c: 135:    temp = a&0x0F;
 14308  005B1C  5004               	movf	Lcd_Write_Char@a^0,w,c
 14309  005B1E  0B0F               	andlw	15
 14310  005B20  6E02               	movwf	Lcd_Write_Char@temp^0,c
 14311                           
 14312                           ;fs_lcd.c: 136:    y = a&0xF0;
 14313  005B22  5004               	movf	Lcd_Write_Char@a^0,w,c
 14314  005B24  0BF0               	andlw	240
 14315  005B26  6E03               	movwf	Lcd_Write_Char@y^0,c
 14316  005B28                     
 14317                           ;fs_lcd.c: 137:    PORTDbits.RD6 = 1;
 14318  005B28  8C83               	bsf	131,6,c	;volatile
 14319  005B2A                     
 14320                           ;fs_lcd.c: 138:    Lcd_Port(y>>4);
 14321  005B2A  3803               	swapf	Lcd_Write_Char@y^0,w,c
 14322  005B2C  0B0F               	andlw	15
 14323  005B2E  ECCD  F02B         	call	_Lcd_Port
 14324  005B32                     
 14325                           ;fs_lcd.c: 139:    PORTDbits.RD7 = 1;
 14326  005B32  8E83               	bsf	131,7,c	;volatile
 14327  005B34                     
 14328                           ;fs_lcd.c: 140:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14329  005B34  0ED5               	movlw	213
 14330  005B36                     u7807:
 14331  005B36  2EE8               	decfsz	wreg,f,c
 14332  005B38  D7FE               	bra	u7807
 14333  005B3A  F000               	nop	
 14334  005B3C                     
 14335                           ;fs_lcd.c: 141:    PORTDbits.RD7 = 0;
 14336  005B3C  9E83               	bcf	131,7,c	;volatile
 14337  005B3E                     
 14338                           ;fs_lcd.c: 142:    Lcd_Port(temp);
 14339  005B3E  5002               	movf	Lcd_Write_Char@temp^0,w,c
 14340  005B40  ECCD  F02B         	call	_Lcd_Port
 14341  005B44                     
 14342                           ;fs_lcd.c: 143:    PORTDbits.RD7 = 1;
 14343  005B44  8E83               	bsf	131,7,c	;volatile
 14344  005B46                     
 14345                           ;fs_lcd.c: 144:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 14346  005B46  0ED5               	movlw	213
 14347  005B48                     u7817:
 14348  005B48  2EE8               	decfsz	wreg,f,c
 14349  005B4A  D7FE               	bra	u7817
 14350  005B4C  F000               	nop	
 14351  005B4E                     
 14352                           ;fs_lcd.c: 145:    PORTDbits.RD7 = 0;
 14353  005B4E  9E83               	bcf	131,7,c	;volatile
 14354  005B50  0012               	return		;funcret
 14355  005B52                     __end_of_Lcd_Write_Char:
 14356                           	callstack 0
 14357                           
 14358 ;; *************** function _Lcd_Set_Cursor *****************
 14359 ;; Defined at:
 14360 ;;		line 62 in file "fs_lcd.c"
 14361 ;; Parameters:    Size  Location     Type
 14362 ;;  a               1    wreg     unsigned char 
 14363 ;;  b               1    3[COMRAM] unsigned char 
 14364 ;; Auto vars:     Size  Location     Type
 14365 ;;  a               1    4[COMRAM] unsigned char 
 14366 ;;  temp            1    7[COMRAM] unsigned char 
 14367 ;;  y               1    6[COMRAM] unsigned char 
 14368 ;;  z               1    5[COMRAM] unsigned char 
 14369 ;; Return value:  Size  Location     Type
 14370 ;;                  1    wreg      void 
 14371 ;; Registers used:
 14372 ;;		wreg, status,2, status,0, cstack
 14373 ;; Tracked objects:
 14374 ;;		On entry : 0/0
 14375 ;;		On exit  : 0/0
 14376 ;;		Unchanged: 0/0
 14377 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14378 ;;      Params:         1       0       0       0       0       0       0
 14379 ;;      Locals:         4       0       0       0       0       0       0
 14380 ;;      Temps:          0       0       0       0       0       0       0
 14381 ;;      Totals:         5       0       0       0       0       0       0
 14382 ;;Total ram usage:        5 bytes
 14383 ;; Hardware stack levels used:    1
 14384 ;; Hardware stack levels required when called:    3
 14385 ;; This function calls:
 14386 ;;		_Lcd_Cmd
 14387 ;; This function is called by:
 14388 ;;		_stateMachine
 14389 ;; This function uses a non-reentrant model
 14390 ;;
 14391                           
 14392                           	psect	text55
 14393  005678                     __ptext55:
 14394                           	callstack 0
 14395  005678                     _Lcd_Set_Cursor:
 14396                           	callstack 25
 14397                           
 14398                           ;incstack = 0
 14399                           ;Lcd_Set_Cursor@a stored from wreg
 14400  005678  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 14401  00567A                     
 14402                           ;fs_lcd.c: 62: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 63: {;fs_lcd.c: 64:    char
      +                           temp,z,y;;fs_lcd.c: 65:    if(a == 1)
 14403  00567A  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 14404  00567C  A4D8               	btfss	status,2,c
 14405  00567E  EF43  F02B         	goto	u6791
 14406  005682  EF45  F02B         	goto	u6790
 14407  005686                     u6791:
 14408  005686  EF56  F02B         	goto	l5633
 14409  00568A                     u6790:
 14410  00568A                     
 14411                           ;fs_lcd.c: 66:    {;fs_lcd.c: 67:      temp = 0x80 + b - 1;
 14412  00568A  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14413  00568C  0F7F               	addlw	127
 14414  00568E  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14415                           
 14416                           ;fs_lcd.c: 68:       z = temp>>4;
 14417  005690  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14418  005692  0B0F               	andlw	15
 14419  005694  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14420                           
 14421                           ;fs_lcd.c: 69:       y = temp & 0x0F;
 14422  005696  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14423  005698  0B0F               	andlw	15
 14424  00569A  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14425  00569C                     
 14426                           ;fs_lcd.c: 70:       Lcd_Cmd(z);
 14427  00569C  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14428  00569E  EC6A  F02E         	call	_Lcd_Cmd
 14429  0056A2                     
 14430                           ;fs_lcd.c: 71:       Lcd_Cmd(y);
 14431  0056A2  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14432  0056A4  EC6A  F02E         	call	_Lcd_Cmd
 14433                           
 14434                           ;fs_lcd.c: 72:    }
 14435  0056A8  EF6E  F02B         	goto	l116
 14436  0056AC                     l5633:
 14437  0056AC  0E02               	movlw	2
 14438  0056AE  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 14439  0056B0  A4D8               	btfss	status,2,c
 14440  0056B2  EF5D  F02B         	goto	u6801
 14441  0056B6  EF5F  F02B         	goto	u6800
 14442  0056BA                     u6801:
 14443  0056BA  EF6E  F02B         	goto	l116
 14444  0056BE                     u6800:
 14445  0056BE                     
 14446                           ;fs_lcd.c: 74:    {;fs_lcd.c: 75:       temp = 0xC0 + b - 1;
 14447  0056BE  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 14448  0056C0  0FBF               	addlw	191
 14449  0056C2  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 14450                           
 14451                           ;fs_lcd.c: 76:       z = temp>>4;
 14452  0056C4  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 14453  0056C6  0B0F               	andlw	15
 14454  0056C8  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 14455                           
 14456                           ;fs_lcd.c: 77:       y = temp & 0x0F;
 14457  0056CA  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 14458  0056CC  0B0F               	andlw	15
 14459  0056CE  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 14460  0056D0                     
 14461                           ;fs_lcd.c: 78:       Lcd_Cmd(z);
 14462  0056D0  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 14463  0056D2  EC6A  F02E         	call	_Lcd_Cmd
 14464  0056D6                     
 14465                           ;fs_lcd.c: 79:       Lcd_Cmd(y);
 14466  0056D6  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 14467  0056D8  EC6A  F02E         	call	_Lcd_Cmd
 14468  0056DC                     l116:
 14469  0056DC  0012               	return		;funcret
 14470  0056DE                     __end_of_Lcd_Set_Cursor:
 14471                           	callstack 0
 14472                           
 14473 ;; *************** function _buttonControlFlags *****************
 14474 ;; Defined at:
 14475 ;;		line 79 in file "fs_menu_controller.c"
 14476 ;; Parameters:    Size  Location     Type
 14477 ;;		None
 14478 ;; Auto vars:     Size  Location     Type
 14479 ;;		None
 14480 ;; Return value:  Size  Location     Type
 14481 ;;                  1    wreg      void 
 14482 ;; Registers used:
 14483 ;;		None
 14484 ;; Tracked objects:
 14485 ;;		On entry : 0/0
 14486 ;;		On exit  : 0/0
 14487 ;;		Unchanged: 0/0
 14488 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14489 ;;      Params:         0       0       0       0       0       0       0
 14490 ;;      Locals:         0       0       0       0       0       0       0
 14491 ;;      Temps:          0       0       0       0       0       0       0
 14492 ;;      Totals:         0       0       0       0       0       0       0
 14493 ;;Total ram usage:        0 bytes
 14494 ;; Hardware stack levels used:    1
 14495 ;; Hardware stack levels required when called:    1
 14496 ;; This function calls:
 14497 ;;		Nothing
 14498 ;; This function is called by:
 14499 ;;		_menuControl
 14500 ;; This function uses a non-reentrant model
 14501 ;;
 14502                           
 14503                           	psect	text56
 14504  0045F8                     __ptext56:
 14505                           	callstack 0
 14506  0045F8                     _buttonControlFlags:
 14507                           	callstack 28
 14508  0045F8                     
 14509                           ;fs_menu_controller.c: 82:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 14510  0045F8  0100               	movlb	0	; () banked
 14511  0045FA  B1FE               	btfsc	_button_bounce_controller& (0+255),0,b
 14512  0045FC  EF02  F023         	goto	u6851
 14513  004600  EF04  F023         	goto	u6850
 14514  004604                     u6851:
 14515  004604  EF0D  F023         	goto	l311
 14516  004608                     u6850:
 14517  004608                     
 14518                           ; BSR set to: 0
 14519  004608  BE81               	btfsc	129,7,c	;volatile
 14520  00460A  EF09  F023         	goto	u6861
 14521  00460E  EF0B  F023         	goto	u6860
 14522  004612                     u6861:
 14523  004612  EF0D  F023         	goto	l311
 14524  004616                     u6860:
 14525  004616                     
 14526                           ; BSR set to: 0
 14527                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 1;
 14528  004616  81FE               	bsf	_button_bounce_controller& (0+255),0,b
 14529                           
 14530                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 1;
 14531  004618  81FD               	bsf	_menu_flags& (0+255),0,b
 14532  00461A                     l311:
 14533                           
 14534                           ; BSR set to: 0
 14535                           ;fs_menu_controller.c: 88:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 14536  00461A  AE81               	btfss	129,7,c	;volatile
 14537  00461C  EF12  F023         	goto	u6871
 14538  004620  EF14  F023         	goto	u6870
 14539  004624                     u6871:
 14540  004624  EF1D  F023         	goto	l312
 14541  004628                     u6870:
 14542  004628                     
 14543                           ; BSR set to: 0
 14544  004628  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 14545  00462A  EF19  F023         	goto	u6881
 14546  00462E  EF1B  F023         	goto	u6880
 14547  004632                     u6881:
 14548  004632  EF1D  F023         	goto	l312
 14549  004636                     u6880:
 14550  004636                     
 14551                           ; BSR set to: 0
 14552                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.menu = 0;
 14553  004636  91FE               	bcf	_button_bounce_controller& (0+255),0,b
 14554                           
 14555                           ;fs_menu_controller.c: 91:         menu_flags.menu_input_flag = 0;
 14556  004638  91FD               	bcf	_menu_flags& (0+255),0,b
 14557  00463A                     l312:
 14558                           
 14559                           ; BSR set to: 0
 14560                           ;fs_menu_controller.c: 95:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 14561  00463A  B7FE               	btfsc	_button_bounce_controller& (0+255),3,b
 14562  00463C  EF22  F023         	goto	u6891
 14563  004640  EF24  F023         	goto	u6890
 14564  004644                     u6891:
 14565  004644  EF2D  F023         	goto	l313
 14566  004648                     u6890:
 14567  004648                     
 14568                           ; BSR set to: 0
 14569  004648  B483               	btfsc	131,2,c	;volatile
 14570  00464A  EF29  F023         	goto	u6901
 14571  00464E  EF2B  F023         	goto	u6900
 14572  004652                     u6901:
 14573  004652  EF2D  F023         	goto	l313
 14574  004656                     u6900:
 14575  004656                     
 14576                           ; BSR set to: 0
 14577                           ;fs_menu_controller.c: 96:     {;fs_menu_controller.c: 97:         button_bounce_control
      +                          ler.pause = 1;
 14578  004656  87FE               	bsf	_button_bounce_controller& (0+255),3,b
 14579                           
 14580                           ;fs_menu_controller.c: 98:         menu_flags.menu_pause_flag = 1;
 14581  004658  87FD               	bsf	_menu_flags& (0+255),3,b
 14582  00465A                     l313:
 14583                           
 14584                           ; BSR set to: 0
 14585                           ;fs_menu_controller.c: 100:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pa
      +                          use == 1))
 14586  00465A  A483               	btfss	131,2,c	;volatile
 14587  00465C  EF32  F023         	goto	u6911
 14588  004660  EF34  F023         	goto	u6910
 14589  004664                     u6911:
 14590  004664  EF3D  F023         	goto	l314
 14591  004668                     u6910:
 14592  004668                     
 14593                           ; BSR set to: 0
 14594  004668  A7FE               	btfss	_button_bounce_controller& (0+255),3,b
 14595  00466A  EF39  F023         	goto	u6921
 14596  00466E  EF3B  F023         	goto	u6920
 14597  004672                     u6921:
 14598  004672  EF3D  F023         	goto	l314
 14599  004676                     u6920:
 14600  004676                     
 14601                           ; BSR set to: 0
 14602                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.pause = 0;
 14603  004676  97FE               	bcf	_button_bounce_controller& (0+255),3,b
 14604                           
 14605                           ;fs_menu_controller.c: 103:         menu_flags.menu_pause_flag = 0;
 14606  004678  97FD               	bcf	_menu_flags& (0+255),3,b
 14607  00467A                     l314:
 14608                           
 14609                           ; BSR set to: 0
 14610                           ;fs_menu_controller.c: 107:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 14611  00467A  B3FE               	btfsc	_button_bounce_controller& (0+255),1,b
 14612  00467C  EF42  F023         	goto	u6931
 14613  004680  EF44  F023         	goto	u6930
 14614  004684                     u6931:
 14615  004684  EF4D  F023         	goto	l315
 14616  004688                     u6930:
 14617  004688                     
 14618                           ; BSR set to: 0
 14619  004688  B083               	btfsc	131,0,c	;volatile
 14620  00468A  EF49  F023         	goto	u6941
 14621  00468E  EF4B  F023         	goto	u6940
 14622  004692                     u6941:
 14623  004692  EF4D  F023         	goto	l315
 14624  004696                     u6940:
 14625  004696                     
 14626                           ; BSR set to: 0
 14627                           ;fs_menu_controller.c: 108:     {;fs_menu_controller.c: 109:         button_bounce_contr
      +                          oller.start = 1;
 14628  004696  83FE               	bsf	_button_bounce_controller& (0+255),1,b
 14629                           
 14630                           ;fs_menu_controller.c: 110:         menu_flags.menu_start_flag = 1;
 14631  004698  83FD               	bsf	_menu_flags& (0+255),1,b
 14632  00469A                     l315:
 14633                           
 14634                           ; BSR set to: 0
 14635                           ;fs_menu_controller.c: 112:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 14636  00469A  A083               	btfss	131,0,c	;volatile
 14637  00469C  EF52  F023         	goto	u6951
 14638  0046A0  EF54  F023         	goto	u6950
 14639  0046A4                     u6951:
 14640  0046A4  EF5D  F023         	goto	l316
 14641  0046A8                     u6950:
 14642  0046A8                     
 14643                           ; BSR set to: 0
 14644  0046A8  A3FE               	btfss	_button_bounce_controller& (0+255),1,b
 14645  0046AA  EF59  F023         	goto	u6961
 14646  0046AE  EF5B  F023         	goto	u6960
 14647  0046B2                     u6961:
 14648  0046B2  EF5D  F023         	goto	l316
 14649  0046B6                     u6960:
 14650  0046B6                     
 14651                           ; BSR set to: 0
 14652                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.start = 0;
 14653  0046B6  93FE               	bcf	_button_bounce_controller& (0+255),1,b
 14654                           
 14655                           ;fs_menu_controller.c: 115:         menu_flags.menu_start_flag = 0;
 14656  0046B8  93FD               	bcf	_menu_flags& (0+255),1,b
 14657  0046BA                     l316:
 14658                           
 14659                           ; BSR set to: 0
 14660                           ;fs_menu_controller.c: 119:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 14661  0046BA  B5FE               	btfsc	_button_bounce_controller& (0+255),2,b
 14662  0046BC  EF62  F023         	goto	u6971
 14663  0046C0  EF64  F023         	goto	u6970
 14664  0046C4                     u6971:
 14665  0046C4  EF6D  F023         	goto	l317
 14666  0046C8                     u6970:
 14667  0046C8                     
 14668                           ; BSR set to: 0
 14669  0046C8  B283               	btfsc	131,1,c	;volatile
 14670  0046CA  EF69  F023         	goto	u6981
 14671  0046CE  EF6B  F023         	goto	u6980
 14672  0046D2                     u6981:
 14673  0046D2  EF6D  F023         	goto	l317
 14674  0046D6                     u6980:
 14675  0046D6                     
 14676                           ; BSR set to: 0
 14677                           ;fs_menu_controller.c: 120:     {;fs_menu_controller.c: 121:         button_bounce_contr
      +                          oller.stop = 1;
 14678  0046D6  85FE               	bsf	_button_bounce_controller& (0+255),2,b
 14679                           
 14680                           ;fs_menu_controller.c: 122:         menu_flags.menu_stop_flag = 1;
 14681  0046D8  85FD               	bsf	_menu_flags& (0+255),2,b
 14682  0046DA                     l317:
 14683                           
 14684                           ; BSR set to: 0
 14685                           ;fs_menu_controller.c: 124:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 14686  0046DA  A283               	btfss	131,1,c	;volatile
 14687  0046DC  EF72  F023         	goto	u6991
 14688  0046E0  EF74  F023         	goto	u6990
 14689  0046E4                     u6991:
 14690  0046E4  EF7D  F023         	goto	l318
 14691  0046E8                     u6990:
 14692  0046E8                     
 14693                           ; BSR set to: 0
 14694  0046E8  A5FE               	btfss	_button_bounce_controller& (0+255),2,b
 14695  0046EA  EF79  F023         	goto	u7001
 14696  0046EE  EF7B  F023         	goto	u7000
 14697  0046F2                     u7001:
 14698  0046F2  EF7D  F023         	goto	l318
 14699  0046F6                     u7000:
 14700  0046F6                     
 14701                           ; BSR set to: 0
 14702                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.stop = 0;
 14703  0046F6  95FE               	bcf	_button_bounce_controller& (0+255),2,b
 14704                           
 14705                           ;fs_menu_controller.c: 127:         menu_flags.menu_stop_flag = 0;
 14706  0046F8  95FD               	bcf	_menu_flags& (0+255),2,b
 14707  0046FA                     l318:
 14708                           
 14709                           ; BSR set to: 0
 14710                           ;fs_menu_controller.c: 131:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 14711  0046FA  BBFE               	btfsc	_button_bounce_controller& (0+255),5,b
 14712  0046FC  EF82  F023         	goto	u7011
 14713  004700  EF84  F023         	goto	u7010
 14714  004704                     u7011:
 14715  004704  EF8D  F023         	goto	l319
 14716  004708                     u7010:
 14717  004708                     
 14718                           ; BSR set to: 0
 14719  004708  BC81               	btfsc	129,6,c	;volatile
 14720  00470A  EF89  F023         	goto	u7021
 14721  00470E  EF8B  F023         	goto	u7020
 14722  004712                     u7021:
 14723  004712  EF8D  F023         	goto	l319
 14724  004716                     u7020:
 14725  004716                     
 14726                           ; BSR set to: 0
 14727                           ;fs_menu_controller.c: 132:     {;fs_menu_controller.c: 133:         button_bounce_contr
      +                          oller.increase = 1;
 14728  004716  8BFE               	bsf	_button_bounce_controller& (0+255),5,b
 14729                           
 14730                           ;fs_menu_controller.c: 134:         menu_flags.menu_increase_flag = 1;
 14731  004718  89FD               	bsf	_menu_flags& (0+255),4,b
 14732  00471A                     l319:
 14733                           
 14734                           ; BSR set to: 0
 14735                           ;fs_menu_controller.c: 136:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 14736  00471A  AC81               	btfss	129,6,c	;volatile
 14737  00471C  EF92  F023         	goto	u7031
 14738  004720  EF94  F023         	goto	u7030
 14739  004724                     u7031:
 14740  004724  EF9D  F023         	goto	l320
 14741  004728                     u7030:
 14742  004728                     
 14743                           ; BSR set to: 0
 14744  004728  ABFE               	btfss	_button_bounce_controller& (0+255),5,b
 14745  00472A  EF99  F023         	goto	u7041
 14746  00472E  EF9B  F023         	goto	u7040
 14747  004732                     u7041:
 14748  004732  EF9D  F023         	goto	l320
 14749  004736                     u7040:
 14750  004736                     
 14751                           ; BSR set to: 0
 14752                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.increase = 0;
 14753  004736  9BFE               	bcf	_button_bounce_controller& (0+255),5,b
 14754                           
 14755                           ;fs_menu_controller.c: 139:         menu_flags.menu_increase_flag = 0;
 14756  004738  99FD               	bcf	_menu_flags& (0+255),4,b
 14757  00473A                     l320:
 14758                           
 14759                           ; BSR set to: 0
 14760                           ;fs_menu_controller.c: 143:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 14761  00473A  B9FE               	btfsc	_button_bounce_controller& (0+255),4,b
 14762  00473C  EFA2  F023         	goto	u7051
 14763  004740  EFA4  F023         	goto	u7050
 14764  004744                     u7051:
 14765  004744  EFAD  F023         	goto	l321
 14766  004748                     u7050:
 14767  004748                     
 14768                           ; BSR set to: 0
 14769  004748  B883               	btfsc	131,4,c	;volatile
 14770  00474A  EFA9  F023         	goto	u7061
 14771  00474E  EFAB  F023         	goto	u7060
 14772  004752                     u7061:
 14773  004752  EFAD  F023         	goto	l321
 14774  004756                     u7060:
 14775  004756                     
 14776                           ; BSR set to: 0
 14777                           ;fs_menu_controller.c: 144:     {;fs_menu_controller.c: 145:         button_bounce_contr
      +                          oller.decrease = 1;
 14778  004756  89FE               	bsf	_button_bounce_controller& (0+255),4,b
 14779                           
 14780                           ;fs_menu_controller.c: 146:         menu_flags.menu_decrease_flag = 1;
 14781  004758  8BFD               	bsf	_menu_flags& (0+255),5,b
 14782  00475A                     l321:
 14783                           
 14784                           ; BSR set to: 0
 14785                           ;fs_menu_controller.c: 148:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 14786  00475A  A883               	btfss	131,4,c	;volatile
 14787  00475C  EFB2  F023         	goto	u7071
 14788  004760  EFB4  F023         	goto	u7070
 14789  004764                     u7071:
 14790  004764  EFBD  F023         	goto	l323
 14791  004768                     u7070:
 14792  004768                     
 14793                           ; BSR set to: 0
 14794  004768  A9FE               	btfss	_button_bounce_controller& (0+255),4,b
 14795  00476A  EFB9  F023         	goto	u7081
 14796  00476E  EFBB  F023         	goto	u7080
 14797  004772                     u7081:
 14798  004772  EFBD  F023         	goto	l323
 14799  004776                     u7080:
 14800  004776                     
 14801                           ; BSR set to: 0
 14802                           ;fs_menu_controller.c: 149:     {;fs_menu_controller.c: 150:         button_bounce_contr
      +                          oller.decrease = 0;
 14803  004776  99FE               	bcf	_button_bounce_controller& (0+255),4,b
 14804                           
 14805                           ;fs_menu_controller.c: 151:         menu_flags.menu_decrease_flag = 0;
 14806  004778  9BFD               	bcf	_menu_flags& (0+255),5,b
 14807  00477A                     l323:
 14808                           
 14809                           ; BSR set to: 0
 14810  00477A  0012               	return		;funcret
 14811  00477C                     __end_of_buttonControlFlags:
 14812                           	callstack 0
 14813                           
 14814 ;; *************** function _mcu_init *****************
 14815 ;; Defined at:
 14816 ;;		line 42 in file "fs_mcu.c"
 14817 ;; Parameters:    Size  Location     Type
 14818 ;;		None
 14819 ;; Auto vars:     Size  Location     Type
 14820 ;;		None
 14821 ;; Return value:  Size  Location     Type
 14822 ;;                  1    wreg      void 
 14823 ;; Registers used:
 14824 ;;		wreg, status,2
 14825 ;; Tracked objects:
 14826 ;;		On entry : 0/0
 14827 ;;		On exit  : 0/0
 14828 ;;		Unchanged: 0/0
 14829 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14830 ;;      Params:         0       0       0       0       0       0       0
 14831 ;;      Locals:         0       0       0       0       0       0       0
 14832 ;;      Temps:          0       0       0       0       0       0       0
 14833 ;;      Totals:         0       0       0       0       0       0       0
 14834 ;;Total ram usage:        0 bytes
 14835 ;; Hardware stack levels used:    1
 14836 ;; Hardware stack levels required when called:    1
 14837 ;; This function calls:
 14838 ;;		Nothing
 14839 ;; This function is called by:
 14840 ;;		_main
 14841 ;; This function uses a non-reentrant model
 14842 ;;
 14843                           
 14844                           	psect	text57
 14845  005CF2                     __ptext57:
 14846                           	callstack 0
 14847  005CF2                     _mcu_init:
 14848                           	callstack 29
 14849  005CF2                     
 14850                           ;fs_mcu.c: 44:    OSCCONbits.IRCF = 0b111;
 14851  005CF2  0E70               	movlw	112
 14852  005CF4  12D3               	iorwf	211,f,c	;volatile
 14853  005CF6                     
 14854                           ;fs_mcu.c: 45:    OSCTUNEbits.PLLEN = 0b1;
 14855  005CF6  8C9B               	bsf	155,6,c	;volatile
 14856  005CF8                     l243:
 14857  005CF8  A4D3               	btfss	211,2,c	;volatile
 14858  005CFA  EF81  F02E         	goto	u7641
 14859  005CFE  EF83  F02E         	goto	u7640
 14860  005D02                     u7641:
 14861  005D02  EF7C  F02E         	goto	l243
 14862  005D06                     u7640:
 14863  005D06  0012               	return		;funcret
 14864  005D08                     __end_of_mcu_init:
 14865                           	callstack 0
 14866                           
 14867 ;; *************** function _lcd_init *****************
 14868 ;; Defined at:
 14869 ;;		line 88 in file "fs_lcd.c"
 14870 ;; Parameters:    Size  Location     Type
 14871 ;;		None
 14872 ;; Auto vars:     Size  Location     Type
 14873 ;;		None
 14874 ;; Return value:  Size  Location     Type
 14875 ;;                  1    wreg      void 
 14876 ;; Registers used:
 14877 ;;		wreg, status,2, cstack
 14878 ;; Tracked objects:
 14879 ;;		On entry : 0/0
 14880 ;;		On exit  : 0/0
 14881 ;;		Unchanged: 0/0
 14882 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14883 ;;      Params:         0       0       0       0       0       0       0
 14884 ;;      Locals:         0       0       0       0       0       0       0
 14885 ;;      Temps:          2       0       0       0       0       0       0
 14886 ;;      Totals:         2       0       0       0       0       0       0
 14887 ;;Total ram usage:        2 bytes
 14888 ;; Hardware stack levels used:    1
 14889 ;; Hardware stack levels required when called:    3
 14890 ;; This function calls:
 14891 ;;		_Lcd_Cmd
 14892 ;;		_Lcd_Port
 14893 ;; This function is called by:
 14894 ;;		_main
 14895 ;; This function uses a non-reentrant model
 14896 ;;
 14897                           
 14898                           	psect	text58
 14899  00532E                     __ptext58:
 14900                           	callstack 0
 14901  00532E                     _lcd_init:
 14902                           	callstack 27
 14903  00532E                     
 14904                           ;fs_lcd.c: 90:     TRISDbits.RD6 = 0;
 14905  00532E  9C95               	bcf	149,6,c	;volatile
 14906                           
 14907                           ;fs_lcd.c: 91:     ANSELDbits.ANSD6 = 0;
 14908  005330  010F               	movlb	15	; () banked
 14909  005332  9D3B               	bcf	59,6,b	;volatile
 14910                           
 14911                           ;fs_lcd.c: 93:     TRISDbits.RD7 = 0;
 14912  005334  9E95               	bcf	149,7,c	;volatile
 14913                           
 14914                           ;fs_lcd.c: 94:     ANSELDbits.ANSD7 = 0;
 14915  005336  9F3B               	bcf	59,7,b	;volatile
 14916                           
 14917                           ;fs_lcd.c: 96:     TRISBbits.RB0 = 0;
 14918  005338  9093               	bcf	147,0,c	;volatile
 14919                           
 14920                           ;fs_lcd.c: 97:     ANSELBbits.ANSB0 = 0;
 14921  00533A  9139               	bcf	57,0,b	;volatile
 14922                           
 14923                           ;fs_lcd.c: 99:     TRISBbits.RB1 = 0;
 14924  00533C  9293               	bcf	147,1,c	;volatile
 14925                           
 14926                           ;fs_lcd.c: 100:     ANSELBbits.ANSB1 = 0;
 14927  00533E  9339               	bcf	57,1,b	;volatile
 14928                           
 14929                           ;fs_lcd.c: 102:     TRISBbits.RB2 = 0;
 14930  005340  9493               	bcf	147,2,c	;volatile
 14931                           
 14932                           ;fs_lcd.c: 103:     ANSELBbits.ANSB2 = 0;
 14933  005342  9539               	bcf	57,2,b	;volatile
 14934                           
 14935                           ;fs_lcd.c: 105:     TRISBbits.RB3 = 0;
 14936  005344  9693               	bcf	147,3,c	;volatile
 14937                           
 14938                           ;fs_lcd.c: 106:     ANSELBbits.ANSB3 = 0;
 14939  005346  9739               	bcf	57,3,b	;volatile
 14940  005348                     
 14941                           ; BSR set to: 15
 14942                           ;fs_lcd.c: 109:     Lcd_Port(0x00);
 14943  005348  0E00               	movlw	0
 14944  00534A  ECCD  F02B         	call	_Lcd_Port
 14945  00534E                     
 14946                           ;fs_lcd.c: 110:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 14947  00534E  0E02               	movlw	2
 14948  005350  6E05               	movwf	(??_lcd_init+1)^0,c
 14949  005352  0EA0               	movlw	160
 14950  005354  6E04               	movwf	??_lcd_init^0,c
 14951  005356  0E92               	movlw	146
 14952  005358                     u7827:
 14953  005358  2EE8               	decfsz	wreg,f,c
 14954  00535A  D7FE               	bra	u7827
 14955  00535C  2E04               	decfsz	??_lcd_init^0,f,c
 14956  00535E  D7FC               	bra	u7827
 14957  005360  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 14958  005362  D7FA               	bra	u7827
 14959  005364  D000               	nop2	
 14960  005366                     
 14961                           ;fs_lcd.c: 111:     Lcd_Cmd(0x03);
 14962  005366  0E03               	movlw	3
 14963  005368  EC6A  F02E         	call	_Lcd_Cmd
 14964  00536C                     
 14965                           ;fs_lcd.c: 112:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 14966  00536C  0E68               	movlw	104
 14967  00536E  6E04               	movwf	??_lcd_init^0,c
 14968  005370  0EE4               	movlw	228
 14969  005372                     u7837:
 14970  005372  2EE8               	decfsz	wreg,f,c
 14971  005374  D7FE               	bra	u7837
 14972  005376  2E04               	decfsz	??_lcd_init^0,f,c
 14973  005378  D7FC               	bra	u7837
 14974  00537A  D000               	nop2	
 14975  00537C                     
 14976                           ;fs_lcd.c: 113:     Lcd_Cmd(0x03);
 14977  00537C  0E03               	movlw	3
 14978  00537E  EC6A  F02E         	call	_Lcd_Cmd
 14979  005382                     
 14980                           ;fs_lcd.c: 114:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 14981  005382  0EE5               	movlw	229
 14982  005384  6E04               	movwf	??_lcd_init^0,c
 14983  005386  0E91               	movlw	145
 14984  005388                     u7847:
 14985  005388  2EE8               	decfsz	wreg,f,c
 14986  00538A  D7FE               	bra	u7847
 14987  00538C  2E04               	decfsz	??_lcd_init^0,f,c
 14988  00538E  D7FC               	bra	u7847
 14989  005390  F000               	nop	
 14990  005392                     
 14991                           ;fs_lcd.c: 115:     Lcd_Cmd(0x03);
 14992  005392  0E03               	movlw	3
 14993  005394  EC6A  F02E         	call	_Lcd_Cmd
 14994  005398                     
 14995                           ;fs_lcd.c: 116:     Lcd_Cmd(0x02);
 14996  005398  0E02               	movlw	2
 14997  00539A  EC6A  F02E         	call	_Lcd_Cmd
 14998  00539E                     
 14999                           ;fs_lcd.c: 117:     Lcd_Cmd(0x02);
 15000  00539E  0E02               	movlw	2
 15001  0053A0  EC6A  F02E         	call	_Lcd_Cmd
 15002  0053A4                     
 15003                           ;fs_lcd.c: 118:     Lcd_Cmd(0x08);
 15004  0053A4  0E08               	movlw	8
 15005  0053A6  EC6A  F02E         	call	_Lcd_Cmd
 15006  0053AA                     
 15007                           ;fs_lcd.c: 119:     Lcd_Cmd(0x00);
 15008  0053AA  0E00               	movlw	0
 15009  0053AC  EC6A  F02E         	call	_Lcd_Cmd
 15010  0053B0                     
 15011                           ;fs_lcd.c: 120:     Lcd_Cmd(0x0C);
 15012  0053B0  0E0C               	movlw	12
 15013  0053B2  EC6A  F02E         	call	_Lcd_Cmd
 15014  0053B6                     
 15015                           ;fs_lcd.c: 121:     Lcd_Cmd(0x00);
 15016  0053B6  0E00               	movlw	0
 15017  0053B8  EC6A  F02E         	call	_Lcd_Cmd
 15018  0053BC                     
 15019                           ;fs_lcd.c: 122:     Lcd_Cmd(0x06);
 15020  0053BC  0E06               	movlw	6
 15021  0053BE  EC6A  F02E         	call	_Lcd_Cmd
 15022  0053C2  0012               	return		;funcret
 15023  0053C4                     __end_of_lcd_init:
 15024                           	callstack 0
 15025                           
 15026 ;; *************** function _adcInit *****************
 15027 ;; Defined at:
 15028 ;;		line 53 in file "fs_adc.c"
 15029 ;; Parameters:    Size  Location     Type
 15030 ;;		None
 15031 ;; Auto vars:     Size  Location     Type
 15032 ;;		None
 15033 ;; Return value:  Size  Location     Type
 15034 ;;                  1    wreg      void 
 15035 ;; Registers used:
 15036 ;;		wreg, status,2
 15037 ;; Tracked objects:
 15038 ;;		On entry : 0/0
 15039 ;;		On exit  : 0/0
 15040 ;;		Unchanged: 0/0
 15041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15042 ;;      Params:         0       0       0       0       0       0       0
 15043 ;;      Locals:         0       0       0       0       0       0       0
 15044 ;;      Temps:          0       0       0       0       0       0       0
 15045 ;;      Totals:         0       0       0       0       0       0       0
 15046 ;;Total ram usage:        0 bytes
 15047 ;; Hardware stack levels used:    1
 15048 ;; Hardware stack levels required when called:    1
 15049 ;; This function calls:
 15050 ;;		Nothing
 15051 ;; This function is called by:
 15052 ;;		_main
 15053 ;; This function uses a non-reentrant model
 15054 ;;
 15055                           
 15056                           	psect	text59
 15057  0059F8                     __ptext59:
 15058                           	callstack 0
 15059  0059F8                     _adcInit:
 15060                           	callstack 29
 15061  0059F8                     
 15062                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15063  0059F8  8092               	bsf	146,0,c	;volatile
 15064                           
 15065                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15066  0059FA  010F               	movlb	15	; () banked
 15067  0059FC  8138               	bsf	56,0,b	;volatile
 15068                           
 15069                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15070  0059FE  8292               	bsf	146,1,c	;volatile
 15071                           
 15072                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15073  005A00  8338               	bsf	56,1,b	;volatile
 15074                           
 15075                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15076  005A02  8492               	bsf	146,2,c	;volatile
 15077                           
 15078                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15079  005A04  8538               	bsf	56,2,b	;volatile
 15080                           
 15081                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15082  005A06  8692               	bsf	146,3,c	;volatile
 15083                           
 15084                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15085  005A08  8738               	bsf	56,3,b	;volatile
 15086                           
 15087                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15088  005A0A  8A92               	bsf	146,5,c	;volatile
 15089                           
 15090                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15091  005A0C  8B38               	bsf	56,5,b	;volatile
 15092                           
 15093                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15094  005A0E  8096               	bsf	150,0,c	;volatile
 15095                           
 15096                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15097  005A10  813C               	bsf	60,0,b	;volatile
 15098                           
 15099                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 15100  005A12  8296               	bsf	150,1,c	;volatile
 15101                           
 15102                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 15103  005A14  833C               	bsf	60,1,b	;volatile
 15104                           
 15105                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 15106  005A16  8496               	bsf	150,2,c	;volatile
 15107                           
 15108                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 15109  005A18  853C               	bsf	60,2,b	;volatile
 15110  005A1A                     
 15111                           ; BSR set to: 15
 15112                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 15113  005A1A  0E01               	movlw	1
 15114  005A1C  6EC2               	movwf	194,c	;volatile
 15115                           
 15116                           ;fs_adc.c: 80:     ADCON1=0x00;
 15117  005A1E  0E00               	movlw	0
 15118  005A20  6EC1               	movwf	193,c	;volatile
 15119  005A22                     
 15120                           ; BSR set to: 15
 15121                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 15122  005A22  8EC0               	bsf	192,7,c	;volatile
 15123                           
 15124                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 15125  005A24  50C0               	movf	192,w,c	;volatile
 15126  005A26  0BC7               	andlw	-57
 15127  005A28  0910               	iorlw	16
 15128  005A2A  6EC0               	movwf	192,c	;volatile
 15129                           
 15130                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 15131  005A2C  50C0               	movf	192,w,c	;volatile
 15132  005A2E  0BF8               	andlw	-8
 15133  005A30  0906               	iorlw	6
 15134  005A32  6EC0               	movwf	192,c	;volatile
 15135  005A34                     
 15136                           ; BSR set to: 15
 15137  005A34  0012               	return		;funcret
 15138  005A36                     __end_of_adcInit:
 15139                           	callstack 0
 15140                           
 15141 ;; *************** function _PWM_Init *****************
 15142 ;; Defined at:
 15143 ;;		line 17 in file "fs_pwm.c"
 15144 ;; Parameters:    Size  Location     Type
 15145 ;;		None
 15146 ;; Auto vars:     Size  Location     Type
 15147 ;;		None
 15148 ;; Return value:  Size  Location     Type
 15149 ;;                  1    wreg      void 
 15150 ;; Registers used:
 15151 ;;		wreg, status,2
 15152 ;; Tracked objects:
 15153 ;;		On entry : 0/0
 15154 ;;		On exit  : 0/0
 15155 ;;		Unchanged: 0/0
 15156 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15157 ;;      Params:         0       0       0       0       0       0       0
 15158 ;;      Locals:         0       0       0       0       0       0       0
 15159 ;;      Temps:          0       0       0       0       0       0       0
 15160 ;;      Totals:         0       0       0       0       0       0       0
 15161 ;;Total ram usage:        0 bytes
 15162 ;; Hardware stack levels used:    1
 15163 ;; Hardware stack levels required when called:    1
 15164 ;; This function calls:
 15165 ;;		Nothing
 15166 ;; This function is called by:
 15167 ;;		_main
 15168 ;; This function uses a non-reentrant model
 15169 ;;
 15170                           
 15171                           	psect	text60
 15172  005C48                     __ptext60:
 15173                           	callstack 0
 15174  005C48                     _PWM_Init:
 15175                           	callstack 29
 15176  005C48                     
 15177                           ;fs_pwm.c: 19:     TRISCbits.RC2 = 0;
 15178  005C48  9494               	bcf	148,2,c	;volatile
 15179                           
 15180                           ;fs_pwm.c: 20:     TRISCbits.RC1 = 0;
 15181  005C4A  9294               	bcf	148,1,c	;volatile
 15182  005C4C                     
 15183                           ;fs_pwm.c: 23:     CCP1CON = 0b00001100;
 15184  005C4C  0E0C               	movlw	12
 15185  005C4E  6EBD               	movwf	189,c	;volatile
 15186                           
 15187                           ;fs_pwm.c: 25:     CCP2CON = 0b00001100;
 15188  005C50  0E0C               	movlw	12
 15189  005C52  6E66               	movwf	102,c	;volatile
 15190                           
 15191                           ;fs_pwm.c: 29:     T2CONbits.T2CKPS = 0b01;
 15192  005C54  50BA               	movf	186,w,c	;volatile
 15193  005C56  0BFC               	andlw	-4
 15194  005C58  0901               	iorlw	1
 15195  005C5A  6EBA               	movwf	186,c	;volatile
 15196  005C5C                     
 15197                           ;fs_pwm.c: 30:     T2CONbits.TMR2ON = 1;
 15198  005C5C  84BA               	bsf	186,2,c	;volatile
 15199                           
 15200                           ;fs_pwm.c: 32:     TMR2 = 0;
 15201  005C5E  0E00               	movlw	0
 15202  005C60  6EBC               	movwf	188,c	;volatile
 15203                           
 15204                           ;fs_pwm.c: 33:     PR2 = 199;
 15205  005C62  0EC7               	movlw	199
 15206  005C64  6EBB               	movwf	187,c	;volatile
 15207                           
 15208                           ;fs_pwm.c: 34:     CCPR1L = 0;
 15209  005C66  0E00               	movlw	0
 15210  005C68  6EBE               	movwf	190,c	;volatile
 15211                           
 15212                           ;fs_pwm.c: 35:     CCPR2L = 0;
 15213  005C6A  0E00               	movlw	0
 15214  005C6C  6E67               	movwf	103,c	;volatile
 15215  005C6E  0012               	return		;funcret
 15216  005C70                     __end_of_PWM_Init:
 15217                           	callstack 0
 15218                           
 15219 ;; *************** function _Lcd_Clear *****************
 15220 ;; Defined at:
 15221 ;;		line 51 in file "fs_lcd.c"
 15222 ;; Parameters:    Size  Location     Type
 15223 ;;		None
 15224 ;; Auto vars:     Size  Location     Type
 15225 ;;		None
 15226 ;; Return value:  Size  Location     Type
 15227 ;;                  1    wreg      void 
 15228 ;; Registers used:
 15229 ;;		wreg, status,2, cstack
 15230 ;; Tracked objects:
 15231 ;;		On entry : 0/0
 15232 ;;		On exit  : 0/0
 15233 ;;		Unchanged: 0/0
 15234 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15235 ;;      Params:         0       0       0       0       0       0       0
 15236 ;;      Locals:         0       0       0       0       0       0       0
 15237 ;;      Temps:          0       0       0       0       0       0       0
 15238 ;;      Totals:         0       0       0       0       0       0       0
 15239 ;;Total ram usage:        0 bytes
 15240 ;; Hardware stack levels used:    1
 15241 ;; Hardware stack levels required when called:    3
 15242 ;; This function calls:
 15243 ;;		_Lcd_Cmd
 15244 ;; This function is called by:
 15245 ;;		_main
 15246 ;; This function uses a non-reentrant model
 15247 ;;
 15248                           
 15249                           	psect	text61
 15250  005D1A                     __ptext61:
 15251                           	callstack 0
 15252  005D1A                     _Lcd_Clear:
 15253                           	callstack 27
 15254  005D1A                     
 15255                           ;fs_lcd.c: 53:    Lcd_Cmd(0);
 15256  005D1A  0E00               	movlw	0
 15257  005D1C  EC6A  F02E         	call	_Lcd_Cmd
 15258                           
 15259                           ;fs_lcd.c: 54:    Lcd_Cmd(1);
 15260  005D20  0E01               	movlw	1
 15261  005D22  EC6A  F02E         	call	_Lcd_Cmd
 15262  005D26  0012               	return		;funcret
 15263  005D28                     __end_of_Lcd_Clear:
 15264                           	callstack 0
 15265                           
 15266 ;; *************** function _Lcd_Cmd *****************
 15267 ;; Defined at:
 15268 ;;		line 35 in file "fs_lcd.c"
 15269 ;; Parameters:    Size  Location     Type
 15270 ;;  a               1    wreg     unsigned char 
 15271 ;; Auto vars:     Size  Location     Type
 15272 ;;  a               1    2[COMRAM] unsigned char 
 15273 ;; Return value:  Size  Location     Type
 15274 ;;                  1    wreg      void 
 15275 ;; Registers used:
 15276 ;;		wreg, status,2, cstack
 15277 ;; Tracked objects:
 15278 ;;		On entry : 0/0
 15279 ;;		On exit  : 0/0
 15280 ;;		Unchanged: 0/0
 15281 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15282 ;;      Params:         0       0       0       0       0       0       0
 15283 ;;      Locals:         1       0       0       0       0       0       0
 15284 ;;      Temps:          1       0       0       0       0       0       0
 15285 ;;      Totals:         2       0       0       0       0       0       0
 15286 ;;Total ram usage:        2 bytes
 15287 ;; Hardware stack levels used:    1
 15288 ;; Hardware stack levels required when called:    2
 15289 ;; This function calls:
 15290 ;;		_Lcd_Port
 15291 ;; This function is called by:
 15292 ;;		_Lcd_Clear
 15293 ;;		_Lcd_Set_Cursor
 15294 ;;		_lcd_init
 15295 ;;		_Lcd_Shift_Right
 15296 ;;		_Lcd_Shift_Left
 15297 ;; This function uses a non-reentrant model
 15298 ;;
 15299                           
 15300                           	psect	text62
 15301  005CD4                     __ptext62:
 15302                           	callstack 0
 15303  005CD4                     _Lcd_Cmd:
 15304                           	callstack 25
 15305                           
 15306                           ;incstack = 0
 15307                           ;Lcd_Cmd@a stored from wreg
 15308  005CD4  6E03               	movwf	Lcd_Cmd@a^0,c
 15309  005CD6                     
 15310                           ;fs_lcd.c: 35: void Lcd_Cmd(char a);fs_lcd.c: 36: {;fs_lcd.c: 37:    PORTDbits.RD6 = 0;
 15311  005CD6  9C83               	bcf	131,6,c	;volatile
 15312  005CD8                     
 15313                           ;fs_lcd.c: 38:    Lcd_Port(a);
 15314  005CD8  5003               	movf	Lcd_Cmd@a^0,w,c
 15315  005CDA  ECCD  F02B         	call	_Lcd_Port
 15316  005CDE                     
 15317                           ;fs_lcd.c: 39:    PORTDbits.RD7 = 1;
 15318  005CDE  8E83               	bsf	131,7,c	;volatile
 15319  005CE0                     
 15320                           ;fs_lcd.c: 40:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15321  005CE0  0E2A               	movlw	42
 15322  005CE2  6E02               	movwf	??_Lcd_Cmd^0,c
 15323  005CE4  0E8E               	movlw	142
 15324  005CE6                     u7857:
 15325  005CE6  2EE8               	decfsz	wreg,f,c
 15326  005CE8  D7FE               	bra	u7857
 15327  005CEA  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15328  005CEC  D7FC               	bra	u7857
 15329  005CEE                     
 15330                           ;fs_lcd.c: 41:    PORTDbits.RD7 = 0;
 15331  005CEE  9E83               	bcf	131,7,c	;volatile
 15332  005CF0  0012               	return		;funcret
 15333  005CF2                     __end_of_Lcd_Cmd:
 15334                           	callstack 0
 15335                           
 15336 ;; *************** function _Lcd_Port *****************
 15337 ;; Defined at:
 15338 ;;		line 12 in file "fs_lcd.c"
 15339 ;; Parameters:    Size  Location     Type
 15340 ;;  a               1    wreg     unsigned char 
 15341 ;; Auto vars:     Size  Location     Type
 15342 ;;  a               1    0[COMRAM] unsigned char 
 15343 ;; Return value:  Size  Location     Type
 15344 ;;                  1    wreg      void 
 15345 ;; Registers used:
 15346 ;;		wreg
 15347 ;; Tracked objects:
 15348 ;;		On entry : 0/0
 15349 ;;		On exit  : 0/0
 15350 ;;		Unchanged: 0/0
 15351 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15352 ;;      Params:         0       0       0       0       0       0       0
 15353 ;;      Locals:         1       0       0       0       0       0       0
 15354 ;;      Temps:          0       0       0       0       0       0       0
 15355 ;;      Totals:         1       0       0       0       0       0       0
 15356 ;;Total ram usage:        1 bytes
 15357 ;; Hardware stack levels used:    1
 15358 ;; Hardware stack levels required when called:    1
 15359 ;; This function calls:
 15360 ;;		Nothing
 15361 ;; This function is called by:
 15362 ;;		_Lcd_Cmd
 15363 ;;		_lcd_init
 15364 ;;		_Lcd_Write_Char
 15365 ;; This function uses a non-reentrant model
 15366 ;;
 15367                           
 15368                           	psect	text63
 15369  00579A                     __ptext63:
 15370                           	callstack 0
 15371  00579A                     _Lcd_Port:
 15372                           	callstack 25
 15373                           
 15374                           ;incstack = 0
 15375                           ;Lcd_Port@a stored from wreg
 15376  00579A  6E01               	movwf	Lcd_Port@a^0,c
 15377  00579C                     
 15378                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15379  00579C  A001               	btfss	Lcd_Port@a^0,0,c
 15380  00579E  EFD3  F02B         	goto	u6311
 15381  0057A2  EFD5  F02B         	goto	u6310
 15382  0057A6                     u6311:
 15383  0057A6  EFD8  F02B         	goto	l96
 15384  0057AA                     u6310:
 15385  0057AA  8081               	bsf	129,0,c	;volatile
 15386  0057AC  EFD9  F02B         	goto	l5239
 15387  0057B0                     l96:
 15388  0057B0  9081               	bcf	129,0,c	;volatile
 15389  0057B2                     l5239:
 15390                           
 15391                           ;fs_lcd.c: 17:    if(a & 2) { PORTBbits.RB1 = 1;}
 15392  0057B2  A201               	btfss	Lcd_Port@a^0,1,c
 15393  0057B4  EFDE  F02B         	goto	u6321
 15394  0057B8  EFE0  F02B         	goto	u6320
 15395  0057BC                     u6321:
 15396  0057BC  EFE3  F02B         	goto	l98
 15397  0057C0                     u6320:
 15398  0057C0  8281               	bsf	129,1,c	;volatile
 15399  0057C2  EFE4  F02B         	goto	l5243
 15400  0057C6                     l98:
 15401  0057C6  9281               	bcf	129,1,c	;volatile
 15402  0057C8                     l5243:
 15403                           
 15404                           ;fs_lcd.c: 20:    if(a & 4) {PORTBbits.RB2 = 1;}
 15405  0057C8  A401               	btfss	Lcd_Port@a^0,2,c
 15406  0057CA  EFE9  F02B         	goto	u6331
 15407  0057CE  EFEB  F02B         	goto	u6330
 15408  0057D2                     u6331:
 15409  0057D2  EFEE  F02B         	goto	l100
 15410  0057D6                     u6330:
 15411  0057D6  8481               	bsf	129,2,c	;volatile
 15412  0057D8  EFEF  F02B         	goto	l5247
 15413  0057DC                     l100:
 15414  0057DC  9481               	bcf	129,2,c	;volatile
 15415  0057DE                     l5247:
 15416                           
 15417                           ;fs_lcd.c: 23:    if(a & 8) {PORTBbits.RB3 = 1;}
 15418  0057DE  A601               	btfss	Lcd_Port@a^0,3,c
 15419  0057E0  EFF4  F02B         	goto	u6341
 15420  0057E4  EFF6  F02B         	goto	u6340
 15421  0057E8                     u6341:
 15422  0057E8  EFF9  F02B         	goto	l102
 15423  0057EC                     u6340:
 15424  0057EC  8681               	bsf	129,3,c	;volatile
 15425  0057EE  EFFA  F02B         	goto	l104
 15426  0057F2                     l102:
 15427  0057F2  9681               	bcf	129,3,c	;volatile
 15428  0057F4                     l104:
 15429  0057F4  0012               	return		;funcret
 15430  0057F6                     __end_of_Lcd_Port:
 15431                           	callstack 0
 15432                           
 15433 ;; *************** function _TIMER0 *****************
 15434 ;; Defined at:
 15435 ;;		line 33 in file "fs_timer.c"
 15436 ;; Parameters:    Size  Location     Type
 15437 ;;		None
 15438 ;; Auto vars:     Size  Location     Type
 15439 ;;		None
 15440 ;; Return value:  Size  Location     Type
 15441 ;;                  1    wreg      void 
 15442 ;; Registers used:
 15443 ;;		wreg, status,2, status,0
 15444 ;; Tracked objects:
 15445 ;;		On entry : 0/0
 15446 ;;		On exit  : 0/0
 15447 ;;		Unchanged: 0/0
 15448 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15449 ;;      Params:         0       0       0       0       0       0       0
 15450 ;;      Locals:         0       0       0       0       0       0       0
 15451 ;;      Temps:          0       0       0       0       0       0       0
 15452 ;;      Totals:         0       0       0       0       0       0       0
 15453 ;;Total ram usage:        0 bytes
 15454 ;; Hardware stack levels used:    1
 15455 ;; This function calls:
 15456 ;;		Nothing
 15457 ;; This function is called by:
 15458 ;;		Interrupt level 2
 15459 ;; This function uses a non-reentrant model
 15460 ;;
 15461                           
 15462                           	psect	intcode
 15463  000008                     __pintcode:
 15464                           	callstack 0
 15465  000008                     _TIMER0:
 15466                           	callstack 20
 15467                           
 15468                           ;incstack = 0
 15469  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 15470  00000A                     
 15471                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 15472  00000A  A4F2               	btfss	242,2,c	;volatile
 15473  00000C  EF0A  F000         	goto	i2u775_41
 15474  000010  EF0C  F000         	goto	i2u775_40
 15475  000014                     i2u775_41:
 15476  000014  EF32  F000         	goto	i2l478
 15477  000018                     i2u775_40:
 15478  000018  AAF2               	btfss	242,5,c	;volatile
 15479  00001A  EF11  F000         	goto	i2u776_41
 15480  00001E  EF13  F000         	goto	i2u776_40
 15481  000022                     i2u776_41:
 15482  000022  EF32  F000         	goto	i2l478
 15483  000026                     i2u776_40:
 15484  000026                     
 15485                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 15486  000026  94F2               	bcf	242,2,c	;volatile
 15487  000028                     
 15488                           ;fs_timer.c: 38:         TMR0H = 0x63;
 15489  000028  0E63               	movlw	99
 15490  00002A  6ED7               	movwf	215,c	;volatile
 15491                           
 15492                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 15493  00002C  0EC0               	movlw	192
 15494  00002E  6ED6               	movwf	214,c	;volatile
 15495  000030                     
 15496                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 15497  000030  0100               	movlb	0	; () banked
 15498  000032  2BFC               	incf	(_timer_value+9)& (0+255),f,b
 15499  000034                     
 15500                           ; BSR set to: 0
 15501                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 15502  000034  A1FE               	btfss	_button_bounce_controller& (0+255),0,b
 15503  000036  EF1F  F000         	goto	i2u777_41
 15504  00003A  EF21  F000         	goto	i2u777_40
 15505  00003E                     i2u777_41:
 15506  00003E  EF24  F000         	goto	i2l6265
 15507  000042                     i2u777_40:
 15508  000042                     
 15509                           ; BSR set to: 0
 15510                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 15511  000042  2BFB               	incf	(_timer_value+8)& (0+255),f,b
 15512                           
 15513                           ;fs_timer.c: 46:         }
 15514  000044  EF26  F000         	goto	i2l6267
 15515  000048                     i2l6265:
 15516                           
 15517                           ; BSR set to: 0
 15518                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 15519  000048  0E00               	movlw	0
 15520  00004A  6FFB               	movwf	(_timer_value+8)& (0+255),b
 15521  00004C                     i2l6267:
 15522                           
 15523                           ; BSR set to: 0
 15524                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 15525  00004C  0E63               	movlw	99
 15526  00004E  65FC               	cpfsgt	(_timer_value+9)& (0+255),b
 15527  000050  EF2C  F000         	goto	i2u778_41
 15528  000054  EF2E  F000         	goto	i2u778_40
 15529  000058                     i2u778_41:
 15530  000058  EF32  F000         	goto	i2l478
 15531  00005C                     i2u778_40:
 15532  00005C                     
 15533                           ; BSR set to: 0
 15534                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 15535  00005C  0E00               	movlw	0
 15536  00005E  6FFC               	movwf	(_timer_value+9)& (0+255),b
 15537  000060                     
 15538                           ; BSR set to: 0
 15539                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 15540  000060  0101               	movlb	1	; () banked
 15541  000062  81AA               	bsf	_timer_counter_flag& (0+255),0,b
 15542  000064                     i2l478:
 15543  000064  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 15544  000066  0011               	retfie		f
 15545  000068                     __end_of_TIMER0:
 15546                           	callstack 0
 15547                           
 15548                           	psect	rparam
 15549  0000                     
 15550                           	psect	temp
 15551  00005F                     btemp:
 15552                           	callstack 0
 15553  00005F                     	ds	1
 15554  0000                     int$flags	set	btemp
 15555  0000                     wtemp8	set	btemp+1
 15556  0000                     ttemp5	set	btemp+1
 15557  0000                     ttemp6	set	btemp+4
 15558  0000                     ttemp7	set	btemp+8
 15559                           
 15560                           	psect	idloc
 15561                           
 15562                           ;Config register IDLOC0 @ 0x200000
 15563                           ;	unspecified, using default values
 15564  200000                     	org	2097152
 15565  200000  FF                 	db	255
 15566                           
 15567                           ;Config register IDLOC1 @ 0x200001
 15568                           ;	unspecified, using default values
 15569  200001                     	org	2097153
 15570  200001  FF                 	db	255
 15571                           
 15572                           ;Config register IDLOC2 @ 0x200002
 15573                           ;	unspecified, using default values
 15574  200002                     	org	2097154
 15575  200002  FF                 	db	255
 15576                           
 15577                           ;Config register IDLOC3 @ 0x200003
 15578                           ;	unspecified, using default values
 15579  200003                     	org	2097155
 15580  200003  FF                 	db	255
 15581                           
 15582                           ;Config register IDLOC4 @ 0x200004
 15583                           ;	unspecified, using default values
 15584  200004                     	org	2097156
 15585  200004  FF                 	db	255
 15586                           
 15587                           ;Config register IDLOC5 @ 0x200005
 15588                           ;	unspecified, using default values
 15589  200005                     	org	2097157
 15590  200005  FF                 	db	255
 15591                           
 15592                           ;Config register IDLOC6 @ 0x200006
 15593                           ;	unspecified, using default values
 15594  200006                     	org	2097158
 15595  200006  FF                 	db	255
 15596                           
 15597                           ;Config register IDLOC7 @ 0x200007
 15598                           ;	unspecified, using default values
 15599  200007                     	org	2097159
 15600  200007  FF                 	db	255
 15601                           
 15602                           	psect	config
 15603                           
 15604                           ; Padding undefined space
 15605  300000                     	org	3145728
 15606  300000  FF                 	db	255
 15607                           
 15608                           ;Config register CONFIG1H @ 0x300001
 15609                           ;	Oscillator Selection bits
 15610                           ;	FOSC = INTIO67, Internal oscillator block
 15611                           ;	4X PLL Enable
 15612                           ;	PLLCFG = ON, Oscillator multiplied by 4
 15613                           ;	Primary clock enable bit
 15614                           ;	PRICLKEN = ON, Primary clock is always enabled
 15615                           ;	Fail-Safe Clock Monitor Enable bit
 15616                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 15617                           ;	Internal/External Oscillator Switchover bit
 15618                           ;	IESO = ON, Oscillator Switchover mode enabled
 15619  300001                     	org	3145729
 15620  300001  B8                 	db	184
 15621                           
 15622                           ;Config register CONFIG2L @ 0x300002
 15623                           ;	Power-up Timer Enable bit
 15624                           ;	PWRTEN = OFF, Power up timer disabled
 15625                           ;	Brown-out Reset Enable bits
 15626                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 15627                           ;	Brown Out Reset Voltage bits
 15628                           ;	BORV = 190, VBOR set to 1.90 V nominal
 15629  300002                     	org	3145730
 15630  300002  1F                 	db	31
 15631                           
 15632                           ;Config register CONFIG2H @ 0x300003
 15633                           ;	Watchdog Timer Enable bits
 15634                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 15635                           ;	Watchdog Timer Postscale Select bits
 15636                           ;	WDTPS = 32768, 1:32768
 15637  300003                     	org	3145731
 15638  300003  3C                 	db	60
 15639                           
 15640                           ; Padding undefined space
 15641  300004                     	org	3145732
 15642  300004  FF                 	db	255
 15643                           
 15644                           ;Config register CONFIG3H @ 0x300005
 15645                           ;	CCP2 MUX bit
 15646                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 15647                           ;	PORTB A/D Enable bit
 15648                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 15649                           ;	P3A/CCP3 Mux bit
 15650                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 15651                           ;	HFINTOSC Fast Start-up
 15652                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 15653                           ;	Timer3 Clock input mux bit
 15654                           ;	T3CMX = PORTC0, T3CKI is on RC0
 15655                           ;	ECCP2 B output mux bit
 15656                           ;	P2BMX = PORTD2, P2B is on RD2
 15657                           ;	MCLR Pin Enable bit
 15658                           ;	MCLRE = INTMCLR, RE3 input pin enabled; MCLR disabled
 15659  300005                     	org	3145733
 15660  300005  3D                 	db	61
 15661                           
 15662                           ;Config register CONFIG4L @ 0x300006
 15663                           ;	Stack Full/Underflow Reset Enable bit
 15664                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 15665                           ;	Single-Supply ICSP Enable bit
 15666                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 15667                           ;	Extended Instruction Set Enable bit
 15668                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 15669                           ;	Background Debug
 15670                           ;	DEBUG = 0x1, unprogrammed default
 15671  300006                     	org	3145734
 15672  300006  84                 	db	132
 15673                           
 15674                           ; Padding undefined space
 15675  300007                     	org	3145735
 15676  300007  FF                 	db	255
 15677                           
 15678                           ;Config register CONFIG5L @ 0x300008
 15679                           ;	Code Protection Block 0
 15680                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 15681                           ;	Code Protection Block 1
 15682                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 15683                           ;	Code Protection Block 2
 15684                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 15685                           ;	Code Protection Block 3
 15686                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 15687  300008                     	org	3145736
 15688  300008  0F                 	db	15
 15689                           
 15690                           ;Config register CONFIG5H @ 0x300009
 15691                           ;	Boot Block Code Protection bit
 15692                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 15693                           ;	Data EEPROM Code Protection bit
 15694                           ;	CPD = OFF, Data EEPROM not code-protected
 15695  300009                     	org	3145737
 15696  300009  C0                 	db	192
 15697                           
 15698                           ;Config register CONFIG6L @ 0x30000A
 15699                           ;	Write Protection Block 0
 15700                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 15701                           ;	Write Protection Block 1
 15702                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 15703                           ;	Write Protection Block 2
 15704                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 15705                           ;	Write Protection Block 3
 15706                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 15707  30000A                     	org	3145738
 15708  30000A  0F                 	db	15
 15709                           
 15710                           ;Config register CONFIG6H @ 0x30000B
 15711                           ;	Configuration Register Write Protection bit
 15712                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 15713                           ;	Boot Block Write Protection bit
 15714                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 15715                           ;	Data EEPROM Write Protection bit
 15716                           ;	WRTD = OFF, Data EEPROM not write-protected
 15717  30000B                     	org	3145739
 15718  30000B  E0                 	db	224
 15719                           
 15720                           ;Config register CONFIG7L @ 0x30000C
 15721                           ;	Table Read Protection Block 0
 15722                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 15723                           ;	Table Read Protection Block 1
 15724                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 15725                           ;	Table Read Protection Block 2
 15726                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 15727                           ;	Table Read Protection Block 3
 15728                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 15729  30000C                     	org	3145740
 15730  30000C  0F                 	db	15
 15731                           
 15732                           ;Config register CONFIG7H @ 0x30000D
 15733                           ;	Boot Block Table Read Protection bit
 15734                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 15735  30000D                     	org	3145741
 15736  30000D  40                 	db	64
 15737                           tosu	equ	0xFFF
 15738                           tosh	equ	0xFFE
 15739                           tosl	equ	0xFFD
 15740                           stkptr	equ	0xFFC
 15741                           pclatu	equ	0xFFB
 15742                           pclath	equ	0xFFA
 15743                           pcl	equ	0xFF9
 15744                           tblptru	equ	0xFF8
 15745                           tblptrh	equ	0xFF7
 15746                           tblptrl	equ	0xFF6
 15747                           tablat	equ	0xFF5
 15748                           prodh	equ	0xFF4
 15749                           prodl	equ	0xFF3
 15750                           indf0	equ	0xFEF
 15751                           postinc0	equ	0xFEE
 15752                           postdec0	equ	0xFED
 15753                           preinc0	equ	0xFEC
 15754                           plusw0	equ	0xFEB
 15755                           fsr0h	equ	0xFEA
 15756                           fsr0l	equ	0xFE9
 15757                           wreg	equ	0xFE8
 15758                           indf1	equ	0xFE7
 15759                           postinc1	equ	0xFE6
 15760                           postdec1	equ	0xFE5
 15761                           preinc1	equ	0xFE4
 15762                           plusw1	equ	0xFE3
 15763                           fsr1h	equ	0xFE2
 15764                           fsr1l	equ	0xFE1
 15765                           bsr	equ	0xFE0
 15766                           indf2	equ	0xFDF
 15767                           postinc2	equ	0xFDE
 15768                           postdec2	equ	0xFDD
 15769                           preinc2	equ	0xFDC
 15770                           plusw2	equ	0xFDB
 15771                           fsr2h	equ	0xFDA
 15772                           fsr2l	equ	0xFD9
 15773                           status	equ	0xFD8

Data Sizes:
    Strings     230
    Constant    0
    Data        32
    BSS         264
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     203
    BANK2           256      0      80
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_27(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_22(CODE[4]), STR_21(CODE[4]), STR_18(CODE[4]), STR_17(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_16(CODE[13]), STR_14(CODE[14]), STR_12(CODE[16]), STR_10(CODE[16]), 
		 -> STR_8(CODE[18]), STR_6(CODE[16]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2363_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_15(CODE[17]), STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> STR_7(CODE[17]), STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), 
		 -> stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _startMotor->_speedControl
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  100437
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   93759
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   93759
                                            129 BANK0     18    18      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
                         _startMotor
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (3) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (4) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (4) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (5) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (4) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (4) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (4) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (5) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (5) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (5) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (5) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (5) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1484
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1596
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flge
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       ___flsub
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fleq
               ___flge
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___flmul
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flneg
               ___flsub
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fltol
                 ___fladd (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
                 _fabsf (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
       _startMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _calculatedAverageValue
           ___lldiv
           ___lmul
           ___xxtofl
             ___lldiv (ARG)
         _scanAdcConversion
           ___fldiv
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _readAdcValue
         _speedControl
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
       _stopMotor
         _PWM1_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _PWM2_setDC
           ___fltol
             ___fladd (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
             _fabsf (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           ___xxtofl
             ___lldiv (ARG)
           _fabsf
             ___xxtofl (ARG)
               ___lldiv (ARG)
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      50       8       31.2%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      CB       6       79.3%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     219       9        0.0%
DATA                 0      0     219      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sat Aug 15 18:06:56 2020

                   ___fldiv@aexp 004D                     ___fldiv@bexp 004C  
                   ___fldiv@sign 0045                               l41 5A34  
                             l35 598E                               l38 59B6  
                             l54 24D2                               l70 5CC2  
                             l72 5CD0                               l57 3A72  
                             l73 5CD2                               l76 5C0C  
                             l78 5C1A                               _KD 01C3  
                             l79 5C1E                               l96 57B0  
                             l98 57C6                               _KP 01C7  
                   ___awdiv@sign 0006              ___wmul@multiplicand 0003  
            __end_of_system_init 4A04                              l100 57DC  
                            l102 57F2                              l110 5D26  
                            l104 57F4         ??_calculatedAverageValue 001C  
                            l122 5B50                              l107 5CF0  
                            l116 56DC                              l119 53C2  
                            l311 461A                              l400 5C6E  
                            l320 473A                              l312 463A  
                            l128 5440                              l321 475A  
                            l313 465A                              l314 467A  
                            l243 5CF8                              l323 477A  
                            l315 469A                              l316 46BA  
                            l404 5534                              l340 13CA  
                            l308 5C46                              l317 46DA  
                            l246 5D06                              l318 46FA  
                            l319 471A                              l511 531C  
                            l408 54BA                              l440 5A70  
                            l329 55A2                              l249 4A02  
                            l362 185A                              l611 48DE  
                            l443 5B86                              l339 1376  
                            l364 18F2                              l437 412A  
                            l518 532C                     _startIsClick 01A9  
                            l481 5D18                              l715 512E  
                            l379 1CCC                              l484 5C94  
                            l743 5288                              l495 55FC  
                            l728 51DE                              l496 560C  
                            l754 4C0C                              l749 4BC6  
                            l781 4B08                              l598 45F6  
                            l758 5AE0                              _PR2 000FBB  
                            _abs 59B8                              _pad 4FA6  
                   ___awmod@sign 0006                              wreg 000FE8  
                   ___flmul@aexp 002D                     ___flmul@bexp 002E  
                   ___flmul@sign 0028                     ___flmul@temp 0033  
                   ___flmul@prod 002F                      _stopIsClick 01A8  
                   ___fltol@exp1 0057                             l1012 2CF8  
                           l1021 2FC8                             l1013 2CE6  
                           l1102 33F2                             l1014 2CAC  
                           l1105 3284                             l1210 4FEC  
                           l1115 33B4                             l1107 32FC  
                           ?_abs 0013                             l1108 32EA  
                           l1213 502E                             l1221 3B14  
                           l1029 2E12                             l1038 2EE2  
                           l1054 5930                             l1142 42DE  
                           l1215 506A                             l1223 3B1C  
                           l1071 35B0                             l1039 2ED0  
                           l1303 0E78                             l1080 3698  
                           l1160 5BF0                             l1241 3D56  
                           l1153 4276                             l1066 378C  
                           l1146 421A                             l1139 4182  
                           l1068 35EC                             l1077 3632  
                           l1422 4466                             l1079 36AA  
                           l1431 3F6C                             l1167 5898  
                           l1512 573C                             l1441 5B18  
                           l1425 446E                             l4001 2C2A  
                           l1361 2B08                             l1098 308E  
                           l1434 3EB0                             l4011 2C3E  
                           l4003 2C2E                             l1507 5734  
                           l1259 12AC                             l4101 2EA4  
                           l4021 2C78                             l4013 2C42  
                           l4005 2C32                             l1277 0ADC  
                           l1470 4FA4                             l1391 59EE  
                           l4111 2EFE                             l4103 2EB2  
                           l4031 2CCA                             l4023 2C94  
                           l4015 2C46                             l4007 2C36  
                           l1455 5AA8                             l1375 566E  
                           l1376 5676                             l1449 58EA  
                           l4201 458E                             l1481 5D28  
                           l4121 2F68                             l4113 2F0C  
                           l4105 2EC8                             l4041 2D16  
                           l4033 2CD8                             l4025 2CA4  
                           l4009 2C3A                             l4017 2C4A  
                           l5001 0C2A                             l1369 2A4E  
                           l1394 59F6                             l1386 4D0A  
                           l4203 45A0                             l4131 2FA2  
                           l4123 2F88                             l4115 2F46  
                           l4051 2D56                             l4035 2CDA  
                           l4027 2CBA                             l4019 2C4E  
                           l5011 0D3E                             l5003 0C8E  
                           l4205 45A6                             l4221 47B2  
                           l4213 477C                             l4141 5932  
                           l1493 5BBC                             l4301 3516  
                           l4133 2FA8                             l4125 2F8C  
                           l4109 2EF2                             l4117 2F48  
                           l4061 2D80                             l4053 2D62  
                           l4045 2D2A                             l4037 2CE4  
                           l4029 2CC6                             l5101 1120  
                           l5021 0DFC                             l5013 0D72  
                           l5005 0CE6                             l1478 5974  
                           l4207 45B6                             l4231 481A  
                           l4223 47C0                             l4215 4780  
                           l4143 593E                             l4151 5B94  
                           l4311 3554                             l4303 3516  
                           l4135 2FB6                             l4127 2F9A  
                           l4119 2F58                             l4071 2DF2  
                           l4055 2D66                             l4047 2D3A  
                           l4039 2D06                             l4063 2D86  
                           l1487 5798                             l5111 1152  
                           l5103 1128                             l5031 0E70  
                           l5023 0E0C                             l5015 0DA4  
                           l5007 0D1A                             l4209 45D6  
                           l4233 4828                             l4241 488E  
                           l4225 47E0                             l4217 478E  
                           l4145 5950                             l4153 5B98  
                           l4321 35A0                             l4313 3564  
                           l4401 301C                             l4137 2FB8  
                           l4129 2FA0                             l4081 2E4C  
                           l4065 2DAC                             l4073 2E02  
                           l4057 2D74                             l4049 2D48  
                           l5113 1158                             l5121 11A8  
                           l5105 1136                             l5041 0F2E  
                           l5033 0E94                             l5025 0E40  
                           l5017 0DBA                             l5009 0D20  
                           l1497 4EDA                             l5201 4E06  
                           l6001 1942                             l4163 5C70  
                           l4171 4474                             l4243 489E  
                           l4235 4856                             l4227 47FE  
                           l4219 47AE                             l4147 5954  
                           l4155 5BB0                             l4331 35EA  
                           l4323 35AE                             l4315 3574  
                           l4307 352A                             l4251 3400  
                           l4411 3048                             l4403 302C  
                           l4091 2E7C                             l4083 2E56  
                           l4075 2E28                             l4067 2DE0  
                           l4059 2D76                             l5131 11F8  
                           l5123 11BA                             l5115 117E  
                           l5107 113E                             l5051 0F76  
                           l5043 0F3C                             l5035 0EF8  
                           l5027 0E50                             l5019 0DEC  
                           l5211 4E62                             l5203 4E30  
                           l6011 1996                             l6003 195A  
                           l6101 5A1A                             l4165 5C8C  
                           l4181 44D4                             l4173 4482  
                           l4245 48BE                             l4237 4876  
                           l4229 4806                             l4149 5B88  
                           l4341 3630                             l4333 35FC  
                           l4325 35BA                             l4317 357C  
                           l4309 3544                             l4261 3440  
                           l4253 340E                             l4501 339C  
                           l4421 309E                             l4413 3058  
                           l4405 3032                             l4093 2E80  
                           l4085 2E64                             l4077 2E38  
                           l4069 2DE2                             l5133 1200  
                           l5125 11D4                             l5117 119A  
                           l5109 1146                             l5061 0FA0  
                           l5053 0F7A                             l5037 0F08  
                           l5045 0F44                             l5029 0E64  
                           l5213 4E7E                             l5221 5978  
                           l6021 19B8                             l6005 196E  
                           l6103 5A22                             l6111 534E  
                           l4191 451E                             l4183 44D8  
                           l4175 44A2                             l4239 4888  
                           l4351 3690                             l4335 3612  
                           l4343 3642                             l4327 35D8  
                           l4319 358C                             l4271 3466  
                           l4263 3442                             l4255 3410  
                           l4503 33B8                             l4511 33DE  
                           l4431 30D8                             l4423 30AE  
                           l4415 3068                             l4407 3038  
                           l4095 2E90                             l4087 2E66  
                           l4159 5A72                             l5151 1286  
                           l5143 1250                             l5135 1210  
                           l5127 11DA                             l5119 11A2  
                           l5071 0FD4                             l5063 0FA6  
                           l5055 0F80                             l5047 0F58  
                           l5039 0F1C                             l5215 4E90  
                           l5207 4E3C                             l5311 4204  
                           l5303 41BC                             l5231 59AE  
                           l5223 5978                             l6023 19C6  
                           l6031 19E0                             l6015 19A4  
                           l6007 1978                             l5241 57C0  
                           l6105 5D1A                             l6121 5392  
                           l6113 5366                             l5161 42F4  
                           l4193 452C                             l4185 44E4  
                           l4177 44A6                             l4169 4470  
                           l4361 36FE                             l4345 3650  
                           l4337 3618                             l4329 35DA  
                           l4281 34A6                             l4273 3474  
                           l4257 3420                             l4265 344A  
                           l4249 33F4                             l4513 33E2  
                           l4505 33C8                             l4441 312A  
                           l4433 30EE                             l4417 3078  
                           l4409 3046                             l4089 2E74  
                           l4097 2E92                             l5153 128C  
                           l5145 1262                             l5137 1216  
                           l5129 11EC                             l5057 0F8C  
                           l5049 0F66                             l5065 0FAC  
                           l5073 0FDA                             l5081 1072  
                           l5217 4EB8                             l5209 4E4A  
                           l5321 4284                             l5313 4210  
                           l5305 41C4                             l5225 598A  
                           l6041 1A38                             l6033 19F2  
                           l6025 19C8                             l6017 19AA  
                           l6009 1988                             l5243 57C8  
                           l5235 579C                             l6131 53B0  
                           l6123 5398                             l6115 536C  
                           l6107 532E                             l5171 4352  
                           l5163 42F8                             l4195 453E  
                           l4187 4502                             l4179 44B4  
                           l4531 508A                             l4523 506C  
                           l4371 3768                             l4355 36BA  
                           l4363 3702                             l4347 3654  
                           l4339 3622                             l4291 34E6  
                           l4283 34A8                             l4275 3476  
                           l4267 345A                             l4259 3430  
                           l4611 525C                             l4603 51E0  
                           l4507 33D6                             l4451 3170  
                           l4443 3138                             l4435 30FA  
                           l4427 30C2                             l4419 307E  
                           l4099 2EA0                             l5147 126E  
                           l5139 121C                             l5091 10E0  
                           l5083 1090                             l5075 1032  
                           l5067 0FBE                             l5059 0F9C  
                           l5411 2910                             l5403 28AA  
                           l5331 42CC                             l5323 4286  
                           l5315 424C                             l5307 41D0  
                           l5251 5BBE                             l5227 598C  
                           l6051 1ABE                             l6043 1A44  
                           l6035 19FC                             l6027 19CC  
                           l6019 19AE                             l6211 4D1C  
                           l6203 4D0C                             l5245 57D6  
                           l5237 57AA                             l6133 53B6  
                           l6125 539E                             l6117 537C  
                           l6109 5348                             l5181 437E  
                           l5165 42FC                             l4197 456C  
                           l4189 450A                             l4701 4FE4  
                           l4541 50BE                             l4533 5098  
                           l4525 5070                             l4373 376C  
                           l4365 371C                             l4357 36C6  
                           l4349 3662                             l4293 34EE  
                           l4277 3486                             l4285 34B0  
                           l4269 3460                             l4613 5280  
                           l4605 520E                             l4621 4B38  
                           l4509 33D8                             l4461 31DE  
                           l4453 318A                             l4445 3144  
                           l4437 3112                             l4429 30CE  
                           l4517 58EC                             l5149 1276  
                           l5093 10E4                             l5085 10AC  
                           l5077 1066                             l5069 0FD0  
                           l5421 29D8                             l5405 28BC  
                           l5341 2506                             l5333 42CE  
                           l5325 428A                             l5317 4258  
                           l5309 4202                             l5253 5BDE  
                           l5261 55B4                             l5229 599C  
                           l5501 238E                             l6061 1B2A  
                           l6053 1ACE                             l6045 1A54  
                           l6037 1A08                             l6029 19DC  
                           l6141 5C20                             l6221 4D38  
                           l6213 4D20                             l6205 4D10  
                           ?_pad 0011                             l5247 57DE  
                           l5239 57B2                             l6135 53BC  
                           l6127 53A4                             l6119 5382  
                           l5191 4426                             l5183 43B2  
                           l5175 4358                             l5167 4318  
                           l5159 42E0                             l4199 458C  
                           l4711 5052                             l4703 4FF8  
                           l4551 50F8                             l4543 50C6  
                           l4535 50A0                             l4527 507E  
                           l4375 377A                             l4367 3732  
                           l4359 36D4                             l4295 34F2  
                           l4287 34C0                             l4279 3496  
                           l4615 5286                             l4607 521E  
                           l4631 4BA6                             l4623 4B48  
                           l4471 3274                             l4463 3208  
                           l4455 319A                             l4447 3154  
                           l4439 311E                             l4391 2FE4  
                           l4519 58FC                             l5095 10F6  
                           l5087 10BE                             l5079 106E  
                           l5423 29EA                             l5431 2A62  
                           l5407 28D2                             l5415 293C  
                           l5351 2584                             l5343 2518  
                           l5327 42AE                             l5319 4266  
                           l5255 5BE0                             l5271 529A  
                           l5263 55C2                             l5503 239C  
                           l6071 1B7C                             l6063 1B34  
                           l6055 1ADE                             l6047 1A86  
                           l6039 1A12                             l6151 49B2  
                           l6143 5D08                             l6231 4D78  
                           l6223 4D44                             l6215 4D24  
                           l6207 4D14                             l5249 57EC  
                           l6129 53AA                             l6137 5CF2  
                           l5193 4438                             l5177 436E  
                           l5169 434E                             l4705 500C  
                           l4801 3A94                             l4561 511E  
                           l4553 5100                             l4545 50CE  
                           l4537 50A4                             l4529 5086  
                           l4377 3780                             l4369 374C  
                           l4289 34D6                             l4609 524C  
                           l4633 4BB4                             l4625 4B76  
                           l4481 32B4                             l4473 3282  
                           l4465 323E                             l4457 31B6  
                           l4449 3160                             l4393 2FE6  
                           l4641 5AAA                             l4721 4C2E  
                           l5097 1108                             l5089 10CE  
                           l5433 2A86                             l5441 2AB6  
                           l5425 2A1E                             l5417 296A  
                           l5409 28E0                             l5361 2608  
                           l5353 2592                             l5345 251C  
                           l5337 24D4                             l5601 560E  
                           l5329 42BE                             l5281 52DC  
                           l5273 52B0                             l5265 55D2  
                           l5521 3980                             l5505 2406  
                           l6081 1C06                             l6073 1B8C  
                           l6065 1B40                             l6057 1AE2  
                           l6049 1A8A                             l6161 49C6  
                           l6153 49B6                             l6145 5D14  
                           l6241 4DC4                             l6233 4D8A  
                           l6225 4D54                             l6217 4D28  
                           l6209 4D18                             l5531 5CE0  
                           l6171 5C48                             l6139 5CF6  
                           l5611 5BF8                             l5195 444A  
                           l5187 43E8                             l5179 4376  
                           l4715 59B8                             l3931 4F0A  
                           l4707 5010                             l4811 3B08  
                           l4803 3ABC                             l4563 5126  
                           l4555 5102                             l4547 50DC  
                           l4539 50AC                             l4571 5142  
                           l4379 3782                             l4299 3506  
                           l4635 4C04                             l4627 4B86  
                           l4619 4B0A                             l4491 3326  
                           l4483 32E2                             l4475 3294  
                           l4467 324C                             l4459 31C2  
                           l4395 2FF6                             l4387 2FCA  
                           l4643 5AC0                             l4651 4A1A  
                           l4723 4C6C                             l4731 4CAC  
                           l5099 1110                             l5443 2AC4  
                           l5435 2A94                             l5371 267A  
                           l5355 25B2                             l5363 261A  
                           l5347 2540                             l5339 24F8  
                           l5603 5616                             l5291 412E  
                           l5283 52FA                             l5275 52B8  
                           l5267 55DC                             l5259 55A4  
                           l5523 3A28                             l5515 378E  
                           l6083 1C16                             l6075 1BBE  
                           l6067 1B4A                             l6059 1B16  
                           l6163 49D0                             l6155 49B8  
                           l6147 5D16                             l6243 4DC8  
                           l6235 4D9A                             l6227 4D56  
                           l6219 4D2C                             l5533 5CEE  
                           l5525 5CD6                             l6173 5C4C  
                           l5701 4696                             l5541 5B32  
                           l5621 5C06                             l5613 5BFC  
                           l4717 59D2                             l3933 4F28  
                           l3925 4EDC                             l4709 503E  
                           l4821 3B52                             l4813 3B24  
                           l4805 3ADC                             l4557 5108  
                           l4549 50E2                             l4581 5176  
                           l4573 514A                             l4637 4C0A  
                           l4629 4B94                             l4493 3350  
                           l4477 32A2                             l4469 326A  
                           l4397 3006                             l4389 2FD6  
                           l4645 5AD0                             l3941 2B16  
                           l4661 4A6A                             l4733 4CBE  
                           l4725 4C94                             l4741 573E  
                           l4901 0830                             l5437 2AA8  
                           l5381 272A                             l5373 26B4  
                           l5365 263E                             l5357 25C0  
                           l5349 2576                             l5605 5624  
                           l5293 413E                             l5285 530A  
                           l5277 52C4                             l5269 528A  
                           l5517 37C0                             l5461 1D4A  
                           l5509 2476                             l6333 1C7E  
                           l6085 1C1A                             l6077 1BC2  
                           l6069 1B70                             l6093 1C66  
                           l6181 553E                             l6165 49DA  
                           l6157 49BA                             l6149 48E0  
                           l6245 4DDC                             l6237 4DA0  
                           l6229 4D66                             l5527 5CD8  
                           l6175 5C5C                             l5711 46E8  
                           l5703 46A8                             l5631 56A2  
                           l5551 5B46                             l5543 5B34  
                           l5535 5B1C                             l5623 5C0A  
                           l5615 5BFE                             l3935 4F5E  
                           l3927 4EEE                             l4831 3BF0  
                           l4823 3B5C                             l4815 3B36  
                           l4807 3AEC                             l4559 510E  
                           l4591 51B2                             l4583 517E  
                           l4575 514E                             l4567 5130  
                           l4487 330C                             l4495 3354  
                           l4479 32A6                             l4399 3016  
                           l3951 2B56                             l3943 2B24  
                           l4671 4A94                             l4663 4A6E  
                           l4655 4A2E                             l4727 4CA0  
                           l4719 4C0E                             l4743 574E  
                           l4751 5726                             l4911 08A0  
                           l4903 0848                             l5391 27B0  
                           l5375 26D4                             l5367 2648  
                           l5383 273C                             l5447 2AD2  
                           l5607 5652                             l5295 414C  
                           l5287 530C                             l5279 52D2  
                           l5519 3886                             l6335 248C  
                           l5471 1EB0                             l5463 1DBA  
                           l5455 1CCE                             l6079 1BF6  
                           l6087 1C4E                             l6191 5574  
                           l6183 554E                             l6167 49F2  
                           l6159 49BC                             l6247 4DF2  
                           l6239 4DB0                             l5529 5CDE  
                           l5721 4736                             l5713 46F6  
                           l5705 46B6                             l5633 56AC  
                           l5625 567A                             l5553 5B4E  
                           l5545 5B3C                             l5537 5B28  
                           l5641 53C4                             l5617 5C00  
                           l5609 5BF4                             l6337 439C  
                           l3929 4F00                             l4841 3CC0  
                           l4825 3B62                             l4833 3C54  
                           l4817 3B44                             l4809 3AEE  
                           l4593 51B8                             l4585 5186  
                           l4577 515C                             l4569 5134  
                           l4497 336E                             l4489 3318  
                           l3961 2B88                             l3953 2B58  
                           l3945 2B26                             l4681 4ABC  
                           l4673 4A9E                             l4665 4A7C  
                           l4657 4A58                             l4649 4A04  
                           l4737 4D02                             l4761 3DE4  
                           l4745 56DE                             l4905 0852  
                           l5449 2AF6                             l5393 27E2  
                           l5385 275E                             l5377 26E2  
                           l5369 2656                             l5297 4192  
                           l5561 551C                             l5289 5316  
                           l5481 2066                             l5473 1F1A  
                           l5465 1DC8                             l5457 1CD2  
                           l5801 1496                             l6193 5582  
                           l6185 5550                             l6177 5536  
                           l6169 49FA                             l6249 4DFA  
                           l6099 59F8                             l5723 4748  
                           l5715 4708                             l5707 46C8  
                           l5635 56BE                             l5627 568A  
                           l5547 5B3E                             l5539 5B2A  
                           l5643 53D0                             l5619 5C02  
                           l4851 3D0A                             l4835 3C6E  
                           l4843 3CD0                             l4827 3BE4  
                           l4819 3B4A                             l4587 5194  
                           l4595 51BE                             l4579 5164  
                           l4499 3382                             l3971 2BB0  
                           l3963 2B8A                             l3947 2B36  
                           l3955 2B60                             l3939 2B0A  
                           l4683 4AC8                             l4675 4AA8  
                           l4659 4A5A                             l4763 3DF2  
                           l4771 3ED4                             l4755 3D58  
                           l4915 08D6                             l5395 2806  
                           l5387 276E                             l5651 585A  
                           l5299 41A8                             l5555 54BC  
                           l5563 5442                             l5491 21CC  
                           l5483 20D6                             l5475 1F86  
                           l5467 1E32                             l5459 1CE0  
                           l5571 3F6E                             l5811 14C4  
                           l5803 1498                             l5731 12AE  
                           l6195 5592                             l6187 5562  
                           l6179 553A                             l5725 4756  
                           l5717 4716                             l5709 46D6  
                           l5637 56D0                             l5629 569C  
                           l5549 5B44                             l5645 5400  
                           l4693 4FA6                             l4853 3D16  
                           l4845 3CE2                             l4837 3C8C  
                           l4829 3BEA                             l4597 51CE  
                           l4589 51AA                             l3981 2BEA  
                           l3973 2BC0                             l3965 2B90  
                           l3957 2B70                             l3949 2B46  
                           l4685 4AD8                             l4773 3F10  
                           l4757 3D78                             l4749 5714  
                           l4941 0A38                             l4933 0970  
                           l4917 08E8                             l4909 087A  
                           l4861 06E8                             l5397 282A  
                           l5389 27A0                             l5653 5862  
                           l5557 54BC                             l5565 5442  
                           l5493 2236                             l5485 20E4  
                           l5477 1FEE                             l5469 1EA2  
                           l5581 407C                             l5573 3F6E  
                           l5661 5B52                             l5901 169C  
                           l5821 14EC                             l5813 14C8  
                           l5805 149E                             l5741 1304  
                           l5733 12BE                             l6197 5594  
                           l6189 5572                             l5727 4768  
                           l5719 4728                             l5639 56D6  
                           l5647 5404                             l4783 5AE2  
                           l4791 58B2                             l4695 4FB6  
                           l4855 3D1E                             l4847 3CF2  
                           l4839 3CA6                             l4599 51D6  
                           l3991 2C16                             l3983 2BFC  
                           l3975 2BD0                             l3967 2B9E  
                           l3959 2B76                             l4687 4AE8  
                           l4775 3F24                             l4767 3E64  
                           l4759 3DD0                             l4951 0A98  
                           l4943 0A40                             l4935 09A4  
                           l4919 0904                             l4927 0920  
                           l4871 073C                             l4863 06F2  
                           l5399 2872                             l5655 586A  
                           l5559 54D4                             l5567 545A  
                           l5495 22A6                             l5487 214E  
                           l5479 1FFC                             l5591 40DA  
                           l5583 408A                             l5575 3F6E  
                           l5663 5B56                             l5671 5A64  
                           l5911 16CA                             l5903 16A2  
                           l5831 1512                             l5815 14D2  
                           l5807 14AE                             l5823 14F2  
                           l5751 1360                             l5743 1310  
                           l5735 12C8                             l5729 4776  
                           l5681 45F8                             l4793 58E0  
                           l4697 4FCA                             l4849 3CF8  
                           l4857 3D2E                             l3993 2C1A  
                           l3985 2C0A                             l3977 2BD2  
                           l3969 2BA0                             l4689 4AF8  
                           l4777 3F4C                             l4769 3EA0  
                           l4953 0AAC                             l4937 09AA  
                           l4945 0A72                             l4929 093A  
                           l4881 0784                             l4873 0746  
                           l4865 0702                             l5657 5886  
                           l5649 5848                             l5569 54A2  
                           l5497 22B4                             l5489 21BE  
                           l5593 40E2                             l5585 409A  
                           l5577 3FAE                             l5665 5B5A  
                           l5921 16FE                             l5913 16DC  
                           l5905 16B2                             l5841 153C  
                           l5833 151C                             l5825 1502  
                           l5817 14DC                             l5809 14C0  
                           l5761 13C0                             l5753 1388  
                           l5745 1324                             l5737 12D4  
                           l5673 5CB8                             l5691 4648  
                           l5683 4608                             l4795 58E4  
                           l4787 589A                             l4699 4FD8  
                           l3995 2C1E                             l3987 2C0E  
                           l3979 2BDA                             l4779 3F5C  
                           l4971 0B62                             l4955 0AB4  
                           l4947 0A82                             l4939 0A04  
                           l4883 0790                             l4891 07A6  
                           l4875 074E                             l4867 0710  
                           l5499 231E                             l5595 40FE  
                           l5587 40B6                             l5579 4074  
                           l5667 5A36                             l5931 172C  
                           l5923 1710                             l5915 16E0  
                           l5907 16B4                             l5851 158E  
                           l5843 1548                             l5835 1524  
                           l5827 1504                             l5819 14E4  
                           l5771 1400                             l5763 13C2  
                           l5755 139A                             l5747 1332  
                           l5739 12DE                             l5675 5CBC  
                           l5693 4656                             l5685 4616  
                           l4789 589E                             l3997 2C22  
                           l3989 2C12                             l4981 0B9A  
                           l4973 0B6A                             l4965 0AFC  
                           l4957 0ACE                             l4949 0A86  
                           l4893 07CC                             l4885 0798  
                           l4877 0760                             l4869 0718  
                           l5597 4106                             l5589 40BE  
                           l5669 5A58                             l5933 1738  
                           l5925 1714                             l5917 16E4  
                           l5909 16BA                             l5861 15BA  
                           l5853 1598                             l5845 1552  
                           l5837 152C                             l5829 1508  
                           l5781 1434                             l5773 1410  
                           l5765 13C4                             l5757 13AC  
                           l5749 134E                             l5677 5CBE  
                           l5695 4668                             l5687 4628  
                           l4799 3A74                             l3999 2C26  
                           l4991 0BE4                             l4983 0BA8  
                           l4967 0B10                             l4975 0B6E  
                           l4959 0AE8                             l4887 079C  
                           l4879 0770                             l5599 4122  
                           l5951 17B4                             l5943 1782  
                           l5935 1742                             l5927 1718  
                           l5919 16EE                             l5871 15E8  
                           l5863 15BC                             l5855 15A0  
                           l5847 156E                             l5839 1532  
                           l5791 1476                             l5775 1418  
                           l5767 13DC                             l5783 143C  
                           l5759 13BC                             l5679 5CC0  
                           l5697 4676                             l5689 4636  
                           l4993 0BF6                             l4985 0BAC  
                           l4977 0B76                             l4969 0B2C  
                           l4897 0802                             l4889 07A0  
                           l5961 1800                             l5953 17BC  
                           l5945 1794                             l5937 175E  
                           l5929 1722                             l5881 161E  
                           l5873 15EE                             l5865 15C2  
                           l5857 15A6                             l5849 157A  
                           l5793 1478                             l5785 144E  
                           l5777 1430                             l5769 13EE  
                           l5699 4688                             l4987 0BBE  
                           l4995 0BFE                             l4979 0B88  
                           l4899 0814                             l5963 1810  
                           l5955 17C4                             l5947 179E  
                           l5939 176A                             l5891 164E  
                           l5883 1624                             l5867 15D2  
                           l5875 15F8                             l5859 15AA  
                           l5795 147A                             l5787 1460  
                           l5779 1432                             l4997 0C06  
                           l4989 0BCC                             l5981 188E  
                           l5973 1860                             l5965 1812  
                           l5957 17CE                             l5949 17AA  
                           l5893 166A                             l5877 1608  
                           l5885 162E                             l5869 15E4  
                           l5797 1480                             l5789 1472  
                           l4999 0C16                             l5991 18DC  
                           l5983 1898                             l5975 1872  
                           l5967 183A                             l5959 17F4  
                           l5895 1676                             l5887 1638  
                           l5879 161A                             l5799 1486  
                           l5993 1904                             l5985 18BE  
                           l5977 1878                             l5969 184C  
                           l5897 168A                             l5889 1644  
                           l5995 1916                             l5987 18CA  
                           l5979 1882                             l5899 1698  
                           l5997 1928                             l5989 18DA  
                           l5999 193A                             STR_1 0635  
                           STR_2 06AA                             STR_3 0668  
                           STR_4 0601                             STR_5 0679  
                           STR_6 068A                             STR_7 0624  
                           STR_8 0601                             STR_9 0646  
                           u4000 2BC0                             u4001 2BBC  
                           u4010 2BFC                             u4011 2BF8  
                           u4100 2D16                             u4020 2C0A  
                           u4101 2D12                             u4021 2C06  
                           u4110 2D48                             u4030 2C78  
                           u4111 2D44                             u4031 2C74  
                           u5000 5176                             u4200 2E90  
                           u4120 2D56                             u4040 2C90  
                           u5001 5172                             u4201 2E8C  
                           u4121 2D52                             u4041 2C8A  
                           u5010 5194                             u4210 2EA0  
                           u4130 2D74                             u4050 2C92  
                           u5011 5190                             u4211 2E9C  
                           u4131 2D70                             u5020 51AA  
                           u5100 4BB4                             u4300 2F88  
                           u4220 2EB2                             u4140 2DAC  
                           u4060 2CBA                             u5021 51A6  
                           u5101 4BB0                             u4301 2F84  
                           u4221 2EAE                             u4141 2DA8  
                           u4061 2CB6                             u5030 51CE  
                           u5110 4C04                             u4310 2F9A  
                           u4230 2EC8                             u4150 2DF2  
                           u4070 2CD8                             u5031 51CA  
                           u5111 4C00                             u4311 2F96  
                           u4231 2EC4                             u4151 2DEE  
                           u4071 2CD4                             u4400 4502  
                           u5200 4FB6                             u5040 520E  
                           u5120 5AC0                             u4320 2FB6  
                           u4240 2EDE                             u4160 2E28  
                           u4080 2CF8                             u6000 0F1C  
                           u4401 44FE                             u5201 4FB2  
                           u5041 520A                             u5121 5ABC  
                           u4321 2FB2                             u4241 2EDA  
                           u4161 2E24                             u4081 2CF4  
                           u6001 0F18                             u4410 452C  
                           u4330 5974                             u5210 4FD8  
                           u5050 524C                             u4250 2EF2  
                           u4170 2E38                             u4090 2D06  
                           u5130 4A1A                             u6010 0F2E  
                           u4411 4528                             u4331 5970  
                           u5211 4FD4                             u5051 5248  
                           u4251 2EEE                             u4171 2E34  
                           u4091 2D02                             u5131 4A16  
                           u6011 0F2A                             u4420 456C  
                           u4340 5BB0                             u5220 502E  
                           u4500 340E                             u5060 5280  
                           u4260 2F0C                             u4180 2E64  
                           u5140 4A4E                             u5300 4CF8  
                           u6100 1108                             u6020 0F3C  
                           u4421 4568                             u4341 5BAC  
                           u5221 502A                             u4501 340A  
                           u5061 527C                             u4261 2F08  
                           u4181 2E60                             u5301 4CF2  
                           u6101 1104                             u6021 0F38  
                           u4430 45B6                             u5230 503E  
                           u4510 3420                             u5070 4B38  
                           u4270 2F46                             u4190 2E74  
                           u5150 4A7C                             u5310 4CFA  
                           u4350 5AA2                             u6110 1136  
                           u6030 0F58                             u4431 45B2  
                           u5231 503A                             u4511 341C  
                           u5071 4B34                             u4271 2F42  
                           u4191 2E70                             u5151 4A78  
                           u4351 5A9C                             u6111 1132  
                           u6031 0F54                             u7000 46F6  
                           u6200 436A                             u4440 478E  
                           u5240 59D2                             u4600 35D8  
                           u4520 3430                             u5080 4B76  
                           u4280 2F58                             u5160 4A90  
                           u5320 5786                             u4360 5AA4  
                           u6120 11BA                             u6040 0F66  
                           u7001 46F2                             u6201 4366  
                           u4441 478A                             u5241 59CE  
                           u4601 35D4                             u4521 342C  
                           u5081 4B72                             u4281 2F54  
                           u5161 4A8C                             u5145 4A44  
                           u6121 11B6                             u6041 0F62  
                           u7010 4708                             u6210 4420  
                           u4370 4482                             u4450 47C0  
                           u4610 35FC                             u4530 3474  
                           u5090 4B94                             u4290 2F68  
                           u5170 4AB8                             u5250 4C4E  
                           u5410 3E60                             u5330 5798  
                           u6130 11D4                             u6050 0FBE  
                           u7011 4704                             u6211 441A  
                           u4371 447E                             u4451 47BC  
                           u4611 35F8                             u4531 3470  
                           u5091 4B90                             u4291 2F64  
                           u5171 4AB4                             u5411 3E5C  
                           u5331 5794                             u6131 11D0  
                           u6051 0FBA                             u7020 4716  
                           u5500 58E0                             u6220 4422  
                           u4380 44B4                             u4460 47FE  
                           u3900 4EEE                             u4700 371C  
                           u4620 3612                             u4540 3486  
                           u5180 4AD8                             u5260 4C6C  
                           u5420 3E84                             u5340 570E  
                           u6140 11EC                             u6060 1090  
                           u6300 599C                             u7100 1324  
                           u7021 4712                             u5501 58DC  
                           u4381 44B0                             u4461 47FA  
                           u3901 4EEA                             u4701 3718  
                           u4621 360E                             u4541 3482  
                           u5181 4AD4                             u5261 4C68  
                           u5405 3E06                             u5341 5708  
                           u6141 11E8                             u6061 108C  
                           u6301 5998                             u7101 1320  
                           u6310 57AA                             u7030 4728  
                           u6230 4438                             u4470 4828  
                           u3910 4F00                             u5510 3AA4  
                           u4710 374C                             u4630 3630  
                           u4550 3496                             u5190 4AE8  
                           u5270 4C94                             u5430 3EA0  
                           u5406 3E10                             u5350 5710  
                           u6150 124A                             u6070 10AC  
                           u7110 134E                             u6311 57A6  
                           u7031 4724                             u6231 4434  
                           u4391 44DE                             u4471 4824  
                           u3911 4EFC                             u5511 3A9E  
                           u4711 3748                             u4631 362C  
                           u4551 3492                             u5191 4AE4  
                           u5271 4C90                             u5255 4C44  
                           u5431 3E9C                             u5407 3E20  
                           u5327 577C                             u6151 1244  
                           u6071 10A8                             u7111 134A  
                           u6320 57C0                             u7040 4736  
                           u6240 444A                             u4480 4856  
                           u3920 4F28                             u5600 3CA6  
                           u5520 3AA6                             u4720 377A  
                           u4640 3650                             u4560 34D6  
                           u4800 30AE                             u5280 4CBE  
                           u5440 3EF4                             u5360 5726  
                           u6160 124C                             u6080 10BE  
                           u6400 413E                             u7200 1410  
                           u7120 1360                             u6321 57BC  
                           u7041 4732                             u6241 4446  
                           u4481 4852                             u3921 4F24  
                           u5601 3CA2                             u4721 3776  
                           u4641 364C                             u4561 34D2  
                           u4801 30AA                             u5281 4CBA  
                           u5425 3E7A                             u5361 5722  
                           u6081 10BA                             u6401 413A  
                           u7201 140C                             u7121 135C  
                           u6330 57D6                             u7050 4748  
                           u4490 489E                             u3930 4F5E  
                           u5610 3CC0                             u5530 3ABC  
                           u4650 3662                             u4570 3516  
                           u4810 3228                             u4730 2FE4  
                           u5450 3F10                             u5370 3DA0  
                           u6170 1262                             u6090 10CE  
                           u6250 4E30                             u6410 414C  
                           u7210 144E                             u7130 1388  
                           u6331 57D2                             u7051 4744  
                           u4491 489A                             u3931 4F5A  
                           u5611 3CBC                             u5531 3AB8  
                           u4651 365E                             u4571 3512  
                           u4731 2FE0                             u5451 3F0C  
                           u6171 125E                             u6091 10CA  
                           u6251 4E2C                             u6411 4148  
                           u7211 144A                             u7131 1384  
                           u6340 57EC                             u7060 4756  
                           u6180 4318                             u5620 3CD0  
                           u5540 3AEC                             u4660 3690  
                           u4580 358C                             u4900 339C  
                           u4820 3282                             u4740 2FF6  
                           u3940 2B24                             u5460 3F4C  
                           u5380 3DD0                             u5700 07CC  
                           u6260 4E62                             u6500 24F8  
                           u6420 41A8                             u7300 15D2  
                           u7220 1460                             u7140 139A  
                           u6341 57E8                             u7061 4752  
                           u6181 4314                             u5621 3CCC  
                           u5541 3AE8                             u4661 368C  
                           u4581 3588                             u4901 3398  
                           u4821 327E                             u4741 2FF2  
                           u3941 2B20                             u5461 3F48  
                           u5445 3EEA                             u5381 3DCC  
                           u5701 07C8                             u6261 4E5E  
                           u6501 24F4                             u6421 41A4  
                           u7301 15CE                             u7221 145C  
                           u7141 1396                             u7070 4768  
                           u5470 5B12                             u6190 434E  
                           u5630 3CE2                             u5550 3B08  
                           u4670 36A6                             u4590 35AE  
                           u4910 33D6                             u4830 32A2  
                           u4750 3006                             u3950 2B36  
                           u5390 3DF2                             u5710 07FC  
                           u6270 4E7E                             u6510 2540  
                           u6430 41FE                             u6350 55C2  
                           u7310 15E4                             u7230 1472  
                           u7150 13AC                             u7071 4764  
                           u5471 5B0C                             u6191 434A  
                           u5631 3CDE                             u5551 3B04  
                           u4671 36A2                             u4591 35AA  
                           u4911 33D2                             u4831 329E  
                           u4815 321E                             u4751 3002  
                           u3951 2B32                             u5295 4CD0  
                           u5391 3DEE                             u5375 3D96  
                           u5711 07F6                             u6271 4E7A  
                           u6511 253C                             u6431 41FA  
                           u6351 55BE                             u7311 15E0  
                           u7231 146E                             u7151 13A8  
                           u7080 4776                             u5480 5B14  
                           u5640 3CF2                             u5560 3B36  
                           u4920 507E                             u4680 36BA  
                           u4840 32B4                             u4760 3046  
                           u3960 2B46                             u5800 0A72  
                           u5720 07FE                             u6280 4E90  
                           u6600 273C                             u6520 2584  
                           u6440 4248                             u6360 55FC  
                           u7400 177E                             u7320 1608  
                           u7240 1496                             u7160 13BC  
                           u7081 4772                             u5641 3CEE  
                           u5561 3B32                             u4921 507A  
                           u4681 36B6                             u4841 32B0  
                           u4761 3042                             u3961 2B42  
                           u5801 0A6E                             u6281 4E8C  
                           u6601 2738                             u6521 2580  
                           u6441 4244                             u6361 55F8  
                           u7401 177A                             u7321 1604  
                           u7241 1492                             u7161 13B8  
                           u5490 58B2                             u5650 3D0A  
                           u5570 3B44                             u4930 5098  
                           u4690 36D4                             u4850 32E2  
                           u4770 3058                             u3970 2B88  
                           u5810 0A98                             u5730 0814  
                           u6290 4EB8                             u6610 276E  
                           u6530 2602                             u6450 4266  
                           u6370 52B0                             u7410 1810  
                           u7330 161A                             u7250 14AE  
                           u7170 13DC                             u5491 58AE  
                           u5651 3D06                             u5571 3B40  
                           u4931 5094                             u4691 36D0  
                           u4851 32DE                             u4771 3054  
                           u3971 2B84                             u5811 0A94  
                           u5731 0810                             u6291 4EB4  
                           u6611 276A                             u6531 25FC  
                           u6451 4262                             u6371 52AC  
                           u7411 180C                             u7331 1616  
                           u7251 14AA                             u7171 13D8  
                           u7091 12B4                             u5580 3C6E  
                           u4940 50BE                             u4860 32F8  
                           u4780 3068                             u3980 2B9E  
                           u5900 0BA8                             u5820 0AAC  
                           u5740 08A0                             u5660 0710  
                           u6700 2A86                             u6620 27B0  
                           u6540 2604                             u6460 4276  
                           u6380 52D2                             u7500 1996  
                           u7420 184C                             u7340 168A  
                           u7260 14C0                             u7180 13EE  
                           u5581 3C6A                             u4941 50BA  
                           u4861 32F4                             u4781 3064  
                           u3981 2B9A                             u5901 0BA4  
                           u5821 0AA8                             u5741 089C  
                           u5661 070C                             u6701 2A82  
                           u6621 27AC                             u6461 4272  
                           u6381 52CE                             u7501 1992  
                           u7421 1848                             u7341 1686  
                           u7261 14BC                             u7181 13EA  
                           u5590 3C8C                             u4950 50DC  
                           u4870 330C                             u4790 309E  
                           u3990 2BB0                             u5910 0BBE  
                           u5830 0ACE                             u5750 08D0  
                           u5670 0760                             u6630 2806  
                           u6550 261A                             u6470 4284  
                           u6710 54D4                             u6390 52FA  
                           u7510 19C6                             u7430 18DA  
                           u7350 16B2                             u7270 1502  
                           u7190 1400                             u5591 3C88  
                           u4951 50D8                             u4871 3308  
                           u4791 309A                             u3991 2BAC  
                           u5911 0BBA                             u5831 0ACA  
                           u5751 08CA                             u5671 075C  
                           u6631 2802                             u6551 2616  
                           u6471 4280                             u6711 54D0  
                           u6391 52F6                             u7511 19C2  
                           u7431 18D6                             u7351 16AE  
                           u7271 14FE                             u7191 13FC  
                           u6800 56BE                             u4960 50F8  
                           u4880 3326                             u5920 0BCC  
                           u5840 0AF8                             u5760 08D2  
                           u5680 0770                             u6640 282A  
                           u6560 263E                             u6480 42BE  
                           u6720 545A                             u7600 1BBE  
                           u7520 19DC                             u7440 1904  
                           u7360 16CA                             u7280 158E  
                           u6801 56BA                             u4961 50F4  
                           u4881 3322                             u5921 0BC8  
                           u5841 0AF4                             u5681 076C  
                           u6641 2826                             u6561 263A  
                           u6481 42BA                             u6721 5456  
                           u7601 1BBA                             u7521 19D8  
                           u7441 1900                             u7361 16C6  
                           u7281 158A                             u6810 53FC  
                           u4970 511E                             u4890 336E  
                           u5930 0BF6                             u5850 0B10  
                           u5770 08E8                             u5690 0784  
                           u6650 28BC                             u6570 267A  
                           u6490 42CC                             u6730 40B6  
                           u7610 1C06                             u7530 19F2  
                           u7450 1916                             u7370 16DC  
                           u7290 15BA                             u4971 511A  
                           u4891 336A                             u5931 0BF2  
                           u5851 0B0C                             u5771 08E4  
                           u5691 0780                             u6651 28B8  
                           u6571 2676                             u6491 42C8  
                           u6731 40B2                             u7611 1C02  
                           u7531 19EE                             u7451 1912  
                           u7371 16D8                             u7291 15B6  
                           u6900 4656                             u6820 5430  
                           u4980 5142                             u5940 0D3E  
                           u5860 0B2C                             u5780 096C  
                           u6660 296A                             u6580 2724  
                           u6740 40DA                             u7620 1C16  
                           u7540 1A54                             u7460 1928  
                           u7380 16FE                             u7700 4D78  
                           u6901 4652                             u4981 513E  
                           u5941 0D3A                             u5861 0B28  
                           u5781 0968                             u6661 2966  
                           u6581 271E                             u6741 40D6  
                           u7621 1C12                             u7541 1A50  
                           u7461 1924                             u7381 16FA  
                           u7701 4D74                             u6910 4668  
                           u6830 5440                             u4990 515C  
                           u5950 0DA4                             u5870 0B62  
                           u5790 0A00                             u6670 29D2  
                           u6590 2726                             u6750 40FE  
                           u7630 1C62                             u7550 1A86  
                           u7470 193A                             u7390 1710  
                           u7710 4D8A                             u6911 4664  
                           u6831 543C                             u4991 5158  
                           u5951 0DA0                             u5871 0B5E  
                           u5791 09FC                             u6671 29CC  
                           u6751 40FA                             u7631 1C5E  
                           u7551 1A82                             u7471 1936  
                           u7391 170C                             u7711 4D86  
                           u7640 5D06                             u6920 4676  
                           u5960 0DEC                             u5880 0B88  
                           u6680 29D4                             u6760 4122  
                           u7560 1ACE                             u7480 196E  
                           u6840 5CD0                             u7720 4D9A  
                           u7641 5D02                             u6921 4672  
                           u6817 53F2                             u5961 0DE8  
                           u5881 0B84                             u6761 411E  
                           u7561 1ACA                             u7481 196A  
                           u6841 5CCC                             u7721 4D96  
                           u6930 4688                             u6850 4608  
                           u5970 0DFC                             u5890 0B9A  
                           u6690 29EA                             u6770 566E  
                           u7570 1ADE                             u7490 1988  
                           u7650 554E                             u7730 4DC4  
                           u6931 4684                             u6851 4604  
                           u6827 5426                             u5971 0DF8  
                           u5891 0B96                             u6691 29E6  
                           u6771 566A                             u7571 1ADA  
                           u7491 1984                             u7651 554A  
                           u7731 4DC0                             u6940 4696  
                           u6860 4616                             u6780 5C1A  
                           u5980 0E64                             u7580 1B2A  
                           u7660 5572                             u7740 4DF2  
                           u6941 4692                             u6861 4612  
                           u6781 5C16                             u5981 0E60  
                           u7581 1B26                             u7661 556E  
                           u7741 4DEE                             u6950 46A8  
                           u6870 4628                             u6790 568A  
                           u5990 0F08                             u7590 1B8C  
                           u7670 5592                             u6951 46A4  
                           u6871 4624                             u6791 5686  
                           u7807 5B36                             u5991 0F04  
                           u7591 1B88                             u7671 558E  
                           u6960 46B6                             u6880 4636  
                           u7680 4D54                             u6961 46B2  
                           u6881 4632                             u7817 5B48  
                           u7681 4D50                             u6970 46C8  
                           u6890 4648                             u7690 4D66  
                           u7827 5358                             u6971 46C4  
                           u6891 4644                             u7691 4D62  
                           u6980 46D6                             u7837 5372  
                           u6981 46D2                             u6990 46E8  
                           u7847 5388                             u6991 46E4  
                           u7857 5CE6                             u7797 49E4  
                           _TMR2 000FBC                             abs@a 0013  
              ?_Lcd_Write_String 0005                             _dbuf 0200  
                           _atoi 42E0                             _main 4D0C  
                           _dtoa 3A74                             _prec 01A2  
                           _nout 019E                             pad@i 0018  
                           pad@p 0015                             fsr1h 000FE2  
                           fsr2h 000FDA                             indf1 000FE7  
                           indf2 000FDF                             fsr1l 000FE1  
                           pad@w 001A                             fsr2l 000FD9  
                           btemp 005F                    ___fpclassifyf 4C0E  
                           prodh 000FF4                             prodl 000FF3  
                           start 0068               ??_Lcd_Write_String 0007  
                ___fldiv@new_exp 0046                  __end_of_Lcd_Cmd 5CF2  
                   _tolower$2665 000D                     ___param_bank 000000  
                          ??_abs 0015                            ??_pad 0017  
                   ?_menuControl 0001                    ___fltol@sign1 0056  
                __end_of___aodiv 45F8                            ?_atoi 0008  
                __end_of___fladd 2FCA                            ?_main 0001  
                          ?_dtoa 001C                  __end_of___aomod 48E0  
                __end_of_adcInit 5A36                  __end_of___fldiv 378E  
                __end_of___awdiv 5130                  __end_of___flneg 5AE2  
                          _EEADR 000FA9                            STR_10 069A  
                          STR_11 0657                            STR_12 069A  
                          STR_21 06D8                            STR_13 0613  
                          STR_22 06E0                            STR_14 06B9  
                          STR_15 0613                            STR_16 06C7  
                          STR_25 06E4                            STR_17 06D4  
                          STR_18 06DC                            STR_27 06E4  
                __end_of___awmod 51E0                  __end_of___flmul 33F4  
                __end_of___flsub 5932                  __end_of___fltol 4B0A  
                __end_of___lldiv 532E                            _T0CON 000FD5  
                ___awdiv@divisor 0003                            i2l478 0064  
                ___awdiv@counter 0005                     vfpfcnvrt@fmt 00A9  
                          _TMR0H 000FD7                            _TMR0L 000FD6  
        __size_of_Lcd_Set_Cursor 0066              ___lmul@multiplicand 0005  
                          _fabsf 5BBE                            _flags 01A4  
                          _fputc 4EDC                            _fputs 5932  
                __end_of_isdigit 5B1A                      ?_PWM1_setDC 0058  
                   _adc_raw_data 0173                      ?_PWM2_setDC 0058  
                          atoi@n 0015                            pad@fp 0011  
                          atoi@s 0008                            _width 01A0  
                          _putch 5D28                            dtoa@d 001E  
                          dtoa@i 003E                            dtoa@n 0036  
                          dtoa@p 0030                            dtoa@s 0034  
                          dtoa@w 0032                  __end_of_isspace 58EC  
                __end_of_isupper 5AAA                 __end_of_PWM_Init 5C70  
                          tablat 000FF5                            ttemp5 0060  
                          ttemp6 0063                            ttemp7 0067  
                          status 000FD8                            wtemp8 0060  
                __end_of_sprintf 589A                   ?___fpclassifyf 0001  
                __end_of_tolower 573E                  __end_of_strncmp 4EDC  
                  ?_readAdcValue 0001                 __end_of_Lcd_Port 57F6  
                __initialization 57F6                      _system_init 48E0  
                   __end_of_atoi 4470                     __end_of_main 4E06  
                   __end_of_dtoa 3D58                           ??_atoi 000A  
                         ??_main 005F                           ??_dtoa 0026  
             __size_of_Lcd_Clear 000E                    __activetblptr 000002  
__size_of_calculatedAverageValue 02E6                           ?_fabsf 001C  
                         _ADCON0 000FC2                           _ADCON1 000FC1  
                         ?_fputc 0001                           ?_fputs 000A  
                         _ADRESH 000FC4                           _ADRESL 000FC3  
                         _EEDATA 000FA8                           _CCPR1L 000FBE  
                         _CCPR2L 000F67                           _EECON2 000FA7  
               ___awdiv@dividend 0001                           ?_putch 0001  
                         i2l6251 000A                           i2l6261 0034  
                         i2l6253 0018                           i2l6271 0060  
                         i2l6263 0042                           i2l6255 0026  
                         i2l6265 0048                           i2l6257 0028  
                         i2l6267 004C                           i2l6259 0030  
                         i2l6269 005C                        ??_Lcd_Cmd 0002  
                         _TIMER0 0008                   ??_readAdcValue 0003  
        __size_of_Lcd_Write_Char 0038                 __end_of___xxtofl 42E0  
              _scanAdcConversion 1CCE               _timer_counter_flag 01AA  
             ?_scanAdcConversion 0001             __size_of_eepromWrite 002E  
                   vfprintf@cfmt 00CD                 __end_of_lcd_init 53C4  
                         ___flge 4B0A                           ___fleq 51E0  
                         ___lmul 55A4                        ??___aodiv 0011  
                      ??___fladd 003D                        ??___aomod 0011  
                         ___wmul 5C70                        ??_adcInit 0001  
                      ??___fldiv 003D                        ??___awdiv 0005  
                      ??___flneg 0005                        ??___awmod 0005  
                      ??___flmul 0024                        ??___flsub 004D  
                      ??___fltol 0052                        ??___lldiv 0009  
                         _efgtoa 06E8                           _floorf 3D58  
            __size_of_PWM1_setDC 007A                           fabsf@u 0020  
                         fabsf@x 001C                 __end_of_mcu_init 5D08  
            __size_of_PWM2_setDC 007A              ??_scanAdcConversion 0058  
                         clear_0 581C                           clear_1 5828  
                         clear_2 5834                  eepromWrite@data 0001  
               ___awdiv@quotient 0007                  ___awmod@divisor 0003  
                ___awmod@counter 0005                           pad@buf 0013  
                         dtoa@fp 001C                           _strcpy 573E  
                         _strlen 5B88                           fputc@c 0001  
           readAdcValue@adcValue 0006                           fputs@c 000E  
                         fputs@i 000F                           fputs@s 000A  
                      ??_isdigit 0003                  ___fpclassifyf@e 0009  
                ___fpclassifyf@u 000B                  ___fpclassifyf@x 0001  
                   __mediumconst 0000                        ??_isspace 0003  
                         tblptrh 000FF7                        ??_isupper 0003  
                         tblptrl 000FF6                           tblptru 000FF8  
                         putch@c 0001                 __end_of_vfprintf 5678  
                      ??_sprintf 005F                        ??_tolower 0009  
                      ??_strncmp 0007       __end_of_buttonControlFlags 477C  
                Lcd_Set_Cursor@a 0005                  Lcd_Set_Cursor@b 0004  
                Lcd_Set_Cursor@y 0007                  Lcd_Set_Cursor@z 0006  
                     ___flge@ff1 0035                       ___flge@ff2 0039  
                ??___fpclassifyf 0005                     ___xxtofl@arg 0018  
                   ___xxtofl@exp 0017                     ___xxtofl@val 000E  
                     ___fleq@ff1 0001                       ___fleq@ff2 0005  
      __end_of_scanAdcConversion 24D4                       __accesstop 0060  
        __end_of__initialization 583A                       ___flneg@f1 0001  
         _calculatedAverageValue 378E                __end_of_Lcd_Clear 5D28  
                  ___rparam_used 000001                       ___fltol@f1 004E  
                 __pcstackCOMRAM 0001                     __pidataBANK1 5C96  
                  __end_of_fabsf 5BF2                    __end_of_fputc 4FA6  
                  __end_of_fputs 5976                    __end_of_putch 5D2A  
                      ?_PWM_Init 0001                   _Lcd_Set_Cursor 5678  
   _KP@fs_speed_controller$F1179 01BF     _KP@fs_speed_controller$F1780 01AF  
   _KP@fs_speed_controller$F1596 01B7                eepromRead@address 0001  
           __size_of_menuControl 006E                          ??_fabsf 0020  
                      ?_Lcd_Port 0001                          ??_fputc 0005  
                        ??_fputs 000E                          ??_putch 0001  
                     __pbssBANK0 00F3                       __pbssBANK1 0100  
                     __pbssBANK2 0200              PWM1_setDC@dutycycle 0058  
                        ?_TIMER0 0001                          ?___flge 0035  
                        ?___fleq 0001                          ?___lmul 0001  
                        ?___wmul 0001                          ?_efgtoa 0058  
                        _CCP1CON 000FBD                          _CCP2CON 000F66  
                        ?_floorf 004E                   ___lmul@product 0009  
      __size_of_Lcd_Write_String 007E           __end_of_Lcd_Set_Cursor 56DE  
                     ??_PWM_Init 0001                          ?_strcpy 0001  
                        ?_strlen 0001             __end_of_readAdcValue 59B8  
                     _eepromRead 5CB6                        ?___xxtofl 000E  
             __size_of_vfpfcnvrt 0636                       ??_Lcd_Port 0001  
                   ??_PWM1_setDC 005A                     ??_PWM2_setDC 005A  
                      ?_lcd_init 0001          __size_of_menuInitialize 0028  
                  _menu_selected 01A7               __size_of_stopMotor 003C  
     __size_of_scanAdcConversion 0806                   _Lcd_Write_Char 5B1A  
                        _Lcd_Cmd 5CD4                        ?_mcu_init 0001  
                __size_of_TIMER0 0060                stateMachine@F6401 0163  
                     _controller 0150                          __Hparam 0000  
                        __Lparam 0000              PWM2_setDC@dutycycle 0058  
                   ?_system_init 0001                  __size_of___flge 0104  
                __size_of___fleq 00AA                          ___aodiv 4470  
                        ___fladd 2B0A                          ___aomod 477C  
                        _adcInit 59F8                          ___fldiv 33F4  
                        ___awdiv 506C                          ___flneg 5AAA  
                __size_of___lmul 006A                          ___awmod 5130  
                        ___flmul 2FCA                          ___flsub 58EC  
                        ___fltol 4A04                          ___lldiv 528A  
                __size_of___wmul 0026                        ?_vfprintf 00C7  
                   __psmallconst 0600                  __size_of_efgtoa 0BC6  
                __size_of_floorf 0216                          __pcinit 57F6  
             __end_of_PWM1_setDC 5536                          __ramtop 0600  
                ?_Lcd_Set_Cursor 0004               __end_of_PWM2_setDC 54BC  
                        __ptext0 4D0C                          __ptext1 5D08  
                        __ptext2 48E0                          __ptext3 5CB6  
                        __ptext4 5C20                          __ptext5 5536  
                        __ptext6 12AE                          __ptext7 5A36  
                        __ptext8 5B52                          __ptext9 3F6E  
                     _menu_flags 00FD                       _menu_value 019B  
                __size_of_strcpy 005C                  __size_of_strlen 0036  
        stateMachine@textCursor2 00E3                        _T2CONbits 000FBA  
                   __size_of_abs 0040                     __size_of_pad 00C6  
                        _isdigit 5AE2                       ??___xxtofl 0012  
               ___awmod@dividend 0001                          _isspace 589A  
                        _isupper 5A72                          efgtoa@c 005E  
                        efgtoa@d 0087                          efgtoa@e 009F  
                        efgtoa@f 005A                          efgtoa@g 009B  
                        efgtoa@h 0091                          efgtoa@i 0099  
                        efgtoa@l 0095                          efgtoa@m 0083  
                        efgtoa@n 00A1                          efgtoa@p 008B  
                        efgtoa@t 007F                          efgtoa@u 00A3  
                        efgtoa@w 008E                    ?_speedControl 0058  
                        atoi@neg 000E                    ?_timer_0_init 0001  
                        _sprintf 5848                          _tolower 56DE  
                     ??_lcd_init 0004           __end_of_Lcd_Write_Char 5B52  
                        _strncmp 4E06             end_of_initialization 583A  
           speedControl@position 0058                          floorf@e 0064  
                        floorf@m 0060                          floorf@u 0066  
                        floorf@x 004E                          fputc@fp 0003  
                     ??_mcu_init 0001                    __Lmediumconst 0000  
                        fputs@fp 000C                  ___lldiv@divisor 0005  
                ___lldiv@counter 000D                __end_of_vfpfcnvrt 2B0A  
                     efgtoa@mode 0090                       efgtoa@sign 0089  
                        postdec1 000FE5                          postdec2 000FDD  
                        postinc0 000FEE                          postinc1 000FE6  
                        postinc2 000FDE                        Lcd_Port@a 0001  
                     ??_vfprintf 005F                          strcpy@d 0009  
                        strlen@a 0003                          strcpy@s 0007  
                        strlen@s 0001                __end_of_stopMotor 5A72  
                      _PORTBbits 000F81                        _PORTDbits 000F83  
                    ?_eepromRead 0001                      ___fladd@grs 0044  
                  ___xxtofl@sign 0016                        _TRISAbits 000F92  
                 ??_speedControl 005C                        _TRISBbits 000F93  
                      _TRISCbits 000F94                        _TRISDbits 000F95  
                      _TRISEbits 000F96                   ??_timer_0_init 0001  
                    ___fldiv@grs 0048                      ___fldiv@rem 0041  
                     _startMotor 5B52                  ?_Lcd_Write_Char 0001  
        ?_calculatedAverageValue 0001                Lcd_Write_String@a 0005  
              Lcd_Write_String@i 0009                      ___flmul@grs 0029  
                  ??_eepromWrite 0002         _button_bounce_controller 00FE  
                 __end_of_TIMER0 0068                    ?_stateMachine 0001  
             _buttonControlFlags 45F8                        _Lcd_Clear 5D1A  
                   _convert_data 0100            __size_of_readAdcValue 0042  
                 __end_of___flge 4C0E                   __end_of___fleq 528A  
                 __end_of___lmul 560E                      vfpfcnvrt@ap 00AB  
                    vfpfcnvrt@ct 00C3                      vfpfcnvrt@fp 00A7  
                    vfpfcnvrt@ll 00B1                   __end_of___wmul 5C96  
               _Lcd_Write_String 53C4                   __end_of_efgtoa 12AE  
            ?_buttonControlFlags 0001                   __end_of_floorf 3F6E  
                     floorf@F524 018F                   __end_of_strcpy 579A  
                 __end_of_strlen 5BBE                __size_of_PWM_Init 0028  
            start_initialization 57F6                      __end_of_abs 59F8  
                    __end_of_pad 506C   __end_of_calculatedAverageValue 3A74  
                 _menuInitialize 5C20                     _driver_limit 0183  
              __size_of_Lcd_Port 005C             ??_buttonControlFlags 0001  
                       ??_TIMER0 0001            __end_of___fpclassifyf 4D0C  
                   _readAdcValue 5976                   ??_stateMachine 00E1  
            __size_of_eepromRead 001E                      vfprintf@fmt 00C9  
                     ?_Lcd_Clear 0001                         ??___flge 003D  
                       ??___fleq 0009                         ??___lmul 0009  
            __end_of_eepromWrite 5C20                         ??___wmul 0005  
                       ??_efgtoa 006A                      __pdataBANK1 01AB  
                       ??_floorf 0052             __size_of_system_init 0124  
                Lcd_Write_Char@a 0004                  Lcd_Write_Char@y 0003  
                  ??_menuControl 005F                         ??_strcpy 0005  
                       ??_strlen 0003                        ___fladd@a 0039  
                      ___fladd@b 0035                        ___fldiv@a 0039  
                      ___fldiv@b 0035                        ___flmul@a 0020  
                      ___flmul@b 001C                        ___flsub@a 0049  
                      ___flsub@b 0045           __end_of_menuInitialize 5C48  
                  __pcstackBANK0 0060                 ___aodiv@dividend 0001  
              __size_of___xxtofl 01B4                      ?_startMotor 0001  
                       ?_Lcd_Cmd 0001                __size_of_lcd_init 0096  
                      _atoi$2570 0010                        _atoi$2571 0014  
                      _atoi$2572 0012                __size_of_mcu_init 0016  
                    _efgtoa$2503 0073                      _efgtoa$2512 0079  
                    _efgtoa$2504 0075                      _efgtoa$2513 007B  
                    _efgtoa$2514 007D                      _efgtoa$2508 0077  
                      _dtoa$2479 002E    stateMachine@secretMenuCounter 01A6  
           __end_of_speedControl 412C                 ??_Lcd_Set_Cursor 0005  
                      __pintcode 0008             __end_of_timer_0_init 5D1A  
                       ?___aodiv 0001                         ?___fladd 0035  
                       ?___aomod 0001                         ?_adcInit 0001  
                       ?___fldiv 0035                         ?___awdiv 0001  
               ___aodiv@quotient 0013                         ?___flneg 0001  
                       ?___awmod 0001                         ?___flmul 001C  
                       ?___flsub 0045                         ?___fltol 004E  
                       ?___lldiv 0001                __size_of_vfprintf 006A  
                      fabsf@F463 0197                      __smallconst 0600  
                       ?_isdigit 0001                         ?_isspace 0001  
                ?_menuInitialize 0001                         ?_isupper 0001  
            __end_of_menuControl 55A4                   __size_of_fabsf 0034  
                       ?_sprintf 00CF                         ?_tolower 0007  
                 __size_of_fputc 00CA                   __size_of_fputs 0044  
                       ?_strncmp 0001                   __size_of_putch 0002  
             eepromWrite@address 0002                   ___wmul@product 0005  
                       _LATCbits 000F8B                         _LATDbits 000F8C  
                    _eepromWrite 5BF2                   PWM1_setDC@duty 005C  
                       Lcd_Cmd@a 0003                         _PIR2bits 000FA1  
                       i2u775_40 0018                         i2u775_41 0014  
                       i2u776_40 0026                         i2u776_41 0022  
                       i2u777_40 0042                         i2u777_41 003E  
                       i2u778_40 005C                         i2u778_41 0058  
                    ??_Lcd_Clear 0004                     _pauseIsClick 00FF  
            __size_of_startMotor 0036                        _vfpfcnvrt 24D4  
                     _ADCON0bits 000FC2                       _ADCON2bits 000FC0  
                       _PWM_Init 5C48                ___wmul@multiplier 0001  
                   ??_eepromRead 0001                 ??_Lcd_Write_Char 0002  
                 PWM2_setDC@duty 005C                        _stopMotor 5A36  
           __end_of_stateMachine 1CCE                     _isspace$2601 0007  
                       _Lcd_Port 579A                       vfpfcnvrt@c 00C6  
                     vfpfcnvrt@f 00BF                ___lmul@multiplier 0001  
                      copy_data0 580A         __end_of_Lcd_Write_String 5442  
               __size_of_Lcd_Cmd 001E                       _EECON1bits 000FA6  
                       __Hrparam 0000                       vfprintf@ap 00CB  
                       __Lrparam 0000                       vfprintf@fp 00C7  
             __end_of_eepromRead 5CD4                 __size_of___aodiv 0188  
               __size_of___fladd 04C0                 __size_of___aomod 0164  
               __size_of_adcInit 003E                 __size_of___fldiv 039A  
               __size_of___awdiv 00C4                 __size_of___flneg 0038  
               __size_of___awmod 00B0                 __size_of___flmul 042A  
               __size_of___flsub 0046                 __size_of___fltol 0106  
               __size_of___lldiv 00A4                       ?_vfpfcnvrt 00A7  
                    _menuControl 5536                  ___aodiv@divisor 0009  
                ___aodiv@counter 0011                       _ANSELAbits 000F38  
                     _ANSELBbits 000F39                       _ANSELCbits 000F3A  
                     _ANSELDbits 000F3B                       _ANSELEbits 000F3C  
             ___fpclassifyf@F463 0193                       sprintf@fmt 00D1  
                       ___xxtofl 412C                       ?_stopMotor 0001  
               __size_of_isdigit 0038                 __size_of_isspace 0052  
                       __ptext10 1CCE                         __ptext11 5976  
                       __ptext20 560E                         __ptext12 378E  
                       __ptext21 24D4                         __ptext13 55A4  
                       __ptext30 58EC                         __ptext22 4E06  
                       __ptext14 528A                         __ptext31 2B0A  
                       __ptext23 06E8                         __ptext15 5442  
                       __ptext40 4FA6                         __ptext32 5AAA  
                       __ptext24 56DE                         __ptext16 54BC  
                       __ptext41 5B88                         __ptext33 2FCA  
                       __ptext25 5A72                         __ptext17 5BBE  
                       __ptext50 5AE2                         __ptext42 5932  
                       __ptext34 4B0A                         __ptext26 573E  
                       __ptext18 412C                         __ptext51 5C70  
                       __ptext43 4EDC                         __ptext35 51E0  
                       __ptext27 3D58                         __ptext19 5848  
                       __ptext60 5C48                         __ptext52 5BF2  
                       __ptext44 5D28                         __ptext36 33F4  
                       __ptext28 4C0E                         __ptext61 5D1A  
                       __ptext53 53C4                         __ptext45 59B8  
                       __ptext37 5130                         __ptext29 4A04  
                       __ptext62 5CD4                         __ptext54 5B1A  
                       __ptext46 477C                         __ptext38 506C  
                       __ptext63 579A                         __ptext55 5678  
                       __ptext47 4470                         __ptext39 3A74  
                       __ptext56 45F8                         __ptext48 42E0  
                       __ptext57 5CF2                         __ptext49 589A  
                       __ptext58 532E                         __ptext59 59F8  
               __size_of_isupper 0038                         _lcd_init 532E  
               __size_of_sprintf 0052                 __size_of_tolower 0060  
                     strcpy@dest 0001                 __size_of_strncmp 00D6  
                       _mcu_init 5CF2                    __size_of_atoi 0190  
                  __size_of_main 00FA                    __size_of_dtoa 02E4  
          __size_of_speedControl 01BE            __size_of_timer_0_init 0012  
                       efgtoa@fp 0058                         efgtoa@ne 0085  
                       efgtoa@pp 0081                         efgtoa@ou 006F  
                       int$flags 005F                         _vfprintf 560E  
         readAdcValue@adcChannel 0005                 ___aomod@dividend 0001  
                 _vfpfcnvrt$2534 00BD                   _vfpfcnvrt$2528 00B9  
                 _vfpfcnvrt$2529 00BB                      _OSCTUNEbits 000F9B  
                     _INTCONbits 000FF2     _KD@fs_speed_controller$F1180 01BB  
   _KD@fs_speed_controller$F1781 01AB     _KD@fs_speed_controller$F1597 01B3  
                       isdigit@c 0001                     _speedControl 3F6E  
                   _timer_0_init 5D08                     ??_startMotor 005E  
             Lcd_Write_Char@temp 0002                         intlevel2 0000  
                      sprintf@ap 00D9      __size_of_buttonControlFlags 0184  
                       isspace@c 0001                 ___lldiv@dividend 0001  
                      strcpy@src 0003                         isupper@c 0001  
                      strncmp@_l 0001                        strncmp@_r 0003  
                     _OSCCONbits 000FD3                    ??_system_init 0002  
                    efgtoa@nmode 008D                     _procces_data 0130  
                ___aomod@divisor 0009                      ??_vfpfcnvrt 00AD  
                ___aomod@counter 0011               Lcd_Set_Cursor@temp 0008  
               ??_menuInitialize 0001               __end_of_startMotor 5B88  
          __size_of_stateMachine 0A20                         sprintf@f 00DB  
                       tolower@c 0007                         sprintf@s 00CF  
         __size_of___fpclassifyf 00FE                 ___lldiv@quotient 0009  
                    ??_stopMotor 005E                         strncmp@l 0008  
                       strncmp@n 0005                         strncmp@r 000A  
                    _timer_value 00F3                    ___fladd@signs 0041  
                     _PWM1_setDC 54BC                       _PWM2_setDC 5442  
                   ___aodiv@sign 0012                     ___fladd@aexp 0042  
                   ___fladd@bexp 0043                     ?_eepromWrite 0001  
                   ___aomod@sign 0012                     _stateMachine 12AE  
