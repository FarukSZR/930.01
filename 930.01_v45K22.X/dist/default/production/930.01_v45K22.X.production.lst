

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Fri Aug 07 14:09:35 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK0,global,class=CODE,delta=1,noexec
     7                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     8                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     9                           	psect	cinit,global,reloc=2,class=CODE,delta=1
    10                           	psect	bssCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    11                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    12                           	psect	dataBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    13                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    14                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    15                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    16                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    17                           	psect	text0,global,reloc=2,class=CODE,delta=1
    18                           	psect	text1,global,reloc=2,class=CODE,delta=1
    19                           	psect	text2,global,reloc=2,class=CODE,delta=1
    20                           	psect	text3,global,reloc=2,class=CODE,delta=1
    21                           	psect	text4,global,reloc=2,class=CODE,delta=1
    22                           	psect	text5,global,reloc=2,class=CODE,delta=1
    23                           	psect	text6,global,reloc=2,class=CODE,delta=1
    24                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=3
    25                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    26                           	psect	text9,global,reloc=2,class=CODE,delta=1,group=1
    27                           	psect	text10,global,reloc=2,class=CODE,delta=1,group=3
    28                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    29                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=3
    30                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=3
    31                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=3
    32                           	psect	text15,global,reloc=2,class=CODE,delta=1,group=3
    33                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=3
    34                           	psect	text17,global,reloc=2,class=CODE,delta=1,group=2
    35                           	psect	text18,global,reloc=2,class=CODE,delta=1,group=2
    36                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text20,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    39                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    40                           	psect	text23,global,reloc=2,class=CODE,delta=1,group=2
    41                           	psect	text24,global,reloc=2,class=CODE,delta=1,group=2
    42                           	psect	text25,global,reloc=2,class=CODE,delta=1,group=2
    43                           	psect	text26,global,reloc=2,class=CODE,delta=1,group=2
    44                           	psect	text27,global,reloc=2,class=CODE,delta=1,group=1
    45                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=1
    46                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=3
    47                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    48                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=3
    50                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=2
    52                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=2
    53                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    56                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text40,global,reloc=2,class=CODE,delta=1
    58                           	psect	text41,global,reloc=2,class=CODE,delta=1
    59                           	psect	text42,global,reloc=2,class=CODE,delta=1
    60                           	psect	text43,global,reloc=2,class=CODE,delta=1
    61                           	psect	text44,global,reloc=2,class=CODE,delta=1
    62                           	psect	text45,global,reloc=2,class=CODE,delta=1
    63                           	psect	text46,global,reloc=2,class=CODE,delta=1
    64                           	psect	text47,global,reloc=2,class=CODE,delta=1
    65                           	psect	text48,global,reloc=2,class=CODE,delta=1
    66                           	psect	text49,global,reloc=2,class=CODE,delta=1
    67                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    68                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    69                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    70                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    71                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    72                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    73  0000                     
    74                           ; Version 2.20
    75                           ; Generated 05/05/2020 GMT
    76                           ; 
    77                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
    78                           ; All rights reserved.
    79                           ; 
    80                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    81                           ; 
    82                           ; Redistribution and use in source and binary forms, with or without modification, are
    83                           ; permitted provided that the following conditions are met:
    84                           ; 
    85                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    86                           ;        conditions and the following disclaimer.
    87                           ; 
    88                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    89                           ;        of conditions and the following disclaimer in the documentation and/or other
    90                           ;        materials provided with the distribution.
    91                           ; 
    92                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    93                           ;        software without specific prior written permission.
    94                           ; 
    95                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    96                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    97                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    98                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    99                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   100                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   101                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   102                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   103                           ; 
   104                           ; 
   105                           ; Code-generator required, PIC18F45K22 Definitions
   106                           ; 
   107                           ; SFR Addresses
   108  0000                     
   109                           	psect	eeprom_data
   110  F00000  1E 02 04 00 00 00 00 00 	db	30,2,4,0,0,0,0,0	;# 
   111  0000                     
   112                           	psect	idataBANK0
   113  0048B4                     __pidataBANK0:
   114                           	callstack 0
   115                           
   116                           ;initializer for _KP
   117  0048B4  CCCD               	dw	52429
   118  0048B6  3E4C               	dw	15948
   119                           
   120                           	psect	idataBANK1
   121  0048B8                     __pidataBANK1:
   122                           	callstack 0
   123                           
   124                           ;initializer for _KD
   125  0048B8  0000               	dw	0
   126  0048BA  3F80               	dw	16256
   127  0000                     _ANSELBbits	set	3897
   128  0000                     _ANSELCbits	set	3898
   129  0000                     _ANSELB	set	3897
   130  0000                     _ANSELDbits	set	3899
   131  0000                     _ANSELEbits	set	3900
   132  0000                     _ANSELAbits	set	3896
   133  0000                     _T0CON	set	4053
   134  0000                     _TMR0L	set	4054
   135  0000                     _TMR0H	set	4055
   136  0000                     _INTCONbits	set	4082
   137  0000                     _CCPR2L	set	3943
   138  0000                     _CCPR1L	set	4030
   139  0000                     _PR2	set	4027
   140  0000                     _TMR2	set	4028
   141  0000                     _T2CONbits	set	4026
   142  0000                     _CCP2CON	set	3942
   143  0000                     _CCP1CON	set	4029
   144  0000                     _LATEbits	set	3981
   145  0000                     _LATAbits	set	3977
   146  0000                     _LATBbits	set	3978
   147  0000                     _PORTBbits	set	3969
   148  0000                     _TRISCbits	set	3988
   149  0000                     _TRISBbits	set	3987
   150  0000                     _OSCTUNEbits	set	3995
   151  0000                     _OSCCONbits	set	4051
   152  0000                     _TRISDbits	set	3989
   153  0000                     _PORTAbits	set	3968
   154  0000                     _PORTEbits	set	3972
   155  0000                     _PORTDbits	set	3971
   156  0000                     _PIR2bits	set	4001
   157  0000                     _EECON2	set	4007
   158  0000                     _EEDATA	set	4008
   159  0000                     _EECON1bits	set	4006
   160  0000                     _EEADR	set	4009
   161  0000                     _ADCON2bits	set	4032
   162  0000                     _ADCON1	set	4033
   163  0000                     _ADCON0	set	4034
   164  0000                     _TRISEbits	set	3990
   165  0000                     _TRISAbits	set	3986
   166  0000                     _ADRESL	set	4035
   167  0000                     _ADRESH	set	4036
   168  0000                     _ADCON0bits	set	4034
   169                           
   170                           	psect	smallconst
   171  000600                     __psmallconst:
   172                           	callstack 0
   173  000600  00                 	db	0
   174  000601                     STR_14:
   175  000601  4B                 	db	75	;'K'
   176  000602  70                 	db	112	;'p'
   177  000603  3A                 	db	58	;':'
   178  000604  25                 	db	37
   179  000605  35                 	db	53	;'5'
   180  000606  2E                 	db	46
   181  000607  31                 	db	49	;'1'
   182  000608  66                 	db	102	;'f'
   183  000609  20                 	db	32
   184  00060A  4B                 	db	75	;'K'
   185  00060B  64                 	db	100	;'d'
   186  00060C  3A                 	db	58	;':'
   187  00060D  35                 	db	53	;'5'
   188  00060E  2E                 	db	46
   189  00060F  31                 	db	49	;'1'
   190  000610  66                 	db	102	;'f'
   191  000611  20                 	db	32
   192  000612  20                 	db	32
   193  000613  20                 	db	32
   194  000614  20                 	db	32
   195  000615  00                 	db	0
   196  000616                     STR_4:
   197  000616  25                 	db	37
   198  000617  64                 	db	100	;'d'
   199  000618  20                 	db	32
   200  000619  20                 	db	32
   201  00061A  20                 	db	32
   202  00061B  20                 	db	32
   203  00061C  20                 	db	32
   204  00061D  20                 	db	32
   205  00061E  20                 	db	32
   206  00061F  20                 	db	32
   207  000620  20                 	db	32
   208  000621  20                 	db	32
   209  000622  20                 	db	32
   210  000623  20                 	db	32
   211  000624  20                 	db	32
   212  000625  20                 	db	32
   213  000626  20                 	db	32
   214  000627  00                 	db	0
   215  000628                     STR_13:
   216  000628  50                 	db	80	;'P'
   217  000629  49                 	db	73	;'I'
   218  00062A  44                 	db	68	;'D'
   219  00062B  20                 	db	32
   220  00062C  50                 	db	80	;'P'
   221  00062D  41                 	db	65	;'A'
   222  00062E  52                 	db	82	;'R'
   223  00062F  41                 	db	65	;'A'
   224  000630  4D                 	db	77	;'M'
   225  000631  20                 	db	32
   226  000632  20                 	db	32
   227  000633  20                 	db	32
   228  000634  20                 	db	32
   229  000635  20                 	db	32
   230  000636  20                 	db	32
   231  000637  20                 	db	32
   232  000638  00                 	db	0
   233  000639                     STR_7:
   234  000639  48                 	db	72	;'H'
   235  00063A  49                 	db	73	;'I'
   236  00063B  5A                 	db	90	;'Z'
   237  00063C  20                 	db	32
   238  00063D  4C                 	db	76	;'L'
   239  00063E  69                 	db	105	;'i'
   240  00063F  4D                 	db	77	;'M'
   241  000640  69                 	db	105	;'i'
   242  000641  54                 	db	84	;'T'
   243  000642  69                 	db	105	;'i'
   244  000643  20                 	db	32
   245  000644  20                 	db	32
   246  000645  20                 	db	32
   247  000646  20                 	db	32
   248  000647  20                 	db	32
   249  000648  20                 	db	32
   250  000649  00                 	db	0
   251  00064A                     STR_1:
   252  00064A  4B                 	db	75	;'K'
   253  00064B  41                 	db	65	;'A'
   254  00064C  4C                 	db	76	;'L'
   255  00064D  41                 	db	65	;'A'
   256  00064E  4E                 	db	78	;'N'
   257  00064F  20                 	db	32
   258  000650  5A                 	db	90	;'Z'
   259  000651  41                 	db	65	;'A'
   260  000652  4D                 	db	77	;'M'
   261  000653  41                 	db	65	;'A'
   262  000654  4E                 	db	78	;'N'
   263  000655  20                 	db	32
   264  000656  20                 	db	32
   265  000657  20                 	db	32
   266  000658  20                 	db	32
   267  000659  20                 	db	32
   268  00065A  00                 	db	0
   269  00065B                     STR_9:
   270  00065B  5A                 	db	90	;'Z'
   271  00065C  41                 	db	65	;'A'
   272  00065D  4D                 	db	77	;'M'
   273  00065E  41                 	db	65	;'A'
   274  00065F  4E                 	db	78	;'N'
   275  000660  20                 	db	32
   276  000661  44                 	db	68	;'D'
   277  000662  4F                 	db	79	;'O'
   278  000663  4C                 	db	76	;'L'
   279  000664  44                 	db	68	;'D'
   280  000665  55                 	db	85	;'U'
   281  000666  20                 	db	32
   282  000667  20                 	db	32
   283  000668  20                 	db	32
   284  000669  20                 	db	32
   285  00066A  20                 	db	32
   286  00066B  00                 	db	0
   287  00066C                     STR_11:
   288  00066C  48                 	db	72	;'H'
   289  00066D  41                 	db	65	;'A'
   290  00066E  52                 	db	82	;'R'
   291  00066F  45                 	db	69	;'E'
   292  000670  4B                 	db	75	;'K'
   293  000671  45                 	db	69	;'E'
   294  000672  54                 	db	84	;'T'
   295  000673  20                 	db	32
   296  000674  44                 	db	68	;'D'
   297  000675  55                 	db	85	;'U'
   298  000676  52                 	db	82	;'R'
   299  000677  44                 	db	68	;'D'
   300  000678  55                 	db	85	;'U'
   301  000679  20                 	db	32
   302  00067A  20                 	db	32
   303  00067B  20                 	db	32
   304  00067C  00                 	db	0
   305  00067D                     STR_3:
   306  00067D  48                 	db	72	;'H'
   307  00067E  41                 	db	65	;'A'
   308  00067F  52                 	db	82	;'R'
   309  000680  45                 	db	69	;'E'
   310  000681  4B                 	db	75	;'K'
   311  000682  54                 	db	84	;'T'
   312  000683  20                 	db	32
   313  000684  5A                 	db	90	;'Z'
   314  000685  41                 	db	65	;'A'
   315  000686  4D                 	db	77	;'M'
   316  000687  41                 	db	65	;'A'
   317  000688  4E                 	db	78	;'N'
   318  000689  49                 	db	73	;'I'
   319  00068A  20                 	db	32
   320  00068B  64                 	db	100	;'d'
   321  00068C  6B                 	db	107	;'k'
   322  00068D  00                 	db	0
   323  00068E                     STR_5:
   324  00068E  44                 	db	68	;'D'
   325  00068F  55                 	db	85	;'U'
   326  000690  52                 	db	82	;'R'
   327  000691  4D                 	db	77	;'M'
   328  000692  41                 	db	65	;'A'
   329  000693  20                 	db	32
   330  000694  5A                 	db	90	;'Z'
   331  000695  41                 	db	65	;'A'
   332  000696  4D                 	db	77	;'M'
   333  000697  41                 	db	65	;'A'
   334  000698  4E                 	db	78	;'N'
   335  000699  49                 	db	73	;'I'
   336  00069A  20                 	db	32
   337  00069B  20                 	db	32
   338  00069C  6D                 	db	109	;'m'
   339  00069D  73                 	db	115	;'s'
   340  00069E  00                 	db	0
   341  00069F                     STR_10:
   342  00069F  20                 	db	32
   343  0006A0  20                 	db	32
   344  0006A1  20                 	db	32
   345  0006A2  20                 	db	32
   346  0006A3  20                 	db	32
   347  0006A4  20                 	db	32
   348  0006A5  25                 	db	37
   349  0006A6  64                 	db	100	;'d'
   350  0006A7  3A                 	db	58	;':'
   351  0006A8  25                 	db	37
   352  0006A9  64                 	db	100	;'d'
   353  0006AA  20                 	db	32
   354  0006AB  20                 	db	32
   355  0006AC  20                 	db	32
   356  0006AD  20                 	db	32
   357  0006AE  00                 	db	0
   358  0006AF                     STR_2:
   359  0006AF  20                 	db	32
   360  0006B0  20                 	db	32
   361  0006B1  20                 	db	32
   362  0006B2  20                 	db	32
   363  0006B3  20                 	db	32
   364  0006B4  20                 	db	32
   365  0006B5  25                 	db	37
   366  0006B6  64                 	db	100	;'d'
   367  0006B7  3A                 	db	58	;':'
   368  0006B8  25                 	db	37
   369  0006B9  64                 	db	100	;'d'
   370  0006BA  20                 	db	32
   371  0006BB  20                 	db	32
   372  0006BC  20                 	db	32
   373  0006BD  00                 	db	0
   374  0006BE                     STR_15:
   375  0006BE  49                 	db	73	;'I'
   376  0006BF  4E                 	db	78	;'N'
   377  0006C0  46                 	db	70	;'F'
   378  0006C1  00                 	db	0
   379  0006C2                     STR_19:
   380  0006C2  4E                 	db	78	;'N'
   381  0006C3  41                 	db	65	;'A'
   382  0006C4  4E                 	db	78	;'N'
   383  0006C5  00                 	db	0
   384  0006C6                     STR_16:
   385  0006C6  69                 	db	105	;'i'
   386  0006C7  6E                 	db	110	;'n'
   387  0006C8  66                 	db	102	;'f'
   388  0006C9  00                 	db	0
   389  0006CA                     STR_20:
   390  0006CA  6E                 	db	110	;'n'
   391  0006CB  61                 	db	97	;'a'
   392  0006CC  6E                 	db	110	;'n'
   393  0006CD  00                 	db	0
   394  0006CE                     STR_23:
   395  0006CE  6C                 	db	108	;'l'
   396  0006CF  66                 	db	102	;'f'
   397  0006D0  00                 	db	0
   398  0006D1  00                 	db	0	; dummy byte at the end
   399  0000                     
   400                           ; #config settings
   401                           
   402                           	psect	cinit
   403  0042A2                     __pcinit:
   404                           	callstack 0
   405  0042A2                     start_initialization:
   406                           	callstack 0
   407  0042A2                     __initialization:
   408                           	callstack 0
   409                           
   410                           ; Initialize objects allocated to BANK1 (4 bytes)
   411                           ; load TBLPTR registers with __pidataBANK1
   412  0042A2  0EB8               	movlw	low __pidataBANK1
   413  0042A4  6EF6               	movwf	tblptrl,c
   414  0042A6  0E48               	movlw	high __pidataBANK1
   415  0042A8  6EF7               	movwf	tblptrh,c
   416  0042AA  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   417  0042AC  6EF8               	movwf	tblptru,c
   418  0042AE  EE01  F0FB         	lfsr	0,__pdataBANK1
   419  0042B2  EE10 F004          	lfsr	1,4
   420  0042B6                     copy_data0:
   421  0042B6  0009               	tblrd		*+
   422  0042B8  CFF5 FFEE          	movff	tablat,postinc0
   423  0042BC  50E5               	movf	postdec1,w,c
   424  0042BE  50E1               	movf	fsr1l,w,c
   425  0042C0  E1FA               	bnz	copy_data0
   426                           
   427                           ; Initialize objects allocated to BANK0 (4 bytes)
   428                           ; load TBLPTR registers with __pidataBANK0
   429  0042C2  0EB4               	movlw	low __pidataBANK0
   430  0042C4  6EF6               	movwf	tblptrl,c
   431  0042C6  0E48               	movlw	high __pidataBANK0
   432  0042C8  6EF7               	movwf	tblptrh,c
   433  0042CA  0E00               	movlw	low (__pidataBANK0 shr (0+16))
   434  0042CC  6EF8               	movwf	tblptru,c
   435  0042CE  EE00  F0F9         	lfsr	0,__pdataBANK0
   436  0042D2  EE10 F004          	lfsr	1,4
   437  0042D6                     copy_data1:
   438  0042D6  0009               	tblrd		*+
   439  0042D8  CFF5 FFEE          	movff	tablat,postinc0
   440  0042DC  50E5               	movf	postdec1,w,c
   441  0042DE  50E1               	movf	fsr1l,w,c
   442  0042E0  E1FA               	bnz	copy_data1
   443                           
   444                           ; Clear objects allocated to BANK1 (251 bytes)
   445  0042E2  EE01  F000         	lfsr	0,__pbssBANK1
   446  0042E6  0EFB               	movlw	251
   447  0042E8                     clear_0:
   448  0042E8  6AEE               	clrf	postinc0,c
   449  0042EA  06E8               	decf	wreg,f,c
   450  0042EC  E1FD               	bnz	clear_0
   451                           
   452                           ; Clear objects allocated to BANK0 (47 bytes)
   453  0042EE  EE00  F0CA         	lfsr	0,__pbssBANK0
   454  0042F2  0E2F               	movlw	47
   455  0042F4                     clear_1:
   456  0042F4  6AEE               	clrf	postinc0,c
   457  0042F6  06E8               	decf	wreg,f,c
   458  0042F8  E1FD               	bnz	clear_1
   459                           
   460                           ; Clear objects allocated to COMRAM (1 bytes)
   461  0042FA  6A5E               	clrf	__pbssCOMRAM& (0+255),c
   462  0042FC                     end_of_initialization:
   463                           	callstack 0
   464  0042FC                     __end_of__initialization:
   465                           	callstack 0
   466  0042FC  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   467  0042FE  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   468  004300  0E00               	movlw	low (__Lmediumconst shr (0+16))
   469  004302  6EF8               	movwf	tblptru,c
   470  004304  0100               	movlb	0
   471  004306  EF88  F01E         	goto	_main	;jump to C main() function
   472                           
   473                           	psect	bssCOMRAM
   474  00005E                     __pbssCOMRAM:
   475                           	callstack 0
   476  00005E                     _button_bounce_controller:
   477                           	callstack 0
   478  00005E                     	ds	1
   479                           
   480                           	psect	bssBANK0
   481  0000CA                     __pbssBANK0:
   482                           	callstack 0
   483  0000CA                     _driver_limit:
   484                           	callstack 0
   485  0000CA                     	ds	12
   486  0000D6                     _timer_value:
   487                           	callstack 0
   488  0000D6                     	ds	10
   489  0000E0                     floorf@F524:
   490                           	callstack 0
   491  0000E0                     	ds	4
   492  0000E4                     ___fpclassifyf@F463:
   493                           	callstack 0
   494  0000E4                     	ds	4
   495  0000E8                     _menu_value:
   496                           	callstack 0
   497  0000E8                     	ds	3
   498  0000EB                     _nout:
   499                           	callstack 0
   500  0000EB                     	ds	2
   501  0000ED                     _width:
   502                           	callstack 0
   503  0000ED                     	ds	2
   504  0000EF                     _prec:
   505                           	callstack 0
   506  0000EF                     	ds	2
   507  0000F1                     _flags:
   508                           	callstack 0
   509  0000F1                     	ds	2
   510  0000F3                     _menu_flags:
   511                           	callstack 0
   512  0000F3                     	ds	1
   513  0000F4                     _menu_selected:
   514                           	callstack 0
   515  0000F4                     	ds	1
   516  0000F5                     _stopIsClick:
   517                           	callstack 0
   518  0000F5                     	ds	1
   519  0000F6                     _startIsClick:
   520                           	callstack 0
   521  0000F6                     	ds	1
   522  0000F7                     _pauseIsClick:
   523                           	callstack 0
   524  0000F7                     	ds	1
   525  0000F8                     _timer_counter_flag:
   526                           	callstack 0
   527  0000F8                     	ds	1
   528                           
   529                           	psect	dataBANK0
   530  0000F9                     __pdataBANK0:
   531                           	callstack 0
   532  0000F9                     _KP:
   533                           	callstack 0
   534  0000F9                     	ds	4
   535                           
   536                           	psect	bssBANK1
   537  000100                     __pbssBANK1:
   538                           	callstack 0
   539  000100                     _convert_data:
   540                           	callstack 0
   541  000100                     	ds	48
   542  000130                     _procces_data:
   543                           	callstack 0
   544  000130                     	ds	32
   545  000150                     _controller:
   546                           	callstack 0
   547  000150                     	ds	19
   548  000163                     	ds	16
   549  000173                     	ds	16
   550  000183                     _textCursor2:
   551                           	callstack 0
   552  000183                     	ds	16
   553  000193                     _adc_raw_data:
   554                           	callstack 0
   555  000193                     	ds	16
   556  0001A3                     fabsf@F463:
   557                           	callstack 0
   558  0001A3                     	ds	4
   559  0001A7                     _counter:
   560                           	callstack 0
   561  0001A7                     	ds	4
   562  0001AB                     _dbuf:
   563                           	callstack 0
   564  0001AB                     	ds	80
   565                           
   566                           	psect	dataBANK1
   567  0001FB                     __pdataBANK1:
   568                           	callstack 0
   569  0001FB                     _KD:
   570                           	callstack 0
   571  0001FB                     	ds	4
   572                           
   573                           	psect	cstackBANK0
   574  000060                     __pcstackBANK0:
   575                           	callstack 0
   576  000060                     efgtoa@ou:
   577                           	callstack 0
   578                           
   579                           ; 4 bytes @ 0x0
   580  000060                     	ds	4
   581  000064                     _efgtoa$2866:
   582                           	callstack 0
   583                           
   584                           ; 2 bytes @ 0x4
   585  000064                     	ds	2
   586  000066                     _efgtoa$2867:
   587                           	callstack 0
   588                           
   589                           ; 2 bytes @ 0x6
   590  000066                     	ds	2
   591  000068                     _efgtoa$2871:
   592                           	callstack 0
   593                           
   594                           ; 2 bytes @ 0x8
   595  000068                     	ds	2
   596  00006A                     _efgtoa$2875:
   597                           	callstack 0
   598                           
   599                           ; 2 bytes @ 0xA
   600  00006A                     	ds	2
   601  00006C                     _efgtoa$2876:
   602                           	callstack 0
   603                           
   604                           ; 2 bytes @ 0xC
   605  00006C                     	ds	2
   606  00006E                     _efgtoa$2877:
   607                           	callstack 0
   608                           
   609                           ; 2 bytes @ 0xE
   610  00006E                     	ds	2
   611  000070                     efgtoa@t:
   612                           	callstack 0
   613                           
   614                           ; 2 bytes @ 0x10
   615  000070                     	ds	2
   616  000072                     efgtoa@pp:
   617                           	callstack 0
   618                           
   619                           ; 2 bytes @ 0x12
   620  000072                     	ds	2
   621  000074                     efgtoa@m:
   622                           	callstack 0
   623                           
   624                           ; 2 bytes @ 0x14
   625  000074                     	ds	2
   626  000076                     efgtoa@ne:
   627                           	callstack 0
   628                           
   629                           ; 2 bytes @ 0x16
   630  000076                     	ds	2
   631  000078                     efgtoa@d:
   632                           	callstack 0
   633                           
   634                           ; 2 bytes @ 0x18
   635  000078                     	ds	2
   636  00007A                     efgtoa@sign:
   637                           	callstack 0
   638                           
   639                           ; 2 bytes @ 0x1A
   640  00007A                     	ds	2
   641  00007C                     efgtoa@p:
   642                           	callstack 0
   643                           
   644                           ; 2 bytes @ 0x1C
   645  00007C                     	ds	2
   646  00007E                     efgtoa@nmode:
   647                           	callstack 0
   648                           
   649                           ; 1 bytes @ 0x1E
   650  00007E                     	ds	1
   651  00007F                     efgtoa@w:
   652                           	callstack 0
   653                           
   654                           ; 2 bytes @ 0x1F
   655  00007F                     	ds	2
   656  000081                     efgtoa@mode:
   657                           	callstack 0
   658                           
   659                           ; 1 bytes @ 0x21
   660  000081                     	ds	1
   661  000082                     efgtoa@h:
   662                           	callstack 0
   663                           
   664                           ; 4 bytes @ 0x22
   665  000082                     	ds	4
   666  000086                     efgtoa@l:
   667                           	callstack 0
   668                           
   669                           ; 4 bytes @ 0x26
   670  000086                     	ds	4
   671  00008A                     efgtoa@i:
   672                           	callstack 0
   673                           
   674                           ; 2 bytes @ 0x2A
   675  00008A                     	ds	2
   676  00008C                     efgtoa@g:
   677                           	callstack 0
   678                           
   679                           ; 4 bytes @ 0x2C
   680  00008C                     	ds	4
   681  000090                     efgtoa@e:
   682                           	callstack 0
   683                           
   684                           ; 2 bytes @ 0x30
   685  000090                     	ds	2
   686  000092                     efgtoa@n:
   687                           	callstack 0
   688                           
   689                           ; 2 bytes @ 0x32
   690  000092                     	ds	2
   691  000094                     efgtoa@u:
   692                           	callstack 0
   693                           
   694                           ; 4 bytes @ 0x34
   695  000094                     	ds	4
   696  000098                     vfpfcnvrt@ll:
   697                           	callstack 0
   698                           
   699                           ; 8 bytes @ 0x38
   700  000098                     	ds	8
   701  0000A0                     _vfpfcnvrt$2891:
   702                           	callstack 0
   703                           
   704                           ; 2 bytes @ 0x40
   705  0000A0                     	ds	2
   706  0000A2                     _vfpfcnvrt$2892:
   707                           	callstack 0
   708                           
   709                           ; 2 bytes @ 0x42
   710  0000A2                     	ds	2
   711  0000A4                     _vfpfcnvrt$2897:
   712                           	callstack 0
   713                           
   714                           ; 2 bytes @ 0x44
   715  0000A4                     	ds	2
   716  0000A6                     vfpfcnvrt@f:
   717                           	callstack 0
   718                           
   719                           ; 4 bytes @ 0x46
   720  0000A6                     	ds	4
   721  0000AA                     vfpfcnvrt@ct:
   722                           	callstack 0
   723                           
   724                           ; 3 bytes @ 0x4A
   725  0000AA                     	ds	3
   726  0000AD                     vfpfcnvrt@c:
   727                           	callstack 0
   728                           
   729                           ; 1 bytes @ 0x4D
   730  0000AD                     	ds	1
   731  0000AE                     ?_sprintf:
   732                           	callstack 0
   733  0000AE                     sprintf@s:
   734                           	callstack 0
   735                           
   736                           ; 2 bytes @ 0x4E
   737  0000AE                     	ds	2
   738  0000B0                     sprintf@fmt:
   739                           	callstack 0
   740                           
   741                           ; 2 bytes @ 0x50
   742  0000B0                     	ds	10
   743  0000BA                     stateMachine@textCursor2:
   744                           	callstack 0
   745                           
   746                           ; 16 bytes @ 0x5A
   747  0000BA                     	ds	16
   748                           
   749                           	psect	cstackCOMRAM
   750  000001                     __pcstackCOMRAM:
   751                           	callstack 0
   752  000001                     ?_strlen:
   753                           	callstack 0
   754  000001                     ?___fpclassifyf:
   755                           	callstack 0
   756  000001                     ?_isupper:
   757                           	callstack 0
   758  000001                     ?_isdigit:
   759                           	callstack 0
   760  000001                     ?_strncmp:
   761                           	callstack 0
   762  000001                     ?_isspace:
   763                           	callstack 0
   764  000001                     ?___wmul:
   765                           	callstack 0
   766  000001                     ?___awdiv:
   767                           	callstack 0
   768  000001                     ?___awmod:
   769                           	callstack 0
   770  000001                     ?___fladd:
   771                           	callstack 0
   772  000001                     ?___fldiv:
   773                           	callstack 0
   774  000001                     ?___flmul:
   775                           	callstack 0
   776  000001                     ?___flneg:
   777                           	callstack 0
   778  000001                     ?___fltol:
   779                           	callstack 0
   780  000001                     ?___aodiv:
   781                           	callstack 0
   782  000001                     ?___aomod:
   783                           	callstack 0
   784  000001                     eepromRead@address:
   785                           	callstack 0
   786  000001                     eepromWrite@data:
   787                           	callstack 0
   788  000001                     Lcd_Port@a:
   789                           	callstack 0
   790  000001                     ___wmul@multiplier:
   791                           	callstack 0
   792  000001                     ___awdiv@dividend:
   793                           	callstack 0
   794  000001                     ___awmod@dividend:
   795                           	callstack 0
   796  000001                     isdigit@c:
   797                           	callstack 0
   798  000001                     isspace@c:
   799                           	callstack 0
   800  000001                     isupper@c:
   801                           	callstack 0
   802  000001                     fputc@c:
   803                           	callstack 0
   804  000001                     strcpy@dest:
   805                           	callstack 0
   806  000001                     strlen@s:
   807                           	callstack 0
   808  000001                     strncmp@_l:
   809                           	callstack 0
   810  000001                     ___fleq@ff1:
   811                           	callstack 0
   812  000001                     ___flneg@f1:
   813                           	callstack 0
   814  000001                     ___fltol@f1:
   815                           	callstack 0
   816  000001                     ___fladd@b:
   817                           	callstack 0
   818  000001                     ___fldiv@b:
   819                           	callstack 0
   820  000001                     ___flmul@b:
   821                           	callstack 0
   822  000001                     ___fpclassifyf@x:
   823                           	callstack 0
   824  000001                     ___aodiv@dividend:
   825                           	callstack 0
   826  000001                     ___aomod@dividend:
   827                           	callstack 0
   828  000001                     buttonControlFlags@textCursor2:
   829                           	callstack 0
   830                           
   831                           ; 16 bytes @ 0x0
   832  000001                     	ds	1
   833  000002                     ??_system_init:
   834  000002                     ??_Lcd_Cmd:
   835  000002                     eepromWrite@address:
   836                           	callstack 0
   837  000002                     Lcd_Write_Char@temp:
   838                           	callstack 0
   839                           
   840                           ; 1 bytes @ 0x1
   841  000002                     	ds	1
   842  000003                     ??_isupper:
   843  000003                     ??_isdigit:
   844  000003                     ??_isspace:
   845  000003                     Lcd_Cmd@a:
   846                           	callstack 0
   847  000003                     Lcd_Write_Char@y:
   848                           	callstack 0
   849  000003                     ___wmul@multiplicand:
   850                           	callstack 0
   851  000003                     ___awdiv@divisor:
   852                           	callstack 0
   853  000003                     ___awmod@divisor:
   854                           	callstack 0
   855  000003                     fputc@fp:
   856                           	callstack 0
   857  000003                     strcpy@src:
   858                           	callstack 0
   859  000003                     strlen@a:
   860                           	callstack 0
   861  000003                     strncmp@_r:
   862                           	callstack 0
   863                           
   864                           ; 2 bytes @ 0x2
   865  000003                     	ds	1
   866  000004                     ??_lcd_init:
   867  000004                     Lcd_Set_Cursor@b:
   868                           	callstack 0
   869  000004                     Lcd_Write_Char@a:
   870                           	callstack 0
   871                           
   872                           ; 1 bytes @ 0x3
   873  000004                     	ds	1
   874  000005                     ??_fputc:
   875  000005                     ??___fpclassifyf:
   876  000005                     ??_strcpy:
   877  000005                     ??___fltol:
   878  000005                     Lcd_Set_Cursor@a:
   879                           	callstack 0
   880  000005                     ___awdiv@counter:
   881                           	callstack 0
   882  000005                     ___awmod@counter:
   883                           	callstack 0
   884  000005                     Lcd_Write_String@a:
   885                           	callstack 0
   886  000005                     ___wmul@product:
   887                           	callstack 0
   888  000005                     strncmp@n:
   889                           	callstack 0
   890  000005                     ___fleq@ff2:
   891                           	callstack 0
   892  000005                     ___fladd@a:
   893                           	callstack 0
   894  000005                     ___fldiv@a:
   895                           	callstack 0
   896  000005                     ___flmul@a:
   897                           	callstack 0
   898                           
   899                           ; 4 bytes @ 0x4
   900  000005                     	ds	1
   901  000006                     Lcd_Set_Cursor@z:
   902                           	callstack 0
   903  000006                     ___awdiv@sign:
   904                           	callstack 0
   905  000006                     ___awmod@sign:
   906                           	callstack 0
   907                           
   908                           ; 1 bytes @ 0x5
   909  000006                     	ds	1
   910  000007                     ??_strncmp:
   911  000007                     ??_Lcd_Write_String:
   912  000007                     ?_tolower:
   913                           	callstack 0
   914  000007                     Lcd_Set_Cursor@y:
   915                           	callstack 0
   916  000007                     _isspace$2964:
   917                           	callstack 0
   918  000007                     ___awdiv@quotient:
   919                           	callstack 0
   920  000007                     strcpy@s:
   921                           	callstack 0
   922  000007                     tolower@c:
   923                           	callstack 0
   924                           
   925                           ; 2 bytes @ 0x6
   926  000007                     	ds	1
   927  000008                     ?_atoi:
   928                           	callstack 0
   929  000008                     Lcd_Set_Cursor@temp:
   930                           	callstack 0
   931  000008                     atoi@s:
   932                           	callstack 0
   933  000008                     strncmp@l:
   934                           	callstack 0
   935                           
   936                           ; 2 bytes @ 0x7
   937  000008                     	ds	1
   938  000009                     ??___fladd:
   939  000009                     ??___fldiv:
   940  000009                     ??___flmul:
   941  000009                     ??_tolower:
   942  000009                     ??___fleq:
   943  000009                     ___fltol@sign1:
   944                           	callstack 0
   945  000009                     Lcd_Write_String@i:
   946                           	callstack 0
   947  000009                     ___fpclassifyf@e:
   948                           	callstack 0
   949  000009                     strcpy@d:
   950                           	callstack 0
   951  000009                     ___aodiv@divisor:
   952                           	callstack 0
   953  000009                     ___aomod@divisor:
   954                           	callstack 0
   955                           
   956                           ; 8 bytes @ 0x8
   957  000009                     	ds	1
   958  00000A                     ??_atoi:
   959  00000A                     ___fltol@exp1:
   960                           	callstack 0
   961  00000A                     fputs@s:
   962                           	callstack 0
   963  00000A                     strncmp@r:
   964                           	callstack 0
   965                           
   966                           ; 2 bytes @ 0x9
   967  00000A                     	ds	1
   968  00000B                     ___fpclassifyf@u:
   969                           	callstack 0
   970                           
   971                           ; 4 bytes @ 0xA
   972  00000B                     	ds	1
   973  00000C                     fputs@fp:
   974                           	callstack 0
   975                           
   976                           ; 2 bytes @ 0xB
   977  00000C                     	ds	1
   978  00000D                     ___fladd@signs:
   979                           	callstack 0
   980  00000D                     ___flmul@sign:
   981                           	callstack 0
   982  00000D                     _tolower$3028:
   983                           	callstack 0
   984  00000D                     ___fldiv@rem:
   985                           	callstack 0
   986                           
   987                           ; 4 bytes @ 0xC
   988  00000D                     	ds	1
   989  00000E                     ___fladd@aexp:
   990                           	callstack 0
   991  00000E                     fputs@c:
   992                           	callstack 0
   993  00000E                     atoi@neg:
   994                           	callstack 0
   995  00000E                     ___flmul@grs:
   996                           	callstack 0
   997                           
   998                           ; 4 bytes @ 0xD
   999  00000E                     	ds	1
  1000  00000F                     ___fladd@bexp:
  1001                           	callstack 0
  1002  00000F                     fputs@i:
  1003                           	callstack 0
  1004                           
  1005                           ; 2 bytes @ 0xE
  1006  00000F                     	ds	1
  1007  000010                     ___fladd@grs:
  1008                           	callstack 0
  1009  000010                     _atoi$2933:
  1010                           	callstack 0
  1011                           
  1012                           ; 2 bytes @ 0xF
  1013  000010                     	ds	1
  1014  000011                     ?_pad:
  1015                           	callstack 0
  1016  000011                     ___aodiv@counter:
  1017                           	callstack 0
  1018  000011                     ___aomod@counter:
  1019                           	callstack 0
  1020  000011                     ___fldiv@sign:
  1021                           	callstack 0
  1022  000011                     pad@fp:
  1023                           	callstack 0
  1024                           
  1025                           ; 2 bytes @ 0x10
  1026  000011                     	ds	1
  1027  000012                     ___aodiv@sign:
  1028                           	callstack 0
  1029  000012                     ___aomod@sign:
  1030                           	callstack 0
  1031  000012                     ___flmul@aexp:
  1032                           	callstack 0
  1033  000012                     ___fldiv@new_exp:
  1034                           	callstack 0
  1035  000012                     _atoi$2935:
  1036                           	callstack 0
  1037                           
  1038                           ; 2 bytes @ 0x11
  1039  000012                     	ds	1
  1040  000013                     ?_abs:
  1041                           	callstack 0
  1042  000013                     ___flmul@bexp:
  1043                           	callstack 0
  1044  000013                     pad@buf:
  1045                           	callstack 0
  1046  000013                     abs@a:
  1047                           	callstack 0
  1048  000013                     ___aodiv@quotient:
  1049                           	callstack 0
  1050                           
  1051                           ; 8 bytes @ 0x12
  1052  000013                     	ds	1
  1053  000014                     _atoi$2934:
  1054                           	callstack 0
  1055  000014                     ___fldiv@grs:
  1056                           	callstack 0
  1057  000014                     ___flmul@prod:
  1058                           	callstack 0
  1059                           
  1060                           ; 4 bytes @ 0x13
  1061  000014                     	ds	1
  1062  000015                     ??_abs:
  1063  000015                     pad@p:
  1064                           	callstack 0
  1065  000015                     atoi@n:
  1066                           	callstack 0
  1067                           
  1068                           ; 2 bytes @ 0x14
  1069  000015                     	ds	2
  1070  000017                     ??_pad:
  1071                           
  1072                           ; 1 bytes @ 0x16
  1073  000017                     	ds	1
  1074  000018                     ___fldiv@bexp:
  1075                           	callstack 0
  1076  000018                     ___flmul@temp:
  1077                           	callstack 0
  1078  000018                     pad@i:
  1079                           	callstack 0
  1080                           
  1081                           ; 2 bytes @ 0x17
  1082  000018                     	ds	1
  1083  000019                     ___fldiv@aexp:
  1084                           	callstack 0
  1085                           
  1086                           ; 1 bytes @ 0x18
  1087  000019                     	ds	1
  1088  00001A                     ?___flsub:
  1089                           	callstack 0
  1090  00001A                     ?_floorf:
  1091                           	callstack 0
  1092  00001A                     pad@w:
  1093                           	callstack 0
  1094  00001A                     ___flge@ff1:
  1095                           	callstack 0
  1096  00001A                     ___flsub@b:
  1097                           	callstack 0
  1098  00001A                     floorf@x:
  1099                           	callstack 0
  1100                           
  1101                           ; 4 bytes @ 0x19
  1102  00001A                     	ds	2
  1103  00001C                     ?_dtoa:
  1104                           	callstack 0
  1105  00001C                     dtoa@fp:
  1106                           	callstack 0
  1107                           
  1108                           ; 2 bytes @ 0x1B
  1109  00001C                     	ds	2
  1110  00001E                     ??_floorf:
  1111  00001E                     ___flge@ff2:
  1112                           	callstack 0
  1113  00001E                     ___flsub@a:
  1114                           	callstack 0
  1115  00001E                     dtoa@d:
  1116                           	callstack 0
  1117                           
  1118                           ; 8 bytes @ 0x1D
  1119  00001E                     	ds	4
  1120  000022                     ??___flge:
  1121                           
  1122                           ; 1 bytes @ 0x21
  1123  000022                     	ds	2
  1124  000024                     floorf@m:
  1125                           	callstack 0
  1126                           
  1127                           ; 4 bytes @ 0x23
  1128  000024                     	ds	2
  1129  000026                     ??_dtoa:
  1130                           
  1131                           ; 1 bytes @ 0x25
  1132  000026                     	ds	2
  1133  000028                     floorf@e:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x27
  1137  000028                     	ds	2
  1138  00002A                     floorf@u:
  1139                           	callstack 0
  1140                           
  1141                           ; 4 bytes @ 0x29
  1142  00002A                     	ds	4
  1143  00002E                     ?_efgtoa:
  1144                           	callstack 0
  1145  00002E                     _dtoa$2842:
  1146                           	callstack 0
  1147  00002E                     efgtoa@fp:
  1148                           	callstack 0
  1149                           
  1150                           ; 2 bytes @ 0x2D
  1151  00002E                     	ds	2
  1152  000030                     dtoa@p:
  1153                           	callstack 0
  1154  000030                     efgtoa@f:
  1155                           	callstack 0
  1156                           
  1157                           ; 4 bytes @ 0x2F
  1158  000030                     	ds	2
  1159  000032                     dtoa@w:
  1160                           	callstack 0
  1161                           
  1162                           ; 2 bytes @ 0x31
  1163  000032                     	ds	2
  1164  000034                     efgtoa@c:
  1165                           	callstack 0
  1166  000034                     dtoa@s:
  1167                           	callstack 0
  1168                           
  1169                           ; 2 bytes @ 0x33
  1170  000034                     	ds	1
  1171  000035                     ??_efgtoa:
  1172                           
  1173                           ; 1 bytes @ 0x34
  1174  000035                     	ds	1
  1175  000036                     dtoa@n:
  1176                           	callstack 0
  1177                           
  1178                           ; 8 bytes @ 0x35
  1179  000036                     	ds	8
  1180  00003E                     dtoa@i:
  1181                           	callstack 0
  1182                           
  1183                           ; 2 bytes @ 0x3D
  1184  00003E                     	ds	2
  1185  000040                     ?_vfpfcnvrt:
  1186                           	callstack 0
  1187  000040                     vfpfcnvrt@fp:
  1188                           	callstack 0
  1189                           
  1190                           ; 2 bytes @ 0x3F
  1191  000040                     	ds	2
  1192  000042                     vfpfcnvrt@fmt:
  1193                           	callstack 0
  1194                           
  1195                           ; 2 bytes @ 0x41
  1196  000042                     	ds	2
  1197  000044                     vfpfcnvrt@ap:
  1198                           	callstack 0
  1199                           
  1200                           ; 2 bytes @ 0x43
  1201  000044                     	ds	2
  1202  000046                     ??_vfpfcnvrt:
  1203                           
  1204                           ; 1 bytes @ 0x45
  1205  000046                     	ds	4
  1206  00004A                     ?_vfprintf:
  1207                           	callstack 0
  1208  00004A                     vfprintf@fp:
  1209                           	callstack 0
  1210                           
  1211                           ; 2 bytes @ 0x49
  1212  00004A                     	ds	2
  1213  00004C                     vfprintf@fmt:
  1214                           	callstack 0
  1215                           
  1216                           ; 2 bytes @ 0x4B
  1217  00004C                     	ds	2
  1218  00004E                     vfprintf@ap:
  1219                           	callstack 0
  1220                           
  1221                           ; 2 bytes @ 0x4D
  1222  00004E                     	ds	2
  1223  000050                     vfprintf@cfmt:
  1224                           	callstack 0
  1225                           
  1226                           ; 2 bytes @ 0x4F
  1227  000050                     	ds	2
  1228  000052                     
  1229                           ; 1 bytes @ 0x51
  1230  000052                     	ds	2
  1231  000054                     sprintf@ap:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x53
  1235  000054                     	ds	2
  1236  000056                     sprintf@f:
  1237                           	callstack 0
  1238                           
  1239                           ; 6 bytes @ 0x55
  1240  000056                     	ds	6
  1241  00005C                     ??_stateMachine:
  1242                           
  1243                           ; 1 bytes @ 0x5B
  1244  00005C                     	ds	2
  1245  00005E                     
  1246                           ; 1 bytes @ 0x5D
  1247 ;;
  1248 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1249 ;;
  1250 ;; *************** function _main *****************
  1251 ;; Defined at:
  1252 ;;		line 43 in file "fs_main.c"
  1253 ;; Parameters:    Size  Location     Type
  1254 ;;		None
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;		None
  1257 ;; Return value:  Size  Location     Type
  1258 ;;                  1    wreg      void 
  1259 ;; Registers used:
  1260 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1261 ;; Tracked objects:
  1262 ;;		On entry : 0/0
  1263 ;;		On exit  : 0/0
  1264 ;;		Unchanged: 0/0
  1265 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1266 ;;      Params:         0       0       0       0       0       0       0
  1267 ;;      Locals:         0       0       0       0       0       0       0
  1268 ;;      Temps:          0       0       0       0       0       0       0
  1269 ;;      Totals:         0       0       0       0       0       0       0
  1270 ;;Total ram usage:        0 bytes
  1271 ;; Hardware stack levels required when called:   11
  1272 ;; This function calls:
  1273 ;;		_Lcd_Clear
  1274 ;;		_lcd_init
  1275 ;;		_mcu_init
  1276 ;;		_menuControl
  1277 ;;		_menuInitialize
  1278 ;;		_system_init
  1279 ;;		_timer_0_init
  1280 ;; This function is called by:
  1281 ;;		Startup code after reset
  1282 ;; This function uses a non-reentrant model
  1283 ;;
  1284                           
  1285                           	psect	text0
  1286  003D10                     __ptext0:
  1287                           	callstack 0
  1288  003D10                     _main:
  1289                           	callstack 20
  1290  003D10                     
  1291                           ;fs_main.c: 45:     mcu_init();
  1292  003D10  EC3F  F024         	call	_mcu_init	;wreg free
  1293  003D14                     
  1294                           ;fs_main.c: 46:     menuInitialize();
  1295  003D14  EC0F  F024         	call	_menuInitialize	;wreg free
  1296  003D18                     
  1297                           ;fs_main.c: 50:     timer_0_init();
  1298  003D18  EC4A  F024         	call	_timer_0_init	;wreg free
  1299  003D1C                     
  1300                           ;fs_main.c: 51:     lcd_init();
  1301  003D1C  ECC7  F020         	call	_lcd_init	;wreg free
  1302  003D20                     
  1303                           ;fs_main.c: 52:     system_init();
  1304  003D20  EC07  F01C         	call	_system_init	;wreg free
  1305  003D24                     
  1306                           ;fs_main.c: 53:     Lcd_Clear();
  1307  003D24  EC53  F024         	call	_Lcd_Clear	;wreg free
  1308  003D28                     l5806:
  1309                           
  1310                           ;fs_main.c: 61: {;fs_main.c: 63:     if (timer_counter_flag.one_second_flag == 1)
  1311  003D28  0100               	movlb	0	; () banked
  1312  003D2A  A1F8               	btfss	_timer_counter_flag& (0+255),0,b
  1313  003D2C  EF9A  F01E         	goto	u7161
  1314  003D30  EF9C  F01E         	goto	u7160
  1315  003D34                     u7161:
  1316  003D34  EFEA  F01E         	goto	l5832
  1317  003D38                     u7160:
  1318  003D38                     
  1319                           ; BSR set to: 0
  1320                           ;fs_main.c: 64:     {;fs_main.c: 65:         timer_counter_flag.one_second_flag = 0;
  1321  003D38  91F8               	bcf	_timer_counter_flag& (0+255),0,b
  1322  003D3A                     
  1323                           ; BSR set to: 0
  1324                           ;fs_main.c: 67:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1325  003D3A  05F6               	decf	_startIsClick& (0+255),w,b
  1326  003D3C  A4D8               	btfss	status,2,c
  1327  003D3E  EFA3  F01E         	goto	u7171
  1328  003D42  EFA5  F01E         	goto	u7170
  1329  003D46                     u7171:
  1330  003D46  EFEA  F01E         	goto	l5832
  1331  003D4A                     u7170:
  1332  003D4A                     
  1333                           ; BSR set to: 0
  1334  003D4A  51F7               	movf	_pauseIsClick& (0+255),w,b
  1335  003D4C  A4D8               	btfss	status,2,c
  1336  003D4E  EFAB  F01E         	goto	u7181
  1337  003D52  EFAD  F01E         	goto	u7180
  1338  003D56                     u7181:
  1339  003D56  EFEA  F01E         	goto	l5832
  1340  003D5A                     u7180:
  1341  003D5A                     
  1342                           ; BSR set to: 0
  1343  003D5A  51F5               	movf	_stopIsClick& (0+255),w,b
  1344  003D5C  A4D8               	btfss	status,2,c
  1345  003D5E  EFB3  F01E         	goto	u7191
  1346  003D62  EFB5  F01E         	goto	u7190
  1347  003D66                     u7191:
  1348  003D66  EFEA  F01E         	goto	l5832
  1349  003D6A                     u7190:
  1350  003D6A                     
  1351                           ; BSR set to: 0
  1352  003D6A  51F4               	movf	_menu_selected& (0+255),w,b
  1353  003D6C  A4D8               	btfss	status,2,c
  1354  003D6E  EFBB  F01E         	goto	u7201
  1355  003D72  EFBD  F01E         	goto	u7200
  1356  003D76                     u7201:
  1357  003D76  EFEA  F01E         	goto	l5832
  1358  003D7A                     u7200:
  1359  003D7A                     
  1360                           ; BSR set to: 0
  1361                           ;fs_main.c: 68:         {;fs_main.c: 69:             timer_value.second++;
  1362  003D7A  4BD6               	infsnz	_timer_value& (0+255),f,b
  1363  003D7C  2BD7               	incf	(_timer_value+1)& (0+255),f,b
  1364  003D7E                     
  1365                           ; BSR set to: 0
  1366                           ;fs_main.c: 70:             timer_value.remainingSecond = 60 - timer_value.second;
  1367  003D7E  51D6               	movf	_timer_value& (0+255),w,b
  1368  003D80  083C               	sublw	60
  1369  003D82  6FDA               	movwf	(_timer_value+4)& (0+255),b
  1370  003D84  51D7               	movf	(_timer_value+1)& (0+255),w,b
  1371  003D86  A0D8               	btfss	status,0,c
  1372  003D88  2AE8               	incf	wreg,f,c
  1373  003D8A  0800               	sublw	0
  1374  003D8C  6FDB               	movwf	(_timer_value+5)& (0+255),b
  1375  003D8E                     
  1376                           ; BSR set to: 0
  1377                           ;fs_main.c: 72:             if (timer_value.remainingSecond == 59 )
  1378  003D8E  0E3B               	movlw	59
  1379  003D90  19DA               	xorwf	(_timer_value+4)& (0+255),w,b
  1380  003D92  11DB               	iorwf	(_timer_value+5)& (0+255),w,b
  1381  003D94  A4D8               	btfss	status,2,c
  1382  003D96  EFCF  F01E         	goto	u7211
  1383  003D9A  EFD1  F01E         	goto	u7210
  1384  003D9E                     u7211:
  1385  003D9E  EFDB  F01E         	goto	l5828
  1386  003DA2                     u7210:
  1387  003DA2                     
  1388                           ; BSR set to: 0
  1389                           ;fs_main.c: 73:             {;fs_main.c: 74:                 timer_value.minute++;
  1390  003DA2  4BD8               	infsnz	(_timer_value+2)& (0+255),f,b
  1391  003DA4  2BD9               	incf	(_timer_value+3)& (0+255),f,b
  1392  003DA6                     
  1393                           ; BSR set to: 0
  1394                           ;fs_main.c: 75:                 timer_value.remainingMinute = menu_value.driver_time - t
      +                          imer_value.minute;
  1395  003DA6  51D8               	movf	(_timer_value+2)& (0+255),w,b
  1396  003DA8  5DE8               	subwf	_menu_value& (0+255),w,b
  1397  003DAA  6FDC               	movwf	(_timer_value+6)& (0+255),b
  1398  003DAC  51D9               	movf	(_timer_value+3)& (0+255),w,b
  1399  003DAE  A0D8               	btfss	status,0,c
  1400  003DB0  29D9               	incf	(_timer_value+3)& (0+255),w,b
  1401  003DB2  6BDD               	clrf	(_timer_value+7)& (0+255),b
  1402  003DB4  5FDD               	subwf	(_timer_value+7)& (0+255),f,b
  1403  003DB6                     l5828:
  1404                           
  1405                           ; BSR set to: 0
  1406                           ;fs_main.c: 78:             if (timer_value.second > 59)
  1407  003DB6  51D7               	movf	(_timer_value+1)& (0+255),w,b
  1408  003DB8  E109               	bnz	u7220
  1409  003DBA  0E3C               	movlw	60
  1410  003DBC  5DD6               	subwf	_timer_value& (0+255),w,b
  1411  003DBE  A0D8               	btfss	status,0,c
  1412  003DC0  EFE4  F01E         	goto	u7221
  1413  003DC4  EFE6  F01E         	goto	u7220
  1414  003DC8                     u7221:
  1415  003DC8  EFEA  F01E         	goto	l5832
  1416  003DCC                     u7220:
  1417  003DCC                     
  1418                           ; BSR set to: 0
  1419                           ;fs_main.c: 79:             {;fs_main.c: 80:                 timer_value.second = 0;
  1420  003DCC  0E00               	movlw	0
  1421  003DCE  6FD7               	movwf	(_timer_value+1)& (0+255),b
  1422  003DD0  0E00               	movlw	0
  1423  003DD2  6FD6               	movwf	_timer_value& (0+255),b
  1424  003DD4                     l5832:
  1425                           
  1426                           ; BSR set to: 0
  1427                           ;fs_main.c: 85:     menuControl();
  1428  003DD4  ECE9  F021         	call	_menuControl	;wreg free
  1429  003DD8  EF94  F01E         	goto	l5806
  1430  003DDC  EF33  F000         	goto	start
  1431  003DE0                     __end_of_main:
  1432                           	callstack 0
  1433                           
  1434 ;; *************** function _timer_0_init *****************
  1435 ;; Defined at:
  1436 ;;		line 67 in file "fs_timer.c"
  1437 ;; Parameters:    Size  Location     Type
  1438 ;;		None
  1439 ;; Auto vars:     Size  Location     Type
  1440 ;;		None
  1441 ;; Return value:  Size  Location     Type
  1442 ;;                  1    wreg      void 
  1443 ;; Registers used:
  1444 ;;		wreg, status,2
  1445 ;; Tracked objects:
  1446 ;;		On entry : 0/0
  1447 ;;		On exit  : 0/0
  1448 ;;		Unchanged: 0/0
  1449 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1450 ;;      Params:         0       0       0       0       0       0       0
  1451 ;;      Locals:         0       0       0       0       0       0       0
  1452 ;;      Temps:          0       0       0       0       0       0       0
  1453 ;;      Totals:         0       0       0       0       0       0       0
  1454 ;;Total ram usage:        0 bytes
  1455 ;; Hardware stack levels used:    1
  1456 ;; Hardware stack levels required when called:    1
  1457 ;; This function calls:
  1458 ;;		Nothing
  1459 ;; This function is called by:
  1460 ;;		_main
  1461 ;; This function uses a non-reentrant model
  1462 ;;
  1463                           
  1464                           	psect	text1
  1465  004894                     __ptext1:
  1466                           	callstack 0
  1467  004894                     _timer_0_init:
  1468                           	callstack 29
  1469  004894                     
  1470                           ;fs_timer.c: 69:   T0CON = 0x81;
  1471  004894  0E81               	movlw	129
  1472  004896  6ED5               	movwf	213,c	;volatile
  1473                           
  1474                           ;fs_timer.c: 70:   TMR0H = 0x63;
  1475  004898  0E63               	movlw	99
  1476  00489A  6ED7               	movwf	215,c	;volatile
  1477                           
  1478                           ;fs_timer.c: 71:   TMR0L = 0xC0;
  1479  00489C  0EC0               	movlw	192
  1480  00489E  6ED6               	movwf	214,c	;volatile
  1481  0048A0                     
  1482                           ;fs_timer.c: 72:   INTCONbits.GIE = 1;
  1483  0048A0  8EF2               	bsf	242,7,c	;volatile
  1484  0048A2                     
  1485                           ;fs_timer.c: 73:   INTCONbits.TMR0IE = 1;
  1486  0048A2  8AF2               	bsf	242,5,c	;volatile
  1487  0048A4  0012               	return		;funcret
  1488  0048A6                     __end_of_timer_0_init:
  1489                           	callstack 0
  1490                           
  1491 ;; *************** function _system_init *****************
  1492 ;; Defined at:
  1493 ;;		line 83 in file "fs_mcu.c"
  1494 ;; Parameters:    Size  Location     Type
  1495 ;;		None
  1496 ;; Auto vars:     Size  Location     Type
  1497 ;;		None
  1498 ;; Return value:  Size  Location     Type
  1499 ;;                  1    wreg      void 
  1500 ;; Registers used:
  1501 ;;		wreg, status,2, cstack
  1502 ;; Tracked objects:
  1503 ;;		On entry : 0/0
  1504 ;;		On exit  : 0/0
  1505 ;;		Unchanged: 0/0
  1506 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1507 ;;      Params:         0       0       0       0       0       0       0
  1508 ;;      Locals:         0       0       0       0       0       0       0
  1509 ;;      Temps:          2       0       0       0       0       0       0
  1510 ;;      Totals:         2       0       0       0       0       0       0
  1511 ;;Total ram usage:        2 bytes
  1512 ;; Hardware stack levels used:    1
  1513 ;; Hardware stack levels required when called:    2
  1514 ;; This function calls:
  1515 ;;		_eepromRead
  1516 ;; This function is called by:
  1517 ;;		_main
  1518 ;; This function uses a non-reentrant model
  1519 ;;
  1520                           
  1521                           	psect	text2
  1522  00380E                     __ptext2:
  1523                           	callstack 0
  1524  00380E                     _system_init:
  1525                           	callstack 28
  1526  00380E                     
  1527                           ;fs_mcu.c: 85:     driver_limit.pay = 0;
  1528  00380E  0E00               	movlw	0
  1529  003810  0100               	movlb	0	; () banked
  1530  003812  6FCA               	movwf	_driver_limit& (0+255),b
  1531  003814  0E00               	movlw	0
  1532  003816  6FCB               	movwf	(_driver_limit+1)& (0+255),b
  1533  003818  0E00               	movlw	0
  1534  00381A  6FCC               	movwf	(_driver_limit+2)& (0+255),b
  1535  00381C  0E00               	movlw	0
  1536  00381E  6FCD               	movwf	(_driver_limit+3)& (0+255),b
  1537                           
  1538                           ;fs_mcu.c: 86:     driver_limit.payda = 0;
  1539  003820  0E00               	movlw	0
  1540  003822  6FCE               	movwf	(_driver_limit+4)& (0+255),b
  1541  003824  0E00               	movlw	0
  1542  003826  6FCF               	movwf	(_driver_limit+5)& (0+255),b
  1543  003828  0E00               	movlw	0
  1544  00382A  6FD0               	movwf	(_driver_limit+6)& (0+255),b
  1545  00382C  0E00               	movlw	0
  1546  00382E  6FD1               	movwf	(_driver_limit+7)& (0+255),b
  1547                           
  1548                           ;fs_mcu.c: 87:     driver_limit.ortalama = 0;
  1549  003830  0E00               	movlw	0
  1550  003832  6FD2               	movwf	(_driver_limit+8)& (0+255),b
  1551  003834  0E00               	movlw	0
  1552  003836  6FD3               	movwf	(_driver_limit+9)& (0+255),b
  1553  003838  0E00               	movlw	0
  1554  00383A  6FD4               	movwf	(_driver_limit+10)& (0+255),b
  1555  00383C  0E00               	movlw	0
  1556  00383E  6FD5               	movwf	(_driver_limit+11)& (0+255),b
  1557                           
  1558                           ;fs_mcu.c: 88:     convert_data.convert_channel_0 = 0;
  1559  003840  0E00               	movlw	0
  1560  003842  0101               	movlb	1	; () banked
  1561  003844  6F00               	movwf	_convert_data& (0+255),b
  1562  003846  0E00               	movlw	0
  1563  003848  6F01               	movwf	(_convert_data+1)& (0+255),b
  1564  00384A  0E00               	movlw	0
  1565  00384C  6F02               	movwf	(_convert_data+2)& (0+255),b
  1566  00384E  0E00               	movlw	0
  1567  003850  6F03               	movwf	(_convert_data+3)& (0+255),b
  1568                           
  1569                           ;fs_mcu.c: 89:     convert_data.convert_channel_1 = 0;
  1570  003852  0E00               	movlw	0
  1571  003854  6F04               	movwf	(_convert_data+4)& (0+255),b
  1572  003856  0E00               	movlw	0
  1573  003858  6F05               	movwf	(_convert_data+5)& (0+255),b
  1574  00385A  0E00               	movlw	0
  1575  00385C  6F06               	movwf	(_convert_data+6)& (0+255),b
  1576  00385E  0E00               	movlw	0
  1577  003860  6F07               	movwf	(_convert_data+7)& (0+255),b
  1578                           
  1579                           ;fs_mcu.c: 90:     convert_data.convert_channel_2 = 0;
  1580  003862  0E00               	movlw	0
  1581  003864  6F08               	movwf	(_convert_data+8)& (0+255),b
  1582  003866  0E00               	movlw	0
  1583  003868  6F09               	movwf	(_convert_data+9)& (0+255),b
  1584  00386A  0E00               	movlw	0
  1585  00386C  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1586  00386E  0E00               	movlw	0
  1587  003870  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1588                           
  1589                           ;fs_mcu.c: 91:     convert_data.convert_channel_3 = 0;
  1590  003872  0E00               	movlw	0
  1591  003874  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1592  003876  0E00               	movlw	0
  1593  003878  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1594  00387A  0E00               	movlw	0
  1595  00387C  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1596  00387E  0E00               	movlw	0
  1597  003880  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1598                           
  1599                           ;fs_mcu.c: 92:     convert_data.convert_channel_4 = 0;
  1600  003882  0E00               	movlw	0
  1601  003884  6F10               	movwf	(_convert_data+16)& (0+255),b
  1602  003886  0E00               	movlw	0
  1603  003888  6F11               	movwf	(_convert_data+17)& (0+255),b
  1604  00388A  0E00               	movlw	0
  1605  00388C  6F12               	movwf	(_convert_data+18)& (0+255),b
  1606  00388E  0E00               	movlw	0
  1607  003890  6F13               	movwf	(_convert_data+19)& (0+255),b
  1608                           
  1609                           ;fs_mcu.c: 93:     convert_data.convert_channel_5 = 0;
  1610  003892  0E00               	movlw	0
  1611  003894  6F14               	movwf	(_convert_data+20)& (0+255),b
  1612  003896  0E00               	movlw	0
  1613  003898  6F15               	movwf	(_convert_data+21)& (0+255),b
  1614  00389A  0E00               	movlw	0
  1615  00389C  6F16               	movwf	(_convert_data+22)& (0+255),b
  1616  00389E  0E00               	movlw	0
  1617  0038A0  6F17               	movwf	(_convert_data+23)& (0+255),b
  1618                           
  1619                           ;fs_mcu.c: 94:     convert_data.convert_channel_6 = 0;
  1620  0038A2  0E00               	movlw	0
  1621  0038A4  6F18               	movwf	(_convert_data+24)& (0+255),b
  1622  0038A6  0E00               	movlw	0
  1623  0038A8  6F19               	movwf	(_convert_data+25)& (0+255),b
  1624  0038AA  0E00               	movlw	0
  1625  0038AC  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1626  0038AE  0E00               	movlw	0
  1627  0038B0  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1628                           
  1629                           ;fs_mcu.c: 95:     convert_data.convert_channel_7 = 0;
  1630  0038B2  0E00               	movlw	0
  1631  0038B4  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1632  0038B6  0E00               	movlw	0
  1633  0038B8  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1634  0038BA  0E00               	movlw	0
  1635  0038BC  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1636  0038BE  0E00               	movlw	0
  1637  0038C0  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1638                           
  1639                           ;fs_mcu.c: 96:     controller.leftMotorSpeed = 0;
  1640  0038C2  0E00               	movlw	0
  1641  0038C4  6F57               	movwf	(_controller+7)& (0+255),b
  1642  0038C6  0E00               	movlw	0
  1643  0038C8  6F56               	movwf	(_controller+6)& (0+255),b
  1644                           
  1645                           ;fs_mcu.c: 97:     controller.rightMotorSpeed = 0;
  1646  0038CA  0E00               	movlw	0
  1647  0038CC  6F59               	movwf	(_controller+9)& (0+255),b
  1648  0038CE  0E00               	movlw	0
  1649  0038D0  6F58               	movwf	(_controller+8)& (0+255),b
  1650                           
  1651                           ;fs_mcu.c: 98:     timer_value.timer_0_counter = 0;
  1652  0038D2  0E00               	movlw	0
  1653  0038D4  0100               	movlb	0	; () banked
  1654  0038D6  6FDF               	movwf	(_timer_value+9)& (0+255),b
  1655                           
  1656                           ;fs_mcu.c: 99:     controller.error = 0;
  1657  0038D8  0E00               	movlw	0
  1658  0038DA  0101               	movlb	1	; () banked
  1659  0038DC  6F51               	movwf	(_controller+1)& (0+255),b
  1660  0038DE  0E00               	movlw	0
  1661  0038E0  6F50               	movwf	_controller& (0+255),b
  1662  0038E2                     
  1663                           ; BSR set to: 1
  1664                           ;fs_mcu.c: 101:     button_bounce_controller.menu = 0;
  1665  0038E2  905E               	bcf	_button_bounce_controller^0,0,c
  1666  0038E4                     
  1667                           ; BSR set to: 1
  1668                           ;fs_mcu.c: 102:     button_bounce_controller.pause = 0;
  1669  0038E4  965E               	bcf	_button_bounce_controller^0,3,c
  1670  0038E6                     
  1671                           ; BSR set to: 1
  1672                           ;fs_mcu.c: 103:     button_bounce_controller.start = 0;
  1673  0038E6  925E               	bcf	_button_bounce_controller^0,1,c
  1674  0038E8                     
  1675                           ; BSR set to: 1
  1676                           ;fs_mcu.c: 104:     button_bounce_controller.stop = 0;
  1677  0038E8  945E               	bcf	_button_bounce_controller^0,2,c
  1678  0038EA                     
  1679                           ; BSR set to: 1
  1680                           ;fs_mcu.c: 105:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1681  0038EA  0E00               	movlw	0
  1682  0038EC  EC21  F024         	call	_eepromRead
  1683  0038F0  0100               	movlb	0	; () banked
  1684  0038F2  6FE8               	movwf	_menu_value& (0+255),b
  1685  0038F4                     
  1686                           ; BSR set to: 0
  1687                           ;fs_mcu.c: 106:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1688  0038F4  0E01               	movlw	1
  1689  0038F6  EC21  F024         	call	_eepromRead
  1690  0038FA  0100               	movlb	0	; () banked
  1691  0038FC  6FE9               	movwf	(_menu_value+1)& (0+255),b
  1692  0038FE                     
  1693                           ; BSR set to: 0
  1694                           ;fs_mcu.c: 107:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1695  0038FE  0E02               	movlw	2
  1696  003900  EC21  F024         	call	_eepromRead
  1697  003904  0100               	movlb	0	; () banked
  1698  003906  6FEA               	movwf	(_menu_value+2)& (0+255),b
  1699  003908                     
  1700                           ; BSR set to: 0
  1701                           ;fs_mcu.c: 109:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1702  003908  0E39               	movlw	57
  1703  00390A  6E03               	movwf	(??_system_init+1)^0,c
  1704  00390C  0ED2               	movlw	210
  1705  00390E  6E02               	movwf	??_system_init^0,c
  1706  003910  0E4C               	movlw	76
  1707  003912                     u7487:
  1708  003912  2EE8               	decfsz	wreg,f,c
  1709  003914  D7FE               	bra	u7487
  1710  003916  2E02               	decfsz	??_system_init^0,f,c
  1711  003918  D7FC               	bra	u7487
  1712  00391A  2E03               	decfsz	(??_system_init+1)^0,f,c
  1713  00391C  D7FA               	bra	u7487
  1714  00391E  D000               	nop2	
  1715  003920                     
  1716                           ;fs_mcu.c: 110:     timer_value.remainingMinute = menu_value.driver_time;
  1717  003920  C0E8  F0DC         	movff	_menu_value,_timer_value+6
  1718  003924  0100               	movlb	0	; () banked
  1719  003926  6BDD               	clrf	(_timer_value+7)& (0+255),b
  1720  003928                     
  1721                           ; BSR set to: 0
  1722                           ;fs_mcu.c: 111:     timer_value.remainingSecond = 0;
  1723  003928  0E00               	movlw	0
  1724  00392A  6FDB               	movwf	(_timer_value+5)& (0+255),b
  1725  00392C  0E00               	movlw	0
  1726  00392E  6FDA               	movwf	(_timer_value+4)& (0+255),b
  1727  003930                     
  1728                           ; BSR set to: 0
  1729  003930  0012               	return		;funcret
  1730  003932                     __end_of_system_init:
  1731                           	callstack 0
  1732                           
  1733 ;; *************** function _eepromRead *****************
  1734 ;; Defined at:
  1735 ;;		line 36 in file "fs_eeprom.c"
  1736 ;; Parameters:    Size  Location     Type
  1737 ;;  address         1    wreg     unsigned char 
  1738 ;; Auto vars:     Size  Location     Type
  1739 ;;  address         1    0[COMRAM] unsigned char 
  1740 ;; Return value:  Size  Location     Type
  1741 ;;                  1    wreg      unsigned char 
  1742 ;; Registers used:
  1743 ;;		wreg, status,2
  1744 ;; Tracked objects:
  1745 ;;		On entry : 0/0
  1746 ;;		On exit  : 0/0
  1747 ;;		Unchanged: 0/0
  1748 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1749 ;;      Params:         0       0       0       0       0       0       0
  1750 ;;      Locals:         1       0       0       0       0       0       0
  1751 ;;      Temps:          0       0       0       0       0       0       0
  1752 ;;      Totals:         1       0       0       0       0       0       0
  1753 ;;Total ram usage:        1 bytes
  1754 ;; Hardware stack levels used:    1
  1755 ;; Hardware stack levels required when called:    1
  1756 ;; This function calls:
  1757 ;;		Nothing
  1758 ;; This function is called by:
  1759 ;;		_system_init
  1760 ;; This function uses a non-reentrant model
  1761 ;;
  1762                           
  1763                           	psect	text3
  1764  004842                     __ptext3:
  1765                           	callstack 0
  1766  004842                     _eepromRead:
  1767                           	callstack 28
  1768                           
  1769                           ; BSR set to: 0
  1770                           ;incstack = 0
  1771                           ;eepromRead@address stored from wreg
  1772  004842  6E01               	movwf	eepromRead@address^0,c
  1773  004844                     
  1774                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 41
      +                          :     EEADR = (uint8_t)address;
  1775  004844  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  1776  004848                     
  1777                           ;fs_eeprom.c: 43:     EECON1bits.EEPGD = 0;
  1778  004848  9EA6               	bcf	166,7,c	;volsfr
  1779  00484A                     
  1780                           ;fs_eeprom.c: 44:     EECON1bits.CFGS = 0;
  1781  00484A  9CA6               	bcf	166,6,c	;volsfr
  1782  00484C                     
  1783                           ;fs_eeprom.c: 45:     EECON1bits.RD = 1;
  1784  00484C  80A6               	bsf	166,0,c	;volsfr
  1785  00484E                     l70:
  1786  00484E  B0A6               	btfsc	166,0,c	;volsfr
  1787  004850  EF2C  F024         	goto	u6391
  1788  004854  EF2E  F024         	goto	u6390
  1789  004858                     u6391:
  1790  004858  EF27  F024         	goto	l70
  1791  00485C                     u6390:
  1792  00485C                     
  1793                           ;fs_eeprom.c: 51:     return EEDATA;
  1794  00485C  50A8               	movf	168,w,c	;volatile
  1795  00485E  0012               	return		;funcret
  1796  004860                     __end_of_eepromRead:
  1797                           	callstack 0
  1798                           
  1799 ;; *************** function _menuInitialize *****************
  1800 ;; Defined at:
  1801 ;;		line 38 in file "fs_menu_controller.c"
  1802 ;; Parameters:    Size  Location     Type
  1803 ;;		None
  1804 ;; Auto vars:     Size  Location     Type
  1805 ;;		None
  1806 ;; Return value:  Size  Location     Type
  1807 ;;                  1    wreg      void 
  1808 ;; Registers used:
  1809 ;;		None
  1810 ;; Tracked objects:
  1811 ;;		On entry : 0/0
  1812 ;;		On exit  : 0/0
  1813 ;;		Unchanged: 0/0
  1814 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1815 ;;      Params:         0       0       0       0       0       0       0
  1816 ;;      Locals:         0       0       0       0       0       0       0
  1817 ;;      Temps:          0       0       0       0       0       0       0
  1818 ;;      Totals:         0       0       0       0       0       0       0
  1819 ;;Total ram usage:        0 bytes
  1820 ;; Hardware stack levels used:    1
  1821 ;; Hardware stack levels required when called:    1
  1822 ;; This function calls:
  1823 ;;		Nothing
  1824 ;; This function is called by:
  1825 ;;		_main
  1826 ;; This function uses a non-reentrant model
  1827 ;;
  1828                           
  1829                           	psect	text4
  1830  00481E                     __ptext4:
  1831                           	callstack 0
  1832  00481E                     _menuInitialize:
  1833                           	callstack 29
  1834  00481E                     
  1835                           ;fs_menu_controller.c: 40:     ANSELBbits.ANSB5 = 0;
  1836  00481E  010F               	movlb	15	; () banked
  1837  004820  9B39               	bcf	57,5,b	;volatile
  1838                           
  1839                           ;fs_menu_controller.c: 41:     TRISBbits.RB5 = 1;
  1840  004822  8A93               	bsf	147,5,c	;volatile
  1841                           
  1842                           ;fs_menu_controller.c: 43:     ANSELBbits.ANSB4 = 0;
  1843  004824  9939               	bcf	57,4,b	;volatile
  1844                           
  1845                           ;fs_menu_controller.c: 44:     TRISBbits.RB4 = 1;
  1846  004826  8893               	bsf	147,4,c	;volatile
  1847                           
  1848                           ;fs_menu_controller.c: 46:     ANSELBbits.ANSB3 = 0;
  1849  004828  9739               	bcf	57,3,b	;volatile
  1850                           
  1851                           ;fs_menu_controller.c: 47:     TRISBbits.RB3 = 1;
  1852  00482A  8693               	bsf	147,3,c	;volatile
  1853                           
  1854                           ;fs_menu_controller.c: 49:     ANSELAbits.ANSA0 = 0;
  1855  00482C  9138               	bcf	56,0,b	;volatile
  1856                           
  1857                           ;fs_menu_controller.c: 50:     TRISAbits.RA0 = 1;
  1858  00482E  8092               	bsf	146,0,c	;volatile
  1859                           
  1860                           ;fs_menu_controller.c: 52:     ANSELAbits.ANSA5 = 0;
  1861  004830  9B38               	bcf	56,5,b	;volatile
  1862                           
  1863                           ;fs_menu_controller.c: 53:     TRISAbits.RA5 = 1;
  1864  004832  8A92               	bsf	146,5,c	;volatile
  1865                           
  1866                           ;fs_menu_controller.c: 55:     ANSELBbits.ANSB2 = 0;
  1867  004834  9539               	bcf	57,2,b	;volatile
  1868                           
  1869                           ;fs_menu_controller.c: 56:     TRISBbits.RB2 = 1;
  1870  004836  8493               	bsf	147,2,c	;volatile
  1871                           
  1872                           ;fs_menu_controller.c: 58:     ANSELEbits.ANSE2 = 0;
  1873  004838  953C               	bcf	60,2,b	;volatile
  1874                           
  1875                           ;fs_menu_controller.c: 59:     TRISEbits.RE2 = 0;
  1876  00483A  9496               	bcf	150,2,c	;volatile
  1877                           
  1878                           ;fs_menu_controller.c: 61:     TRISAbits.RA4 = 0;
  1879  00483C  9892               	bcf	146,4,c	;volatile
  1880                           
  1881                           ;fs_menu_controller.c: 62:     TRISBbits.RB6 = 0;
  1882  00483E  9C93               	bcf	147,6,c	;volatile
  1883  004840                     
  1884                           ; BSR set to: 15
  1885  004840  0012               	return		;funcret
  1886  004842                     __end_of_menuInitialize:
  1887                           	callstack 0
  1888                           
  1889 ;; *************** function _menuControl *****************
  1890 ;; Defined at:
  1891 ;;		line 155 in file "fs_menu_controller.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;		None
  1894 ;; Auto vars:     Size  Location     Type
  1895 ;;		None
  1896 ;; Return value:  Size  Location     Type
  1897 ;;                  1    wreg      void 
  1898 ;; Registers used:
  1899 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1900 ;; Tracked objects:
  1901 ;;		On entry : 0/0
  1902 ;;		On exit  : 0/0
  1903 ;;		Unchanged: 0/0
  1904 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1905 ;;      Params:         0       0       0       0       0       0       0
  1906 ;;      Locals:         0       0       0       0       0       0       0
  1907 ;;      Temps:          0       0       0       0       0       0       0
  1908 ;;      Totals:         0       0       0       0       0       0       0
  1909 ;;Total ram usage:        0 bytes
  1910 ;; Hardware stack levels used:    1
  1911 ;; Hardware stack levels required when called:   10
  1912 ;; This function calls:
  1913 ;;		_buttonControlFlags
  1914 ;;		_stateMachine
  1915 ;; This function is called by:
  1916 ;;		_main
  1917 ;; This function uses a non-reentrant model
  1918 ;;
  1919                           
  1920                           	psect	text5
  1921  0043D2                     __ptext5:
  1922                           	callstack 0
  1923  0043D2                     _menuControl:
  1924                           	callstack 20
  1925  0043D2                     
  1926                           ;fs_menu_controller.c: 157:     buttonControlFlags();
  1927  0043D2  ECF6  F018         	call	_buttonControlFlags	;wreg free
  1928  0043D6                     
  1929                           ;fs_menu_controller.c: 158:     stateMachine();
  1930  0043D6  EC41  F009         	call	_stateMachine	;wreg free
  1931  0043DA                     
  1932                           ;fs_menu_controller.c: 160:     if (menu_flags.menu_start_flag == 1)
  1933  0043DA  0100               	movlb	0	; () banked
  1934  0043DC  A3F3               	btfss	_menu_flags& (0+255),1,b
  1935  0043DE  EFF3  F021         	goto	u7111
  1936  0043E2  EFF5  F021         	goto	u7110
  1937  0043E6                     u7111:
  1938  0043E6  EFFC  F021         	goto	l5698
  1939  0043EA                     u7110:
  1940  0043EA                     
  1941                           ; BSR set to: 0
  1942                           ;fs_menu_controller.c: 161:     {;fs_menu_controller.c: 162:         menu_flags.menu_sta
      +                          rt_flag = 0;
  1943  0043EA  93F3               	bcf	_menu_flags& (0+255),1,b
  1944  0043EC                     
  1945                           ; BSR set to: 0
  1946                           ;fs_menu_controller.c: 163:         startIsClick = 1;
  1947  0043EC  0E01               	movlw	1
  1948  0043EE  6FF6               	movwf	_startIsClick& (0+255),b
  1949                           
  1950                           ;fs_menu_controller.c: 164:         pauseIsClick = 0;
  1951  0043F0  0E00               	movlw	0
  1952  0043F2  6FF7               	movwf	_pauseIsClick& (0+255),b
  1953                           
  1954                           ;fs_menu_controller.c: 165:         stopIsClick = 0;
  1955  0043F4  0E00               	movlw	0
  1956  0043F6  6FF5               	movwf	_stopIsClick& (0+255),b
  1957  0043F8                     l5698:
  1958                           
  1959                           ; BSR set to: 0
  1960                           ;fs_menu_controller.c: 169:     if (menu_flags.menu_pause_flag == 1)
  1961  0043F8  A7F3               	btfss	_menu_flags& (0+255),3,b
  1962  0043FA  EF01  F022         	goto	u7121
  1963  0043FE  EF03  F022         	goto	u7120
  1964  004402                     u7121:
  1965  004402  EF0A  F022         	goto	l5704
  1966  004406                     u7120:
  1967  004406                     
  1968                           ; BSR set to: 0
  1969                           ;fs_menu_controller.c: 170:     {;fs_menu_controller.c: 171:         menu_flags.menu_pau
      +                          se_flag = 0;
  1970  004406  97F3               	bcf	_menu_flags& (0+255),3,b
  1971  004408                     
  1972                           ; BSR set to: 0
  1973                           ;fs_menu_controller.c: 172:         pauseIsClick = 1;
  1974  004408  0E01               	movlw	1
  1975  00440A  6FF7               	movwf	_pauseIsClick& (0+255),b
  1976                           
  1977                           ;fs_menu_controller.c: 173:         startIsClick = 0;
  1978  00440C  0E00               	movlw	0
  1979  00440E  6FF6               	movwf	_startIsClick& (0+255),b
  1980                           
  1981                           ;fs_menu_controller.c: 174:         stopIsClick = 0;
  1982  004410  0E00               	movlw	0
  1983  004412  6FF5               	movwf	_stopIsClick& (0+255),b
  1984  004414                     l5704:
  1985                           
  1986                           ; BSR set to: 0
  1987                           ;fs_menu_controller.c: 177:     if (menu_flags.menu_stop_flag == 1)
  1988  004414  A5F3               	btfss	_menu_flags& (0+255),2,b
  1989  004416  EF0F  F022         	goto	u7131
  1990  00441A  EF11  F022         	goto	u7130
  1991  00441E                     u7131:
  1992  00441E  EF18  F022         	goto	l348
  1993  004422                     u7130:
  1994  004422                     
  1995                           ; BSR set to: 0
  1996                           ;fs_menu_controller.c: 178:     {;fs_menu_controller.c: 179:         menu_flags.menu_sto
      +                          p_flag = 0;
  1997  004422  95F3               	bcf	_menu_flags& (0+255),2,b
  1998  004424                     
  1999                           ; BSR set to: 0
  2000                           ;fs_menu_controller.c: 180:         pauseIsClick = 0;
  2001  004424  0E00               	movlw	0
  2002  004426  6FF7               	movwf	_pauseIsClick& (0+255),b
  2003                           
  2004                           ;fs_menu_controller.c: 181:         startIsClick = 0;
  2005  004428  0E00               	movlw	0
  2006  00442A  6FF6               	movwf	_startIsClick& (0+255),b
  2007                           
  2008                           ;fs_menu_controller.c: 182:         stopIsClick = 1;
  2009  00442C  0E01               	movlw	1
  2010  00442E  6FF5               	movwf	_stopIsClick& (0+255),b
  2011  004430                     l348:
  2012                           
  2013                           ; BSR set to: 0
  2014  004430  0012               	return		;funcret
  2015  004432                     __end_of_menuControl:
  2016                           	callstack 0
  2017                           
  2018 ;; *************** function _stateMachine *****************
  2019 ;; Defined at:
  2020 ;;		line 193 in file "fs_menu_controller.c"
  2021 ;; Parameters:    Size  Location     Type
  2022 ;;		None
  2023 ;; Auto vars:     Size  Location     Type
  2024 ;;  textCursor2    16   90[BANK0 ] unsigned char [16]
  2025 ;; Return value:  Size  Location     Type
  2026 ;;                  1    wreg      void 
  2027 ;; Registers used:
  2028 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2029 ;; Tracked objects:
  2030 ;;		On entry : 0/0
  2031 ;;		On exit  : 0/0
  2032 ;;		Unchanged: 0/0
  2033 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2034 ;;      Params:         0       0       0       0       0       0       0
  2035 ;;      Locals:         0      16       0       0       0       0       0
  2036 ;;      Temps:          2       0       0       0       0       0       0
  2037 ;;      Totals:         2      16       0       0       0       0       0
  2038 ;;Total ram usage:       18 bytes
  2039 ;; Hardware stack levels used:    1
  2040 ;; Hardware stack levels required when called:    9
  2041 ;; This function calls:
  2042 ;;		_Lcd_Set_Cursor
  2043 ;;		_Lcd_Write_String
  2044 ;;		___fladd
  2045 ;;		___flge
  2046 ;;		___flsub
  2047 ;;		_eepromWrite
  2048 ;;		_sprintf
  2049 ;; This function is called by:
  2050 ;;		_menuControl
  2051 ;; This function uses a non-reentrant model
  2052 ;;
  2053                           
  2054                           	psect	text6
  2055  001282                     __ptext6:
  2056                           	callstack 0
  2057  001282                     _stateMachine:
  2058                           	callstack 20
  2059  001282                     
  2060                           ;fs_menu_controller.c: 195:     char textCursor2[16] = {0};
  2061  001282  EE20  F0BA         	lfsr	2,stateMachine@textCursor2
  2062  001286  0E0F               	movlw	15
  2063  001288                     u6651:
  2064  001288  6ADE               	clrf	postinc2,c
  2065  00128A  06E8               	decf	wreg,f,c
  2066  00128C  E2FD               	bc	u6651
  2067                           
  2068                           ;fs_menu_controller.c: 197:     switch (menu_selected)
  2069  00128E  EFEE  F00C         	goto	l5600
  2070  001292                     l354:
  2071                           
  2072                           ; BSR set to: 0
  2073                           ;fs_menu_controller.c: 201:             LATBbits.LATB6 = 0;
  2074  001292  9C8A               	bcf	138,6,c	;volatile
  2075                           
  2076                           ;fs_menu_controller.c: 202:             LATAbits.LATA4 = 1;
  2077  001294  8889               	bsf	137,4,c	;volatile
  2078                           
  2079                           ;fs_menu_controller.c: 203:             LATEbits.LATE2 = 0;
  2080  001296  948D               	bcf	141,2,c	;volatile
  2081  001298                     
  2082                           ; BSR set to: 0
  2083                           ;fs_menu_controller.c: 204:             Lcd_Set_Cursor(1,1);
  2084  001298  0E01               	movlw	1
  2085  00129A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2086  00129C  0E01               	movlw	1
  2087  00129E  EC85  F021         	call	_Lcd_Set_Cursor
  2088  0012A2                     
  2089                           ;fs_menu_controller.c: 205:             Lcd_Write_String("KALAN ZAMAN     ");
  2090  0012A2  0E4A               	movlw	low STR_1
  2091  0012A4  6E05               	movwf	Lcd_Write_String@a^0,c
  2092  0012A6  0E06               	movlw	high STR_1
  2093  0012A8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2094  0012AA  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2095  0012AE                     
  2096                           ;fs_menu_controller.c: 206:             Lcd_Set_Cursor(2,1);
  2097  0012AE  0E01               	movlw	1
  2098  0012B0  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2099  0012B2  0E02               	movlw	2
  2100  0012B4  EC85  F021         	call	_Lcd_Set_Cursor
  2101  0012B8                     
  2102                           ;fs_menu_controller.c: 207:             sprintf(textCursor2,"      %d:%d   ",timer_value
      +                          .remainingMinute,timer_value.remainingSecond);
  2103  0012B8  0EBA               	movlw	low stateMachine@textCursor2
  2104  0012BA  0100               	movlb	0	; () banked
  2105  0012BC  6FAE               	movwf	sprintf@s& (0+255),b
  2106  0012BE  0E00               	movlw	high stateMachine@textCursor2
  2107  0012C0  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2108  0012C2  0EAF               	movlw	low STR_2
  2109  0012C4  6FB0               	movwf	sprintf@fmt& (0+255),b
  2110  0012C6  0E06               	movlw	high STR_2
  2111  0012C8  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2112  0012CA  C0DC  F0B2         	movff	_timer_value+6,?_sprintf+4
  2113  0012CE  C0DD  F0B3         	movff	_timer_value+7,?_sprintf+5
  2114  0012D2  C0DA  F0B4         	movff	_timer_value+4,?_sprintf+6
  2115  0012D6  C0DB  F0B5         	movff	_timer_value+5,?_sprintf+7
  2116  0012DA  ECCE  F022         	call	_sprintf	;wreg free
  2117  0012DE                     
  2118                           ;fs_menu_controller.c: 208:             Lcd_Write_String(textCursor2);
  2119  0012DE  0EBA               	movlw	low stateMachine@textCursor2
  2120  0012E0  6E05               	movwf	Lcd_Write_String@a^0,c
  2121  0012E2  0E00               	movlw	high stateMachine@textCursor2
  2122  0012E4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2123  0012E6  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2124  0012EA                     
  2125                           ;fs_menu_controller.c: 210:             if ( timer_value.menu_login_delay == 100)
  2126  0012EA  0E64               	movlw	100
  2127  0012EC  0100               	movlb	0	; () banked
  2128  0012EE  19DE               	xorwf	(_timer_value+8)& (0+255),w,b
  2129  0012F0  A4D8               	btfss	status,2,c
  2130  0012F2  EF7D  F009         	goto	u6661
  2131  0012F6  EF7F  F009         	goto	u6660
  2132  0012FA                     u6661:
  2133  0012FA  EF83  F009         	goto	l5346
  2134  0012FE                     u6660:
  2135  0012FE                     
  2136                           ; BSR set to: 0
  2137                           ;fs_menu_controller.c: 211:             {;fs_menu_controller.c: 212:                 tim
      +                          er_value.menu_login_delay = 0;
  2138  0012FE  0E00               	movlw	0
  2139  001300  6FDE               	movwf	(_timer_value+8)& (0+255),b
  2140                           
  2141                           ;fs_menu_controller.c: 213:                 menu_selected = DRIVER_TIME_SETTING;
  2142  001302  0E01               	movlw	1
  2143  001304  6FF4               	movwf	_menu_selected& (0+255),b
  2144  001306                     l5346:
  2145                           
  2146                           ; BSR set to: 0
  2147                           ;fs_menu_controller.c: 216:             if ((timer_value.remainingMinute <= 0) && (timer
      +                          _value.remainingSecond == 0) )
  2148  001306  BFDD               	btfsc	(_timer_value+7)& (0+255),7,b
  2149  001308  EF90  F009         	goto	u6670
  2150  00130C  51DD               	movf	(_timer_value+7)& (0+255),w,b
  2151  00130E  E106               	bnz	u6671
  2152  001310  05DC               	decf	(_timer_value+6)& (0+255),w,b
  2153  001312  B0D8               	btfsc	status,0,c
  2154  001314  EF8E  F009         	goto	u6671
  2155  001318  EF90  F009         	goto	u6670
  2156  00131C                     u6671:
  2157  00131C  EF9F  F009         	goto	l356
  2158  001320                     u6670:
  2159  001320                     
  2160                           ; BSR set to: 0
  2161  001320  51DA               	movf	(_timer_value+4)& (0+255),w,b
  2162  001322  11DB               	iorwf	(_timer_value+5)& (0+255),w,b
  2163  001324  A4D8               	btfss	status,2,c
  2164  001326  EF97  F009         	goto	u6681
  2165  00132A  EF99  F009         	goto	u6680
  2166  00132E                     u6681:
  2167  00132E  EF9F  F009         	goto	l356
  2168  001332                     u6680:
  2169  001332                     
  2170                           ; BSR set to: 0
  2171                           ;fs_menu_controller.c: 217:             {;fs_menu_controller.c: 218:                    
      +                           menu_selected = STOP_MENU;
  2172  001332  0E04               	movlw	4
  2173  001334  6FF4               	movwf	_menu_selected& (0+255),b
  2174                           
  2175                           ;fs_menu_controller.c: 219:                     timer_value.minute = 0;
  2176  001336  0E00               	movlw	0
  2177  001338  6FD9               	movwf	(_timer_value+3)& (0+255),b
  2178  00133A  0E00               	movlw	0
  2179  00133C  6FD8               	movwf	(_timer_value+2)& (0+255),b
  2180  00133E                     l356:
  2181                           
  2182                           ; BSR set to: 0
  2183                           ;fs_menu_controller.c: 222:             if ( (startIsClick == 0) && (pauseIsClick == 1) 
      +                          && (stopIsClick == 0) && (menu_selected == MAIN_MENU))
  2184  00133E  51F6               	movf	_startIsClick& (0+255),w,b
  2185  001340  A4D8               	btfss	status,2,c
  2186  001342  EFA5  F009         	goto	u6691
  2187  001346  EFA7  F009         	goto	u6690
  2188  00134A                     u6691:
  2189  00134A  EFC1  F009         	goto	l357
  2190  00134E                     u6690:
  2191  00134E                     
  2192                           ; BSR set to: 0
  2193  00134E  05F7               	decf	_pauseIsClick& (0+255),w,b
  2194  001350  A4D8               	btfss	status,2,c
  2195  001352  EFAD  F009         	goto	u6701
  2196  001356  EFAF  F009         	goto	u6700
  2197  00135A                     u6701:
  2198  00135A  EFC1  F009         	goto	l357
  2199  00135E                     u6700:
  2200  00135E                     
  2201                           ; BSR set to: 0
  2202  00135E  51F5               	movf	_stopIsClick& (0+255),w,b
  2203  001360  A4D8               	btfss	status,2,c
  2204  001362  EFB5  F009         	goto	u6711
  2205  001366  EFB7  F009         	goto	u6710
  2206  00136A                     u6711:
  2207  00136A  EFC1  F009         	goto	l357
  2208  00136E                     u6710:
  2209  00136E                     
  2210                           ; BSR set to: 0
  2211  00136E  51F4               	movf	_menu_selected& (0+255),w,b
  2212  001370  A4D8               	btfss	status,2,c
  2213  001372  EFBD  F009         	goto	u6721
  2214  001376  EFBF  F009         	goto	u6720
  2215  00137A                     u6721:
  2216  00137A  EFC1  F009         	goto	l357
  2217  00137E                     u6720:
  2218  00137E                     
  2219                           ; BSR set to: 0
  2220                           ;fs_menu_controller.c: 223:             {;fs_menu_controller.c: 224:                 men
      +                          u_selected = PAUSE_MENU;
  2221  00137E  0E06               	movlw	6
  2222  001380  6FF4               	movwf	_menu_selected& (0+255),b
  2223  001382                     l357:
  2224                           
  2225                           ; BSR set to: 0
  2226                           ;fs_menu_controller.c: 227:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == MAIN_MENU) )
  2227  001382  51F6               	movf	_startIsClick& (0+255),w,b
  2228  001384  A4D8               	btfss	status,2,c
  2229  001386  EFC7  F009         	goto	u6731
  2230  00138A  EFC9  F009         	goto	u6730
  2231  00138E                     u6731:
  2232  00138E  EF20  F00D         	goto	l389
  2233  001392                     u6730:
  2234  001392                     
  2235                           ; BSR set to: 0
  2236  001392  51F7               	movf	_pauseIsClick& (0+255),w,b
  2237  001394  A4D8               	btfss	status,2,c
  2238  001396  EFCF  F009         	goto	u6741
  2239  00139A  EFD1  F009         	goto	u6740
  2240  00139E                     u6741:
  2241  00139E  EF20  F00D         	goto	l389
  2242  0013A2                     u6740:
  2243  0013A2                     
  2244                           ; BSR set to: 0
  2245  0013A2  05F5               	decf	_stopIsClick& (0+255),w,b
  2246  0013A4  A4D8               	btfss	status,2,c
  2247  0013A6  EFD7  F009         	goto	u6751
  2248  0013AA  EFD9  F009         	goto	u6750
  2249  0013AE                     u6751:
  2250  0013AE  EF20  F00D         	goto	l389
  2251  0013B2                     u6750:
  2252  0013B2                     
  2253                           ; BSR set to: 0
  2254  0013B2  51F4               	movf	_menu_selected& (0+255),w,b
  2255  0013B4  A4D8               	btfss	status,2,c
  2256  0013B6  EFDF  F009         	goto	u6761
  2257  0013BA  EFE1  F009         	goto	u6760
  2258  0013BE                     u6761:
  2259  0013BE  EF20  F00D         	goto	l389
  2260  0013C2                     u6760:
  2261  0013C2                     
  2262                           ; BSR set to: 0
  2263                           ;fs_menu_controller.c: 228:             {;fs_menu_controller.c: 229:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  2264  0013C2  C0E8  F0DC         	movff	_menu_value,_timer_value+6
  2265  0013C6  6BDD               	clrf	(_timer_value+7)& (0+255),b
  2266  0013C8                     
  2267                           ; BSR set to: 0
  2268                           ;fs_menu_controller.c: 230:                  timer_value.remainingSecond = 0;
  2269  0013C8  0E00               	movlw	0
  2270  0013CA  6FDB               	movwf	(_timer_value+5)& (0+255),b
  2271  0013CC  0E00               	movlw	0
  2272  0013CE  6FDA               	movwf	(_timer_value+4)& (0+255),b
  2273                           
  2274                           ;fs_menu_controller.c: 231:                  timer_value.second = 0;
  2275  0013D0  0E00               	movlw	0
  2276  0013D2  6FD7               	movwf	(_timer_value+1)& (0+255),b
  2277  0013D4  0E00               	movlw	0
  2278  0013D6  6FD6               	movwf	_timer_value& (0+255),b
  2279                           
  2280                           ;fs_menu_controller.c: 232:                  timer_value.minute = 0;
  2281  0013D8  0E00               	movlw	0
  2282  0013DA  6FD9               	movwf	(_timer_value+3)& (0+255),b
  2283  0013DC  0E00               	movlw	0
  2284  0013DE  6FD8               	movwf	(_timer_value+2)& (0+255),b
  2285  0013E0  EF20  F00D         	goto	l389
  2286  0013E4                     l360:
  2287                           
  2288                           ; BSR set to: 0
  2289                           ;fs_menu_controller.c: 240:             LATBbits.LATB6 = 0;
  2290  0013E4  9C8A               	bcf	138,6,c	;volatile
  2291                           
  2292                           ;fs_menu_controller.c: 241:             LATAbits.LATA4 = 0;
  2293  0013E6  9889               	bcf	137,4,c	;volatile
  2294                           
  2295                           ;fs_menu_controller.c: 242:             LATEbits.LATE2 = 1;
  2296  0013E8  848D               	bsf	141,2,c	;volatile
  2297                           
  2298                           ;fs_menu_controller.c: 244:             if (menu_flags.menu_input_flag == 1)
  2299  0013EA  A1F3               	btfss	_menu_flags& (0+255),0,b
  2300  0013EC  EFFA  F009         	goto	u6771
  2301  0013F0  EFFC  F009         	goto	u6770
  2302  0013F4                     u6771:
  2303  0013F4  EFFF  F009         	goto	l5374
  2304  0013F8                     u6770:
  2305  0013F8                     
  2306                           ; BSR set to: 0
  2307                           ;fs_menu_controller.c: 245:             {;fs_menu_controller.c: 246:                 men
      +                          u_flags.menu_input_flag = 0;
  2308  0013F8  91F3               	bcf	_menu_flags& (0+255),0,b
  2309  0013FA                     
  2310                           ; BSR set to: 0
  2311                           ;fs_menu_controller.c: 247:                 menu_selected = STOP_TIME_SETTING;
  2312  0013FA  0E02               	movlw	2
  2313  0013FC  6FF4               	movwf	_menu_selected& (0+255),b
  2314  0013FE                     l5374:
  2315                           
  2316                           ; BSR set to: 0
  2317                           ;fs_menu_controller.c: 250:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.driver_time < 30))
  2318  0013FE  A9F3               	btfss	_menu_flags& (0+255),4,b
  2319  001400  EF04  F00A         	goto	u6781
  2320  001404  EF06  F00A         	goto	u6780
  2321  001408                     u6781:
  2322  001408  EF25  F00A         	goto	l5392
  2323  00140C                     u6780:
  2324  00140C                     
  2325                           ; BSR set to: 0
  2326  00140C  0E1E               	movlw	30
  2327  00140E  61E8               	cpfslt	_menu_value& (0+255),b
  2328  001410  EF0C  F00A         	goto	u6791
  2329  001414  EF0E  F00A         	goto	u6790
  2330  001418                     u6791:
  2331  001418  EF25  F00A         	goto	l5392
  2332  00141C                     u6790:
  2333  00141C                     
  2334                           ; BSR set to: 0
  2335                           ;fs_menu_controller.c: 251:             {;fs_menu_controller.c: 252:                 men
      +                          u_flags.menu_increase_flag = 0;
  2336  00141C  99F3               	bcf	_menu_flags& (0+255),4,b
  2337  00141E                     
  2338                           ; BSR set to: 0
  2339                           ;fs_menu_controller.c: 253:                 menu_value.driver_time++;
  2340  00141E  2BE8               	incf	_menu_value& (0+255),f,b
  2341  001420                     
  2342                           ; BSR set to: 0
  2343                           ;fs_menu_controller.c: 254:                 eepromWrite(0x00,(uint8_t)menu_value.driver_
      +                          time);
  2344  001420  C0E8  F001         	movff	_menu_value,eepromWrite@data
  2345  001424  0E00               	movlw	0
  2346  001426  ECE5  F023         	call	_eepromWrite
  2347  00142A                     
  2348                           ;fs_menu_controller.c: 255:                 timer_value.minute =0 ;
  2349  00142A  0E00               	movlw	0
  2350  00142C  0100               	movlb	0	; () banked
  2351  00142E  6FD9               	movwf	(_timer_value+3)& (0+255),b
  2352  001430  0E00               	movlw	0
  2353  001432  6FD8               	movwf	(_timer_value+2)& (0+255),b
  2354  001434                     
  2355                           ; BSR set to: 0
  2356                           ;fs_menu_controller.c: 256:                 timer_value.second = 0;
  2357  001434  0E00               	movlw	0
  2358  001436  6FD7               	movwf	(_timer_value+1)& (0+255),b
  2359  001438  0E00               	movlw	0
  2360  00143A  6FD6               	movwf	_timer_value& (0+255),b
  2361  00143C                     
  2362                           ; BSR set to: 0
  2363                           ;fs_menu_controller.c: 257:                 timer_value.remainingSecond = 0;
  2364  00143C  0E00               	movlw	0
  2365  00143E  6FDB               	movwf	(_timer_value+5)& (0+255),b
  2366  001440  0E00               	movlw	0
  2367  001442  6FDA               	movwf	(_timer_value+4)& (0+255),b
  2368  001444                     
  2369                           ; BSR set to: 0
  2370                           ;fs_menu_controller.c: 258:                 timer_value.remainingMinute = menu_value.dri
      +                          ver_time;
  2371  001444  C0E8  F0DC         	movff	_menu_value,_timer_value+6
  2372  001448  6BDD               	clrf	(_timer_value+7)& (0+255),b
  2373  00144A                     l5392:
  2374                           
  2375                           ; BSR set to: 0
  2376                           ;fs_menu_controller.c: 261:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.driver_time > 0))
  2377  00144A  ABF3               	btfss	_menu_flags& (0+255),5,b
  2378  00144C  EF2A  F00A         	goto	u6801
  2379  001450  EF2C  F00A         	goto	u6800
  2380  001454                     u6801:
  2381  001454  EF4B  F00A         	goto	l5410
  2382  001458                     u6800:
  2383  001458                     
  2384                           ; BSR set to: 0
  2385  001458  51E8               	movf	_menu_value& (0+255),w,b
  2386  00145A  B4D8               	btfsc	status,2,c
  2387  00145C  EF32  F00A         	goto	u6811
  2388  001460  EF34  F00A         	goto	u6810
  2389  001464                     u6811:
  2390  001464  EF4B  F00A         	goto	l5410
  2391  001468                     u6810:
  2392  001468                     
  2393                           ; BSR set to: 0
  2394                           ;fs_menu_controller.c: 262:             {;fs_menu_controller.c: 263:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2395  001468  9BF3               	bcf	_menu_flags& (0+255),5,b
  2396  00146A                     
  2397                           ; BSR set to: 0
  2398                           ;fs_menu_controller.c: 264:                  menu_value.driver_time--;
  2399  00146A  07E8               	decf	_menu_value& (0+255),f,b
  2400  00146C                     
  2401                           ; BSR set to: 0
  2402                           ;fs_menu_controller.c: 265:                  eepromWrite(0x00,(uint8_t)menu_value.driver
      +                          _time);
  2403  00146C  C0E8  F001         	movff	_menu_value,eepromWrite@data
  2404  001470  0E00               	movlw	0
  2405  001472  ECE5  F023         	call	_eepromWrite
  2406  001476                     
  2407                           ;fs_menu_controller.c: 266:                  timer_value.minute =0 ;
  2408  001476  0E00               	movlw	0
  2409  001478  0100               	movlb	0	; () banked
  2410  00147A  6FD9               	movwf	(_timer_value+3)& (0+255),b
  2411  00147C  0E00               	movlw	0
  2412  00147E  6FD8               	movwf	(_timer_value+2)& (0+255),b
  2413  001480                     
  2414                           ; BSR set to: 0
  2415                           ;fs_menu_controller.c: 267:                  timer_value.second = 0;
  2416  001480  0E00               	movlw	0
  2417  001482  6FD7               	movwf	(_timer_value+1)& (0+255),b
  2418  001484  0E00               	movlw	0
  2419  001486  6FD6               	movwf	_timer_value& (0+255),b
  2420  001488                     
  2421                           ; BSR set to: 0
  2422                           ;fs_menu_controller.c: 268:                  timer_value.remainingSecond = 0;
  2423  001488  0E00               	movlw	0
  2424  00148A  6FDB               	movwf	(_timer_value+5)& (0+255),b
  2425  00148C  0E00               	movlw	0
  2426  00148E  6FDA               	movwf	(_timer_value+4)& (0+255),b
  2427  001490                     
  2428                           ; BSR set to: 0
  2429                           ;fs_menu_controller.c: 269:                  timer_value.remainingMinute = menu_value.dr
      +                          iver_time;
  2430  001490  C0E8  F0DC         	movff	_menu_value,_timer_value+6
  2431  001494  6BDD               	clrf	(_timer_value+7)& (0+255),b
  2432  001496                     l5410:
  2433                           
  2434                           ; BSR set to: 0
  2435                           ;fs_menu_controller.c: 273:             Lcd_Set_Cursor(1,1);
  2436  001496  0E01               	movlw	1
  2437  001498  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2438  00149A  0E01               	movlw	1
  2439  00149C  EC85  F021         	call	_Lcd_Set_Cursor
  2440  0014A0                     
  2441                           ;fs_menu_controller.c: 274:             Lcd_Write_String("HAREKT ZAMANI dk");
  2442  0014A0  0E7D               	movlw	low STR_3
  2443  0014A2  6E05               	movwf	Lcd_Write_String@a^0,c
  2444  0014A4  0E06               	movlw	high STR_3
  2445  0014A6  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2446  0014A8  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2447  0014AC                     
  2448                           ;fs_menu_controller.c: 275:             Lcd_Set_Cursor(2,1);
  2449  0014AC  0E01               	movlw	1
  2450  0014AE  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2451  0014B0  0E02               	movlw	2
  2452  0014B2  EC85  F021         	call	_Lcd_Set_Cursor
  2453  0014B6                     
  2454                           ;fs_menu_controller.c: 276:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.driver_time);
  2455  0014B6  0EBA               	movlw	low stateMachine@textCursor2
  2456  0014B8  0100               	movlb	0	; () banked
  2457  0014BA  6FAE               	movwf	sprintf@s& (0+255),b
  2458  0014BC  0E00               	movlw	high stateMachine@textCursor2
  2459  0014BE  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2460  0014C0  0E16               	movlw	low STR_4
  2461  0014C2  6FB0               	movwf	sprintf@fmt& (0+255),b
  2462  0014C4  0E06               	movlw	high STR_4
  2463  0014C6  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2464  0014C8  C0E8  F0B2         	movff	_menu_value,?_sprintf+4
  2465  0014CC  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2466  0014CE  ECCE  F022         	call	_sprintf	;wreg free
  2467  0014D2                     
  2468                           ;fs_menu_controller.c: 277:             Lcd_Write_String(textCursor2);
  2469  0014D2  0EBA               	movlw	low stateMachine@textCursor2
  2470  0014D4  6E05               	movwf	Lcd_Write_String@a^0,c
  2471  0014D6  0E00               	movlw	high stateMachine@textCursor2
  2472  0014D8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2473  0014DA  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2474  0014DE                     
  2475                           ;fs_menu_controller.c: 279:             if(timer_value.menu_login_delay == 100)
  2476  0014DE  0E64               	movlw	100
  2477  0014E0  0100               	movlb	0	; () banked
  2478  0014E2  19DE               	xorwf	(_timer_value+8)& (0+255),w,b
  2479  0014E4  A4D8               	btfss	status,2,c
  2480  0014E6  EF77  F00A         	goto	u6821
  2481  0014EA  EF79  F00A         	goto	u6820
  2482  0014EE                     u6821:
  2483  0014EE  EF20  F00D         	goto	l389
  2484  0014F2                     u6820:
  2485  0014F2                     l5422:
  2486                           
  2487                           ; BSR set to: 0
  2488                           ;fs_menu_controller.c: 280:             {;fs_menu_controller.c: 281:                 tim
      +                          er_value.menu_login_delay = 0;
  2489  0014F2  0E00               	movlw	0
  2490  0014F4  6FDE               	movwf	(_timer_value+8)& (0+255),b
  2491                           
  2492                           ;fs_menu_controller.c: 282:                 menu_selected = PAUSE_MENU;
  2493  0014F6  0E06               	movlw	6
  2494  0014F8  6FF4               	movwf	_menu_selected& (0+255),b
  2495  0014FA  EF20  F00D         	goto	l389
  2496  0014FE                     l365:
  2497                           
  2498                           ; BSR set to: 0
  2499                           ;fs_menu_controller.c: 289:             LATBbits.LATB6 = 0;
  2500  0014FE  9C8A               	bcf	138,6,c	;volatile
  2501                           
  2502                           ;fs_menu_controller.c: 290:             LATAbits.LATA4 = 0;
  2503  001500  9889               	bcf	137,4,c	;volatile
  2504                           
  2505                           ;fs_menu_controller.c: 291:             LATEbits.LATE2 = 1;
  2506  001502  848D               	bsf	141,2,c	;volatile
  2507                           
  2508                           ;fs_menu_controller.c: 293:             if (menu_flags.menu_input_flag == 1)
  2509  001504  A1F3               	btfss	_menu_flags& (0+255),0,b
  2510  001506  EF87  F00A         	goto	u6831
  2511  00150A  EF89  F00A         	goto	u6830
  2512  00150E                     u6831:
  2513  00150E  EF8C  F00A         	goto	l5428
  2514  001512                     u6830:
  2515  001512                     
  2516                           ; BSR set to: 0
  2517                           ;fs_menu_controller.c: 294:             {;fs_menu_controller.c: 295:                 men
      +                          u_flags.menu_input_flag = 0;
  2518  001512  91F3               	bcf	_menu_flags& (0+255),0,b
  2519  001514                     
  2520                           ; BSR set to: 0
  2521                           ;fs_menu_controller.c: 296:                 menu_selected = SPEED_LIMIT_SETTING;
  2522  001514  0E03               	movlw	3
  2523  001516  6FF4               	movwf	_menu_selected& (0+255),b
  2524  001518                     l5428:
  2525                           
  2526                           ; BSR set to: 0
  2527                           ;fs_menu_controller.c: 299:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.stop_time < 100))
  2528  001518  A9F3               	btfss	_menu_flags& (0+255),4,b
  2529  00151A  EF91  F00A         	goto	u6841
  2530  00151E  EF93  F00A         	goto	u6840
  2531  001522                     u6841:
  2532  001522  EFA2  F00A         	goto	l5438
  2533  001526                     u6840:
  2534  001526                     
  2535                           ; BSR set to: 0
  2536  001526  0E64               	movlw	100
  2537  001528  61E9               	cpfslt	(_menu_value+1)& (0+255),b
  2538  00152A  EF99  F00A         	goto	u6851
  2539  00152E  EF9B  F00A         	goto	u6850
  2540  001532                     u6851:
  2541  001532  EFA2  F00A         	goto	l5438
  2542  001536                     u6850:
  2543  001536                     
  2544                           ; BSR set to: 0
  2545                           ;fs_menu_controller.c: 300:             {;fs_menu_controller.c: 301:                 men
      +                          u_flags.menu_increase_flag = 0;
  2546  001536  99F3               	bcf	_menu_flags& (0+255),4,b
  2547  001538                     
  2548                           ; BSR set to: 0
  2549                           ;fs_menu_controller.c: 302:                 menu_value.stop_time += 1;
  2550  001538  2BE9               	incf	(_menu_value+1)& (0+255),f,b
  2551  00153A                     
  2552                           ; BSR set to: 0
  2553                           ;fs_menu_controller.c: 303:                 eepromWrite(0x01,(uint8_t)menu_value.stop_ti
      +                          me);
  2554  00153A  C0E9  F001         	movff	_menu_value+1,eepromWrite@data
  2555  00153E  0E01               	movlw	1
  2556  001540  ECE5  F023         	call	_eepromWrite
  2557  001544                     l5438:
  2558                           
  2559                           ;fs_menu_controller.c: 306:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.stop_time > 0))
  2560  001544  0100               	movlb	0	; () banked
  2561  001546  ABF3               	btfss	_menu_flags& (0+255),5,b
  2562  001548  EFA8  F00A         	goto	u6861
  2563  00154C  EFAA  F00A         	goto	u6860
  2564  001550                     u6861:
  2565  001550  EFB9  F00A         	goto	l5448
  2566  001554                     u6860:
  2567  001554                     
  2568                           ; BSR set to: 0
  2569  001554  51E9               	movf	(_menu_value+1)& (0+255),w,b
  2570  001556  B4D8               	btfsc	status,2,c
  2571  001558  EFB0  F00A         	goto	u6871
  2572  00155C  EFB2  F00A         	goto	u6870
  2573  001560                     u6871:
  2574  001560  EFB9  F00A         	goto	l5448
  2575  001564                     u6870:
  2576  001564                     
  2577                           ; BSR set to: 0
  2578                           ;fs_menu_controller.c: 307:             {;fs_menu_controller.c: 308:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2579  001564  9BF3               	bcf	_menu_flags& (0+255),5,b
  2580  001566                     
  2581                           ; BSR set to: 0
  2582                           ;fs_menu_controller.c: 309:                  menu_value.stop_time -= 1;
  2583  001566  07E9               	decf	(_menu_value+1)& (0+255),f,b
  2584  001568                     
  2585                           ; BSR set to: 0
  2586                           ;fs_menu_controller.c: 310:                  eepromWrite(0x01,(uint8_t)menu_value.stop_t
      +                          ime);
  2587  001568  C0E9  F001         	movff	_menu_value+1,eepromWrite@data
  2588  00156C  0E01               	movlw	1
  2589  00156E  ECE5  F023         	call	_eepromWrite
  2590  001572                     l5448:
  2591                           
  2592                           ;fs_menu_controller.c: 312:             Lcd_Set_Cursor(1,1);
  2593  001572  0E01               	movlw	1
  2594  001574  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2595  001576  0E01               	movlw	1
  2596  001578  EC85  F021         	call	_Lcd_Set_Cursor
  2597  00157C                     
  2598                           ;fs_menu_controller.c: 313:             Lcd_Write_String("DURMA ZAMANI  ms");
  2599  00157C  0E8E               	movlw	low STR_5
  2600  00157E  6E05               	movwf	Lcd_Write_String@a^0,c
  2601  001580  0E06               	movlw	high STR_5
  2602  001582  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2603  001584  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2604  001588                     
  2605                           ;fs_menu_controller.c: 314:             Lcd_Set_Cursor(2,1);
  2606  001588  0E01               	movlw	1
  2607  00158A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2608  00158C  0E02               	movlw	2
  2609  00158E  EC85  F021         	call	_Lcd_Set_Cursor
  2610  001592                     
  2611                           ;fs_menu_controller.c: 315:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.stop_time);
  2612  001592  0EBA               	movlw	low stateMachine@textCursor2
  2613  001594  0100               	movlb	0	; () banked
  2614  001596  6FAE               	movwf	sprintf@s& (0+255),b
  2615  001598  0E00               	movlw	high stateMachine@textCursor2
  2616  00159A  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2617  00159C  0E16               	movlw	low STR_4
  2618  00159E  6FB0               	movwf	sprintf@fmt& (0+255),b
  2619  0015A0  0E06               	movlw	high STR_4
  2620  0015A2  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2621  0015A4  C0E9  F0B2         	movff	_menu_value+1,?_sprintf+4
  2622  0015A8  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2623  0015AA  ECCE  F022         	call	_sprintf	;wreg free
  2624  0015AE                     
  2625                           ;fs_menu_controller.c: 316:             Lcd_Write_String(textCursor2);
  2626  0015AE  0EBA               	movlw	low stateMachine@textCursor2
  2627  0015B0  6E05               	movwf	Lcd_Write_String@a^0,c
  2628  0015B2  0E00               	movlw	high stateMachine@textCursor2
  2629  0015B4  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2630  0015B6  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2631  0015BA                     
  2632                           ;fs_menu_controller.c: 318:             if(timer_value.menu_login_delay == 100)
  2633  0015BA  0E64               	movlw	100
  2634  0015BC  0100               	movlb	0	; () banked
  2635  0015BE  19DE               	xorwf	(_timer_value+8)& (0+255),w,b
  2636  0015C0  A4D8               	btfss	status,2,c
  2637  0015C2  EFE5  F00A         	goto	u6881
  2638  0015C6  EFE7  F00A         	goto	u6880
  2639  0015CA                     u6881:
  2640  0015CA  EF20  F00D         	goto	l389
  2641  0015CE                     u6880:
  2642  0015CE  EF79  F00A         	goto	l5422
  2643  0015D2                     l370:
  2644                           
  2645                           ; BSR set to: 0
  2646                           ;fs_menu_controller.c: 327:             LATBbits.LATB6 = 0;
  2647  0015D2  9C8A               	bcf	138,6,c	;volatile
  2648                           
  2649                           ;fs_menu_controller.c: 328:             LATAbits.LATA4 = 0;
  2650  0015D4  9889               	bcf	137,4,c	;volatile
  2651                           
  2652                           ;fs_menu_controller.c: 329:             LATEbits.LATE2 = 1;
  2653  0015D6  848D               	bsf	141,2,c	;volatile
  2654                           
  2655                           ;fs_menu_controller.c: 331:             if (menu_flags.menu_input_flag == 1)
  2656  0015D8  A1F3               	btfss	_menu_flags& (0+255),0,b
  2657  0015DA  EFF1  F00A         	goto	u6891
  2658  0015DE  EFF3  F00A         	goto	u6890
  2659  0015E2                     u6891:
  2660  0015E2  EFF6  F00A         	goto	l5466
  2661  0015E6                     u6890:
  2662  0015E6                     
  2663                           ; BSR set to: 0
  2664                           ;fs_menu_controller.c: 332:             {;fs_menu_controller.c: 333:                 men
      +                          u_flags.menu_input_flag = 0;
  2665  0015E6  91F3               	bcf	_menu_flags& (0+255),0,b
  2666  0015E8                     
  2667                           ; BSR set to: 0
  2668                           ;fs_menu_controller.c: 334:                 menu_selected = DRIVER_TIME_SETTING;
  2669  0015E8  0E01               	movlw	1
  2670  0015EA  6FF4               	movwf	_menu_selected& (0+255),b
  2671  0015EC                     l5466:
  2672                           
  2673                           ; BSR set to: 0
  2674                           ;fs_menu_controller.c: 337:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_value.speed_limit < 5))
  2675  0015EC  A9F3               	btfss	_menu_flags& (0+255),4,b
  2676  0015EE  EFFB  F00A         	goto	u6901
  2677  0015F2  EFFD  F00A         	goto	u6900
  2678  0015F6                     u6901:
  2679  0015F6  EF0C  F00B         	goto	l5476
  2680  0015FA                     u6900:
  2681  0015FA                     
  2682                           ; BSR set to: 0
  2683  0015FA  0E05               	movlw	5
  2684  0015FC  61EA               	cpfslt	(_menu_value+2)& (0+255),b
  2685  0015FE  EF03  F00B         	goto	u6911
  2686  001602  EF05  F00B         	goto	u6910
  2687  001606                     u6911:
  2688  001606  EF0C  F00B         	goto	l5476
  2689  00160A                     u6910:
  2690  00160A                     
  2691                           ; BSR set to: 0
  2692                           ;fs_menu_controller.c: 338:             {;fs_menu_controller.c: 339:                 men
      +                          u_flags.menu_increase_flag = 0;
  2693  00160A  99F3               	bcf	_menu_flags& (0+255),4,b
  2694  00160C                     
  2695                           ; BSR set to: 0
  2696                           ;fs_menu_controller.c: 340:                 menu_value.speed_limit += 1;
  2697  00160C  2BEA               	incf	(_menu_value+2)& (0+255),f,b
  2698  00160E                     
  2699                           ; BSR set to: 0
  2700                           ;fs_menu_controller.c: 341:                 eepromWrite(0x02,menu_value.speed_limit);
  2701  00160E  C0EA  F001         	movff	_menu_value+2,eepromWrite@data
  2702  001612  0E02               	movlw	2
  2703  001614  ECE5  F023         	call	_eepromWrite
  2704  001618                     l5476:
  2705                           
  2706                           ;fs_menu_controller.c: 344:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit > 0))
  2707  001618  0100               	movlb	0	; () banked
  2708  00161A  ABF3               	btfss	_menu_flags& (0+255),5,b
  2709  00161C  EF12  F00B         	goto	u6921
  2710  001620  EF14  F00B         	goto	u6920
  2711  001624                     u6921:
  2712  001624  EF23  F00B         	goto	l5486
  2713  001628                     u6920:
  2714  001628                     
  2715                           ; BSR set to: 0
  2716  001628  51EA               	movf	(_menu_value+2)& (0+255),w,b
  2717  00162A  B4D8               	btfsc	status,2,c
  2718  00162C  EF1A  F00B         	goto	u6931
  2719  001630  EF1C  F00B         	goto	u6930
  2720  001634                     u6931:
  2721  001634  EF23  F00B         	goto	l5486
  2722  001638                     u6930:
  2723  001638                     
  2724                           ; BSR set to: 0
  2725                           ;fs_menu_controller.c: 345:             {;fs_menu_controller.c: 346:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  2726  001638  9BF3               	bcf	_menu_flags& (0+255),5,b
  2727  00163A                     
  2728                           ; BSR set to: 0
  2729                           ;fs_menu_controller.c: 347:                  menu_value.speed_limit -= 1;
  2730  00163A  07EA               	decf	(_menu_value+2)& (0+255),f,b
  2731  00163C                     
  2732                           ; BSR set to: 0
  2733                           ;fs_menu_controller.c: 348:                  eepromWrite(0x02,menu_value.speed_limit);
  2734  00163C  C0EA  F001         	movff	_menu_value+2,eepromWrite@data
  2735  001640  0E02               	movlw	2
  2736  001642  ECE5  F023         	call	_eepromWrite
  2737  001646                     l5486:
  2738                           
  2739                           ;fs_menu_controller.c: 350:             Lcd_Set_Cursor(1,1);
  2740  001646  0E01               	movlw	1
  2741  001648  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2742  00164A  0E01               	movlw	1
  2743  00164C  EC85  F021         	call	_Lcd_Set_Cursor
  2744  001650                     
  2745                           ;fs_menu_controller.c: 351:             Lcd_Write_String("HIZ LiMiTi      ");
  2746  001650  0E39               	movlw	low STR_7
  2747  001652  6E05               	movwf	Lcd_Write_String@a^0,c
  2748  001654  0E06               	movlw	high STR_7
  2749  001656  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2750  001658  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2751  00165C                     
  2752                           ;fs_menu_controller.c: 352:             Lcd_Set_Cursor(2,1);
  2753  00165C  0E01               	movlw	1
  2754  00165E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2755  001660  0E02               	movlw	2
  2756  001662  EC85  F021         	call	_Lcd_Set_Cursor
  2757  001666                     
  2758                           ;fs_menu_controller.c: 353:             sprintf(textCursor2,"%d               ",menu_val
      +                          ue.speed_limit);
  2759  001666  0EBA               	movlw	low stateMachine@textCursor2
  2760  001668  0100               	movlb	0	; () banked
  2761  00166A  6FAE               	movwf	sprintf@s& (0+255),b
  2762  00166C  0E00               	movlw	high stateMachine@textCursor2
  2763  00166E  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2764  001670  0E16               	movlw	low STR_4
  2765  001672  6FB0               	movwf	sprintf@fmt& (0+255),b
  2766  001674  0E06               	movlw	high STR_4
  2767  001676  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2768  001678  C0EA  F0B2         	movff	_menu_value+2,?_sprintf+4
  2769  00167C  6BB3               	clrf	(?_sprintf+5)& (0+255),b
  2770  00167E  ECCE  F022         	call	_sprintf	;wreg free
  2771  001682                     
  2772                           ;fs_menu_controller.c: 354:             Lcd_Write_String(textCursor2);
  2773  001682  0EBA               	movlw	low stateMachine@textCursor2
  2774  001684  6E05               	movwf	Lcd_Write_String@a^0,c
  2775  001686  0E00               	movlw	high stateMachine@textCursor2
  2776  001688  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2777  00168A  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2778  00168E                     
  2779                           ;fs_menu_controller.c: 356:             if(timer_value.menu_login_delay == 100)
  2780  00168E  0E64               	movlw	100
  2781  001690  0100               	movlb	0	; () banked
  2782  001692  19DE               	xorwf	(_timer_value+8)& (0+255),w,b
  2783  001694  A4D8               	btfss	status,2,c
  2784  001696  EF4F  F00B         	goto	u6941
  2785  00169A  EF51  F00B         	goto	u6940
  2786  00169E                     u6941:
  2787  00169E  EF20  F00D         	goto	l389
  2788  0016A2                     u6940:
  2789  0016A2  EF79  F00A         	goto	l5422
  2790  0016A6                     l5500:
  2791                           
  2792                           ; BSR set to: 0
  2793                           ;fs_menu_controller.c: 364:             startIsClick = 0;
  2794  0016A6  0E00               	movlw	0
  2795  0016A8  6FF6               	movwf	_startIsClick& (0+255),b
  2796                           
  2797                           ;fs_menu_controller.c: 365:             pauseIsClick = 0;
  2798  0016AA  0E00               	movlw	0
  2799  0016AC  6FF7               	movwf	_pauseIsClick& (0+255),b
  2800                           
  2801                           ;fs_menu_controller.c: 366:             stopIsClick = 1;
  2802  0016AE  0E01               	movlw	1
  2803  0016B0  6FF5               	movwf	_stopIsClick& (0+255),b
  2804  0016B2                     
  2805                           ; BSR set to: 0
  2806                           ;fs_menu_controller.c: 368:             Lcd_Set_Cursor(1,1);
  2807  0016B2  0E01               	movlw	1
  2808  0016B4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2809  0016B6  0E01               	movlw	1
  2810  0016B8  EC85  F021         	call	_Lcd_Set_Cursor
  2811  0016BC                     
  2812                           ;fs_menu_controller.c: 369:             Lcd_Write_String("ZAMAN DOLDU     ");
  2813  0016BC  0E5B               	movlw	low STR_9
  2814  0016BE  6E05               	movwf	Lcd_Write_String@a^0,c
  2815  0016C0  0E06               	movlw	high STR_9
  2816  0016C2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2817  0016C4  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2818  0016C8                     
  2819                           ;fs_menu_controller.c: 370:             LATBbits.LATB6 = 1;
  2820  0016C8  8C8A               	bsf	138,6,c	;volatile
  2821  0016CA                     
  2822                           ;fs_menu_controller.c: 371:             LATEbits.LATE2 = 0;
  2823  0016CA  948D               	bcf	141,2,c	;volatile
  2824  0016CC                     
  2825                           ;fs_menu_controller.c: 372:             LATAbits.LATA4 = 0;
  2826  0016CC  9889               	bcf	137,4,c	;volatile
  2827  0016CE                     
  2828                           ;fs_menu_controller.c: 373:             timer_value.remainingSecond = 0;
  2829  0016CE  0E00               	movlw	0
  2830  0016D0  0100               	movlb	0	; () banked
  2831  0016D2  6FDB               	movwf	(_timer_value+5)& (0+255),b
  2832  0016D4  0E00               	movlw	0
  2833  0016D6  6FDA               	movwf	(_timer_value+4)& (0+255),b
  2834  0016D8                     
  2835                           ; BSR set to: 0
  2836                           ;fs_menu_controller.c: 374:             timer_value.remainingMinute = 0;
  2837  0016D8  0E00               	movlw	0
  2838  0016DA  6FDD               	movwf	(_timer_value+7)& (0+255),b
  2839  0016DC  0E00               	movlw	0
  2840  0016DE  6FDC               	movwf	(_timer_value+6)& (0+255),b
  2841  0016E0                     
  2842                           ; BSR set to: 0
  2843                           ;fs_menu_controller.c: 375:              Lcd_Set_Cursor(2,1);
  2844  0016E0  0E01               	movlw	1
  2845  0016E2  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2846  0016E4  0E02               	movlw	2
  2847  0016E6  EC85  F021         	call	_Lcd_Set_Cursor
  2848  0016EA                     
  2849                           ;fs_menu_controller.c: 376:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  2850  0016EA  0EBA               	movlw	low stateMachine@textCursor2
  2851  0016EC  0100               	movlb	0	; () banked
  2852  0016EE  6FAE               	movwf	sprintf@s& (0+255),b
  2853  0016F0  0E00               	movlw	high stateMachine@textCursor2
  2854  0016F2  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  2855  0016F4  0E9F               	movlw	low STR_10
  2856  0016F6  6FB0               	movwf	sprintf@fmt& (0+255),b
  2857  0016F8  0E06               	movlw	high STR_10
  2858  0016FA  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  2859  0016FC  C0DC  F0B2         	movff	_timer_value+6,?_sprintf+4
  2860  001700  C0DD  F0B3         	movff	_timer_value+7,?_sprintf+5
  2861  001704  C0DA  F0B4         	movff	_timer_value+4,?_sprintf+6
  2862  001708  C0DB  F0B5         	movff	_timer_value+5,?_sprintf+7
  2863  00170C  ECCE  F022         	call	_sprintf	;wreg free
  2864  001710                     
  2865                           ;fs_menu_controller.c: 377:             Lcd_Write_String(textCursor2);
  2866  001710  0EBA               	movlw	low stateMachine@textCursor2
  2867  001712  6E05               	movwf	Lcd_Write_String@a^0,c
  2868  001714  0E00               	movlw	high stateMachine@textCursor2
  2869  001716  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2870  001718  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2871  00171C                     
  2872                           ;fs_menu_controller.c: 379:         if (menu_flags.menu_start_flag == 1)
  2873  00171C  0100               	movlb	0	; () banked
  2874  00171E  A3F3               	btfss	_menu_flags& (0+255),1,b
  2875  001720  EF94  F00B         	goto	u6951
  2876  001724  EF96  F00B         	goto	u6950
  2877  001728                     u6951:
  2878  001728  EFA7  F00B         	goto	l5528
  2879  00172C                     u6950:
  2880  00172C                     
  2881                           ; BSR set to: 0
  2882                           ;fs_menu_controller.c: 380:         {;fs_menu_controller.c: 381:             menu_flags.
      +                          menu_start_flag = 0;
  2883  00172C  93F3               	bcf	_menu_flags& (0+255),1,b
  2884  00172E                     
  2885                           ; BSR set to: 0
  2886                           ;fs_menu_controller.c: 382:             menu_selected = START_MENU;
  2887  00172E  0E05               	movlw	5
  2888  001730  6FF4               	movwf	_menu_selected& (0+255),b
  2889                           
  2890                           ;fs_menu_controller.c: 384:             startIsClick = 1;
  2891  001732  0E01               	movlw	1
  2892  001734  6FF6               	movwf	_startIsClick& (0+255),b
  2893                           
  2894                           ;fs_menu_controller.c: 385:             pauseIsClick = 0;
  2895  001736  0E00               	movlw	0
  2896  001738  6FF7               	movwf	_pauseIsClick& (0+255),b
  2897                           
  2898                           ;fs_menu_controller.c: 386:             stopIsClick = 0;
  2899  00173A  0E00               	movlw	0
  2900  00173C  6FF5               	movwf	_stopIsClick& (0+255),b
  2901                           
  2902                           ;fs_menu_controller.c: 387:             timer_value.second = 0;
  2903  00173E  0E00               	movlw	0
  2904  001740  6FD7               	movwf	(_timer_value+1)& (0+255),b
  2905  001742  0E00               	movlw	0
  2906  001744  6FD6               	movwf	_timer_value& (0+255),b
  2907                           
  2908                           ;fs_menu_controller.c: 388:             timer_value.minute = 0;
  2909  001746  0E00               	movlw	0
  2910  001748  6FD9               	movwf	(_timer_value+3)& (0+255),b
  2911  00174A  0E00               	movlw	0
  2912  00174C  6FD8               	movwf	(_timer_value+2)& (0+255),b
  2913  00174E                     l5528:
  2914                           
  2915                           ; BSR set to: 0
  2916                           ;fs_menu_controller.c: 391:         if ( timer_value.menu_login_delay == 100)
  2917  00174E  0E64               	movlw	100
  2918  001750  19DE               	xorwf	(_timer_value+8)& (0+255),w,b
  2919  001752  A4D8               	btfss	status,2,c
  2920  001754  EFAE  F00B         	goto	u6961
  2921  001758  EFB0  F00B         	goto	u6960
  2922  00175C                     u6961:
  2923  00175C  EF20  F00D         	goto	l389
  2924  001760                     u6960:
  2925  001760                     
  2926                           ; BSR set to: 0
  2927                           ;fs_menu_controller.c: 392:         {;fs_menu_controller.c: 393:             timer_value
      +                          .menu_login_delay = 0;
  2928  001760  0E00               	movlw	0
  2929  001762  6FDE               	movwf	(_timer_value+8)& (0+255),b
  2930                           
  2931                           ;fs_menu_controller.c: 394:             menu_selected = DRIVER_TIME_SETTING;
  2932  001764  0E01               	movlw	1
  2933  001766  6FF4               	movwf	_menu_selected& (0+255),b
  2934  001768  EF20  F00D         	goto	l389
  2935  00176C                     l378:
  2936                           
  2937                           ; BSR set to: 0
  2938                           ;fs_menu_controller.c: 400:             timer_value.remainingMinute = menu_value.driver_
      +                          time;
  2939  00176C  C0E8  F0DC         	movff	_menu_value,_timer_value+6
  2940  001770  6BDD               	clrf	(_timer_value+7)& (0+255),b
  2941  001772                     
  2942                           ; BSR set to: 0
  2943                           ;fs_menu_controller.c: 401:             timer_value.remainingSecond = 0;
  2944  001772  0E00               	movlw	0
  2945  001774  6FDB               	movwf	(_timer_value+5)& (0+255),b
  2946  001776  0E00               	movlw	0
  2947  001778  6FDA               	movwf	(_timer_value+4)& (0+255),b
  2948                           
  2949                           ;fs_menu_controller.c: 402:             startIsClick = 1;
  2950  00177A  0E01               	movlw	1
  2951  00177C  6FF6               	movwf	_startIsClick& (0+255),b
  2952                           
  2953                           ;fs_menu_controller.c: 403:             stopIsClick = 0;
  2954  00177E  0E00               	movlw	0
  2955  001780  6FF5               	movwf	_stopIsClick& (0+255),b
  2956                           
  2957                           ;fs_menu_controller.c: 404:             menu_selected = MAIN_MENU;
  2958  001782  0E00               	movlw	0
  2959  001784  6FF4               	movwf	_menu_selected& (0+255),b
  2960                           
  2961                           ;fs_menu_controller.c: 405:         break;
  2962  001786  EF20  F00D         	goto	l389
  2963  00178A                     l379:
  2964                           
  2965                           ; BSR set to: 0
  2966                           ;fs_menu_controller.c: 409:             LATBbits.LATB6 = 1;
  2967  00178A  8C8A               	bsf	138,6,c	;volatile
  2968                           
  2969                           ;fs_menu_controller.c: 410:             LATAbits.LATA4 = 1;
  2970  00178C  8889               	bsf	137,4,c	;volatile
  2971                           
  2972                           ;fs_menu_controller.c: 411:             LATEbits.LATE2 = 1;
  2973  00178E  848D               	bsf	141,2,c	;volatile
  2974  001790                     
  2975                           ; BSR set to: 0
  2976                           ;fs_menu_controller.c: 415:             Lcd_Set_Cursor(1,1);
  2977  001790  0E01               	movlw	1
  2978  001792  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2979  001794  0E01               	movlw	1
  2980  001796  EC85  F021         	call	_Lcd_Set_Cursor
  2981  00179A                     
  2982                           ;fs_menu_controller.c: 416:             Lcd_Write_String("HAREKET DURDU   ");
  2983  00179A  0E6C               	movlw	low STR_11
  2984  00179C  6E05               	movwf	Lcd_Write_String@a^0,c
  2985  00179E  0E06               	movlw	high STR_11
  2986  0017A0  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2987  0017A2  EC12  F021         	call	_Lcd_Write_String	;wreg free
  2988  0017A6                     
  2989                           ;fs_menu_controller.c: 417:             Lcd_Set_Cursor(2,1);
  2990  0017A6  0E01               	movlw	1
  2991  0017A8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2992  0017AA  0E02               	movlw	2
  2993  0017AC  EC85  F021         	call	_Lcd_Set_Cursor
  2994  0017B0                     
  2995                           ;fs_menu_controller.c: 418:             sprintf(textCursor2,"      %d:%d    ",timer_valu
      +                          e.remainingMinute,timer_value.remainingSecond);
  2996  0017B0  0EBA               	movlw	low stateMachine@textCursor2
  2997  0017B2  0100               	movlb	0	; () banked
  2998  0017B4  6FAE               	movwf	sprintf@s& (0+255),b
  2999  0017B6  0E00               	movlw	high stateMachine@textCursor2
  3000  0017B8  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3001  0017BA  0E9F               	movlw	low STR_10
  3002  0017BC  6FB0               	movwf	sprintf@fmt& (0+255),b
  3003  0017BE  0E06               	movlw	high STR_10
  3004  0017C0  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3005  0017C2  C0DC  F0B2         	movff	_timer_value+6,?_sprintf+4
  3006  0017C6  C0DD  F0B3         	movff	_timer_value+7,?_sprintf+5
  3007  0017CA  C0DA  F0B4         	movff	_timer_value+4,?_sprintf+6
  3008  0017CE  C0DB  F0B5         	movff	_timer_value+5,?_sprintf+7
  3009  0017D2  ECCE  F022         	call	_sprintf	;wreg free
  3010  0017D6                     
  3011                           ;fs_menu_controller.c: 419:             Lcd_Write_String(textCursor2);
  3012  0017D6  0EBA               	movlw	low stateMachine@textCursor2
  3013  0017D8  6E05               	movwf	Lcd_Write_String@a^0,c
  3014  0017DA  0E00               	movlw	high stateMachine@textCursor2
  3015  0017DC  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3016  0017DE  EC12  F021         	call	_Lcd_Write_String	;wreg free
  3017  0017E2                     
  3018                           ;fs_menu_controller.c: 421:             if (menu_flags.menu_start_flag == 1)
  3019  0017E2  0100               	movlb	0	; () banked
  3020  0017E4  A3F3               	btfss	_menu_flags& (0+255),1,b
  3021  0017E6  EFF7  F00B         	goto	u6971
  3022  0017EA  EFF9  F00B         	goto	u6970
  3023  0017EE                     u6971:
  3024  0017EE  EF02  F00C         	goto	l380
  3025  0017F2                     u6970:
  3026  0017F2                     
  3027                           ; BSR set to: 0
  3028                           ;fs_menu_controller.c: 422:             {;fs_menu_controller.c: 423:                 men
      +                          u_flags.menu_start_flag = 0;
  3029  0017F2  93F3               	bcf	_menu_flags& (0+255),1,b
  3030  0017F4                     
  3031                           ; BSR set to: 0
  3032                           ;fs_menu_controller.c: 424:                 menu_selected = MAIN_MENU;
  3033  0017F4  0E00               	movlw	0
  3034  0017F6  6FF4               	movwf	_menu_selected& (0+255),b
  3035                           
  3036                           ;fs_menu_controller.c: 426:                 startIsClick = 1;
  3037  0017F8  0E01               	movlw	1
  3038  0017FA  6FF6               	movwf	_startIsClick& (0+255),b
  3039                           
  3040                           ;fs_menu_controller.c: 427:                 pauseIsClick = 0;
  3041  0017FC  0E00               	movlw	0
  3042  0017FE  6FF7               	movwf	_pauseIsClick& (0+255),b
  3043                           
  3044                           ;fs_menu_controller.c: 428:                 stopIsClick = 0;
  3045  001800  0E00               	movlw	0
  3046  001802  6FF5               	movwf	_stopIsClick& (0+255),b
  3047  001804                     l380:
  3048                           
  3049                           ; BSR set to: 0
  3050                           ;fs_menu_controller.c: 431:             if ( (startIsClick == 0) && (pauseIsClick == 0) 
      +                          && (stopIsClick == 1) && (menu_selected == PAUSE_MENU))
  3051  001804  51F6               	movf	_startIsClick& (0+255),w,b
  3052  001806  A4D8               	btfss	status,2,c
  3053  001808  EF08  F00C         	goto	u6981
  3054  00180C  EF0A  F00C         	goto	u6980
  3055  001810                     u6981:
  3056  001810  EF32  F00C         	goto	l5560
  3057  001814                     u6980:
  3058  001814                     
  3059                           ; BSR set to: 0
  3060  001814  51F7               	movf	_pauseIsClick& (0+255),w,b
  3061  001816  A4D8               	btfss	status,2,c
  3062  001818  EF10  F00C         	goto	u6991
  3063  00181C  EF12  F00C         	goto	u6990
  3064  001820                     u6991:
  3065  001820  EF32  F00C         	goto	l5560
  3066  001824                     u6990:
  3067  001824                     
  3068                           ; BSR set to: 0
  3069  001824  05F5               	decf	_stopIsClick& (0+255),w,b
  3070  001826  A4D8               	btfss	status,2,c
  3071  001828  EF18  F00C         	goto	u7001
  3072  00182C  EF1A  F00C         	goto	u7000
  3073  001830                     u7001:
  3074  001830  EF32  F00C         	goto	l5560
  3075  001834                     u7000:
  3076  001834                     
  3077                           ; BSR set to: 0
  3078  001834  0E06               	movlw	6
  3079  001836  19F4               	xorwf	_menu_selected& (0+255),w,b
  3080  001838  A4D8               	btfss	status,2,c
  3081  00183A  EF21  F00C         	goto	u7011
  3082  00183E  EF23  F00C         	goto	u7010
  3083  001842                     u7011:
  3084  001842  EF32  F00C         	goto	l5560
  3085  001846                     u7010:
  3086  001846                     
  3087                           ; BSR set to: 0
  3088                           ;fs_menu_controller.c: 432:             {;fs_menu_controller.c: 433:                  ti
      +                          mer_value.remainingMinute = menu_value.driver_time;
  3089  001846  C0E8  F0DC         	movff	_menu_value,_timer_value+6
  3090  00184A  6BDD               	clrf	(_timer_value+7)& (0+255),b
  3091  00184C                     
  3092                           ; BSR set to: 0
  3093                           ;fs_menu_controller.c: 434:                  timer_value.remainingSecond = 0;
  3094  00184C  0E00               	movlw	0
  3095  00184E  6FDB               	movwf	(_timer_value+5)& (0+255),b
  3096  001850  0E00               	movlw	0
  3097  001852  6FDA               	movwf	(_timer_value+4)& (0+255),b
  3098                           
  3099                           ;fs_menu_controller.c: 435:                  timer_value.second = 0;
  3100  001854  0E00               	movlw	0
  3101  001856  6FD7               	movwf	(_timer_value+1)& (0+255),b
  3102  001858  0E00               	movlw	0
  3103  00185A  6FD6               	movwf	_timer_value& (0+255),b
  3104                           
  3105                           ;fs_menu_controller.c: 436:                  timer_value.minute = 0;
  3106  00185C  0E00               	movlw	0
  3107  00185E  6FD9               	movwf	(_timer_value+3)& (0+255),b
  3108  001860  0E00               	movlw	0
  3109  001862  6FD8               	movwf	(_timer_value+2)& (0+255),b
  3110  001864                     l5560:
  3111                           
  3112                           ; BSR set to: 0
  3113                           ;fs_menu_controller.c: 440:             if ( timer_value.menu_login_delay == 100)
  3114  001864  0E64               	movlw	100
  3115  001866  19DE               	xorwf	(_timer_value+8)& (0+255),w,b
  3116  001868  A4D8               	btfss	status,2,c
  3117  00186A  EF39  F00C         	goto	u7021
  3118  00186E  EF3B  F00C         	goto	u7020
  3119  001872                     u7021:
  3120  001872  EF3F  F00C         	goto	l5564
  3121  001876                     u7020:
  3122  001876                     
  3123                           ; BSR set to: 0
  3124                           ;fs_menu_controller.c: 441:             {;fs_menu_controller.c: 442:                 tim
      +                          er_value.menu_login_delay = 0;
  3125  001876  0E00               	movlw	0
  3126  001878  6FDE               	movwf	(_timer_value+8)& (0+255),b
  3127                           
  3128                           ;fs_menu_controller.c: 443:                 menu_selected = DRIVER_TIME_SETTING;
  3129  00187A  0E01               	movlw	1
  3130  00187C  6FF4               	movwf	_menu_selected& (0+255),b
  3131  00187E                     l5564:
  3132                           
  3133                           ; BSR set to: 0
  3134                           ;fs_menu_controller.c: 446:             if ((menu_flags.menu_increase_flag == 1) && (men
      +                          u_flags.menu_decrease_flag == 1))
  3135  00187E  A9F3               	btfss	_menu_flags& (0+255),4,b
  3136  001880  EF44  F00C         	goto	u7031
  3137  001884  EF46  F00C         	goto	u7030
  3138  001888                     u7031:
  3139  001888  EF20  F00D         	goto	l389
  3140  00188C                     u7030:
  3141  00188C                     
  3142                           ; BSR set to: 0
  3143  00188C  ABF3               	btfss	_menu_flags& (0+255),5,b
  3144  00188E  EF4B  F00C         	goto	u7041
  3145  001892  EF4D  F00C         	goto	u7040
  3146  001896                     u7041:
  3147  001896  EF20  F00D         	goto	l389
  3148  00189A                     u7040:
  3149  00189A                     
  3150                           ; BSR set to: 0
  3151                           ;fs_menu_controller.c: 447:             {;fs_menu_controller.c: 448:                 men
      +                          u_selected = SECRET_MENU;
  3152  00189A  0E08               	movlw	8
  3153  00189C  6FF4               	movwf	_menu_selected& (0+255),b
  3154  00189E  EF20  F00D         	goto	l389
  3155  0018A2                     l5570:
  3156                           
  3157                           ; BSR set to: 0
  3158                           ;fs_menu_controller.c: 460:             Lcd_Set_Cursor(1,1);
  3159  0018A2  0E01               	movlw	1
  3160  0018A4  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3161  0018A6  0E01               	movlw	1
  3162  0018A8  EC85  F021         	call	_Lcd_Set_Cursor
  3163  0018AC                     
  3164                           ;fs_menu_controller.c: 461:             Lcd_Write_String("PID PARAM       ");
  3165  0018AC  0E28               	movlw	low STR_13
  3166  0018AE  6E05               	movwf	Lcd_Write_String@a^0,c
  3167  0018B0  0E06               	movlw	high STR_13
  3168  0018B2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3169  0018B4  EC12  F021         	call	_Lcd_Write_String	;wreg free
  3170  0018B8                     
  3171                           ;fs_menu_controller.c: 462:             Lcd_Set_Cursor(2,1);
  3172  0018B8  0E01               	movlw	1
  3173  0018BA  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3174  0018BC  0E02               	movlw	2
  3175  0018BE  EC85  F021         	call	_Lcd_Set_Cursor
  3176  0018C2                     
  3177                           ;fs_menu_controller.c: 463:             sprintf(textCursor2,"Kp:%5.1f Kd:5.1f    ",KP,KD
      +                          );
  3178  0018C2  0EBA               	movlw	low stateMachine@textCursor2
  3179  0018C4  0100               	movlb	0	; () banked
  3180  0018C6  6FAE               	movwf	sprintf@s& (0+255),b
  3181  0018C8  0E00               	movlw	high stateMachine@textCursor2
  3182  0018CA  6FAF               	movwf	(sprintf@s+1)& (0+255),b
  3183  0018CC  0E01               	movlw	low STR_14
  3184  0018CE  6FB0               	movwf	sprintf@fmt& (0+255),b
  3185  0018D0  0E06               	movlw	high STR_14
  3186  0018D2  6FB1               	movwf	(sprintf@fmt+1)& (0+255),b
  3187  0018D4  C0F9  F0B2         	movff	_KP,?_sprintf+4
  3188  0018D8  C0FA  F0B3         	movff	_KP+1,?_sprintf+5
  3189  0018DC  C0FB  F0B4         	movff	_KP+2,?_sprintf+6
  3190  0018E0  C0FC  F0B5         	movff	_KP+3,?_sprintf+7
  3191  0018E4  0E00               	movlw	0
  3192  0018E6  6FB6               	movwf	(?_sprintf+8)& (0+255),b
  3193  0018E8  0E00               	movlw	0
  3194  0018EA  6FB7               	movwf	(?_sprintf+9)& (0+255),b
  3195  0018EC  0E80               	movlw	128
  3196  0018EE  6FB8               	movwf	(?_sprintf+10)& (0+255),b
  3197  0018F0  0E3F               	movlw	63
  3198  0018F2  6FB9               	movwf	(?_sprintf+11)& (0+255),b
  3199  0018F4  ECCE  F022         	call	_sprintf	;wreg free
  3200  0018F8                     
  3201                           ;fs_menu_controller.c: 464:             Lcd_Write_String(textCursor2);
  3202  0018F8  0EBA               	movlw	low stateMachine@textCursor2
  3203  0018FA  6E05               	movwf	Lcd_Write_String@a^0,c
  3204  0018FC  0E00               	movlw	high stateMachine@textCursor2
  3205  0018FE  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3206  001900  EC12  F021         	call	_Lcd_Write_String	;wreg free
  3207  001904                     
  3208                           ;fs_menu_controller.c: 466:             if ((menu_flags.menu_increase_flag == 1) && (KP 
      +                          < 2.5))
  3209  001904  0100               	movlb	0	; () banked
  3210  001906  A9F3               	btfss	_menu_flags& (0+255),4,b
  3211  001908  EF88  F00C         	goto	u7051
  3212  00190C  EF8A  F00C         	goto	u7050
  3213  001910                     u7051:
  3214  001910  EFBF  F00C         	goto	l5588
  3215  001914                     u7050:
  3216  001914                     
  3217                           ; BSR set to: 0
  3218  001914  C0F9  F01A         	movff	_KP,___flge@ff1
  3219  001918  C0FA  F01B         	movff	_KP+1,___flge@ff1+1
  3220  00191C  C0FB  F01C         	movff	_KP+2,___flge@ff1+2
  3221  001920  C0FC  F01D         	movff	_KP+3,___flge@ff1+3
  3222  001924  0E00               	movlw	0
  3223  001926  6E1E               	movwf	___flge@ff2^0,c
  3224  001928  0E00               	movlw	0
  3225  00192A  6E1F               	movwf	(___flge@ff2+1)^0,c
  3226  00192C  0E20               	movlw	32
  3227  00192E  6E20               	movwf	(___flge@ff2+2)^0,c
  3228  001930  0E40               	movlw	64
  3229  001932  6E21               	movwf	(___flge@ff2+3)^0,c
  3230  001934  EC1C  F01D         	call	___flge	;wreg free
  3231  001938  B0D8               	btfsc	status,0,c
  3232  00193A  EFA1  F00C         	goto	u7061
  3233  00193E  EFA3  F00C         	goto	u7060
  3234  001942                     u7061:
  3235  001942  EFBF  F00C         	goto	l5588
  3236  001946                     u7060:
  3237  001946                     
  3238                           ;fs_menu_controller.c: 467:             {;fs_menu_controller.c: 468:                 men
      +                          u_flags.menu_increase_flag = 0;
  3239  001946  0100               	movlb	0	; () banked
  3240  001948  99F3               	bcf	_menu_flags& (0+255),4,b
  3241  00194A                     
  3242                           ; BSR set to: 0
  3243                           ;fs_menu_controller.c: 469:                 KP += 0.1;
  3244  00194A  C0F9  F001         	movff	_KP,___fladd@b
  3245  00194E  C0FA  F002         	movff	_KP+1,___fladd@b+1
  3246  001952  C0FB  F003         	movff	_KP+2,___fladd@b+2
  3247  001956  C0FC  F004         	movff	_KP+3,___fladd@b+3
  3248  00195A  0ECD               	movlw	205
  3249  00195C  6E05               	movwf	___fladd@a^0,c
  3250  00195E  0ECC               	movlw	204
  3251  001960  6E06               	movwf	(___fladd@a+1)^0,c
  3252  001962  0ECC               	movlw	204
  3253  001964  6E07               	movwf	(___fladd@a+2)^0,c
  3254  001966  0E3D               	movlw	61
  3255  001968  6E08               	movwf	(___fladd@a+3)^0,c
  3256  00196A  EC39  F010         	call	___fladd	;wreg free
  3257  00196E  C001  F0F9         	movff	?___fladd,_KP
  3258  001972  C002  F0FA         	movff	?___fladd+1,_KP+1
  3259  001976  C003  F0FB         	movff	?___fladd+2,_KP+2
  3260  00197A  C004  F0FC         	movff	?___fladd+3,_KP+3
  3261  00197E                     l5588:
  3262                           
  3263                           ;fs_menu_controller.c: 472:             if ((menu_flags.menu_decrease_flag == 1) && (men
      +                          u_value.speed_limit >= 0))
  3264  00197E  0100               	movlb	0	; () banked
  3265  001980  ABF3               	btfss	_menu_flags& (0+255),5,b
  3266  001982  EFC5  F00C         	goto	u7071
  3267  001986  EFC7  F00C         	goto	u7070
  3268  00198A                     u7071:
  3269  00198A  EFE2  F00C         	goto	l5594
  3270  00198E                     u7070:
  3271  00198E                     
  3272                           ; BSR set to: 0
  3273                           ;fs_menu_controller.c: 473:             {;fs_menu_controller.c: 474:                  me
      +                          nu_flags.menu_decrease_flag = 0;
  3274  00198E  9BF3               	bcf	_menu_flags& (0+255),5,b
  3275  001990                     
  3276                           ; BSR set to: 0
  3277                           ;fs_menu_controller.c: 475:                  KP -= 0.1;
  3278  001990  C0F9  F01A         	movff	_KP,___flsub@b
  3279  001994  C0FA  F01B         	movff	_KP+1,___flsub@b+1
  3280  001998  C0FB  F01C         	movff	_KP+2,___flsub@b+2
  3281  00199C  C0FC  F01D         	movff	_KP+3,___flsub@b+3
  3282  0019A0  0ECD               	movlw	205
  3283  0019A2  6E1E               	movwf	___flsub@a^0,c
  3284  0019A4  0ECC               	movlw	204
  3285  0019A6  6E1F               	movwf	(___flsub@a+1)^0,c
  3286  0019A8  0ECC               	movlw	204
  3287  0019AA  6E20               	movwf	(___flsub@a+2)^0,c
  3288  0019AC  0E3D               	movlw	61
  3289  0019AE  6E21               	movwf	(___flsub@a+3)^0,c
  3290  0019B0  ECF6  F022         	call	___flsub	;wreg free
  3291  0019B4  C01A  F0F9         	movff	?___flsub,_KP
  3292  0019B8  C01B  F0FA         	movff	?___flsub+1,_KP+1
  3293  0019BC  C01C  F0FB         	movff	?___flsub+2,_KP+2
  3294  0019C0  C01D  F0FC         	movff	?___flsub+3,_KP+3
  3295  0019C4                     l5594:
  3296                           
  3297                           ;fs_menu_controller.c: 478:             if ( timer_value.menu_login_delay == 100)
  3298  0019C4  0E64               	movlw	100
  3299  0019C6  0100               	movlb	0	; () banked
  3300  0019C8  19DE               	xorwf	(_timer_value+8)& (0+255),w,b
  3301  0019CA  A4D8               	btfss	status,2,c
  3302  0019CC  EFEA  F00C         	goto	u7081
  3303  0019D0  EFEC  F00C         	goto	u7080
  3304  0019D4                     u7081:
  3305  0019D4  EF20  F00D         	goto	l389
  3306  0019D8                     u7080:
  3307  0019D8  EF79  F00A         	goto	l5422
  3308  0019DC                     l5600:
  3309  0019DC  0100               	movlb	0	; () banked
  3310  0019DE  51F4               	movf	_menu_selected& (0+255),w,b
  3311  0019E0  6E5C               	movwf	??_stateMachine^0,c
  3312  0019E2  6A5D               	clrf	(??_stateMachine+1)^0,c
  3313                           
  3314                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  3315                           ; Switch size 1, requested type "simple"
  3316                           ; Number of cases is 1, Range of values is 0 to 0
  3317                           ; switch strategies available:
  3318                           ; Name         Instructions Cycles
  3319                           ; simple_byte            4     3 (average)
  3320                           ;	Chosen strategy is simple_byte
  3321  0019E4  505D               	movf	(??_stateMachine+1)^0,w,c
  3322  0019E6  0A00               	xorlw	0	; case 0
  3323  0019E8  B4D8               	btfsc	status,2,c
  3324  0019EA  EFF9  F00C         	goto	l6036
  3325  0019EE  EF20  F00D         	goto	l389
  3326  0019F2                     l6036:
  3327                           
  3328                           ; BSR set to: 0
  3329                           ; Switch size 1, requested type "simple"
  3330                           ; Number of cases is 9, Range of values is 0 to 8
  3331                           ; switch strategies available:
  3332                           ; Name         Instructions Cycles
  3333                           ; simple_byte           28    15 (average)
  3334                           ;	Chosen strategy is simple_byte
  3335  0019F2  505C               	movf	??_stateMachine^0,w,c
  3336  0019F4  0A00               	xorlw	0	; case 0
  3337  0019F6  B4D8               	btfsc	status,2,c
  3338  0019F8  EF49  F009         	goto	l354
  3339  0019FC  0A01               	xorlw	1	; case 1
  3340  0019FE  B4D8               	btfsc	status,2,c
  3341  001A00  EFF2  F009         	goto	l360
  3342  001A04  0A03               	xorlw	3	; case 2
  3343  001A06  B4D8               	btfsc	status,2,c
  3344  001A08  EF7F  F00A         	goto	l365
  3345  001A0C  0A01               	xorlw	1	; case 3
  3346  001A0E  B4D8               	btfsc	status,2,c
  3347  001A10  EFE9  F00A         	goto	l370
  3348  001A14  0A07               	xorlw	7	; case 4
  3349  001A16  B4D8               	btfsc	status,2,c
  3350  001A18  EF53  F00B         	goto	l5500
  3351  001A1C  0A01               	xorlw	1	; case 5
  3352  001A1E  B4D8               	btfsc	status,2,c
  3353  001A20  EFB6  F00B         	goto	l378
  3354  001A24  0A03               	xorlw	3	; case 6
  3355  001A26  B4D8               	btfsc	status,2,c
  3356  001A28  EFC5  F00B         	goto	l379
  3357  001A2C  0A01               	xorlw	1	; case 7
  3358  001A2E  B4D8               	btfsc	status,2,c
  3359  001A30  EF20  F00D         	goto	l389
  3360  001A34  0A0F               	xorlw	15	; case 8
  3361  001A36  B4D8               	btfsc	status,2,c
  3362  001A38  EF51  F00C         	goto	l5570
  3363  001A3C  EF20  F00D         	goto	l389
  3364  001A40                     l389:
  3365                           
  3366                           ; BSR set to: 0
  3367  001A40  0012               	return		;funcret
  3368  001A42                     __end_of_stateMachine:
  3369                           	callstack 0
  3370                           
  3371 ;; *************** function _sprintf *****************
  3372 ;; Defined at:
  3373 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  3374 ;; Parameters:    Size  Location     Type
  3375 ;;  s               2   78[BANK0 ] PTR unsigned char 
  3376 ;;		 -> stateMachine@textCursor2(16), 
  3377 ;;  fmt             2   80[BANK0 ] PTR const unsigned char 
  3378 ;;		 -> STR_14(21), STR_12(16), STR_10(16), STR_8(18), 
  3379 ;;		 -> STR_6(18), STR_4(18), STR_2(15), 
  3380 ;; Auto vars:     Size  Location     Type
  3381 ;;  f               6   85[COMRAM] struct _IO_FILE
  3382 ;;  ap              2   83[COMRAM] PTR void [1]
  3383 ;;		 -> ?_sprintf(2), 
  3384 ;;  ret             2    0        int 
  3385 ;; Return value:  Size  Location     Type
  3386 ;;                  2   78[BANK0 ] int 
  3387 ;; Registers used:
  3388 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3389 ;; Tracked objects:
  3390 ;;		On entry : 0/0
  3391 ;;		On exit  : 0/0
  3392 ;;		Unchanged: 0/0
  3393 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3394 ;;      Params:         0      12       0       0       0       0       0
  3395 ;;      Locals:        10       0       0       0       0       0       0
  3396 ;;      Temps:          0       0       0       0       0       0       0
  3397 ;;      Totals:        10      12       0       0       0       0       0
  3398 ;;Total ram usage:       22 bytes
  3399 ;; Hardware stack levels used:    1
  3400 ;; Hardware stack levels required when called:    8
  3401 ;; This function calls:
  3402 ;;		_vfprintf
  3403 ;; This function is called by:
  3404 ;;		_stateMachine
  3405 ;; This function uses a non-reentrant model
  3406 ;;
  3407                           
  3408                           	psect	text7
  3409  00459C                     __ptext7:
  3410                           	callstack 0
  3411  00459C                     _sprintf:
  3412                           	callstack 20
  3413  00459C  0EB2               	movlw	low (?_sprintf+4)
  3414  00459E  6E54               	movwf	sprintf@ap^0,c
  3415  0045A0  0E00               	movlw	high (?_sprintf+4)
  3416  0045A2  6E55               	movwf	(sprintf@ap+1)^0,c
  3417  0045A4  C0AE  F056         	movff	sprintf@s,sprintf@f
  3418  0045A8  C0AF  F057         	movff	sprintf@s+1,sprintf@f+1
  3419  0045AC  0E00               	movlw	0
  3420  0045AE  6E59               	movwf	(sprintf@f+3)^0,c
  3421  0045B0  0E00               	movlw	0
  3422  0045B2  6E58               	movwf	(sprintf@f+2)^0,c
  3423  0045B4  0E00               	movlw	0
  3424  0045B6  6E5B               	movwf	(sprintf@f+5)^0,c
  3425  0045B8  0E00               	movlw	0
  3426  0045BA  6E5A               	movwf	(sprintf@f+4)^0,c
  3427  0045BC  0E56               	movlw	low sprintf@f
  3428  0045BE  6E4A               	movwf	vfprintf@fp^0,c
  3429  0045C0  0E00               	movlw	high sprintf@f
  3430  0045C2  6E4B               	movwf	(vfprintf@fp+1)^0,c
  3431  0045C4  C0B0  F04C         	movff	sprintf@fmt,vfprintf@fmt
  3432  0045C8  C0B1  F04D         	movff	sprintf@fmt+1,vfprintf@fmt+1
  3433  0045CC  0E54               	movlw	low sprintf@ap
  3434  0045CE  6E4E               	movwf	vfprintf@ap^0,c
  3435  0045D0  0E00               	movlw	high sprintf@ap
  3436  0045D2  6E4F               	movwf	(vfprintf@ap+1)^0,c
  3437  0045D4  ECB8  F021         	call	_vfprintf	;wreg free
  3438  0045D8  5058               	movf	(sprintf@f+2)^0,w,c
  3439  0045DA  0100               	movlb	0	; () banked
  3440  0045DC  25AE               	addwf	sprintf@s& (0+255),w,b
  3441  0045DE  6ED9               	movwf	fsr2l,c
  3442  0045E0  5059               	movf	(sprintf@f+3)^0,w,c
  3443  0045E2  21AF               	addwfc	(sprintf@s+1)& (0+255),w,b
  3444  0045E4  6EDA               	movwf	fsr2h,c
  3445  0045E6  0E00               	movlw	0
  3446  0045E8  6EDF               	movwf	indf2,c
  3447  0045EA                     
  3448                           ; BSR set to: 0
  3449  0045EA  0012               	return		;funcret
  3450  0045EC                     __end_of_sprintf:
  3451                           	callstack 0
  3452                           
  3453 ;; *************** function _vfprintf *****************
  3454 ;; Defined at:
  3455 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3456 ;; Parameters:    Size  Location     Type
  3457 ;;  fp              2   73[COMRAM] PTR struct _IO_FILE
  3458 ;;		 -> sprintf@f(6), 
  3459 ;;  fmt             2   75[COMRAM] PTR const unsigned char 
  3460 ;;		 -> STR_14(21), STR_12(16), STR_10(16), STR_8(18), 
  3461 ;;		 -> STR_6(18), STR_4(18), STR_2(15), 
  3462 ;;  ap              2   77[COMRAM] PTR PTR void 
  3463 ;;		 -> sprintf@ap(2), 
  3464 ;; Auto vars:     Size  Location     Type
  3465 ;;  cfmt            2   79[COMRAM] PTR unsigned char 
  3466 ;;		 -> STR_14(21), STR_12(16), STR_10(16), STR_8(18), 
  3467 ;;		 -> STR_6(18), STR_4(18), STR_2(15), 
  3468 ;; Return value:  Size  Location     Type
  3469 ;;                  2   73[COMRAM] int 
  3470 ;; Registers used:
  3471 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3472 ;; Tracked objects:
  3473 ;;		On entry : 0/0
  3474 ;;		On exit  : 0/0
  3475 ;;		Unchanged: 0/0
  3476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3477 ;;      Params:         6       0       0       0       0       0       0
  3478 ;;      Locals:         2       0       0       0       0       0       0
  3479 ;;      Temps:          0       0       0       0       0       0       0
  3480 ;;      Totals:         8       0       0       0       0       0       0
  3481 ;;Total ram usage:        8 bytes
  3482 ;; Hardware stack levels used:    1
  3483 ;; Hardware stack levels required when called:    7
  3484 ;; This function calls:
  3485 ;;		_vfpfcnvrt
  3486 ;; This function is called by:
  3487 ;;		_sprintf
  3488 ;; This function uses a non-reentrant model
  3489 ;;
  3490                           
  3491                           	psect	text8
  3492  004370                     __ptext8:
  3493                           	callstack 0
  3494  004370                     _vfprintf:
  3495                           	callstack 20
  3496  004370                     
  3497                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  3498  004370  C04C  F050         	movff	vfprintf@fmt,vfprintf@cfmt
  3499  004374  C04D  F051         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  3500  004378                     
  3501                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  3502  004378  0E00               	movlw	0
  3503  00437A  0100               	movlb	0	; () banked
  3504  00437C  6FEC               	movwf	(_nout+1)& (0+255),b
  3505  00437E  0E00               	movlw	0
  3506  004380  6FEB               	movwf	_nout& (0+255),b
  3507                           
  3508                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3509  004382  EFD6  F021         	goto	l5216
  3510  004386                     l5214:
  3511                           
  3512                           ; BSR set to: 0
  3513                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  3514  004386  C04A  F040         	movff	vfprintf@fp,vfpfcnvrt@fp
  3515  00438A  C04B  F041         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  3516  00438E  0E50               	movlw	low vfprintf@cfmt
  3517  004390  6E42               	movwf	vfpfcnvrt@fmt^0,c
  3518  004392  0E00               	movlw	high vfprintf@cfmt
  3519  004394  6E43               	movwf	(vfpfcnvrt@fmt+1)^0,c
  3520  004396  C04E  F044         	movff	vfprintf@ap,vfpfcnvrt@ap
  3521  00439A  C04F  F045         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  3522  00439E  EC21  F00D         	call	_vfpfcnvrt	;wreg free
  3523  0043A2  5040               	movf	?_vfpfcnvrt^0,w,c
  3524  0043A4  0100               	movlb	0	; () banked
  3525  0043A6  27EB               	addwf	_nout& (0+255),f,b
  3526  0043A8  5041               	movf	(?_vfpfcnvrt+1)^0,w,c
  3527  0043AA  23EC               	addwfc	(_nout+1)& (0+255),f,b
  3528  0043AC                     l5216:
  3529                           
  3530                           ; BSR set to: 0
  3531                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  3532  0043AC  C050  FFF6         	movff	vfprintf@cfmt,tblptrl
  3533  0043B0  C051  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  3534  0043B4                     	if	0	;tblptru may be non-zero
  3535  0043B4                     	endif
  3536  0043B4                     	if	0	;tblptru may be non-zero
  3537  0043B4                     	endif
  3538  0043B4  0008               	tblrd		*
  3539  0043B6  50F5               	movf	tablat,w,c
  3540  0043B8  0900               	iorlw	0
  3541  0043BA  A4D8               	btfss	status,2,c
  3542  0043BC  EFE2  F021         	goto	u6321
  3543  0043C0  EFE4  F021         	goto	u6320
  3544  0043C4                     u6321:
  3545  0043C4  EFC3  F021         	goto	l5214
  3546  0043C8                     u6320:
  3547  0043C8                     
  3548                           ; BSR set to: 0
  3549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  3550  0043C8  C0EB  F04A         	movff	_nout,?_vfprintf
  3551  0043CC  C0EC  F04B         	movff	_nout+1,?_vfprintf+1
  3552  0043D0                     
  3553                           ; BSR set to: 0
  3554  0043D0  0012               	return		;funcret
  3555  0043D2                     __end_of_vfprintf:
  3556                           	callstack 0
  3557                           
  3558 ;; *************** function _vfpfcnvrt *****************
  3559 ;; Defined at:
  3560 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  3561 ;; Parameters:    Size  Location     Type
  3562 ;;  fp              2   63[COMRAM] PTR struct _IO_FILE
  3563 ;;		 -> sprintf@f(6), 
  3564 ;;  fmt             2   65[COMRAM] PTR PTR unsigned char 
  3565 ;;		 -> vfprintf@cfmt(2), 
  3566 ;;  ap              2   67[COMRAM] PTR PTR void 
  3567 ;;		 -> sprintf@ap(2), 
  3568 ;; Auto vars:     Size  Location     Type
  3569 ;;  ll              8   56[BANK0 ] long long 
  3570 ;;  llu             8    0        unsigned long long 
  3571 ;;  f               4   70[BANK0 ] unsigned long long 
  3572 ;;  ct              3   74[BANK0 ] unsigned char [3]
  3573 ;;  vp              3    0        PTR void 
  3574 ;;  cp              3    0        PTR unsigned char 
  3575 ;;  i               2    0        int 
  3576 ;;  done            2    0        int 
  3577 ;;  c               1   77[BANK0 ] unsigned char 
  3578 ;; Return value:  Size  Location     Type
  3579 ;;                  2   63[COMRAM] int 
  3580 ;; Registers used:
  3581 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3582 ;; Tracked objects:
  3583 ;;		On entry : 0/0
  3584 ;;		On exit  : 0/0
  3585 ;;		Unchanged: 0/0
  3586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3587 ;;      Params:         6       0       0       0       0       0       0
  3588 ;;      Locals:         0      22       0       0       0       0       0
  3589 ;;      Temps:          4       0       0       0       0       0       0
  3590 ;;      Totals:        10      22       0       0       0       0       0
  3591 ;;Total ram usage:       32 bytes
  3592 ;; Hardware stack levels used:    1
  3593 ;; Hardware stack levels required when called:    6
  3594 ;; This function calls:
  3595 ;;		_atoi
  3596 ;;		_dtoa
  3597 ;;		_efgtoa
  3598 ;;		_fputc
  3599 ;;		_isdigit
  3600 ;;		_isupper
  3601 ;;		_strncmp
  3602 ;;		_tolower
  3603 ;; This function is called by:
  3604 ;;		_vfprintf
  3605 ;; This function uses a non-reentrant model
  3606 ;;
  3607                           
  3608                           	psect	text9
  3609  001A42                     __ptext9:
  3610                           	callstack 0
  3611  001A42                     _vfpfcnvrt:
  3612                           	callstack 20
  3613  001A42                     
  3614                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  3615  001A42  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3616  001A46  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3617  001A4A  CFDE FFF6          	movff	postinc2,tblptrl
  3618  001A4E  CFDD FFF7          	movff	postdec2,tblptrh
  3619  001A52                     	if	0	;tblptru may be non-zero
  3620  001A52                     	endif
  3621  001A52                     	if	0	;tblptru may be non-zero
  3622  001A52                     	endif
  3623  001A52  0008               	tblrd		*
  3624  001A54  50F5               	movf	tablat,w,c
  3625  001A56  0A25               	xorlw	37
  3626  001A58  A4D8               	btfss	status,2,c
  3627  001A5A  EF31  F00D         	goto	u6111
  3628  001A5E  EF33  F00D         	goto	u6110
  3629  001A62                     u6111:
  3630  001A62  EF1D  F010         	goto	l5172
  3631  001A66                     u6110:
  3632  001A66                     
  3633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  3634  001A66  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3635  001A6A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3636  001A6E  2ADE               	incf	postinc2,f,c
  3637  001A70  0E00               	movlw	0
  3638  001A72  22DD               	addwfc	postdec2,f,c
  3639  001A74                     
  3640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  3641  001A74  0E00               	movlw	0
  3642  001A76  0100               	movlb	0	; () banked
  3643  001A78  6FEE               	movwf	(_width+1)& (0+255),b
  3644  001A7A  0E00               	movlw	0
  3645  001A7C  6FED               	movwf	_width& (0+255),b
  3646  001A7E  C0ED  F0F1         	movff	_width,_flags
  3647  001A82  C0EE  F0F2         	movff	_width+1,_flags+1
  3648  001A86                     
  3649                           ; BSR set to: 0
  3650                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  3651  001A86  69EF               	setf	_prec& (0+255),b
  3652  001A88  69F0               	setf	(_prec+1)& (0+255),b
  3653  001A8A                     
  3654                           ; BSR set to: 0
  3655                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  3656  001A8A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3657  001A8E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3658  001A92  CFDE FFF6          	movff	postinc2,tblptrl
  3659  001A96  CFDD FFF7          	movff	postdec2,tblptrh
  3660  001A9A                     	if	0	;tblptru may be non-zero
  3661  001A9A                     	endif
  3662  001A9A                     	if	0	;tblptru may be non-zero
  3663  001A9A                     	endif
  3664  001A9A  0008               	tblrd		*
  3665  001A9C  50F5               	movf	tablat,w,c
  3666  001A9E  0A2A               	xorlw	42
  3667  001AA0  A4D8               	btfss	status,2,c
  3668  001AA2  EF55  F00D         	goto	u6121
  3669  001AA6  EF57  F00D         	goto	u6120
  3670  001AAA                     u6121:
  3671  001AAA  EF80  F00D         	goto	l5078
  3672  001AAE                     u6120:
  3673  001AAE                     
  3674                           ; BSR set to: 0
  3675                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  3676  001AAE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3677  001AB2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3678  001AB6  2ADE               	incf	postinc2,f,c
  3679  001AB8  0E00               	movlw	0
  3680  001ABA  22DD               	addwfc	postdec2,f,c
  3681                           
  3682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  3683  001ABC  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3684  001AC0  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3685  001AC4  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3686  001AC8  0E02               	movlw	2
  3687  001ACA  26DE               	addwf	postinc2,f,c
  3688  001ACC  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3689  001AD0  0E00               	movlw	0
  3690  001AD2  22DD               	addwfc	postdec2,f,c
  3691  001AD4  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3692  001AD8  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3693  001ADC  CFDE F0ED          	movff	postinc2,_width
  3694  001AE0  CFDD F0EE          	movff	postdec2,_width+1
  3695  001AE4                     
  3696                           ; BSR set to: 0
  3697                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  3698  001AE4  BFEE               	btfsc	(_width+1)& (0+255),7,b
  3699  001AE6  EF79  F00D         	goto	u6130
  3700  001AEA  EF77  F00D         	goto	u6131
  3701  001AEE                     u6131:
  3702  001AEE  EFC4  F00D         	goto	l5088
  3703  001AF2                     u6130:
  3704  001AF2                     
  3705                           ; BSR set to: 0
  3706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  3707  001AF2  81F1               	bsf	_flags& (0+255),0,b
  3708                           
  3709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  3710  001AF4  6DED               	negf	_width& (0+255),b
  3711  001AF6  1FEE               	comf	(_width+1)& (0+255),f,b
  3712  001AF8  B0D8               	btfsc	status,0,c
  3713  001AFA  2BEE               	incf	(_width+1)& (0+255),f,b
  3714  001AFC  EFC4  F00D         	goto	l5088
  3715  001B00                     l5078:
  3716                           
  3717                           ; BSR set to: 0
  3718                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  3719  001B00  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3720  001B04  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3721  001B08  CFDE F008          	movff	postinc2,atoi@s
  3722  001B0C  CFDD F009          	movff	postdec2,atoi@s+1
  3723  001B10  ECC9  F019         	call	_atoi	;wreg free
  3724  001B14  C008  F0ED         	movff	?_atoi,_width
  3725  001B18  C009  F0EE         	movff	?_atoi+1,_width+1
  3726                           
  3727                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3728  001B1C  EF97  F00D         	goto	l5082
  3729  001B20                     l5080:
  3730                           
  3731                           ; BSR set to: 0
  3732                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  3733  001B20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3734  001B24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3735  001B28  2ADE               	incf	postinc2,f,c
  3736  001B2A  0E00               	movlw	0
  3737  001B2C  22DD               	addwfc	postdec2,f,c
  3738  001B2E                     l5082:
  3739  001B2E  0ED0               	movlw	208
  3740  001B30  6E46               	movwf	??_vfpfcnvrt^0,c
  3741  001B32  0EFF               	movlw	255
  3742  001B34  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3743  001B36  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3744  001B3A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3745  001B3E  CFDE FFF6          	movff	postinc2,tblptrl
  3746  001B42  CFDD FFF7          	movff	postdec2,tblptrh
  3747  001B46                     	if	0	;tblptru may be non-zero
  3748  001B46                     	endif
  3749  001B46                     	if	0	;tblptru may be non-zero
  3750  001B46                     	endif
  3751  001B46  0008               	tblrd		*
  3752  001B48  50F5               	movf	tablat,w,c
  3753  001B4A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3754  001B4C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3755  001B4E  5046               	movf	??_vfpfcnvrt^0,w,c
  3756  001B50  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3757  001B52  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3758  001B54  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3759  001B56  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3760  001B58  E10A               	bnz	u6140
  3761  001B5A  0E0A               	movlw	10
  3762  001B5C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3763  001B5E  A0D8               	btfss	status,0,c
  3764  001B60  EFB4  F00D         	goto	u6141
  3765  001B64  EFB7  F00D         	goto	u6140
  3766  001B68                     u6141:
  3767  001B68  0E01               	movlw	1
  3768  001B6A  EFB8  F00D         	goto	u6150
  3769  001B6E                     u6140:
  3770  001B6E  0E00               	movlw	0
  3771  001B70                     u6150:
  3772  001B70  0100               	movlb	0	; () banked
  3773  001B72  6FA0               	movwf	_vfpfcnvrt$2891& (0+255),b
  3774  001B74  6BA1               	clrf	(_vfpfcnvrt$2891+1)& (0+255),b
  3775  001B76                     
  3776                           ; BSR set to: 0
  3777  001B76  51A0               	movf	_vfpfcnvrt$2891& (0+255),w,b
  3778  001B78  11A1               	iorwf	(_vfpfcnvrt$2891+1)& (0+255),w,b
  3779  001B7A  A4D8               	btfss	status,2,c
  3780  001B7C  EFC2  F00D         	goto	u6161
  3781  001B80  EFC4  F00D         	goto	u6160
  3782  001B84                     u6161:
  3783  001B84  EF90  F00D         	goto	l5080
  3784  001B88                     u6160:
  3785  001B88                     l5088:
  3786                           
  3787                           ; BSR set to: 0
  3788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  3789  001B88  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3790  001B8C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3791  001B90  CFDE FFF6          	movff	postinc2,tblptrl
  3792  001B94  CFDD FFF7          	movff	postdec2,tblptrh
  3793  001B98                     	if	0	;tblptru may be non-zero
  3794  001B98                     	endif
  3795  001B98                     	if	0	;tblptru may be non-zero
  3796  001B98                     	endif
  3797  001B98  0008               	tblrd		*
  3798  001B9A  50F5               	movf	tablat,w,c
  3799  001B9C  0A2E               	xorlw	46
  3800  001B9E  A4D8               	btfss	status,2,c
  3801  001BA0  EFD4  F00D         	goto	u6171
  3802  001BA4  EFD6  F00D         	goto	u6170
  3803  001BA8                     u6171:
  3804  001BA8  EF54  F00E         	goto	l5108
  3805  001BAC                     u6170:
  3806  001BAC                     
  3807                           ; BSR set to: 0
  3808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  3809  001BAC  0E00               	movlw	0
  3810  001BAE  6FF0               	movwf	(_prec+1)& (0+255),b
  3811  001BB0  0E00               	movlw	0
  3812  001BB2  6FEF               	movwf	_prec& (0+255),b
  3813  001BB4                     
  3814                           ; BSR set to: 0
  3815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  3816  001BB4  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3817  001BB8  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3818  001BBC  2ADE               	incf	postinc2,f,c
  3819  001BBE  0E00               	movlw	0
  3820  001BC0  22DD               	addwfc	postdec2,f,c
  3821  001BC2                     
  3822                           ; BSR set to: 0
  3823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  3824  001BC2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3825  001BC6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3826  001BCA  CFDE FFF6          	movff	postinc2,tblptrl
  3827  001BCE  CFDD FFF7          	movff	postdec2,tblptrh
  3828  001BD2                     	if	0	;tblptru may be non-zero
  3829  001BD2                     	endif
  3830  001BD2                     	if	0	;tblptru may be non-zero
  3831  001BD2                     	endif
  3832  001BD2  0008               	tblrd		*
  3833  001BD4  50F5               	movf	tablat,w,c
  3834  001BD6  0A2A               	xorlw	42
  3835  001BD8  A4D8               	btfss	status,2,c
  3836  001BDA  EFF1  F00D         	goto	u6181
  3837  001BDE  EFF3  F00D         	goto	u6180
  3838  001BE2                     u6181:
  3839  001BE2  EF10  F00E         	goto	l5098
  3840  001BE6                     u6180:
  3841  001BE6                     
  3842                           ; BSR set to: 0
  3843                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  3844  001BE6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3845  001BEA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3846  001BEE  2ADE               	incf	postinc2,f,c
  3847  001BF0  0E00               	movlw	0
  3848  001BF2  22DD               	addwfc	postdec2,f,c
  3849                           
  3850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  3851  001BF4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  3852  001BF8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  3853  001BFC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  3854  001C00  0E02               	movlw	2
  3855  001C02  26DE               	addwf	postinc2,f,c
  3856  001C04  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  3857  001C08  0E00               	movlw	0
  3858  001C0A  22DD               	addwfc	postdec2,f,c
  3859  001C0C  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  3860  001C10  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  3861  001C14  CFDE F0EF          	movff	postinc2,_prec
  3862  001C18  CFDD F0F0          	movff	postdec2,_prec+1
  3863                           
  3864                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  3865  001C1C  EF54  F00E         	goto	l5108
  3866  001C20                     l5098:
  3867                           
  3868                           ; BSR set to: 0
  3869                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  3870  001C20  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3871  001C24  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3872  001C28  CFDE F008          	movff	postinc2,atoi@s
  3873  001C2C  CFDD F009          	movff	postdec2,atoi@s+1
  3874  001C30  ECC9  F019         	call	_atoi	;wreg free
  3875  001C34  C008  F0EF         	movff	?_atoi,_prec
  3876  001C38  C009  F0F0         	movff	?_atoi+1,_prec+1
  3877                           
  3878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  3879  001C3C  EF27  F00E         	goto	l5102
  3880  001C40                     l5100:
  3881                           
  3882                           ; BSR set to: 0
  3883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  3884  001C40  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3885  001C44  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3886  001C48  2ADE               	incf	postinc2,f,c
  3887  001C4A  0E00               	movlw	0
  3888  001C4C  22DD               	addwfc	postdec2,f,c
  3889  001C4E                     l5102:
  3890  001C4E  0ED0               	movlw	208
  3891  001C50  6E46               	movwf	??_vfpfcnvrt^0,c
  3892  001C52  0EFF               	movlw	255
  3893  001C54  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  3894  001C56  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3895  001C5A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3896  001C5E  CFDE FFF6          	movff	postinc2,tblptrl
  3897  001C62  CFDD FFF7          	movff	postdec2,tblptrh
  3898  001C66                     	if	0	;tblptru may be non-zero
  3899  001C66                     	endif
  3900  001C66                     	if	0	;tblptru may be non-zero
  3901  001C66                     	endif
  3902  001C66  0008               	tblrd		*
  3903  001C68  50F5               	movf	tablat,w,c
  3904  001C6A  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  3905  001C6C  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  3906  001C6E  5046               	movf	??_vfpfcnvrt^0,w,c
  3907  001C70  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  3908  001C72  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  3909  001C74  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  3910  001C76  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  3911  001C78  E10A               	bnz	u6190
  3912  001C7A  0E0A               	movlw	10
  3913  001C7C  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  3914  001C7E  A0D8               	btfss	status,0,c
  3915  001C80  EF44  F00E         	goto	u6191
  3916  001C84  EF47  F00E         	goto	u6190
  3917  001C88                     u6191:
  3918  001C88  0E01               	movlw	1
  3919  001C8A  EF48  F00E         	goto	u6200
  3920  001C8E                     u6190:
  3921  001C8E  0E00               	movlw	0
  3922  001C90                     u6200:
  3923  001C90  0100               	movlb	0	; () banked
  3924  001C92  6FA2               	movwf	_vfpfcnvrt$2892& (0+255),b
  3925  001C94  6BA3               	clrf	(_vfpfcnvrt$2892+1)& (0+255),b
  3926  001C96                     
  3927                           ; BSR set to: 0
  3928  001C96  51A2               	movf	_vfpfcnvrt$2892& (0+255),w,b
  3929  001C98  11A3               	iorwf	(_vfpfcnvrt$2892+1)& (0+255),w,b
  3930  001C9A  A4D8               	btfss	status,2,c
  3931  001C9C  EF52  F00E         	goto	u6211
  3932  001CA0  EF54  F00E         	goto	u6210
  3933  001CA4                     u6211:
  3934  001CA4  EF20  F00E         	goto	l5100
  3935  001CA8                     u6210:
  3936  001CA8                     l5108:
  3937                           
  3938                           ; BSR set to: 0
  3939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  3940  001CA8  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3941  001CAC  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3942  001CB0  CFDE FFF6          	movff	postinc2,tblptrl
  3943  001CB4  CFDD FFF7          	movff	postdec2,tblptrh
  3944  001CB8                     	if	0	;tblptru may be non-zero
  3945  001CB8                     	endif
  3946  001CB8                     	if	0	;tblptru may be non-zero
  3947  001CB8                     	endif
  3948  001CB8  0008               	tblrd		*
  3949  001CBA  50F5               	movf	tablat,w,c
  3950  001CBC  6E07               	movwf	tolower@c^0,c
  3951  001CBE  6A08               	clrf	(tolower@c+1)^0,c
  3952  001CC0  EC19  F022         	call	_tolower	;wreg free
  3953  001CC4  5007               	movf	?_tolower^0,w,c
  3954  001CC6  0100               	movlb	0	; () banked
  3955  001CC8  6FAA               	movwf	vfpfcnvrt@ct& (0+255),b
  3956  001CCA                     
  3957                           ; BSR set to: 0
  3958                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  3959  001CCA  51AA               	movf	vfpfcnvrt@ct& (0+255),w,b
  3960  001CCC  B4D8               	btfsc	status,2,c
  3961  001CCE  EF6B  F00E         	goto	u6221
  3962  001CD2  EF6D  F00E         	goto	u6220
  3963  001CD6                     u6221:
  3964  001CD6  EFA7  F00E         	goto	l5118
  3965  001CDA                     u6220:
  3966  001CDA                     
  3967                           ; BSR set to: 0
  3968                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  3969  001CDA  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  3970  001CDE  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  3971  001CE2  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  3972  001CE6  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  3973  001CEA  0E01               	movlw	1
  3974  001CEC  2646               	addwf	??_vfpfcnvrt^0,f,c
  3975  001CEE  0E00               	movlw	0
  3976  001CF0  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  3977  001CF2  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  3978  001CF6  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  3979  001CFA                     	if	0	;tblptru may be non-zero
  3980  001CFA                     	endif
  3981  001CFA                     	if	0	;tblptru may be non-zero
  3982  001CFA                     	endif
  3983  001CFA  0008               	tblrd		*
  3984  001CFC  50F5               	movf	tablat,w,c
  3985  001CFE  6E07               	movwf	tolower@c^0,c
  3986  001D00  6A08               	clrf	(tolower@c+1)^0,c
  3987  001D02  EC19  F022         	call	_tolower	;wreg free
  3988  001D06  5007               	movf	?_tolower^0,w,c
  3989  001D08  0100               	movlb	0	; () banked
  3990  001D0A  6FAB               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  3991  001D0C                     
  3992                           ; BSR set to: 0
  3993                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  3994  001D0C  51AB               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  3995  001D0E  B4D8               	btfsc	status,2,c
  3996  001D10  EF8C  F00E         	goto	u6231
  3997  001D14  EF8E  F00E         	goto	u6230
  3998  001D18                     u6231:
  3999  001D18  EFA7  F00E         	goto	l5118
  4000  001D1C                     u6230:
  4001  001D1C                     
  4002                           ; BSR set to: 0
  4003                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  4004  001D1C  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4005  001D20  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4006  001D24  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4007  001D28  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4008  001D2C  0E02               	movlw	2
  4009  001D2E  2646               	addwf	??_vfpfcnvrt^0,f,c
  4010  001D30  0E00               	movlw	0
  4011  001D32  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4012  001D34  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4013  001D38  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4014  001D3C                     	if	0	;tblptru may be non-zero
  4015  001D3C                     	endif
  4016  001D3C                     	if	0	;tblptru may be non-zero
  4017  001D3C                     	endif
  4018  001D3C  0008               	tblrd		*
  4019  001D3E  50F5               	movf	tablat,w,c
  4020  001D40  6E07               	movwf	tolower@c^0,c
  4021  001D42  6A08               	clrf	(tolower@c+1)^0,c
  4022  001D44  EC19  F022         	call	_tolower	;wreg free
  4023  001D48  5007               	movf	?_tolower^0,w,c
  4024  001D4A  0100               	movlb	0	; () banked
  4025  001D4C  6FAC               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  4026  001D4E                     l5118:
  4027                           
  4028                           ; BSR set to: 0
  4029                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  4030  001D4E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4031  001D52  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4032  001D56  CFDE FFF6          	movff	postinc2,tblptrl
  4033  001D5A  CFDD FFF7          	movff	postdec2,tblptrh
  4034  001D5E                     	if	0	;tblptru may be non-zero
  4035  001D5E                     	endif
  4036  001D5E                     	if	0	;tblptru may be non-zero
  4037  001D5E                     	endif
  4038  001D5E  0008               	tblrd		*
  4039  001D60  50F5               	movf	tablat,w,c
  4040  001D62  0A64               	xorlw	100
  4041  001D64  B4D8               	btfsc	status,2,c
  4042  001D66  EFB7  F00E         	goto	u6241
  4043  001D6A  EFB9  F00E         	goto	u6240
  4044  001D6E                     u6241:
  4045  001D6E  EFCB  F00E         	goto	l5122
  4046  001D72                     u6240:
  4047  001D72                     
  4048                           ; BSR set to: 0
  4049  001D72  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4050  001D76  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4051  001D7A  CFDE FFF6          	movff	postinc2,tblptrl
  4052  001D7E  CFDD FFF7          	movff	postdec2,tblptrh
  4053  001D82                     	if	0	;tblptru may be non-zero
  4054  001D82                     	endif
  4055  001D82                     	if	0	;tblptru may be non-zero
  4056  001D82                     	endif
  4057  001D82  0008               	tblrd		*
  4058  001D84  50F5               	movf	tablat,w,c
  4059  001D86  0A69               	xorlw	105
  4060  001D88  A4D8               	btfss	status,2,c
  4061  001D8A  EFC9  F00E         	goto	u6251
  4062  001D8E  EFCB  F00E         	goto	u6250
  4063  001D92                     u6251:
  4064  001D92  EF0B  F00F         	goto	l5128
  4065  001D96                     u6250:
  4066  001D96                     l5122:
  4067                           
  4068                           ; BSR set to: 0
  4069                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  4070  001D96  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4071  001D9A  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4072  001D9E  2ADE               	incf	postinc2,f,c
  4073  001DA0  0E00               	movlw	0
  4074  001DA2  22DD               	addwfc	postdec2,f,c
  4075                           
  4076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  4077  001DA4  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4078  001DA8  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4079  001DAC  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4080  001DB0  0E02               	movlw	2
  4081  001DB2  26DE               	addwf	postinc2,f,c
  4082  001DB4  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4083  001DB8  0E00               	movlw	0
  4084  001DBA  22DD               	addwfc	postdec2,f,c
  4085  001DBC  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4086  001DC0  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4087  001DC4  CFDE F098          	movff	postinc2,vfpfcnvrt@ll
  4088  001DC8  CFDD F099          	movff	postdec2,vfpfcnvrt@ll+1
  4089  001DCC  0E00               	movlw	0
  4090  001DCE  BF99               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  4091  001DD0  0EFF               	movlw	-1
  4092  001DD2  6F9A               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  4093  001DD4  6F9B               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  4094  001DD6  6F9C               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  4095  001DD8  6F9D               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  4096  001DDA  6F9E               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  4097  001DDC  6F9F               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  4098  001DDE                     
  4099                           ; BSR set to: 0
  4100                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  4101  001DDE  C040  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  4102  001DE2  C041  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  4103  001DE6  C098  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  4104  001DEA  C099  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  4105  001DEE  C09A  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  4106  001DF2  C09B  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  4107  001DF6  C09C  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  4108  001DFA  C09D  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  4109  001DFE  C09E  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  4110  001E02  C09F  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  4111  001E06  EC7B  F016         	call	_dtoa	;wreg free
  4112  001E0A  C01C  F040         	movff	?_dtoa,?_vfpfcnvrt
  4113  001E0E  C01D  F041         	movff	?_dtoa+1,?_vfpfcnvrt+1
  4114  001E12  EF38  F010         	goto	l1364
  4115  001E16                     l5128:
  4116                           
  4117                           ; BSR set to: 0
  4118                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  4119  001E16  0E66               	movlw	102
  4120  001E18  19AA               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  4121  001E1A  A4D8               	btfss	status,2,c
  4122  001E1C  EF12  F00F         	goto	u6261
  4123  001E20  EF14  F00F         	goto	u6260
  4124  001E24                     u6261:
  4125  001E24  EF54  F00F         	goto	l5140
  4126  001E28                     u6260:
  4127  001E28                     
  4128                           ; BSR set to: 0
  4129                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  4130  001E28  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4131  001E2C  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4132  001E30  CFDE FFF6          	movff	postinc2,tblptrl
  4133  001E34  CFDD FFF7          	movff	postdec2,tblptrh
  4134  001E38                     	if	0	;tblptru may be non-zero
  4135  001E38                     	endif
  4136  001E38                     	if	0	;tblptru may be non-zero
  4137  001E38                     	endif
  4138  001E38  0008               	tblrd		*
  4139  001E3A  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4140  001E3E                     
  4141                           ; BSR set to: 0
  4142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  4143  001E3E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4144  001E42  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4145  001E46  2ADE               	incf	postinc2,f,c
  4146  001E48  0E00               	movlw	0
  4147  001E4A  22DD               	addwfc	postdec2,f,c
  4148  001E4C                     
  4149                           ; BSR set to: 0
  4150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4151  001E4C  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4152  001E50  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4153  001E54  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4154  001E58  0E04               	movlw	4
  4155  001E5A  26DE               	addwf	postinc2,f,c
  4156  001E5C  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4157  001E60  0E00               	movlw	0
  4158  001E62  22DD               	addwfc	postdec2,f,c
  4159  001E64  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4160  001E68  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4161  001E6C  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4162  001E70  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4163  001E74  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4164  001E78  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4165  001E7C                     l5136:
  4166                           
  4167                           ; BSR set to: 0
  4168                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  4169  001E7C  C040  F02E         	movff	vfpfcnvrt@fp,efgtoa@fp
  4170  001E80  C041  F02F         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  4171  001E84  C0A6  F030         	movff	vfpfcnvrt@f,efgtoa@f
  4172  001E88  C0A7  F031         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  4173  001E8C  C0A8  F032         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  4174  001E90  C0A9  F033         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  4175  001E94  C0AD  F034         	movff	vfpfcnvrt@c,efgtoa@c
  4176  001E98  EC69  F003         	call	_efgtoa	;wreg free
  4177  001E9C  C02E  F040         	movff	?_efgtoa,?_vfpfcnvrt
  4178  001EA0  C02F  F041         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  4179  001EA4  EF38  F010         	goto	l1364
  4180  001EA8                     l5140:
  4181                           
  4182                           ; BSR set to: 0
  4183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  4184  001EA8  0EAA               	movlw	low vfpfcnvrt@ct
  4185  001EAA  6E01               	movwf	strncmp@_l^0,c
  4186  001EAC  0E00               	movlw	high vfpfcnvrt@ct
  4187  001EAE  6E02               	movwf	(strncmp@_l+1)^0,c
  4188  001EB0  0ECE               	movlw	low STR_23
  4189  001EB2  6E03               	movwf	strncmp@_r^0,c
  4190  001EB4  0E06               	movlw	high STR_23
  4191  001EB6  6E04               	movwf	(strncmp@_r+1)^0,c
  4192  001EB8  0E00               	movlw	0
  4193  001EBA  6E06               	movwf	(strncmp@n+1)^0,c
  4194  001EBC  0E02               	movlw	2
  4195  001EBE  6E05               	movwf	strncmp@n^0,c
  4196  001EC0  EC1D  F01E         	call	_strncmp	;wreg free
  4197  001EC4  5001               	movf	?_strncmp^0,w,c
  4198  001EC6  1002               	iorwf	(?_strncmp+1)^0,w,c
  4199  001EC8  A4D8               	btfss	status,2,c
  4200  001ECA  EF69  F00F         	goto	u6271
  4201  001ECE  EF6B  F00F         	goto	u6270
  4202  001ED2                     u6271:
  4203  001ED2  EFE7  F00F         	goto	l5156
  4204  001ED6                     u6270:
  4205  001ED6                     
  4206                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  4207  001ED6  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4208  001EDA  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4209  001EDE  CFDE F046          	movff	postinc2,??_vfpfcnvrt
  4210  001EE2  CFDD F047          	movff	postdec2,??_vfpfcnvrt+1
  4211  001EE6  0E01               	movlw	1
  4212  001EE8  2646               	addwf	??_vfpfcnvrt^0,f,c
  4213  001EEA  0E00               	movlw	0
  4214  001EEC  2247               	addwfc	(??_vfpfcnvrt+1)^0,f,c
  4215  001EEE  C046  FFF6         	movff	??_vfpfcnvrt,tblptrl
  4216  001EF2  C047  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  4217  001EF6                     	if	0	;tblptru may be non-zero
  4218  001EF6                     	endif
  4219  001EF6                     	if	0	;tblptru may be non-zero
  4220  001EF6                     	endif
  4221  001EF6  0008               	tblrd		*
  4222  001EF8  CFF5 F0AD          	movff	tablat,vfpfcnvrt@c
  4223  001EFC  0EBF               	movlw	191
  4224  001EFE  6E46               	movwf	??_vfpfcnvrt^0,c
  4225  001F00  0EFF               	movlw	255
  4226  001F02  6E47               	movwf	(??_vfpfcnvrt+1)^0,c
  4227  001F04  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4228  001F08  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4229  001F0C  CFDE FFF6          	movff	postinc2,tblptrl
  4230  001F10  CFDD FFF7          	movff	postdec2,tblptrh
  4231  001F14                     	if	0	;tblptru may be non-zero
  4232  001F14                     	endif
  4233  001F14                     	if	0	;tblptru may be non-zero
  4234  001F14                     	endif
  4235  001F14  0008               	tblrd		*
  4236  001F16  50F5               	movf	tablat,w,c
  4237  001F18  6E48               	movwf	(??_vfpfcnvrt+2)^0,c
  4238  001F1A  6A49               	clrf	(??_vfpfcnvrt+3)^0,c
  4239  001F1C  5046               	movf	??_vfpfcnvrt^0,w,c
  4240  001F1E  2648               	addwf	(??_vfpfcnvrt+2)^0,f,c
  4241  001F20  5047               	movf	(??_vfpfcnvrt+1)^0,w,c
  4242  001F22  2249               	addwfc	(??_vfpfcnvrt+3)^0,f,c
  4243  001F24  5049               	movf	(??_vfpfcnvrt+3)^0,w,c
  4244  001F26  E10A               	bnz	u6280
  4245  001F28  0E1A               	movlw	26
  4246  001F2A  5C48               	subwf	(??_vfpfcnvrt+2)^0,w,c
  4247  001F2C  A0D8               	btfss	status,0,c
  4248  001F2E  EF9B  F00F         	goto	u6281
  4249  001F32  EF9E  F00F         	goto	u6280
  4250  001F36                     u6281:
  4251  001F36  0E01               	movlw	1
  4252  001F38  EF9F  F00F         	goto	u6290
  4253  001F3C                     u6280:
  4254  001F3C  0E00               	movlw	0
  4255  001F3E                     u6290:
  4256  001F3E  0100               	movlb	0	; () banked
  4257  001F40  6FA4               	movwf	_vfpfcnvrt$2897& (0+255),b
  4258  001F42  6BA5               	clrf	(_vfpfcnvrt$2897+1)& (0+255),b
  4259  001F44                     
  4260                           ; BSR set to: 0
  4261  001F44  51A4               	movf	_vfpfcnvrt$2897& (0+255),w,b
  4262  001F46  11A5               	iorwf	(_vfpfcnvrt$2897+1)& (0+255),w,b
  4263  001F48  B4D8               	btfsc	status,2,c
  4264  001F4A  EFA9  F00F         	goto	u6301
  4265  001F4E  EFAB  F00F         	goto	u6300
  4266  001F52                     u6301:
  4267  001F52  EFC5  F00F         	goto	l5150
  4268  001F56                     u6300:
  4269  001F56                     
  4270                           ; BSR set to: 0
  4271                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  4272  001F56  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4273  001F5A  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4274  001F5E  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4275  001F62  0E04               	movlw	4
  4276  001F64  26DE               	addwf	postinc2,f,c
  4277  001F66  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4278  001F6A  0E00               	movlw	0
  4279  001F6C  22DD               	addwfc	postdec2,f,c
  4280  001F6E  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4281  001F72  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4282  001F76  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4283  001F7A  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4284  001F7E  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4285  001F82  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4286                           
  4287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  4288  001F86  EFDD  F00F         	goto	l1372
  4289  001F8A                     l5150:
  4290                           
  4291                           ; BSR set to: 0
  4292                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  4293  001F8A  C044  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  4294  001F8E  C045  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  4295  001F92  CFDF F046          	movff	indf2,??_vfpfcnvrt
  4296  001F96  0E04               	movlw	4
  4297  001F98  26DE               	addwf	postinc2,f,c
  4298  001F9A  CFDF F047          	movff	indf2,??_vfpfcnvrt+1
  4299  001F9E  0E00               	movlw	0
  4300  001FA0  22DD               	addwfc	postdec2,f,c
  4301  001FA2  C046  FFD9         	movff	??_vfpfcnvrt,fsr2l
  4302  001FA6  C047  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  4303  001FAA  CFDE F0A6          	movff	postinc2,vfpfcnvrt@f
  4304  001FAE  CFDE F0A7          	movff	postinc2,vfpfcnvrt@f+1
  4305  001FB2  CFDE F0A8          	movff	postinc2,vfpfcnvrt@f+2
  4306  001FB6  CFDE F0A9          	movff	postinc2,vfpfcnvrt@f+3
  4307  001FBA                     l1372:
  4308                           
  4309                           ; BSR set to: 0
  4310                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  4311  001FBA  0E02               	movlw	2
  4312  001FBC  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4313  001FC0  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4314  001FC4  26DE               	addwf	postinc2,f,c
  4315  001FC6  0E00               	movlw	0
  4316  001FC8  22DD               	addwfc	postdec2,f,c
  4317  001FCA  EF3E  F00F         	goto	l5136
  4318  001FCE                     l5156:
  4319                           
  4320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  4321  001FCE  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4322  001FD2  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4323  001FD6  CFDE FFF6          	movff	postinc2,tblptrl
  4324  001FDA  CFDD FFF7          	movff	postdec2,tblptrh
  4325  001FDE                     	if	0	;tblptru may be non-zero
  4326  001FDE                     	endif
  4327  001FDE                     	if	0	;tblptru may be non-zero
  4328  001FDE                     	endif
  4329  001FDE  0008               	tblrd		*
  4330  001FE0  50F5               	movf	tablat,w,c
  4331  001FE2  0A25               	xorlw	37
  4332  001FE4  A4D8               	btfss	status,2,c
  4333  001FE6  EFF7  F00F         	goto	u6311
  4334  001FEA  EFF9  F00F         	goto	u6310
  4335  001FEE                     u6311:
  4336  001FEE  EF10  F010         	goto	l5166
  4337  001FF2                     u6310:
  4338  001FF2                     
  4339                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  4340  001FF2  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4341  001FF6  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4342  001FFA  2ADE               	incf	postinc2,f,c
  4343  001FFC  0E00               	movlw	0
  4344  001FFE  22DD               	addwfc	postdec2,f,c
  4345  002000                     
  4346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  4347  002000  0E00               	movlw	0
  4348  002002  6E02               	movwf	(fputc@c+1)^0,c
  4349  002004  0E25               	movlw	37
  4350  002006  6E01               	movwf	fputc@c^0,c
  4351  002008  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4352  00200C  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4353  002010  ECF0  F01E         	call	_fputc	;wreg free
  4354  002014                     l5162:
  4355                           
  4356                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  4357  002014  0E00               	movlw	0
  4358  002016  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4359  002018  0E01               	movlw	1
  4360  00201A  6E40               	movwf	?_vfpfcnvrt^0,c
  4361  00201C  EF38  F010         	goto	l1364
  4362  002020                     l5166:
  4363                           
  4364                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  4365  002020  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4366  002024  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4367  002028  2ADE               	incf	postinc2,f,c
  4368  00202A  0E00               	movlw	0
  4369  00202C  22DD               	addwfc	postdec2,f,c
  4370  00202E                     
  4371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  4372  00202E  0E00               	movlw	0
  4373  002030  6E41               	movwf	(?_vfpfcnvrt+1)^0,c
  4374  002032  0E00               	movlw	0
  4375  002034  6E40               	movwf	?_vfpfcnvrt^0,c
  4376  002036  EF38  F010         	goto	l1364
  4377  00203A                     l5172:
  4378                           
  4379                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  4380  00203A  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4381  00203E  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4382  002042  CFDE FFF6          	movff	postinc2,tblptrl
  4383  002046  CFDD FFF7          	movff	postdec2,tblptrh
  4384  00204A                     	if	0	;tblptru may be non-zero
  4385  00204A                     	endif
  4386  00204A                     	if	0	;tblptru may be non-zero
  4387  00204A                     	endif
  4388  00204A  0008               	tblrd		*
  4389  00204C  50F5               	movf	tablat,w,c
  4390  00204E  6E01               	movwf	fputc@c^0,c
  4391  002050  6A02               	clrf	(fputc@c+1)^0,c
  4392  002052  C040  F003         	movff	vfpfcnvrt@fp,fputc@fp
  4393  002056  C041  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  4394  00205A  ECF0  F01E         	call	_fputc	;wreg free
  4395  00205E                     
  4396                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  4397  00205E  C042  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  4398  002062  C043  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  4399  002066  2ADE               	incf	postinc2,f,c
  4400  002068  0E00               	movlw	0
  4401  00206A  22DD               	addwfc	postdec2,f,c
  4402  00206C  EF0A  F010         	goto	l5162
  4403  002070                     l1364:
  4404  002070  0012               	return		;funcret
  4405  002072                     __end_of_vfpfcnvrt:
  4406                           	callstack 0
  4407                           
  4408 ;; *************** function _strncmp *****************
  4409 ;; Defined at:
  4410 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  4411 ;; Parameters:    Size  Location     Type
  4412 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  4413 ;;		 -> vfpfcnvrt@ct(3), 
  4414 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  4415 ;;		 -> STR_25(3), 
  4416 ;;  n               2    4[COMRAM] unsigned int 
  4417 ;; Auto vars:     Size  Location     Type
  4418 ;;  r               2    9[COMRAM] PTR const unsigned char 
  4419 ;;		 -> STR_25(3), 
  4420 ;;  l               2    7[COMRAM] PTR const unsigned char 
  4421 ;;		 -> vfpfcnvrt@ct(3), 
  4422 ;; Return value:  Size  Location     Type
  4423 ;;                  2    0[COMRAM] int 
  4424 ;; Registers used:
  4425 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  4426 ;; Tracked objects:
  4427 ;;		On entry : 0/0
  4428 ;;		On exit  : 0/0
  4429 ;;		Unchanged: 0/0
  4430 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4431 ;;      Params:         6       0       0       0       0       0       0
  4432 ;;      Locals:         4       0       0       0       0       0       0
  4433 ;;      Temps:          1       0       0       0       0       0       0
  4434 ;;      Totals:        11       0       0       0       0       0       0
  4435 ;;Total ram usage:       11 bytes
  4436 ;; Hardware stack levels used:    1
  4437 ;; Hardware stack levels required when called:    1
  4438 ;; This function calls:
  4439 ;;		Nothing
  4440 ;; This function is called by:
  4441 ;;		_vfpfcnvrt
  4442 ;; This function uses a non-reentrant model
  4443 ;;
  4444                           
  4445                           	psect	text10
  4446  003C3A                     __ptext10:
  4447                           	callstack 0
  4448  003C3A                     _strncmp:
  4449                           	callstack 24
  4450  003C3A  C001  F008         	movff	strncmp@_l,strncmp@l
  4451  003C3E  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  4452  003C42  C003  F00A         	movff	strncmp@_r,strncmp@r
  4453  003C46  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  4454  003C4A  0605               	decf	strncmp@n^0,f,c
  4455  003C4C  A0D8               	btfss	status,0,c
  4456  003C4E  0606               	decf	(strncmp@n+1)^0,f,c
  4457  003C50  2805               	incf	strncmp@n^0,w,c
  4458  003C52  E106               	bnz	u6021
  4459  003C54  2806               	incf	(strncmp@n+1)^0,w,c
  4460  003C56  A4D8               	btfss	status,2,c
  4461  003C58  EF30  F01E         	goto	u6021
  4462  003C5C  EF32  F01E         	goto	u6020
  4463  003C60                     u6021:
  4464  003C60  EF3F  F01E         	goto	l5034
  4465  003C64                     u6020:
  4466  003C64  0E00               	movlw	0
  4467  003C66  6E02               	movwf	(?_strncmp+1)^0,c
  4468  003C68  0E00               	movlw	0
  4469  003C6A  6E01               	movwf	?_strncmp^0,c
  4470  003C6C  EF87  F01E         	goto	l1500
  4471  003C70                     l5032:
  4472  003C70  4A08               	infsnz	strncmp@l^0,f,c
  4473  003C72  2A09               	incf	(strncmp@l+1)^0,f,c
  4474  003C74  4A0A               	infsnz	strncmp@r^0,f,c
  4475  003C76  2A0B               	incf	(strncmp@r+1)^0,f,c
  4476  003C78  0605               	decf	strncmp@n^0,f,c
  4477  003C7A  A0D8               	btfss	status,0,c
  4478  003C7C  0606               	decf	(strncmp@n+1)^0,f,c
  4479  003C7E                     l5034:
  4480  003C7E  C008  FFD9         	movff	strncmp@l,fsr2l
  4481  003C82  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4482  003C86  50DF               	movf	indf2,w,c
  4483  003C88  B4D8               	btfsc	status,2,c
  4484  003C8A  EF49  F01E         	goto	u6031
  4485  003C8E  EF4B  F01E         	goto	u6030
  4486  003C92                     u6031:
  4487  003C92  EF76  F01E         	goto	l5042
  4488  003C96                     u6030:
  4489  003C96  C00A  FFF6         	movff	strncmp@r,tblptrl
  4490  003C9A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4491  003C9E                     	if	0	;tblptru may be non-zero
  4492  003C9E                     	endif
  4493  003C9E                     	if	0	;tblptru may be non-zero
  4494  003C9E                     	endif
  4495  003C9E  0008               	tblrd		*
  4496  003CA0  50F5               	movf	tablat,w,c
  4497  003CA2  0900               	iorlw	0
  4498  003CA4  B4D8               	btfsc	status,2,c
  4499  003CA6  EF57  F01E         	goto	u6041
  4500  003CAA  EF59  F01E         	goto	u6040
  4501  003CAE                     u6041:
  4502  003CAE  EF76  F01E         	goto	l5042
  4503  003CB2                     u6040:
  4504  003CB2  5005               	movf	strncmp@n^0,w,c
  4505  003CB4  1006               	iorwf	(strncmp@n+1)^0,w,c
  4506  003CB6  B4D8               	btfsc	status,2,c
  4507  003CB8  EF60  F01E         	goto	u6051
  4508  003CBC  EF62  F01E         	goto	u6050
  4509  003CC0                     u6051:
  4510  003CC0  EF76  F01E         	goto	l5042
  4511  003CC4                     u6050:
  4512  003CC4  C008  FFD9         	movff	strncmp@l,fsr2l
  4513  003CC8  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4514  003CCC  50DF               	movf	indf2,w,c
  4515  003CCE  6E07               	movwf	??_strncmp^0,c
  4516  003CD0  C00A  FFF6         	movff	strncmp@r,tblptrl
  4517  003CD4  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4518  003CD8                     	if	0	;tblptru may be non-zero
  4519  003CD8                     	endif
  4520  003CD8                     	if	0	;tblptru may be non-zero
  4521  003CD8                     	endif
  4522  003CD8  0008               	tblrd		*
  4523  003CDA  50F5               	movf	tablat,w,c
  4524  003CDC  1807               	xorwf	??_strncmp^0,w,c
  4525  003CDE  B4D8               	btfsc	status,2,c
  4526  003CE0  EF74  F01E         	goto	u6061
  4527  003CE4  EF76  F01E         	goto	u6060
  4528  003CE8                     u6061:
  4529  003CE8  EF38  F01E         	goto	l5032
  4530  003CEC                     u6060:
  4531  003CEC                     l5042:
  4532  003CEC  C008  FFD9         	movff	strncmp@l,fsr2l
  4533  003CF0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  4534  003CF4  50DF               	movf	indf2,w,c
  4535  003CF6  6E07               	movwf	??_strncmp^0,c
  4536  003CF8  C00A  FFF6         	movff	strncmp@r,tblptrl
  4537  003CFC  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  4538  003D00                     	if	0	;tblptru may be non-zero
  4539  003D00                     	endif
  4540  003D00                     	if	0	;tblptru may be non-zero
  4541  003D00                     	endif
  4542  003D00  0008               	tblrd		*
  4543  003D02  50F5               	movf	tablat,w,c
  4544  003D04  5C07               	subwf	??_strncmp^0,w,c
  4545  003D06  6E01               	movwf	?_strncmp^0,c
  4546  003D08  6A02               	clrf	(?_strncmp+1)^0,c
  4547  003D0A  A0D8               	btfss	status,0,c
  4548  003D0C  0602               	decf	(?_strncmp+1)^0,f,c
  4549  003D0E                     l1500:
  4550  003D0E  0012               	return		;funcret
  4551  003D10                     __end_of_strncmp:
  4552                           	callstack 0
  4553                           
  4554 ;; *************** function _efgtoa *****************
  4555 ;; Defined at:
  4556 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  4557 ;; Parameters:    Size  Location     Type
  4558 ;;  fp              2   45[COMRAM] PTR struct _IO_FILE
  4559 ;;		 -> sprintf@f(6), 
  4560 ;;  f               4   47[COMRAM] PTR struct _IO_FILE
  4561 ;;  c               1   51[COMRAM] unsigned char 
  4562 ;; Auto vars:     Size  Location     Type
  4563 ;;  u               4   52[BANK0 ] unsigned char 
  4564 ;;  g               4   44[BANK0 ] unsigned char 
  4565 ;;  l               4   38[BANK0 ] unsigned char 
  4566 ;;  h               4   34[BANK0 ] unsigned char 
  4567 ;;  ou              4    0[BANK0 ] unsigned char 
  4568 ;;  n               2   50[BANK0 ] int 
  4569 ;;  e               2   48[BANK0 ] int 
  4570 ;;  i               2   42[BANK0 ] int 
  4571 ;;  w               2   31[BANK0 ] int 
  4572 ;;  p               2   28[BANK0 ] int 
  4573 ;;  sign            2   26[BANK0 ] int 
  4574 ;;  d               2   24[BANK0 ] int 
  4575 ;;  ne              2   22[BANK0 ] int 
  4576 ;;  m               2   20[BANK0 ] int 
  4577 ;;  pp              2   18[BANK0 ] int 
  4578 ;;  t               2   16[BANK0 ] int 
  4579 ;;  mode            1   33[BANK0 ] unsigned char 
  4580 ;;  nmode           1   30[BANK0 ] unsigned char 
  4581 ;; Return value:  Size  Location     Type
  4582 ;;                  2   45[COMRAM] int 
  4583 ;; Registers used:
  4584 ;;		wreg, fsr0l, fsr0h, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  4585 ;; Tracked objects:
  4586 ;;		On entry : 0/0
  4587 ;;		On exit  : 0/0
  4588 ;;		Unchanged: 0/0
  4589 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4590 ;;      Params:         7       0       0       0       0       0       0
  4591 ;;      Locals:         0      56       0       0       0       0       0
  4592 ;;      Temps:          5       0       0       0       0       0       0
  4593 ;;      Totals:        12      56       0       0       0       0       0
  4594 ;;Total ram usage:       68 bytes
  4595 ;; Hardware stack levels used:    1
  4596 ;; Hardware stack levels required when called:    5
  4597 ;; This function calls:
  4598 ;;		___awdiv
  4599 ;;		___awmod
  4600 ;;		___fladd
  4601 ;;		___fldiv
  4602 ;;		___fleq
  4603 ;;		___flge
  4604 ;;		___flmul
  4605 ;;		___flneg
  4606 ;;		___flsub
  4607 ;;		___fltol
  4608 ;;		___fpclassifyf
  4609 ;;		_floorf
  4610 ;;		_isupper
  4611 ;;		_pad
  4612 ;;		_strcpy
  4613 ;;		_tolower
  4614 ;; This function is called by:
  4615 ;;		_vfpfcnvrt
  4616 ;; This function uses a non-reentrant model
  4617 ;;
  4618                           
  4619                           	psect	text11
  4620  0006D2                     __ptext11:
  4621                           	callstack 0
  4622  0006D2                     _efgtoa:
  4623                           	callstack 20
  4624  0006D2                     
  4625                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  4626  0006D2  0E00               	movlw	0
  4627  0006D4  0100               	movlb	0	; () banked
  4628  0006D6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4629  0006D8  0E00               	movlw	0
  4630  0006DA  6F7A               	movwf	efgtoa@sign& (0+255),b
  4631  0006DC                     
  4632                           ; BSR set to: 0
  4633                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  4634  0006DC  C030  F08C         	movff	efgtoa@f,efgtoa@g
  4635  0006E0  C031  F08D         	movff	efgtoa@f+1,efgtoa@g+1
  4636  0006E4  C032  F08E         	movff	efgtoa@f+2,efgtoa@g+2
  4637  0006E8  C033  F08F         	movff	efgtoa@f+3,efgtoa@g+3
  4638  0006EC                     
  4639                           ; BSR set to: 0
  4640                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  4641  0006EC  BF8F               	btfsc	(efgtoa@g+3)& (0+255),7,b
  4642  0006EE  EF7D  F003         	goto	u5430
  4643  0006F2  EF7B  F003         	goto	u5431
  4644  0006F6                     u5431:
  4645  0006F6  EF93  F003         	goto	l4696
  4646  0006FA                     u5430:
  4647  0006FA                     
  4648                           ; BSR set to: 0
  4649                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  4650  0006FA  0E00               	movlw	0
  4651  0006FC  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  4652  0006FE  0E01               	movlw	1
  4653  000700  6F7A               	movwf	efgtoa@sign& (0+255),b
  4654  000702                     
  4655                           ; BSR set to: 0
  4656                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  4657  000702  C08C  F001         	movff	efgtoa@g,___flneg@f1
  4658  000706  C08D  F002         	movff	efgtoa@g+1,___flneg@f1+1
  4659  00070A  C08E  F003         	movff	efgtoa@g+2,___flneg@f1+2
  4660  00070E  C08F  F004         	movff	efgtoa@g+3,___flneg@f1+3
  4661  000712  EC77  F023         	call	___flneg	;wreg free
  4662  000716  C001  F08C         	movff	?___flneg,efgtoa@g
  4663  00071A  C002  F08D         	movff	?___flneg+1,efgtoa@g+1
  4664  00071E  C003  F08E         	movff	?___flneg+2,efgtoa@g+2
  4665  000722  C004  F08F         	movff	?___flneg+3,efgtoa@g+3
  4666  000726                     l4696:
  4667                           
  4668                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  4669  000726  0E00               	movlw	0
  4670  000728  0100               	movlb	0	; () banked
  4671  00072A  6F93               	movwf	(efgtoa@n+1)& (0+255),b
  4672  00072C  0E00               	movlw	0
  4673  00072E  6F92               	movwf	efgtoa@n& (0+255),b
  4674  000730                     
  4675                           ; BSR set to: 0
  4676                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  4677  000730  C0ED  F07F         	movff	_width,efgtoa@w
  4678  000734  C0EE  F080         	movff	_width+1,efgtoa@w+1
  4679  000738                     
  4680                           ; BSR set to: 0
  4681                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  4682  000738  517A               	movf	efgtoa@sign& (0+255),w,b
  4683  00073A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4684  00073C  A4D8               	btfss	status,2,c
  4685  00073E  EFA3  F003         	goto	u5441
  4686  000742  EFA5  F003         	goto	u5440
  4687  000746                     u5441:
  4688  000746  EFAC  F003         	goto	l4704
  4689  00074A                     u5440:
  4690  00074A                     
  4691                           ; BSR set to: 0
  4692  00074A  A5F1               	btfss	_flags& (0+255),2,b
  4693  00074C  EFAA  F003         	goto	u5451
  4694  000750  EFAC  F003         	goto	u5450
  4695  000754                     u5451:
  4696  000754  EFC6  F003         	goto	l4716
  4697  000758                     u5450:
  4698  000758                     l4704:
  4699                           
  4700                           ; BSR set to: 0
  4701                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  4702  000758  517A               	movf	efgtoa@sign& (0+255),w,b
  4703  00075A  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  4704  00075C  A4D8               	btfss	status,2,c
  4705  00075E  EFB3  F003         	goto	u5461
  4706  000762  EFB5  F003         	goto	u5460
  4707  000766                     u5461:
  4708  000766  EFBB  F003         	goto	l4708
  4709  00076A                     u5460:
  4710  00076A                     
  4711                           ; BSR set to: 0
  4712  00076A  0E00               	movlw	0
  4713  00076C  6F65               	movwf	(_efgtoa$2866+1)& (0+255),b
  4714  00076E  0E2B               	movlw	43
  4715  000770  6F64               	movwf	_efgtoa$2866& (0+255),b
  4716  000772  EFBF  F003         	goto	l4710
  4717  000776                     l4708:
  4718                           
  4719                           ; BSR set to: 0
  4720  000776  0E00               	movlw	0
  4721  000778  6F65               	movwf	(_efgtoa$2866+1)& (0+255),b
  4722  00077A  0E2D               	movlw	45
  4723  00077C  6F64               	movwf	_efgtoa$2866& (0+255),b
  4724  00077E                     l4710:
  4725                           
  4726                           ; BSR set to: 0
  4727  00077E  C064  F1AB         	movff	_efgtoa$2866,_dbuf
  4728  000782                     
  4729                           ; BSR set to: 0
  4730                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  4731  000782  4B92               	infsnz	efgtoa@n& (0+255),f,b
  4732  000784  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  4733  000786                     
  4734                           ; BSR set to: 0
  4735                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  4736  000786  077F               	decf	efgtoa@w& (0+255),f,b
  4737  000788  A0D8               	btfss	status,0,c
  4738  00078A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  4739  00078C                     l4716:
  4740                           
  4741                           ; BSR set to: 0
  4742                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4743  00078C  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4744  000790  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4745  000794  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4746  000798  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4747  00079C  EC9E  F01D         	call	___fpclassifyf	;wreg free
  4748  0007A0  0401               	decf	?___fpclassifyf^0,w,c
  4749  0007A2  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4750  0007A4  A4D8               	btfss	status,2,c
  4751  0007A6  EFD7  F003         	goto	u5471
  4752  0007AA  EFD9  F003         	goto	u5470
  4753  0007AE                     u5471:
  4754  0007AE  EF30  F004         	goto	l4734
  4755  0007B2                     u5470:
  4756  0007B2  0EBF               	movlw	191
  4757  0007B4  6E35               	movwf	??_efgtoa^0,c
  4758  0007B6  0EFF               	movlw	255
  4759  0007B8  6E36               	movwf	(??_efgtoa+1)^0,c
  4760  0007BA  5034               	movf	efgtoa@c^0,w,c
  4761  0007BC  6E37               	movwf	(??_efgtoa+2)^0,c
  4762  0007BE  6A38               	clrf	(??_efgtoa+3)^0,c
  4763  0007C0  5035               	movf	??_efgtoa^0,w,c
  4764  0007C2  2637               	addwf	(??_efgtoa+2)^0,f,c
  4765  0007C4  5036               	movf	(??_efgtoa+1)^0,w,c
  4766  0007C6  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4767  0007C8  5038               	movf	(??_efgtoa+3)^0,w,c
  4768  0007CA  E10A               	bnz	u5480
  4769  0007CC  0E1A               	movlw	26
  4770  0007CE  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4771  0007D0  A0D8               	btfss	status,0,c
  4772  0007D2  EFED  F003         	goto	u5481
  4773  0007D6  EFF0  F003         	goto	u5480
  4774  0007DA                     u5481:
  4775  0007DA  0E01               	movlw	1
  4776  0007DC  EFF1  F003         	goto	u5490
  4777  0007E0                     u5480:
  4778  0007E0  0E00               	movlw	0
  4779  0007E2                     u5490:
  4780  0007E2  0100               	movlb	0	; () banked
  4781  0007E4  6F66               	movwf	_efgtoa$2867& (0+255),b
  4782  0007E6  6B67               	clrf	(_efgtoa$2867+1)& (0+255),b
  4783  0007E8                     
  4784                           ; BSR set to: 0
  4785  0007E8  5166               	movf	_efgtoa$2867& (0+255),w,b
  4786  0007EA  1167               	iorwf	(_efgtoa$2867+1)& (0+255),w,b
  4787  0007EC  B4D8               	btfsc	status,2,c
  4788  0007EE  EFFB  F003         	goto	u5501
  4789  0007F2  EFFD  F003         	goto	u5500
  4790  0007F6                     u5501:
  4791  0007F6  EF0B  F004         	goto	l4726
  4792  0007FA                     u5500:
  4793  0007FA                     
  4794                           ; BSR set to: 0
  4795                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  4796  0007FA  0EAB               	movlw	low _dbuf
  4797  0007FC  2592               	addwf	efgtoa@n& (0+255),w,b
  4798  0007FE  6E01               	movwf	strcpy@dest^0,c
  4799  000800  0E01               	movlw	high _dbuf
  4800  000802  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4801  000804  6E02               	movwf	(strcpy@dest+1)^0,c
  4802  000806  0EBE               	movlw	low STR_15
  4803  000808  6E03               	movwf	strcpy@src^0,c
  4804  00080A  0E06               	movlw	high STR_15
  4805  00080C  6E04               	movwf	(strcpy@src+1)^0,c
  4806  00080E  EC49  F022         	call	_strcpy	;wreg free
  4807                           
  4808                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  4809  000812  EF17  F004         	goto	l4728
  4810  000816                     l4726:
  4811                           
  4812                           ; BSR set to: 0
  4813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  4814  000816  0EAB               	movlw	low _dbuf
  4815  000818  2592               	addwf	efgtoa@n& (0+255),w,b
  4816  00081A  6E01               	movwf	strcpy@dest^0,c
  4817  00081C  0E01               	movlw	high _dbuf
  4818  00081E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4819  000820  6E02               	movwf	(strcpy@dest+1)^0,c
  4820  000822  0EC6               	movlw	low STR_16
  4821  000824  6E03               	movwf	strcpy@src^0,c
  4822  000826  0E06               	movlw	high STR_16
  4823  000828  6E04               	movwf	(strcpy@src+1)^0,c
  4824  00082A  EC49  F022         	call	_strcpy	;wreg free
  4825  00082E                     l4728:
  4826                           
  4827                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  4828  00082E  0100               	movlb	0	; () banked
  4829  000830  0EFD               	movlw	253
  4830  000832  277F               	addwf	efgtoa@w& (0+255),f,b
  4831  000834  0EFF               	movlw	255
  4832  000836  2380               	addwfc	(efgtoa@w+1)& (0+255),f,b
  4833  000838                     l4730:
  4834                           
  4835                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  4836  000838  C02E  F011         	movff	efgtoa@fp,pad@fp
  4837  00083C  C02F  F012         	movff	efgtoa@fp+1,pad@fp+1
  4838  000840  0EAB               	movlw	low _dbuf
  4839  000842  6E13               	movwf	pad@buf^0,c
  4840  000844  0E01               	movlw	high _dbuf
  4841  000846  6E14               	movwf	(pad@buf+1)^0,c
  4842  000848  C07F  F015         	movff	efgtoa@w,pad@p
  4843  00084C  C080  F016         	movff	efgtoa@w+1,pad@p+1
  4844  000850  EC55  F01F         	call	_pad	;wreg free
  4845  000854  C011  F02E         	movff	?_pad,?_efgtoa
  4846  000858  C012  F02F         	movff	?_pad+1,?_efgtoa+1
  4847  00085C  EF40  F009         	goto	l1262
  4848  000860                     l4734:
  4849                           
  4850                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  4851  000860  C08C  F001         	movff	efgtoa@g,___fpclassifyf@x
  4852  000864  C08D  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  4853  000868  C08E  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  4854  00086C  C08F  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  4855  000870  EC9E  F01D         	call	___fpclassifyf	;wreg free
  4856  000874  5001               	movf	?___fpclassifyf^0,w,c
  4857  000876  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  4858  000878  A4D8               	btfss	status,2,c
  4859  00087A  EF41  F004         	goto	u5511
  4860  00087E  EF43  F004         	goto	u5510
  4861  000882                     u5511:
  4862  000882  EF83  F004         	goto	l4752
  4863  000886                     u5510:
  4864  000886  0EBF               	movlw	191
  4865  000888  6E35               	movwf	??_efgtoa^0,c
  4866  00088A  0EFF               	movlw	255
  4867  00088C  6E36               	movwf	(??_efgtoa+1)^0,c
  4868  00088E  5034               	movf	efgtoa@c^0,w,c
  4869  000890  6E37               	movwf	(??_efgtoa+2)^0,c
  4870  000892  6A38               	clrf	(??_efgtoa+3)^0,c
  4871  000894  5035               	movf	??_efgtoa^0,w,c
  4872  000896  2637               	addwf	(??_efgtoa+2)^0,f,c
  4873  000898  5036               	movf	(??_efgtoa+1)^0,w,c
  4874  00089A  2238               	addwfc	(??_efgtoa+3)^0,f,c
  4875  00089C  5038               	movf	(??_efgtoa+3)^0,w,c
  4876  00089E  E10A               	bnz	u5520
  4877  0008A0  0E1A               	movlw	26
  4878  0008A2  5C37               	subwf	(??_efgtoa+2)^0,w,c
  4879  0008A4  A0D8               	btfss	status,0,c
  4880  0008A6  EF57  F004         	goto	u5521
  4881  0008AA  EF5A  F004         	goto	u5520
  4882  0008AE                     u5521:
  4883  0008AE  0E01               	movlw	1
  4884  0008B0  EF5B  F004         	goto	u5530
  4885  0008B4                     u5520:
  4886  0008B4  0E00               	movlw	0
  4887  0008B6                     u5530:
  4888  0008B6  0100               	movlb	0	; () banked
  4889  0008B8  6F68               	movwf	_efgtoa$2871& (0+255),b
  4890  0008BA  6B69               	clrf	(_efgtoa$2871+1)& (0+255),b
  4891  0008BC                     
  4892                           ; BSR set to: 0
  4893  0008BC  5168               	movf	_efgtoa$2871& (0+255),w,b
  4894  0008BE  1169               	iorwf	(_efgtoa$2871+1)& (0+255),w,b
  4895  0008C0  B4D8               	btfsc	status,2,c
  4896  0008C2  EF65  F004         	goto	u5541
  4897  0008C6  EF67  F004         	goto	u5540
  4898  0008CA                     u5541:
  4899  0008CA  EF75  F004         	goto	l4744
  4900  0008CE                     u5540:
  4901  0008CE                     
  4902                           ; BSR set to: 0
  4903                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  4904  0008CE  0EAB               	movlw	low _dbuf
  4905  0008D0  2592               	addwf	efgtoa@n& (0+255),w,b
  4906  0008D2  6E01               	movwf	strcpy@dest^0,c
  4907  0008D4  0E01               	movlw	high _dbuf
  4908  0008D6  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4909  0008D8  6E02               	movwf	(strcpy@dest+1)^0,c
  4910  0008DA  0EC2               	movlw	low STR_19
  4911  0008DC  6E03               	movwf	strcpy@src^0,c
  4912  0008DE  0E06               	movlw	high STR_19
  4913  0008E0  6E04               	movwf	(strcpy@src+1)^0,c
  4914  0008E2  EC49  F022         	call	_strcpy	;wreg free
  4915                           
  4916                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  4917  0008E6  EF17  F004         	goto	l4728
  4918  0008EA                     l4744:
  4919                           
  4920                           ; BSR set to: 0
  4921                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  4922  0008EA  0EAB               	movlw	low _dbuf
  4923  0008EC  2592               	addwf	efgtoa@n& (0+255),w,b
  4924  0008EE  6E01               	movwf	strcpy@dest^0,c
  4925  0008F0  0E01               	movlw	high _dbuf
  4926  0008F2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  4927  0008F4  6E02               	movwf	(strcpy@dest+1)^0,c
  4928  0008F6  0ECA               	movlw	low STR_20
  4929  0008F8  6E03               	movwf	strcpy@src^0,c
  4930  0008FA  0E06               	movlw	high STR_20
  4931  0008FC  6E04               	movwf	(strcpy@src+1)^0,c
  4932  0008FE  EC49  F022         	call	_strcpy	;wreg free
  4933  000902  EF17  F004         	goto	l4728
  4934  000906                     l4752:
  4935                           
  4936                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  4937  000906  0E00               	movlw	0
  4938  000908  0100               	movlb	0	; () banked
  4939  00090A  6F94               	movwf	efgtoa@u& (0+255),b
  4940  00090C  0E00               	movlw	0
  4941  00090E  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  4942  000910  0E80               	movlw	128
  4943  000912  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  4944  000914  0E3F               	movlw	63
  4945  000916  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  4946                           
  4947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  4948  000918  0E00               	movlw	0
  4949  00091A  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  4950  00091C  0E00               	movlw	0
  4951  00091E  6F90               	movwf	efgtoa@e& (0+255),b
  4952  000920                     
  4953                           ; BSR set to: 0
  4954                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  4955  000920  C08C  F001         	movff	efgtoa@g,___fleq@ff1
  4956  000924  C08D  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  4957  000928  C08E  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  4958  00092C  C08F  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  4959  000930  0E00               	movlw	0
  4960  000932  6E05               	movwf	___fleq@ff2^0,c
  4961  000934  0E00               	movlw	0
  4962  000936  6E06               	movwf	(___fleq@ff2+1)^0,c
  4963  000938  0E00               	movlw	0
  4964  00093A  6E07               	movwf	(___fleq@ff2+2)^0,c
  4965  00093C  0E00               	movlw	0
  4966  00093E  6E08               	movwf	(___fleq@ff2+3)^0,c
  4967  000940  EC72  F020         	call	___fleq	;wreg free
  4968  000944  B0D8               	btfsc	status,0,c
  4969  000946  EFA7  F004         	goto	u5551
  4970  00094A  EFA9  F004         	goto	u5550
  4971  00094E                     u5551:
  4972  00094E  EF2C  F005         	goto	l4770
  4973  000952                     u5550:
  4974  000952  EFC8  F004         	goto	l4762
  4975  000956                     l4758:
  4976                           
  4977                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  4978  000956  C094  F001         	movff	efgtoa@u,___flmul@b
  4979  00095A  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  4980  00095E  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  4981  000962  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  4982  000966  0E00               	movlw	0
  4983  000968  6E05               	movwf	___flmul@a^0,c
  4984  00096A  0E00               	movlw	0
  4985  00096C  6E06               	movwf	(___flmul@a+1)^0,c
  4986  00096E  0E20               	movlw	32
  4987  000970  6E07               	movwf	(___flmul@a+2)^0,c
  4988  000972  0E41               	movlw	65
  4989  000974  6E08               	movwf	(___flmul@a+3)^0,c
  4990  000976  EC99  F012         	call	___flmul	;wreg free
  4991  00097A  C001  F094         	movff	?___flmul,efgtoa@u
  4992  00097E  C002  F095         	movff	?___flmul+1,efgtoa@u+1
  4993  000982  C003  F096         	movff	?___flmul+2,efgtoa@u+2
  4994  000986  C004  F097         	movff	?___flmul+3,efgtoa@u+3
  4995  00098A                     
  4996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  4997  00098A  0100               	movlb	0	; () banked
  4998  00098C  4B90               	infsnz	efgtoa@e& (0+255),f,b
  4999  00098E  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5000  000990                     l4762:
  5001                           
  5002                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  5003  000990  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5004  000994  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5005  000998  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5006  00099C  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5007  0009A0  0E00               	movlw	0
  5008  0009A2  6E05               	movwf	___flmul@a^0,c
  5009  0009A4  0E00               	movlw	0
  5010  0009A6  6E06               	movwf	(___flmul@a+1)^0,c
  5011  0009A8  0E20               	movlw	32
  5012  0009AA  6E07               	movwf	(___flmul@a+2)^0,c
  5013  0009AC  0E41               	movlw	65
  5014  0009AE  6E08               	movwf	(___flmul@a+3)^0,c
  5015  0009B0  C094  F001         	movff	efgtoa@u,___flmul@b
  5016  0009B4  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5017  0009B8  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5018  0009BC  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5019  0009C0  EC99  F012         	call	___flmul	;wreg free
  5020  0009C4  C001  F01E         	movff	?___flmul,___flge@ff2
  5021  0009C8  C002  F01F         	movff	?___flmul+1,___flge@ff2+1
  5022  0009CC  C003  F020         	movff	?___flmul+2,___flge@ff2+2
  5023  0009D0  C004  F021         	movff	?___flmul+3,___flge@ff2+3
  5024  0009D4  EC1C  F01D         	call	___flge	;wreg free
  5025  0009D8  B0D8               	btfsc	status,0,c
  5026  0009DA  EFF1  F004         	goto	u5561
  5027  0009DE  EFF3  F004         	goto	u5560
  5028  0009E2                     u5561:
  5029  0009E2  EFAB  F004         	goto	l4758
  5030  0009E6                     u5560:
  5031  0009E6  EF13  F005         	goto	l4768
  5032  0009EA                     l4764:
  5033                           
  5034                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  5035  0009EA  C094  F001         	movff	efgtoa@u,___fldiv@b
  5036  0009EE  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5037  0009F2  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5038  0009F6  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5039  0009FA  0E00               	movlw	0
  5040  0009FC  6E05               	movwf	___fldiv@a^0,c
  5041  0009FE  0E00               	movlw	0
  5042  000A00  6E06               	movwf	(___fldiv@a+1)^0,c
  5043  000A02  0E20               	movlw	32
  5044  000A04  6E07               	movwf	(___fldiv@a+2)^0,c
  5045  000A06  0E41               	movlw	65
  5046  000A08  6E08               	movwf	(___fldiv@a+3)^0,c
  5047  000A0A  ECAE  F014         	call	___fldiv	;wreg free
  5048  000A0E  C001  F094         	movff	?___fldiv,efgtoa@u
  5049  000A12  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5050  000A16  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5051  000A1A  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5052  000A1E                     
  5053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  5054  000A1E  0100               	movlb	0	; () banked
  5055  000A20  0790               	decf	efgtoa@e& (0+255),f,b
  5056  000A22  A0D8               	btfss	status,0,c
  5057  000A24  0791               	decf	(efgtoa@e+1)& (0+255),f,b
  5058  000A26                     l4768:
  5059                           
  5060                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  5061  000A26  C08C  F01A         	movff	efgtoa@g,___flge@ff1
  5062  000A2A  C08D  F01B         	movff	efgtoa@g+1,___flge@ff1+1
  5063  000A2E  C08E  F01C         	movff	efgtoa@g+2,___flge@ff1+2
  5064  000A32  C08F  F01D         	movff	efgtoa@g+3,___flge@ff1+3
  5065  000A36  C094  F01E         	movff	efgtoa@u,___flge@ff2
  5066  000A3A  C095  F01F         	movff	efgtoa@u+1,___flge@ff2+1
  5067  000A3E  C096  F020         	movff	efgtoa@u+2,___flge@ff2+2
  5068  000A42  C097  F021         	movff	efgtoa@u+3,___flge@ff2+3
  5069  000A46  EC1C  F01D         	call	___flge	;wreg free
  5070  000A4A  A0D8               	btfss	status,0,c
  5071  000A4C  EF2A  F005         	goto	u5571
  5072  000A50  EF2C  F005         	goto	u5570
  5073  000A54                     u5571:
  5074  000A54  EFF5  F004         	goto	l4764
  5075  000A58                     u5570:
  5076  000A58                     l4770:
  5077                           
  5078                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  5079  000A58  C034  F007         	movff	efgtoa@c,tolower@c
  5080  000A5C  6A08               	clrf	(tolower@c+1)^0,c
  5081  000A5E  EC19  F022         	call	_tolower	;wreg free
  5082  000A62  5007               	movf	?_tolower^0,w,c
  5083  000A64  0100               	movlb	0	; () banked
  5084  000A66  6F81               	movwf	efgtoa@mode& (0+255),b
  5085  000A68                     
  5086                           ; BSR set to: 0
  5087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  5088  000A68  C081  F07E         	movff	efgtoa@mode,efgtoa@nmode
  5089  000A6C                     
  5090                           ; BSR set to: 0
  5091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  5092  000A6C  0E67               	movlw	103
  5093  000A6E  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5094  000A70  A4D8               	btfss	status,2,c
  5095  000A72  EF3D  F005         	goto	u5581
  5096  000A76  EF3F  F005         	goto	u5580
  5097  000A7A                     u5581:
  5098  000A7A  EF65  F005         	goto	l4784
  5099  000A7E                     u5580:
  5100  000A7E                     
  5101                           ; BSR set to: 0
  5102                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  5103  000A7E  51EF               	movf	_prec& (0+255),w,b
  5104  000A80  11F0               	iorwf	(_prec+1)& (0+255),w,b
  5105  000A82  A4D8               	btfss	status,2,c
  5106  000A84  EF46  F005         	goto	u5591
  5107  000A88  EF48  F005         	goto	u5590
  5108  000A8C                     u5591:
  5109  000A8C  EF4C  F005         	goto	l4780
  5110  000A90                     u5590:
  5111  000A90                     
  5112                           ; BSR set to: 0
  5113                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  5114  000A90  0E00               	movlw	0
  5115  000A92  6FF0               	movwf	(_prec+1)& (0+255),b
  5116  000A94  0E01               	movlw	1
  5117  000A96  6FEF               	movwf	_prec& (0+255),b
  5118  000A98                     l4780:
  5119                           
  5120                           ; BSR set to: 0
  5121                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  5122  000A98  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  5123  000A9A  EF59  F005         	goto	u5600
  5124  000A9E  51F0               	movf	(_prec+1)& (0+255),w,b
  5125  000AA0  E106               	bnz	u5601
  5126  000AA2  05EF               	decf	_prec& (0+255),w,b
  5127  000AA4  B0D8               	btfsc	status,0,c
  5128  000AA6  EF57  F005         	goto	u5601
  5129  000AAA  EF59  F005         	goto	u5600
  5130  000AAE                     u5601:
  5131  000AAE  EF5F  F005         	goto	l1280
  5132  000AB2                     u5600:
  5133  000AB2                     l4782:
  5134                           
  5135                           ; BSR set to: 0
  5136  000AB2  0E00               	movlw	0
  5137  000AB4  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5138  000AB6  0E06               	movlw	6
  5139  000AB8  6F7C               	movwf	efgtoa@p& (0+255),b
  5140  000ABA  EF6E  F005         	goto	l4790
  5141  000ABE                     l1280:
  5142                           
  5143                           ; BSR set to: 0
  5144  000ABE  C0EF  F07C         	movff	_prec,efgtoa@p
  5145  000AC2  C0F0  F07D         	movff	_prec+1,efgtoa@p+1
  5146  000AC6  EF6E  F005         	goto	l4790
  5147  000ACA                     l4784:
  5148                           
  5149                           ; BSR set to: 0
  5150                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  5151  000ACA  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  5152  000ACC  EF6A  F005         	goto	u5611
  5153  000AD0  EF6C  F005         	goto	u5610
  5154  000AD4                     u5611:
  5155  000AD4  EF59  F005         	goto	l4782
  5156  000AD8                     u5610:
  5157  000AD8  EF5F  F005         	goto	l1280
  5158  000ADC                     l4790:
  5159                           
  5160                           ; BSR set to: 0
  5161                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  5162  000ADC  0E67               	movlw	103
  5163  000ADE  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5164  000AE0  A4D8               	btfss	status,2,c
  5165  000AE2  EF75  F005         	goto	u5621
  5166  000AE6  EF77  F005         	goto	u5620
  5167  000AEA                     u5621:
  5168  000AEA  EFA6  F005         	goto	l4800
  5169  000AEE                     u5620:
  5170  000AEE                     
  5171                           ; BSR set to: 0
  5172                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  5173  000AEE  AF91               	btfss	(efgtoa@e+1)& (0+255),7,b
  5174  000AF0  EF85  F005         	goto	u5630
  5175  000AF4  0EFC               	movlw	252
  5176  000AF6  5D90               	subwf	efgtoa@e& (0+255),w,b
  5177  000AF8  0EFF               	movlw	255
  5178  000AFA  5991               	subwfb	(efgtoa@e+1)& (0+255),w,b
  5179  000AFC  A0D8               	btfss	status,0,c
  5180  000AFE  EF83  F005         	goto	u5631
  5181  000B02  EF85  F005         	goto	u5630
  5182  000B06                     u5631:
  5183  000B06  EFA4  F005         	goto	l4798
  5184  000B0A                     u5630:
  5185  000B0A                     
  5186                           ; BSR set to: 0
  5187  000B0A  0EFF               	movlw	255
  5188  000B0C  6E35               	movwf	??_efgtoa^0,c
  5189  000B0E  0EFF               	movlw	255
  5190  000B10  6E36               	movwf	(??_efgtoa+1)^0,c
  5191  000B12  C07C  F037         	movff	efgtoa@p,??_efgtoa+2
  5192  000B16  C07D  F038         	movff	efgtoa@p+1,??_efgtoa+3
  5193  000B1A  5035               	movf	??_efgtoa^0,w,c
  5194  000B1C  2637               	addwf	(??_efgtoa+2)^0,f,c
  5195  000B1E  5036               	movf	(??_efgtoa+1)^0,w,c
  5196  000B20  2238               	addwfc	(??_efgtoa+3)^0,f,c
  5197  000B22  5190               	movf	efgtoa@e& (0+255),w,b
  5198  000B24  5C37               	subwf	(??_efgtoa+2)^0,w,c
  5199  000B26  5038               	movf	(??_efgtoa+3)^0,w,c
  5200  000B28  0A80               	xorlw	128
  5201  000B2A  6E39               	movwf	(??_efgtoa+4)^0,c
  5202  000B2C  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5203  000B2E  0A80               	xorlw	128
  5204  000B30  5839               	subwfb	(??_efgtoa+4)^0,w,c
  5205  000B32  A0D8               	btfss	status,0,c
  5206  000B34  EF9E  F005         	goto	u5641
  5207  000B38  EFA0  F005         	goto	u5640
  5208  000B3C                     u5641:
  5209  000B3C  EFA4  F005         	goto	l4798
  5210  000B40                     u5640:
  5211  000B40                     
  5212                           ; BSR set to: 0
  5213                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  5214  000B40  0E66               	movlw	102
  5215  000B42  6F7E               	movwf	efgtoa@nmode& (0+255),b
  5216                           
  5217                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  5218  000B44  EFA6  F005         	goto	l4800
  5219  000B48                     l4798:
  5220                           
  5221                           ; BSR set to: 0
  5222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  5223  000B48  0E65               	movlw	101
  5224  000B4A  6F7E               	movwf	efgtoa@nmode& (0+255),b
  5225  000B4C                     l4800:
  5226                           
  5227                           ; BSR set to: 0
  5228                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  5229  000B4C  C07C  F074         	movff	efgtoa@p,efgtoa@m
  5230  000B50  C07D  F075         	movff	efgtoa@p+1,efgtoa@m+1
  5231  000B54                     
  5232                           ; BSR set to: 0
  5233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  5234  000B54  0E67               	movlw	103
  5235  000B56  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5236  000B58  A4D8               	btfss	status,2,c
  5237  000B5A  EFB1  F005         	goto	u5651
  5238  000B5E  EFB3  F005         	goto	u5650
  5239  000B62                     u5651:
  5240  000B62  EFC3  F005         	goto	l4808
  5241  000B66                     u5650:
  5242  000B66                     
  5243                           ; BSR set to: 0
  5244  000B66  0E66               	movlw	102
  5245  000B68  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5246  000B6A  A4D8               	btfss	status,2,c
  5247  000B6C  EFBA  F005         	goto	u5661
  5248  000B70  EFBC  F005         	goto	u5660
  5249  000B74                     u5661:
  5250  000B74  EFC5  F005         	goto	l4810
  5251  000B78                     u5660:
  5252  000B78                     
  5253                           ; BSR set to: 0
  5254  000B78  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5255  000B7A  EFC3  F005         	goto	u5670
  5256  000B7E  EFC1  F005         	goto	u5671
  5257  000B82                     u5671:
  5258  000B82  EFC5  F005         	goto	l4810
  5259  000B86                     u5670:
  5260  000B86                     l4808:
  5261                           
  5262                           ; BSR set to: 0
  5263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  5264  000B86  4B74               	infsnz	efgtoa@m& (0+255),f,b
  5265  000B88  2B75               	incf	(efgtoa@m+1)& (0+255),f,b
  5266  000B8A                     l4810:
  5267                           
  5268                           ; BSR set to: 0
  5269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  5270  000B8A  0E66               	movlw	102
  5271  000B8C  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5272  000B8E  A4D8               	btfss	status,2,c
  5273  000B90  EFCC  F005         	goto	u5681
  5274  000B94  EFCE  F005         	goto	u5680
  5275  000B98                     u5681:
  5276  000B98  EFEE  F005         	goto	l4820
  5277  000B9C                     u5680:
  5278  000B9C                     
  5279                           ; BSR set to: 0
  5280                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  5281  000B9C  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5282  000B9E  EFD5  F005         	goto	u5690
  5283  000BA2  EFD3  F005         	goto	u5691
  5284  000BA6                     u5691:
  5285  000BA6  EFE1  F005         	goto	l4816
  5286  000BAA                     u5690:
  5287  000BAA                     
  5288                           ; BSR set to: 0
  5289                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  5290  000BAA  0E00               	movlw	0
  5291  000BAC  6F94               	movwf	efgtoa@u& (0+255),b
  5292  000BAE  0E00               	movlw	0
  5293  000BB0  6F95               	movwf	(efgtoa@u+1)& (0+255),b
  5294  000BB2  0E80               	movlw	128
  5295  000BB4  6F96               	movwf	(efgtoa@u+2)& (0+255),b
  5296  000BB6  0E3F               	movlw	63
  5297  000BB8  6F97               	movwf	(efgtoa@u+3)& (0+255),b
  5298                           
  5299                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  5300  000BBA  0E00               	movlw	0
  5301  000BBC  6F91               	movwf	(efgtoa@e+1)& (0+255),b
  5302  000BBE  0E00               	movlw	0
  5303  000BC0  6F90               	movwf	efgtoa@e& (0+255),b
  5304  000BC2                     l4816:
  5305                           
  5306                           ; BSR set to: 0
  5307                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  5308  000BC2  0E67               	movlw	103
  5309  000BC4  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5310  000BC6  B4D8               	btfsc	status,2,c
  5311  000BC8  EFE8  F005         	goto	u5701
  5312  000BCC  EFEA  F005         	goto	u5700
  5313  000BD0                     u5701:
  5314  000BD0  EFEE  F005         	goto	l4820
  5315  000BD4                     u5700:
  5316  000BD4                     
  5317                           ; BSR set to: 0
  5318                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  5319  000BD4  5190               	movf	efgtoa@e& (0+255),w,b
  5320  000BD6  2774               	addwf	efgtoa@m& (0+255),f,b
  5321  000BD8  5191               	movf	(efgtoa@e+1)& (0+255),w,b
  5322  000BDA  2375               	addwfc	(efgtoa@m+1)& (0+255),f,b
  5323  000BDC                     l4820:
  5324                           
  5325                           ; BSR set to: 0
  5326                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  5327  000BDC  0E00               	movlw	0
  5328  000BDE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5329  000BE0  0E00               	movlw	0
  5330  000BE2  6F8A               	movwf	efgtoa@i& (0+255),b
  5331  000BE4                     
  5332                           ; BSR set to: 0
  5333                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  5334  000BE4  C08C  F082         	movff	efgtoa@g,efgtoa@h
  5335  000BE8  C08D  F083         	movff	efgtoa@g+1,efgtoa@h+1
  5336  000BEC  C08E  F084         	movff	efgtoa@g+2,efgtoa@h+2
  5337  000BF0  C08F  F085         	movff	efgtoa@g+3,efgtoa@h+3
  5338  000BF4                     
  5339                           ; BSR set to: 0
  5340                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  5341  000BF4  C094  F060         	movff	efgtoa@u,efgtoa@ou
  5342  000BF8  C095  F061         	movff	efgtoa@u+1,efgtoa@ou+1
  5343  000BFC  C096  F062         	movff	efgtoa@u+2,efgtoa@ou+2
  5344  000C00  C097  F063         	movff	efgtoa@u+3,efgtoa@ou+3
  5345                           
  5346                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  5347  000C04  EF7F  F006         	goto	l4834
  5348  000C08                     l4826:
  5349                           
  5350                           ; BSR set to: 0
  5351                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  5352  000C08  C082  F001         	movff	efgtoa@h,___fldiv@b
  5353  000C0C  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5354  000C10  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5355  000C14  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5356  000C18  C094  F005         	movff	efgtoa@u,___fldiv@a
  5357  000C1C  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5358  000C20  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5359  000C24  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5360  000C28  ECAE  F014         	call	___fldiv	;wreg free
  5361  000C2C  C001  F01A         	movff	?___fldiv,floorf@x
  5362  000C30  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5363  000C34  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5364  000C38  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5365  000C3C  ECED  F017         	call	_floorf	;wreg free
  5366  000C40  C01A  F086         	movff	?_floorf,efgtoa@l
  5367  000C44  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5368  000C48  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5369  000C4C  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5370                           
  5371                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  5372  000C50  C086  F001         	movff	efgtoa@l,___fltol@f1
  5373  000C54  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5374  000C58  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5375  000C5C  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5376  000C60  EC99  F01C         	call	___fltol	;wreg free
  5377  000C64  C001  F078         	movff	?___fltol,efgtoa@d
  5378  000C68  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5379  000C6C                     
  5380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  5381  000C6C  C082  F01A         	movff	efgtoa@h,___flsub@b
  5382  000C70  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5383  000C74  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5384  000C78  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5385  000C7C  C094  F005         	movff	efgtoa@u,___flmul@a
  5386  000C80  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5387  000C84  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5388  000C88  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5389  000C8C  C086  F001         	movff	efgtoa@l,___flmul@b
  5390  000C90  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5391  000C94  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5392  000C98  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5393  000C9C  EC99  F012         	call	___flmul	;wreg free
  5394  000CA0  C001  F01E         	movff	?___flmul,___flsub@a
  5395  000CA4  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5396  000CA8  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5397  000CAC  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5398  000CB0  ECF6  F022         	call	___flsub	;wreg free
  5399  000CB4  C01A  F082         	movff	?___flsub,efgtoa@h
  5400  000CB8  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5401  000CBC  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5402  000CC0  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5403  000CC4                     
  5404                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  5405  000CC4  C094  F001         	movff	efgtoa@u,___fldiv@b
  5406  000CC8  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5407  000CCC  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5408  000CD0  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5409  000CD4  0E00               	movlw	0
  5410  000CD6  6E05               	movwf	___fldiv@a^0,c
  5411  000CD8  0E00               	movlw	0
  5412  000CDA  6E06               	movwf	(___fldiv@a+1)^0,c
  5413  000CDC  0E20               	movlw	32
  5414  000CDE  6E07               	movwf	(___fldiv@a+2)^0,c
  5415  000CE0  0E41               	movlw	65
  5416  000CE2  6E08               	movwf	(___fldiv@a+3)^0,c
  5417  000CE4  ECAE  F014         	call	___fldiv	;wreg free
  5418  000CE8  C001  F094         	movff	?___fldiv,efgtoa@u
  5419  000CEC  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5420  000CF0  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5421  000CF4  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5422  000CF8                     
  5423                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  5424  000CF8  0100               	movlb	0	; () banked
  5425  000CFA  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5426  000CFC  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5427  000CFE                     l4834:
  5428                           
  5429                           ; BSR set to: 0
  5430                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  5431  000CFE  5174               	movf	efgtoa@m& (0+255),w,b
  5432  000D00  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5433  000D02  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5434  000D04  0A80               	xorlw	128
  5435  000D06  6E35               	movwf	??_efgtoa^0,c
  5436  000D08  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  5437  000D0A  0A80               	xorlw	128
  5438  000D0C  5835               	subwfb	??_efgtoa^0,w,c
  5439  000D0E  A0D8               	btfss	status,0,c
  5440  000D10  EF8C  F006         	goto	u5711
  5441  000D14  EF8E  F006         	goto	u5710
  5442  000D18                     u5711:
  5443  000D18  EF04  F006         	goto	l4826
  5444  000D1C                     u5710:
  5445  000D1C                     
  5446                           ; BSR set to: 0
  5447                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  5448  000D1C  C094  F001         	movff	efgtoa@u,___flmul@b
  5449  000D20  C095  F002         	movff	efgtoa@u+1,___flmul@b+1
  5450  000D24  C096  F003         	movff	efgtoa@u+2,___flmul@b+2
  5451  000D28  C097  F004         	movff	efgtoa@u+3,___flmul@b+3
  5452  000D2C  0E00               	movlw	0
  5453  000D2E  6E05               	movwf	___flmul@a^0,c
  5454  000D30  0E00               	movlw	0
  5455  000D32  6E06               	movwf	(___flmul@a+1)^0,c
  5456  000D34  0EA0               	movlw	160
  5457  000D36  6E07               	movwf	(___flmul@a+2)^0,c
  5458  000D38  0E40               	movlw	64
  5459  000D3A  6E08               	movwf	(___flmul@a+3)^0,c
  5460  000D3C  EC99  F012         	call	___flmul	;wreg free
  5461  000D40  C001  F086         	movff	?___flmul,efgtoa@l
  5462  000D44  C002  F087         	movff	?___flmul+1,efgtoa@l+1
  5463  000D48  C003  F088         	movff	?___flmul+2,efgtoa@l+2
  5464  000D4C  C004  F089         	movff	?___flmul+3,efgtoa@l+3
  5465  000D50                     
  5466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  5467  000D50  C082  F01A         	movff	efgtoa@h,___flge@ff1
  5468  000D54  C083  F01B         	movff	efgtoa@h+1,___flge@ff1+1
  5469  000D58  C084  F01C         	movff	efgtoa@h+2,___flge@ff1+2
  5470  000D5C  C085  F01D         	movff	efgtoa@h+3,___flge@ff1+3
  5471  000D60  C086  F01E         	movff	efgtoa@l,___flge@ff2
  5472  000D64  C087  F01F         	movff	efgtoa@l+1,___flge@ff2+1
  5473  000D68  C088  F020         	movff	efgtoa@l+2,___flge@ff2+2
  5474  000D6C  C089  F021         	movff	efgtoa@l+3,___flge@ff2+3
  5475  000D70  EC1C  F01D         	call	___flge	;wreg free
  5476  000D74  B0D8               	btfsc	status,0,c
  5477  000D76  EFBF  F006         	goto	u5721
  5478  000D7A  EFC1  F006         	goto	u5720
  5479  000D7E                     u5721:
  5480  000D7E  EFCC  F006         	goto	l4842
  5481  000D82                     u5720:
  5482  000D82                     
  5483                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  5484  000D82  0E00               	movlw	0
  5485  000D84  0100               	movlb	0	; () banked
  5486  000D86  6F86               	movwf	efgtoa@l& (0+255),b
  5487  000D88  0E00               	movlw	0
  5488  000D8A  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5489  000D8C  0E00               	movlw	0
  5490  000D8E  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5491  000D90  0E00               	movlw	0
  5492  000D92  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5493                           
  5494                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  5495  000D94  EFF5  F006         	goto	l4848
  5496  000D98                     l4842:
  5497                           
  5498                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  5499  000D98  C082  F001         	movff	efgtoa@h,___fleq@ff1
  5500  000D9C  C083  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  5501  000DA0  C084  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  5502  000DA4  C085  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  5503  000DA8  C086  F005         	movff	efgtoa@l,___fleq@ff2
  5504  000DAC  C087  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  5505  000DB0  C088  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  5506  000DB4  C089  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  5507  000DB8  EC72  F020         	call	___fleq	;wreg free
  5508  000DBC  A0D8               	btfss	status,0,c
  5509  000DBE  EFE3  F006         	goto	u5731
  5510  000DC2  EFE5  F006         	goto	u5730
  5511  000DC6                     u5731:
  5512  000DC6  EFF5  F006         	goto	l4848
  5513  000DCA                     u5730:
  5514  000DCA  0100               	movlb	0	; () banked
  5515  000DCC  B178               	btfsc	efgtoa@d& (0+255),0,b
  5516  000DCE  EFEB  F006         	goto	u5741
  5517  000DD2  EFED  F006         	goto	u5740
  5518  000DD6                     u5741:
  5519  000DD6  EFF5  F006         	goto	l4848
  5520  000DDA                     u5740:
  5521  000DDA                     
  5522                           ; BSR set to: 0
  5523                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  5524  000DDA  0E00               	movlw	0
  5525  000DDC  6F86               	movwf	efgtoa@l& (0+255),b
  5526  000DDE  0E00               	movlw	0
  5527  000DE0  6F87               	movwf	(efgtoa@l+1)& (0+255),b
  5528  000DE2  0E00               	movlw	0
  5529  000DE4  6F88               	movwf	(efgtoa@l+2)& (0+255),b
  5530  000DE6  0E00               	movlw	0
  5531  000DE8  6F89               	movwf	(efgtoa@l+3)& (0+255),b
  5532  000DEA                     l4848:
  5533                           
  5534                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  5535  000DEA  C08C  F001         	movff	efgtoa@g,___fladd@b
  5536  000DEE  C08D  F002         	movff	efgtoa@g+1,___fladd@b+1
  5537  000DF2  C08E  F003         	movff	efgtoa@g+2,___fladd@b+2
  5538  000DF6  C08F  F004         	movff	efgtoa@g+3,___fladd@b+3
  5539  000DFA  C086  F005         	movff	efgtoa@l,___fladd@a
  5540  000DFE  C087  F006         	movff	efgtoa@l+1,___fladd@a+1
  5541  000E02  C088  F007         	movff	efgtoa@l+2,___fladd@a+2
  5542  000E06  C089  F008         	movff	efgtoa@l+3,___fladd@a+3
  5543  000E0A  EC39  F010         	call	___fladd	;wreg free
  5544  000E0E  C001  F082         	movff	?___fladd,efgtoa@h
  5545  000E12  C002  F083         	movff	?___fladd+1,efgtoa@h+1
  5546  000E16  C003  F084         	movff	?___fladd+2,efgtoa@h+2
  5547  000E1A  C004  F085         	movff	?___fladd+3,efgtoa@h+3
  5548  000E1E                     
  5549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  5550  000E1E  C060  F094         	movff	efgtoa@ou,efgtoa@u
  5551  000E22  C061  F095         	movff	efgtoa@ou+1,efgtoa@u+1
  5552  000E26  C062  F096         	movff	efgtoa@ou+2,efgtoa@u+2
  5553  000E2A  C063  F097         	movff	efgtoa@ou+3,efgtoa@u+3
  5554  000E2E                     
  5555                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  5556  000E2E  0E65               	movlw	101
  5557  000E30  0100               	movlb	0	; () banked
  5558  000E32  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5559  000E34  B4D8               	btfsc	status,2,c
  5560  000E36  EF1F  F007         	goto	u5751
  5561  000E3A  EF21  F007         	goto	u5750
  5562  000E3E                     u5751:
  5563  000E3E  EF27  F007         	goto	l4856
  5564  000E42                     u5750:
  5565  000E42                     
  5566                           ; BSR set to: 0
  5567  000E42  C090  F076         	movff	efgtoa@e,efgtoa@ne
  5568  000E46  C091  F077         	movff	efgtoa@e+1,efgtoa@ne+1
  5569  000E4A  EF2B  F007         	goto	l1306
  5570  000E4E                     l4856:
  5571                           
  5572                           ; BSR set to: 0
  5573  000E4E  0E00               	movlw	0
  5574  000E50  6F77               	movwf	(efgtoa@ne+1)& (0+255),b
  5575  000E52  0E00               	movlw	0
  5576  000E54  6F76               	movwf	efgtoa@ne& (0+255),b
  5577  000E56                     l1306:
  5578                           
  5579                           ; BSR set to: 0
  5580                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  5581  000E56  0E00               	movlw	0
  5582  000E58  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5583  000E5A  0E00               	movlw	0
  5584  000E5C  6F72               	movwf	efgtoa@pp& (0+255),b
  5585                           
  5586                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  5587  000E5E  0E00               	movlw	0
  5588  000E60  6F71               	movwf	(efgtoa@t+1)& (0+255),b
  5589  000E62  0E00               	movlw	0
  5590  000E64  6F70               	movwf	efgtoa@t& (0+255),b
  5591                           
  5592                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  5593  000E66  0E00               	movlw	0
  5594  000E68  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5595  000E6A  0E00               	movlw	0
  5596  000E6C  6F8A               	movwf	efgtoa@i& (0+255),b
  5597                           
  5598                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5599  000E6E  EF26  F008         	goto	l4906
  5600  000E72                     l4858:
  5601                           
  5602                           ; BSR set to: 0
  5603                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  5604  000E72  C082  F001         	movff	efgtoa@h,___fldiv@b
  5605  000E76  C083  F002         	movff	efgtoa@h+1,___fldiv@b+1
  5606  000E7A  C084  F003         	movff	efgtoa@h+2,___fldiv@b+2
  5607  000E7E  C085  F004         	movff	efgtoa@h+3,___fldiv@b+3
  5608  000E82  C094  F005         	movff	efgtoa@u,___fldiv@a
  5609  000E86  C095  F006         	movff	efgtoa@u+1,___fldiv@a+1
  5610  000E8A  C096  F007         	movff	efgtoa@u+2,___fldiv@a+2
  5611  000E8E  C097  F008         	movff	efgtoa@u+3,___fldiv@a+3
  5612  000E92  ECAE  F014         	call	___fldiv	;wreg free
  5613  000E96  C001  F01A         	movff	?___fldiv,floorf@x
  5614  000E9A  C002  F01B         	movff	?___fldiv+1,floorf@x+1
  5615  000E9E  C003  F01C         	movff	?___fldiv+2,floorf@x+2
  5616  000EA2  C004  F01D         	movff	?___fldiv+3,floorf@x+3
  5617  000EA6  ECED  F017         	call	_floorf	;wreg free
  5618  000EAA  C01A  F086         	movff	?_floorf,efgtoa@l
  5619  000EAE  C01B  F087         	movff	?_floorf+1,efgtoa@l+1
  5620  000EB2  C01C  F088         	movff	?_floorf+2,efgtoa@l+2
  5621  000EB6  C01D  F089         	movff	?_floorf+3,efgtoa@l+3
  5622                           
  5623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  5624  000EBA  C086  F001         	movff	efgtoa@l,___fltol@f1
  5625  000EBE  C087  F002         	movff	efgtoa@l+1,___fltol@f1+1
  5626  000EC2  C088  F003         	movff	efgtoa@l+2,___fltol@f1+2
  5627  000EC6  C089  F004         	movff	efgtoa@l+3,___fltol@f1+3
  5628  000ECA  EC99  F01C         	call	___fltol	;wreg free
  5629  000ECE  C001  F078         	movff	?___fltol,efgtoa@d
  5630  000ED2  C002  F079         	movff	?___fltol+1,efgtoa@d+1
  5631  000ED6                     
  5632                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  5633  000ED6  0100               	movlb	0	; () banked
  5634  000ED8  B9F1               	btfsc	_flags& (0+255),4,b
  5635  000EDA  EF71  F007         	goto	u5761
  5636  000EDE  EF73  F007         	goto	u5760
  5637  000EE2                     u5761:
  5638  000EE2  EF90  F007         	goto	l4870
  5639  000EE6                     u5760:
  5640  000EE6                     
  5641                           ; BSR set to: 0
  5642  000EE6  5178               	movf	efgtoa@d& (0+255),w,b
  5643  000EE8  1179               	iorwf	(efgtoa@d+1)& (0+255),w,b
  5644  000EEA  A4D8               	btfss	status,2,c
  5645  000EEC  EF7A  F007         	goto	u5771
  5646  000EF0  EF7C  F007         	goto	u5770
  5647  000EF4                     u5771:
  5648  000EF4  EF90  F007         	goto	l4870
  5649  000EF8                     u5770:
  5650  000EF8                     
  5651                           ; BSR set to: 0
  5652  000EF8  0E67               	movlw	103
  5653  000EFA  1981               	xorwf	efgtoa@mode& (0+255),w,b
  5654  000EFC  A4D8               	btfss	status,2,c
  5655  000EFE  EF83  F007         	goto	u5781
  5656  000F02  EF85  F007         	goto	u5780
  5657  000F06                     u5781:
  5658  000F06  EF90  F007         	goto	l4870
  5659  000F0A                     u5780:
  5660  000F0A                     
  5661                           ; BSR set to: 0
  5662  000F0A  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5663  000F0C  EF8C  F007         	goto	u5790
  5664  000F10  EF8A  F007         	goto	u5791
  5665  000F14                     u5791:
  5666  000F14  EF90  F007         	goto	l4870
  5667  000F18                     u5790:
  5668  000F18                     
  5669                           ; BSR set to: 0
  5670                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  5671  000F18  4B70               	infsnz	efgtoa@t& (0+255),f,b
  5672  000F1A  2B71               	incf	(efgtoa@t+1)& (0+255),f,b
  5673                           
  5674                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  5675  000F1C  EFDA  F007         	goto	l4898
  5676  000F20                     l4870:
  5677                           
  5678                           ; BSR set to: 0
  5679                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  5680  000F20  5172               	movf	efgtoa@pp& (0+255),w,b
  5681  000F22  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5682  000F24  A4D8               	btfss	status,2,c
  5683  000F26  EF97  F007         	goto	u5801
  5684  000F2A  EF99  F007         	goto	u5800
  5685  000F2E                     u5801:
  5686  000F2E  EFC3  F007         	goto	l4890
  5687  000F32                     u5800:
  5688  000F32                     
  5689                           ; BSR set to: 0
  5690  000F32  BF77               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  5691  000F34  EFA0  F007         	goto	u5810
  5692  000F38  EF9E  F007         	goto	u5811
  5693  000F3C                     u5811:
  5694  000F3C  EFC3  F007         	goto	l4890
  5695  000F40                     u5810:
  5696  000F40                     
  5697                           ; BSR set to: 0
  5698                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  5699  000F40  0EAB               	movlw	low _dbuf
  5700  000F42  2592               	addwf	efgtoa@n& (0+255),w,b
  5701  000F44  6ED9               	movwf	fsr2l,c
  5702  000F46  0E01               	movlw	high _dbuf
  5703  000F48  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5704  000F4A  6EDA               	movwf	fsr2h,c
  5705  000F4C  0E2E               	movlw	46
  5706  000F4E  6EDF               	movwf	indf2,c
  5707  000F50                     
  5708                           ; BSR set to: 0
  5709  000F50  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5710  000F52  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5711  000F54                     
  5712                           ; BSR set to: 0
  5713                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  5714  000F54  077F               	decf	efgtoa@w& (0+255),f,b
  5715  000F56  A0D8               	btfss	status,0,c
  5716  000F58  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5717  000F5A                     
  5718                           ; BSR set to: 0
  5719                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  5720  000F5A  0E00               	movlw	0
  5721  000F5C  6F73               	movwf	(efgtoa@pp+1)& (0+255),b
  5722  000F5E  0E01               	movlw	1
  5723  000F60  6F72               	movwf	efgtoa@pp& (0+255),b
  5724  000F62  EFC3  F007         	goto	l4890
  5725  000F66                     l4882:
  5726                           
  5727                           ; BSR set to: 0
  5728                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  5729  000F66  0EAB               	movlw	low _dbuf
  5730  000F68  2592               	addwf	efgtoa@n& (0+255),w,b
  5731  000F6A  6ED9               	movwf	fsr2l,c
  5732  000F6C  0E01               	movlw	high _dbuf
  5733  000F6E  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5734  000F70  6EDA               	movwf	fsr2h,c
  5735  000F72  0E30               	movlw	48
  5736  000F74  6EDF               	movwf	indf2,c
  5737  000F76                     
  5738                           ; BSR set to: 0
  5739  000F76  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5740  000F78  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5741  000F7A                     
  5742                           ; BSR set to: 0
  5743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  5744  000F7A  077F               	decf	efgtoa@w& (0+255),f,b
  5745  000F7C  A0D8               	btfss	status,0,c
  5746  000F7E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5747  000F80                     
  5748                           ; BSR set to: 0
  5749                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  5750  000F80  0770               	decf	efgtoa@t& (0+255),f,b
  5751  000F82  A0D8               	btfss	status,0,c
  5752  000F84  0771               	decf	(efgtoa@t+1)& (0+255),f,b
  5753  000F86                     l4890:
  5754                           
  5755                           ; BSR set to: 0
  5756                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  5757  000F86  5170               	movf	efgtoa@t& (0+255),w,b
  5758  000F88  1171               	iorwf	(efgtoa@t+1)& (0+255),w,b
  5759  000F8A  A4D8               	btfss	status,2,c
  5760  000F8C  EFCA  F007         	goto	u5821
  5761  000F90  EFCC  F007         	goto	u5820
  5762  000F94                     u5821:
  5763  000F94  EFB3  F007         	goto	l4882
  5764  000F98                     u5820:
  5765  000F98                     
  5766                           ; BSR set to: 0
  5767                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  5768  000F98  0EAB               	movlw	low _dbuf
  5769  000F9A  2592               	addwf	efgtoa@n& (0+255),w,b
  5770  000F9C  6ED9               	movwf	fsr2l,c
  5771  000F9E  0E01               	movlw	high _dbuf
  5772  000FA0  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5773  000FA2  6EDA               	movwf	fsr2h,c
  5774  000FA4  5178               	movf	efgtoa@d& (0+255),w,b
  5775  000FA6  0F30               	addlw	48
  5776  000FA8  6EDF               	movwf	indf2,c
  5777  000FAA                     
  5778                           ; BSR set to: 0
  5779  000FAA  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5780  000FAC  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5781  000FAE                     
  5782                           ; BSR set to: 0
  5783                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  5784  000FAE  077F               	decf	efgtoa@w& (0+255),f,b
  5785  000FB0  A0D8               	btfss	status,0,c
  5786  000FB2  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  5787  000FB4                     l4898:
  5788                           
  5789                           ; BSR set to: 0
  5790                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  5791  000FB4  C082  F01A         	movff	efgtoa@h,___flsub@b
  5792  000FB8  C083  F01B         	movff	efgtoa@h+1,___flsub@b+1
  5793  000FBC  C084  F01C         	movff	efgtoa@h+2,___flsub@b+2
  5794  000FC0  C085  F01D         	movff	efgtoa@h+3,___flsub@b+3
  5795  000FC4  C094  F005         	movff	efgtoa@u,___flmul@a
  5796  000FC8  C095  F006         	movff	efgtoa@u+1,___flmul@a+1
  5797  000FCC  C096  F007         	movff	efgtoa@u+2,___flmul@a+2
  5798  000FD0  C097  F008         	movff	efgtoa@u+3,___flmul@a+3
  5799  000FD4  C086  F001         	movff	efgtoa@l,___flmul@b
  5800  000FD8  C087  F002         	movff	efgtoa@l+1,___flmul@b+1
  5801  000FDC  C088  F003         	movff	efgtoa@l+2,___flmul@b+2
  5802  000FE0  C089  F004         	movff	efgtoa@l+3,___flmul@b+3
  5803  000FE4  EC99  F012         	call	___flmul	;wreg free
  5804  000FE8  C001  F01E         	movff	?___flmul,___flsub@a
  5805  000FEC  C002  F01F         	movff	?___flmul+1,___flsub@a+1
  5806  000FF0  C003  F020         	movff	?___flmul+2,___flsub@a+2
  5807  000FF4  C004  F021         	movff	?___flmul+3,___flsub@a+3
  5808  000FF8  ECF6  F022         	call	___flsub	;wreg free
  5809  000FFC  C01A  F082         	movff	?___flsub,efgtoa@h
  5810  001000  C01B  F083         	movff	?___flsub+1,efgtoa@h+1
  5811  001004  C01C  F084         	movff	?___flsub+2,efgtoa@h+2
  5812  001008  C01D  F085         	movff	?___flsub+3,efgtoa@h+3
  5813  00100C                     
  5814                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  5815  00100C  C094  F001         	movff	efgtoa@u,___fldiv@b
  5816  001010  C095  F002         	movff	efgtoa@u+1,___fldiv@b+1
  5817  001014  C096  F003         	movff	efgtoa@u+2,___fldiv@b+2
  5818  001018  C097  F004         	movff	efgtoa@u+3,___fldiv@b+3
  5819  00101C  0E00               	movlw	0
  5820  00101E  6E05               	movwf	___fldiv@a^0,c
  5821  001020  0E00               	movlw	0
  5822  001022  6E06               	movwf	(___fldiv@a+1)^0,c
  5823  001024  0E20               	movlw	32
  5824  001026  6E07               	movwf	(___fldiv@a+2)^0,c
  5825  001028  0E41               	movlw	65
  5826  00102A  6E08               	movwf	(___fldiv@a+3)^0,c
  5827  00102C  ECAE  F014         	call	___fldiv	;wreg free
  5828  001030  C001  F094         	movff	?___fldiv,efgtoa@u
  5829  001034  C002  F095         	movff	?___fldiv+1,efgtoa@u+1
  5830  001038  C003  F096         	movff	?___fldiv+2,efgtoa@u+2
  5831  00103C  C004  F097         	movff	?___fldiv+3,efgtoa@u+3
  5832  001040                     
  5833                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  5834  001040  0100               	movlb	0	; () banked
  5835  001042  0776               	decf	efgtoa@ne& (0+255),f,b
  5836  001044  A0D8               	btfss	status,0,c
  5837  001046  0777               	decf	(efgtoa@ne+1)& (0+255),f,b
  5838  001048                     
  5839                           ; BSR set to: 0
  5840                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  5841  001048  4B8A               	infsnz	efgtoa@i& (0+255),f,b
  5842  00104A  2B8B               	incf	(efgtoa@i+1)& (0+255),f,b
  5843  00104C                     l4906:
  5844                           
  5845                           ; BSR set to: 0
  5846                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  5847  00104C  5174               	movf	efgtoa@m& (0+255),w,b
  5848  00104E  5D8A               	subwf	efgtoa@i& (0+255),w,b
  5849  001050  518B               	movf	(efgtoa@i+1)& (0+255),w,b
  5850  001052  0A80               	xorlw	128
  5851  001054  6E35               	movwf	??_efgtoa^0,c
  5852  001056  5175               	movf	(efgtoa@m+1)& (0+255),w,b
  5853  001058  0A80               	xorlw	128
  5854  00105A  5835               	subwfb	??_efgtoa^0,w,c
  5855  00105C  B0D8               	btfsc	status,0,c
  5856  00105E  EF33  F008         	goto	u5831
  5857  001062  EF35  F008         	goto	u5830
  5858  001066                     u5831:
  5859  001066  EF43  F008         	goto	l4910
  5860  00106A                     u5830:
  5861  00106A                     
  5862                           ; BSR set to: 0
  5863  00106A  BF93               	btfsc	(efgtoa@n+1)& (0+255),7,b
  5864  00106C  EF41  F008         	goto	u5841
  5865  001070  5193               	movf	(efgtoa@n+1)& (0+255),w,b
  5866  001072  E109               	bnz	u5840
  5867  001074  0E4B               	movlw	75
  5868  001076  5D92               	subwf	efgtoa@n& (0+255),w,b
  5869  001078  A0D8               	btfss	status,0,c
  5870  00107A  EF41  F008         	goto	u5841
  5871  00107E  EF43  F008         	goto	u5840
  5872  001082                     u5841:
  5873  001082  EF39  F007         	goto	l4858
  5874  001086                     u5840:
  5875  001086                     l4910:
  5876                           
  5877                           ; BSR set to: 0
  5878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  5879  001086  5172               	movf	efgtoa@pp& (0+255),w,b
  5880  001088  1173               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  5881  00108A  A4D8               	btfss	status,2,c
  5882  00108C  EF4A  F008         	goto	u5851
  5883  001090  EF4C  F008         	goto	u5850
  5884  001094                     u5851:
  5885  001094  EF5D  F008         	goto	l4918
  5886  001098                     u5850:
  5887  001098                     
  5888                           ; BSR set to: 0
  5889  001098  A9F1               	btfss	_flags& (0+255),4,b
  5890  00109A  EF51  F008         	goto	u5861
  5891  00109E  EF53  F008         	goto	u5860
  5892  0010A2                     u5861:
  5893  0010A2  EF5D  F008         	goto	l4918
  5894  0010A6                     u5860:
  5895  0010A6                     
  5896                           ; BSR set to: 0
  5897                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  5898  0010A6  0EAB               	movlw	low _dbuf
  5899  0010A8  2592               	addwf	efgtoa@n& (0+255),w,b
  5900  0010AA  6ED9               	movwf	fsr2l,c
  5901  0010AC  0E01               	movlw	high _dbuf
  5902  0010AE  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5903  0010B0  6EDA               	movwf	fsr2h,c
  5904  0010B2  0E2E               	movlw	46
  5905  0010B4  6EDF               	movwf	indf2,c
  5906  0010B6                     
  5907                           ; BSR set to: 0
  5908  0010B6  4B92               	infsnz	efgtoa@n& (0+255),f,b
  5909  0010B8  2B93               	incf	(efgtoa@n+1)& (0+255),f,b
  5910  0010BA                     l4918:
  5911                           
  5912                           ; BSR set to: 0
  5913                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  5914  0010BA  0EAB               	movlw	low _dbuf
  5915  0010BC  2592               	addwf	efgtoa@n& (0+255),w,b
  5916  0010BE  6ED9               	movwf	fsr2l,c
  5917  0010C0  0E01               	movlw	high _dbuf
  5918  0010C2  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  5919  0010C4  6EDA               	movwf	fsr2h,c
  5920  0010C6  0E00               	movlw	0
  5921  0010C8  6EDF               	movwf	indf2,c
  5922  0010CA                     
  5923                           ; BSR set to: 0
  5924                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  5925  0010CA  0E65               	movlw	101
  5926  0010CC  197E               	xorwf	efgtoa@nmode& (0+255),w,b
  5927  0010CE  A4D8               	btfss	status,2,c
  5928  0010D0  EF6C  F008         	goto	u5871
  5929  0010D4  EF6E  F008         	goto	u5870
  5930  0010D8                     u5871:
  5931  0010D8  EF1C  F004         	goto	l4730
  5932  0010DC                     u5870:
  5933  0010DC                     
  5934                           ; BSR set to: 0
  5935                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  5936  0010DC  0E00               	movlw	0
  5937  0010DE  6F8B               	movwf	(efgtoa@i+1)& (0+255),b
  5938  0010E0  0E4F               	movlw	79
  5939  0010E2  6F8A               	movwf	efgtoa@i& (0+255),b
  5940  0010E4                     
  5941                           ; BSR set to: 0
  5942                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  5943  0010E4  0EAB               	movlw	low _dbuf
  5944  0010E6  258A               	addwf	efgtoa@i& (0+255),w,b
  5945  0010E8  6ED9               	movwf	fsr2l,c
  5946  0010EA  0E01               	movlw	high _dbuf
  5947  0010EC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  5948  0010EE  6EDA               	movwf	fsr2h,c
  5949  0010F0  0E00               	movlw	0
  5950  0010F2  6EDF               	movwf	indf2,c
  5951  0010F4                     
  5952                           ; BSR set to: 0
  5953                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  5954  0010F4  0E00               	movlw	0
  5955  0010F6  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5956  0010F8  0E00               	movlw	0
  5957  0010FA  6F7A               	movwf	efgtoa@sign& (0+255),b
  5958  0010FC                     
  5959                           ; BSR set to: 0
  5960                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  5961  0010FC  BF91               	btfsc	(efgtoa@e+1)& (0+255),7,b
  5962  0010FE  EF85  F008         	goto	u5880
  5963  001102  EF83  F008         	goto	u5881
  5964  001106                     u5881:
  5965  001106  EF8D  F008         	goto	l4934
  5966  00110A                     u5880:
  5967  00110A                     
  5968                           ; BSR set to: 0
  5969                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  5970  00110A  0E00               	movlw	0
  5971  00110C  6F7B               	movwf	(efgtoa@sign+1)& (0+255),b
  5972  00110E  0E01               	movlw	1
  5973  001110  6F7A               	movwf	efgtoa@sign& (0+255),b
  5974  001112                     
  5975                           ; BSR set to: 0
  5976                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  5977  001112  6D90               	negf	efgtoa@e& (0+255),b
  5978  001114  1F91               	comf	(efgtoa@e+1)& (0+255),f,b
  5979  001116  B0D8               	btfsc	status,0,c
  5980  001118  2B91               	incf	(efgtoa@e+1)& (0+255),f,b
  5981  00111A                     l4934:
  5982                           
  5983                           ; BSR set to: 0
  5984                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  5985  00111A  0E00               	movlw	0
  5986  00111C  6F7D               	movwf	(efgtoa@p+1)& (0+255),b
  5987  00111E  0E02               	movlw	2
  5988  001120  6F7C               	movwf	efgtoa@p& (0+255),b
  5989                           
  5990                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  5991  001122  EFBE  F008         	goto	l4946
  5992  001126                     l4936:
  5993                           
  5994                           ; BSR set to: 0
  5995                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  5996  001126  078A               	decf	efgtoa@i& (0+255),f,b
  5997  001128  A0D8               	btfss	status,0,c
  5998  00112A  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  5999  00112C                     
  6000                           ; BSR set to: 0
  6001                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  6002  00112C  0EAB               	movlw	low _dbuf
  6003  00112E  258A               	addwf	efgtoa@i& (0+255),w,b
  6004  001130  6ED9               	movwf	fsr2l,c
  6005  001132  0E01               	movlw	high _dbuf
  6006  001134  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6007  001136  6EDA               	movwf	fsr2h,c
  6008  001138  C090  F001         	movff	efgtoa@e,___awmod@dividend
  6009  00113C  C091  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  6010  001140  0E00               	movlw	0
  6011  001142  6E04               	movwf	(___awmod@divisor+1)^0,c
  6012  001144  0E0A               	movlw	10
  6013  001146  6E03               	movwf	___awmod@divisor^0,c
  6014  001148  EC1A  F020         	call	___awmod	;wreg free
  6015  00114C  5001               	movf	?___awmod^0,w,c
  6016  00114E  0F30               	addlw	48
  6017  001150  6EDF               	movwf	indf2,c
  6018  001152                     
  6019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  6020  001152  C090  F001         	movff	efgtoa@e,___awdiv@dividend
  6021  001156  C091  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  6022  00115A  0E00               	movlw	0
  6023  00115C  6E04               	movwf	(___awdiv@divisor+1)^0,c
  6024  00115E  0E0A               	movlw	10
  6025  001160  6E03               	movwf	___awdiv@divisor^0,c
  6026  001162  ECB8  F01F         	call	___awdiv	;wreg free
  6027  001166  C001  F090         	movff	?___awdiv,efgtoa@e
  6028  00116A  C002  F091         	movff	?___awdiv+1,efgtoa@e+1
  6029  00116E                     
  6030                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  6031  00116E  0100               	movlb	0	; () banked
  6032  001170  077C               	decf	efgtoa@p& (0+255),f,b
  6033  001172  A0D8               	btfss	status,0,c
  6034  001174  077D               	decf	(efgtoa@p+1)& (0+255),f,b
  6035  001176                     
  6036                           ; BSR set to: 0
  6037                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  6038  001176  077F               	decf	efgtoa@w& (0+255),f,b
  6039  001178  A0D8               	btfss	status,0,c
  6040  00117A  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6041  00117C                     l4946:
  6042                           
  6043                           ; BSR set to: 0
  6044                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  6045  00117C  5190               	movf	efgtoa@e& (0+255),w,b
  6046  00117E  1191               	iorwf	(efgtoa@e+1)& (0+255),w,b
  6047  001180  A4D8               	btfss	status,2,c
  6048  001182  EFC5  F008         	goto	u5891
  6049  001186  EFC7  F008         	goto	u5890
  6050  00118A                     u5891:
  6051  00118A  EF93  F008         	goto	l4936
  6052  00118E                     u5890:
  6053  00118E                     
  6054                           ; BSR set to: 0
  6055  00118E  BF7D               	btfsc	(efgtoa@p+1)& (0+255),7,b
  6056  001190  EFD4  F008         	goto	u5900
  6057  001194  517D               	movf	(efgtoa@p+1)& (0+255),w,b
  6058  001196  E106               	bnz	u5901
  6059  001198  057C               	decf	efgtoa@p& (0+255),w,b
  6060  00119A  B0D8               	btfsc	status,0,c
  6061  00119C  EFD2  F008         	goto	u5901
  6062  0011A0  EFD4  F008         	goto	u5900
  6063  0011A4                     u5901:
  6064  0011A4  EF93  F008         	goto	l4936
  6065  0011A8                     u5900:
  6066  0011A8                     
  6067                           ; BSR set to: 0
  6068                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  6069  0011A8  078A               	decf	efgtoa@i& (0+255),f,b
  6070  0011AA  A0D8               	btfss	status,0,c
  6071  0011AC  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6072  0011AE                     
  6073                           ; BSR set to: 0
  6074                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  6075  0011AE  517A               	movf	efgtoa@sign& (0+255),w,b
  6076  0011B0  117B               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  6077  0011B2  A4D8               	btfss	status,2,c
  6078  0011B4  EFDE  F008         	goto	u5911
  6079  0011B8  EFE0  F008         	goto	u5910
  6080  0011BC                     u5911:
  6081  0011BC  EFE6  F008         	goto	l4956
  6082  0011C0                     u5910:
  6083  0011C0                     
  6084                           ; BSR set to: 0
  6085  0011C0  0E00               	movlw	0
  6086  0011C2  6F6B               	movwf	(_efgtoa$2875+1)& (0+255),b
  6087  0011C4  0E2B               	movlw	43
  6088  0011C6  6F6A               	movwf	_efgtoa$2875& (0+255),b
  6089  0011C8  EFEA  F008         	goto	l4958
  6090  0011CC                     l4956:
  6091                           
  6092                           ; BSR set to: 0
  6093  0011CC  0E00               	movlw	0
  6094  0011CE  6F6B               	movwf	(_efgtoa$2875+1)& (0+255),b
  6095  0011D0  0E2D               	movlw	45
  6096  0011D2  6F6A               	movwf	_efgtoa$2875& (0+255),b
  6097  0011D4                     l4958:
  6098                           
  6099                           ; BSR set to: 0
  6100  0011D4  0EAB               	movlw	low _dbuf
  6101  0011D6  258A               	addwf	efgtoa@i& (0+255),w,b
  6102  0011D8  6ED9               	movwf	fsr2l,c
  6103  0011DA  0E01               	movlw	high _dbuf
  6104  0011DC  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6105  0011DE  6EDA               	movwf	fsr2h,c
  6106  0011E0  C06A  FFDF         	movff	_efgtoa$2875,indf2
  6107  0011E4                     
  6108                           ; BSR set to: 0
  6109                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  6110  0011E4  077F               	decf	efgtoa@w& (0+255),f,b
  6111  0011E6  A0D8               	btfss	status,0,c
  6112  0011E8  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6113  0011EA                     
  6114                           ; BSR set to: 0
  6115                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  6116  0011EA  078A               	decf	efgtoa@i& (0+255),f,b
  6117  0011EC  A0D8               	btfss	status,0,c
  6118  0011EE  078B               	decf	(efgtoa@i+1)& (0+255),f,b
  6119  0011F0                     
  6120                           ; BSR set to: 0
  6121  0011F0  0EBF               	movlw	191
  6122  0011F2  6E35               	movwf	??_efgtoa^0,c
  6123  0011F4  0EFF               	movlw	255
  6124  0011F6  6E36               	movwf	(??_efgtoa+1)^0,c
  6125  0011F8  5034               	movf	efgtoa@c^0,w,c
  6126  0011FA  6E37               	movwf	(??_efgtoa+2)^0,c
  6127  0011FC  6A38               	clrf	(??_efgtoa+3)^0,c
  6128  0011FE  5035               	movf	??_efgtoa^0,w,c
  6129  001200  2637               	addwf	(??_efgtoa+2)^0,f,c
  6130  001202  5036               	movf	(??_efgtoa+1)^0,w,c
  6131  001204  2238               	addwfc	(??_efgtoa+3)^0,f,c
  6132  001206  5038               	movf	(??_efgtoa+3)^0,w,c
  6133  001208  E10A               	bnz	u5920
  6134  00120A  0E1A               	movlw	26
  6135  00120C  5C37               	subwf	(??_efgtoa+2)^0,w,c
  6136  00120E  A0D8               	btfss	status,0,c
  6137  001210  EF0C  F009         	goto	u5921
  6138  001214  EF0F  F009         	goto	u5920
  6139  001218                     u5921:
  6140  001218  0E01               	movlw	1
  6141  00121A  EF10  F009         	goto	u5930
  6142  00121E                     u5920:
  6143  00121E  0E00               	movlw	0
  6144  001220                     u5930:
  6145  001220  6F6E               	movwf	_efgtoa$2877& (0+255),b
  6146  001222  6B6F               	clrf	(_efgtoa$2877+1)& (0+255),b
  6147  001224                     
  6148                           ; BSR set to: 0
  6149  001224  516E               	movf	_efgtoa$2877& (0+255),w,b
  6150  001226  116F               	iorwf	(_efgtoa$2877+1)& (0+255),w,b
  6151  001228  A4D8               	btfss	status,2,c
  6152  00122A  EF19  F009         	goto	u5941
  6153  00122E  EF1B  F009         	goto	u5940
  6154  001232                     u5941:
  6155  001232  EF21  F009         	goto	l4972
  6156  001236                     u5940:
  6157  001236                     
  6158                           ; BSR set to: 0
  6159  001236  0E00               	movlw	0
  6160  001238  6F6D               	movwf	(_efgtoa$2876+1)& (0+255),b
  6161  00123A  0E65               	movlw	101
  6162  00123C  6F6C               	movwf	_efgtoa$2876& (0+255),b
  6163  00123E  EF25  F009         	goto	l4974
  6164  001242                     l4972:
  6165                           
  6166                           ; BSR set to: 0
  6167  001242  0E00               	movlw	0
  6168  001244  6F6D               	movwf	(_efgtoa$2876+1)& (0+255),b
  6169  001246  0E45               	movlw	69
  6170  001248  6F6C               	movwf	_efgtoa$2876& (0+255),b
  6171  00124A                     l4974:
  6172                           
  6173                           ; BSR set to: 0
  6174  00124A  0EAB               	movlw	low _dbuf
  6175  00124C  258A               	addwf	efgtoa@i& (0+255),w,b
  6176  00124E  6ED9               	movwf	fsr2l,c
  6177  001250  0E01               	movlw	high _dbuf
  6178  001252  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6179  001254  6EDA               	movwf	fsr2h,c
  6180  001256  C06C  FFDF         	movff	_efgtoa$2876,indf2
  6181  00125A                     
  6182                           ; BSR set to: 0
  6183                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  6184  00125A  077F               	decf	efgtoa@w& (0+255),f,b
  6185  00125C  A0D8               	btfss	status,0,c
  6186  00125E  0780               	decf	(efgtoa@w+1)& (0+255),f,b
  6187  001260                     
  6188                           ; BSR set to: 0
  6189                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  6190  001260  0EAB               	movlw	low _dbuf
  6191  001262  2592               	addwf	efgtoa@n& (0+255),w,b
  6192  001264  6E01               	movwf	strcpy@dest^0,c
  6193  001266  0E01               	movlw	high _dbuf
  6194  001268  2193               	addwfc	(efgtoa@n+1)& (0+255),w,b
  6195  00126A  6E02               	movwf	(strcpy@dest+1)^0,c
  6196  00126C  0EAB               	movlw	low _dbuf
  6197  00126E  258A               	addwf	efgtoa@i& (0+255),w,b
  6198  001270  6E03               	movwf	strcpy@src^0,c
  6199  001272  0E01               	movlw	high _dbuf
  6200  001274  218B               	addwfc	(efgtoa@i+1)& (0+255),w,b
  6201  001276  6E04               	movwf	(strcpy@src+1)^0,c
  6202  001278  EC49  F022         	call	_strcpy	;wreg free
  6203  00127C  EF1C  F004         	goto	l4730
  6204  001280                     l1262:
  6205  001280  0012               	return		;funcret
  6206  001282                     __end_of_efgtoa:
  6207                           	callstack 0
  6208                           
  6209 ;; *************** function _tolower *****************
  6210 ;; Defined at:
  6211 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  6212 ;; Parameters:    Size  Location     Type
  6213 ;;  c               2    6[COMRAM] int 
  6214 ;; Auto vars:     Size  Location     Type
  6215 ;;		None
  6216 ;; Return value:  Size  Location     Type
  6217 ;;                  2    6[COMRAM] int 
  6218 ;; Registers used:
  6219 ;;		wreg, status,2, status,0
  6220 ;; Tracked objects:
  6221 ;;		On entry : 0/0
  6222 ;;		On exit  : 0/0
  6223 ;;		Unchanged: 0/0
  6224 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6225 ;;      Params:         2       0       0       0       0       0       0
  6226 ;;      Locals:         2       0       0       0       0       0       0
  6227 ;;      Temps:          4       0       0       0       0       0       0
  6228 ;;      Totals:         8       0       0       0       0       0       0
  6229 ;;Total ram usage:        8 bytes
  6230 ;; Hardware stack levels used:    1
  6231 ;; Hardware stack levels required when called:    2
  6232 ;; This function calls:
  6233 ;;		_isupper
  6234 ;; This function is called by:
  6235 ;;		_efgtoa
  6236 ;;		_vfpfcnvrt
  6237 ;; This function uses a non-reentrant model
  6238 ;;
  6239                           
  6240                           	psect	text12
  6241  004432                     __ptext12:
  6242                           	callstack 0
  6243  004432                     _tolower:
  6244                           	callstack 23
  6245  004432  0EBF               	movlw	191
  6246  004434  6E09               	movwf	??_tolower^0,c
  6247  004436  0EFF               	movlw	255
  6248  004438  6E0A               	movwf	(??_tolower+1)^0,c
  6249  00443A  C007  F00B         	movff	tolower@c,??_tolower+2
  6250  00443E  C008  F00C         	movff	tolower@c+1,??_tolower+3
  6251  004442  5009               	movf	??_tolower^0,w,c
  6252  004444  260B               	addwf	(??_tolower+2)^0,f,c
  6253  004446  500A               	movf	(??_tolower+1)^0,w,c
  6254  004448  220C               	addwfc	(??_tolower+3)^0,f,c
  6255  00444A  500C               	movf	(??_tolower+3)^0,w,c
  6256  00444C  E10A               	bnz	u5110
  6257  00444E  0E1A               	movlw	26
  6258  004450  5C0B               	subwf	(??_tolower+2)^0,w,c
  6259  004452  A0D8               	btfss	status,0,c
  6260  004454  EF2E  F022         	goto	u5111
  6261  004458  EF31  F022         	goto	u5110
  6262  00445C                     u5111:
  6263  00445C  0E01               	movlw	1
  6264  00445E  EF32  F022         	goto	u5120
  6265  004462                     u5110:
  6266  004462  0E00               	movlw	0
  6267  004464                     u5120:
  6268  004464  6E0D               	movwf	_tolower$3028^0,c
  6269  004466  6A0E               	clrf	(_tolower$3028+1)^0,c
  6270  004468  500D               	movf	_tolower$3028^0,w,c
  6271  00446A  100E               	iorwf	(_tolower$3028+1)^0,w,c
  6272  00446C  B4D8               	btfsc	status,2,c
  6273  00446E  EF3B  F022         	goto	u5131
  6274  004472  EF3D  F022         	goto	u5130
  6275  004476                     u5131:
  6276  004476  EF44  F022         	goto	l1510
  6277  00447A                     u5130:
  6278  00447A  0E20               	movlw	32
  6279  00447C  1007               	iorwf	tolower@c^0,w,c
  6280  00447E  6E07               	movwf	?_tolower^0,c
  6281  004480  5008               	movf	(tolower@c+1)^0,w,c
  6282  004482  6E08               	movwf	(?_tolower+1)^0,c
  6283  004484  EF48  F022         	goto	l1515
  6284  004488                     l1510:
  6285  004488  C007  F007         	movff	tolower@c,?_tolower
  6286  00448C  C008  F008         	movff	tolower@c+1,?_tolower+1
  6287  004490                     l1515:
  6288  004490  0012               	return		;funcret
  6289  004492                     __end_of_tolower:
  6290                           	callstack 0
  6291                           
  6292 ;; *************** function _isupper *****************
  6293 ;; Defined at:
  6294 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  6295 ;; Parameters:    Size  Location     Type
  6296 ;;  c               2    0[COMRAM] int 
  6297 ;; Auto vars:     Size  Location     Type
  6298 ;;		None
  6299 ;; Return value:  Size  Location     Type
  6300 ;;                  2    0[COMRAM] int 
  6301 ;; Registers used:
  6302 ;;		wreg, status,2, status,0
  6303 ;; Tracked objects:
  6304 ;;		On entry : 0/0
  6305 ;;		On exit  : 0/0
  6306 ;;		Unchanged: 0/0
  6307 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6308 ;;      Params:         2       0       0       0       0       0       0
  6309 ;;      Locals:         0       0       0       0       0       0       0
  6310 ;;      Temps:          4       0       0       0       0       0       0
  6311 ;;      Totals:         6       0       0       0       0       0       0
  6312 ;;Total ram usage:        6 bytes
  6313 ;; Hardware stack levels used:    1
  6314 ;; Hardware stack levels required when called:    1
  6315 ;; This function calls:
  6316 ;;		Nothing
  6317 ;; This function is called by:
  6318 ;;		_efgtoa
  6319 ;;		_vfpfcnvrt
  6320 ;;		_tolower
  6321 ;; This function uses a non-reentrant model
  6322 ;;
  6323                           
  6324                           	psect	text13
  6325  0046B6                     __ptext13:
  6326                           	callstack 0
  6327  0046B6                     _isupper:
  6328                           	callstack 23
  6329  0046B6  0EBF               	movlw	191
  6330  0046B8  6E03               	movwf	??_isupper^0,c
  6331  0046BA  0EFF               	movlw	255
  6332  0046BC  6E04               	movwf	(??_isupper+1)^0,c
  6333  0046BE  C001  F005         	movff	isupper@c,??_isupper+2
  6334  0046C2  C002  F006         	movff	isupper@c+1,??_isupper+3
  6335  0046C6  5003               	movf	??_isupper^0,w,c
  6336  0046C8  2605               	addwf	(??_isupper+2)^0,f,c
  6337  0046CA  5004               	movf	(??_isupper+1)^0,w,c
  6338  0046CC  2206               	addwfc	(??_isupper+3)^0,f,c
  6339  0046CE  5006               	movf	(??_isupper+3)^0,w,c
  6340  0046D0  E10A               	bnz	u4120
  6341  0046D2  0E1A               	movlw	26
  6342  0046D4  5C05               	subwf	(??_isupper+2)^0,w,c
  6343  0046D6  A0D8               	btfss	status,0,c
  6344  0046D8  EF70  F023         	goto	u4121
  6345  0046DC  EF73  F023         	goto	u4120
  6346  0046E0                     u4121:
  6347  0046E0  0E01               	movlw	1
  6348  0046E2  EF74  F023         	goto	u4130
  6349  0046E6                     u4120:
  6350  0046E6  0E00               	movlw	0
  6351  0046E8                     u4130:
  6352  0046E8  6E01               	movwf	?_isupper^0,c
  6353  0046EA  6A02               	clrf	(?_isupper+1)^0,c
  6354  0046EC  0012               	return		;funcret
  6355  0046EE                     __end_of_isupper:
  6356                           	callstack 0
  6357                           
  6358 ;; *************** function _strcpy *****************
  6359 ;; Defined at:
  6360 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  6361 ;; Parameters:    Size  Location     Type
  6362 ;;  dest            2    0[COMRAM] PTR unsigned char 
  6363 ;;		 -> dbuf(80), 
  6364 ;;  src             2    2[COMRAM] PTR const unsigned char 
  6365 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  6366 ;;		 -> dbuf(80), 
  6367 ;; Auto vars:     Size  Location     Type
  6368 ;;  d               2    8[COMRAM] PTR unsigned char 
  6369 ;;		 -> dbuf(80), 
  6370 ;;  s               2    6[COMRAM] PTR const unsigned char 
  6371 ;;		 -> STR_20(4), STR_19(4), STR_16(4), STR_15(4), 
  6372 ;;		 -> dbuf(80), 
  6373 ;; Return value:  Size  Location     Type
  6374 ;;                  2    0[COMRAM] PTR unsigned char 
  6375 ;; Registers used:
  6376 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  6377 ;; Tracked objects:
  6378 ;;		On entry : 0/0
  6379 ;;		On exit  : 0/0
  6380 ;;		Unchanged: 0/0
  6381 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6382 ;;      Params:         4       0       0       0       0       0       0
  6383 ;;      Locals:         4       0       0       0       0       0       0
  6384 ;;      Temps:          2       0       0       0       0       0       0
  6385 ;;      Totals:        10       0       0       0       0       0       0
  6386 ;;Total ram usage:       10 bytes
  6387 ;; Hardware stack levels used:    1
  6388 ;; Hardware stack levels required when called:    1
  6389 ;; This function calls:
  6390 ;;		Nothing
  6391 ;; This function is called by:
  6392 ;;		_efgtoa
  6393 ;; This function uses a non-reentrant model
  6394 ;;
  6395                           
  6396                           	psect	text14
  6397  004492                     __ptext14:
  6398                           	callstack 0
  6399  004492                     _strcpy:
  6400                           	callstack 23
  6401  004492  C003  F007         	movff	strcpy@src,strcpy@s
  6402  004496  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  6403  00449A  C001  F009         	movff	strcpy@dest,strcpy@d
  6404  00449E  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  6405  0044A2                     l4568:
  6406  0044A2  5007               	movf	strcpy@s^0,w,c
  6407  0044A4  6E05               	movwf	??_strcpy^0,c
  6408  0044A6  5008               	movf	(strcpy@s+1)^0,w,c
  6409  0044A8  6E06               	movwf	(??_strcpy+1)^0,c
  6410  0044AA  4A07               	infsnz	strcpy@s^0,f,c
  6411  0044AC  2A08               	incf	(strcpy@s+1)^0,f,c
  6412  0044AE  C005  FFF6         	movff	??_strcpy,tblptrl
  6413  0044B2  C006  FFF7         	movff	??_strcpy+1,tblptrh
  6414  0044B6  6AF8               	clrf	tblptru,c
  6415  0044B8  C009  FFD9         	movff	strcpy@d,fsr2l
  6416  0044BC  C00A  FFDA         	movff	strcpy@d+1,fsr2h
  6417  0044C0  4A09               	infsnz	strcpy@d^0,f,c
  6418  0044C2  2A0A               	incf	(strcpy@d+1)^0,f,c
  6419  0044C4  0E05               	movlw	(high __ramtop+-1)
  6420  0044C6  64F7               	cpfsgt	tblptrh,c
  6421  0044C8  D003               	bra	u5097
  6422  0044CA  0008               	tblrd		*
  6423  0044CC  50F5               	movf	tablat,w,c
  6424  0044CE  D005               	bra	u5090
  6425  0044D0                     u5097:
  6426  0044D0  CFF6 FFE9          	movff	tblptrl,fsr0l
  6427  0044D4  CFF7 FFEA          	movff	tblptrh,fsr0h
  6428  0044D8  50EF               	movf	indf0,w,c
  6429  0044DA                     u5090:
  6430  0044DA  6EDF               	movwf	indf2,c
  6431  0044DC  50DF               	movf	indf2,w,c
  6432  0044DE  A4D8               	btfss	status,2,c
  6433  0044E0  EF74  F022         	goto	u5101
  6434  0044E4  EF76  F022         	goto	u5100
  6435  0044E8                     u5101:
  6436  0044E8  EF51  F022         	goto	l4568
  6437  0044EC                     u5100:
  6438  0044EC  0012               	return		;funcret
  6439  0044EE                     __end_of_strcpy:
  6440                           	callstack 0
  6441                           
  6442 ;; *************** function _floorf *****************
  6443 ;; Defined at:
  6444 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
  6445 ;; Parameters:    Size  Location     Type
  6446 ;;  x               4   25[COMRAM] float 
  6447 ;; Auto vars:     Size  Location     Type
  6448 ;;  u               4   41[COMRAM] struct .
  6449 ;;  m               4   35[COMRAM] unsigned long 
  6450 ;;  e               2   39[COMRAM] int 
  6451 ;; Return value:  Size  Location     Type
  6452 ;;                  4   25[COMRAM] float 
  6453 ;; Registers used:
  6454 ;;		wreg, status,2, status,0
  6455 ;; Tracked objects:
  6456 ;;		On entry : 0/0
  6457 ;;		On exit  : 0/0
  6458 ;;		Unchanged: 0/0
  6459 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6460 ;;      Params:         4       0       0       0       0       0       0
  6461 ;;      Locals:        10       0       0       0       0       0       0
  6462 ;;      Temps:          6       0       0       0       0       0       0
  6463 ;;      Totals:        20       0       0       0       0       0       0
  6464 ;;Total ram usage:       20 bytes
  6465 ;; Hardware stack levels used:    1
  6466 ;; Hardware stack levels required when called:    1
  6467 ;; This function calls:
  6468 ;;		Nothing
  6469 ;; This function is called by:
  6470 ;;		_efgtoa
  6471 ;; This function uses a non-reentrant model
  6472 ;;
  6473                           
  6474                           	psect	text15
  6475  002FDA                     __ptext15:
  6476                           	callstack 0
  6477  002FDA                     _floorf:
  6478                           	callstack 23
  6479  002FDA  C0E0  F02A         	movff	floorf@F524,floorf@u
  6480  002FDE  C0E1  F02B         	movff	floorf@F524+1,floorf@u+1
  6481  002FE2  C0E2  F02C         	movff	floorf@F524+2,floorf@u+2
  6482  002FE6  C0E3  F02D         	movff	floorf@F524+3,floorf@u+3
  6483  002FEA  C01A  F02A         	movff	floorf@x,floorf@u
  6484  002FEE  C01B  F02B         	movff	floorf@x+1,floorf@u+1
  6485  002FF2  C01C  F02C         	movff	floorf@x+2,floorf@u+2
  6486  002FF6  C01D  F02D         	movff	floorf@x+3,floorf@u+3
  6487  002FFA  0E81               	movlw	129
  6488  002FFC  6E1E               	movwf	??_floorf^0,c
  6489  002FFE  0EFF               	movlw	255
  6490  003000  6E1F               	movwf	(??_floorf+1)^0,c
  6491  003002  C02A  F020         	movff	floorf@u,??_floorf+2
  6492  003006  C02B  F021         	movff	floorf@u+1,??_floorf+3
  6493  00300A  C02C  F022         	movff	floorf@u+2,??_floorf+4
  6494  00300E  C02D  F023         	movff	floorf@u+3,??_floorf+5
  6495  003012  0E18               	movlw	24
  6496  003014  EF11  F018         	goto	u5140
  6497  003018                     u5145:
  6498  003018  90D8               	bcf	status,0,c
  6499  00301A  3223               	rrcf	(??_floorf+5)^0,f,c
  6500  00301C  3222               	rrcf	(??_floorf+4)^0,f,c
  6501  00301E  3221               	rrcf	(??_floorf+3)^0,f,c
  6502  003020  3220               	rrcf	(??_floorf+2)^0,f,c
  6503  003022                     u5140:
  6504  003022  2EE8               	decfsz	wreg,f,c
  6505  003024  EF0C  F018         	goto	u5145
  6506  003028  5020               	movf	(??_floorf+2)^0,w,c
  6507  00302A  241E               	addwf	??_floorf^0,w,c
  6508  00302C  6E28               	movwf	floorf@e^0,c
  6509  00302E  0E00               	movlw	0
  6510  003030  201F               	addwfc	(??_floorf+1)^0,w,c
  6511  003032  6E29               	movwf	(floorf@e+1)^0,c
  6512  003034  BE29               	btfsc	(floorf@e+1)^0,7,c
  6513  003036  EF26  F018         	goto	u5151
  6514  00303A  5029               	movf	(floorf@e+1)^0,w,c
  6515  00303C  E109               	bnz	u5150
  6516  00303E  0E17               	movlw	23
  6517  003040  5C28               	subwf	floorf@e^0,w,c
  6518  003042  A0D8               	btfss	status,0,c
  6519  003044  EF26  F018         	goto	u5151
  6520  003048  EF28  F018         	goto	u5150
  6521  00304C                     u5151:
  6522  00304C  EF32  F018         	goto	l4586
  6523  003050                     u5150:
  6524  003050                     l4584:
  6525  003050  C01A  F01A         	movff	floorf@x,?_floorf
  6526  003054  C01B  F01B         	movff	floorf@x+1,?_floorf+1
  6527  003058  C01C  F01C         	movff	floorf@x+2,?_floorf+2
  6528  00305C  C01D  F01D         	movff	floorf@x+3,?_floorf+3
  6529  003060  EFF5  F018         	goto	l1434
  6530  003064                     l4586:
  6531  003064  BE29               	btfsc	(floorf@e+1)^0,7,c
  6532  003066  EF37  F018         	goto	u5161
  6533  00306A  EF39  F018         	goto	u5160
  6534  00306E                     u5161:
  6535  00306E  EFA9  F018         	goto	l4596
  6536  003072                     u5160:
  6537  003072  C028  F01E         	movff	floorf@e,??_floorf
  6538  003076  0EFF               	movlw	255
  6539  003078  6E1F               	movwf	(??_floorf+1)^0,c
  6540  00307A  0EFF               	movlw	255
  6541  00307C  6E20               	movwf	(??_floorf+2)^0,c
  6542  00307E  0E7F               	movlw	127
  6543  003080  6E21               	movwf	(??_floorf+3)^0,c
  6544  003082  0E00               	movlw	0
  6545  003084  6E22               	movwf	(??_floorf+4)^0,c
  6546  003086                     u5175:
  6547  003086  661E               	tstfsz	??_floorf^0,c
  6548  003088  EF48  F018         	goto	u5176
  6549  00308C  EF50  F018         	goto	u5177
  6550  003090                     u5176:
  6551  003090  3422               	rlcf	(??_floorf+4)^0,w,c
  6552  003092  3222               	rrcf	(??_floorf+4)^0,f,c
  6553  003094  3221               	rrcf	(??_floorf+3)^0,f,c
  6554  003096  3220               	rrcf	(??_floorf+2)^0,f,c
  6555  003098  321F               	rrcf	(??_floorf+1)^0,f,c
  6556  00309A  2E1E               	decfsz	??_floorf^0,f,c
  6557  00309C  EF43  F018         	goto	u5175
  6558  0030A0                     u5177:
  6559  0030A0  C01F  F024         	movff	??_floorf+1,floorf@m
  6560  0030A4  C020  F025         	movff	??_floorf+2,floorf@m+1
  6561  0030A8  C021  F026         	movff	??_floorf+3,floorf@m+2
  6562  0030AC  C022  F027         	movff	??_floorf+4,floorf@m+3
  6563  0030B0  5024               	movf	floorf@m^0,w,c
  6564  0030B2  142A               	andwf	floorf@u^0,w,c
  6565  0030B4  6E1E               	movwf	??_floorf^0,c
  6566  0030B6  5025               	movf	(floorf@m+1)^0,w,c
  6567  0030B8  142B               	andwf	(floorf@u+1)^0,w,c
  6568  0030BA  6E1F               	movwf	(??_floorf+1)^0,c
  6569  0030BC  5026               	movf	(floorf@m+2)^0,w,c
  6570  0030BE  142C               	andwf	(floorf@u+2)^0,w,c
  6571  0030C0  6E20               	movwf	(??_floorf+2)^0,c
  6572  0030C2  5027               	movf	(floorf@m+3)^0,w,c
  6573  0030C4  142D               	andwf	(floorf@u+3)^0,w,c
  6574  0030C6  6E21               	movwf	(??_floorf+3)^0,c
  6575  0030C8  501E               	movf	??_floorf^0,w,c
  6576  0030CA  101F               	iorwf	(??_floorf+1)^0,w,c
  6577  0030CC  1020               	iorwf	(??_floorf+2)^0,w,c
  6578  0030CE  1021               	iorwf	(??_floorf+3)^0,w,c
  6579  0030D0  A4D8               	btfss	status,2,c
  6580  0030D2  EF6D  F018         	goto	u5181
  6581  0030D6  EF6F  F018         	goto	u5180
  6582  0030DA                     u5181:
  6583  0030DA  EF71  F018         	goto	l4592
  6584  0030DE                     u5180:
  6585  0030DE  EF28  F018         	goto	l4584
  6586  0030E2                     l4592:
  6587  0030E2  C02A  F01E         	movff	floorf@u,??_floorf
  6588  0030E6  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6589  0030EA  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6590  0030EE  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6591  0030F2  0E20               	movlw	32
  6592  0030F4  EF81  F018         	goto	u5190
  6593  0030F8                     u5195:
  6594  0030F8  90D8               	bcf	status,0,c
  6595  0030FA  3221               	rrcf	(??_floorf+3)^0,f,c
  6596  0030FC  3220               	rrcf	(??_floorf+2)^0,f,c
  6597  0030FE  321F               	rrcf	(??_floorf+1)^0,f,c
  6598  003100  321E               	rrcf	??_floorf^0,f,c
  6599  003102                     u5190:
  6600  003102  2EE8               	decfsz	wreg,f,c
  6601  003104  EF7C  F018         	goto	u5195
  6602  003108  501E               	movf	??_floorf^0,w,c
  6603  00310A  101F               	iorwf	(??_floorf+1)^0,w,c
  6604  00310C  1020               	iorwf	(??_floorf+2)^0,w,c
  6605  00310E  1021               	iorwf	(??_floorf+3)^0,w,c
  6606  003110  B4D8               	btfsc	status,2,c
  6607  003112  EF8D  F018         	goto	u5201
  6608  003116  EF8F  F018         	goto	u5200
  6609  00311A                     u5201:
  6610  00311A  EF97  F018         	goto	l1437
  6611  00311E                     u5200:
  6612  00311E  5024               	movf	floorf@m^0,w,c
  6613  003120  262A               	addwf	floorf@u^0,f,c
  6614  003122  5025               	movf	(floorf@m+1)^0,w,c
  6615  003124  222B               	addwfc	(floorf@u+1)^0,f,c
  6616  003126  5026               	movf	(floorf@m+2)^0,w,c
  6617  003128  222C               	addwfc	(floorf@u+2)^0,f,c
  6618  00312A  5027               	movf	(floorf@m+3)^0,w,c
  6619  00312C  222D               	addwfc	(floorf@u+3)^0,f,c
  6620  00312E                     l1437:
  6621  00312E  1C24               	comf	floorf@m^0,w,c
  6622  003130  6E1E               	movwf	??_floorf^0,c
  6623  003132  1C25               	comf	(floorf@m+1)^0,w,c
  6624  003134  6E1F               	movwf	(??_floorf+1)^0,c
  6625  003136  1C26               	comf	(floorf@m+2)^0,w,c
  6626  003138  6E20               	movwf	(??_floorf+2)^0,c
  6627  00313A  1C27               	comf	(floorf@m+3)^0,w,c
  6628  00313C  6E21               	movwf	(??_floorf+3)^0,c
  6629  00313E  501E               	movf	??_floorf^0,w,c
  6630  003140  162A               	andwf	floorf@u^0,f,c
  6631  003142  501F               	movf	(??_floorf+1)^0,w,c
  6632  003144  162B               	andwf	(floorf@u+1)^0,f,c
  6633  003146  5020               	movf	(??_floorf+2)^0,w,c
  6634  003148  162C               	andwf	(floorf@u+2)^0,f,c
  6635  00314A  5021               	movf	(??_floorf+3)^0,w,c
  6636  00314C  162D               	andwf	(floorf@u+3)^0,f,c
  6637  00314E  EFED  F018         	goto	l4604
  6638  003152                     l4596:
  6639  003152  C02A  F01E         	movff	floorf@u,??_floorf
  6640  003156  C02B  F01F         	movff	floorf@u+1,??_floorf+1
  6641  00315A  C02C  F020         	movff	floorf@u+2,??_floorf+2
  6642  00315E  C02D  F021         	movff	floorf@u+3,??_floorf+3
  6643  003162  0E20               	movlw	32
  6644  003164  EFB9  F018         	goto	u5210
  6645  003168                     u5215:
  6646  003168  90D8               	bcf	status,0,c
  6647  00316A  3221               	rrcf	(??_floorf+3)^0,f,c
  6648  00316C  3220               	rrcf	(??_floorf+2)^0,f,c
  6649  00316E  321F               	rrcf	(??_floorf+1)^0,f,c
  6650  003170  321E               	rrcf	??_floorf^0,f,c
  6651  003172                     u5210:
  6652  003172  2EE8               	decfsz	wreg,f,c
  6653  003174  EFB4  F018         	goto	u5215
  6654  003178  501E               	movf	??_floorf^0,w,c
  6655  00317A  101F               	iorwf	(??_floorf+1)^0,w,c
  6656  00317C  1020               	iorwf	(??_floorf+2)^0,w,c
  6657  00317E  1021               	iorwf	(??_floorf+3)^0,w,c
  6658  003180  A4D8               	btfss	status,2,c
  6659  003182  EFC5  F018         	goto	u5221
  6660  003186  EFC7  F018         	goto	u5220
  6661  00318A                     u5221:
  6662  00318A  EFD1  F018         	goto	l4600
  6663  00318E                     u5220:
  6664  00318E  0E00               	movlw	0
  6665  003190  6E2A               	movwf	floorf@u^0,c
  6666  003192  0E00               	movlw	0
  6667  003194  6E2B               	movwf	(floorf@u+1)^0,c
  6668  003196  0E00               	movlw	0
  6669  003198  6E2C               	movwf	(floorf@u+2)^0,c
  6670  00319A  0E00               	movlw	0
  6671  00319C  6E2D               	movwf	(floorf@u+3)^0,c
  6672  00319E  EFED  F018         	goto	l4604
  6673  0031A2                     l4600:
  6674  0031A2  90D8               	bcf	status,0,c
  6675  0031A4  342A               	rlcf	floorf@u^0,w,c
  6676  0031A6  6E1E               	movwf	??_floorf^0,c
  6677  0031A8  342B               	rlcf	(floorf@u+1)^0,w,c
  6678  0031AA  6E1F               	movwf	(??_floorf+1)^0,c
  6679  0031AC  342C               	rlcf	(floorf@u+2)^0,w,c
  6680  0031AE  6E20               	movwf	(??_floorf+2)^0,c
  6681  0031B0  342D               	rlcf	(floorf@u+3)^0,w,c
  6682  0031B2  6E21               	movwf	(??_floorf+3)^0,c
  6683  0031B4  501E               	movf	??_floorf^0,w,c
  6684  0031B6  101F               	iorwf	(??_floorf+1)^0,w,c
  6685  0031B8  1020               	iorwf	(??_floorf+2)^0,w,c
  6686  0031BA  1021               	iorwf	(??_floorf+3)^0,w,c
  6687  0031BC  B4D8               	btfsc	status,2,c
  6688  0031BE  EFE3  F018         	goto	u5231
  6689  0031C2  EFE5  F018         	goto	u5230
  6690  0031C6                     u5231:
  6691  0031C6  EFED  F018         	goto	l4604
  6692  0031CA                     u5230:
  6693  0031CA  0E00               	movlw	0
  6694  0031CC  6E2A               	movwf	floorf@u^0,c
  6695  0031CE  0E00               	movlw	0
  6696  0031D0  6E2B               	movwf	(floorf@u+1)^0,c
  6697  0031D2  0E80               	movlw	128
  6698  0031D4  6E2C               	movwf	(floorf@u+2)^0,c
  6699  0031D6  0EBF               	movlw	191
  6700  0031D8  6E2D               	movwf	(floorf@u+3)^0,c
  6701  0031DA                     l4604:
  6702  0031DA  C02A  F01A         	movff	floorf@u,?_floorf
  6703  0031DE  C02B  F01B         	movff	floorf@u+1,?_floorf+1
  6704  0031E2  C02C  F01C         	movff	floorf@u+2,?_floorf+2
  6705  0031E6  C02D  F01D         	movff	floorf@u+3,?_floorf+3
  6706  0031EA                     l1434:
  6707  0031EA  0012               	return		;funcret
  6708  0031EC                     __end_of_floorf:
  6709                           	callstack 0
  6710                           
  6711 ;; *************** function ___fpclassifyf *****************
  6712 ;; Defined at:
  6713 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
  6714 ;; Parameters:    Size  Location     Type
  6715 ;;  x               4    0[COMRAM] float 
  6716 ;; Auto vars:     Size  Location     Type
  6717 ;;  u               4   10[COMRAM] struct .
  6718 ;;  e               2    8[COMRAM] int 
  6719 ;; Return value:  Size  Location     Type
  6720 ;;                  2    0[COMRAM] int 
  6721 ;; Registers used:
  6722 ;;		wreg, status,2, status,0
  6723 ;; Tracked objects:
  6724 ;;		On entry : 0/0
  6725 ;;		On exit  : 0/0
  6726 ;;		Unchanged: 0/0
  6727 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6728 ;;      Params:         4       0       0       0       0       0       0
  6729 ;;      Locals:         6       0       0       0       0       0       0
  6730 ;;      Temps:          4       0       0       0       0       0       0
  6731 ;;      Totals:        14       0       0       0       0       0       0
  6732 ;;Total ram usage:       14 bytes
  6733 ;; Hardware stack levels used:    1
  6734 ;; Hardware stack levels required when called:    1
  6735 ;; This function calls:
  6736 ;;		Nothing
  6737 ;; This function is called by:
  6738 ;;		_efgtoa
  6739 ;; This function uses a non-reentrant model
  6740 ;;
  6741                           
  6742                           	psect	text16
  6743  003B3C                     __ptext16:
  6744                           	callstack 0
  6745  003B3C                     ___fpclassifyf:
  6746                           	callstack 23
  6747  003B3C  C0E4  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
  6748  003B40  C0E5  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
  6749  003B44  C0E6  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
  6750  003B48  C0E7  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
  6751  003B4C  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
  6752  003B50  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
  6753  003B54  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
  6754  003B58  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
  6755  003B5C  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6756  003B60  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6757  003B64  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6758  003B68  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6759  003B6C  0E18               	movlw	24
  6760  003B6E  EFBE  F01D         	goto	u5020
  6761  003B72                     u5025:
  6762  003B72  90D8               	bcf	status,0,c
  6763  003B74  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
  6764  003B76  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
  6765  003B78  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
  6766  003B7A  3205               	rrcf	??___fpclassifyf^0,f,c
  6767  003B7C                     u5020:
  6768  003B7C  2EE8               	decfsz	wreg,f,c
  6769  003B7E  EFB9  F01D         	goto	u5025
  6770  003B82  5005               	movf	??___fpclassifyf^0,w,c
  6771  003B84  6E09               	movwf	___fpclassifyf@e^0,c
  6772  003B86  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
  6773  003B88  5009               	movf	___fpclassifyf@e^0,w,c
  6774  003B8A  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6775  003B8C  A4D8               	btfss	status,2,c
  6776  003B8E  EFCB  F01D         	goto	u5031
  6777  003B92  EFCD  F01D         	goto	u5030
  6778  003B96                     u5031:
  6779  003B96  EFED  F01D         	goto	l4556
  6780  003B9A                     u5030:
  6781  003B9A  90D8               	bcf	status,0,c
  6782  003B9C  340B               	rlcf	___fpclassifyf@u^0,w,c
  6783  003B9E  6E05               	movwf	??___fpclassifyf^0,c
  6784  003BA0  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
  6785  003BA2  6E06               	movwf	(??___fpclassifyf+1)^0,c
  6786  003BA4  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
  6787  003BA6  6E07               	movwf	(??___fpclassifyf+2)^0,c
  6788  003BA8  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
  6789  003BAA  6E08               	movwf	(??___fpclassifyf+3)^0,c
  6790  003BAC  5005               	movf	??___fpclassifyf^0,w,c
  6791  003BAE  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6792  003BB0  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6793  003BB2  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6794  003BB4  A4D8               	btfss	status,2,c
  6795  003BB6  EFDF  F01D         	goto	u5041
  6796  003BBA  EFE1  F01D         	goto	u5040
  6797  003BBE                     u5041:
  6798  003BBE  EFE7  F01D         	goto	l4552
  6799  003BC2                     u5040:
  6800  003BC2  0E00               	movlw	0
  6801  003BC4  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6802  003BC6  0E02               	movlw	2
  6803  003BC8  6E01               	movwf	?___fpclassifyf^0,c
  6804  003BCA  EF1C  F01E         	goto	l1389
  6805  003BCE                     l4552:
  6806  003BCE  0E00               	movlw	0
  6807  003BD0  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6808  003BD2  0E03               	movlw	3
  6809  003BD4  6E01               	movwf	?___fpclassifyf^0,c
  6810  003BD6  EF1C  F01E         	goto	l1389
  6811  003BDA                     l4556:
  6812  003BDA  2809               	incf	___fpclassifyf@e^0,w,c
  6813  003BDC  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
  6814  003BDE  A4D8               	btfss	status,2,c
  6815  003BE0  EFF4  F01D         	goto	u5051
  6816  003BE4  EFF6  F01D         	goto	u5050
  6817  003BE8                     u5051:
  6818  003BE8  EF18  F01E         	goto	l4562
  6819  003BEC                     u5050:
  6820  003BEC  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
  6821  003BF0  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
  6822  003BF4  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
  6823  003BF8  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
  6824  003BFC  0E09               	movlw	9
  6825  003BFE                     u5065:
  6826  003BFE  90D8               	bcf	status,0,c
  6827  003C00  3605               	rlcf	??___fpclassifyf^0,f,c
  6828  003C02  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
  6829  003C04  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
  6830  003C06  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
  6831  003C08  2EE8               	decfsz	wreg,f,c
  6832  003C0A  EFFF  F01D         	goto	u5065
  6833  003C0E  5005               	movf	??___fpclassifyf^0,w,c
  6834  003C10  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
  6835  003C12  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
  6836  003C14  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
  6837  003C16  B4D8               	btfsc	status,2,c
  6838  003C18  EF10  F01E         	goto	u5071
  6839  003C1C  EF13  F01E         	goto	u5070
  6840  003C20                     u5071:
  6841  003C20  0E01               	movlw	1
  6842  003C22  EF14  F01E         	goto	u5080
  6843  003C26                     u5070:
  6844  003C26  0E00               	movlw	0
  6845  003C28                     u5080:
  6846  003C28  6E01               	movwf	?___fpclassifyf^0,c
  6847  003C2A  6A02               	clrf	(?___fpclassifyf+1)^0,c
  6848  003C2C  EF1C  F01E         	goto	l1389
  6849  003C30                     l4562:
  6850  003C30  0E00               	movlw	0
  6851  003C32  6E02               	movwf	(?___fpclassifyf+1)^0,c
  6852  003C34  0E04               	movlw	4
  6853  003C36  6E01               	movwf	?___fpclassifyf^0,c
  6854  003C38                     l1389:
  6855  003C38  0012               	return		;funcret
  6856  003C3A                     __end_of___fpclassifyf:
  6857                           	callstack 0
  6858                           
  6859 ;; *************** function ___fltol *****************
  6860 ;; Defined at:
  6861 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
  6862 ;; Parameters:    Size  Location     Type
  6863 ;;  f1              4    0[COMRAM] int 
  6864 ;; Auto vars:     Size  Location     Type
  6865 ;;  exp1            1    9[COMRAM] unsigned char 
  6866 ;;  sign1           1    8[COMRAM] unsigned char 
  6867 ;; Return value:  Size  Location     Type
  6868 ;;                  4    0[COMRAM] long 
  6869 ;; Registers used:
  6870 ;;		wreg, status,2, status,0
  6871 ;; Tracked objects:
  6872 ;;		On entry : 0/0
  6873 ;;		On exit  : 0/0
  6874 ;;		Unchanged: 0/0
  6875 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6876 ;;      Params:         4       0       0       0       0       0       0
  6877 ;;      Locals:         2       0       0       0       0       0       0
  6878 ;;      Temps:          4       0       0       0       0       0       0
  6879 ;;      Totals:        10       0       0       0       0       0       0
  6880 ;;Total ram usage:       10 bytes
  6881 ;; Hardware stack levels used:    1
  6882 ;; Hardware stack levels required when called:    1
  6883 ;; This function calls:
  6884 ;;		Nothing
  6885 ;; This function is called by:
  6886 ;;		_efgtoa
  6887 ;;		_scanAdcConversion
  6888 ;;		_PWM1_setDC
  6889 ;;		_PWM2_setDC
  6890 ;;		_speedControl
  6891 ;; This function uses a non-reentrant model
  6892 ;;
  6893                           
  6894                           	psect	text17
  6895  003932                     __ptext17:
  6896                           	callstack 0
  6897  003932                     ___fltol:
  6898                           	callstack 23
  6899  003932  3403               	rlcf	(___fltol@f1+2)^0,w,c
  6900  003934  3404               	rlcf	(___fltol@f1+3)^0,w,c
  6901  003936  6E0A               	movwf	___fltol@exp1^0,c
  6902  003938  500A               	movf	___fltol@exp1^0,w,c
  6903  00393A  A4D8               	btfss	status,2,c
  6904  00393C  EFA2  F01C         	goto	u4901
  6905  003940  EFA4  F01C         	goto	u4900
  6906  003944                     u4901:
  6907  003944  EFAE  F01C         	goto	l4480
  6908  003948                     u4900:
  6909  003948                     l4476:
  6910  003948  0E00               	movlw	0
  6911  00394A  6E01               	movwf	?___fltol^0,c
  6912  00394C  0E00               	movlw	0
  6913  00394E  6E02               	movwf	(?___fltol+1)^0,c
  6914  003950  0E00               	movlw	0
  6915  003952  6E03               	movwf	(?___fltol+2)^0,c
  6916  003954  0E00               	movlw	0
  6917  003956  6E04               	movwf	(?___fltol+3)^0,c
  6918  003958  EF1B  F01D         	goto	l784
  6919  00395C                     l4480:
  6920  00395C  C001  F005         	movff	___fltol@f1,??___fltol
  6921  003960  C002  F006         	movff	___fltol@f1+1,??___fltol+1
  6922  003964  C003  F007         	movff	___fltol@f1+2,??___fltol+2
  6923  003968  C004  F008         	movff	___fltol@f1+3,??___fltol+3
  6924  00396C  0E20               	movlw	32
  6925  00396E  EFBE  F01C         	goto	u4910
  6926  003972                     u4915:
  6927  003972  90D8               	bcf	status,0,c
  6928  003974  3208               	rrcf	(??___fltol+3)^0,f,c
  6929  003976  3207               	rrcf	(??___fltol+2)^0,f,c
  6930  003978  3206               	rrcf	(??___fltol+1)^0,f,c
  6931  00397A  3205               	rrcf	??___fltol^0,f,c
  6932  00397C                     u4910:
  6933  00397C  2EE8               	decfsz	wreg,f,c
  6934  00397E  EFB9  F01C         	goto	u4915
  6935  003982  5005               	movf	??___fltol^0,w,c
  6936  003984  6E09               	movwf	___fltol@sign1^0,c
  6937  003986  8E03               	bsf	(___fltol@f1+2)^0,7,c
  6938  003988  0EFF               	movlw	255
  6939  00398A  1601               	andwf	___fltol@f1^0,f,c
  6940  00398C  0EFF               	movlw	255
  6941  00398E  1602               	andwf	(___fltol@f1+1)^0,f,c
  6942  003990  0EFF               	movlw	255
  6943  003992  1603               	andwf	(___fltol@f1+2)^0,f,c
  6944  003994  0E00               	movlw	0
  6945  003996  1604               	andwf	(___fltol@f1+3)^0,f,c
  6946  003998  0E96               	movlw	150
  6947  00399A  5E0A               	subwf	___fltol@exp1^0,f,c
  6948  00399C  BE0A               	btfsc	___fltol@exp1^0,7,c
  6949  00399E  EFD5  F01C         	goto	u4920
  6950  0039A2  EFD3  F01C         	goto	u4921
  6951  0039A6                     u4921:
  6952  0039A6  EFEB  F01C         	goto	l4500
  6953  0039AA                     u4920:
  6954  0039AA  500A               	movf	___fltol@exp1^0,w,c
  6955  0039AC  0A80               	xorlw	128
  6956  0039AE  0F97               	addlw	151
  6957  0039B0  B0D8               	btfsc	status,0,c
  6958  0039B2  EFDD  F01C         	goto	u4931
  6959  0039B6  EFDF  F01C         	goto	u4930
  6960  0039BA                     u4931:
  6961  0039BA  EFE1  F01C         	goto	l4496
  6962  0039BE                     u4930:
  6963  0039BE  EFA4  F01C         	goto	l4476
  6964  0039C2                     l4496:
  6965  0039C2  90D8               	bcf	status,0,c
  6966  0039C4  3204               	rrcf	(___fltol@f1+3)^0,f,c
  6967  0039C6  3203               	rrcf	(___fltol@f1+2)^0,f,c
  6968  0039C8  3202               	rrcf	(___fltol@f1+1)^0,f,c
  6969  0039CA  3201               	rrcf	___fltol@f1^0,f,c
  6970  0039CC  3E0A               	incfsz	___fltol@exp1^0,f,c
  6971  0039CE  EFE1  F01C         	goto	l4496
  6972  0039D2  EF03  F01D         	goto	l4510
  6973  0039D6                     l4500:
  6974  0039D6  0E1F               	movlw	31
  6975  0039D8  640A               	cpfsgt	___fltol@exp1^0,c
  6976  0039DA  EFF1  F01C         	goto	u4941
  6977  0039DE  EFF3  F01C         	goto	u4940
  6978  0039E2                     u4941:
  6979  0039E2  EFFB  F01C         	goto	l4508
  6980  0039E6                     u4940:
  6981  0039E6  EFA4  F01C         	goto	l4476
  6982  0039EA                     l4506:
  6983  0039EA  90D8               	bcf	status,0,c
  6984  0039EC  3601               	rlcf	___fltol@f1^0,f,c
  6985  0039EE  3602               	rlcf	(___fltol@f1+1)^0,f,c
  6986  0039F0  3603               	rlcf	(___fltol@f1+2)^0,f,c
  6987  0039F2  3604               	rlcf	(___fltol@f1+3)^0,f,c
  6988  0039F4  060A               	decf	___fltol@exp1^0,f,c
  6989  0039F6                     l4508:
  6990  0039F6  500A               	movf	___fltol@exp1^0,w,c
  6991  0039F8  A4D8               	btfss	status,2,c
  6992  0039FA  EF01  F01D         	goto	u4951
  6993  0039FE  EF03  F01D         	goto	u4950
  6994  003A02                     u4951:
  6995  003A02  EFF5  F01C         	goto	l4506
  6996  003A06                     u4950:
  6997  003A06                     l4510:
  6998  003A06  5009               	movf	___fltol@sign1^0,w,c
  6999  003A08  B4D8               	btfsc	status,2,c
  7000  003A0A  EF09  F01D         	goto	u4961
  7001  003A0E  EF0B  F01D         	goto	u4960
  7002  003A12                     u4961:
  7003  003A12  EF13  F01D         	goto	l4514
  7004  003A16                     u4960:
  7005  003A16  1E04               	comf	(___fltol@f1+3)^0,f,c
  7006  003A18  1E03               	comf	(___fltol@f1+2)^0,f,c
  7007  003A1A  1E02               	comf	(___fltol@f1+1)^0,f,c
  7008  003A1C  6C01               	negf	___fltol@f1^0,c
  7009  003A1E  0E00               	movlw	0
  7010  003A20  2202               	addwfc	(___fltol@f1+1)^0,f,c
  7011  003A22  2203               	addwfc	(___fltol@f1+2)^0,f,c
  7012  003A24  2204               	addwfc	(___fltol@f1+3)^0,f,c
  7013  003A26                     l4514:
  7014  003A26  C001  F001         	movff	___fltol@f1,?___fltol
  7015  003A2A  C002  F002         	movff	___fltol@f1+1,?___fltol+1
  7016  003A2E  C003  F003         	movff	___fltol@f1+2,?___fltol+2
  7017  003A32  C004  F004         	movff	___fltol@f1+3,?___fltol+3
  7018  003A36                     l784:
  7019  003A36  0012               	return		;funcret
  7020  003A38                     __end_of___fltol:
  7021                           	callstack 0
  7022                           
  7023 ;; *************** function ___flsub *****************
  7024 ;; Defined at:
  7025 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7026 ;; Parameters:    Size  Location     Type
  7027 ;;  b               4   25[COMRAM] long 
  7028 ;;  a               4   29[COMRAM] long 
  7029 ;; Auto vars:     Size  Location     Type
  7030 ;;		None
  7031 ;; Return value:  Size  Location     Type
  7032 ;;                  4   25[COMRAM] long 
  7033 ;; Registers used:
  7034 ;;		wreg, status,2, status,0, cstack
  7035 ;; Tracked objects:
  7036 ;;		On entry : 0/0
  7037 ;;		On exit  : 0/0
  7038 ;;		Unchanged: 0/0
  7039 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7040 ;;      Params:         8       0       0       0       0       0       0
  7041 ;;      Locals:         0       0       0       0       0       0       0
  7042 ;;      Temps:          0       0       0       0       0       0       0
  7043 ;;      Totals:         8       0       0       0       0       0       0
  7044 ;;Total ram usage:        8 bytes
  7045 ;; Hardware stack levels used:    1
  7046 ;; Hardware stack levels required when called:    2
  7047 ;; This function calls:
  7048 ;;		___fladd
  7049 ;; This function is called by:
  7050 ;;		_stateMachine
  7051 ;;		_efgtoa
  7052 ;; This function uses a non-reentrant model
  7053 ;;
  7054                           
  7055                           	psect	text18
  7056  0045EC                     __ptext18:
  7057                           	callstack 0
  7058  0045EC                     ___flsub:
  7059                           	callstack 22
  7060  0045EC  0E00               	movlw	0
  7061  0045EE  1A1E               	xorwf	___flsub@a^0,f,c
  7062  0045F0  0E00               	movlw	0
  7063  0045F2  1A1F               	xorwf	(___flsub@a+1)^0,f,c
  7064  0045F4  0E00               	movlw	0
  7065  0045F6  1A20               	xorwf	(___flsub@a+2)^0,f,c
  7066  0045F8  0E80               	movlw	128
  7067  0045FA  1A21               	xorwf	(___flsub@a+3)^0,f,c
  7068  0045FC  C01A  F001         	movff	___flsub@b,___fladd@b
  7069  004600  C01B  F002         	movff	___flsub@b+1,___fladd@b+1
  7070  004604  C01C  F003         	movff	___flsub@b+2,___fladd@b+2
  7071  004608  C01D  F004         	movff	___flsub@b+3,___fladd@b+3
  7072  00460C  C01E  F005         	movff	___flsub@a,___fladd@a
  7073  004610  C01F  F006         	movff	___flsub@a+1,___fladd@a+1
  7074  004614  C020  F007         	movff	___flsub@a+2,___fladd@a+2
  7075  004618  C021  F008         	movff	___flsub@a+3,___fladd@a+3
  7076  00461C  EC39  F010         	call	___fladd	;wreg free
  7077  004620  C001  F01A         	movff	?___fladd,?___flsub
  7078  004624  C002  F01B         	movff	?___fladd+1,?___flsub+1
  7079  004628  C003  F01C         	movff	?___fladd+2,?___flsub+2
  7080  00462C  C004  F01D         	movff	?___fladd+3,?___flsub+3
  7081  004630  0012               	return		;funcret
  7082  004632                     __end_of___flsub:
  7083                           	callstack 0
  7084                           
  7085 ;; *************** function ___fladd *****************
  7086 ;; Defined at:
  7087 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
  7088 ;; Parameters:    Size  Location     Type
  7089 ;;  b               4    0[COMRAM] long 
  7090 ;;  a               4    4[COMRAM] long 
  7091 ;; Auto vars:     Size  Location     Type
  7092 ;;  grs             1   15[COMRAM] unsigned char 
  7093 ;;  bexp            1   14[COMRAM] unsigned char 
  7094 ;;  aexp            1   13[COMRAM] unsigned char 
  7095 ;;  signs           1   12[COMRAM] unsigned char 
  7096 ;; Return value:  Size  Location     Type
  7097 ;;                  4    0[COMRAM] unsigned char 
  7098 ;; Registers used:
  7099 ;;		wreg, status,2, status,0
  7100 ;; Tracked objects:
  7101 ;;		On entry : 0/0
  7102 ;;		On exit  : 0/0
  7103 ;;		Unchanged: 0/0
  7104 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7105 ;;      Params:         8       0       0       0       0       0       0
  7106 ;;      Locals:         4       0       0       0       0       0       0
  7107 ;;      Temps:          4       0       0       0       0       0       0
  7108 ;;      Totals:        16       0       0       0       0       0       0
  7109 ;;Total ram usage:       16 bytes
  7110 ;; Hardware stack levels used:    1
  7111 ;; Hardware stack levels required when called:    1
  7112 ;; This function calls:
  7113 ;;		Nothing
  7114 ;; This function is called by:
  7115 ;;		_stateMachine
  7116 ;;		___flsub
  7117 ;;		_efgtoa
  7118 ;;		_speedControl
  7119 ;; This function uses a non-reentrant model
  7120 ;;
  7121                           
  7122                           	psect	text19
  7123  002072                     __ptext19:
  7124                           	callstack 0
  7125  002072                     ___fladd:
  7126                           	callstack 22
  7127  002072  5004               	movf	(___fladd@b+3)^0,w,c
  7128  002074  0B80               	andlw	128
  7129  002076  6E0D               	movwf	___fladd@signs^0,c
  7130  002078  5004               	movf	(___fladd@b+3)^0,w,c
  7131  00207A  2404               	addwf	(___fladd@b+3)^0,w,c
  7132  00207C  6E0F               	movwf	___fladd@bexp^0,c
  7133  00207E  AE03               	btfss	(___fladd@b+2)^0,7,c
  7134  002080  EF44  F010         	goto	u3711
  7135  002084  EF46  F010         	goto	u3710
  7136  002088                     u3711:
  7137  002088  EF47  F010         	goto	l3770
  7138  00208C                     u3710:
  7139  00208C  800F               	bsf	___fladd@bexp^0,0,c
  7140  00208E                     l3770:
  7141  00208E  500F               	movf	___fladd@bexp^0,w,c
  7142  002090  B4D8               	btfsc	status,2,c
  7143  002092  EF4D  F010         	goto	u3721
  7144  002096  EF4F  F010         	goto	u3720
  7145  00209A                     u3721:
  7146  00209A  EF64  F010         	goto	l3780
  7147  00209E                     u3720:
  7148  00209E  280F               	incf	___fladd@bexp^0,w,c
  7149  0020A0  A4D8               	btfss	status,2,c
  7150  0020A2  EF55  F010         	goto	u3731
  7151  0020A6  EF57  F010         	goto	u3730
  7152  0020AA                     u3731:
  7153  0020AA  EF5F  F010         	goto	l3776
  7154  0020AE                     u3730:
  7155  0020AE  0E00               	movlw	0
  7156  0020B0  6E01               	movwf	___fladd@b^0,c
  7157  0020B2  0E00               	movlw	0
  7158  0020B4  6E02               	movwf	(___fladd@b+1)^0,c
  7159  0020B6  0E00               	movlw	0
  7160  0020B8  6E03               	movwf	(___fladd@b+2)^0,c
  7161  0020BA  0E00               	movlw	0
  7162  0020BC  6E04               	movwf	(___fladd@b+3)^0,c
  7163  0020BE                     l3776:
  7164  0020BE  8E03               	bsf	(___fladd@b+2)^0,7,c
  7165  0020C0  0E00               	movlw	0
  7166  0020C2  6E04               	movwf	(___fladd@b+3)^0,c
  7167  0020C4  EF6C  F010         	goto	l3782
  7168  0020C8                     l3780:
  7169  0020C8  0E00               	movlw	0
  7170  0020CA  6E01               	movwf	___fladd@b^0,c
  7171  0020CC  0E00               	movlw	0
  7172  0020CE  6E02               	movwf	(___fladd@b+1)^0,c
  7173  0020D0  0E00               	movlw	0
  7174  0020D2  6E03               	movwf	(___fladd@b+2)^0,c
  7175  0020D4  0E00               	movlw	0
  7176  0020D6  6E04               	movwf	(___fladd@b+3)^0,c
  7177  0020D8                     l3782:
  7178  0020D8  5008               	movf	(___fladd@a+3)^0,w,c
  7179  0020DA  0B80               	andlw	128
  7180  0020DC  6E0E               	movwf	___fladd@aexp^0,c
  7181  0020DE  500D               	movf	___fladd@signs^0,w,c
  7182  0020E0  180E               	xorwf	___fladd@aexp^0,w,c
  7183  0020E2  B4D8               	btfsc	status,2,c
  7184  0020E4  EF76  F010         	goto	u3741
  7185  0020E8  EF78  F010         	goto	u3740
  7186  0020EC                     u3741:
  7187  0020EC  EF79  F010         	goto	l3788
  7188  0020F0                     u3740:
  7189  0020F0  8C0D               	bsf	___fladd@signs^0,6,c
  7190  0020F2                     l3788:
  7191  0020F2  5008               	movf	(___fladd@a+3)^0,w,c
  7192  0020F4  2408               	addwf	(___fladd@a+3)^0,w,c
  7193  0020F6  6E0E               	movwf	___fladd@aexp^0,c
  7194  0020F8  AE07               	btfss	(___fladd@a+2)^0,7,c
  7195  0020FA  EF81  F010         	goto	u3751
  7196  0020FE  EF83  F010         	goto	u3750
  7197  002102                     u3751:
  7198  002102  EF84  F010         	goto	l3794
  7199  002106                     u3750:
  7200  002106  800E               	bsf	___fladd@aexp^0,0,c
  7201  002108                     l3794:
  7202  002108  500E               	movf	___fladd@aexp^0,w,c
  7203  00210A  B4D8               	btfsc	status,2,c
  7204  00210C  EF8A  F010         	goto	u3761
  7205  002110  EF8C  F010         	goto	u3760
  7206  002114                     u3761:
  7207  002114  EFA1  F010         	goto	l3804
  7208  002118                     u3760:
  7209  002118  280E               	incf	___fladd@aexp^0,w,c
  7210  00211A  A4D8               	btfss	status,2,c
  7211  00211C  EF92  F010         	goto	u3771
  7212  002120  EF94  F010         	goto	u3770
  7213  002124                     u3771:
  7214  002124  EF9C  F010         	goto	l3800
  7215  002128                     u3770:
  7216  002128  0E00               	movlw	0
  7217  00212A  6E05               	movwf	___fladd@a^0,c
  7218  00212C  0E00               	movlw	0
  7219  00212E  6E06               	movwf	(___fladd@a+1)^0,c
  7220  002130  0E00               	movlw	0
  7221  002132  6E07               	movwf	(___fladd@a+2)^0,c
  7222  002134  0E00               	movlw	0
  7223  002136  6E08               	movwf	(___fladd@a+3)^0,c
  7224  002138                     l3800:
  7225  002138  8E07               	bsf	(___fladd@a+2)^0,7,c
  7226  00213A  0E00               	movlw	0
  7227  00213C  6E08               	movwf	(___fladd@a+3)^0,c
  7228  00213E  EFA9  F010         	goto	l3806
  7229  002142                     l3804:
  7230  002142  0E00               	movlw	0
  7231  002144  6E05               	movwf	___fladd@a^0,c
  7232  002146  0E00               	movlw	0
  7233  002148  6E06               	movwf	(___fladd@a+1)^0,c
  7234  00214A  0E00               	movlw	0
  7235  00214C  6E07               	movwf	(___fladd@a+2)^0,c
  7236  00214E  0E00               	movlw	0
  7237  002150  6E08               	movwf	(___fladd@a+3)^0,c
  7238  002152                     l3806:
  7239  002152  500F               	movf	___fladd@bexp^0,w,c
  7240  002154  5C0E               	subwf	___fladd@aexp^0,w,c
  7241  002156  B0D8               	btfsc	status,0,c
  7242  002158  EFB0  F010         	goto	u3781
  7243  00215C  EFB2  F010         	goto	u3780
  7244  002160                     u3781:
  7245  002160  EFD9  F010         	goto	l3842
  7246  002164                     u3780:
  7247  002164  AC0D               	btfss	___fladd@signs^0,6,c
  7248  002166  EFB7  F010         	goto	u3791
  7249  00216A  EFB9  F010         	goto	u3790
  7250  00216E                     u3791:
  7251  00216E  EFBB  F010         	goto	l3812
  7252  002172                     u3790:
  7253  002172  0E80               	movlw	128
  7254  002174  1A0D               	xorwf	___fladd@signs^0,f,c
  7255  002176                     l3812:
  7256  002176  C00F  F010         	movff	___fladd@bexp,___fladd@grs
  7257  00217A  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7258  00217E  C010  F00E         	movff	___fladd@grs,___fladd@aexp
  7259  002182  C001  F010         	movff	___fladd@b,___fladd@grs
  7260  002186  C005  F001         	movff	___fladd@a,___fladd@b
  7261  00218A  C010  F005         	movff	___fladd@grs,___fladd@a
  7262  00218E  C002  F010         	movff	___fladd@b+1,___fladd@grs
  7263  002192  C006  F002         	movff	___fladd@a+1,___fladd@b+1
  7264  002196  C010  F006         	movff	___fladd@grs,___fladd@a+1
  7265  00219A  C003  F010         	movff	___fladd@b+2,___fladd@grs
  7266  00219E  C007  F003         	movff	___fladd@a+2,___fladd@b+2
  7267  0021A2  C010  F007         	movff	___fladd@grs,___fladd@a+2
  7268  0021A6  C004  F010         	movff	___fladd@b+3,___fladd@grs
  7269  0021AA  C008  F004         	movff	___fladd@a+3,___fladd@b+3
  7270  0021AE  C010  F008         	movff	___fladd@grs,___fladd@a+3
  7271  0021B2                     l3842:
  7272  0021B2  0E00               	movlw	0
  7273  0021B4  6E10               	movwf	___fladd@grs^0,c
  7274  0021B6  500F               	movf	___fladd@bexp^0,w,c
  7275  0021B8  C00E  F009         	movff	___fladd@aexp,??___fladd
  7276  0021BC  6A0A               	clrf	(??___fladd+1)^0,c
  7277  0021BE  5E09               	subwf	??___fladd^0,f,c
  7278  0021C0  0E00               	movlw	0
  7279  0021C2  5A0A               	subwfb	(??___fladd+1)^0,f,c
  7280  0021C4  BE0A               	btfsc	(??___fladd+1)^0,7,c
  7281  0021C6  EFEE  F010         	goto	u3801
  7282  0021CA  500A               	movf	(??___fladd+1)^0,w,c
  7283  0021CC  E109               	bnz	u3800
  7284  0021CE  0E1A               	movlw	26
  7285  0021D0  5C09               	subwf	??___fladd^0,w,c
  7286  0021D2  A0D8               	btfss	status,0,c
  7287  0021D4  EFEE  F010         	goto	u3801
  7288  0021D8  EFF0  F010         	goto	u3800
  7289  0021DC                     u3801:
  7290  0021DC  EF27  F011         	goto	l1016
  7291  0021E0                     u3800:
  7292  0021E0  5001               	movf	___fladd@b^0,w,c
  7293  0021E2  1002               	iorwf	(___fladd@b+1)^0,w,c
  7294  0021E4  1003               	iorwf	(___fladd@b+2)^0,w,c
  7295  0021E6  1004               	iorwf	(___fladd@b+3)^0,w,c
  7296  0021E8  A4D8               	btfss	status,2,c
  7297  0021EA  EFF9  F010         	goto	u3811
  7298  0021EE  EFFC  F010         	goto	u3810
  7299  0021F2                     u3811:
  7300  0021F2  0E01               	movlw	1
  7301  0021F4  EFFD  F010         	goto	u3820
  7302  0021F8                     u3810:
  7303  0021F8  0E00               	movlw	0
  7304  0021FA                     u3820:
  7305  0021FA  6E10               	movwf	___fladd@grs^0,c
  7306  0021FC  0E00               	movlw	0
  7307  0021FE  6E01               	movwf	___fladd@b^0,c
  7308  002200  0E00               	movlw	0
  7309  002202  6E02               	movwf	(___fladd@b+1)^0,c
  7310  002204  0E00               	movlw	0
  7311  002206  6E03               	movwf	(___fladd@b+2)^0,c
  7312  002208  0E00               	movlw	0
  7313  00220A  6E04               	movwf	(___fladd@b+3)^0,c
  7314  00220C  C00E  F00F         	movff	___fladd@aexp,___fladd@bexp
  7315  002210  EF30  F011         	goto	l1015
  7316  002214                     l1017:
  7317  002214  A010               	btfss	___fladd@grs^0,0,c
  7318  002216  EF0F  F011         	goto	u3831
  7319  00221A  EF11  F011         	goto	u3830
  7320  00221E                     u3831:
  7321  00221E  EF17  F011         	goto	l3854
  7322  002222                     u3830:
  7323  002222  90D8               	bcf	status,0,c
  7324  002224  3010               	rrcf	___fladd@grs^0,w,c
  7325  002226  0901               	iorlw	1
  7326  002228  6E10               	movwf	___fladd@grs^0,c
  7327  00222A  EF19  F011         	goto	l3856
  7328  00222E                     l3854:
  7329  00222E  90D8               	bcf	status,0,c
  7330  002230  3210               	rrcf	___fladd@grs^0,f,c
  7331  002232                     l3856:
  7332  002232  A001               	btfss	___fladd@b^0,0,c
  7333  002234  EF1E  F011         	goto	u3841
  7334  002238  EF20  F011         	goto	u3840
  7335  00223C                     u3841:
  7336  00223C  EF21  F011         	goto	l3860
  7337  002240                     u3840:
  7338  002240  8E10               	bsf	___fladd@grs^0,7,c
  7339  002242                     l3860:
  7340  002242  3404               	rlcf	(___fladd@b+3)^0,w,c
  7341  002244  3204               	rrcf	(___fladd@b+3)^0,f,c
  7342  002246  3203               	rrcf	(___fladd@b+2)^0,f,c
  7343  002248  3202               	rrcf	(___fladd@b+1)^0,f,c
  7344  00224A  3201               	rrcf	___fladd@b^0,f,c
  7345  00224C  2A0F               	incf	___fladd@bexp^0,f,c
  7346  00224E                     l1016:
  7347  00224E  500E               	movf	___fladd@aexp^0,w,c
  7348  002250  5C0F               	subwf	___fladd@bexp^0,w,c
  7349  002252  A0D8               	btfss	status,0,c
  7350  002254  EF2E  F011         	goto	u3851
  7351  002258  EF30  F011         	goto	u3850
  7352  00225C                     u3851:
  7353  00225C  EF0A  F011         	goto	l1017
  7354  002260                     u3850:
  7355  002260                     l1015:
  7356  002260  BC0D               	btfsc	___fladd@signs^0,6,c
  7357  002262  EF35  F011         	goto	u3861
  7358  002266  EF37  F011         	goto	u3860
  7359  00226A                     u3861:
  7360  00226A  EF77  F011         	goto	l3888
  7361  00226E                     u3860:
  7362  00226E  500F               	movf	___fladd@bexp^0,w,c
  7363  002270  A4D8               	btfss	status,2,c
  7364  002272  EF3D  F011         	goto	u3871
  7365  002276  EF3F  F011         	goto	u3870
  7366  00227A                     u3871:
  7367  00227A  EF49  F011         	goto	l3870
  7368  00227E                     u3870:
  7369  00227E  0E00               	movlw	0
  7370  002280  6E01               	movwf	?___fladd^0,c
  7371  002282  0E00               	movlw	0
  7372  002284  6E02               	movwf	(?___fladd+1)^0,c
  7373  002286  0E00               	movlw	0
  7374  002288  6E03               	movwf	(?___fladd+2)^0,c
  7375  00228A  0E00               	movlw	0
  7376  00228C  6E04               	movwf	(?___fladd+3)^0,c
  7377  00228E  EF98  F012         	goto	l1024
  7378  002292                     l3870:
  7379  002292  5005               	movf	___fladd@a^0,w,c
  7380  002294  2601               	addwf	___fladd@b^0,f,c
  7381  002296  5006               	movf	(___fladd@a+1)^0,w,c
  7382  002298  2202               	addwfc	(___fladd@b+1)^0,f,c
  7383  00229A  5007               	movf	(___fladd@a+2)^0,w,c
  7384  00229C  2203               	addwfc	(___fladd@b+2)^0,f,c
  7385  00229E  5008               	movf	(___fladd@a+3)^0,w,c
  7386  0022A0  2204               	addwfc	(___fladd@b+3)^0,f,c
  7387  0022A2  A004               	btfss	(___fladd@b+3)^0,0,c
  7388  0022A4  EF56  F011         	goto	u3881
  7389  0022A8  EF58  F011         	goto	u3880
  7390  0022AC                     u3881:
  7391  0022AC  EF04  F012         	goto	l3924
  7392  0022B0                     u3880:
  7393  0022B0  A010               	btfss	___fladd@grs^0,0,c
  7394  0022B2  EF5D  F011         	goto	u3891
  7395  0022B6  EF5F  F011         	goto	u3890
  7396  0022BA                     u3891:
  7397  0022BA  EF65  F011         	goto	l3878
  7398  0022BE                     u3890:
  7399  0022BE  90D8               	bcf	status,0,c
  7400  0022C0  3010               	rrcf	___fladd@grs^0,w,c
  7401  0022C2  0901               	iorlw	1
  7402  0022C4  6E10               	movwf	___fladd@grs^0,c
  7403  0022C6  EF67  F011         	goto	l3880
  7404  0022CA                     l3878:
  7405  0022CA  90D8               	bcf	status,0,c
  7406  0022CC  3210               	rrcf	___fladd@grs^0,f,c
  7407  0022CE                     l3880:
  7408  0022CE  A001               	btfss	___fladd@b^0,0,c
  7409  0022D0  EF6C  F011         	goto	u3901
  7410  0022D4  EF6E  F011         	goto	u3900
  7411  0022D8                     u3901:
  7412  0022D8  EF6F  F011         	goto	l3884
  7413  0022DC                     u3900:
  7414  0022DC  8E10               	bsf	___fladd@grs^0,7,c
  7415  0022DE                     l3884:
  7416  0022DE  3404               	rlcf	(___fladd@b+3)^0,w,c
  7417  0022E0  3204               	rrcf	(___fladd@b+3)^0,f,c
  7418  0022E2  3203               	rrcf	(___fladd@b+2)^0,f,c
  7419  0022E4  3202               	rrcf	(___fladd@b+1)^0,f,c
  7420  0022E6  3201               	rrcf	___fladd@b^0,f,c
  7421  0022E8  2A0F               	incf	___fladd@bexp^0,f,c
  7422  0022EA  EF04  F012         	goto	l3924
  7423  0022EE                     l3888:
  7424  0022EE  5005               	movf	___fladd@a^0,w,c
  7425  0022F0  5C01               	subwf	___fladd@b^0,w,c
  7426  0022F2  5006               	movf	(___fladd@a+1)^0,w,c
  7427  0022F4  5802               	subwfb	(___fladd@b+1)^0,w,c
  7428  0022F6  5007               	movf	(___fladd@a+2)^0,w,c
  7429  0022F8  5803               	subwfb	(___fladd@b+2)^0,w,c
  7430  0022FA  5004               	movf	(___fladd@b+3)^0,w,c
  7431  0022FC  0A80               	xorlw	128
  7432  0022FE  6E09               	movwf	??___fladd^0,c
  7433  002300  5008               	movf	(___fladd@a+3)^0,w,c
  7434  002302  0A80               	xorlw	128
  7435  002304  5809               	subwfb	??___fladd^0,w,c
  7436  002306  B0D8               	btfsc	status,0,c
  7437  002308  EF88  F011         	goto	u3911
  7438  00230C  EF8A  F011         	goto	u3910
  7439  002310                     u3911:
  7440  002310  EFB5  F011         	goto	l3898
  7441  002314                     u3910:
  7442  002314  5001               	movf	___fladd@b^0,w,c
  7443  002316  5C05               	subwf	___fladd@a^0,w,c
  7444  002318  6E09               	movwf	??___fladd^0,c
  7445  00231A  5002               	movf	(___fladd@b+1)^0,w,c
  7446  00231C  5806               	subwfb	(___fladd@a+1)^0,w,c
  7447  00231E  6E0A               	movwf	(??___fladd+1)^0,c
  7448  002320  5003               	movf	(___fladd@b+2)^0,w,c
  7449  002322  5807               	subwfb	(___fladd@a+2)^0,w,c
  7450  002324  6E0B               	movwf	(??___fladd+2)^0,c
  7451  002326  5004               	movf	(___fladd@b+3)^0,w,c
  7452  002328  5808               	subwfb	(___fladd@a+3)^0,w,c
  7453  00232A  6E0C               	movwf	(??___fladd+3)^0,c
  7454  00232C  0EFF               	movlw	255
  7455  00232E  2409               	addwf	??___fladd^0,w,c
  7456  002330  6E01               	movwf	___fladd@b^0,c
  7457  002332  0EFF               	movlw	255
  7458  002334  200A               	addwfc	(??___fladd+1)^0,w,c
  7459  002336  6E02               	movwf	(___fladd@b+1)^0,c
  7460  002338  0EFF               	movlw	255
  7461  00233A  200B               	addwfc	(??___fladd+2)^0,w,c
  7462  00233C  6E03               	movwf	(___fladd@b+2)^0,c
  7463  00233E  0EFF               	movlw	255
  7464  002340  200C               	addwfc	(??___fladd+3)^0,w,c
  7465  002342  6E04               	movwf	(___fladd@b+3)^0,c
  7466  002344  0E80               	movlw	128
  7467  002346  1A0D               	xorwf	___fladd@signs^0,f,c
  7468  002348  6C10               	negf	___fladd@grs^0,c
  7469  00234A  5010               	movf	___fladd@grs^0,w,c
  7470  00234C  A4D8               	btfss	status,2,c
  7471  00234E  EFAB  F011         	goto	u3921
  7472  002352  EFAD  F011         	goto	u3920
  7473  002356                     u3921:
  7474  002356  EFBD  F011         	goto	l1032
  7475  00235A                     u3920:
  7476  00235A  0E01               	movlw	1
  7477  00235C  2601               	addwf	___fladd@b^0,f,c
  7478  00235E  0E00               	movlw	0
  7479  002360  2202               	addwfc	(___fladd@b+1)^0,f,c
  7480  002362  2203               	addwfc	(___fladd@b+2)^0,f,c
  7481  002364  2204               	addwfc	(___fladd@b+3)^0,f,c
  7482  002366  EFBD  F011         	goto	l1032
  7483  00236A                     l3898:
  7484  00236A  5005               	movf	___fladd@a^0,w,c
  7485  00236C  5E01               	subwf	___fladd@b^0,f,c
  7486  00236E  5006               	movf	(___fladd@a+1)^0,w,c
  7487  002370  5A02               	subwfb	(___fladd@b+1)^0,f,c
  7488  002372  5007               	movf	(___fladd@a+2)^0,w,c
  7489  002374  5A03               	subwfb	(___fladd@b+2)^0,f,c
  7490  002376  5008               	movf	(___fladd@a+3)^0,w,c
  7491  002378  5A04               	subwfb	(___fladd@b+3)^0,f,c
  7492  00237A                     l1032:
  7493  00237A  5001               	movf	___fladd@b^0,w,c
  7494  00237C  1002               	iorwf	(___fladd@b+1)^0,w,c
  7495  00237E  1003               	iorwf	(___fladd@b+2)^0,w,c
  7496  002380  1004               	iorwf	(___fladd@b+3)^0,w,c
  7497  002382  A4D8               	btfss	status,2,c
  7498  002384  EFC6  F011         	goto	u3931
  7499  002388  EFC8  F011         	goto	u3930
  7500  00238C                     u3931:
  7501  00238C  EFFD  F011         	goto	l3922
  7502  002390                     u3930:
  7503  002390  5010               	movf	___fladd@grs^0,w,c
  7504  002392  A4D8               	btfss	status,2,c
  7505  002394  EFCE  F011         	goto	u3941
  7506  002398  EFD0  F011         	goto	u3940
  7507  00239C                     u3941:
  7508  00239C  EFFD  F011         	goto	l3922
  7509  0023A0                     u3940:
  7510  0023A0  0E00               	movlw	0
  7511  0023A2  6E01               	movwf	?___fladd^0,c
  7512  0023A4  0E00               	movlw	0
  7513  0023A6  6E02               	movwf	(?___fladd+1)^0,c
  7514  0023A8  0E00               	movlw	0
  7515  0023AA  6E03               	movwf	(?___fladd+2)^0,c
  7516  0023AC  0E00               	movlw	0
  7517  0023AE  6E04               	movwf	(?___fladd+3)^0,c
  7518  0023B0  EF98  F012         	goto	l1024
  7519  0023B4                     l3906:
  7520  0023B4  90D8               	bcf	status,0,c
  7521  0023B6  3601               	rlcf	___fladd@b^0,f,c
  7522  0023B8  3602               	rlcf	(___fladd@b+1)^0,f,c
  7523  0023BA  3603               	rlcf	(___fladd@b+2)^0,f,c
  7524  0023BC  3604               	rlcf	(___fladd@b+3)^0,f,c
  7525  0023BE  AE10               	btfss	___fladd@grs^0,7,c
  7526  0023C0  EFE4  F011         	goto	u3951
  7527  0023C4  EFE6  F011         	goto	u3950
  7528  0023C8                     u3951:
  7529  0023C8  EFE7  F011         	goto	l3912
  7530  0023CC                     u3950:
  7531  0023CC  8001               	bsf	___fladd@b^0,0,c
  7532  0023CE                     l3912:
  7533  0023CE  A010               	btfss	___fladd@grs^0,0,c
  7534  0023D0  EFEC  F011         	goto	u3961
  7535  0023D4  EFEE  F011         	goto	u3960
  7536  0023D8                     u3961:
  7537  0023D8  EFF2  F011         	goto	l3916
  7538  0023DC                     u3960:
  7539  0023DC  80D8               	bsf	status,0,c
  7540  0023DE  3610               	rlcf	___fladd@grs^0,f,c
  7541  0023E0  EFF4  F011         	goto	l3918
  7542  0023E4                     l3916:
  7543  0023E4  90D8               	bcf	status,0,c
  7544  0023E6  3610               	rlcf	___fladd@grs^0,f,c
  7545  0023E8                     l3918:
  7546  0023E8  500F               	movf	___fladd@bexp^0,w,c
  7547  0023EA  B4D8               	btfsc	status,2,c
  7548  0023EC  EFFA  F011         	goto	u3971
  7549  0023F0  EFFC  F011         	goto	u3970
  7550  0023F4                     u3971:
  7551  0023F4  EFFD  F011         	goto	l3922
  7552  0023F8                     u3970:
  7553  0023F8  060F               	decf	___fladd@bexp^0,f,c
  7554  0023FA                     l3922:
  7555  0023FA  AE03               	btfss	(___fladd@b+2)^0,7,c
  7556  0023FC  EF02  F012         	goto	u3981
  7557  002400  EF04  F012         	goto	u3980
  7558  002404                     u3981:
  7559  002404  EFDA  F011         	goto	l3906
  7560  002408                     u3980:
  7561  002408                     l3924:
  7562  002408  0E00               	movlw	0
  7563  00240A  6E0E               	movwf	___fladd@aexp^0,c
  7564  00240C  AE10               	btfss	___fladd@grs^0,7,c
  7565  00240E  EF0B  F012         	goto	u3991
  7566  002412  EF0D  F012         	goto	u3990
  7567  002416                     u3991:
  7568  002416  EF25  F012         	goto	l1041
  7569  00241A                     u3990:
  7570  00241A  C010  F009         	movff	___fladd@grs,??___fladd
  7571  00241E  0E7F               	movlw	127
  7572  002420  1609               	andwf	??___fladd^0,f,c
  7573  002422  B4D8               	btfsc	status,2,c
  7574  002424  EF16  F012         	goto	u4001
  7575  002428  EF18  F012         	goto	u4000
  7576  00242C                     u4001:
  7577  00242C  EF1C  F012         	goto	l1042
  7578  002430                     u4000:
  7579  002430                     l3930:
  7580  002430  0E01               	movlw	1
  7581  002432  6E0E               	movwf	___fladd@aexp^0,c
  7582  002434  EF25  F012         	goto	l1041
  7583  002438                     l1042:
  7584  002438  A001               	btfss	___fladd@b^0,0,c
  7585  00243A  EF21  F012         	goto	u4011
  7586  00243E  EF23  F012         	goto	u4010
  7587  002442                     u4011:
  7588  002442  EF25  F012         	goto	l1041
  7589  002446                     u4010:
  7590  002446  EF18  F012         	goto	l3930
  7591  00244A                     l1041:
  7592  00244A  500E               	movf	___fladd@aexp^0,w,c
  7593  00244C  B4D8               	btfsc	status,2,c
  7594  00244E  EF2B  F012         	goto	u4021
  7595  002452  EF2D  F012         	goto	u4020
  7596  002456                     u4021:
  7597  002456  EF58  F012         	goto	l3942
  7598  00245A                     u4020:
  7599  00245A  0E01               	movlw	1
  7600  00245C  2601               	addwf	___fladd@b^0,f,c
  7601  00245E  0E00               	movlw	0
  7602  002460  2202               	addwfc	(___fladd@b+1)^0,f,c
  7603  002462  2203               	addwfc	(___fladd@b+2)^0,f,c
  7604  002464  2204               	addwfc	(___fladd@b+3)^0,f,c
  7605  002466  A004               	btfss	(___fladd@b+3)^0,0,c
  7606  002468  EF38  F012         	goto	u4031
  7607  00246C  EF3A  F012         	goto	u4030
  7608  002470                     u4031:
  7609  002470  EF58  F012         	goto	l3942
  7610  002474                     u4030:
  7611  002474  C001  F009         	movff	___fladd@b,??___fladd
  7612  002478  C002  F00A         	movff	___fladd@b+1,??___fladd+1
  7613  00247C  C003  F00B         	movff	___fladd@b+2,??___fladd+2
  7614  002480  C004  F00C         	movff	___fladd@b+3,??___fladd+3
  7615  002484  340C               	rlcf	(??___fladd+3)^0,w,c
  7616  002486  320C               	rrcf	(??___fladd+3)^0,f,c
  7617  002488  320B               	rrcf	(??___fladd+2)^0,f,c
  7618  00248A  320A               	rrcf	(??___fladd+1)^0,f,c
  7619  00248C  3209               	rrcf	??___fladd^0,f,c
  7620  00248E  C009  F001         	movff	??___fladd,___fladd@b
  7621  002492  C00A  F002         	movff	??___fladd+1,___fladd@b+1
  7622  002496  C00B  F003         	movff	??___fladd+2,___fladd@b+2
  7623  00249A  C00C  F004         	movff	??___fladd+3,___fladd@b+3
  7624  00249E  280F               	incf	___fladd@bexp^0,w,c
  7625  0024A0  B4D8               	btfsc	status,2,c
  7626  0024A2  EF55  F012         	goto	u4041
  7627  0024A6  EF57  F012         	goto	u4040
  7628  0024AA                     u4041:
  7629  0024AA  EF58  F012         	goto	l3942
  7630  0024AE                     u4040:
  7631  0024AE  2A0F               	incf	___fladd@bexp^0,f,c
  7632  0024B0                     l3942:
  7633  0024B0  280F               	incf	___fladd@bexp^0,w,c
  7634  0024B2  B4D8               	btfsc	status,2,c
  7635  0024B4  EF5E  F012         	goto	u4051
  7636  0024B8  EF60  F012         	goto	u4050
  7637  0024BC                     u4051:
  7638  0024BC  EF68  F012         	goto	l3946
  7639  0024C0                     u4050:
  7640  0024C0  500F               	movf	___fladd@bexp^0,w,c
  7641  0024C2  A4D8               	btfss	status,2,c
  7642  0024C4  EF66  F012         	goto	u4061
  7643  0024C8  EF68  F012         	goto	u4060
  7644  0024CC                     u4061:
  7645  0024CC  EF7A  F012         	goto	l3950
  7646  0024D0                     u4060:
  7647  0024D0                     l3946:
  7648  0024D0  0E00               	movlw	0
  7649  0024D2  6E01               	movwf	___fladd@b^0,c
  7650  0024D4  0E00               	movlw	0
  7651  0024D6  6E02               	movwf	(___fladd@b+1)^0,c
  7652  0024D8  0E00               	movlw	0
  7653  0024DA  6E03               	movwf	(___fladd@b+2)^0,c
  7654  0024DC  0E00               	movlw	0
  7655  0024DE  6E04               	movwf	(___fladd@b+3)^0,c
  7656  0024E0  500F               	movf	___fladd@bexp^0,w,c
  7657  0024E2  A4D8               	btfss	status,2,c
  7658  0024E4  EF76  F012         	goto	u4071
  7659  0024E8  EF78  F012         	goto	u4070
  7660  0024EC                     u4071:
  7661  0024EC  EF7A  F012         	goto	l3950
  7662  0024F0                     u4070:
  7663  0024F0  0E00               	movlw	0
  7664  0024F2  6E0D               	movwf	___fladd@signs^0,c
  7665  0024F4                     l3950:
  7666  0024F4  A00F               	btfss	___fladd@bexp^0,0,c
  7667  0024F6  EF7F  F012         	goto	u4081
  7668  0024FA  EF81  F012         	goto	u4080
  7669  0024FE                     u4081:
  7670  0024FE  EF84  F012         	goto	l3954
  7671  002502                     u4080:
  7672  002502  8E03               	bsf	(___fladd@b+2)^0,7,c
  7673  002504  EF85  F012         	goto	l3956
  7674  002508                     l3954:
  7675  002508  9E03               	bcf	(___fladd@b+2)^0,7,c
  7676  00250A                     l3956:
  7677  00250A  90D8               	bcf	status,0,c
  7678  00250C  300F               	rrcf	___fladd@bexp^0,w,c
  7679  00250E  6E04               	movwf	(___fladd@b+3)^0,c
  7680  002510  AE0D               	btfss	___fladd@signs^0,7,c
  7681  002512  EF8D  F012         	goto	u4091
  7682  002516  EF8F  F012         	goto	u4090
  7683  00251A                     u4091:
  7684  00251A  EF90  F012         	goto	l3962
  7685  00251E                     u4090:
  7686  00251E  8E04               	bsf	(___fladd@b+3)^0,7,c
  7687  002520                     l3962:
  7688  002520  C001  F001         	movff	___fladd@b,?___fladd
  7689  002524  C002  F002         	movff	___fladd@b+1,?___fladd+1
  7690  002528  C003  F003         	movff	___fladd@b+2,?___fladd+2
  7691  00252C  C004  F004         	movff	___fladd@b+3,?___fladd+3
  7692  002530                     l1024:
  7693  002530  0012               	return		;funcret
  7694  002532                     __end_of___fladd:
  7695                           	callstack 0
  7696                           
  7697 ;; *************** function ___flneg *****************
  7698 ;; Defined at:
  7699 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
  7700 ;; Parameters:    Size  Location     Type
  7701 ;;  f1              4    0[COMRAM] unsigned char 
  7702 ;; Auto vars:     Size  Location     Type
  7703 ;;		None
  7704 ;; Return value:  Size  Location     Type
  7705 ;;                  4    0[COMRAM] unsigned char 
  7706 ;; Registers used:
  7707 ;;		wreg, status,2, status,0
  7708 ;; Tracked objects:
  7709 ;;		On entry : 0/0
  7710 ;;		On exit  : 0/0
  7711 ;;		Unchanged: 0/0
  7712 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7713 ;;      Params:         4       0       0       0       0       0       0
  7714 ;;      Locals:         0       0       0       0       0       0       0
  7715 ;;      Temps:          0       0       0       0       0       0       0
  7716 ;;      Totals:         4       0       0       0       0       0       0
  7717 ;;Total ram usage:        4 bytes
  7718 ;; Hardware stack levels used:    1
  7719 ;; Hardware stack levels required when called:    1
  7720 ;; This function calls:
  7721 ;;		Nothing
  7722 ;; This function is called by:
  7723 ;;		_efgtoa
  7724 ;; This function uses a non-reentrant model
  7725 ;;
  7726                           
  7727                           	psect	text20
  7728  0046EE                     __ptext20:
  7729                           	callstack 0
  7730  0046EE                     ___flneg:
  7731                           	callstack 23
  7732  0046EE  5001               	movf	___flneg@f1^0,w,c
  7733  0046F0  1002               	iorwf	(___flneg@f1+1)^0,w,c
  7734  0046F2  1003               	iorwf	(___flneg@f1+2)^0,w,c
  7735  0046F4  1004               	iorwf	(___flneg@f1+3)^0,w,c
  7736  0046F6  B4D8               	btfsc	status,2,c
  7737  0046F8  EF80  F023         	goto	u4891
  7738  0046FC  EF82  F023         	goto	u4890
  7739  004700                     u4891:
  7740  004700  EF8A  F023         	goto	l4470
  7741  004704                     u4890:
  7742  004704  0E00               	movlw	0
  7743  004706  1A01               	xorwf	___flneg@f1^0,f,c
  7744  004708  0E00               	movlw	0
  7745  00470A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
  7746  00470C  0E00               	movlw	0
  7747  00470E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
  7748  004710  0E80               	movlw	128
  7749  004712  1A04               	xorwf	(___flneg@f1+3)^0,f,c
  7750  004714                     l4470:
  7751  004714  C001  F001         	movff	___flneg@f1,?___flneg
  7752  004718  C002  F002         	movff	___flneg@f1+1,?___flneg+1
  7753  00471C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
  7754  004720  C004  F004         	movff	___flneg@f1+3,?___flneg+3
  7755  004724  0012               	return		;funcret
  7756  004726                     __end_of___flneg:
  7757                           	callstack 0
  7758                           
  7759 ;; *************** function ___flmul *****************
  7760 ;; Defined at:
  7761 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
  7762 ;; Parameters:    Size  Location     Type
  7763 ;;  b               4    0[COMRAM] unsigned char 
  7764 ;;  a               4    4[COMRAM] unsigned char 
  7765 ;; Auto vars:     Size  Location     Type
  7766 ;;  prod            4   19[COMRAM] struct .
  7767 ;;  grs             4   13[COMRAM] unsigned long 
  7768 ;;  temp            2   23[COMRAM] struct .
  7769 ;;  bexp            1   18[COMRAM] unsigned char 
  7770 ;;  aexp            1   17[COMRAM] unsigned char 
  7771 ;;  sign            1   12[COMRAM] unsigned char 
  7772 ;; Return value:  Size  Location     Type
  7773 ;;                  4    0[COMRAM] unsigned char 
  7774 ;; Registers used:
  7775 ;;		wreg, status,2, status,0, prodl, prodh
  7776 ;; Tracked objects:
  7777 ;;		On entry : 0/0
  7778 ;;		On exit  : 0/0
  7779 ;;		Unchanged: 0/0
  7780 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7781 ;;      Params:         8       0       0       0       0       0       0
  7782 ;;      Locals:        13       0       0       0       0       0       0
  7783 ;;      Temps:          4       0       0       0       0       0       0
  7784 ;;      Totals:        25       0       0       0       0       0       0
  7785 ;;Total ram usage:       25 bytes
  7786 ;; Hardware stack levels used:    1
  7787 ;; Hardware stack levels required when called:    1
  7788 ;; This function calls:
  7789 ;;		Nothing
  7790 ;; This function is called by:
  7791 ;;		_efgtoa
  7792 ;;		_scanAdcConversion
  7793 ;;		_speedControl
  7794 ;; This function uses a non-reentrant model
  7795 ;;
  7796                           
  7797                           	psect	text21
  7798  002532                     __ptext21:
  7799                           	callstack 0
  7800  002532                     ___flmul:
  7801                           	callstack 23
  7802  002532  5004               	movf	(___flmul@b+3)^0,w,c
  7803  002534  0B80               	andlw	128
  7804  002536  6E0D               	movwf	___flmul@sign^0,c
  7805  002538  5004               	movf	(___flmul@b+3)^0,w,c
  7806  00253A  2404               	addwf	(___flmul@b+3)^0,w,c
  7807  00253C  6E13               	movwf	___flmul@bexp^0,c
  7808  00253E  AE03               	btfss	(___flmul@b+2)^0,7,c
  7809  002540  EFA4  F012         	goto	u4501
  7810  002544  EFA6  F012         	goto	u4500
  7811  002548                     u4501:
  7812  002548  EFA7  F012         	goto	l4218
  7813  00254C                     u4500:
  7814  00254C  8013               	bsf	___flmul@bexp^0,0,c
  7815  00254E                     l4218:
  7816  00254E  5013               	movf	___flmul@bexp^0,w,c
  7817  002550  B4D8               	btfsc	status,2,c
  7818  002552  EFAD  F012         	goto	u4511
  7819  002556  EFAF  F012         	goto	u4510
  7820  00255A                     u4511:
  7821  00255A  EFC2  F012         	goto	l4226
  7822  00255E                     u4510:
  7823  00255E  2813               	incf	___flmul@bexp^0,w,c
  7824  002560  A4D8               	btfss	status,2,c
  7825  002562  EFB5  F012         	goto	u4521
  7826  002566  EFB7  F012         	goto	u4520
  7827  00256A                     u4521:
  7828  00256A  EFBF  F012         	goto	l4224
  7829  00256E                     u4520:
  7830  00256E  0E00               	movlw	0
  7831  002570  6E01               	movwf	___flmul@b^0,c
  7832  002572  0E00               	movlw	0
  7833  002574  6E02               	movwf	(___flmul@b+1)^0,c
  7834  002576  0E00               	movlw	0
  7835  002578  6E03               	movwf	(___flmul@b+2)^0,c
  7836  00257A  0E00               	movlw	0
  7837  00257C  6E04               	movwf	(___flmul@b+3)^0,c
  7838  00257E                     l4224:
  7839  00257E  8E03               	bsf	(___flmul@b+2)^0,7,c
  7840  002580  EFCA  F012         	goto	l4228
  7841  002584                     l4226:
  7842  002584  0E00               	movlw	0
  7843  002586  6E01               	movwf	___flmul@b^0,c
  7844  002588  0E00               	movlw	0
  7845  00258A  6E02               	movwf	(___flmul@b+1)^0,c
  7846  00258C  0E00               	movlw	0
  7847  00258E  6E03               	movwf	(___flmul@b+2)^0,c
  7848  002590  0E00               	movlw	0
  7849  002592  6E04               	movwf	(___flmul@b+3)^0,c
  7850  002594                     l4228:
  7851  002594  5008               	movf	(___flmul@a+3)^0,w,c
  7852  002596  0B80               	andlw	128
  7853  002598  1A0D               	xorwf	___flmul@sign^0,f,c
  7854  00259A  5008               	movf	(___flmul@a+3)^0,w,c
  7855  00259C  2408               	addwf	(___flmul@a+3)^0,w,c
  7856  00259E  6E12               	movwf	___flmul@aexp^0,c
  7857  0025A0  AE07               	btfss	(___flmul@a+2)^0,7,c
  7858  0025A2  EFD5  F012         	goto	u4531
  7859  0025A6  EFD7  F012         	goto	u4530
  7860  0025AA                     u4531:
  7861  0025AA  EFD8  F012         	goto	l4236
  7862  0025AE                     u4530:
  7863  0025AE  8012               	bsf	___flmul@aexp^0,0,c
  7864  0025B0                     l4236:
  7865  0025B0  5012               	movf	___flmul@aexp^0,w,c
  7866  0025B2  B4D8               	btfsc	status,2,c
  7867  0025B4  EFDE  F012         	goto	u4541
  7868  0025B8  EFE0  F012         	goto	u4540
  7869  0025BC                     u4541:
  7870  0025BC  EFF3  F012         	goto	l4244
  7871  0025C0                     u4540:
  7872  0025C0  2812               	incf	___flmul@aexp^0,w,c
  7873  0025C2  A4D8               	btfss	status,2,c
  7874  0025C4  EFE6  F012         	goto	u4551
  7875  0025C8  EFE8  F012         	goto	u4550
  7876  0025CC                     u4551:
  7877  0025CC  EFF0  F012         	goto	l4242
  7878  0025D0                     u4550:
  7879  0025D0  0E00               	movlw	0
  7880  0025D2  6E05               	movwf	___flmul@a^0,c
  7881  0025D4  0E00               	movlw	0
  7882  0025D6  6E06               	movwf	(___flmul@a+1)^0,c
  7883  0025D8  0E00               	movlw	0
  7884  0025DA  6E07               	movwf	(___flmul@a+2)^0,c
  7885  0025DC  0E00               	movlw	0
  7886  0025DE  6E08               	movwf	(___flmul@a+3)^0,c
  7887  0025E0                     l4242:
  7888  0025E0  8E07               	bsf	(___flmul@a+2)^0,7,c
  7889  0025E2  EFFB  F012         	goto	l1101
  7890  0025E6                     l4244:
  7891  0025E6  0E00               	movlw	0
  7892  0025E8  6E05               	movwf	___flmul@a^0,c
  7893  0025EA  0E00               	movlw	0
  7894  0025EC  6E06               	movwf	(___flmul@a+1)^0,c
  7895  0025EE  0E00               	movlw	0
  7896  0025F0  6E07               	movwf	(___flmul@a+2)^0,c
  7897  0025F2  0E00               	movlw	0
  7898  0025F4  6E08               	movwf	(___flmul@a+3)^0,c
  7899  0025F6                     l1101:
  7900  0025F6  5012               	movf	___flmul@aexp^0,w,c
  7901  0025F8  B4D8               	btfsc	status,2,c
  7902  0025FA  EF01  F013         	goto	u4561
  7903  0025FE  EF03  F013         	goto	u4560
  7904  002602                     u4561:
  7905  002602  EF0B  F013         	goto	l4248
  7906  002606                     u4560:
  7907  002606  5013               	movf	___flmul@bexp^0,w,c
  7908  002608  A4D8               	btfss	status,2,c
  7909  00260A  EF09  F013         	goto	u4571
  7910  00260E  EF0B  F013         	goto	u4570
  7911  002612                     u4571:
  7912  002612  EF15  F013         	goto	l4252
  7913  002616                     u4570:
  7914  002616                     l4248:
  7915  002616  0E00               	movlw	0
  7916  002618  6E01               	movwf	?___flmul^0,c
  7917  00261A  0E00               	movlw	0
  7918  00261C  6E02               	movwf	(?___flmul+1)^0,c
  7919  00261E  0E00               	movlw	0
  7920  002620  6E03               	movwf	(?___flmul+2)^0,c
  7921  002622  0E00               	movlw	0
  7922  002624  6E04               	movwf	(?___flmul+3)^0,c
  7923  002626  EFAD  F014         	goto	l1105
  7924  00262A                     l4252:
  7925  00262A  5007               	movf	(___flmul@a+2)^0,w,c
  7926  00262C  0201               	mulwf	___flmul@b^0,c
  7927  00262E  CFF3 F018          	movff	prodl,___flmul@temp
  7928  002632  CFF4 F019          	movff	prodh,___flmul@temp+1
  7929  002636  5018               	movf	___flmul@temp^0,w,c
  7930  002638  6E0E               	movwf	___flmul@grs^0,c
  7931  00263A  6A0F               	clrf	(___flmul@grs+1)^0,c
  7932  00263C  6A10               	clrf	(___flmul@grs+2)^0,c
  7933  00263E  6A11               	clrf	(___flmul@grs+3)^0,c
  7934  002640  5019               	movf	(___flmul@temp+1)^0,w,c
  7935  002642  6E14               	movwf	___flmul@prod^0,c
  7936  002644  6A15               	clrf	(___flmul@prod+1)^0,c
  7937  002646  6A16               	clrf	(___flmul@prod+2)^0,c
  7938  002648  6A17               	clrf	(___flmul@prod+3)^0,c
  7939  00264A  5006               	movf	(___flmul@a+1)^0,w,c
  7940  00264C  0202               	mulwf	(___flmul@b+1)^0,c
  7941  00264E  CFF3 F018          	movff	prodl,___flmul@temp
  7942  002652  CFF4 F019          	movff	prodh,___flmul@temp+1
  7943  002656  5018               	movf	___flmul@temp^0,w,c
  7944  002658  260E               	addwf	___flmul@grs^0,f,c
  7945  00265A  0E00               	movlw	0
  7946  00265C  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7947  00265E  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7948  002660  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7949  002662  5019               	movf	(___flmul@temp+1)^0,w,c
  7950  002664  2614               	addwf	___flmul@prod^0,f,c
  7951  002666  0E00               	movlw	0
  7952  002668  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7953  00266A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7954  00266C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7955  00266E  5005               	movf	___flmul@a^0,w,c
  7956  002670  0203               	mulwf	(___flmul@b+2)^0,c
  7957  002672  CFF3 F018          	movff	prodl,___flmul@temp
  7958  002676  CFF4 F019          	movff	prodh,___flmul@temp+1
  7959  00267A  5018               	movf	___flmul@temp^0,w,c
  7960  00267C  260E               	addwf	___flmul@grs^0,f,c
  7961  00267E  0E00               	movlw	0
  7962  002680  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7963  002682  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7964  002684  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7965  002686  5019               	movf	(___flmul@temp+1)^0,w,c
  7966  002688  2614               	addwf	___flmul@prod^0,f,c
  7967  00268A  0E00               	movlw	0
  7968  00268C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  7969  00268E  2216               	addwfc	(___flmul@prod+2)^0,f,c
  7970  002690  2217               	addwfc	(___flmul@prod+3)^0,f,c
  7971  002692  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  7972  002696  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  7973  00269A  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  7974  00269E  6A0E               	clrf	___flmul@grs^0,c
  7975  0026A0  5005               	movf	___flmul@a^0,w,c
  7976  0026A2  0202               	mulwf	(___flmul@b+1)^0,c
  7977  0026A4  CFF3 F018          	movff	prodl,___flmul@temp
  7978  0026A8  CFF4 F019          	movff	prodh,___flmul@temp+1
  7979  0026AC  5018               	movf	___flmul@temp^0,w,c
  7980  0026AE  260E               	addwf	___flmul@grs^0,f,c
  7981  0026B0  5019               	movf	(___flmul@temp+1)^0,w,c
  7982  0026B2  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7983  0026B4  0E00               	movlw	0
  7984  0026B6  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7985  0026B8  0E00               	movlw	0
  7986  0026BA  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7987  0026BC  5006               	movf	(___flmul@a+1)^0,w,c
  7988  0026BE  0201               	mulwf	___flmul@b^0,c
  7989  0026C0  CFF3 F018          	movff	prodl,___flmul@temp
  7990  0026C4  CFF4 F019          	movff	prodh,___flmul@temp+1
  7991  0026C8  5018               	movf	___flmul@temp^0,w,c
  7992  0026CA  260E               	addwf	___flmul@grs^0,f,c
  7993  0026CC  5019               	movf	(___flmul@temp+1)^0,w,c
  7994  0026CE  220F               	addwfc	(___flmul@grs+1)^0,f,c
  7995  0026D0  0E00               	movlw	0
  7996  0026D2  2210               	addwfc	(___flmul@grs+2)^0,f,c
  7997  0026D4  0E00               	movlw	0
  7998  0026D6  2211               	addwfc	(___flmul@grs+3)^0,f,c
  7999  0026D8  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8000  0026DC  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8001  0026E0  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8002  0026E4  6A0E               	clrf	___flmul@grs^0,c
  8003  0026E6  5005               	movf	___flmul@a^0,w,c
  8004  0026E8  0201               	mulwf	___flmul@b^0,c
  8005  0026EA  CFF3 F018          	movff	prodl,___flmul@temp
  8006  0026EE  CFF4 F019          	movff	prodh,___flmul@temp+1
  8007  0026F2  5018               	movf	___flmul@temp^0,w,c
  8008  0026F4  260E               	addwf	___flmul@grs^0,f,c
  8009  0026F6  5019               	movf	(___flmul@temp+1)^0,w,c
  8010  0026F8  220F               	addwfc	(___flmul@grs+1)^0,f,c
  8011  0026FA  0E00               	movlw	0
  8012  0026FC  2210               	addwfc	(___flmul@grs+2)^0,f,c
  8013  0026FE  0E00               	movlw	0
  8014  002700  2211               	addwfc	(___flmul@grs+3)^0,f,c
  8015  002702  5007               	movf	(___flmul@a+2)^0,w,c
  8016  002704  0202               	mulwf	(___flmul@b+1)^0,c
  8017  002706  CFF3 F018          	movff	prodl,___flmul@temp
  8018  00270A  CFF4 F019          	movff	prodh,___flmul@temp+1
  8019  00270E  5018               	movf	___flmul@temp^0,w,c
  8020  002710  2614               	addwf	___flmul@prod^0,f,c
  8021  002712  5019               	movf	(___flmul@temp+1)^0,w,c
  8022  002714  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8023  002716  0E00               	movlw	0
  8024  002718  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8025  00271A  0E00               	movlw	0
  8026  00271C  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8027  00271E  5006               	movf	(___flmul@a+1)^0,w,c
  8028  002720  0203               	mulwf	(___flmul@b+2)^0,c
  8029  002722  CFF3 F018          	movff	prodl,___flmul@temp
  8030  002726  CFF4 F019          	movff	prodh,___flmul@temp+1
  8031  00272A  5018               	movf	___flmul@temp^0,w,c
  8032  00272C  2614               	addwf	___flmul@prod^0,f,c
  8033  00272E  5019               	movf	(___flmul@temp+1)^0,w,c
  8034  002730  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8035  002732  0E00               	movlw	0
  8036  002734  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8037  002736  0E00               	movlw	0
  8038  002738  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8039  00273A  5007               	movf	(___flmul@a+2)^0,w,c
  8040  00273C  0203               	mulwf	(___flmul@b+2)^0,c
  8041  00273E  CFF3 F018          	movff	prodl,___flmul@temp
  8042  002742  CFF4 F019          	movff	prodh,___flmul@temp+1
  8043  002746  5018               	movf	___flmul@temp^0,w,c
  8044  002748  6E09               	movwf	??___flmul^0,c
  8045  00274A  5019               	movf	(___flmul@temp+1)^0,w,c
  8046  00274C  6E0A               	movwf	(??___flmul+1)^0,c
  8047  00274E  6A0B               	clrf	(??___flmul+2)^0,c
  8048  002750  6A0C               	clrf	(??___flmul+3)^0,c
  8049  002752  C00B  F00C         	movff	??___flmul+2,??___flmul+3
  8050  002756  C00A  F00B         	movff	??___flmul+1,??___flmul+2
  8051  00275A  C009  F00A         	movff	??___flmul,??___flmul+1
  8052  00275E  6A09               	clrf	??___flmul^0,c
  8053  002760  5009               	movf	??___flmul^0,w,c
  8054  002762  2614               	addwf	___flmul@prod^0,f,c
  8055  002764  500A               	movf	(??___flmul+1)^0,w,c
  8056  002766  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8057  002768  500B               	movf	(??___flmul+2)^0,w,c
  8058  00276A  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8059  00276C  500C               	movf	(??___flmul+3)^0,w,c
  8060  00276E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8061  002770  C00E  F009         	movff	___flmul@grs,??___flmul
  8062  002774  C00F  F00A         	movff	___flmul@grs+1,??___flmul+1
  8063  002778  C010  F00B         	movff	___flmul@grs+2,??___flmul+2
  8064  00277C  C011  F00C         	movff	___flmul@grs+3,??___flmul+3
  8065  002780  0E19               	movlw	25
  8066  002782  EFC8  F013         	goto	u4580
  8067  002786                     u4585:
  8068  002786  90D8               	bcf	status,0,c
  8069  002788  320C               	rrcf	(??___flmul+3)^0,f,c
  8070  00278A  320B               	rrcf	(??___flmul+2)^0,f,c
  8071  00278C  320A               	rrcf	(??___flmul+1)^0,f,c
  8072  00278E  3209               	rrcf	??___flmul^0,f,c
  8073  002790                     u4580:
  8074  002790  2EE8               	decfsz	wreg,f,c
  8075  002792  EFC3  F013         	goto	u4585
  8076  002796  5009               	movf	??___flmul^0,w,c
  8077  002798  2614               	addwf	___flmul@prod^0,f,c
  8078  00279A  500A               	movf	(??___flmul+1)^0,w,c
  8079  00279C  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8080  00279E  500B               	movf	(??___flmul+2)^0,w,c
  8081  0027A0  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8082  0027A2  500C               	movf	(??___flmul+3)^0,w,c
  8083  0027A4  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8084  0027A6  C010  F011         	movff	___flmul@grs+2,___flmul@grs+3
  8085  0027AA  C00F  F010         	movff	___flmul@grs+1,___flmul@grs+2
  8086  0027AE  C00E  F00F         	movff	___flmul@grs,___flmul@grs+1
  8087  0027B2  6A0E               	clrf	___flmul@grs^0,c
  8088  0027B4  5012               	movf	___flmul@aexp^0,w,c
  8089  0027B6  C013  F009         	movff	___flmul@bexp,??___flmul
  8090  0027BA  6A0A               	clrf	(??___flmul+1)^0,c
  8091  0027BC  2609               	addwf	??___flmul^0,f,c
  8092  0027BE  0E00               	movlw	0
  8093  0027C0  220A               	addwfc	(??___flmul+1)^0,f,c
  8094  0027C2  0E82               	movlw	130
  8095  0027C4  2409               	addwf	??___flmul^0,w,c
  8096  0027C6  6E18               	movwf	___flmul@temp^0,c
  8097  0027C8  0EFF               	movlw	255
  8098  0027CA  200A               	addwfc	(??___flmul+1)^0,w,c
  8099  0027CC  6E19               	movwf	(___flmul@temp+1)^0,c
  8100  0027CE  EFFE  F013         	goto	l4300
  8101  0027D2                     l4294:
  8102  0027D2  90D8               	bcf	status,0,c
  8103  0027D4  3614               	rlcf	___flmul@prod^0,f,c
  8104  0027D6  3615               	rlcf	(___flmul@prod+1)^0,f,c
  8105  0027D8  3616               	rlcf	(___flmul@prod+2)^0,f,c
  8106  0027DA  3617               	rlcf	(___flmul@prod+3)^0,f,c
  8107  0027DC  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8108  0027DE  EFF3  F013         	goto	u4591
  8109  0027E2  EFF5  F013         	goto	u4590
  8110  0027E6                     u4591:
  8111  0027E6  EFF6  F013         	goto	l1108
  8112  0027EA                     u4590:
  8113  0027EA  8014               	bsf	___flmul@prod^0,0,c
  8114  0027EC                     l1108:
  8115  0027EC  90D8               	bcf	status,0,c
  8116  0027EE  360E               	rlcf	___flmul@grs^0,f,c
  8117  0027F0  360F               	rlcf	(___flmul@grs+1)^0,f,c
  8118  0027F2  3610               	rlcf	(___flmul@grs+2)^0,f,c
  8119  0027F4  3611               	rlcf	(___flmul@grs+3)^0,f,c
  8120  0027F6  0618               	decf	___flmul@temp^0,f,c
  8121  0027F8  A0D8               	btfss	status,0,c
  8122  0027FA  0619               	decf	(___flmul@temp+1)^0,f,c
  8123  0027FC                     l4300:
  8124  0027FC  AE16               	btfss	(___flmul@prod+2)^0,7,c
  8125  0027FE  EF03  F014         	goto	u4601
  8126  002802  EF05  F014         	goto	u4600
  8127  002806                     u4601:
  8128  002806  EFE9  F013         	goto	l4294
  8129  00280A                     u4600:
  8130  00280A  0E00               	movlw	0
  8131  00280C  6E12               	movwf	___flmul@aexp^0,c
  8132  00280E  AE11               	btfss	(___flmul@grs+3)^0,7,c
  8133  002810  EF0C  F014         	goto	u4611
  8134  002814  EF0E  F014         	goto	u4610
  8135  002818                     u4611:
  8136  002818  EF32  F014         	goto	l1110
  8137  00281C                     u4610:
  8138  00281C  0EFF               	movlw	255
  8139  00281E  140E               	andwf	___flmul@grs^0,w,c
  8140  002820  6E09               	movwf	??___flmul^0,c
  8141  002822  0EFF               	movlw	255
  8142  002824  140F               	andwf	(___flmul@grs+1)^0,w,c
  8143  002826  6E0A               	movwf	(??___flmul+1)^0,c
  8144  002828  0EFF               	movlw	255
  8145  00282A  1410               	andwf	(___flmul@grs+2)^0,w,c
  8146  00282C  6E0B               	movwf	(??___flmul+2)^0,c
  8147  00282E  0E7F               	movlw	127
  8148  002830  1411               	andwf	(___flmul@grs+3)^0,w,c
  8149  002832  6E0C               	movwf	(??___flmul+3)^0,c
  8150  002834  5009               	movf	??___flmul^0,w,c
  8151  002836  100A               	iorwf	(??___flmul+1)^0,w,c
  8152  002838  100B               	iorwf	(??___flmul+2)^0,w,c
  8153  00283A  100C               	iorwf	(??___flmul+3)^0,w,c
  8154  00283C  B4D8               	btfsc	status,2,c
  8155  00283E  EF23  F014         	goto	u4621
  8156  002842  EF25  F014         	goto	u4620
  8157  002846                     u4621:
  8158  002846  EF29  F014         	goto	l1111
  8159  00284A                     u4620:
  8160  00284A                     l4308:
  8161  00284A  0E01               	movlw	1
  8162  00284C  6E12               	movwf	___flmul@aexp^0,c
  8163  00284E  EF32  F014         	goto	l1110
  8164  002852                     l1111:
  8165  002852  A014               	btfss	___flmul@prod^0,0,c
  8166  002854  EF2E  F014         	goto	u4631
  8167  002858  EF30  F014         	goto	u4630
  8168  00285C                     u4631:
  8169  00285C  EF32  F014         	goto	l1110
  8170  002860                     u4630:
  8171  002860  EF25  F014         	goto	l4308
  8172  002864                     l1110:
  8173  002864  5012               	movf	___flmul@aexp^0,w,c
  8174  002866  B4D8               	btfsc	status,2,c
  8175  002868  EF38  F014         	goto	u4641
  8176  00286C  EF3A  F014         	goto	u4640
  8177  002870                     u4641:
  8178  002870  EF5E  F014         	goto	l4320
  8179  002874                     u4640:
  8180  002874  0E01               	movlw	1
  8181  002876  2614               	addwf	___flmul@prod^0,f,c
  8182  002878  0E00               	movlw	0
  8183  00287A  2215               	addwfc	(___flmul@prod+1)^0,f,c
  8184  00287C  2216               	addwfc	(___flmul@prod+2)^0,f,c
  8185  00287E  2217               	addwfc	(___flmul@prod+3)^0,f,c
  8186  002880  A017               	btfss	(___flmul@prod+3)^0,0,c
  8187  002882  EF45  F014         	goto	u4651
  8188  002886  EF47  F014         	goto	u4650
  8189  00288A                     u4651:
  8190  00288A  EF5E  F014         	goto	l4320
  8191  00288E                     u4650:
  8192  00288E  C014  F009         	movff	___flmul@prod,??___flmul
  8193  002892  C015  F00A         	movff	___flmul@prod+1,??___flmul+1
  8194  002896  C016  F00B         	movff	___flmul@prod+2,??___flmul+2
  8195  00289A  C017  F00C         	movff	___flmul@prod+3,??___flmul+3
  8196  00289E  340C               	rlcf	(??___flmul+3)^0,w,c
  8197  0028A0  320C               	rrcf	(??___flmul+3)^0,f,c
  8198  0028A2  320B               	rrcf	(??___flmul+2)^0,f,c
  8199  0028A4  320A               	rrcf	(??___flmul+1)^0,f,c
  8200  0028A6  3209               	rrcf	??___flmul^0,f,c
  8201  0028A8  C009  F014         	movff	??___flmul,___flmul@prod
  8202  0028AC  C00A  F015         	movff	??___flmul+1,___flmul@prod+1
  8203  0028B0  C00B  F016         	movff	??___flmul+2,___flmul@prod+2
  8204  0028B4  C00C  F017         	movff	??___flmul+3,___flmul@prod+3
  8205  0028B8  4A18               	infsnz	___flmul@temp^0,f,c
  8206  0028BA  2A19               	incf	(___flmul@temp+1)^0,f,c
  8207  0028BC                     l4320:
  8208  0028BC  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8209  0028BE  EF69  F014         	goto	u4661
  8210  0028C2  5019               	movf	(___flmul@temp+1)^0,w,c
  8211  0028C4  E108               	bnz	u4660
  8212  0028C6  2818               	incf	___flmul@temp^0,w,c
  8213  0028C8  A0D8               	btfss	status,0,c
  8214  0028CA  EF69  F014         	goto	u4661
  8215  0028CE  EF6B  F014         	goto	u4660
  8216  0028D2                     u4661:
  8217  0028D2  EF75  F014         	goto	l4324
  8218  0028D6                     u4660:
  8219  0028D6  0E00               	movlw	0
  8220  0028D8  6E14               	movwf	___flmul@prod^0,c
  8221  0028DA  0E00               	movlw	0
  8222  0028DC  6E15               	movwf	(___flmul@prod+1)^0,c
  8223  0028DE  0E80               	movlw	128
  8224  0028E0  6E16               	movwf	(___flmul@prod+2)^0,c
  8225  0028E2  0E7F               	movlw	127
  8226  0028E4  6E17               	movwf	(___flmul@prod+3)^0,c
  8227  0028E6  EFA3  F014         	goto	l4336
  8228  0028EA                     l4324:
  8229  0028EA  BE19               	btfsc	(___flmul@temp+1)^0,7,c
  8230  0028EC  EF82  F014         	goto	u4670
  8231  0028F0  5019               	movf	(___flmul@temp+1)^0,w,c
  8232  0028F2  E106               	bnz	u4671
  8233  0028F4  0418               	decf	___flmul@temp^0,w,c
  8234  0028F6  B0D8               	btfsc	status,0,c
  8235  0028F8  EF80  F014         	goto	u4671
  8236  0028FC  EF82  F014         	goto	u4670
  8237  002900                     u4671:
  8238  002900  EF8E  F014         	goto	l1118
  8239  002904                     u4670:
  8240  002904  0E00               	movlw	0
  8241  002906  6E14               	movwf	___flmul@prod^0,c
  8242  002908  0E00               	movlw	0
  8243  00290A  6E15               	movwf	(___flmul@prod+1)^0,c
  8244  00290C  0E00               	movlw	0
  8245  00290E  6E16               	movwf	(___flmul@prod+2)^0,c
  8246  002910  0E00               	movlw	0
  8247  002912  6E17               	movwf	(___flmul@prod+3)^0,c
  8248  002914  0E00               	movlw	0
  8249  002916  6E0D               	movwf	___flmul@sign^0,c
  8250  002918  EFA3  F014         	goto	l4336
  8251  00291C                     l1118:
  8252  00291C  C018  F013         	movff	___flmul@temp,___flmul@bexp
  8253  002920  0EFF               	movlw	255
  8254  002922  1614               	andwf	___flmul@prod^0,f,c
  8255  002924  0EFF               	movlw	255
  8256  002926  1615               	andwf	(___flmul@prod+1)^0,f,c
  8257  002928  0E7F               	movlw	127
  8258  00292A  1616               	andwf	(___flmul@prod+2)^0,f,c
  8259  00292C  0E00               	movlw	0
  8260  00292E  1617               	andwf	(___flmul@prod+3)^0,f,c
  8261  002930  A013               	btfss	___flmul@bexp^0,0,c
  8262  002932  EF9D  F014         	goto	u4681
  8263  002936  EF9F  F014         	goto	u4680
  8264  00293A                     u4681:
  8265  00293A  EFA0  F014         	goto	l4334
  8266  00293E                     u4680:
  8267  00293E  8E16               	bsf	(___flmul@prod+2)^0,7,c
  8268  002940                     l4334:
  8269  002940  90D8               	bcf	status,0,c
  8270  002942  3013               	rrcf	___flmul@bexp^0,w,c
  8271  002944  6E17               	movwf	(___flmul@prod+3)^0,c
  8272  002946                     l4336:
  8273  002946  500D               	movf	___flmul@sign^0,w,c
  8274  002948  1217               	iorwf	(___flmul@prod+3)^0,f,c
  8275  00294A  C014  F001         	movff	___flmul@prod,?___flmul
  8276  00294E  C015  F002         	movff	___flmul@prod+1,?___flmul+1
  8277  002952  C016  F003         	movff	___flmul@prod+2,?___flmul+2
  8278  002956  C017  F004         	movff	___flmul@prod+3,?___flmul+3
  8279  00295A                     l1105:
  8280  00295A  0012               	return		;funcret
  8281  00295C                     __end_of___flmul:
  8282                           	callstack 0
  8283                           
  8284 ;; *************** function ___flge *****************
  8285 ;; Defined at:
  8286 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
  8287 ;; Parameters:    Size  Location     Type
  8288 ;;  ff1             4   25[COMRAM] unsigned char 
  8289 ;;  ff2             4   29[COMRAM] unsigned char 
  8290 ;; Auto vars:     Size  Location     Type
  8291 ;;		None
  8292 ;; Return value:  Size  Location     Type
  8293 ;;		None               void
  8294 ;; Registers used:
  8295 ;;		wreg, status,2, status,0
  8296 ;; Tracked objects:
  8297 ;;		On entry : 0/0
  8298 ;;		On exit  : 0/0
  8299 ;;		Unchanged: 0/0
  8300 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8301 ;;      Params:         8       0       0       0       0       0       0
  8302 ;;      Locals:         0       0       0       0       0       0       0
  8303 ;;      Temps:          4       0       0       0       0       0       0
  8304 ;;      Totals:        12       0       0       0       0       0       0
  8305 ;;Total ram usage:       12 bytes
  8306 ;; Hardware stack levels used:    1
  8307 ;; Hardware stack levels required when called:    1
  8308 ;; This function calls:
  8309 ;;		Nothing
  8310 ;; This function is called by:
  8311 ;;		_stateMachine
  8312 ;;		_efgtoa
  8313 ;; This function uses a non-reentrant model
  8314 ;;
  8315                           
  8316                           	psect	text22
  8317  003A38                     __ptext22:
  8318                           	callstack 0
  8319  003A38                     ___flge:
  8320                           	callstack 23
  8321  003A38  0E00               	movlw	0
  8322  003A3A  141A               	andwf	___flge@ff1^0,w,c
  8323  003A3C  6E22               	movwf	??___flge^0,c
  8324  003A3E  0E00               	movlw	0
  8325  003A40  141B               	andwf	(___flge@ff1+1)^0,w,c
  8326  003A42  6E23               	movwf	(??___flge+1)^0,c
  8327  003A44  0E80               	movlw	128
  8328  003A46  141C               	andwf	(___flge@ff1+2)^0,w,c
  8329  003A48  6E24               	movwf	(??___flge+2)^0,c
  8330  003A4A  0E7F               	movlw	127
  8331  003A4C  141D               	andwf	(___flge@ff1+3)^0,w,c
  8332  003A4E  6E25               	movwf	(??___flge+3)^0,c
  8333  003A50  5022               	movf	??___flge^0,w,c
  8334  003A52  1023               	iorwf	(??___flge+1)^0,w,c
  8335  003A54  1024               	iorwf	(??___flge+2)^0,w,c
  8336  003A56  1025               	iorwf	(??___flge+3)^0,w,c
  8337  003A58  A4D8               	btfss	status,2,c
  8338  003A5A  EF31  F01D         	goto	u4841
  8339  003A5E  EF33  F01D         	goto	u4840
  8340  003A62                     u4841:
  8341  003A62  EF3B  F01D         	goto	l4448
  8342  003A66                     u4840:
  8343  003A66  0E00               	movlw	0
  8344  003A68  6E1A               	movwf	___flge@ff1^0,c
  8345  003A6A  0E00               	movlw	0
  8346  003A6C  6E1B               	movwf	(___flge@ff1+1)^0,c
  8347  003A6E  0E00               	movlw	0
  8348  003A70  6E1C               	movwf	(___flge@ff1+2)^0,c
  8349  003A72  0E00               	movlw	0
  8350  003A74  6E1D               	movwf	(___flge@ff1+3)^0,c
  8351  003A76                     l4448:
  8352  003A76  0E00               	movlw	0
  8353  003A78  141E               	andwf	___flge@ff2^0,w,c
  8354  003A7A  6E22               	movwf	??___flge^0,c
  8355  003A7C  0E00               	movlw	0
  8356  003A7E  141F               	andwf	(___flge@ff2+1)^0,w,c
  8357  003A80  6E23               	movwf	(??___flge+1)^0,c
  8358  003A82  0E80               	movlw	128
  8359  003A84  1420               	andwf	(___flge@ff2+2)^0,w,c
  8360  003A86  6E24               	movwf	(??___flge+2)^0,c
  8361  003A88  0E7F               	movlw	127
  8362  003A8A  1421               	andwf	(___flge@ff2+3)^0,w,c
  8363  003A8C  6E25               	movwf	(??___flge+3)^0,c
  8364  003A8E  5022               	movf	??___flge^0,w,c
  8365  003A90  1023               	iorwf	(??___flge+1)^0,w,c
  8366  003A92  1024               	iorwf	(??___flge+2)^0,w,c
  8367  003A94  1025               	iorwf	(??___flge+3)^0,w,c
  8368  003A96  A4D8               	btfss	status,2,c
  8369  003A98  EF50  F01D         	goto	u4851
  8370  003A9C  EF52  F01D         	goto	u4850
  8371  003AA0                     u4851:
  8372  003AA0  EF5A  F01D         	goto	l4452
  8373  003AA4                     u4850:
  8374  003AA4  0E00               	movlw	0
  8375  003AA6  6E1E               	movwf	___flge@ff2^0,c
  8376  003AA8  0E00               	movlw	0
  8377  003AAA  6E1F               	movwf	(___flge@ff2+1)^0,c
  8378  003AAC  0E00               	movlw	0
  8379  003AAE  6E20               	movwf	(___flge@ff2+2)^0,c
  8380  003AB0  0E00               	movlw	0
  8381  003AB2  6E21               	movwf	(___flge@ff2+3)^0,c
  8382  003AB4                     l4452:
  8383  003AB4  AE1D               	btfss	(___flge@ff1+3)^0,7,c
  8384  003AB6  EF5F  F01D         	goto	u4861
  8385  003ABA  EF61  F01D         	goto	u4860
  8386  003ABE                     u4861:
  8387  003ABE  EF6A  F01D         	goto	l4456
  8388  003AC2                     u4860:
  8389  003AC2  6C1A               	negf	___flge@ff1^0,c
  8390  003AC4  1E1B               	comf	(___flge@ff1+1)^0,f,c
  8391  003AC6  B0D8               	btfsc	status,0,c
  8392  003AC8  2A1B               	incf	(___flge@ff1+1)^0,f,c
  8393  003ACA  1E1C               	comf	(___flge@ff1+2)^0,f,c
  8394  003ACC  B0D8               	btfsc	status,0,c
  8395  003ACE  2A1C               	incf	(___flge@ff1+2)^0,f,c
  8396  003AD0  0E80               	movlw	128
  8397  003AD2  561D               	subfwb	(___flge@ff1+3)^0,f,c
  8398  003AD4                     l4456:
  8399  003AD4  AE21               	btfss	(___flge@ff2+3)^0,7,c
  8400  003AD6  EF6F  F01D         	goto	u4871
  8401  003ADA  EF71  F01D         	goto	u4870
  8402  003ADE                     u4871:
  8403  003ADE  EF7A  F01D         	goto	l752
  8404  003AE2                     u4870:
  8405  003AE2  6C1E               	negf	___flge@ff2^0,c
  8406  003AE4  1E1F               	comf	(___flge@ff2+1)^0,f,c
  8407  003AE6  B0D8               	btfsc	status,0,c
  8408  003AE8  2A1F               	incf	(___flge@ff2+1)^0,f,c
  8409  003AEA  1E20               	comf	(___flge@ff2+2)^0,f,c
  8410  003AEC  B0D8               	btfsc	status,0,c
  8411  003AEE  2A20               	incf	(___flge@ff2+2)^0,f,c
  8412  003AF0  0E80               	movlw	128
  8413  003AF2  5621               	subfwb	(___flge@ff2+3)^0,f,c
  8414  003AF4                     l752:
  8415  003AF4  0E00               	movlw	0
  8416  003AF6  1A1A               	xorwf	___flge@ff1^0,f,c
  8417  003AF8  0E00               	movlw	0
  8418  003AFA  1A1B               	xorwf	(___flge@ff1+1)^0,f,c
  8419  003AFC  0E00               	movlw	0
  8420  003AFE  1A1C               	xorwf	(___flge@ff1+2)^0,f,c
  8421  003B00  0E80               	movlw	128
  8422  003B02  1A1D               	xorwf	(___flge@ff1+3)^0,f,c
  8423  003B04  0E00               	movlw	0
  8424  003B06  1A1E               	xorwf	___flge@ff2^0,f,c
  8425  003B08  0E00               	movlw	0
  8426  003B0A  1A1F               	xorwf	(___flge@ff2+1)^0,f,c
  8427  003B0C  0E00               	movlw	0
  8428  003B0E  1A20               	xorwf	(___flge@ff2+2)^0,f,c
  8429  003B10  0E80               	movlw	128
  8430  003B12  1A21               	xorwf	(___flge@ff2+3)^0,f,c
  8431  003B14  501E               	movf	___flge@ff2^0,w,c
  8432  003B16  5C1A               	subwf	___flge@ff1^0,w,c
  8433  003B18  501F               	movf	(___flge@ff2+1)^0,w,c
  8434  003B1A  581B               	subwfb	(___flge@ff1+1)^0,w,c
  8435  003B1C  5020               	movf	(___flge@ff2+2)^0,w,c
  8436  003B1E  581C               	subwfb	(___flge@ff1+2)^0,w,c
  8437  003B20  5021               	movf	(___flge@ff2+3)^0,w,c
  8438  003B22  581D               	subwfb	(___flge@ff1+3)^0,w,c
  8439  003B24  B0D8               	btfsc	status,0,c
  8440  003B26  EF97  F01D         	goto	u4881
  8441  003B2A  EF99  F01D         	goto	u4880
  8442  003B2E                     u4881:
  8443  003B2E  EF9C  F01D         	goto	l4462
  8444  003B32                     u4880:
  8445  003B32  90D8               	bcf	status,0,c
  8446  003B34  EF9D  F01D         	goto	l757
  8447  003B38                     l4462:
  8448  003B38  80D8               	bsf	status,0,c
  8449  003B3A                     l757:
  8450  003B3A  0012               	return		;funcret
  8451  003B3C                     __end_of___flge:
  8452                           	callstack 0
  8453                           
  8454 ;; *************** function ___fleq *****************
  8455 ;; Defined at:
  8456 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
  8457 ;; Parameters:    Size  Location     Type
  8458 ;;  ff1             4    0[COMRAM] unsigned char 
  8459 ;;  ff2             4    4[COMRAM] unsigned char 
  8460 ;; Auto vars:     Size  Location     Type
  8461 ;;		None
  8462 ;; Return value:  Size  Location     Type
  8463 ;;		None               void
  8464 ;; Registers used:
  8465 ;;		wreg, status,2, status,0
  8466 ;; Tracked objects:
  8467 ;;		On entry : 0/0
  8468 ;;		On exit  : 0/0
  8469 ;;		Unchanged: 0/0
  8470 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8471 ;;      Params:         8       0       0       0       0       0       0
  8472 ;;      Locals:         0       0       0       0       0       0       0
  8473 ;;      Temps:          4       0       0       0       0       0       0
  8474 ;;      Totals:        12       0       0       0       0       0       0
  8475 ;;Total ram usage:       12 bytes
  8476 ;; Hardware stack levels used:    1
  8477 ;; Hardware stack levels required when called:    1
  8478 ;; This function calls:
  8479 ;;		Nothing
  8480 ;; This function is called by:
  8481 ;;		_efgtoa
  8482 ;; This function uses a non-reentrant model
  8483 ;;
  8484                           
  8485                           	psect	text23
  8486  0040E4                     __ptext23:
  8487                           	callstack 0
  8488  0040E4                     ___fleq:
  8489                           	callstack 23
  8490  0040E4  0E00               	movlw	0
  8491  0040E6  1401               	andwf	___fleq@ff1^0,w,c
  8492  0040E8  6E09               	movwf	??___fleq^0,c
  8493  0040EA  0E00               	movlw	0
  8494  0040EC  1402               	andwf	(___fleq@ff1+1)^0,w,c
  8495  0040EE  6E0A               	movwf	(??___fleq+1)^0,c
  8496  0040F0  0E80               	movlw	128
  8497  0040F2  1403               	andwf	(___fleq@ff1+2)^0,w,c
  8498  0040F4  6E0B               	movwf	(??___fleq+2)^0,c
  8499  0040F6  0E7F               	movlw	127
  8500  0040F8  1404               	andwf	(___fleq@ff1+3)^0,w,c
  8501  0040FA  6E0C               	movwf	(??___fleq+3)^0,c
  8502  0040FC  5009               	movf	??___fleq^0,w,c
  8503  0040FE  100A               	iorwf	(??___fleq+1)^0,w,c
  8504  004100  100B               	iorwf	(??___fleq+2)^0,w,c
  8505  004102  100C               	iorwf	(??___fleq+3)^0,w,c
  8506  004104  A4D8               	btfss	status,2,c
  8507  004106  EF87  F020         	goto	u4811
  8508  00410A  EF89  F020         	goto	u4810
  8509  00410E                     u4811:
  8510  00410E  EF91  F020         	goto	l4432
  8511  004112                     u4810:
  8512  004112  0E00               	movlw	0
  8513  004114  6E01               	movwf	___fleq@ff1^0,c
  8514  004116  0E00               	movlw	0
  8515  004118  6E02               	movwf	(___fleq@ff1+1)^0,c
  8516  00411A  0E00               	movlw	0
  8517  00411C  6E03               	movwf	(___fleq@ff1+2)^0,c
  8518  00411E  0E00               	movlw	0
  8519  004120  6E04               	movwf	(___fleq@ff1+3)^0,c
  8520  004122                     l4432:
  8521  004122  0E00               	movlw	0
  8522  004124  1405               	andwf	___fleq@ff2^0,w,c
  8523  004126  6E09               	movwf	??___fleq^0,c
  8524  004128  0E00               	movlw	0
  8525  00412A  1406               	andwf	(___fleq@ff2+1)^0,w,c
  8526  00412C  6E0A               	movwf	(??___fleq+1)^0,c
  8527  00412E  0E80               	movlw	128
  8528  004130  1407               	andwf	(___fleq@ff2+2)^0,w,c
  8529  004132  6E0B               	movwf	(??___fleq+2)^0,c
  8530  004134  0E7F               	movlw	127
  8531  004136  1408               	andwf	(___fleq@ff2+3)^0,w,c
  8532  004138  6E0C               	movwf	(??___fleq+3)^0,c
  8533  00413A  5009               	movf	??___fleq^0,w,c
  8534  00413C  100A               	iorwf	(??___fleq+1)^0,w,c
  8535  00413E  100B               	iorwf	(??___fleq+2)^0,w,c
  8536  004140  100C               	iorwf	(??___fleq+3)^0,w,c
  8537  004142  A4D8               	btfss	status,2,c
  8538  004144  EFA6  F020         	goto	u4821
  8539  004148  EFA8  F020         	goto	u4820
  8540  00414C                     u4821:
  8541  00414C  EFB0  F020         	goto	l4436
  8542  004150                     u4820:
  8543  004150  0E00               	movlw	0
  8544  004152  6E05               	movwf	___fleq@ff2^0,c
  8545  004154  0E00               	movlw	0
  8546  004156  6E06               	movwf	(___fleq@ff2+1)^0,c
  8547  004158  0E00               	movlw	0
  8548  00415A  6E07               	movwf	(___fleq@ff2+2)^0,c
  8549  00415C  0E00               	movlw	0
  8550  00415E  6E08               	movwf	(___fleq@ff2+3)^0,c
  8551  004160                     l4436:
  8552  004160  5005               	movf	___fleq@ff2^0,w,c
  8553  004162  1801               	xorwf	___fleq@ff1^0,w,c
  8554  004164  E10F               	bnz	u4830
  8555  004166  5006               	movf	(___fleq@ff2+1)^0,w,c
  8556  004168  1802               	xorwf	(___fleq@ff1+1)^0,w,c
  8557  00416A  E10C               	bnz	u4830
  8558  00416C  5007               	movf	(___fleq@ff2+2)^0,w,c
  8559  00416E  1803               	xorwf	(___fleq@ff1+2)^0,w,c
  8560  004170  E109               	bnz	u4830
  8561  004172  5008               	movf	(___fleq@ff2+3)^0,w,c
  8562  004174  1804               	xorwf	(___fleq@ff1+3)^0,w,c
  8563  004176  B4D8               	btfsc	status,2,c
  8564  004178  EFC0  F020         	goto	u4831
  8565  00417C  EFC2  F020         	goto	u4830
  8566  004180                     u4831:
  8567  004180  EFC5  F020         	goto	l4440
  8568  004184                     u4830:
  8569  004184  90D8               	bcf	status,0,c
  8570  004186  EFC6  F020         	goto	l746
  8571  00418A                     l4440:
  8572  00418A  80D8               	bsf	status,0,c
  8573  00418C                     l746:
  8574  00418C  0012               	return		;funcret
  8575  00418E                     __end_of___fleq:
  8576                           	callstack 0
  8577                           
  8578 ;; *************** function ___fldiv *****************
  8579 ;; Defined at:
  8580 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
  8581 ;; Parameters:    Size  Location     Type
  8582 ;;  b               4    0[COMRAM] unsigned char 
  8583 ;;  a               4    4[COMRAM] unsigned char 
  8584 ;; Auto vars:     Size  Location     Type
  8585 ;;  grs             4   19[COMRAM] unsigned long 
  8586 ;;  rem             4   12[COMRAM] unsigned long 
  8587 ;;  new_exp         2   17[COMRAM] short 
  8588 ;;  aexp            1   24[COMRAM] unsigned char 
  8589 ;;  bexp            1   23[COMRAM] unsigned char 
  8590 ;;  sign            1   16[COMRAM] unsigned char 
  8591 ;; Return value:  Size  Location     Type
  8592 ;;                  4    0[COMRAM] unsigned char 
  8593 ;; Registers used:
  8594 ;;		wreg, status,2, status,0
  8595 ;; Tracked objects:
  8596 ;;		On entry : 0/0
  8597 ;;		On exit  : 0/0
  8598 ;;		Unchanged: 0/0
  8599 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8600 ;;      Params:         8       0       0       0       0       0       0
  8601 ;;      Locals:        13       0       0       0       0       0       0
  8602 ;;      Temps:          4       0       0       0       0       0       0
  8603 ;;      Totals:        25       0       0       0       0       0       0
  8604 ;;Total ram usage:       25 bytes
  8605 ;; Hardware stack levels used:    1
  8606 ;; Hardware stack levels required when called:    1
  8607 ;; This function calls:
  8608 ;;		Nothing
  8609 ;; This function is called by:
  8610 ;;		_efgtoa
  8611 ;;		_scanAdcConversion
  8612 ;; This function uses a non-reentrant model
  8613 ;;
  8614                           
  8615                           	psect	text24
  8616  00295C                     __ptext24:
  8617                           	callstack 0
  8618  00295C                     ___fldiv:
  8619                           	callstack 23
  8620  00295C  5004               	movf	(___fldiv@b+3)^0,w,c
  8621  00295E  0B80               	andlw	128
  8622  002960  6E11               	movwf	___fldiv@sign^0,c
  8623  002962  5004               	movf	(___fldiv@b+3)^0,w,c
  8624  002964  2404               	addwf	(___fldiv@b+3)^0,w,c
  8625  002966  6E18               	movwf	___fldiv@bexp^0,c
  8626  002968  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8627  00296A  EFB9  F014         	goto	u4271
  8628  00296E  EFBB  F014         	goto	u4270
  8629  002972                     u4271:
  8630  002972  EFBC  F014         	goto	l4080
  8631  002976                     u4270:
  8632  002976  8018               	bsf	___fldiv@bexp^0,0,c
  8633  002978                     l4080:
  8634  002978  5018               	movf	___fldiv@bexp^0,w,c
  8635  00297A  B4D8               	btfsc	status,2,c
  8636  00297C  EFC2  F014         	goto	u4281
  8637  002980  EFC4  F014         	goto	u4280
  8638  002984                     u4281:
  8639  002984  EFD9  F014         	goto	l4090
  8640  002988                     u4280:
  8641  002988  2818               	incf	___fldiv@bexp^0,w,c
  8642  00298A  A4D8               	btfss	status,2,c
  8643  00298C  EFCA  F014         	goto	u4291
  8644  002990  EFCC  F014         	goto	u4290
  8645  002994                     u4291:
  8646  002994  EFD4  F014         	goto	l4086
  8647  002998                     u4290:
  8648  002998  0E00               	movlw	0
  8649  00299A  6E01               	movwf	___fldiv@b^0,c
  8650  00299C  0E00               	movlw	0
  8651  00299E  6E02               	movwf	(___fldiv@b+1)^0,c
  8652  0029A0  0E00               	movlw	0
  8653  0029A2  6E03               	movwf	(___fldiv@b+2)^0,c
  8654  0029A4  0E00               	movlw	0
  8655  0029A6  6E04               	movwf	(___fldiv@b+3)^0,c
  8656  0029A8                     l4086:
  8657  0029A8  8E03               	bsf	(___fldiv@b+2)^0,7,c
  8658  0029AA  0E00               	movlw	0
  8659  0029AC  6E04               	movwf	(___fldiv@b+3)^0,c
  8660  0029AE  EFE1  F014         	goto	l4092
  8661  0029B2                     l4090:
  8662  0029B2  0E00               	movlw	0
  8663  0029B4  6E01               	movwf	___fldiv@b^0,c
  8664  0029B6  0E00               	movlw	0
  8665  0029B8  6E02               	movwf	(___fldiv@b+1)^0,c
  8666  0029BA  0E00               	movlw	0
  8667  0029BC  6E03               	movwf	(___fldiv@b+2)^0,c
  8668  0029BE  0E00               	movlw	0
  8669  0029C0  6E04               	movwf	(___fldiv@b+3)^0,c
  8670  0029C2                     l4092:
  8671  0029C2  5008               	movf	(___fldiv@a+3)^0,w,c
  8672  0029C4  0B80               	andlw	128
  8673  0029C6  1A11               	xorwf	___fldiv@sign^0,f,c
  8674  0029C8  5008               	movf	(___fldiv@a+3)^0,w,c
  8675  0029CA  2408               	addwf	(___fldiv@a+3)^0,w,c
  8676  0029CC  6E19               	movwf	___fldiv@aexp^0,c
  8677  0029CE  AE07               	btfss	(___fldiv@a+2)^0,7,c
  8678  0029D0  EFEC  F014         	goto	u4301
  8679  0029D4  EFEE  F014         	goto	u4300
  8680  0029D8                     u4301:
  8681  0029D8  EFEF  F014         	goto	l4100
  8682  0029DC                     u4300:
  8683  0029DC  8019               	bsf	___fldiv@aexp^0,0,c
  8684  0029DE                     l4100:
  8685  0029DE  5019               	movf	___fldiv@aexp^0,w,c
  8686  0029E0  B4D8               	btfsc	status,2,c
  8687  0029E2  EFF5  F014         	goto	u4311
  8688  0029E6  EFF7  F014         	goto	u4310
  8689  0029EA                     u4311:
  8690  0029EA  EF0C  F015         	goto	l4110
  8691  0029EE                     u4310:
  8692  0029EE  2819               	incf	___fldiv@aexp^0,w,c
  8693  0029F0  A4D8               	btfss	status,2,c
  8694  0029F2  EFFD  F014         	goto	u4321
  8695  0029F6  EFFF  F014         	goto	u4320
  8696  0029FA                     u4321:
  8697  0029FA  EF07  F015         	goto	l4106
  8698  0029FE                     u4320:
  8699  0029FE  0E00               	movlw	0
  8700  002A00  6E05               	movwf	___fldiv@a^0,c
  8701  002A02  0E00               	movlw	0
  8702  002A04  6E06               	movwf	(___fldiv@a+1)^0,c
  8703  002A06  0E00               	movlw	0
  8704  002A08  6E07               	movwf	(___fldiv@a+2)^0,c
  8705  002A0A  0E00               	movlw	0
  8706  002A0C  6E08               	movwf	(___fldiv@a+3)^0,c
  8707  002A0E                     l4106:
  8708  002A0E  8E07               	bsf	(___fldiv@a+2)^0,7,c
  8709  002A10  0E00               	movlw	0
  8710  002A12  6E08               	movwf	(___fldiv@a+3)^0,c
  8711  002A14  EF14  F015         	goto	l4112
  8712  002A18                     l4110:
  8713  002A18  0E00               	movlw	0
  8714  002A1A  6E05               	movwf	___fldiv@a^0,c
  8715  002A1C  0E00               	movlw	0
  8716  002A1E  6E06               	movwf	(___fldiv@a+1)^0,c
  8717  002A20  0E00               	movlw	0
  8718  002A22  6E07               	movwf	(___fldiv@a+2)^0,c
  8719  002A24  0E00               	movlw	0
  8720  002A26  6E08               	movwf	(___fldiv@a+3)^0,c
  8721  002A28                     l4112:
  8722  002A28  5005               	movf	___fldiv@a^0,w,c
  8723  002A2A  1006               	iorwf	(___fldiv@a+1)^0,w,c
  8724  002A2C  1007               	iorwf	(___fldiv@a+2)^0,w,c
  8725  002A2E  1008               	iorwf	(___fldiv@a+3)^0,w,c
  8726  002A30  A4D8               	btfss	status,2,c
  8727  002A32  EF1D  F015         	goto	u4331
  8728  002A36  EF1F  F015         	goto	u4330
  8729  002A3A                     u4331:
  8730  002A3A  EF37  F015         	goto	l4124
  8731  002A3E                     u4330:
  8732  002A3E  0E00               	movlw	0
  8733  002A40  6E01               	movwf	___fldiv@b^0,c
  8734  002A42  0E00               	movlw	0
  8735  002A44  6E02               	movwf	(___fldiv@b+1)^0,c
  8736  002A46  0E00               	movlw	0
  8737  002A48  6E03               	movwf	(___fldiv@b+2)^0,c
  8738  002A4A  0E00               	movlw	0
  8739  002A4C  6E04               	movwf	(___fldiv@b+3)^0,c
  8740  002A4E  0E80               	movlw	128
  8741  002A50  1203               	iorwf	(___fldiv@b+2)^0,f,c
  8742  002A52  0E7F               	movlw	127
  8743  002A54  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8744  002A56                     l4118:
  8745  002A56  5011               	movf	___fldiv@sign^0,w,c
  8746  002A58  1204               	iorwf	(___fldiv@b+3)^0,f,c
  8747  002A5A  C001  F001         	movff	___fldiv@b,?___fldiv
  8748  002A5E  C002  F002         	movff	___fldiv@b+1,?___fldiv+1
  8749  002A62  C003  F003         	movff	___fldiv@b+2,?___fldiv+2
  8750  002A66  C004  F004         	movff	___fldiv@b+3,?___fldiv+3
  8751  002A6A  EF7A  F016         	goto	l1069
  8752  002A6E                     l4124:
  8753  002A6E  5018               	movf	___fldiv@bexp^0,w,c
  8754  002A70  A4D8               	btfss	status,2,c
  8755  002A72  EF3D  F015         	goto	u4341
  8756  002A76  EF3F  F015         	goto	u4340
  8757  002A7A                     u4341:
  8758  002A7A  EF49  F015         	goto	l4132
  8759  002A7E                     u4340:
  8760  002A7E  0E00               	movlw	0
  8761  002A80  6E01               	movwf	?___fldiv^0,c
  8762  002A82  0E00               	movlw	0
  8763  002A84  6E02               	movwf	(?___fldiv+1)^0,c
  8764  002A86  0E00               	movlw	0
  8765  002A88  6E03               	movwf	(?___fldiv+2)^0,c
  8766  002A8A  0E00               	movlw	0
  8767  002A8C  6E04               	movwf	(?___fldiv+3)^0,c
  8768  002A8E  EF7A  F016         	goto	l1069
  8769  002A92                     l4132:
  8770  002A92  5019               	movf	___fldiv@aexp^0,w,c
  8771  002A94  C018  F009         	movff	___fldiv@bexp,??___fldiv
  8772  002A98  6A0A               	clrf	(??___fldiv+1)^0,c
  8773  002A9A  5E09               	subwf	??___fldiv^0,f,c
  8774  002A9C  0E00               	movlw	0
  8775  002A9E  5A0A               	subwfb	(??___fldiv+1)^0,f,c
  8776  002AA0  0E7F               	movlw	127
  8777  002AA2  2409               	addwf	??___fldiv^0,w,c
  8778  002AA4  6E12               	movwf	___fldiv@new_exp^0,c
  8779  002AA6  0E00               	movlw	0
  8780  002AA8  200A               	addwfc	(??___fldiv+1)^0,w,c
  8781  002AAA  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  8782  002AAC  C001  F00D         	movff	___fldiv@b,___fldiv@rem
  8783  002AB0  C002  F00E         	movff	___fldiv@b+1,___fldiv@rem+1
  8784  002AB4  C003  F00F         	movff	___fldiv@b+2,___fldiv@rem+2
  8785  002AB8  C004  F010         	movff	___fldiv@b+3,___fldiv@rem+3
  8786  002ABC  0E00               	movlw	0
  8787  002ABE  6E01               	movwf	___fldiv@b^0,c
  8788  002AC0  0E00               	movlw	0
  8789  002AC2  6E02               	movwf	(___fldiv@b+1)^0,c
  8790  002AC4  0E00               	movlw	0
  8791  002AC6  6E03               	movwf	(___fldiv@b+2)^0,c
  8792  002AC8  0E00               	movlw	0
  8793  002ACA  6E04               	movwf	(___fldiv@b+3)^0,c
  8794  002ACC  0E00               	movlw	0
  8795  002ACE  6E14               	movwf	___fldiv@grs^0,c
  8796  002AD0  0E00               	movlw	0
  8797  002AD2  6E15               	movwf	(___fldiv@grs+1)^0,c
  8798  002AD4  0E00               	movlw	0
  8799  002AD6  6E16               	movwf	(___fldiv@grs+2)^0,c
  8800  002AD8  0E00               	movlw	0
  8801  002ADA  6E17               	movwf	(___fldiv@grs+3)^0,c
  8802  002ADC  0E00               	movlw	0
  8803  002ADE  6E19               	movwf	___fldiv@aexp^0,c
  8804  002AE0  EFAA  F015         	goto	l1071
  8805  002AE4                     l4142:
  8806  002AE4  5019               	movf	___fldiv@aexp^0,w,c
  8807  002AE6  B4D8               	btfsc	status,2,c
  8808  002AE8  EF78  F015         	goto	u4351
  8809  002AEC  EF7A  F015         	goto	u4350
  8810  002AF0                     u4351:
  8811  002AF0  EF91  F015         	goto	l4150
  8812  002AF4                     u4350:
  8813  002AF4  90D8               	bcf	status,0,c
  8814  002AF6  360D               	rlcf	___fldiv@rem^0,f,c
  8815  002AF8  360E               	rlcf	(___fldiv@rem+1)^0,f,c
  8816  002AFA  360F               	rlcf	(___fldiv@rem+2)^0,f,c
  8817  002AFC  3610               	rlcf	(___fldiv@rem+3)^0,f,c
  8818  002AFE  90D8               	bcf	status,0,c
  8819  002B00  3601               	rlcf	___fldiv@b^0,f,c
  8820  002B02  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8821  002B04  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8822  002B06  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8823  002B08  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8824  002B0A  EF89  F015         	goto	u4361
  8825  002B0E  EF8B  F015         	goto	u4360
  8826  002B12                     u4361:
  8827  002B12  EF8C  F015         	goto	l1074
  8828  002B16                     u4360:
  8829  002B16  8001               	bsf	___fldiv@b^0,0,c
  8830  002B18                     l1074:
  8831  002B18  90D8               	bcf	status,0,c
  8832  002B1A  3614               	rlcf	___fldiv@grs^0,f,c
  8833  002B1C  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8834  002B1E  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8835  002B20  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8836  002B22                     l4150:
  8837  002B22  5005               	movf	___fldiv@a^0,w,c
  8838  002B24  5C0D               	subwf	___fldiv@rem^0,w,c
  8839  002B26  5006               	movf	(___fldiv@a+1)^0,w,c
  8840  002B28  580E               	subwfb	(___fldiv@rem+1)^0,w,c
  8841  002B2A  5007               	movf	(___fldiv@a+2)^0,w,c
  8842  002B2C  580F               	subwfb	(___fldiv@rem+2)^0,w,c
  8843  002B2E  5008               	movf	(___fldiv@a+3)^0,w,c
  8844  002B30  5810               	subwfb	(___fldiv@rem+3)^0,w,c
  8845  002B32  A0D8               	btfss	status,0,c
  8846  002B34  EF9E  F015         	goto	u4371
  8847  002B38  EFA0  F015         	goto	u4370
  8848  002B3C                     u4371:
  8849  002B3C  EFA9  F015         	goto	l4156
  8850  002B40                     u4370:
  8851  002B40  8C17               	bsf	(___fldiv@grs+3)^0,6,c
  8852  002B42  5005               	movf	___fldiv@a^0,w,c
  8853  002B44  5E0D               	subwf	___fldiv@rem^0,f,c
  8854  002B46  5006               	movf	(___fldiv@a+1)^0,w,c
  8855  002B48  5A0E               	subwfb	(___fldiv@rem+1)^0,f,c
  8856  002B4A  5007               	movf	(___fldiv@a+2)^0,w,c
  8857  002B4C  5A0F               	subwfb	(___fldiv@rem+2)^0,f,c
  8858  002B4E  5008               	movf	(___fldiv@a+3)^0,w,c
  8859  002B50  5A10               	subwfb	(___fldiv@rem+3)^0,f,c
  8860  002B52                     l4156:
  8861  002B52  2A19               	incf	___fldiv@aexp^0,f,c
  8862  002B54                     l1071:
  8863  002B54  0E19               	movlw	25
  8864  002B56  6419               	cpfsgt	___fldiv@aexp^0,c
  8865  002B58  EFB0  F015         	goto	u4381
  8866  002B5C  EFB2  F015         	goto	u4380
  8867  002B60                     u4381:
  8868  002B60  EF72  F015         	goto	l4142
  8869  002B64                     u4380:
  8870  002B64  500D               	movf	___fldiv@rem^0,w,c
  8871  002B66  100E               	iorwf	(___fldiv@rem+1)^0,w,c
  8872  002B68  100F               	iorwf	(___fldiv@rem+2)^0,w,c
  8873  002B6A  1010               	iorwf	(___fldiv@rem+3)^0,w,c
  8874  002B6C  B4D8               	btfsc	status,2,c
  8875  002B6E  EFBB  F015         	goto	u4391
  8876  002B72  EFBD  F015         	goto	u4390
  8877  002B76                     u4391:
  8878  002B76  EFD5  F015         	goto	l4168
  8879  002B7A                     u4390:
  8880  002B7A  8014               	bsf	___fldiv@grs^0,0,c
  8881  002B7C  EFD5  F015         	goto	l4168
  8882  002B80                     l4162:
  8883  002B80  90D8               	bcf	status,0,c
  8884  002B82  3601               	rlcf	___fldiv@b^0,f,c
  8885  002B84  3602               	rlcf	(___fldiv@b+1)^0,f,c
  8886  002B86  3603               	rlcf	(___fldiv@b+2)^0,f,c
  8887  002B88  3604               	rlcf	(___fldiv@b+3)^0,f,c
  8888  002B8A  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8889  002B8C  EFCA  F015         	goto	u4401
  8890  002B90  EFCC  F015         	goto	u4400
  8891  002B94                     u4401:
  8892  002B94  EFCD  F015         	goto	l1080
  8893  002B98                     u4400:
  8894  002B98  8001               	bsf	___fldiv@b^0,0,c
  8895  002B9A                     l1080:
  8896  002B9A  90D8               	bcf	status,0,c
  8897  002B9C  3614               	rlcf	___fldiv@grs^0,f,c
  8898  002B9E  3615               	rlcf	(___fldiv@grs+1)^0,f,c
  8899  002BA0  3616               	rlcf	(___fldiv@grs+2)^0,f,c
  8900  002BA2  3617               	rlcf	(___fldiv@grs+3)^0,f,c
  8901  002BA4  0612               	decf	___fldiv@new_exp^0,f,c
  8902  002BA6  A0D8               	btfss	status,0,c
  8903  002BA8  0613               	decf	(___fldiv@new_exp+1)^0,f,c
  8904  002BAA                     l4168:
  8905  002BAA  AE03               	btfss	(___fldiv@b+2)^0,7,c
  8906  002BAC  EFDA  F015         	goto	u4411
  8907  002BB0  EFDC  F015         	goto	u4410
  8908  002BB4                     u4411:
  8909  002BB4  EFC0  F015         	goto	l4162
  8910  002BB8                     u4410:
  8911  002BB8  0E00               	movlw	0
  8912  002BBA  6E19               	movwf	___fldiv@aexp^0,c
  8913  002BBC  AE17               	btfss	(___fldiv@grs+3)^0,7,c
  8914  002BBE  EFE3  F015         	goto	u4421
  8915  002BC2  EFE5  F015         	goto	u4420
  8916  002BC6                     u4421:
  8917  002BC6  EF09  F016         	goto	l1082
  8918  002BCA                     u4420:
  8919  002BCA  0EFF               	movlw	255
  8920  002BCC  1414               	andwf	___fldiv@grs^0,w,c
  8921  002BCE  6E09               	movwf	??___fldiv^0,c
  8922  002BD0  0EFF               	movlw	255
  8923  002BD2  1415               	andwf	(___fldiv@grs+1)^0,w,c
  8924  002BD4  6E0A               	movwf	(??___fldiv+1)^0,c
  8925  002BD6  0EFF               	movlw	255
  8926  002BD8  1416               	andwf	(___fldiv@grs+2)^0,w,c
  8927  002BDA  6E0B               	movwf	(??___fldiv+2)^0,c
  8928  002BDC  0E7F               	movlw	127
  8929  002BDE  1417               	andwf	(___fldiv@grs+3)^0,w,c
  8930  002BE0  6E0C               	movwf	(??___fldiv+3)^0,c
  8931  002BE2  5009               	movf	??___fldiv^0,w,c
  8932  002BE4  100A               	iorwf	(??___fldiv+1)^0,w,c
  8933  002BE6  100B               	iorwf	(??___fldiv+2)^0,w,c
  8934  002BE8  100C               	iorwf	(??___fldiv+3)^0,w,c
  8935  002BEA  B4D8               	btfsc	status,2,c
  8936  002BEC  EFFA  F015         	goto	u4431
  8937  002BF0  EFFC  F015         	goto	u4430
  8938  002BF4                     u4431:
  8939  002BF4  EF00  F016         	goto	l1083
  8940  002BF8                     u4430:
  8941  002BF8                     l4176:
  8942  002BF8  0E01               	movlw	1
  8943  002BFA  6E19               	movwf	___fldiv@aexp^0,c
  8944  002BFC  EF09  F016         	goto	l1082
  8945  002C00                     l1083:
  8946  002C00  A001               	btfss	___fldiv@b^0,0,c
  8947  002C02  EF05  F016         	goto	u4441
  8948  002C06  EF07  F016         	goto	u4440
  8949  002C0A                     u4441:
  8950  002C0A  EF09  F016         	goto	l1082
  8951  002C0E                     u4440:
  8952  002C0E  EFFC  F015         	goto	l4176
  8953  002C12                     l1082:
  8954  002C12  5019               	movf	___fldiv@aexp^0,w,c
  8955  002C14  B4D8               	btfsc	status,2,c
  8956  002C16  EF0F  F016         	goto	u4451
  8957  002C1A  EF11  F016         	goto	u4450
  8958  002C1E                     u4451:
  8959  002C1E  EF35  F016         	goto	l4188
  8960  002C22                     u4450:
  8961  002C22  0E01               	movlw	1
  8962  002C24  2601               	addwf	___fldiv@b^0,f,c
  8963  002C26  0E00               	movlw	0
  8964  002C28  2202               	addwfc	(___fldiv@b+1)^0,f,c
  8965  002C2A  2203               	addwfc	(___fldiv@b+2)^0,f,c
  8966  002C2C  2204               	addwfc	(___fldiv@b+3)^0,f,c
  8967  002C2E  A004               	btfss	(___fldiv@b+3)^0,0,c
  8968  002C30  EF1C  F016         	goto	u4461
  8969  002C34  EF1E  F016         	goto	u4460
  8970  002C38                     u4461:
  8971  002C38  EF35  F016         	goto	l4188
  8972  002C3C                     u4460:
  8973  002C3C  C001  F009         	movff	___fldiv@b,??___fldiv
  8974  002C40  C002  F00A         	movff	___fldiv@b+1,??___fldiv+1
  8975  002C44  C003  F00B         	movff	___fldiv@b+2,??___fldiv+2
  8976  002C48  C004  F00C         	movff	___fldiv@b+3,??___fldiv+3
  8977  002C4C  340C               	rlcf	(??___fldiv+3)^0,w,c
  8978  002C4E  320C               	rrcf	(??___fldiv+3)^0,f,c
  8979  002C50  320B               	rrcf	(??___fldiv+2)^0,f,c
  8980  002C52  320A               	rrcf	(??___fldiv+1)^0,f,c
  8981  002C54  3209               	rrcf	??___fldiv^0,f,c
  8982  002C56  C009  F001         	movff	??___fldiv,___fldiv@b
  8983  002C5A  C00A  F002         	movff	??___fldiv+1,___fldiv@b+1
  8984  002C5E  C00B  F003         	movff	??___fldiv+2,___fldiv@b+2
  8985  002C62  C00C  F004         	movff	??___fldiv+3,___fldiv@b+3
  8986  002C66  4A12               	infsnz	___fldiv@new_exp^0,f,c
  8987  002C68  2A13               	incf	(___fldiv@new_exp+1)^0,f,c
  8988  002C6A                     l4188:
  8989  002C6A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  8990  002C6C  EF40  F016         	goto	u4471
  8991  002C70  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  8992  002C72  E108               	bnz	u4470
  8993  002C74  2812               	incf	___fldiv@new_exp^0,w,c
  8994  002C76  A0D8               	btfss	status,0,c
  8995  002C78  EF40  F016         	goto	u4471
  8996  002C7C  EF42  F016         	goto	u4470
  8997  002C80                     u4471:
  8998  002C80  EF4D  F016         	goto	l4192
  8999  002C84                     u4470:
  9000  002C84  0E00               	movlw	0
  9001  002C86  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9002  002C88  6812               	setf	___fldiv@new_exp^0,c
  9003  002C8A  0E00               	movlw	0
  9004  002C8C  6E01               	movwf	___fldiv@b^0,c
  9005  002C8E  0E00               	movlw	0
  9006  002C90  6E02               	movwf	(___fldiv@b+1)^0,c
  9007  002C92  0E00               	movlw	0
  9008  002C94  6E03               	movwf	(___fldiv@b+2)^0,c
  9009  002C96  0E00               	movlw	0
  9010  002C98  6E04               	movwf	(___fldiv@b+3)^0,c
  9011  002C9A                     l4192:
  9012  002C9A  BE13               	btfsc	(___fldiv@new_exp+1)^0,7,c
  9013  002C9C  EF5A  F016         	goto	u4480
  9014  002CA0  5013               	movf	(___fldiv@new_exp+1)^0,w,c
  9015  002CA2  E106               	bnz	u4481
  9016  002CA4  0412               	decf	___fldiv@new_exp^0,w,c
  9017  002CA6  B0D8               	btfsc	status,0,c
  9018  002CA8  EF58  F016         	goto	u4481
  9019  002CAC  EF5A  F016         	goto	u4480
  9020  002CB0                     u4481:
  9021  002CB0  EF68  F016         	goto	l4196
  9022  002CB4                     u4480:
  9023  002CB4  0E00               	movlw	0
  9024  002CB6  6E13               	movwf	(___fldiv@new_exp+1)^0,c
  9025  002CB8  0E00               	movlw	0
  9026  002CBA  6E12               	movwf	___fldiv@new_exp^0,c
  9027  002CBC  0E00               	movlw	0
  9028  002CBE  6E01               	movwf	___fldiv@b^0,c
  9029  002CC0  0E00               	movlw	0
  9030  002CC2  6E02               	movwf	(___fldiv@b+1)^0,c
  9031  002CC4  0E00               	movlw	0
  9032  002CC6  6E03               	movwf	(___fldiv@b+2)^0,c
  9033  002CC8  0E00               	movlw	0
  9034  002CCA  6E04               	movwf	(___fldiv@b+3)^0,c
  9035  002CCC  0E00               	movlw	0
  9036  002CCE  6E11               	movwf	___fldiv@sign^0,c
  9037  002CD0                     l4196:
  9038  002CD0  C012  F018         	movff	___fldiv@new_exp,___fldiv@bexp
  9039  002CD4  A018               	btfss	___fldiv@bexp^0,0,c
  9040  002CD6  EF6F  F016         	goto	u4491
  9041  002CDA  EF71  F016         	goto	u4490
  9042  002CDE                     u4491:
  9043  002CDE  EF74  F016         	goto	l4202
  9044  002CE2                     u4490:
  9045  002CE2  8E03               	bsf	(___fldiv@b+2)^0,7,c
  9046  002CE4  EF75  F016         	goto	l4204
  9047  002CE8                     l4202:
  9048  002CE8  9E03               	bcf	(___fldiv@b+2)^0,7,c
  9049  002CEA                     l4204:
  9050  002CEA  90D8               	bcf	status,0,c
  9051  002CEC  3018               	rrcf	___fldiv@bexp^0,w,c
  9052  002CEE  6E04               	movwf	(___fldiv@b+3)^0,c
  9053  002CF0  EF2B  F015         	goto	l4118
  9054  002CF4                     l1069:
  9055  002CF4  0012               	return		;funcret
  9056  002CF6                     __end_of___fldiv:
  9057                           	callstack 0
  9058                           
  9059 ;; *************** function ___awmod *****************
  9060 ;; Defined at:
  9061 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
  9062 ;; Parameters:    Size  Location     Type
  9063 ;;  dividend        2    0[COMRAM] int 
  9064 ;;  divisor         2    2[COMRAM] int 
  9065 ;; Auto vars:     Size  Location     Type
  9066 ;;  sign            1    5[COMRAM] unsigned char 
  9067 ;;  counter         1    4[COMRAM] unsigned char 
  9068 ;; Return value:  Size  Location     Type
  9069 ;;                  2    0[COMRAM] int 
  9070 ;; Registers used:
  9071 ;;		wreg, status,2, status,0
  9072 ;; Tracked objects:
  9073 ;;		On entry : 0/0
  9074 ;;		On exit  : 0/0
  9075 ;;		Unchanged: 0/0
  9076 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9077 ;;      Params:         4       0       0       0       0       0       0
  9078 ;;      Locals:         2       0       0       0       0       0       0
  9079 ;;      Temps:          0       0       0       0       0       0       0
  9080 ;;      Totals:         6       0       0       0       0       0       0
  9081 ;;Total ram usage:        6 bytes
  9082 ;; Hardware stack levels used:    1
  9083 ;; Hardware stack levels required when called:    1
  9084 ;; This function calls:
  9085 ;;		Nothing
  9086 ;; This function is called by:
  9087 ;;		_efgtoa
  9088 ;; This function uses a non-reentrant model
  9089 ;;
  9090                           
  9091                           	psect	text25
  9092  004034                     __ptext25:
  9093                           	callstack 0
  9094  004034                     ___awmod:
  9095                           	callstack 23
  9096  004034  0E00               	movlw	0
  9097  004036  6E06               	movwf	___awmod@sign^0,c
  9098  004038  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
  9099  00403A  EF23  F020         	goto	u4750
  9100  00403E  EF21  F020         	goto	u4751
  9101  004042                     u4751:
  9102  004042  EF29  F020         	goto	l4400
  9103  004046                     u4750:
  9104  004046  6C01               	negf	___awmod@dividend^0,c
  9105  004048  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9106  00404A  B0D8               	btfsc	status,0,c
  9107  00404C  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9108  00404E  0E01               	movlw	1
  9109  004050  6E06               	movwf	___awmod@sign^0,c
  9110  004052                     l4400:
  9111  004052  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
  9112  004054  EF30  F020         	goto	u4760
  9113  004058  EF2E  F020         	goto	u4761
  9114  00405C                     u4761:
  9115  00405C  EF34  F020         	goto	l4404
  9116  004060                     u4760:
  9117  004060  6C03               	negf	___awmod@divisor^0,c
  9118  004062  1E04               	comf	(___awmod@divisor+1)^0,f,c
  9119  004064  B0D8               	btfsc	status,0,c
  9120  004066  2A04               	incf	(___awmod@divisor+1)^0,f,c
  9121  004068                     l4404:
  9122  004068  5003               	movf	___awmod@divisor^0,w,c
  9123  00406A  1004               	iorwf	(___awmod@divisor+1)^0,w,c
  9124  00406C  B4D8               	btfsc	status,2,c
  9125  00406E  EF3B  F020         	goto	u4771
  9126  004072  EF3D  F020         	goto	u4770
  9127  004076                     u4771:
  9128  004076  EF61  F020         	goto	l4420
  9129  00407A                     u4770:
  9130  00407A  0E01               	movlw	1
  9131  00407C  6E05               	movwf	___awmod@counter^0,c
  9132  00407E  EF45  F020         	goto	l4410
  9133  004082                     l4408:
  9134  004082  90D8               	bcf	status,0,c
  9135  004084  3603               	rlcf	___awmod@divisor^0,f,c
  9136  004086  3604               	rlcf	(___awmod@divisor+1)^0,f,c
  9137  004088  2A05               	incf	___awmod@counter^0,f,c
  9138  00408A                     l4410:
  9139  00408A  AE04               	btfss	(___awmod@divisor+1)^0,7,c
  9140  00408C  EF4A  F020         	goto	u4781
  9141  004090  EF4C  F020         	goto	u4780
  9142  004094                     u4781:
  9143  004094  EF41  F020         	goto	l4408
  9144  004098                     u4780:
  9145  004098                     l4412:
  9146  004098  5003               	movf	___awmod@divisor^0,w,c
  9147  00409A  5C01               	subwf	___awmod@dividend^0,w,c
  9148  00409C  5004               	movf	(___awmod@divisor+1)^0,w,c
  9149  00409E  5802               	subwfb	(___awmod@dividend+1)^0,w,c
  9150  0040A0  A0D8               	btfss	status,0,c
  9151  0040A2  EF55  F020         	goto	u4791
  9152  0040A6  EF57  F020         	goto	u4790
  9153  0040AA                     u4791:
  9154  0040AA  EF5B  F020         	goto	l4416
  9155  0040AE                     u4790:
  9156  0040AE  5003               	movf	___awmod@divisor^0,w,c
  9157  0040B0  5E01               	subwf	___awmod@dividend^0,f,c
  9158  0040B2  5004               	movf	(___awmod@divisor+1)^0,w,c
  9159  0040B4  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
  9160  0040B6                     l4416:
  9161  0040B6  90D8               	bcf	status,0,c
  9162  0040B8  3204               	rrcf	(___awmod@divisor+1)^0,f,c
  9163  0040BA  3203               	rrcf	___awmod@divisor^0,f,c
  9164  0040BC  2E05               	decfsz	___awmod@counter^0,f,c
  9165  0040BE  EF4C  F020         	goto	l4412
  9166  0040C2                     l4420:
  9167  0040C2  5006               	movf	___awmod@sign^0,w,c
  9168  0040C4  B4D8               	btfsc	status,2,c
  9169  0040C6  EF67  F020         	goto	u4801
  9170  0040CA  EF69  F020         	goto	u4800
  9171  0040CE                     u4801:
  9172  0040CE  EF6D  F020         	goto	l4424
  9173  0040D2                     u4800:
  9174  0040D2  6C01               	negf	___awmod@dividend^0,c
  9175  0040D4  1E02               	comf	(___awmod@dividend+1)^0,f,c
  9176  0040D6  B0D8               	btfsc	status,0,c
  9177  0040D8  2A02               	incf	(___awmod@dividend+1)^0,f,c
  9178  0040DA                     l4424:
  9179  0040DA  C001  F001         	movff	___awmod@dividend,?___awmod
  9180  0040DE  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
  9181  0040E2  0012               	return		;funcret
  9182  0040E4                     __end_of___awmod:
  9183                           	callstack 0
  9184                           
  9185 ;; *************** function ___awdiv *****************
  9186 ;; Defined at:
  9187 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
  9188 ;; Parameters:    Size  Location     Type
  9189 ;;  dividend        2    0[COMRAM] int 
  9190 ;;  divisor         2    2[COMRAM] int 
  9191 ;; Auto vars:     Size  Location     Type
  9192 ;;  quotient        2    6[COMRAM] int 
  9193 ;;  sign            1    5[COMRAM] unsigned char 
  9194 ;;  counter         1    4[COMRAM] unsigned char 
  9195 ;; Return value:  Size  Location     Type
  9196 ;;                  2    0[COMRAM] int 
  9197 ;; Registers used:
  9198 ;;		wreg, status,2, status,0
  9199 ;; Tracked objects:
  9200 ;;		On entry : 0/0
  9201 ;;		On exit  : 0/0
  9202 ;;		Unchanged: 0/0
  9203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9204 ;;      Params:         4       0       0       0       0       0       0
  9205 ;;      Locals:         4       0       0       0       0       0       0
  9206 ;;      Temps:          0       0       0       0       0       0       0
  9207 ;;      Totals:         8       0       0       0       0       0       0
  9208 ;;Total ram usage:        8 bytes
  9209 ;; Hardware stack levels used:    1
  9210 ;; Hardware stack levels required when called:    1
  9211 ;; This function calls:
  9212 ;;		Nothing
  9213 ;; This function is called by:
  9214 ;;		_efgtoa
  9215 ;; This function uses a non-reentrant model
  9216 ;;
  9217                           
  9218                           	psect	text26
  9219  003F70                     __ptext26:
  9220                           	callstack 0
  9221  003F70                     ___awdiv:
  9222                           	callstack 23
  9223  003F70  0E00               	movlw	0
  9224  003F72  6E06               	movwf	___awdiv@sign^0,c
  9225  003F74  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
  9226  003F76  EFC1  F01F         	goto	u4690
  9227  003F7A  EFBF  F01F         	goto	u4691
  9228  003F7E                     u4691:
  9229  003F7E  EFC7  F01F         	goto	l4356
  9230  003F82                     u4690:
  9231  003F82  6C03               	negf	___awdiv@divisor^0,c
  9232  003F84  1E04               	comf	(___awdiv@divisor+1)^0,f,c
  9233  003F86  B0D8               	btfsc	status,0,c
  9234  003F88  2A04               	incf	(___awdiv@divisor+1)^0,f,c
  9235  003F8A  0E01               	movlw	1
  9236  003F8C  6E06               	movwf	___awdiv@sign^0,c
  9237  003F8E                     l4356:
  9238  003F8E  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
  9239  003F90  EFCE  F01F         	goto	u4700
  9240  003F94  EFCC  F01F         	goto	u4701
  9241  003F98                     u4701:
  9242  003F98  EFD4  F01F         	goto	l4362
  9243  003F9C                     u4700:
  9244  003F9C  6C01               	negf	___awdiv@dividend^0,c
  9245  003F9E  1E02               	comf	(___awdiv@dividend+1)^0,f,c
  9246  003FA0  B0D8               	btfsc	status,0,c
  9247  003FA2  2A02               	incf	(___awdiv@dividend+1)^0,f,c
  9248  003FA4  0E01               	movlw	1
  9249  003FA6  1A06               	xorwf	___awdiv@sign^0,f,c
  9250  003FA8                     l4362:
  9251  003FA8  0E00               	movlw	0
  9252  003FAA  6E08               	movwf	(___awdiv@quotient+1)^0,c
  9253  003FAC  0E00               	movlw	0
  9254  003FAE  6E07               	movwf	___awdiv@quotient^0,c
  9255  003FB0  5003               	movf	___awdiv@divisor^0,w,c
  9256  003FB2  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
  9257  003FB4  B4D8               	btfsc	status,2,c
  9258  003FB6  EFDF  F01F         	goto	u4711
  9259  003FBA  EFE1  F01F         	goto	u4710
  9260  003FBE                     u4711:
  9261  003FBE  EF09  F020         	goto	l4384
  9262  003FC2                     u4710:
  9263  003FC2  0E01               	movlw	1
  9264  003FC4  6E05               	movwf	___awdiv@counter^0,c
  9265  003FC6  EFE9  F01F         	goto	l4370
  9266  003FCA                     l4368:
  9267  003FCA  90D8               	bcf	status,0,c
  9268  003FCC  3603               	rlcf	___awdiv@divisor^0,f,c
  9269  003FCE  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
  9270  003FD0  2A05               	incf	___awdiv@counter^0,f,c
  9271  003FD2                     l4370:
  9272  003FD2  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
  9273  003FD4  EFEE  F01F         	goto	u4721
  9274  003FD8  EFF0  F01F         	goto	u4720
  9275  003FDC                     u4721:
  9276  003FDC  EFE5  F01F         	goto	l4368
  9277  003FE0                     u4720:
  9278  003FE0                     l4372:
  9279  003FE0  90D8               	bcf	status,0,c
  9280  003FE2  3607               	rlcf	___awdiv@quotient^0,f,c
  9281  003FE4  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
  9282  003FE6  5003               	movf	___awdiv@divisor^0,w,c
  9283  003FE8  5C01               	subwf	___awdiv@dividend^0,w,c
  9284  003FEA  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9285  003FEC  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
  9286  003FEE  A0D8               	btfss	status,0,c
  9287  003FF0  EFFC  F01F         	goto	u4731
  9288  003FF4  EFFE  F01F         	goto	u4730
  9289  003FF8                     u4731:
  9290  003FF8  EF03  F020         	goto	l4380
  9291  003FFC                     u4730:
  9292  003FFC  5003               	movf	___awdiv@divisor^0,w,c
  9293  003FFE  5E01               	subwf	___awdiv@dividend^0,f,c
  9294  004000  5004               	movf	(___awdiv@divisor+1)^0,w,c
  9295  004002  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
  9296  004004  8007               	bsf	___awdiv@quotient^0,0,c
  9297  004006                     l4380:
  9298  004006  90D8               	bcf	status,0,c
  9299  004008  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
  9300  00400A  3203               	rrcf	___awdiv@divisor^0,f,c
  9301  00400C  2E05               	decfsz	___awdiv@counter^0,f,c
  9302  00400E  EFF0  F01F         	goto	l4372
  9303  004012                     l4384:
  9304  004012  5006               	movf	___awdiv@sign^0,w,c
  9305  004014  B4D8               	btfsc	status,2,c
  9306  004016  EF0F  F020         	goto	u4741
  9307  00401A  EF11  F020         	goto	u4740
  9308  00401E                     u4741:
  9309  00401E  EF15  F020         	goto	l4388
  9310  004022                     u4740:
  9311  004022  6C07               	negf	___awdiv@quotient^0,c
  9312  004024  1E08               	comf	(___awdiv@quotient+1)^0,f,c
  9313  004026  B0D8               	btfsc	status,0,c
  9314  004028  2A08               	incf	(___awdiv@quotient+1)^0,f,c
  9315  00402A                     l4388:
  9316  00402A  C007  F001         	movff	___awdiv@quotient,?___awdiv
  9317  00402E  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  9318  004032  0012               	return		;funcret
  9319  004034                     __end_of___awdiv:
  9320                           	callstack 0
  9321                           
  9322 ;; *************** function _dtoa *****************
  9323 ;; Defined at:
  9324 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9325 ;; Parameters:    Size  Location     Type
  9326 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
  9327 ;;		 -> sprintf@f(6), 
  9328 ;;  d               8   29[COMRAM] long long 
  9329 ;; Auto vars:     Size  Location     Type
  9330 ;;  n               8   53[COMRAM] long long 
  9331 ;;  i               2   61[COMRAM] int 
  9332 ;;  s               2   51[COMRAM] int 
  9333 ;;  w               2   49[COMRAM] int 
  9334 ;;  p               2   47[COMRAM] int 
  9335 ;; Return value:  Size  Location     Type
  9336 ;;                  2   27[COMRAM] int 
  9337 ;; Registers used:
  9338 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9339 ;; Tracked objects:
  9340 ;;		On entry : 0/0
  9341 ;;		On exit  : 0/0
  9342 ;;		Unchanged: 0/0
  9343 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9344 ;;      Params:        10       0       0       0       0       0       0
  9345 ;;      Locals:        18       0       0       0       0       0       0
  9346 ;;      Temps:          8       0       0       0       0       0       0
  9347 ;;      Totals:        36       0       0       0       0       0       0
  9348 ;;Total ram usage:       36 bytes
  9349 ;; Hardware stack levels used:    1
  9350 ;; Hardware stack levels required when called:    5
  9351 ;; This function calls:
  9352 ;;		___aodiv
  9353 ;;		___aomod
  9354 ;;		_abs
  9355 ;;		_pad
  9356 ;; This function is called by:
  9357 ;;		_vfpfcnvrt
  9358 ;; This function uses a non-reentrant model
  9359 ;;
  9360                           
  9361                           	psect	text27
  9362  002CF6                     __ptext27:
  9363                           	callstack 0
  9364  002CF6                     _dtoa:
  9365                           	callstack 20
  9366  002CF6                     
  9367                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
  9368  002CF6  C01E  F036         	movff	dtoa@d,dtoa@n
  9369  002CFA  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
  9370  002CFE  C020  F038         	movff	dtoa@d+2,dtoa@n+2
  9371  002D02  C021  F039         	movff	dtoa@d+3,dtoa@n+3
  9372  002D06  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
  9373  002D0A  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
  9374  002D0E  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
  9375  002D12  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
  9376  002D16                     
  9377                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
  9378  002D16  BE3D               	btfsc	(dtoa@n+7)^0,7,c
  9379  002D18  EF90  F016         	goto	u5281
  9380  002D1C  EF93  F016         	goto	u5280
  9381  002D20                     u5281:
  9382  002D20  0E01               	movlw	1
  9383  002D22  EF94  F016         	goto	u5290
  9384  002D26                     u5280:
  9385  002D26  0E00               	movlw	0
  9386  002D28                     u5290:
  9387  002D28  6E34               	movwf	dtoa@s^0,c
  9388  002D2A  6A35               	clrf	(dtoa@s+1)^0,c
  9389                           
  9390                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
  9391  002D2C  5034               	movf	dtoa@s^0,w,c
  9392  002D2E  1035               	iorwf	(dtoa@s+1)^0,w,c
  9393  002D30  B4D8               	btfsc	status,2,c
  9394  002D32  EF9D  F016         	goto	u5301
  9395  002D36  EF9F  F016         	goto	u5300
  9396  002D3A                     u5301:
  9397  002D3A  EFAF  F016         	goto	l4630
  9398  002D3E                     u5300:
  9399  002D3E                     
  9400                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
  9401  002D3E  1E3D               	comf	(dtoa@n+7)^0,f,c
  9402  002D40  1E3C               	comf	(dtoa@n+6)^0,f,c
  9403  002D42  1E3B               	comf	(dtoa@n+5)^0,f,c
  9404  002D44  1E3A               	comf	(dtoa@n+4)^0,f,c
  9405  002D46  1E39               	comf	(dtoa@n+3)^0,f,c
  9406  002D48  1E38               	comf	(dtoa@n+2)^0,f,c
  9407  002D4A  1E37               	comf	(dtoa@n+1)^0,f,c
  9408  002D4C  6C36               	negf	dtoa@n^0,c
  9409  002D4E  0E00               	movlw	0
  9410  002D50  2237               	addwfc	(dtoa@n+1)^0,f,c
  9411  002D52  2238               	addwfc	(dtoa@n+2)^0,f,c
  9412  002D54  2239               	addwfc	(dtoa@n+3)^0,f,c
  9413  002D56  223A               	addwfc	(dtoa@n+4)^0,f,c
  9414  002D58  223B               	addwfc	(dtoa@n+5)^0,f,c
  9415  002D5A  223C               	addwfc	(dtoa@n+6)^0,f,c
  9416  002D5C  223D               	addwfc	(dtoa@n+7)^0,f,c
  9417  002D5E                     l4630:
  9418                           
  9419                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
  9420  002D5E  0100               	movlb	0	; () banked
  9421  002D60  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  9422  002D62  EFB5  F016         	goto	u5311
  9423  002D66  EFB7  F016         	goto	u5310
  9424  002D6A                     u5311:
  9425  002D6A  EFB8  F016         	goto	l4634
  9426  002D6E                     u5310:
  9427  002D6E                     
  9428                           ; BSR set to: 0
  9429                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
  9430  002D6E  93F1               	bcf	_flags& (0+255),1,b
  9431  002D70                     l4634:
  9432                           
  9433                           ; BSR set to: 0
  9434                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
  9435  002D70  BFF0               	btfsc	(_prec+1)& (0+255),7,b
  9436  002D72  EFC5  F016         	goto	u5320
  9437  002D76  51F0               	movf	(_prec+1)& (0+255),w,b
  9438  002D78  E106               	bnz	u5321
  9439  002D7A  05EF               	decf	_prec& (0+255),w,b
  9440  002D7C  B0D8               	btfsc	status,0,c
  9441  002D7E  EFC3  F016         	goto	u5321
  9442  002D82  EFC5  F016         	goto	u5320
  9443  002D86                     u5321:
  9444  002D86  EFCB  F016         	goto	l1224
  9445  002D8A                     u5320:
  9446  002D8A                     
  9447                           ; BSR set to: 0
  9448  002D8A  0E00               	movlw	0
  9449  002D8C  6E31               	movwf	(dtoa@p+1)^0,c
  9450  002D8E  0E01               	movlw	1
  9451  002D90  6E30               	movwf	dtoa@p^0,c
  9452  002D92  EFCF  F016         	goto	l1226
  9453  002D96                     l1224:
  9454                           
  9455                           ; BSR set to: 0
  9456  002D96  C0EF  F030         	movff	_prec,dtoa@p
  9457  002D9A  C0F0  F031         	movff	_prec+1,dtoa@p+1
  9458  002D9E                     l1226:
  9459                           
  9460                           ; BSR set to: 0
  9461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
  9462  002D9E  C0ED  F032         	movff	_width,dtoa@w
  9463  002DA2  C0EE  F033         	movff	_width+1,dtoa@w+1
  9464  002DA6                     
  9465                           ; BSR set to: 0
  9466                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
  9467  002DA6  5034               	movf	dtoa@s^0,w,c
  9468  002DA8  1035               	iorwf	(dtoa@s+1)^0,w,c
  9469  002DAA  A4D8               	btfss	status,2,c
  9470  002DAC  EFDA  F016         	goto	u5331
  9471  002DB0  EFDC  F016         	goto	u5330
  9472  002DB4                     u5331:
  9473  002DB4  EFE3  F016         	goto	l4642
  9474  002DB8                     u5330:
  9475  002DB8                     
  9476                           ; BSR set to: 0
  9477  002DB8  A5F1               	btfss	_flags& (0+255),2,b
  9478  002DBA  EFE1  F016         	goto	u5341
  9479  002DBE  EFE3  F016         	goto	u5340
  9480  002DC2                     u5341:
  9481  002DC2  EFE6  F016         	goto	l4644
  9482  002DC6                     u5340:
  9483  002DC6                     l4642:
  9484                           
  9485                           ; BSR set to: 0
  9486                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
  9487  002DC6  0632               	decf	dtoa@w^0,f,c
  9488  002DC8  A0D8               	btfss	status,0,c
  9489  002DCA  0633               	decf	(dtoa@w+1)^0,f,c
  9490  002DCC                     l4644:
  9491                           
  9492                           ; BSR set to: 0
  9493                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
  9494  002DCC  0E00               	movlw	0
  9495  002DCE  6E3F               	movwf	(dtoa@i+1)^0,c
  9496  002DD0  0E4F               	movlw	79
  9497  002DD2  6E3E               	movwf	dtoa@i^0,c
  9498  002DD4                     
  9499                           ; BSR set to: 0
  9500                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
  9501  002DD4  0E00               	movlw	0
  9502  002DD6  0101               	movlb	1	; () banked
  9503  002DD8  6FFA               	movwf	(_dbuf+79)& (0+255),b
  9504                           
  9505                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9506  002DDA  EF6B  F017         	goto	l4658
  9507  002DDE                     l4648:
  9508                           
  9509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
  9510  002DDE  063E               	decf	dtoa@i^0,f,c
  9511  002DE0  A0D8               	btfss	status,0,c
  9512  002DE2  063F               	decf	(dtoa@i+1)^0,f,c
  9513  002DE4                     
  9514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
  9515  002DE4  0EAB               	movlw	low _dbuf
  9516  002DE6  243E               	addwf	dtoa@i^0,w,c
  9517  002DE8  6ED9               	movwf	fsr2l,c
  9518  002DEA  0E01               	movlw	high _dbuf
  9519  002DEC  203F               	addwfc	(dtoa@i+1)^0,w,c
  9520  002DEE  6EDA               	movwf	fsr2h,c
  9521  002DF0  C036  F001         	movff	dtoa@n,___aomod@dividend
  9522  002DF4  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
  9523  002DF8  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
  9524  002DFC  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
  9525  002E00  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
  9526  002E04  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
  9527  002E08  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
  9528  002E0C  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
  9529  002E10  0E0A               	movlw	10
  9530  002E12  6E09               	movwf	___aomod@divisor^0,c
  9531  002E14  0E00               	movlw	0
  9532  002E16  6E0A               	movwf	(___aomod@divisor+1)^0,c
  9533  002E18  0E00               	movlw	0
  9534  002E1A  6E0B               	movwf	(___aomod@divisor+2)^0,c
  9535  002E1C  0E00               	movlw	0
  9536  002E1E  6E0C               	movwf	(___aomod@divisor+3)^0,c
  9537  002E20  0E00               	movlw	0
  9538  002E22  6E0D               	movwf	(___aomod@divisor+4)^0,c
  9539  002E24  0E00               	movlw	0
  9540  002E26  6E0E               	movwf	(___aomod@divisor+5)^0,c
  9541  002E28  0E00               	movlw	0
  9542  002E2A  6E0F               	movwf	(___aomod@divisor+6)^0,c
  9543  002E2C  0E00               	movlw	0
  9544  002E2E  6E10               	movwf	(___aomod@divisor+7)^0,c
  9545  002E30  EC55  F01B         	call	___aomod	;wreg free
  9546  002E34  C001  F026         	movff	?___aomod,??_dtoa
  9547  002E38  C002  F027         	movff	?___aomod+1,??_dtoa+1
  9548  002E3C  C003  F028         	movff	?___aomod+2,??_dtoa+2
  9549  002E40  C004  F029         	movff	?___aomod+3,??_dtoa+3
  9550  002E44  C005  F02A         	movff	?___aomod+4,??_dtoa+4
  9551  002E48  C006  F02B         	movff	?___aomod+5,??_dtoa+5
  9552  002E4C  C007  F02C         	movff	?___aomod+6,??_dtoa+6
  9553  002E50  C008  F02D         	movff	?___aomod+7,??_dtoa+7
  9554  002E54  C026  F013         	movff	??_dtoa,abs@a
  9555  002E58  C028  F014         	movff	??_dtoa+2,abs@a+1
  9556  002E5C  EC3B  F023         	call	_abs	;wreg free
  9557  002E60  5013               	movf	?_abs^0,w,c
  9558  002E62  0F30               	addlw	48
  9559  002E64  6EDF               	movwf	indf2,c
  9560  002E66                     
  9561                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
  9562  002E66  0630               	decf	dtoa@p^0,f,c
  9563  002E68  A0D8               	btfss	status,0,c
  9564  002E6A  0631               	decf	(dtoa@p+1)^0,f,c
  9565  002E6C                     
  9566                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
  9567  002E6C  0632               	decf	dtoa@w^0,f,c
  9568  002E6E  A0D8               	btfss	status,0,c
  9569  002E70  0633               	decf	(dtoa@w+1)^0,f,c
  9570  002E72                     
  9571                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
  9572  002E72  C036  F001         	movff	dtoa@n,___aodiv@dividend
  9573  002E76  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
  9574  002E7A  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
  9575  002E7E  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
  9576  002E82  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
  9577  002E86  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
  9578  002E8A  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
  9579  002E8E  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
  9580  002E92  0E0A               	movlw	10
  9581  002E94  6E09               	movwf	___aodiv@divisor^0,c
  9582  002E96  0E00               	movlw	0
  9583  002E98  6E0A               	movwf	(___aodiv@divisor+1)^0,c
  9584  002E9A  0E00               	movlw	0
  9585  002E9C  6E0B               	movwf	(___aodiv@divisor+2)^0,c
  9586  002E9E  0E00               	movlw	0
  9587  002EA0  6E0C               	movwf	(___aodiv@divisor+3)^0,c
  9588  002EA2  0E00               	movlw	0
  9589  002EA4  6E0D               	movwf	(___aodiv@divisor+4)^0,c
  9590  002EA6  0E00               	movlw	0
  9591  002EA8  6E0E               	movwf	(___aodiv@divisor+5)^0,c
  9592  002EAA  0E00               	movlw	0
  9593  002EAC  6E0F               	movwf	(___aodiv@divisor+6)^0,c
  9594  002EAE  0E00               	movlw	0
  9595  002EB0  6E10               	movwf	(___aodiv@divisor+7)^0,c
  9596  002EB2  EC91  F01A         	call	___aodiv	;wreg free
  9597  002EB6  C001  F036         	movff	?___aodiv,dtoa@n
  9598  002EBA  C002  F037         	movff	?___aodiv+1,dtoa@n+1
  9599  002EBE  C003  F038         	movff	?___aodiv+2,dtoa@n+2
  9600  002EC2  C004  F039         	movff	?___aodiv+3,dtoa@n+3
  9601  002EC6  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
  9602  002ECA  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
  9603  002ECE  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
  9604  002ED2  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
  9605  002ED6                     l4658:
  9606                           
  9607                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
  9608  002ED6  BE3F               	btfsc	(dtoa@i+1)^0,7,c
  9609  002ED8  EF76  F017         	goto	u5351
  9610  002EDC  503F               	movf	(dtoa@i+1)^0,w,c
  9611  002EDE  E108               	bnz	u5350
  9612  002EE0  043E               	decf	dtoa@i^0,w,c
  9613  002EE2  A0D8               	btfss	status,0,c
  9614  002EE4  EF76  F017         	goto	u5351
  9615  002EE8  EF78  F017         	goto	u5350
  9616  002EEC                     u5351:
  9617  002EEC  EFA9  F017         	goto	l4668
  9618  002EF0                     u5350:
  9619  002EF0  5036               	movf	dtoa@n^0,w,c
  9620  002EF2  1037               	iorwf	(dtoa@n+1)^0,w,c
  9621  002EF4  1038               	iorwf	(dtoa@n+2)^0,w,c
  9622  002EF6  1039               	iorwf	(dtoa@n+3)^0,w,c
  9623  002EF8  103A               	iorwf	(dtoa@n+4)^0,w,c
  9624  002EFA  103B               	iorwf	(dtoa@n+5)^0,w,c
  9625  002EFC  103C               	iorwf	(dtoa@n+6)^0,w,c
  9626  002EFE  103D               	iorwf	(dtoa@n+7)^0,w,c
  9627  002F00  A4D8               	btfss	status,2,c
  9628  002F02  EF85  F017         	goto	u5361
  9629  002F06  EF87  F017         	goto	u5360
  9630  002F0A                     u5361:
  9631  002F0A  EFEF  F016         	goto	l4648
  9632  002F0E                     u5360:
  9633  002F0E  BE31               	btfsc	(dtoa@p+1)^0,7,c
  9634  002F10  EF94  F017         	goto	u5370
  9635  002F14  5031               	movf	(dtoa@p+1)^0,w,c
  9636  002F16  E106               	bnz	u5371
  9637  002F18  0430               	decf	dtoa@p^0,w,c
  9638  002F1A  B0D8               	btfsc	status,0,c
  9639  002F1C  EF92  F017         	goto	u5371
  9640  002F20  EF94  F017         	goto	u5370
  9641  002F24                     u5371:
  9642  002F24  EFEF  F016         	goto	l4648
  9643  002F28                     u5370:
  9644  002F28  BE33               	btfsc	(dtoa@w+1)^0,7,c
  9645  002F2A  EF9F  F017         	goto	u5381
  9646  002F2E  5033               	movf	(dtoa@w+1)^0,w,c
  9647  002F30  E108               	bnz	u5380
  9648  002F32  0432               	decf	dtoa@w^0,w,c
  9649  002F34  A0D8               	btfss	status,0,c
  9650  002F36  EF9F  F017         	goto	u5381
  9651  002F3A  EFA1  F017         	goto	u5380
  9652  002F3E                     u5381:
  9653  002F3E  EFA9  F017         	goto	l4668
  9654  002F42                     u5380:
  9655  002F42  0100               	movlb	0	; () banked
  9656  002F44  B3F1               	btfsc	_flags& (0+255),1,b
  9657  002F46  EFA7  F017         	goto	u5391
  9658  002F4A  EFA9  F017         	goto	u5390
  9659  002F4E                     u5391:
  9660  002F4E  EFEF  F016         	goto	l4648
  9661  002F52                     u5390:
  9662  002F52                     l4668:
  9663                           
  9664                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
  9665  002F52  5034               	movf	dtoa@s^0,w,c
  9666  002F54  1035               	iorwf	(dtoa@s+1)^0,w,c
  9667  002F56  A4D8               	btfss	status,2,c
  9668  002F58  EFB0  F017         	goto	u5401
  9669  002F5C  EFB2  F017         	goto	u5400
  9670  002F60                     u5401:
  9671  002F60  EFBA  F017         	goto	l4672
  9672  002F64                     u5400:
  9673  002F64  0100               	movlb	0	; () banked
  9674  002F66  A5F1               	btfss	_flags& (0+255),2,b
  9675  002F68  EFB8  F017         	goto	u5411
  9676  002F6C  EFBA  F017         	goto	u5410
  9677  002F70                     u5411:
  9678  002F70  EFD8  F017         	goto	l4682
  9679  002F74                     u5410:
  9680  002F74                     l4672:
  9681                           
  9682                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
  9683  002F74  063E               	decf	dtoa@i^0,f,c
  9684  002F76  A0D8               	btfss	status,0,c
  9685  002F78  063F               	decf	(dtoa@i+1)^0,f,c
  9686  002F7A                     
  9687                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
  9688  002F7A  5034               	movf	dtoa@s^0,w,c
  9689  002F7C  1035               	iorwf	(dtoa@s+1)^0,w,c
  9690  002F7E  A4D8               	btfss	status,2,c
  9691  002F80  EFC4  F017         	goto	u5421
  9692  002F84  EFC6  F017         	goto	u5420
  9693  002F88                     u5421:
  9694  002F88  EFCC  F017         	goto	l4678
  9695  002F8C                     u5420:
  9696  002F8C  0E00               	movlw	0
  9697  002F8E  6E2F               	movwf	(_dtoa$2842+1)^0,c
  9698  002F90  0E2B               	movlw	43
  9699  002F92  6E2E               	movwf	_dtoa$2842^0,c
  9700  002F94  EFD0  F017         	goto	l4680
  9701  002F98                     l4678:
  9702  002F98  0E00               	movlw	0
  9703  002F9A  6E2F               	movwf	(_dtoa$2842+1)^0,c
  9704  002F9C  0E2D               	movlw	45
  9705  002F9E  6E2E               	movwf	_dtoa$2842^0,c
  9706  002FA0                     l4680:
  9707  002FA0  0EAB               	movlw	low _dbuf
  9708  002FA2  243E               	addwf	dtoa@i^0,w,c
  9709  002FA4  6ED9               	movwf	fsr2l,c
  9710  002FA6  0E01               	movlw	high _dbuf
  9711  002FA8  203F               	addwfc	(dtoa@i+1)^0,w,c
  9712  002FAA  6EDA               	movwf	fsr2h,c
  9713  002FAC  C02E  FFDF         	movff	_dtoa$2842,indf2
  9714  002FB0                     l4682:
  9715                           
  9716                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
  9717  002FB0  C01C  F011         	movff	dtoa@fp,pad@fp
  9718  002FB4  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
  9719  002FB8  0EAB               	movlw	low _dbuf
  9720  002FBA  243E               	addwf	dtoa@i^0,w,c
  9721  002FBC  6E13               	movwf	pad@buf^0,c
  9722  002FBE  0E01               	movlw	high _dbuf
  9723  002FC0  203F               	addwfc	(dtoa@i+1)^0,w,c
  9724  002FC2  6E14               	movwf	(pad@buf+1)^0,c
  9725  002FC4  C032  F015         	movff	dtoa@w,pad@p
  9726  002FC8  C033  F016         	movff	dtoa@w+1,pad@p+1
  9727  002FCC  EC55  F01F         	call	_pad	;wreg free
  9728  002FD0  C011  F01C         	movff	?_pad,?_dtoa
  9729  002FD4  C012  F01D         	movff	?_pad+1,?_dtoa+1
  9730  002FD8  0012               	return		;funcret
  9731  002FDA                     __end_of_dtoa:
  9732                           	callstack 0
  9733                           
  9734 ;; *************** function _pad *****************
  9735 ;; Defined at:
  9736 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  9737 ;; Parameters:    Size  Location     Type
  9738 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
  9739 ;;		 -> sprintf@f(6), 
  9740 ;;  buf             2   18[COMRAM] PTR unsigned char 
  9741 ;;		 -> dbuf(80), 
  9742 ;;  p               2   20[COMRAM] int 
  9743 ;; Auto vars:     Size  Location     Type
  9744 ;;  w               2   25[COMRAM] int 
  9745 ;;  i               2   23[COMRAM] int 
  9746 ;; Return value:  Size  Location     Type
  9747 ;;                  2   16[COMRAM] int 
  9748 ;; Registers used:
  9749 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9750 ;; Tracked objects:
  9751 ;;		On entry : 0/0
  9752 ;;		On exit  : 0/0
  9753 ;;		Unchanged: 0/0
  9754 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9755 ;;      Params:         6       0       0       0       0       0       0
  9756 ;;      Locals:         4       0       0       0       0       0       0
  9757 ;;      Temps:          1       0       0       0       0       0       0
  9758 ;;      Totals:        11       0       0       0       0       0       0
  9759 ;;Total ram usage:       11 bytes
  9760 ;; Hardware stack levels used:    1
  9761 ;; Hardware stack levels required when called:    4
  9762 ;; This function calls:
  9763 ;;		_fputc
  9764 ;;		_fputs
  9765 ;;		_strlen
  9766 ;; This function is called by:
  9767 ;;		_dtoa
  9768 ;;		_efgtoa
  9769 ;; This function uses a non-reentrant model
  9770 ;;
  9771                           
  9772                           	psect	text28
  9773  003EAA                     __ptext28:
  9774                           	callstack 0
  9775  003EAA                     _pad:
  9776                           	callstack 20
  9777  003EAA                     
  9778                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
  9779  003EAA  0100               	movlb	0	; () banked
  9780  003EAC  A1F1               	btfss	_flags& (0+255),0,b
  9781  003EAE  EF5B  F01F         	goto	u4971
  9782  003EB2  EF5D  F01F         	goto	u4970
  9783  003EB6                     u4971:
  9784  003EB6  EF67  F01F         	goto	l4522
  9785  003EBA                     u4970:
  9786  003EBA                     
  9787                           ; BSR set to: 0
  9788                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
  9789  003EBA  C013  F00A         	movff	pad@buf,fputs@s
  9790  003EBE  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9791  003EC2  C011  F00C         	movff	pad@fp,fputs@fp
  9792  003EC6  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9793  003ECA  EC19  F023         	call	_fputs	;wreg free
  9794  003ECE                     l4522:
  9795                           
  9796                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
  9797  003ECE  BE16               	btfsc	(pad@p+1)^0,7,c
  9798  003ED0  EF6C  F01F         	goto	u4981
  9799  003ED4  EF6E  F01F         	goto	u4980
  9800  003ED8                     u4981:
  9801  003ED8  EF74  F01F         	goto	l4526
  9802  003EDC                     u4980:
  9803  003EDC  C015  F01A         	movff	pad@p,pad@w
  9804  003EE0  C016  F01B         	movff	pad@p+1,pad@w+1
  9805  003EE4  EF78  F01F         	goto	l1213
  9806  003EE8                     l4526:
  9807  003EE8  0E00               	movlw	0
  9808  003EEA  6E1B               	movwf	(pad@w+1)^0,c
  9809  003EEC  0E00               	movlw	0
  9810  003EEE  6E1A               	movwf	pad@w^0,c
  9811  003EF0                     l1213:
  9812                           
  9813                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
  9814  003EF0  0E00               	movlw	0
  9815  003EF2  6E19               	movwf	(pad@i+1)^0,c
  9816  003EF4  0E00               	movlw	0
  9817  003EF6  6E18               	movwf	pad@i^0,c
  9818                           
  9819                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9820  003EF8  EF8A  F01F         	goto	l4532
  9821  003EFC                     l4528:
  9822                           
  9823                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
  9824  003EFC  0E00               	movlw	0
  9825  003EFE  6E02               	movwf	(fputc@c+1)^0,c
  9826  003F00  0E20               	movlw	32
  9827  003F02  6E01               	movwf	fputc@c^0,c
  9828  003F04  C011  F003         	movff	pad@fp,fputc@fp
  9829  003F08  C012  F004         	movff	pad@fp+1,fputc@fp+1
  9830  003F0C  ECF0  F01E         	call	_fputc	;wreg free
  9831  003F10                     
  9832                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
  9833  003F10  4A18               	infsnz	pad@i^0,f,c
  9834  003F12  2A19               	incf	(pad@i+1)^0,f,c
  9835  003F14                     l4532:
  9836                           
  9837                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
  9838  003F14  501A               	movf	pad@w^0,w,c
  9839  003F16  5C18               	subwf	pad@i^0,w,c
  9840  003F18  5019               	movf	(pad@i+1)^0,w,c
  9841  003F1A  0A80               	xorlw	128
  9842  003F1C  6E17               	movwf	??_pad^0,c
  9843  003F1E  501B               	movf	(pad@w+1)^0,w,c
  9844  003F20  0A80               	xorlw	128
  9845  003F22  5817               	subwfb	??_pad^0,w,c
  9846  003F24  A0D8               	btfss	status,0,c
  9847  003F26  EF97  F01F         	goto	u4991
  9848  003F2A  EF99  F01F         	goto	u4990
  9849  003F2E                     u4991:
  9850  003F2E  EF7E  F01F         	goto	l4528
  9851  003F32                     u4990:
  9852  003F32                     
  9853                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
  9854  003F32  0100               	movlb	0	; () banked
  9855  003F34  B1F1               	btfsc	_flags& (0+255),0,b
  9856  003F36  EF9F  F01F         	goto	u5001
  9857  003F3A  EFA1  F01F         	goto	u5000
  9858  003F3E                     u5001:
  9859  003F3E  EFAB  F01F         	goto	l4536
  9860  003F42                     u5000:
  9861  003F42                     
  9862                           ; BSR set to: 0
  9863                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
  9864  003F42  C013  F00A         	movff	pad@buf,fputs@s
  9865  003F46  C014  F00B         	movff	pad@buf+1,fputs@s+1
  9866  003F4A  C011  F00C         	movff	pad@fp,fputs@fp
  9867  003F4E  C012  F00D         	movff	pad@fp+1,fputs@fp+1
  9868  003F52  EC19  F023         	call	_fputs	;wreg free
  9869  003F56                     l4536:
  9870                           
  9871                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
  9872  003F56  C013  F001         	movff	pad@buf,strlen@s
  9873  003F5A  C014  F002         	movff	pad@buf+1,strlen@s+1
  9874  003F5E  ECAF  F023         	call	_strlen	;wreg free
  9875  003F62  501A               	movf	pad@w^0,w,c
  9876  003F64  2401               	addwf	?_strlen^0,w,c
  9877  003F66  6E11               	movwf	?_pad^0,c
  9878  003F68  501B               	movf	(pad@w+1)^0,w,c
  9879  003F6A  2002               	addwfc	(?_strlen+1)^0,w,c
  9880  003F6C  6E12               	movwf	(?_pad+1)^0,c
  9881  003F6E  0012               	return		;funcret
  9882  003F70                     __end_of_pad:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function _strlen *****************
  9886 ;; Defined at:
  9887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  s               2    0[COMRAM] PTR const unsigned char 
  9890 ;;		 -> dbuf(80), 
  9891 ;; Auto vars:     Size  Location     Type
  9892 ;;  a               2    2[COMRAM] PTR const unsigned char 
  9893 ;;		 -> dbuf(80), 
  9894 ;; Return value:  Size  Location     Type
  9895 ;;                  2    0[COMRAM] unsigned int 
  9896 ;; Registers used:
  9897 ;;		wreg, fsr2l, fsr2h, status,2, status,0
  9898 ;; Tracked objects:
  9899 ;;		On entry : 0/0
  9900 ;;		On exit  : 0/0
  9901 ;;		Unchanged: 0/0
  9902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9903 ;;      Params:         2       0       0       0       0       0       0
  9904 ;;      Locals:         2       0       0       0       0       0       0
  9905 ;;      Temps:          0       0       0       0       0       0       0
  9906 ;;      Totals:         4       0       0       0       0       0       0
  9907 ;;Total ram usage:        4 bytes
  9908 ;; Hardware stack levels used:    1
  9909 ;; Hardware stack levels required when called:    1
  9910 ;; This function calls:
  9911 ;;		Nothing
  9912 ;; This function is called by:
  9913 ;;		_pad
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text29
  9918  00475E                     __ptext29:
  9919                           	callstack 0
  9920  00475E                     _strlen:
  9921                           	callstack 22
  9922  00475E  C001  F003         	movff	strlen@s,strlen@a
  9923  004762  C002  F004         	movff	strlen@s+1,strlen@a+1
  9924  004766  EFB7  F023         	goto	l3978
  9925  00476A                     l3976:
  9926  00476A  4A01               	infsnz	strlen@s^0,f,c
  9927  00476C  2A02               	incf	(strlen@s+1)^0,f,c
  9928  00476E                     l3978:
  9929  00476E  C001  FFD9         	movff	strlen@s,fsr2l
  9930  004772  C002  FFDA         	movff	strlen@s+1,fsr2h
  9931  004776  50DF               	movf	indf2,w,c
  9932  004778  A4D8               	btfss	status,2,c
  9933  00477A  EFC1  F023         	goto	u4111
  9934  00477E  EFC3  F023         	goto	u4110
  9935  004782                     u4111:
  9936  004782  EFB5  F023         	goto	l3976
  9937  004786                     u4110:
  9938  004786  5003               	movf	strlen@a^0,w,c
  9939  004788  5C01               	subwf	strlen@s^0,w,c
  9940  00478A  6E01               	movwf	?_strlen^0,c
  9941  00478C  5004               	movf	(strlen@a+1)^0,w,c
  9942  00478E  5802               	subwfb	(strlen@s+1)^0,w,c
  9943  004790  6E02               	movwf	(?_strlen+1)^0,c
  9944  004792  0012               	return		;funcret
  9945  004794                     __end_of_strlen:
  9946                           	callstack 0
  9947                           
  9948 ;; *************** function _fputs *****************
  9949 ;; Defined at:
  9950 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
  9951 ;; Parameters:    Size  Location     Type
  9952 ;;  s               2    9[COMRAM] PTR const unsigned char 
  9953 ;;		 -> dbuf(80), 
  9954 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
  9955 ;;		 -> sprintf@f(6), 
  9956 ;; Auto vars:     Size  Location     Type
  9957 ;;  i               2   14[COMRAM] int 
  9958 ;;  c               1   13[COMRAM] unsigned char 
  9959 ;; Return value:  Size  Location     Type
  9960 ;;                  2    9[COMRAM] int 
  9961 ;; Registers used:
  9962 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
  9963 ;; Tracked objects:
  9964 ;;		On entry : 0/0
  9965 ;;		On exit  : 0/0
  9966 ;;		Unchanged: 0/0
  9967 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9968 ;;      Params:         4       0       0       0       0       0       0
  9969 ;;      Locals:         3       0       0       0       0       0       0
  9970 ;;      Temps:          0       0       0       0       0       0       0
  9971 ;;      Totals:         7       0       0       0       0       0       0
  9972 ;;Total ram usage:        7 bytes
  9973 ;; Hardware stack levels used:    1
  9974 ;; Hardware stack levels required when called:    3
  9975 ;; This function calls:
  9976 ;;		_fputc
  9977 ;; This function is called by:
  9978 ;;		_pad
  9979 ;; This function uses a non-reentrant model
  9980 ;;
  9981                           
  9982                           	psect	text30
  9983  004632                     __ptext30:
  9984                           	callstack 0
  9985  004632                     _fputs:
  9986                           	callstack 20
  9987  004632  0E00               	movlw	0
  9988  004634  6E10               	movwf	(fputs@i+1)^0,c
  9989  004636  0E00               	movlw	0
  9990  004638  6E0F               	movwf	fputs@i^0,c
  9991  00463A  EF2A  F023         	goto	l3972
  9992  00463E                     l3968:
  9993  00463E  C00E  F001         	movff	fputs@c,fputc@c
  9994  004642  6A02               	clrf	(fputc@c+1)^0,c
  9995  004644  C00C  F003         	movff	fputs@fp,fputc@fp
  9996  004648  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
  9997  00464C  ECF0  F01E         	call	_fputc	;wreg free
  9998  004650  4A0F               	infsnz	fputs@i^0,f,c
  9999  004652  2A10               	incf	(fputs@i+1)^0,f,c
 10000  004654                     l3972:
 10001  004654  500F               	movf	fputs@i^0,w,c
 10002  004656  240A               	addwf	fputs@s^0,w,c
 10003  004658  6ED9               	movwf	fsr2l,c
 10004  00465A  5010               	movf	(fputs@i+1)^0,w,c
 10005  00465C  200B               	addwfc	(fputs@s+1)^0,w,c
 10006  00465E  6EDA               	movwf	fsr2h,c
 10007  004660  50DF               	movf	indf2,w,c
 10008  004662  6E0E               	movwf	fputs@c^0,c
 10009  004664  500E               	movf	fputs@c^0,w,c
 10010  004666  A4D8               	btfss	status,2,c
 10011  004668  EF38  F023         	goto	u4101
 10012  00466C  EF3A  F023         	goto	u4100
 10013  004670                     u4101:
 10014  004670  EF1F  F023         	goto	l3968
 10015  004674                     u4100:
 10016  004674  0012               	return		;funcret
 10017  004676                     __end_of_fputs:
 10018                           	callstack 0
 10019                           
 10020 ;; *************** function _fputc *****************
 10021 ;; Defined at:
 10022 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 10023 ;; Parameters:    Size  Location     Type
 10024 ;;  c               2    0[COMRAM] int 
 10025 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 10026 ;;		 -> sprintf@f(6), 
 10027 ;; Auto vars:     Size  Location     Type
 10028 ;;		None
 10029 ;; Return value:  Size  Location     Type
 10030 ;;                  2    0[COMRAM] int 
 10031 ;; Registers used:
 10032 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 10033 ;; Tracked objects:
 10034 ;;		On entry : 0/0
 10035 ;;		On exit  : 0/0
 10036 ;;		Unchanged: 0/0
 10037 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10038 ;;      Params:         4       0       0       0       0       0       0
 10039 ;;      Locals:         0       0       0       0       0       0       0
 10040 ;;      Temps:          5       0       0       0       0       0       0
 10041 ;;      Totals:         9       0       0       0       0       0       0
 10042 ;;Total ram usage:        9 bytes
 10043 ;; Hardware stack levels used:    1
 10044 ;; Hardware stack levels required when called:    2
 10045 ;; This function calls:
 10046 ;;		_putch
 10047 ;; This function is called by:
 10048 ;;		_pad
 10049 ;;		_vfpfcnvrt
 10050 ;;		_fputs
 10051 ;; This function uses a non-reentrant model
 10052 ;;
 10053                           
 10054                           	psect	text31
 10055  003DE0                     __ptext31:
 10056                           	callstack 0
 10057  003DE0                     _fputc:
 10058                           	callstack 23
 10059  003DE0  5003               	movf	fputc@fp^0,w,c
 10060  003DE2  1004               	iorwf	(fputc@fp+1)^0,w,c
 10061  003DE4  B4D8               	btfsc	status,2,c
 10062  003DE6  EFF7  F01E         	goto	u3671
 10063  003DEA  EFF9  F01E         	goto	u3670
 10064  003DEE                     u3671:
 10065  003DEE  EF02  F01F         	goto	l3754
 10066  003DF2                     u3670:
 10067  003DF2  5003               	movf	fputc@fp^0,w,c
 10068  003DF4  1004               	iorwf	(fputc@fp+1)^0,w,c
 10069  003DF6  A4D8               	btfss	status,2,c
 10070  003DF8  EF00  F01F         	goto	u3681
 10071  003DFC  EF02  F01F         	goto	u3680
 10072  003E00                     u3681:
 10073  003E00  EF07  F01F         	goto	l3756
 10074  003E04                     u3680:
 10075  003E04                     l3754:
 10076  003E04  5001               	movf	fputc@c^0,w,c
 10077  003E06  EC5E  F024         	call	_putch
 10078  003E0A  EF54  F01F         	goto	l1473
 10079  003E0E                     l3756:
 10080  003E0E  EE20 F004          	lfsr	2,4
 10081  003E12  5003               	movf	fputc@fp^0,w,c
 10082  003E14  26D9               	addwf	fsr2l,f,c
 10083  003E16  5004               	movf	(fputc@fp+1)^0,w,c
 10084  003E18  22DA               	addwfc	fsr2h,f,c
 10085  003E1A  50DE               	movf	postinc2,w,c
 10086  003E1C  10DE               	iorwf	postinc2,w,c
 10087  003E1E  B4D8               	btfsc	status,2,c
 10088  003E20  EF14  F01F         	goto	u3691
 10089  003E24  EF16  F01F         	goto	u3690
 10090  003E28                     u3691:
 10091  003E28  EF31  F01F         	goto	l3760
 10092  003E2C                     u3690:
 10093  003E2C  EE20 F004          	lfsr	2,4
 10094  003E30  5003               	movf	fputc@fp^0,w,c
 10095  003E32  26D9               	addwf	fsr2l,f,c
 10096  003E34  5004               	movf	(fputc@fp+1)^0,w,c
 10097  003E36  22DA               	addwfc	fsr2h,f,c
 10098  003E38  EE10 F002          	lfsr	1,2
 10099  003E3C  5003               	movf	fputc@fp^0,w,c
 10100  003E3E  26E1               	addwf	fsr1l,f,c
 10101  003E40  5004               	movf	(fputc@fp+1)^0,w,c
 10102  003E42  22E2               	addwfc	fsr1h,f,c
 10103  003E44  50DE               	movf	postinc2,w,c
 10104  003E46  5CE6               	subwf	postinc1,w,c
 10105  003E48  50E6               	movf	postinc1,w,c
 10106  003E4A  0A80               	xorlw	128
 10107  003E4C  6E09               	movwf	(??_fputc+4)^0,c
 10108  003E4E  50DE               	movf	postinc2,w,c
 10109  003E50  0A80               	xorlw	128
 10110  003E52  5809               	subwfb	(??_fputc+4)^0,w,c
 10111  003E54  B0D8               	btfsc	status,0,c
 10112  003E56  EF2F  F01F         	goto	u3701
 10113  003E5A  EF31  F01F         	goto	u3700
 10114  003E5E                     u3701:
 10115  003E5E  EF54  F01F         	goto	l1473
 10116  003E62                     u3700:
 10117  003E62                     l3760:
 10118  003E62  EE20 F002          	lfsr	2,2
 10119  003E66  5003               	movf	fputc@fp^0,w,c
 10120  003E68  26D9               	addwf	fsr2l,f,c
 10121  003E6A  5004               	movf	(fputc@fp+1)^0,w,c
 10122  003E6C  22DA               	addwfc	fsr2h,f,c
 10123  003E6E  CFDE F005          	movff	postinc2,??_fputc
 10124  003E72  CFDD F006          	movff	postdec2,??_fputc+1
 10125  003E76  C003  FFD9         	movff	fputc@fp,fsr2l
 10126  003E7A  C004  FFDA         	movff	fputc@fp+1,fsr2h
 10127  003E7E  CFDE F007          	movff	postinc2,??_fputc+2
 10128  003E82  CFDD F008          	movff	postdec2,??_fputc+3
 10129  003E86  5005               	movf	??_fputc^0,w,c
 10130  003E88  2407               	addwf	(??_fputc+2)^0,w,c
 10131  003E8A  6ED9               	movwf	fsr2l,c
 10132  003E8C  5006               	movf	(??_fputc+1)^0,w,c
 10133  003E8E  2008               	addwfc	(??_fputc+3)^0,w,c
 10134  003E90  6EDA               	movwf	fsr2h,c
 10135  003E92  C001  FFDF         	movff	fputc@c,indf2
 10136  003E96  EE20 F002          	lfsr	2,2
 10137  003E9A  5003               	movf	fputc@fp^0,w,c
 10138  003E9C  26D9               	addwf	fsr2l,f,c
 10139  003E9E  5004               	movf	(fputc@fp+1)^0,w,c
 10140  003EA0  22DA               	addwfc	fsr2h,f,c
 10141  003EA2  2ADE               	incf	postinc2,f,c
 10142  003EA4  0E00               	movlw	0
 10143  003EA6  22DD               	addwfc	postdec2,f,c
 10144  003EA8                     l1473:
 10145  003EA8  0012               	return		;funcret
 10146  003EAA                     __end_of_fputc:
 10147                           	callstack 0
 10148                           
 10149 ;; *************** function _putch *****************
 10150 ;; Defined at:
 10151 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 10152 ;; Parameters:    Size  Location     Type
 10153 ;;  c               1    wreg     unsigned char 
 10154 ;; Auto vars:     Size  Location     Type
 10155 ;;  c               1    0[COMRAM] unsigned char 
 10156 ;; Return value:  Size  Location     Type
 10157 ;;                  1    wreg      void 
 10158 ;; Registers used:
 10159 ;;		wreg
 10160 ;; Tracked objects:
 10161 ;;		On entry : 0/0
 10162 ;;		On exit  : 0/0
 10163 ;;		Unchanged: 0/0
 10164 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10165 ;;      Params:         0       0       0       0       0       0       0
 10166 ;;      Locals:         0       0       0       0       0       0       0
 10167 ;;      Temps:          0       0       0       0       0       0       0
 10168 ;;      Totals:         0       0       0       0       0       0       0
 10169 ;;Total ram usage:        0 bytes
 10170 ;; Hardware stack levels used:    1
 10171 ;; Hardware stack levels required when called:    1
 10172 ;; This function calls:
 10173 ;;		Nothing
 10174 ;; This function is called by:
 10175 ;;		_fputc
 10176 ;; This function uses a non-reentrant model
 10177 ;;
 10178                           
 10179                           	psect	text32
 10180  0048BC                     __ptext32:
 10181                           	callstack 0
 10182  0048BC                     _putch:
 10183                           	callstack 23
 10184  0048BC  0012               	return		;funcret
 10185  0048BE                     __end_of_putch:
 10186                           	callstack 0
 10187                           
 10188 ;; *************** function _abs *****************
 10189 ;; Defined at:
 10190 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 10191 ;; Parameters:    Size  Location     Type
 10192 ;;  a               2   18[COMRAM] int 
 10193 ;; Auto vars:     Size  Location     Type
 10194 ;;		None
 10195 ;; Return value:  Size  Location     Type
 10196 ;;                  2   18[COMRAM] int 
 10197 ;; Registers used:
 10198 ;;		wreg, status,2, status,0
 10199 ;; Tracked objects:
 10200 ;;		On entry : 0/0
 10201 ;;		On exit  : 0/0
 10202 ;;		Unchanged: 0/0
 10203 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10204 ;;      Params:         2       0       0       0       0       0       0
 10205 ;;      Locals:         0       0       0       0       0       0       0
 10206 ;;      Temps:          2       0       0       0       0       0       0
 10207 ;;      Totals:         4       0       0       0       0       0       0
 10208 ;;Total ram usage:        4 bytes
 10209 ;; Hardware stack levels used:    1
 10210 ;; Hardware stack levels required when called:    1
 10211 ;; This function calls:
 10212 ;;		Nothing
 10213 ;; This function is called by:
 10214 ;;		_dtoa
 10215 ;; This function uses a non-reentrant model
 10216 ;;
 10217                           
 10218                           	psect	text33
 10219  004676                     __ptext33:
 10220                           	callstack 0
 10221  004676                     _abs:
 10222                           	callstack 23
 10223  004676  BE14               	btfsc	(abs@a+1)^0,7,c
 10224  004678  EF48  F023         	goto	u5010
 10225  00467C  5014               	movf	(abs@a+1)^0,w,c
 10226  00467E  E106               	bnz	u5011
 10227  004680  0413               	decf	abs@a^0,w,c
 10228  004682  B0D8               	btfsc	status,0,c
 10229  004684  EF46  F023         	goto	u5011
 10230  004688  EF48  F023         	goto	u5010
 10231  00468C                     u5011:
 10232  00468C  EF56  F023         	goto	l1394
 10233  004690                     u5010:
 10234  004690  C013  F015         	movff	abs@a,??_abs
 10235  004694  C014  F016         	movff	abs@a+1,??_abs+1
 10236  004698  1E15               	comf	??_abs^0,f,c
 10237  00469A  1E16               	comf	(??_abs+1)^0,f,c
 10238  00469C  4A15               	infsnz	??_abs^0,f,c
 10239  00469E  2A16               	incf	(??_abs+1)^0,f,c
 10240  0046A0  C015  F013         	movff	??_abs,?_abs
 10241  0046A4  C016  F014         	movff	??_abs+1,?_abs+1
 10242  0046A8  EF5A  F023         	goto	l1397
 10243  0046AC                     l1394:
 10244  0046AC  C013  F013         	movff	abs@a,?_abs
 10245  0046B0  C014  F014         	movff	abs@a+1,?_abs+1
 10246  0046B4                     l1397:
 10247  0046B4  0012               	return		;funcret
 10248  0046B6                     __end_of_abs:
 10249                           	callstack 0
 10250                           
 10251 ;; *************** function ___aomod *****************
 10252 ;; Defined at:
 10253 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 10254 ;; Parameters:    Size  Location     Type
 10255 ;;  dividend        8    0[COMRAM] long long 
 10256 ;;  divisor         8    8[COMRAM] long long 
 10257 ;; Auto vars:     Size  Location     Type
 10258 ;;  sign            1   17[COMRAM] unsigned char 
 10259 ;;  counter         1   16[COMRAM] unsigned char 
 10260 ;; Return value:  Size  Location     Type
 10261 ;;                  8    0[COMRAM] long long 
 10262 ;; Registers used:
 10263 ;;		wreg, status,2, status,0
 10264 ;; Tracked objects:
 10265 ;;		On entry : 0/0
 10266 ;;		On exit  : 0/0
 10267 ;;		Unchanged: 0/0
 10268 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10269 ;;      Params:        16       0       0       0       0       0       0
 10270 ;;      Locals:         2       0       0       0       0       0       0
 10271 ;;      Temps:          0       0       0       0       0       0       0
 10272 ;;      Totals:        18       0       0       0       0       0       0
 10273 ;;Total ram usage:       18 bytes
 10274 ;; Hardware stack levels used:    1
 10275 ;; Hardware stack levels required when called:    1
 10276 ;; This function calls:
 10277 ;;		Nothing
 10278 ;; This function is called by:
 10279 ;;		_dtoa
 10280 ;; This function uses a non-reentrant model
 10281 ;;
 10282                           
 10283                           	psect	text34
 10284  0036AA                     __ptext34:
 10285                           	callstack 0
 10286  0036AA                     ___aomod:
 10287                           	callstack 23
 10288  0036AA  0E00               	movlw	0
 10289  0036AC  6E12               	movwf	___aomod@sign^0,c
 10290  0036AE  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 10291  0036B0  EF5E  F01B         	goto	u4210
 10292  0036B4  EF5C  F01B         	goto	u4211
 10293  0036B8                     u4211:
 10294  0036B8  EF70  F01B         	goto	l4046
 10295  0036BC                     u4210:
 10296  0036BC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10297  0036BE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10298  0036C0  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10299  0036C2  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10300  0036C4  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10301  0036C6  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10302  0036C8  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10303  0036CA  6C01               	negf	___aomod@dividend^0,c
 10304  0036CC  0E00               	movlw	0
 10305  0036CE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10306  0036D0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10307  0036D2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10308  0036D4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10309  0036D6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10310  0036D8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10311  0036DA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10312  0036DC  0E01               	movlw	1
 10313  0036DE  6E12               	movwf	___aomod@sign^0,c
 10314  0036E0                     l4046:
 10315  0036E0  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 10316  0036E2  EF77  F01B         	goto	u4220
 10317  0036E6  EF75  F01B         	goto	u4221
 10318  0036EA                     u4221:
 10319  0036EA  EF87  F01B         	goto	l4050
 10320  0036EE                     u4220:
 10321  0036EE  1E10               	comf	(___aomod@divisor+7)^0,f,c
 10322  0036F0  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 10323  0036F2  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 10324  0036F4  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 10325  0036F6  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 10326  0036F8  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 10327  0036FA  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 10328  0036FC  6C09               	negf	___aomod@divisor^0,c
 10329  0036FE  0E00               	movlw	0
 10330  003700  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 10331  003702  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 10332  003704  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 10333  003706  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 10334  003708  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 10335  00370A  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 10336  00370C  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 10337  00370E                     l4050:
 10338  00370E  5009               	movf	___aomod@divisor^0,w,c
 10339  003710  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 10340  003712  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 10341  003714  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 10342  003716  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 10343  003718  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 10344  00371A  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 10345  00371C  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 10346  00371E  B4D8               	btfsc	status,2,c
 10347  003720  EF94  F01B         	goto	u4231
 10348  003724  EF96  F01B         	goto	u4230
 10349  003728                     u4231:
 10350  003728  EFDE  F01B         	goto	l4066
 10351  00372C                     u4230:
 10352  00372C  0E01               	movlw	1
 10353  00372E  6E11               	movwf	___aomod@counter^0,c
 10354  003730  EFA4  F01B         	goto	l4056
 10355  003734                     l4054:
 10356  003734  90D8               	bcf	status,0,c
 10357  003736  3609               	rlcf	___aomod@divisor^0,f,c
 10358  003738  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 10359  00373A  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 10360  00373C  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 10361  00373E  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 10362  003740  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 10363  003742  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 10364  003744  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 10365  003746  2A11               	incf	___aomod@counter^0,f,c
 10366  003748                     l4056:
 10367  003748  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 10368  00374A  EFA9  F01B         	goto	u4241
 10369  00374E  EFAB  F01B         	goto	u4240
 10370  003752                     u4241:
 10371  003752  EF9A  F01B         	goto	l4054
 10372  003756                     u4240:
 10373  003756                     l4058:
 10374  003756  5009               	movf	___aomod@divisor^0,w,c
 10375  003758  5C01               	subwf	___aomod@dividend^0,w,c
 10376  00375A  500A               	movf	(___aomod@divisor+1)^0,w,c
 10377  00375C  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 10378  00375E  500B               	movf	(___aomod@divisor+2)^0,w,c
 10379  003760  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 10380  003762  500C               	movf	(___aomod@divisor+3)^0,w,c
 10381  003764  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 10382  003766  500D               	movf	(___aomod@divisor+4)^0,w,c
 10383  003768  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 10384  00376A  500E               	movf	(___aomod@divisor+5)^0,w,c
 10385  00376C  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 10386  00376E  500F               	movf	(___aomod@divisor+6)^0,w,c
 10387  003770  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 10388  003772  5010               	movf	(___aomod@divisor+7)^0,w,c
 10389  003774  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 10390  003776  A0D8               	btfss	status,0,c
 10391  003778  EFC0  F01B         	goto	u4251
 10392  00377C  EFC2  F01B         	goto	u4250
 10393  003780                     u4251:
 10394  003780  EFD2  F01B         	goto	l4062
 10395  003784                     u4250:
 10396  003784  5009               	movf	___aomod@divisor^0,w,c
 10397  003786  5E01               	subwf	___aomod@dividend^0,f,c
 10398  003788  500A               	movf	(___aomod@divisor+1)^0,w,c
 10399  00378A  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 10400  00378C  500B               	movf	(___aomod@divisor+2)^0,w,c
 10401  00378E  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 10402  003790  500C               	movf	(___aomod@divisor+3)^0,w,c
 10403  003792  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 10404  003794  500D               	movf	(___aomod@divisor+4)^0,w,c
 10405  003796  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 10406  003798  500E               	movf	(___aomod@divisor+5)^0,w,c
 10407  00379A  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 10408  00379C  500F               	movf	(___aomod@divisor+6)^0,w,c
 10409  00379E  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 10410  0037A0  5010               	movf	(___aomod@divisor+7)^0,w,c
 10411  0037A2  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 10412  0037A4                     l4062:
 10413  0037A4  90D8               	bcf	status,0,c
 10414  0037A6  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 10415  0037A8  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 10416  0037AA  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 10417  0037AC  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 10418  0037AE  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 10419  0037B0  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 10420  0037B2  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 10421  0037B4  3209               	rrcf	___aomod@divisor^0,f,c
 10422  0037B6  2E11               	decfsz	___aomod@counter^0,f,c
 10423  0037B8  EFAB  F01B         	goto	l4058
 10424  0037BC                     l4066:
 10425  0037BC  5012               	movf	___aomod@sign^0,w,c
 10426  0037BE  B4D8               	btfsc	status,2,c
 10427  0037C0  EFE4  F01B         	goto	u4261
 10428  0037C4  EFE6  F01B         	goto	u4260
 10429  0037C8                     u4261:
 10430  0037C8  EFF6  F01B         	goto	l4070
 10431  0037CC                     u4260:
 10432  0037CC  1E08               	comf	(___aomod@dividend+7)^0,f,c
 10433  0037CE  1E07               	comf	(___aomod@dividend+6)^0,f,c
 10434  0037D0  1E06               	comf	(___aomod@dividend+5)^0,f,c
 10435  0037D2  1E05               	comf	(___aomod@dividend+4)^0,f,c
 10436  0037D4  1E04               	comf	(___aomod@dividend+3)^0,f,c
 10437  0037D6  1E03               	comf	(___aomod@dividend+2)^0,f,c
 10438  0037D8  1E02               	comf	(___aomod@dividend+1)^0,f,c
 10439  0037DA  6C01               	negf	___aomod@dividend^0,c
 10440  0037DC  0E00               	movlw	0
 10441  0037DE  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 10442  0037E0  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 10443  0037E2  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 10444  0037E4  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 10445  0037E6  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 10446  0037E8  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 10447  0037EA  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 10448  0037EC                     l4070:
 10449  0037EC  C001  F001         	movff	___aomod@dividend,?___aomod
 10450  0037F0  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 10451  0037F4  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 10452  0037F8  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 10453  0037FC  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 10454  003800  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 10455  003804  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 10456  003808  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 10457  00380C  0012               	return		;funcret
 10458  00380E                     __end_of___aomod:
 10459                           	callstack 0
 10460                           
 10461 ;; *************** function ___aodiv *****************
 10462 ;; Defined at:
 10463 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 10464 ;; Parameters:    Size  Location     Type
 10465 ;;  dividend        8    0[COMRAM] long long 
 10466 ;;  divisor         8    8[COMRAM] long long 
 10467 ;; Auto vars:     Size  Location     Type
 10468 ;;  quotient        8   18[COMRAM] long long 
 10469 ;;  sign            1   17[COMRAM] unsigned char 
 10470 ;;  counter         1   16[COMRAM] unsigned char 
 10471 ;; Return value:  Size  Location     Type
 10472 ;;                  8    0[COMRAM] long long 
 10473 ;; Registers used:
 10474 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 10475 ;; Tracked objects:
 10476 ;;		On entry : 0/0
 10477 ;;		On exit  : 0/0
 10478 ;;		Unchanged: 0/0
 10479 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10480 ;;      Params:        16       0       0       0       0       0       0
 10481 ;;      Locals:        10       0       0       0       0       0       0
 10482 ;;      Temps:          0       0       0       0       0       0       0
 10483 ;;      Totals:        26       0       0       0       0       0       0
 10484 ;;Total ram usage:       26 bytes
 10485 ;; Hardware stack levels used:    1
 10486 ;; Hardware stack levels required when called:    1
 10487 ;; This function calls:
 10488 ;;		Nothing
 10489 ;; This function is called by:
 10490 ;;		_dtoa
 10491 ;; This function uses a non-reentrant model
 10492 ;;
 10493                           
 10494                           	psect	text35
 10495  003522                     __ptext35:
 10496                           	callstack 0
 10497  003522                     ___aodiv:
 10498                           	callstack 23
 10499  003522  0E00               	movlw	0
 10500  003524  6E12               	movwf	___aodiv@sign^0,c
 10501  003526  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 10502  003528  EF9A  F01A         	goto	u4140
 10503  00352C  EF98  F01A         	goto	u4141
 10504  003530                     u4141:
 10505  003530  EFAC  F01A         	goto	l4002
 10506  003534                     u4140:
 10507  003534  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 10508  003536  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 10509  003538  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 10510  00353A  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 10511  00353C  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 10512  00353E  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 10513  003540  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 10514  003542  6C09               	negf	___aodiv@divisor^0,c
 10515  003544  0E00               	movlw	0
 10516  003546  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 10517  003548  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 10518  00354A  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 10519  00354C  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 10520  00354E  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 10521  003550  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 10522  003552  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 10523  003554  0E01               	movlw	1
 10524  003556  6E12               	movwf	___aodiv@sign^0,c
 10525  003558                     l4002:
 10526  003558  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 10527  00355A  EFB3  F01A         	goto	u4150
 10528  00355E  EFB1  F01A         	goto	u4151
 10529  003562                     u4151:
 10530  003562  EFC5  F01A         	goto	l4008
 10531  003566                     u4150:
 10532  003566  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 10533  003568  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 10534  00356A  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 10535  00356C  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 10536  00356E  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 10537  003570  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 10538  003572  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 10539  003574  6C01               	negf	___aodiv@dividend^0,c
 10540  003576  0E00               	movlw	0
 10541  003578  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 10542  00357A  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 10543  00357C  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 10544  00357E  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 10545  003580  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 10546  003582  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 10547  003584  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 10548  003586  0E01               	movlw	1
 10549  003588  1A12               	xorwf	___aodiv@sign^0,f,c
 10550  00358A                     l4008:
 10551  00358A  EE20  F013         	lfsr	2,___aodiv@quotient
 10552  00358E  0E07               	movlw	7
 10553  003590                     u4161:
 10554  003590  6ADE               	clrf	postinc2,c
 10555  003592  06E8               	decf	wreg,f,c
 10556  003594  E2FD               	bc	u4161
 10557  003596  5009               	movf	___aodiv@divisor^0,w,c
 10558  003598  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 10559  00359A  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 10560  00359C  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 10561  00359E  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 10562  0035A0  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 10563  0035A2  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 10564  0035A4  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 10565  0035A6  B4D8               	btfsc	status,2,c
 10566  0035A8  EFD8  F01A         	goto	u4171
 10567  0035AC  EFDA  F01A         	goto	u4170
 10568  0035B0                     u4171:
 10569  0035B0  EF2C  F01B         	goto	l4030
 10570  0035B4                     u4170:
 10571  0035B4  0E01               	movlw	1
 10572  0035B6  6E11               	movwf	___aodiv@counter^0,c
 10573  0035B8  EFE8  F01A         	goto	l4016
 10574  0035BC                     l4014:
 10575  0035BC  90D8               	bcf	status,0,c
 10576  0035BE  3609               	rlcf	___aodiv@divisor^0,f,c
 10577  0035C0  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 10578  0035C2  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 10579  0035C4  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 10580  0035C6  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 10581  0035C8  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 10582  0035CA  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 10583  0035CC  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 10584  0035CE  2A11               	incf	___aodiv@counter^0,f,c
 10585  0035D0                     l4016:
 10586  0035D0  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 10587  0035D2  EFED  F01A         	goto	u4181
 10588  0035D6  EFEF  F01A         	goto	u4180
 10589  0035DA                     u4181:
 10590  0035DA  EFDE  F01A         	goto	l4014
 10591  0035DE                     u4180:
 10592  0035DE                     l4018:
 10593  0035DE  90D8               	bcf	status,0,c
 10594  0035E0  3613               	rlcf	___aodiv@quotient^0,f,c
 10595  0035E2  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 10596  0035E4  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 10597  0035E6  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 10598  0035E8  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 10599  0035EA  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 10600  0035EC  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 10601  0035EE  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 10602  0035F0  5009               	movf	___aodiv@divisor^0,w,c
 10603  0035F2  5C01               	subwf	___aodiv@dividend^0,w,c
 10604  0035F4  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10605  0035F6  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 10606  0035F8  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10607  0035FA  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 10608  0035FC  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10609  0035FE  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 10610  003600  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10611  003602  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 10612  003604  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10613  003606  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 10614  003608  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10615  00360A  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 10616  00360C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10617  00360E  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 10618  003610  A0D8               	btfss	status,0,c
 10619  003612  EF0D  F01B         	goto	u4191
 10620  003616  EF0F  F01B         	goto	u4190
 10621  00361A                     u4191:
 10622  00361A  EF20  F01B         	goto	l4026
 10623  00361E                     u4190:
 10624  00361E  5009               	movf	___aodiv@divisor^0,w,c
 10625  003620  5E01               	subwf	___aodiv@dividend^0,f,c
 10626  003622  500A               	movf	(___aodiv@divisor+1)^0,w,c
 10627  003624  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 10628  003626  500B               	movf	(___aodiv@divisor+2)^0,w,c
 10629  003628  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 10630  00362A  500C               	movf	(___aodiv@divisor+3)^0,w,c
 10631  00362C  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 10632  00362E  500D               	movf	(___aodiv@divisor+4)^0,w,c
 10633  003630  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 10634  003632  500E               	movf	(___aodiv@divisor+5)^0,w,c
 10635  003634  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 10636  003636  500F               	movf	(___aodiv@divisor+6)^0,w,c
 10637  003638  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 10638  00363A  5010               	movf	(___aodiv@divisor+7)^0,w,c
 10639  00363C  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 10640  00363E  8013               	bsf	___aodiv@quotient^0,0,c
 10641  003640                     l4026:
 10642  003640  90D8               	bcf	status,0,c
 10643  003642  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 10644  003644  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 10645  003646  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 10646  003648  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 10647  00364A  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 10648  00364C  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 10649  00364E  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 10650  003650  3209               	rrcf	___aodiv@divisor^0,f,c
 10651  003652  2E11               	decfsz	___aodiv@counter^0,f,c
 10652  003654  EFEF  F01A         	goto	l4018
 10653  003658                     l4030:
 10654  003658  5012               	movf	___aodiv@sign^0,w,c
 10655  00365A  B4D8               	btfsc	status,2,c
 10656  00365C  EF32  F01B         	goto	u4201
 10657  003660  EF34  F01B         	goto	u4200
 10658  003664                     u4201:
 10659  003664  EF44  F01B         	goto	l4034
 10660  003668                     u4200:
 10661  003668  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 10662  00366A  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 10663  00366C  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 10664  00366E  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 10665  003670  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 10666  003672  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 10667  003674  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 10668  003676  6C13               	negf	___aodiv@quotient^0,c
 10669  003678  0E00               	movlw	0
 10670  00367A  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 10671  00367C  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 10672  00367E  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 10673  003680  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 10674  003682  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 10675  003684  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 10676  003686  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 10677  003688                     l4034:
 10678  003688  C013  F001         	movff	___aodiv@quotient,?___aodiv
 10679  00368C  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 10680  003690  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 10681  003694  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 10682  003698  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 10683  00369C  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 10684  0036A0  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 10685  0036A4  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 10686  0036A8  0012               	return		;funcret
 10687  0036AA                     __end_of___aodiv:
 10688                           	callstack 0
 10689                           
 10690 ;; *************** function _atoi *****************
 10691 ;; Defined at:
 10692 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 10693 ;; Parameters:    Size  Location     Type
 10694 ;;  s               2    7[COMRAM] PTR const unsigned char 
 10695 ;;		 -> STR_14(21), STR_12(16), STR_10(16), STR_8(18), 
 10696 ;;		 -> STR_6(18), STR_4(18), STR_2(15), 
 10697 ;; Auto vars:     Size  Location     Type
 10698 ;;  n               2   20[COMRAM] int 
 10699 ;;  neg             2   13[COMRAM] int 
 10700 ;; Return value:  Size  Location     Type
 10701 ;;                  2    7[COMRAM] int 
 10702 ;; Registers used:
 10703 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 10704 ;; Tracked objects:
 10705 ;;		On entry : 0/0
 10706 ;;		On exit  : 0/0
 10707 ;;		Unchanged: 0/0
 10708 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10709 ;;      Params:         2       0       0       0       0       0       0
 10710 ;;      Locals:         9       0       0       0       0       0       0
 10711 ;;      Temps:          4       0       0       0       0       0       0
 10712 ;;      Totals:        15       0       0       0       0       0       0
 10713 ;;Total ram usage:       15 bytes
 10714 ;; Hardware stack levels used:    1
 10715 ;; Hardware stack levels required when called:    2
 10716 ;; This function calls:
 10717 ;;		___wmul
 10718 ;;		_isdigit
 10719 ;;		_isspace
 10720 ;; This function is called by:
 10721 ;;		_vfpfcnvrt
 10722 ;; This function uses a non-reentrant model
 10723 ;;
 10724                           
 10725                           	psect	text36
 10726  003392                     __ptext36:
 10727                           	callstack 0
 10728  003392                     _atoi:
 10729                           	callstack 23
 10730  003392  0E00               	movlw	0
 10731  003394  6E16               	movwf	(atoi@n+1)^0,c
 10732  003396  0E00               	movlw	0
 10733  003398  6E15               	movwf	atoi@n^0,c
 10734  00339A  0E00               	movlw	0
 10735  00339C  6E0F               	movwf	(atoi@neg+1)^0,c
 10736  00339E  0E00               	movlw	0
 10737  0033A0  6E0E               	movwf	atoi@neg^0,c
 10738  0033A2  EFD5  F019         	goto	l4988
 10739  0033A6                     l4986:
 10740  0033A6  4A08               	infsnz	atoi@s^0,f,c
 10741  0033A8  2A09               	incf	(atoi@s+1)^0,f,c
 10742  0033AA                     l4988:
 10743  0033AA  0E01               	movlw	1
 10744  0033AC  6E14               	movwf	_atoi$2934^0,c
 10745  0033AE  C008  FFF6         	movff	atoi@s,tblptrl
 10746  0033B2  C009  FFF7         	movff	atoi@s+1,tblptrh
 10747  0033B6                     	if	0	;tblptru may be non-zero
 10748  0033B6                     	endif
 10749  0033B6                     	if	0	;tblptru may be non-zero
 10750  0033B6                     	endif
 10751  0033B6  0008               	tblrd		*
 10752  0033B8  50F5               	movf	tablat,w,c
 10753  0033BA  0A20               	xorlw	32
 10754  0033BC  B4D8               	btfsc	status,2,c
 10755  0033BE  EFE3  F019         	goto	u5951
 10756  0033C2  EFE5  F019         	goto	u5950
 10757  0033C6                     u5951:
 10758  0033C6  EF02  F01A         	goto	l4996
 10759  0033CA                     u5950:
 10760  0033CA  0EF7               	movlw	247
 10761  0033CC  6E0A               	movwf	??_atoi^0,c
 10762  0033CE  0EFF               	movlw	255
 10763  0033D0  6E0B               	movwf	(??_atoi+1)^0,c
 10764  0033D2  C008  FFF6         	movff	atoi@s,tblptrl
 10765  0033D6  C009  FFF7         	movff	atoi@s+1,tblptrh
 10766  0033DA                     	if	0	;tblptru may be non-zero
 10767  0033DA                     	endif
 10768  0033DA                     	if	0	;tblptru may be non-zero
 10769  0033DA                     	endif
 10770  0033DA  0008               	tblrd		*
 10771  0033DC  50F5               	movf	tablat,w,c
 10772  0033DE  6E0C               	movwf	(??_atoi+2)^0,c
 10773  0033E0  6A0D               	clrf	(??_atoi+3)^0,c
 10774  0033E2  500A               	movf	??_atoi^0,w,c
 10775  0033E4  260C               	addwf	(??_atoi+2)^0,f,c
 10776  0033E6  500B               	movf	(??_atoi+1)^0,w,c
 10777  0033E8  220D               	addwfc	(??_atoi+3)^0,f,c
 10778  0033EA  500D               	movf	(??_atoi+3)^0,w,c
 10779  0033EC  E109               	bnz	u5960
 10780  0033EE  0E05               	movlw	5
 10781  0033F0  5C0C               	subwf	(??_atoi+2)^0,w,c
 10782  0033F2  A0D8               	btfss	status,0,c
 10783  0033F4  EFFE  F019         	goto	u5961
 10784  0033F8  EF00  F01A         	goto	u5960
 10785  0033FC                     u5961:
 10786  0033FC  EF02  F01A         	goto	l4996
 10787  003400                     u5960:
 10788  003400  0E00               	movlw	0
 10789  003402  6E14               	movwf	_atoi$2934^0,c
 10790  003404                     l4996:
 10791  003404  C014  F010         	movff	_atoi$2934,_atoi$2933
 10792  003408  6A11               	clrf	(_atoi$2933+1)^0,c
 10793  00340A  5010               	movf	_atoi$2933^0,w,c
 10794  00340C  1011               	iorwf	(_atoi$2933+1)^0,w,c
 10795  00340E  A4D8               	btfss	status,2,c
 10796  003410  EF0C  F01A         	goto	u5971
 10797  003414  EF0E  F01A         	goto	u5970
 10798  003418                     u5971:
 10799  003418  EFD3  F019         	goto	l4986
 10800  00341C                     u5970:
 10801  00341C  EF18  F01A         	goto	l5006
 10802  003420                     l5002:
 10803  003420  0E00               	movlw	0
 10804  003422  6E0F               	movwf	(atoi@neg+1)^0,c
 10805  003424  0E01               	movlw	1
 10806  003426  6E0E               	movwf	atoi@neg^0,c
 10807  003428                     l5004:
 10808  003428  4A08               	infsnz	atoi@s^0,f,c
 10809  00342A  2A09               	incf	(atoi@s+1)^0,f,c
 10810  00342C  EF4D  F01A         	goto	l5012
 10811  003430                     l5006:
 10812  003430  C008  FFF6         	movff	atoi@s,tblptrl
 10813  003434  C009  FFF7         	movff	atoi@s+1,tblptrh
 10814  003438                     	if	0	;tblptru may be non-zero
 10815  003438                     	endif
 10816  003438                     	if	0	;tblptru may be non-zero
 10817  003438                     	endif
 10818  003438  0008               	tblrd		*
 10819  00343A  50F5               	movf	tablat,w,c
 10820  00343C  6E0A               	movwf	??_atoi^0,c
 10821  00343E  6A0B               	clrf	(??_atoi+1)^0,c
 10822                           
 10823                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 10824                           ; Switch size 1, requested type "simple"
 10825                           ; Number of cases is 1, Range of values is 0 to 0
 10826                           ; switch strategies available:
 10827                           ; Name         Instructions Cycles
 10828                           ; simple_byte            4     3 (average)
 10829                           ;	Chosen strategy is simple_byte
 10830  003440  500B               	movf	(??_atoi+1)^0,w,c
 10831  003442  0A00               	xorlw	0	; case 0
 10832  003444  B4D8               	btfsc	status,2,c
 10833  003446  EF27  F01A         	goto	l6038
 10834  00344A  EF4D  F01A         	goto	l5012
 10835  00344E                     l6038:
 10836                           
 10837                           ; Switch size 1, requested type "simple"
 10838                           ; Number of cases is 2, Range of values is 43 to 45
 10839                           ; switch strategies available:
 10840                           ; Name         Instructions Cycles
 10841                           ; simple_byte            7     4 (average)
 10842                           ;	Chosen strategy is simple_byte
 10843  00344E  500A               	movf	??_atoi^0,w,c
 10844  003450  0A2B               	xorlw	43	; case 43
 10845  003452  B4D8               	btfsc	status,2,c
 10846  003454  EF14  F01A         	goto	l5004
 10847  003458  0A06               	xorlw	6	; case 45
 10848  00345A  B4D8               	btfsc	status,2,c
 10849  00345C  EF10  F01A         	goto	l5002
 10850  003460  EF4D  F01A         	goto	l5012
 10851  003464                     l5008:
 10852  003464  C015  F001         	movff	atoi@n,___wmul@multiplier
 10853  003468  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 10854  00346C  0E00               	movlw	0
 10855  00346E  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 10856  003470  0E0A               	movlw	10
 10857  003472  6E03               	movwf	___wmul@multiplicand^0,c
 10858  003474  ECFC  F023         	call	___wmul	;wreg free
 10859  003478  C008  FFF6         	movff	atoi@s,tblptrl
 10860  00347C  C009  FFF7         	movff	atoi@s+1,tblptrh
 10861  003480                     	if	0	;tblptru may be non-zero
 10862  003480                     	endif
 10863  003480                     	if	0	;tblptru may be non-zero
 10864  003480                     	endif
 10865  003480  0008               	tblrd		*
 10866  003482  50F5               	movf	tablat,w,c
 10867  003484  5E01               	subwf	?___wmul^0,f,c
 10868  003486  0E00               	movlw	0
 10869  003488  5A02               	subwfb	(?___wmul+1)^0,f,c
 10870  00348A  0E30               	movlw	48
 10871  00348C  2401               	addwf	?___wmul^0,w,c
 10872  00348E  6E15               	movwf	atoi@n^0,c
 10873  003490  0E00               	movlw	0
 10874  003492  2002               	addwfc	(?___wmul+1)^0,w,c
 10875  003494  6E16               	movwf	(atoi@n+1)^0,c
 10876  003496  EF14  F01A         	goto	l5004
 10877  00349A                     l5012:
 10878  00349A  0ED0               	movlw	208
 10879  00349C  6E0A               	movwf	??_atoi^0,c
 10880  00349E  0EFF               	movlw	255
 10881  0034A0  6E0B               	movwf	(??_atoi+1)^0,c
 10882  0034A2  C008  FFF6         	movff	atoi@s,tblptrl
 10883  0034A6  C009  FFF7         	movff	atoi@s+1,tblptrh
 10884  0034AA                     	if	0	;tblptru may be non-zero
 10885  0034AA                     	endif
 10886  0034AA                     	if	0	;tblptru may be non-zero
 10887  0034AA                     	endif
 10888  0034AA  0008               	tblrd		*
 10889  0034AC  50F5               	movf	tablat,w,c
 10890  0034AE  6E0C               	movwf	(??_atoi+2)^0,c
 10891  0034B0  6A0D               	clrf	(??_atoi+3)^0,c
 10892  0034B2  500A               	movf	??_atoi^0,w,c
 10893  0034B4  260C               	addwf	(??_atoi+2)^0,f,c
 10894  0034B6  500B               	movf	(??_atoi+1)^0,w,c
 10895  0034B8  220D               	addwfc	(??_atoi+3)^0,f,c
 10896  0034BA  500D               	movf	(??_atoi+3)^0,w,c
 10897  0034BC  E10A               	bnz	u5980
 10898  0034BE  0E0A               	movlw	10
 10899  0034C0  5C0C               	subwf	(??_atoi+2)^0,w,c
 10900  0034C2  A0D8               	btfss	status,0,c
 10901  0034C4  EF66  F01A         	goto	u5981
 10902  0034C8  EF69  F01A         	goto	u5980
 10903  0034CC                     u5981:
 10904  0034CC  0E01               	movlw	1
 10905  0034CE  EF6A  F01A         	goto	u5990
 10906  0034D2                     u5980:
 10907  0034D2  0E00               	movlw	0
 10908  0034D4                     u5990:
 10909  0034D4  6E12               	movwf	_atoi$2935^0,c
 10910  0034D6  6A13               	clrf	(_atoi$2935+1)^0,c
 10911  0034D8  5012               	movf	_atoi$2935^0,w,c
 10912  0034DA  1013               	iorwf	(_atoi$2935+1)^0,w,c
 10913  0034DC  A4D8               	btfss	status,2,c
 10914  0034DE  EF73  F01A         	goto	u6001
 10915  0034E2  EF75  F01A         	goto	u6000
 10916  0034E6                     u6001:
 10917  0034E6  EF32  F01A         	goto	l5008
 10918  0034EA                     u6000:
 10919  0034EA  500E               	movf	atoi@neg^0,w,c
 10920  0034EC  100F               	iorwf	(atoi@neg+1)^0,w,c
 10921  0034EE  A4D8               	btfss	status,2,c
 10922  0034F0  EF7C  F01A         	goto	u6011
 10923  0034F4  EF7E  F01A         	goto	u6010
 10924  0034F8                     u6011:
 10925  0034F8  EF8C  F01A         	goto	l1425
 10926  0034FC                     u6010:
 10927  0034FC  C015  F00A         	movff	atoi@n,??_atoi
 10928  003500  C016  F00B         	movff	atoi@n+1,??_atoi+1
 10929  003504  1E0A               	comf	??_atoi^0,f,c
 10930  003506  1E0B               	comf	(??_atoi+1)^0,f,c
 10931  003508  4A0A               	infsnz	??_atoi^0,f,c
 10932  00350A  2A0B               	incf	(??_atoi+1)^0,f,c
 10933  00350C  C00A  F008         	movff	??_atoi,?_atoi
 10934  003510  C00B  F009         	movff	??_atoi+1,?_atoi+1
 10935  003514  EF90  F01A         	goto	l1428
 10936  003518                     l1425:
 10937  003518  C015  F008         	movff	atoi@n,?_atoi
 10938  00351C  C016  F009         	movff	atoi@n+1,?_atoi+1
 10939  003520                     l1428:
 10940  003520  0012               	return		;funcret
 10941  003522                     __end_of_atoi:
 10942                           	callstack 0
 10943                           
 10944 ;; *************** function _isspace *****************
 10945 ;; Defined at:
 10946 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 10947 ;; Parameters:    Size  Location     Type
 10948 ;;  c               2    0[COMRAM] int 
 10949 ;; Auto vars:     Size  Location     Type
 10950 ;;		None
 10951 ;; Return value:  Size  Location     Type
 10952 ;;                  2    0[COMRAM] int 
 10953 ;; Registers used:
 10954 ;;		wreg, status,2, status,0
 10955 ;; Tracked objects:
 10956 ;;		On entry : 0/0
 10957 ;;		On exit  : 0/0
 10958 ;;		Unchanged: 0/0
 10959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10960 ;;      Params:         2       0       0       0       0       0       0
 10961 ;;      Locals:         1       0       0       0       0       0       0
 10962 ;;      Temps:          4       0       0       0       0       0       0
 10963 ;;      Totals:         7       0       0       0       0       0       0
 10964 ;;Total ram usage:        7 bytes
 10965 ;; Hardware stack levels used:    1
 10966 ;; Hardware stack levels required when called:    1
 10967 ;; This function calls:
 10968 ;;		Nothing
 10969 ;; This function is called by:
 10970 ;;		_atoi
 10971 ;; This function uses a non-reentrant model
 10972 ;;
 10973                           
 10974                           	psect	text37
 10975  00454A                     __ptext37:
 10976                           	callstack 0
 10977  00454A                     _isspace:
 10978                           	callstack 23
 10979  00454A  0E01               	movlw	1
 10980  00454C  6E07               	movwf	_isspace$2964^0,c
 10981  00454E  0E20               	movlw	32
 10982  004550  1801               	xorwf	isspace@c^0,w,c
 10983  004552  1002               	iorwf	(isspace@c+1)^0,w,c
 10984  004554  B4D8               	btfsc	status,2,c
 10985  004556  EFAF  F022         	goto	u5261
 10986  00455A  EFB1  F022         	goto	u5260
 10987  00455E                     u5261:
 10988  00455E  EFCA  F022         	goto	l4620
 10989  004562                     u5260:
 10990  004562  0EF7               	movlw	247
 10991  004564  6E03               	movwf	??_isspace^0,c
 10992  004566  0EFF               	movlw	255
 10993  004568  6E04               	movwf	(??_isspace+1)^0,c
 10994  00456A  C001  F005         	movff	isspace@c,??_isspace+2
 10995  00456E  C002  F006         	movff	isspace@c+1,??_isspace+3
 10996  004572  5003               	movf	??_isspace^0,w,c
 10997  004574  2605               	addwf	(??_isspace+2)^0,f,c
 10998  004576  5004               	movf	(??_isspace+1)^0,w,c
 10999  004578  2206               	addwfc	(??_isspace+3)^0,f,c
 11000  00457A  5006               	movf	(??_isspace+3)^0,w,c
 11001  00457C  E109               	bnz	u5270
 11002  00457E  0E05               	movlw	5
 11003  004580  5C05               	subwf	(??_isspace+2)^0,w,c
 11004  004582  A0D8               	btfss	status,0,c
 11005  004584  EFC6  F022         	goto	u5271
 11006  004588  EFC8  F022         	goto	u5270
 11007  00458C                     u5271:
 11008  00458C  EFCA  F022         	goto	l4620
 11009  004590                     u5270:
 11010  004590  0E00               	movlw	0
 11011  004592  6E07               	movwf	_isspace$2964^0,c
 11012  004594                     l4620:
 11013  004594  C007  F001         	movff	_isspace$2964,?_isspace
 11014  004598  6A02               	clrf	(?_isspace+1)^0,c
 11015  00459A  0012               	return		;funcret
 11016  00459C                     __end_of_isspace:
 11017                           	callstack 0
 11018                           
 11019 ;; *************** function _isdigit *****************
 11020 ;; Defined at:
 11021 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 11022 ;; Parameters:    Size  Location     Type
 11023 ;;  c               2    0[COMRAM] int 
 11024 ;; Auto vars:     Size  Location     Type
 11025 ;;		None
 11026 ;; Return value:  Size  Location     Type
 11027 ;;                  2    0[COMRAM] int 
 11028 ;; Registers used:
 11029 ;;		wreg, status,2, status,0
 11030 ;; Tracked objects:
 11031 ;;		On entry : 0/0
 11032 ;;		On exit  : 0/0
 11033 ;;		Unchanged: 0/0
 11034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11035 ;;      Params:         2       0       0       0       0       0       0
 11036 ;;      Locals:         0       0       0       0       0       0       0
 11037 ;;      Temps:          4       0       0       0       0       0       0
 11038 ;;      Totals:         6       0       0       0       0       0       0
 11039 ;;Total ram usage:        6 bytes
 11040 ;; Hardware stack levels used:    1
 11041 ;; Hardware stack levels required when called:    1
 11042 ;; This function calls:
 11043 ;;		Nothing
 11044 ;; This function is called by:
 11045 ;;		_vfpfcnvrt
 11046 ;;		_atoi
 11047 ;; This function uses a non-reentrant model
 11048 ;;
 11049                           
 11050                           	psect	text38
 11051  004726                     __ptext38:
 11052                           	callstack 0
 11053  004726                     _isdigit:
 11054                           	callstack 24
 11055  004726  0ED0               	movlw	208
 11056  004728  6E03               	movwf	??_isdigit^0,c
 11057  00472A  0EFF               	movlw	255
 11058  00472C  6E04               	movwf	(??_isdigit+1)^0,c
 11059  00472E  C001  F005         	movff	isdigit@c,??_isdigit+2
 11060  004732  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 11061  004736  5003               	movf	??_isdigit^0,w,c
 11062  004738  2605               	addwf	(??_isdigit+2)^0,f,c
 11063  00473A  5004               	movf	(??_isdigit+1)^0,w,c
 11064  00473C  2206               	addwfc	(??_isdigit+3)^0,f,c
 11065  00473E  5006               	movf	(??_isdigit+3)^0,w,c
 11066  004740  E10A               	bnz	u5240
 11067  004742  0E0A               	movlw	10
 11068  004744  5C05               	subwf	(??_isdigit+2)^0,w,c
 11069  004746  A0D8               	btfss	status,0,c
 11070  004748  EFA8  F023         	goto	u5241
 11071  00474C  EFAB  F023         	goto	u5240
 11072  004750                     u5241:
 11073  004750  0E01               	movlw	1
 11074  004752  EFAC  F023         	goto	u5250
 11075  004756                     u5240:
 11076  004756  0E00               	movlw	0
 11077  004758                     u5250:
 11078  004758  6E01               	movwf	?_isdigit^0,c
 11079  00475A  6A02               	clrf	(?_isdigit+1)^0,c
 11080  00475C  0012               	return		;funcret
 11081  00475E                     __end_of_isdigit:
 11082                           	callstack 0
 11083                           
 11084 ;; *************** function ___wmul *****************
 11085 ;; Defined at:
 11086 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 11087 ;; Parameters:    Size  Location     Type
 11088 ;;  multiplier      2    0[COMRAM] unsigned int 
 11089 ;;  multiplicand    2    2[COMRAM] unsigned int 
 11090 ;; Auto vars:     Size  Location     Type
 11091 ;;  product         2    4[COMRAM] unsigned int 
 11092 ;; Return value:  Size  Location     Type
 11093 ;;                  2    0[COMRAM] unsigned int 
 11094 ;; Registers used:
 11095 ;;		wreg, status,2, status,0, prodl, prodh
 11096 ;; Tracked objects:
 11097 ;;		On entry : 0/0
 11098 ;;		On exit  : 0/0
 11099 ;;		Unchanged: 0/0
 11100 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11101 ;;      Params:         4       0       0       0       0       0       0
 11102 ;;      Locals:         2       0       0       0       0       0       0
 11103 ;;      Temps:          0       0       0       0       0       0       0
 11104 ;;      Totals:         6       0       0       0       0       0       0
 11105 ;;Total ram usage:        6 bytes
 11106 ;; Hardware stack levels used:    1
 11107 ;; Hardware stack levels required when called:    1
 11108 ;; This function calls:
 11109 ;;		Nothing
 11110 ;; This function is called by:
 11111 ;;		_atoi
 11112 ;; This function uses a non-reentrant model
 11113 ;;
 11114                           
 11115                           	psect	text39
 11116  0047F8                     __ptext39:
 11117                           	callstack 0
 11118  0047F8                     ___wmul:
 11119                           	callstack 23
 11120  0047F8  5001               	movf	___wmul@multiplier^0,w,c
 11121  0047FA  0203               	mulwf	___wmul@multiplicand^0,c
 11122  0047FC  CFF3 F005          	movff	prodl,___wmul@product
 11123  004800  CFF4 F006          	movff	prodh,___wmul@product+1
 11124  004804  5001               	movf	___wmul@multiplier^0,w,c
 11125  004806  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 11126  004808  50F3               	movf	243,w,c
 11127  00480A  2606               	addwf	(___wmul@product+1)^0,f,c
 11128  00480C  5002               	movf	(___wmul@multiplier+1)^0,w,c
 11129  00480E  0203               	mulwf	___wmul@multiplicand^0,c
 11130  004810  50F3               	movf	243,w,c
 11131  004812  2606               	addwf	(___wmul@product+1)^0,f,c
 11132  004814  C005  F001         	movff	___wmul@product,?___wmul
 11133  004818  C006  F002         	movff	___wmul@product+1,?___wmul+1
 11134  00481C  0012               	return		;funcret
 11135  00481E                     __end_of___wmul:
 11136                           	callstack 0
 11137                           
 11138 ;; *************** function _eepromWrite *****************
 11139 ;; Defined at:
 11140 ;;		line 62 in file "fs_eeprom.c"
 11141 ;; Parameters:    Size  Location     Type
 11142 ;;  address         1    wreg     unsigned char 
 11143 ;;  data            1    0[COMRAM] unsigned char 
 11144 ;; Auto vars:     Size  Location     Type
 11145 ;;  address         1    1[COMRAM] unsigned char 
 11146 ;; Return value:  Size  Location     Type
 11147 ;;                  1    wreg      void 
 11148 ;; Registers used:
 11149 ;;		wreg, status,2
 11150 ;; Tracked objects:
 11151 ;;		On entry : 0/0
 11152 ;;		On exit  : 0/0
 11153 ;;		Unchanged: 0/0
 11154 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11155 ;;      Params:         1       0       0       0       0       0       0
 11156 ;;      Locals:         1       0       0       0       0       0       0
 11157 ;;      Temps:          0       0       0       0       0       0       0
 11158 ;;      Totals:         2       0       0       0       0       0       0
 11159 ;;Total ram usage:        2 bytes
 11160 ;; Hardware stack levels used:    1
 11161 ;; Hardware stack levels required when called:    1
 11162 ;; This function calls:
 11163 ;;		Nothing
 11164 ;; This function is called by:
 11165 ;;		_stateMachine
 11166 ;; This function uses a non-reentrant model
 11167 ;;
 11168                           
 11169                           	psect	text40
 11170  0047CA                     __ptext40:
 11171                           	callstack 0
 11172  0047CA                     _eepromWrite:
 11173                           	callstack 27
 11174                           
 11175                           ;incstack = 0
 11176                           ;eepromWrite@address stored from wreg
 11177  0047CA  6E02               	movwf	eepromWrite@address^0,c
 11178  0047CC                     
 11179                           ;fs_eeprom.c: 62: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 63: {;fs_
      +                          eeprom.c: 66:     EEADR = (uint8_t)address;
 11180  0047CC  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 11181  0047D0                     
 11182                           ;fs_eeprom.c: 68:     EEDATA = data;
 11183  0047D0  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 11184  0047D4                     
 11185                           ;fs_eeprom.c: 69:     EECON1bits.EEPGD = 0;
 11186  0047D4  9EA6               	bcf	166,7,c	;volsfr
 11187  0047D6                     
 11188                           ;fs_eeprom.c: 70:     EECON1bits.CFGS = 0;
 11189  0047D6  9CA6               	bcf	166,6,c	;volsfr
 11190  0047D8                     
 11191                           ;fs_eeprom.c: 71:     EECON1bits.WREN = 1;
 11192  0047D8  84A6               	bsf	166,2,c	;volsfr
 11193  0047DA                     
 11194                           ;fs_eeprom.c: 75:     EECON2 = 0x55;
 11195  0047DA  0E55               	movlw	85
 11196  0047DC  6EA7               	movwf	167,c	;volsfr
 11197  0047DE                     
 11198                           ;fs_eeprom.c: 76:     EECON2 = 0xAA;
 11199  0047DE  0EAA               	movlw	170
 11200  0047E0  6EA7               	movwf	167,c	;volsfr
 11201  0047E2                     
 11202                           ;fs_eeprom.c: 77:     EECON1bits.WR = 1;
 11203  0047E2  82A6               	bsf	166,1,c	;volsfr
 11204  0047E4                     l76:
 11205                           
 11206                           ;fs_eeprom.c: 80:     while(PIR2bits.EEIF == 0)
 11207  0047E4  A8A1               	btfss	161,4,c	;volatile
 11208  0047E6  EFF7  F023         	goto	u6331
 11209  0047EA  EFF9  F023         	goto	u6330
 11210  0047EE                     u6331:
 11211  0047EE  EFF2  F023         	goto	l76
 11212  0047F2                     u6330:
 11213  0047F2                     
 11214                           ;fs_eeprom.c: 85:     PIR2bits.EEIF = 0;
 11215  0047F2  98A1               	bcf	161,4,c	;volatile
 11216                           
 11217                           ;fs_eeprom.c: 86:     EECON1bits.WREN = 0;
 11218  0047F4  94A6               	bcf	166,2,c	;volsfr
 11219  0047F6  0012               	return		;funcret
 11220  0047F8                     __end_of_eepromWrite:
 11221                           	callstack 0
 11222                           
 11223 ;; *************** function _Lcd_Write_String *****************
 11224 ;; Defined at:
 11225 ;;		line 146 in file "fs_lcd.c"
 11226 ;; Parameters:    Size  Location     Type
 11227 ;;  a               2    4[COMRAM] PTR unsigned char 
 11228 ;;		 -> STR_13(17), STR_11(17), STR_9(17), STR_7(17), 
 11229 ;;		 -> STR_5(17), STR_3(17), STR_1(17), stateMachine@textCursor2(16), 
 11230 ;; Auto vars:     Size  Location     Type
 11231 ;;  i               2    8[COMRAM] int 
 11232 ;; Return value:  Size  Location     Type
 11233 ;;                  1    wreg      void 
 11234 ;; Registers used:
 11235 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 11236 ;; Tracked objects:
 11237 ;;		On entry : 0/0
 11238 ;;		On exit  : 0/0
 11239 ;;		Unchanged: 0/0
 11240 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11241 ;;      Params:         2       0       0       0       0       0       0
 11242 ;;      Locals:         2       0       0       0       0       0       0
 11243 ;;      Temps:          2       0       0       0       0       0       0
 11244 ;;      Totals:         6       0       0       0       0       0       0
 11245 ;;Total ram usage:        6 bytes
 11246 ;; Hardware stack levels used:    1
 11247 ;; Hardware stack levels required when called:    3
 11248 ;; This function calls:
 11249 ;;		_Lcd_Write_Char
 11250 ;; This function is called by:
 11251 ;;		_stateMachine
 11252 ;; This function uses a non-reentrant model
 11253 ;;
 11254                           
 11255                           	psect	text41
 11256  004224                     __ptext41:
 11257                           	callstack 0
 11258  004224                     _Lcd_Write_String:
 11259                           	callstack 25
 11260  004224                     
 11261                           ;fs_lcd.c: 146: void Lcd_Write_String(char *a);fs_lcd.c: 147: {;fs_lcd.c: 148:    int i;
      +                          ;fs_lcd.c: 149:    for(i=0;a[i]!='\0';i++)
 11262  004224  0E00               	movlw	0
 11263  004226  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 11264  004228  0E00               	movlw	0
 11265  00422A  6E09               	movwf	Lcd_Write_String@i^0,c
 11266  00422C  EF32  F021         	goto	l5256
 11267  004230                     l5252:
 11268                           
 11269                           ;fs_lcd.c: 150:    Lcd_Write_Char(a[i]);
 11270  004230  5009               	movf	Lcd_Write_String@i^0,w,c
 11271  004232  2405               	addwf	Lcd_Write_String@a^0,w,c
 11272  004234  6E07               	movwf	??_Lcd_Write_String^0,c
 11273  004236  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11274  004238  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11275  00423A  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 11276  00423C  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11277  004240  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11278  004244  6AF8               	clrf	tblptru,c
 11279  004246  0E05               	movlw	(high __ramtop+-1)
 11280  004248  64F7               	cpfsgt	tblptrh,c
 11281  00424A  D003               	bra	u6367
 11282  00424C  0008               	tblrd		*
 11283  00424E  50F5               	movf	tablat,w,c
 11284  004250  D005               	bra	u6360
 11285  004252                     u6367:
 11286  004252  CFF6 FFE9          	movff	tblptrl,fsr0l
 11287  004256  CFF7 FFEA          	movff	tblptrh,fsr0h
 11288  00425A  50EF               	movf	indf0,w,c
 11289  00425C                     u6360:
 11290  00425C  ECCA  F023         	call	_Lcd_Write_Char
 11291  004260  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 11292  004262  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 11293  004264                     l5256:
 11294  004264  5009               	movf	Lcd_Write_String@i^0,w,c
 11295  004266  2405               	addwf	Lcd_Write_String@a^0,w,c
 11296  004268  6E07               	movwf	??_Lcd_Write_String^0,c
 11297  00426A  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 11298  00426C  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 11299  00426E  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 11300  004270  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 11301  004274  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 11302  004278  6AF8               	clrf	tblptru,c
 11303  00427A  0E05               	movlw	(high __ramtop+-1)
 11304  00427C  64F7               	cpfsgt	tblptrh,c
 11305  00427E  D003               	bra	u6377
 11306  004280  0008               	tblrd		*
 11307  004282  50F5               	movf	tablat,w,c
 11308  004284  D005               	bra	u6370
 11309  004286                     u6377:
 11310  004286  CFF6 FFE9          	movff	tblptrl,fsr0l
 11311  00428A  CFF7 FFEA          	movff	tblptrh,fsr0h
 11312  00428E  50EF               	movf	indf0,w,c
 11313  004290                     u6370:
 11314  004290  0900               	iorlw	0
 11315  004292  A4D8               	btfss	status,2,c
 11316  004294  EF4E  F021         	goto	u6381
 11317  004298  EF50  F021         	goto	u6380
 11318  00429C                     u6381:
 11319  00429C  EF18  F021         	goto	l5252
 11320  0042A0                     u6380:
 11321  0042A0  0012               	return		;funcret
 11322  0042A2                     __end_of_Lcd_Write_String:
 11323                           	callstack 0
 11324                           
 11325 ;; *************** function _Lcd_Write_Char *****************
 11326 ;; Defined at:
 11327 ;;		line 123 in file "fs_lcd.c"
 11328 ;; Parameters:    Size  Location     Type
 11329 ;;  a               1    wreg     unsigned char 
 11330 ;; Auto vars:     Size  Location     Type
 11331 ;;  a               1    3[COMRAM] unsigned char 
 11332 ;;  y               1    2[COMRAM] unsigned char 
 11333 ;;  temp            1    1[COMRAM] unsigned char 
 11334 ;; Return value:  Size  Location     Type
 11335 ;;                  1    wreg      void 
 11336 ;; Registers used:
 11337 ;;		wreg, status,2, status,0, cstack
 11338 ;; Tracked objects:
 11339 ;;		On entry : 0/0
 11340 ;;		On exit  : 0/0
 11341 ;;		Unchanged: 0/0
 11342 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11343 ;;      Params:         0       0       0       0       0       0       0
 11344 ;;      Locals:         3       0       0       0       0       0       0
 11345 ;;      Temps:          0       0       0       0       0       0       0
 11346 ;;      Totals:         3       0       0       0       0       0       0
 11347 ;;Total ram usage:        3 bytes
 11348 ;; Hardware stack levels used:    1
 11349 ;; Hardware stack levels required when called:    2
 11350 ;; This function calls:
 11351 ;;		_Lcd_Port
 11352 ;; This function is called by:
 11353 ;;		_Lcd_Write_String
 11354 ;; This function uses a non-reentrant model
 11355 ;;
 11356                           
 11357                           	psect	text42
 11358  004794                     __ptext42:
 11359                           	callstack 0
 11360  004794                     _Lcd_Write_Char:
 11361                           	callstack 25
 11362                           
 11363                           ;incstack = 0
 11364                           ;Lcd_Write_Char@a stored from wreg
 11365  004794  6E04               	movwf	Lcd_Write_Char@a^0,c
 11366  004796                     
 11367                           ;fs_lcd.c: 123: void Lcd_Write_Char(char a);fs_lcd.c: 124: {;fs_lcd.c: 125:    char temp
      +                          ,y;;fs_lcd.c: 126:    temp = a&0x0F;
 11368  004796  5004               	movf	Lcd_Write_Char@a^0,w,c
 11369  004798  0B0F               	andlw	15
 11370  00479A  6E02               	movwf	Lcd_Write_Char@temp^0,c
 11371                           
 11372                           ;fs_lcd.c: 127:    y = a&0xF0;
 11373  00479C  5004               	movf	Lcd_Write_Char@a^0,w,c
 11374  00479E  0BF0               	andlw	240
 11375  0047A0  6E03               	movwf	Lcd_Write_Char@y^0,c
 11376  0047A2                     
 11377                           ;fs_lcd.c: 128:    PORTEbits.RE0 = 1;
 11378  0047A2  8084               	bsf	132,0,c	;volatile
 11379  0047A4                     
 11380                           ;fs_lcd.c: 129:    Lcd_Port(y>>4);
 11381  0047A4  3803               	swapf	Lcd_Write_Char@y^0,w,c
 11382  0047A6  0B0F               	andlw	15
 11383  0047A8  EC77  F022         	call	_Lcd_Port
 11384  0047AC                     
 11385                           ;fs_lcd.c: 130:    PORTAbits.RA3 = 1;
 11386  0047AC  8680               	bsf	128,3,c	;volatile
 11387  0047AE                     
 11388                           ;fs_lcd.c: 131:    _delay((unsigned long)((30)*(64000000UL/4000000.0)));
 11389  0047AE  0EA0               	movlw	160
 11390  0047B0                     u7497:
 11391  0047B0  2EE8               	decfsz	wreg,f,c
 11392  0047B2  D7FE               	bra	u7497
 11393  0047B4                     
 11394                           ;fs_lcd.c: 132:    PORTAbits.RA3 = 0;
 11395  0047B4  9680               	bcf	128,3,c	;volatile
 11396  0047B6                     
 11397                           ;fs_lcd.c: 133:    Lcd_Port(temp);
 11398  0047B6  5002               	movf	Lcd_Write_Char@temp^0,w,c
 11399  0047B8  EC77  F022         	call	_Lcd_Port
 11400  0047BC                     
 11401                           ;fs_lcd.c: 134:    PORTAbits.RA3 = 1;
 11402  0047BC  8680               	bsf	128,3,c	;volatile
 11403  0047BE                     
 11404                           ;fs_lcd.c: 135:    _delay((unsigned long)((25)*(64000000UL/4000000.0)));
 11405  0047BE  0E85               	movlw	133
 11406  0047C0                     u7507:
 11407  0047C0  2EE8               	decfsz	wreg,f,c
 11408  0047C2  D7FE               	bra	u7507
 11409  0047C4  F000               	nop	
 11410  0047C6                     
 11411                           ;fs_lcd.c: 136:    PORTAbits.RA3 = 0;
 11412  0047C6  9680               	bcf	128,3,c	;volatile
 11413  0047C8  0012               	return		;funcret
 11414  0047CA                     __end_of_Lcd_Write_Char:
 11415                           	callstack 0
 11416                           
 11417 ;; *************** function _Lcd_Set_Cursor *****************
 11418 ;; Defined at:
 11419 ;;		line 53 in file "fs_lcd.c"
 11420 ;; Parameters:    Size  Location     Type
 11421 ;;  a               1    wreg     unsigned char 
 11422 ;;  b               1    3[COMRAM] unsigned char 
 11423 ;; Auto vars:     Size  Location     Type
 11424 ;;  a               1    4[COMRAM] unsigned char 
 11425 ;;  temp            1    7[COMRAM] unsigned char 
 11426 ;;  y               1    6[COMRAM] unsigned char 
 11427 ;;  z               1    5[COMRAM] unsigned char 
 11428 ;; Return value:  Size  Location     Type
 11429 ;;                  1    wreg      void 
 11430 ;; Registers used:
 11431 ;;		wreg, status,2, status,0, cstack
 11432 ;; Tracked objects:
 11433 ;;		On entry : 0/0
 11434 ;;		On exit  : 0/0
 11435 ;;		Unchanged: 0/0
 11436 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11437 ;;      Params:         1       0       0       0       0       0       0
 11438 ;;      Locals:         4       0       0       0       0       0       0
 11439 ;;      Temps:          0       0       0       0       0       0       0
 11440 ;;      Totals:         5       0       0       0       0       0       0
 11441 ;;Total ram usage:        5 bytes
 11442 ;; Hardware stack levels used:    1
 11443 ;; Hardware stack levels required when called:    3
 11444 ;; This function calls:
 11445 ;;		_Lcd_Cmd
 11446 ;; This function is called by:
 11447 ;;		_stateMachine
 11448 ;; This function uses a non-reentrant model
 11449 ;;
 11450                           
 11451                           	psect	text43
 11452  00430A                     __ptext43:
 11453                           	callstack 0
 11454  00430A                     _Lcd_Set_Cursor:
 11455                           	callstack 25
 11456                           
 11457                           ;incstack = 0
 11458                           ;Lcd_Set_Cursor@a stored from wreg
 11459  00430A  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 11460  00430C                     
 11461                           ;fs_lcd.c: 53: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 54: {;fs_lcd.c: 55:    char
      +                           temp,z,y;;fs_lcd.c: 56:    if(a == 1)
 11462  00430C  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 11463  00430E  A4D8               	btfss	status,2,c
 11464  004310  EF8C  F021         	goto	u6341
 11465  004314  EF8E  F021         	goto	u6340
 11466  004318                     u6341:
 11467  004318  EF9F  F021         	goto	l5242
 11468  00431C                     u6340:
 11469  00431C                     
 11470                           ;fs_lcd.c: 57:    {;fs_lcd.c: 58:      temp = 0x80 + b - 1;
 11471  00431C  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11472  00431E  0F7F               	addlw	127
 11473  004320  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11474                           
 11475                           ;fs_lcd.c: 59:       z = temp>>4;
 11476  004322  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11477  004324  0B0F               	andlw	15
 11478  004326  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11479                           
 11480                           ;fs_lcd.c: 60:       y = temp & 0x0F;
 11481  004328  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11482  00432A  0B0F               	andlw	15
 11483  00432C  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11484  00432E                     
 11485                           ;fs_lcd.c: 61:       Lcd_Cmd(z);
 11486  00432E  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11487  004330  EC30  F024         	call	_Lcd_Cmd
 11488  004334                     
 11489                           ;fs_lcd.c: 62:       Lcd_Cmd(y);
 11490  004334  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11491  004336  EC30  F024         	call	_Lcd_Cmd
 11492                           
 11493                           ;fs_lcd.c: 63:    }
 11494  00433A  EFB7  F021         	goto	l122
 11495  00433E                     l5242:
 11496  00433E  0E02               	movlw	2
 11497  004340  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 11498  004342  A4D8               	btfss	status,2,c
 11499  004344  EFA6  F021         	goto	u6351
 11500  004348  EFA8  F021         	goto	u6350
 11501  00434C                     u6351:
 11502  00434C  EFB7  F021         	goto	l122
 11503  004350                     u6350:
 11504  004350                     
 11505                           ;fs_lcd.c: 65:    {;fs_lcd.c: 66:       temp = 0xC0 + b - 1;
 11506  004350  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 11507  004352  0FBF               	addlw	191
 11508  004354  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 11509                           
 11510                           ;fs_lcd.c: 67:       z = temp>>4;
 11511  004356  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 11512  004358  0B0F               	andlw	15
 11513  00435A  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 11514                           
 11515                           ;fs_lcd.c: 68:       y = temp & 0x0F;
 11516  00435C  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 11517  00435E  0B0F               	andlw	15
 11518  004360  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 11519  004362                     
 11520                           ;fs_lcd.c: 69:       Lcd_Cmd(z);
 11521  004362  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 11522  004364  EC30  F024         	call	_Lcd_Cmd
 11523  004368                     
 11524                           ;fs_lcd.c: 70:       Lcd_Cmd(y);
 11525  004368  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 11526  00436A  EC30  F024         	call	_Lcd_Cmd
 11527  00436E                     l122:
 11528  00436E  0012               	return		;funcret
 11529  004370                     __end_of_Lcd_Set_Cursor:
 11530                           	callstack 0
 11531                           
 11532 ;; *************** function _buttonControlFlags *****************
 11533 ;; Defined at:
 11534 ;;		line 72 in file "fs_menu_controller.c"
 11535 ;; Parameters:    Size  Location     Type
 11536 ;;		None
 11537 ;; Auto vars:     Size  Location     Type
 11538 ;;  textCursor2    16    0[COMRAM] unsigned char [16]
 11539 ;; Return value:  Size  Location     Type
 11540 ;;                  1    wreg      void 
 11541 ;; Registers used:
 11542 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 11543 ;; Tracked objects:
 11544 ;;		On entry : 0/0
 11545 ;;		On exit  : 0/0
 11546 ;;		Unchanged: 0/0
 11547 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11548 ;;      Params:         0       0       0       0       0       0       0
 11549 ;;      Locals:        16       0       0       0       0       0       0
 11550 ;;      Temps:          0       0       0       0       0       0       0
 11551 ;;      Totals:        16       0       0       0       0       0       0
 11552 ;;Total ram usage:       16 bytes
 11553 ;; Hardware stack levels used:    1
 11554 ;; Hardware stack levels required when called:    1
 11555 ;; This function calls:
 11556 ;;		Nothing
 11557 ;; This function is called by:
 11558 ;;		_menuControl
 11559 ;; This function uses a non-reentrant model
 11560 ;;
 11561                           
 11562                           	psect	text44
 11563  0031EC                     __ptext44:
 11564                           	callstack 0
 11565  0031EC                     _buttonControlFlags:
 11566                           	callstack 28
 11567  0031EC                     
 11568                           ;fs_menu_controller.c: 74:     char textCursor2[16] = {0};
 11569  0031EC  EE20  F001         	lfsr	2,buttonControlFlags@textCursor2
 11570  0031F0  0E0F               	movlw	15
 11571  0031F2                     u6401:
 11572  0031F2  6ADE               	clrf	postinc2,c
 11573  0031F4  06E8               	decf	wreg,f,c
 11574  0031F6  E2FD               	bc	u6401
 11575  0031F8                     
 11576                           ;fs_menu_controller.c: 76:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          2 == 0))
 11577  0031F8  B05E               	btfsc	_button_bounce_controller^0,0,c
 11578  0031FA  EF01  F019         	goto	u6411
 11579  0031FE  EF03  F019         	goto	u6410
 11580  003202                     u6411:
 11581  003202  EF0D  F019         	goto	l330
 11582  003206                     u6410:
 11583  003206  B481               	btfsc	129,2,c	;volatile
 11584  003208  EF08  F019         	goto	u6421
 11585  00320C  EF0A  F019         	goto	u6420
 11586  003210                     u6421:
 11587  003210  EF0D  F019         	goto	l330
 11588  003214                     u6420:
 11589  003214                     
 11590                           ;fs_menu_controller.c: 77:     {;fs_menu_controller.c: 78:         button_bounce_control
      +                          ler.menu = 1;
 11591  003214  805E               	bsf	_button_bounce_controller^0,0,c
 11592                           
 11593                           ;fs_menu_controller.c: 79:         menu_flags.menu_input_flag = 1;
 11594  003216  0100               	movlb	0	; () banked
 11595  003218  81F3               	bsf	_menu_flags& (0+255),0,b
 11596  00321A                     l330:
 11597                           
 11598                           ;fs_menu_controller.c: 82:     if ((PORTBbits.RB2 == 1) && (button_bounce_controller.men
      +                          u == 1))
 11599  00321A  A481               	btfss	129,2,c	;volatile
 11600  00321C  EF12  F019         	goto	u6431
 11601  003220  EF14  F019         	goto	u6430
 11602  003224                     u6431:
 11603  003224  EF1E  F019         	goto	l331
 11604  003228                     u6430:
 11605  003228  A05E               	btfss	_button_bounce_controller^0,0,c
 11606  00322A  EF19  F019         	goto	u6441
 11607  00322E  EF1B  F019         	goto	u6440
 11608  003232                     u6441:
 11609  003232  EF1E  F019         	goto	l331
 11610  003236                     u6440:
 11611  003236                     
 11612                           ;fs_menu_controller.c: 83:     {;fs_menu_controller.c: 84:         button_bounce_control
      +                          ler.menu = 0;
 11613  003236  905E               	bcf	_button_bounce_controller^0,0,c
 11614                           
 11615                           ;fs_menu_controller.c: 85:         menu_flags.menu_input_flag = 0;
 11616  003238  0100               	movlb	0	; () banked
 11617  00323A  91F3               	bcf	_menu_flags& (0+255),0,b
 11618  00323C                     l331:
 11619                           
 11620                           ;fs_menu_controller.c: 88:     if ((button_bounce_controller.pause == 0) && (PORTBbits.R
      +                          B3 == 0))
 11621  00323C  B65E               	btfsc	_button_bounce_controller^0,3,c
 11622  00323E  EF23  F019         	goto	u6451
 11623  003242  EF25  F019         	goto	u6450
 11624  003246                     u6451:
 11625  003246  EF2F  F019         	goto	l332
 11626  00324A                     u6450:
 11627  00324A  B681               	btfsc	129,3,c	;volatile
 11628  00324C  EF2A  F019         	goto	u6461
 11629  003250  EF2C  F019         	goto	u6460
 11630  003254                     u6461:
 11631  003254  EF2F  F019         	goto	l332
 11632  003258                     u6460:
 11633  003258                     
 11634                           ;fs_menu_controller.c: 89:     {;fs_menu_controller.c: 90:         button_bounce_control
      +                          ler.pause = 1;
 11635  003258  865E               	bsf	_button_bounce_controller^0,3,c
 11636                           
 11637                           ;fs_menu_controller.c: 91:         menu_flags.menu_pause_flag = 1;
 11638  00325A  0100               	movlb	0	; () banked
 11639  00325C  87F3               	bsf	_menu_flags& (0+255),3,b
 11640  00325E                     l332:
 11641                           
 11642                           ;fs_menu_controller.c: 93:     if ((PORTBbits.RB3 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 11643  00325E  A681               	btfss	129,3,c	;volatile
 11644  003260  EF34  F019         	goto	u6471
 11645  003264  EF36  F019         	goto	u6470
 11646  003268                     u6471:
 11647  003268  EF40  F019         	goto	l333
 11648  00326C                     u6470:
 11649  00326C  A65E               	btfss	_button_bounce_controller^0,3,c
 11650  00326E  EF3B  F019         	goto	u6481
 11651  003272  EF3D  F019         	goto	u6480
 11652  003276                     u6481:
 11653  003276  EF40  F019         	goto	l333
 11654  00327A                     u6480:
 11655  00327A                     
 11656                           ;fs_menu_controller.c: 94:     {;fs_menu_controller.c: 95:         button_bounce_control
      +                          ler.pause = 0;
 11657  00327A  965E               	bcf	_button_bounce_controller^0,3,c
 11658                           
 11659                           ;fs_menu_controller.c: 96:         menu_flags.menu_pause_flag = 0;
 11660  00327C  0100               	movlb	0	; () banked
 11661  00327E  97F3               	bcf	_menu_flags& (0+255),3,b
 11662  003280                     l333:
 11663                           
 11664                           ;fs_menu_controller.c: 100:     if ((button_bounce_controller.start == 0) && (PORTAbits.
      +                          RA0 == 0))
 11665  003280  B25E               	btfsc	_button_bounce_controller^0,1,c
 11666  003282  EF45  F019         	goto	u6491
 11667  003286  EF47  F019         	goto	u6490
 11668  00328A                     u6491:
 11669  00328A  EF51  F019         	goto	l334
 11670  00328E                     u6490:
 11671  00328E  B080               	btfsc	128,0,c	;volatile
 11672  003290  EF4C  F019         	goto	u6501
 11673  003294  EF4E  F019         	goto	u6500
 11674  003298                     u6501:
 11675  003298  EF51  F019         	goto	l334
 11676  00329C                     u6500:
 11677  00329C                     
 11678                           ;fs_menu_controller.c: 101:     {;fs_menu_controller.c: 102:         button_bounce_contr
      +                          oller.start = 1;
 11679  00329C  825E               	bsf	_button_bounce_controller^0,1,c
 11680                           
 11681                           ;fs_menu_controller.c: 103:         menu_flags.menu_start_flag = 1;
 11682  00329E  0100               	movlb	0	; () banked
 11683  0032A0  83F3               	bsf	_menu_flags& (0+255),1,b
 11684  0032A2                     l334:
 11685                           
 11686                           ;fs_menu_controller.c: 105:     if ((PORTAbits.RA0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 11687  0032A2  A080               	btfss	128,0,c	;volatile
 11688  0032A4  EF56  F019         	goto	u6511
 11689  0032A8  EF58  F019         	goto	u6510
 11690  0032AC                     u6511:
 11691  0032AC  EF62  F019         	goto	l335
 11692  0032B0                     u6510:
 11693  0032B0  A25E               	btfss	_button_bounce_controller^0,1,c
 11694  0032B2  EF5D  F019         	goto	u6521
 11695  0032B6  EF5F  F019         	goto	u6520
 11696  0032BA                     u6521:
 11697  0032BA  EF62  F019         	goto	l335
 11698  0032BE                     u6520:
 11699  0032BE                     
 11700                           ;fs_menu_controller.c: 106:     {;fs_menu_controller.c: 107:         button_bounce_contr
      +                          oller.start = 0;
 11701  0032BE  925E               	bcf	_button_bounce_controller^0,1,c
 11702                           
 11703                           ;fs_menu_controller.c: 108:         menu_flags.menu_start_flag = 0;
 11704  0032C0  0100               	movlb	0	; () banked
 11705  0032C2  93F3               	bcf	_menu_flags& (0+255),1,b
 11706  0032C4                     l335:
 11707                           
 11708                           ;fs_menu_controller.c: 112:     if ((button_bounce_controller.stop == 0) && (PORTAbits.R
      +                          A5 == 0))
 11709  0032C4  B45E               	btfsc	_button_bounce_controller^0,2,c
 11710  0032C6  EF67  F019         	goto	u6531
 11711  0032CA  EF69  F019         	goto	u6530
 11712  0032CE                     u6531:
 11713  0032CE  EF73  F019         	goto	l336
 11714  0032D2                     u6530:
 11715  0032D2  BA80               	btfsc	128,5,c	;volatile
 11716  0032D4  EF6E  F019         	goto	u6541
 11717  0032D8  EF70  F019         	goto	u6540
 11718  0032DC                     u6541:
 11719  0032DC  EF73  F019         	goto	l336
 11720  0032E0                     u6540:
 11721  0032E0                     
 11722                           ;fs_menu_controller.c: 113:     {;fs_menu_controller.c: 114:         button_bounce_contr
      +                          oller.stop = 1;
 11723  0032E0  845E               	bsf	_button_bounce_controller^0,2,c
 11724                           
 11725                           ;fs_menu_controller.c: 115:         menu_flags.menu_stop_flag = 1;
 11726  0032E2  0100               	movlb	0	; () banked
 11727  0032E4  85F3               	bsf	_menu_flags& (0+255),2,b
 11728  0032E6                     l336:
 11729                           
 11730                           ;fs_menu_controller.c: 117:     if ((PORTAbits.RA5 == 1) && (button_bounce_controller.st
      +                          op == 1))
 11731  0032E6  AA80               	btfss	128,5,c	;volatile
 11732  0032E8  EF78  F019         	goto	u6551
 11733  0032EC  EF7A  F019         	goto	u6550
 11734  0032F0                     u6551:
 11735  0032F0  EF84  F019         	goto	l337
 11736  0032F4                     u6550:
 11737  0032F4  A45E               	btfss	_button_bounce_controller^0,2,c
 11738  0032F6  EF7F  F019         	goto	u6561
 11739  0032FA  EF81  F019         	goto	u6560
 11740  0032FE                     u6561:
 11741  0032FE  EF84  F019         	goto	l337
 11742  003302                     u6560:
 11743  003302                     
 11744                           ;fs_menu_controller.c: 118:     {;fs_menu_controller.c: 119:         button_bounce_contr
      +                          oller.stop = 0;
 11745  003302  945E               	bcf	_button_bounce_controller^0,2,c
 11746                           
 11747                           ;fs_menu_controller.c: 120:         menu_flags.menu_stop_flag = 0;
 11748  003304  0100               	movlb	0	; () banked
 11749  003306  95F3               	bcf	_menu_flags& (0+255),2,b
 11750  003308                     l337:
 11751                           
 11752                           ;fs_menu_controller.c: 124:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB5 == 0))
 11753  003308  BA5E               	btfsc	_button_bounce_controller^0,5,c
 11754  00330A  EF89  F019         	goto	u6571
 11755  00330E  EF8B  F019         	goto	u6570
 11756  003312                     u6571:
 11757  003312  EF95  F019         	goto	l338
 11758  003316                     u6570:
 11759  003316  BA81               	btfsc	129,5,c	;volatile
 11760  003318  EF90  F019         	goto	u6581
 11761  00331C  EF92  F019         	goto	u6580
 11762  003320                     u6581:
 11763  003320  EF95  F019         	goto	l338
 11764  003324                     u6580:
 11765  003324                     
 11766                           ;fs_menu_controller.c: 125:     {;fs_menu_controller.c: 126:         button_bounce_contr
      +                          oller.increase = 1;
 11767  003324  8A5E               	bsf	_button_bounce_controller^0,5,c
 11768                           
 11769                           ;fs_menu_controller.c: 127:         menu_flags.menu_increase_flag = 1;
 11770  003326  0100               	movlb	0	; () banked
 11771  003328  89F3               	bsf	_menu_flags& (0+255),4,b
 11772  00332A                     l338:
 11773                           
 11774                           ;fs_menu_controller.c: 129:     if ((PORTBbits.RB5 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 11775  00332A  AA81               	btfss	129,5,c	;volatile
 11776  00332C  EF9A  F019         	goto	u6591
 11777  003330  EF9C  F019         	goto	u6590
 11778  003334                     u6591:
 11779  003334  EFA6  F019         	goto	l339
 11780  003338                     u6590:
 11781  003338  AA5E               	btfss	_button_bounce_controller^0,5,c
 11782  00333A  EFA1  F019         	goto	u6601
 11783  00333E  EFA3  F019         	goto	u6600
 11784  003342                     u6601:
 11785  003342  EFA6  F019         	goto	l339
 11786  003346                     u6600:
 11787  003346                     
 11788                           ;fs_menu_controller.c: 130:     {;fs_menu_controller.c: 131:         button_bounce_contr
      +                          oller.increase = 0;
 11789  003346  9A5E               	bcf	_button_bounce_controller^0,5,c
 11790                           
 11791                           ;fs_menu_controller.c: 132:         menu_flags.menu_increase_flag = 0;
 11792  003348  0100               	movlb	0	; () banked
 11793  00334A  99F3               	bcf	_menu_flags& (0+255),4,b
 11794  00334C                     l339:
 11795                           
 11796                           ;fs_menu_controller.c: 136:     if ((button_bounce_controller.decrease == 0) && (PORTBbi
      +                          ts.RB4 == 0))
 11797  00334C  B85E               	btfsc	_button_bounce_controller^0,4,c
 11798  00334E  EFAB  F019         	goto	u6611
 11799  003352  EFAD  F019         	goto	u6610
 11800  003356                     u6611:
 11801  003356  EFB7  F019         	goto	l340
 11802  00335A                     u6610:
 11803  00335A  B881               	btfsc	129,4,c	;volatile
 11804  00335C  EFB2  F019         	goto	u6621
 11805  003360  EFB4  F019         	goto	u6620
 11806  003364                     u6621:
 11807  003364  EFB7  F019         	goto	l340
 11808  003368                     u6620:
 11809  003368                     
 11810                           ;fs_menu_controller.c: 137:     {;fs_menu_controller.c: 138:         button_bounce_contr
      +                          oller.decrease = 1;
 11811  003368  885E               	bsf	_button_bounce_controller^0,4,c
 11812                           
 11813                           ;fs_menu_controller.c: 139:         menu_flags.menu_decrease_flag = 1;
 11814  00336A  0100               	movlb	0	; () banked
 11815  00336C  8BF3               	bsf	_menu_flags& (0+255),5,b
 11816  00336E                     l340:
 11817                           
 11818                           ;fs_menu_controller.c: 141:     if ((PORTBbits.RB4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 11819  00336E  A881               	btfss	129,4,c	;volatile
 11820  003370  EFBC  F019         	goto	u6631
 11821  003374  EFBE  F019         	goto	u6630
 11822  003378                     u6631:
 11823  003378  EFC8  F019         	goto	l342
 11824  00337C                     u6630:
 11825  00337C  A85E               	btfss	_button_bounce_controller^0,4,c
 11826  00337E  EFC3  F019         	goto	u6641
 11827  003382  EFC5  F019         	goto	u6640
 11828  003386                     u6641:
 11829  003386  EFC8  F019         	goto	l342
 11830  00338A                     u6640:
 11831  00338A                     
 11832                           ;fs_menu_controller.c: 142:     {;fs_menu_controller.c: 143:         button_bounce_contr
      +                          oller.decrease = 0;
 11833  00338A  985E               	bcf	_button_bounce_controller^0,4,c
 11834                           
 11835                           ;fs_menu_controller.c: 144:         menu_flags.menu_decrease_flag = 0;
 11836  00338C  0100               	movlb	0	; () banked
 11837  00338E  9BF3               	bcf	_menu_flags& (0+255),5,b
 11838  003390                     l342:
 11839  003390  0012               	return		;funcret
 11840  003392                     __end_of_buttonControlFlags:
 11841                           	callstack 0
 11842                           
 11843 ;; *************** function _mcu_init *****************
 11844 ;; Defined at:
 11845 ;;		line 38 in file "fs_mcu.c"
 11846 ;; Parameters:    Size  Location     Type
 11847 ;;		None
 11848 ;; Auto vars:     Size  Location     Type
 11849 ;;		None
 11850 ;; Return value:  Size  Location     Type
 11851 ;;                  1    wreg      void 
 11852 ;; Registers used:
 11853 ;;		wreg, status,2
 11854 ;; Tracked objects:
 11855 ;;		On entry : 0/0
 11856 ;;		On exit  : 0/0
 11857 ;;		Unchanged: 0/0
 11858 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11859 ;;      Params:         0       0       0       0       0       0       0
 11860 ;;      Locals:         0       0       0       0       0       0       0
 11861 ;;      Temps:          0       0       0       0       0       0       0
 11862 ;;      Totals:         0       0       0       0       0       0       0
 11863 ;;Total ram usage:        0 bytes
 11864 ;; Hardware stack levels used:    1
 11865 ;; Hardware stack levels required when called:    1
 11866 ;; This function calls:
 11867 ;;		Nothing
 11868 ;; This function is called by:
 11869 ;;		_main
 11870 ;; This function uses a non-reentrant model
 11871 ;;
 11872                           
 11873                           	psect	text45
 11874  00487E                     __ptext45:
 11875                           	callstack 0
 11876  00487E                     _mcu_init:
 11877                           	callstack 29
 11878  00487E                     
 11879                           ;fs_mcu.c: 40:    OSCCONbits.IRCF = 0b111;
 11880  00487E  0E70               	movlw	112
 11881  004880  12D3               	iorwf	211,f,c	;volatile
 11882  004882                     
 11883                           ;fs_mcu.c: 42:    OSCTUNEbits.PLLEN = 0b1;
 11884  004882  8C9B               	bsf	155,6,c	;volatile
 11885  004884                     l257:
 11886  004884  A4D3               	btfss	211,2,c	;volatile
 11887  004886  EF47  F024         	goto	u7101
 11888  00488A  EF49  F024         	goto	u7100
 11889  00488E                     u7101:
 11890  00488E  EF42  F024         	goto	l257
 11891  004892                     u7100:
 11892  004892  0012               	return		;funcret
 11893  004894                     __end_of_mcu_init:
 11894                           	callstack 0
 11895                           
 11896 ;; *************** function _lcd_init *****************
 11897 ;; Defined at:
 11898 ;;		line 79 in file "fs_lcd.c"
 11899 ;; Parameters:    Size  Location     Type
 11900 ;;		None
 11901 ;; Auto vars:     Size  Location     Type
 11902 ;;		None
 11903 ;; Return value:  Size  Location     Type
 11904 ;;                  1    wreg      void 
 11905 ;; Registers used:
 11906 ;;		wreg, status,2, cstack
 11907 ;; Tracked objects:
 11908 ;;		On entry : 0/0
 11909 ;;		On exit  : 0/0
 11910 ;;		Unchanged: 0/0
 11911 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11912 ;;      Params:         0       0       0       0       0       0       0
 11913 ;;      Locals:         0       0       0       0       0       0       0
 11914 ;;      Temps:          2       0       0       0       0       0       0
 11915 ;;      Totals:         2       0       0       0       0       0       0
 11916 ;;Total ram usage:        2 bytes
 11917 ;; Hardware stack levels used:    1
 11918 ;; Hardware stack levels required when called:    3
 11919 ;; This function calls:
 11920 ;;		_Lcd_Cmd
 11921 ;;		_Lcd_Port
 11922 ;; This function is called by:
 11923 ;;		_main
 11924 ;; This function uses a non-reentrant model
 11925 ;;
 11926                           
 11927                           	psect	text46
 11928  00418E                     __ptext46:
 11929                           	callstack 0
 11930  00418E                     _lcd_init:
 11931                           	callstack 27
 11932  00418E                     
 11933                           ;fs_lcd.c: 81:     TRISEbits.RE0 = 0;
 11934  00418E  9096               	bcf	150,0,c	;volatile
 11935                           
 11936                           ;fs_lcd.c: 82:     ANSELEbits.ANSE0 = 0;
 11937  004190  010F               	movlb	15	; () banked
 11938  004192  913C               	bcf	60,0,b	;volatile
 11939                           
 11940                           ;fs_lcd.c: 84:     TRISAbits.RA3 = 0;
 11941  004194  9692               	bcf	146,3,c	;volatile
 11942                           
 11943                           ;fs_lcd.c: 85:     ANSELAbits.ANSA3 = 0;
 11944  004196  9738               	bcf	56,3,b	;volatile
 11945                           
 11946                           ;fs_lcd.c: 87:     TRISDbits.RD0 = 0;
 11947  004198  9095               	bcf	149,0,c	;volatile
 11948                           
 11949                           ;fs_lcd.c: 88:     ANSELDbits.ANSD0 = 0;
 11950  00419A  913B               	bcf	59,0,b	;volatile
 11951                           
 11952                           ;fs_lcd.c: 90:     TRISDbits.RD1 = 0;
 11953  00419C  9295               	bcf	149,1,c	;volatile
 11954                           
 11955                           ;fs_lcd.c: 91:     ANSELDbits.ANSD1 = 0;
 11956  00419E  933B               	bcf	59,1,b	;volatile
 11957                           
 11958                           ;fs_lcd.c: 93:     TRISDbits.RD2 = 0;
 11959  0041A0  9495               	bcf	149,2,c	;volatile
 11960                           
 11961                           ;fs_lcd.c: 94:     ANSELDbits.ANSD2 = 0;
 11962  0041A2  953B               	bcf	59,2,b	;volatile
 11963                           
 11964                           ;fs_lcd.c: 96:     TRISDbits.RD3 = 0;
 11965  0041A4  9695               	bcf	149,3,c	;volatile
 11966                           
 11967                           ;fs_lcd.c: 97:     ANSELDbits.ANSD3 = 0;
 11968  0041A6  973B               	bcf	59,3,b	;volatile
 11969  0041A8                     
 11970                           ; BSR set to: 15
 11971                           ;fs_lcd.c: 100:     Lcd_Port(0x00);
 11972  0041A8  0E00               	movlw	0
 11973  0041AA  EC77  F022         	call	_Lcd_Port
 11974  0041AE                     
 11975                           ;fs_lcd.c: 101:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 11976  0041AE  0E02               	movlw	2
 11977  0041B0  6E05               	movwf	(??_lcd_init+1)^0,c
 11978  0041B2  0EA0               	movlw	160
 11979  0041B4  6E04               	movwf	??_lcd_init^0,c
 11980  0041B6  0E92               	movlw	146
 11981  0041B8                     u7517:
 11982  0041B8  2EE8               	decfsz	wreg,f,c
 11983  0041BA  D7FE               	bra	u7517
 11984  0041BC  2E04               	decfsz	??_lcd_init^0,f,c
 11985  0041BE  D7FC               	bra	u7517
 11986  0041C0  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 11987  0041C2  D7FA               	bra	u7517
 11988  0041C4  D000               	nop2	
 11989  0041C6                     
 11990                           ;fs_lcd.c: 102:     Lcd_Cmd(0x03);
 11991  0041C6  0E03               	movlw	3
 11992  0041C8  EC30  F024         	call	_Lcd_Cmd
 11993  0041CC                     
 11994                           ;fs_lcd.c: 103:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 11995  0041CC  0E68               	movlw	104
 11996  0041CE  6E04               	movwf	??_lcd_init^0,c
 11997  0041D0  0EE4               	movlw	228
 11998  0041D2                     u7527:
 11999  0041D2  2EE8               	decfsz	wreg,f,c
 12000  0041D4  D7FE               	bra	u7527
 12001  0041D6  2E04               	decfsz	??_lcd_init^0,f,c
 12002  0041D8  D7FC               	bra	u7527
 12003  0041DA  D000               	nop2	
 12004  0041DC                     
 12005                           ;fs_lcd.c: 104:     Lcd_Cmd(0x03);
 12006  0041DC  0E03               	movlw	3
 12007  0041DE  EC30  F024         	call	_Lcd_Cmd
 12008  0041E2                     
 12009                           ;fs_lcd.c: 105:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 12010  0041E2  0EE5               	movlw	229
 12011  0041E4  6E04               	movwf	??_lcd_init^0,c
 12012  0041E6  0E91               	movlw	145
 12013  0041E8                     u7537:
 12014  0041E8  2EE8               	decfsz	wreg,f,c
 12015  0041EA  D7FE               	bra	u7537
 12016  0041EC  2E04               	decfsz	??_lcd_init^0,f,c
 12017  0041EE  D7FC               	bra	u7537
 12018  0041F0  F000               	nop	
 12019  0041F2                     
 12020                           ;fs_lcd.c: 106:     Lcd_Cmd(0x03);
 12021  0041F2  0E03               	movlw	3
 12022  0041F4  EC30  F024         	call	_Lcd_Cmd
 12023  0041F8                     
 12024                           ;fs_lcd.c: 107:     Lcd_Cmd(0x02);
 12025  0041F8  0E02               	movlw	2
 12026  0041FA  EC30  F024         	call	_Lcd_Cmd
 12027  0041FE                     
 12028                           ;fs_lcd.c: 108:     Lcd_Cmd(0x02);
 12029  0041FE  0E02               	movlw	2
 12030  004200  EC30  F024         	call	_Lcd_Cmd
 12031  004204                     
 12032                           ;fs_lcd.c: 109:     Lcd_Cmd(0x08);
 12033  004204  0E08               	movlw	8
 12034  004206  EC30  F024         	call	_Lcd_Cmd
 12035  00420A                     
 12036                           ;fs_lcd.c: 110:     Lcd_Cmd(0x00);
 12037  00420A  0E00               	movlw	0
 12038  00420C  EC30  F024         	call	_Lcd_Cmd
 12039  004210                     
 12040                           ;fs_lcd.c: 111:     Lcd_Cmd(0x0C);
 12041  004210  0E0C               	movlw	12
 12042  004212  EC30  F024         	call	_Lcd_Cmd
 12043  004216                     
 12044                           ;fs_lcd.c: 112:     Lcd_Cmd(0x00);
 12045  004216  0E00               	movlw	0
 12046  004218  EC30  F024         	call	_Lcd_Cmd
 12047  00421C                     
 12048                           ;fs_lcd.c: 113:     Lcd_Cmd(0x06);
 12049  00421C  0E06               	movlw	6
 12050  00421E  EC30  F024         	call	_Lcd_Cmd
 12051  004222  0012               	return		;funcret
 12052  004224                     __end_of_lcd_init:
 12053                           	callstack 0
 12054                           
 12055 ;; *************** function _Lcd_Clear *****************
 12056 ;; Defined at:
 12057 ;;		line 42 in file "fs_lcd.c"
 12058 ;; Parameters:    Size  Location     Type
 12059 ;;		None
 12060 ;; Auto vars:     Size  Location     Type
 12061 ;;		None
 12062 ;; Return value:  Size  Location     Type
 12063 ;;                  1    wreg      void 
 12064 ;; Registers used:
 12065 ;;		wreg, status,2, cstack
 12066 ;; Tracked objects:
 12067 ;;		On entry : 0/0
 12068 ;;		On exit  : 0/0
 12069 ;;		Unchanged: 0/0
 12070 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12071 ;;      Params:         0       0       0       0       0       0       0
 12072 ;;      Locals:         0       0       0       0       0       0       0
 12073 ;;      Temps:          0       0       0       0       0       0       0
 12074 ;;      Totals:         0       0       0       0       0       0       0
 12075 ;;Total ram usage:        0 bytes
 12076 ;; Hardware stack levels used:    1
 12077 ;; Hardware stack levels required when called:    3
 12078 ;; This function calls:
 12079 ;;		_Lcd_Cmd
 12080 ;; This function is called by:
 12081 ;;		_main
 12082 ;; This function uses a non-reentrant model
 12083 ;;
 12084                           
 12085                           	psect	text47
 12086  0048A6                     __ptext47:
 12087                           	callstack 0
 12088  0048A6                     _Lcd_Clear:
 12089                           	callstack 27
 12090  0048A6                     
 12091                           ;fs_lcd.c: 44:    Lcd_Cmd(0);
 12092  0048A6  0E00               	movlw	0
 12093  0048A8  EC30  F024         	call	_Lcd_Cmd
 12094                           
 12095                           ;fs_lcd.c: 45:    Lcd_Cmd(1);
 12096  0048AC  0E01               	movlw	1
 12097  0048AE  EC30  F024         	call	_Lcd_Cmd
 12098  0048B2  0012               	return		;funcret
 12099  0048B4                     __end_of_Lcd_Clear:
 12100                           	callstack 0
 12101                           
 12102 ;; *************** function _Lcd_Cmd *****************
 12103 ;; Defined at:
 12104 ;;		line 28 in file "fs_lcd.c"
 12105 ;; Parameters:    Size  Location     Type
 12106 ;;  a               1    wreg     unsigned char 
 12107 ;; Auto vars:     Size  Location     Type
 12108 ;;  a               1    2[COMRAM] unsigned char 
 12109 ;; Return value:  Size  Location     Type
 12110 ;;                  1    wreg      void 
 12111 ;; Registers used:
 12112 ;;		wreg, status,2, cstack
 12113 ;; Tracked objects:
 12114 ;;		On entry : 0/0
 12115 ;;		On exit  : 0/0
 12116 ;;		Unchanged: 0/0
 12117 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12118 ;;      Params:         0       0       0       0       0       0       0
 12119 ;;      Locals:         1       0       0       0       0       0       0
 12120 ;;      Temps:          1       0       0       0       0       0       0
 12121 ;;      Totals:         2       0       0       0       0       0       0
 12122 ;;Total ram usage:        2 bytes
 12123 ;; Hardware stack levels used:    1
 12124 ;; Hardware stack levels required when called:    2
 12125 ;; This function calls:
 12126 ;;		_Lcd_Port
 12127 ;; This function is called by:
 12128 ;;		_Lcd_Clear
 12129 ;;		_Lcd_Set_Cursor
 12130 ;;		_lcd_init
 12131 ;;		_Lcd_Shift_Right
 12132 ;;		_Lcd_Shift_Left
 12133 ;; This function uses a non-reentrant model
 12134 ;;
 12135                           
 12136                           	psect	text48
 12137  004860                     __ptext48:
 12138                           	callstack 0
 12139  004860                     _Lcd_Cmd:
 12140                           	callstack 25
 12141                           
 12142                           ;incstack = 0
 12143                           ;Lcd_Cmd@a stored from wreg
 12144  004860  6E03               	movwf	Lcd_Cmd@a^0,c
 12145  004862                     
 12146                           ;fs_lcd.c: 28: void Lcd_Cmd(char a);fs_lcd.c: 29: {;fs_lcd.c: 30:    PORTEbits.RE0 = 0;
 12147  004862  9084               	bcf	132,0,c	;volatile
 12148  004864                     
 12149                           ;fs_lcd.c: 31:    Lcd_Port(a);
 12150  004864  5003               	movf	Lcd_Cmd@a^0,w,c
 12151  004866  EC77  F022         	call	_Lcd_Port
 12152  00486A                     
 12153                           ;fs_lcd.c: 32:    PORTAbits.RA3 = 1;
 12154  00486A  8680               	bsf	128,3,c	;volatile
 12155  00486C                     
 12156                           ;fs_lcd.c: 33:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 12157  00486C  0E2A               	movlw	42
 12158  00486E  6E02               	movwf	??_Lcd_Cmd^0,c
 12159  004870  0E8E               	movlw	142
 12160  004872                     u7547:
 12161  004872  2EE8               	decfsz	wreg,f,c
 12162  004874  D7FE               	bra	u7547
 12163  004876  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 12164  004878  D7FC               	bra	u7547
 12165  00487A                     
 12166                           ;fs_lcd.c: 34:    PORTAbits.RA3 = 0;
 12167  00487A  9680               	bcf	128,3,c	;volatile
 12168  00487C  0012               	return		;funcret
 12169  00487E                     __end_of_Lcd_Cmd:
 12170                           	callstack 0
 12171                           
 12172 ;; *************** function _Lcd_Port *****************
 12173 ;; Defined at:
 12174 ;;		line 12 in file "fs_lcd.c"
 12175 ;; Parameters:    Size  Location     Type
 12176 ;;  a               1    wreg     unsigned char 
 12177 ;; Auto vars:     Size  Location     Type
 12178 ;;  a               1    0[COMRAM] unsigned char 
 12179 ;; Return value:  Size  Location     Type
 12180 ;;                  1    wreg      void 
 12181 ;; Registers used:
 12182 ;;		wreg
 12183 ;; Tracked objects:
 12184 ;;		On entry : 0/0
 12185 ;;		On exit  : 0/0
 12186 ;;		Unchanged: 0/0
 12187 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12188 ;;      Params:         0       0       0       0       0       0       0
 12189 ;;      Locals:         1       0       0       0       0       0       0
 12190 ;;      Temps:          0       0       0       0       0       0       0
 12191 ;;      Totals:         1       0       0       0       0       0       0
 12192 ;;Total ram usage:        1 bytes
 12193 ;; Hardware stack levels used:    1
 12194 ;; Hardware stack levels required when called:    1
 12195 ;; This function calls:
 12196 ;;		Nothing
 12197 ;; This function is called by:
 12198 ;;		_Lcd_Cmd
 12199 ;;		_lcd_init
 12200 ;;		_Lcd_Write_Char
 12201 ;; This function uses a non-reentrant model
 12202 ;;
 12203                           
 12204                           	psect	text49
 12205  0044EE                     __ptext49:
 12206                           	callstack 0
 12207  0044EE                     _Lcd_Port:
 12208                           	callstack 25
 12209                           
 12210                           ;incstack = 0
 12211                           ;Lcd_Port@a stored from wreg
 12212  0044EE  6E01               	movwf	Lcd_Port@a^0,c
 12213  0044F0                     
 12214                           ;fs_lcd.c: 12: void Lcd_Port(char a);fs_lcd.c: 13: {;fs_lcd.c: 14:    if(a & 1) { PORTDb
      +                          its.RD0 = 1;}
 12215  0044F0  A001               	btfss	Lcd_Port@a^0,0,c
 12216  0044F2  EF7D  F022         	goto	u6071
 12217  0044F6  EF7F  F022         	goto	u6070
 12218  0044FA                     u6071:
 12219  0044FA  EF82  F022         	goto	l102
 12220  0044FE                     u6070:
 12221  0044FE  8083               	bsf	131,0,c	;volatile
 12222  004500  EF83  F022         	goto	l5050
 12223  004504                     l102:
 12224  004504  9083               	bcf	131,0,c	;volatile
 12225  004506                     l5050:
 12226                           
 12227                           ;fs_lcd.c: 17:    if(a & 2) { PORTDbits.RD1 = 1;}
 12228  004506  A201               	btfss	Lcd_Port@a^0,1,c
 12229  004508  EF88  F022         	goto	u6081
 12230  00450C  EF8A  F022         	goto	u6080
 12231  004510                     u6081:
 12232  004510  EF8D  F022         	goto	l104
 12233  004514                     u6080:
 12234  004514  8283               	bsf	131,1,c	;volatile
 12235  004516  EF8E  F022         	goto	l5054
 12236  00451A                     l104:
 12237  00451A  9283               	bcf	131,1,c	;volatile
 12238  00451C                     l5054:
 12239                           
 12240                           ;fs_lcd.c: 20:    if(a & 4) {PORTDbits.RD2 = 1;}
 12241  00451C  A401               	btfss	Lcd_Port@a^0,2,c
 12242  00451E  EF93  F022         	goto	u6091
 12243  004522  EF95  F022         	goto	u6090
 12244  004526                     u6091:
 12245  004526  EF98  F022         	goto	l106
 12246  00452A                     u6090:
 12247  00452A  8483               	bsf	131,2,c	;volatile
 12248  00452C  EF99  F022         	goto	l5058
 12249  004530                     l106:
 12250  004530  9483               	bcf	131,2,c	;volatile
 12251  004532                     l5058:
 12252                           
 12253                           ;fs_lcd.c: 23:    if(a & 8) {PORTDbits.RD3 = 1;}
 12254  004532  A601               	btfss	Lcd_Port@a^0,3,c
 12255  004534  EF9E  F022         	goto	u6101
 12256  004538  EFA0  F022         	goto	u6100
 12257  00453C                     u6101:
 12258  00453C  EFA3  F022         	goto	l108
 12259  004540                     u6100:
 12260  004540  8683               	bsf	131,3,c	;volatile
 12261  004542  EFA4  F022         	goto	l110
 12262  004546                     l108:
 12263  004546  9683               	bcf	131,3,c	;volatile
 12264  004548                     l110:
 12265  004548  0012               	return		;funcret
 12266  00454A                     __end_of_Lcd_Port:
 12267                           	callstack 0
 12268                           
 12269 ;; *************** function _TIMER0 *****************
 12270 ;; Defined at:
 12271 ;;		line 33 in file "fs_timer.c"
 12272 ;; Parameters:    Size  Location     Type
 12273 ;;		None
 12274 ;; Auto vars:     Size  Location     Type
 12275 ;;		None
 12276 ;; Return value:  Size  Location     Type
 12277 ;;                  1    wreg      void 
 12278 ;; Registers used:
 12279 ;;		wreg, status,2, status,0
 12280 ;; Tracked objects:
 12281 ;;		On entry : 0/0
 12282 ;;		On exit  : 0/0
 12283 ;;		Unchanged: 0/0
 12284 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12285 ;;      Params:         0       0       0       0       0       0       0
 12286 ;;      Locals:         0       0       0       0       0       0       0
 12287 ;;      Temps:          0       0       0       0       0       0       0
 12288 ;;      Totals:         0       0       0       0       0       0       0
 12289 ;;Total ram usage:        0 bytes
 12290 ;; Hardware stack levels used:    1
 12291 ;; This function calls:
 12292 ;;		Nothing
 12293 ;; This function is called by:
 12294 ;;		Interrupt level 2
 12295 ;; This function uses a non-reentrant model
 12296 ;;
 12297                           
 12298                           	psect	intcode
 12299  000008                     __pintcode:
 12300                           	callstack 0
 12301  000008                     _TIMER0:
 12302                           	callstack 20
 12303                           
 12304                           ;incstack = 0
 12305  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 12306  00000A                     
 12307                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 12308  00000A  A4F2               	btfss	242,2,c	;volatile
 12309  00000C  EF0A  F000         	goto	i2u731_41
 12310  000010  EF0C  F000         	goto	i2u731_40
 12311  000014                     i2u731_41:
 12312  000014  EF31  F000         	goto	i2l481
 12313  000018                     i2u731_40:
 12314  000018  AAF2               	btfss	242,5,c	;volatile
 12315  00001A  EF11  F000         	goto	i2u732_41
 12316  00001E  EF13  F000         	goto	i2u732_40
 12317  000022                     i2u732_41:
 12318  000022  EF31  F000         	goto	i2l481
 12319  000026                     i2u732_40:
 12320  000026                     
 12321                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 12322  000026  94F2               	bcf	242,2,c	;volatile
 12323  000028                     
 12324                           ;fs_timer.c: 38:         TMR0H = 0x63;
 12325  000028  0E63               	movlw	99
 12326  00002A  6ED7               	movwf	215,c	;volatile
 12327                           
 12328                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 12329  00002C  0EC0               	movlw	192
 12330  00002E  6ED6               	movwf	214,c	;volatile
 12331  000030                     
 12332                           ;fs_timer.c: 41:         timer_value.timer_0_counter++;
 12333  000030  0100               	movlb	0	; () banked
 12334  000032  2BDF               	incf	(_timer_value+9)& (0+255),f,b
 12335  000034                     
 12336                           ; BSR set to: 0
 12337                           ;fs_timer.c: 43:         if(button_bounce_controller.menu == 1)
 12338  000034  A05E               	btfss	_button_bounce_controller^0,0,c
 12339  000036  EF1F  F000         	goto	i2u733_41
 12340  00003A  EF21  F000         	goto	i2u733_40
 12341  00003E                     i2u733_41:
 12342  00003E  EF24  F000         	goto	i2l5910
 12343  000042                     i2u733_40:
 12344  000042                     
 12345                           ; BSR set to: 0
 12346                           ;fs_timer.c: 44:         {;fs_timer.c: 45:              timer_value.menu_login_delay++;
 12347  000042  2BDE               	incf	(_timer_value+8)& (0+255),f,b
 12348                           
 12349                           ;fs_timer.c: 46:         }
 12350  000044  EF26  F000         	goto	i2l5912
 12351  000048                     i2l5910:
 12352                           
 12353                           ; BSR set to: 0
 12354                           ;fs_timer.c: 48:         {;fs_timer.c: 49:              timer_value.menu_login_delay = 0
      +                          ;
 12355  000048  0E00               	movlw	0
 12356  00004A  6FDE               	movwf	(_timer_value+8)& (0+255),b
 12357  00004C                     i2l5912:
 12358                           
 12359                           ; BSR set to: 0
 12360                           ;fs_timer.c: 52:         if (timer_value.timer_0_counter >= 100)
 12361  00004C  0E63               	movlw	99
 12362  00004E  65DF               	cpfsgt	(_timer_value+9)& (0+255),b
 12363  000050  EF2C  F000         	goto	i2u734_41
 12364  000054  EF2E  F000         	goto	i2u734_40
 12365  000058                     i2u734_41:
 12366  000058  EF31  F000         	goto	i2l481
 12367  00005C                     i2u734_40:
 12368  00005C                     
 12369                           ; BSR set to: 0
 12370                           ;fs_timer.c: 53:         {;fs_timer.c: 54:             timer_value.timer_0_counter = 0;
 12371  00005C  0E00               	movlw	0
 12372  00005E  6FDF               	movwf	(_timer_value+9)& (0+255),b
 12373  000060                     
 12374                           ; BSR set to: 0
 12375                           ;fs_timer.c: 55:             timer_counter_flag.one_second_flag = 1;
 12376  000060  81F8               	bsf	_timer_counter_flag& (0+255),0,b
 12377  000062                     i2l481:
 12378  000062  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 12379  000064  0011               	retfie		f
 12380  000066                     __end_of_TIMER0:
 12381                           	callstack 0
 12382                           
 12383                           	psect	rparam
 12384  0000                     
 12385                           	psect	temp
 12386  00005F                     btemp:
 12387                           	callstack 0
 12388  00005F                     	ds	1
 12389  0000                     int$flags	set	btemp
 12390  0000                     wtemp8	set	btemp+1
 12391  0000                     ttemp5	set	btemp+1
 12392  0000                     ttemp6	set	btemp+4
 12393  0000                     ttemp7	set	btemp+8
 12394                           
 12395                           	psect	idloc
 12396                           
 12397                           ;Config register IDLOC0 @ 0x200000
 12398                           ;	unspecified, using default values
 12399  200000                     	org	2097152
 12400  200000  FF                 	db	255
 12401                           
 12402                           ;Config register IDLOC1 @ 0x200001
 12403                           ;	unspecified, using default values
 12404  200001                     	org	2097153
 12405  200001  FF                 	db	255
 12406                           
 12407                           ;Config register IDLOC2 @ 0x200002
 12408                           ;	unspecified, using default values
 12409  200002                     	org	2097154
 12410  200002  FF                 	db	255
 12411                           
 12412                           ;Config register IDLOC3 @ 0x200003
 12413                           ;	unspecified, using default values
 12414  200003                     	org	2097155
 12415  200003  FF                 	db	255
 12416                           
 12417                           ;Config register IDLOC4 @ 0x200004
 12418                           ;	unspecified, using default values
 12419  200004                     	org	2097156
 12420  200004  FF                 	db	255
 12421                           
 12422                           ;Config register IDLOC5 @ 0x200005
 12423                           ;	unspecified, using default values
 12424  200005                     	org	2097157
 12425  200005  FF                 	db	255
 12426                           
 12427                           ;Config register IDLOC6 @ 0x200006
 12428                           ;	unspecified, using default values
 12429  200006                     	org	2097158
 12430  200006  FF                 	db	255
 12431                           
 12432                           ;Config register IDLOC7 @ 0x200007
 12433                           ;	unspecified, using default values
 12434  200007                     	org	2097159
 12435  200007  FF                 	db	255
 12436                           
 12437                           	psect	config
 12438                           
 12439                           ; Padding undefined space
 12440  300000                     	org	3145728
 12441  300000  FF                 	db	255
 12442                           
 12443                           ;Config register CONFIG1H @ 0x300001
 12444                           ;	Oscillator Selection bits
 12445                           ;	FOSC = INTIO67, Internal oscillator block
 12446                           ;	4X PLL Enable
 12447                           ;	PLLCFG = ON, Oscillator multiplied by 4
 12448                           ;	Primary clock enable bit
 12449                           ;	PRICLKEN = ON, Primary clock is always enabled
 12450                           ;	Fail-Safe Clock Monitor Enable bit
 12451                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 12452                           ;	Internal/External Oscillator Switchover bit
 12453                           ;	IESO = ON, Oscillator Switchover mode enabled
 12454  300001                     	org	3145729
 12455  300001  B8                 	db	184
 12456                           
 12457                           ;Config register CONFIG2L @ 0x300002
 12458                           ;	Power-up Timer Enable bit
 12459                           ;	PWRTEN = OFF, Power up timer disabled
 12460                           ;	Brown-out Reset Enable bits
 12461                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 12462                           ;	Brown Out Reset Voltage bits
 12463                           ;	BORV = 190, VBOR set to 1.90 V nominal
 12464  300002                     	org	3145730
 12465  300002  1F                 	db	31
 12466                           
 12467                           ;Config register CONFIG2H @ 0x300003
 12468                           ;	Watchdog Timer Enable bits
 12469                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 12470                           ;	Watchdog Timer Postscale Select bits
 12471                           ;	WDTPS = 32768, 1:32768
 12472  300003                     	org	3145731
 12473  300003  3C                 	db	60
 12474                           
 12475                           ; Padding undefined space
 12476  300004                     	org	3145732
 12477  300004  FF                 	db	255
 12478                           
 12479                           ;Config register CONFIG3H @ 0x300005
 12480                           ;	CCP2 MUX bit
 12481                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 12482                           ;	PORTB A/D Enable bit
 12483                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 12484                           ;	P3A/CCP3 Mux bit
 12485                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 12486                           ;	HFINTOSC Fast Start-up
 12487                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 12488                           ;	Timer3 Clock input mux bit
 12489                           ;	T3CMX = PORTC0, T3CKI is on RC0
 12490                           ;	ECCP2 B output mux bit
 12491                           ;	P2BMX = PORTD2, P2B is on RD2
 12492                           ;	MCLR Pin Enable bit
 12493                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 12494  300005                     	org	3145733
 12495  300005  BD                 	db	189
 12496                           
 12497                           ;Config register CONFIG4L @ 0x300006
 12498                           ;	Stack Full/Underflow Reset Enable bit
 12499                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 12500                           ;	Single-Supply ICSP Enable bit
 12501                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 12502                           ;	Extended Instruction Set Enable bit
 12503                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 12504                           ;	Background Debug
 12505                           ;	DEBUG = 0x1, unprogrammed default
 12506  300006                     	org	3145734
 12507  300006  84                 	db	132
 12508                           
 12509                           ; Padding undefined space
 12510  300007                     	org	3145735
 12511  300007  FF                 	db	255
 12512                           
 12513                           ;Config register CONFIG5L @ 0x300008
 12514                           ;	Code Protection Block 0
 12515                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 12516                           ;	Code Protection Block 1
 12517                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 12518                           ;	Code Protection Block 2
 12519                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 12520                           ;	Code Protection Block 3
 12521                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 12522  300008                     	org	3145736
 12523  300008  0F                 	db	15
 12524                           
 12525                           ;Config register CONFIG5H @ 0x300009
 12526                           ;	Boot Block Code Protection bit
 12527                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 12528                           ;	Data EEPROM Code Protection bit
 12529                           ;	CPD = OFF, Data EEPROM not code-protected
 12530  300009                     	org	3145737
 12531  300009  C0                 	db	192
 12532                           
 12533                           ;Config register CONFIG6L @ 0x30000A
 12534                           ;	Write Protection Block 0
 12535                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 12536                           ;	Write Protection Block 1
 12537                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 12538                           ;	Write Protection Block 2
 12539                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 12540                           ;	Write Protection Block 3
 12541                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 12542  30000A                     	org	3145738
 12543  30000A  0F                 	db	15
 12544                           
 12545                           ;Config register CONFIG6H @ 0x30000B
 12546                           ;	Configuration Register Write Protection bit
 12547                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 12548                           ;	Boot Block Write Protection bit
 12549                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 12550                           ;	Data EEPROM Write Protection bit
 12551                           ;	WRTD = OFF, Data EEPROM not write-protected
 12552  30000B                     	org	3145739
 12553  30000B  E0                 	db	224
 12554                           
 12555                           ;Config register CONFIG7L @ 0x30000C
 12556                           ;	Table Read Protection Block 0
 12557                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 12558                           ;	Table Read Protection Block 1
 12559                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 12560                           ;	Table Read Protection Block 2
 12561                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 12562                           ;	Table Read Protection Block 3
 12563                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 12564  30000C                     	org	3145740
 12565  30000C  0F                 	db	15
 12566                           
 12567                           ;Config register CONFIG7H @ 0x30000D
 12568                           ;	Boot Block Table Read Protection bit
 12569                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 12570  30000D                     	org	3145741
 12571  30000D  40                 	db	64
 12572                           tosu	equ	0xFFF
 12573                           tosh	equ	0xFFE
 12574                           tosl	equ	0xFFD
 12575                           stkptr	equ	0xFFC
 12576                           pclatu	equ	0xFFB
 12577                           pclath	equ	0xFFA
 12578                           pcl	equ	0xFF9
 12579                           tblptru	equ	0xFF8
 12580                           tblptrh	equ	0xFF7
 12581                           tblptrl	equ	0xFF6
 12582                           tablat	equ	0xFF5
 12583                           prodh	equ	0xFF4
 12584                           prodl	equ	0xFF3
 12585                           indf0	equ	0xFEF
 12586                           postinc0	equ	0xFEE
 12587                           postdec0	equ	0xFED
 12588                           preinc0	equ	0xFEC
 12589                           plusw0	equ	0xFEB
 12590                           fsr0h	equ	0xFEA
 12591                           fsr0l	equ	0xFE9
 12592                           wreg	equ	0xFE8
 12593                           indf1	equ	0xFE7
 12594                           postinc1	equ	0xFE6
 12595                           postdec1	equ	0xFE5
 12596                           preinc1	equ	0xFE4
 12597                           plusw1	equ	0xFE3
 12598                           fsr1h	equ	0xFE2
 12599                           fsr1l	equ	0xFE1
 12600                           bsr	equ	0xFE0
 12601                           indf2	equ	0xFDF
 12602                           postinc2	equ	0xFDE
 12603                           postdec2	equ	0xFDD
 12604                           preinc2	equ	0xFDC
 12605                           plusw2	equ	0xFDB
 12606                           fsr2h	equ	0xFDA
 12607                           fsr2l	equ	0xFD9
 12608                           status	equ	0xFD8

Data Sizes:
    Strings     208
    Constant    0
    Data        8
    BSS         299
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     93      94
    BANK0           160    106     157
    BANK1           256      0     255
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_25(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_20(CODE[4]), STR_19(CODE[4]), STR_16(CODE[4]), STR_15(CODE[4]), 
		 -> dbuf(BANK1[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_14(CODE[21]), STR_12(CODE[16]), STR_10(CODE[16]), STR_8(CODE[18]), 
		 -> STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_14(CODE[21]), STR_12(CODE[16]), STR_10(CODE[16]), STR_8(CODE[18]), 
		 -> STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 21
		 -> STR_14(CODE[21]), STR_12(CODE[16]), STR_10(CODE[16]), STR_8(CODE[18]), 
		 -> STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(COMRAM[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(COMRAM[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(COMRAM[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK1[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 21
		 -> STR_14(CODE[21]), STR_12(CODE[16]), STR_10(CODE[16]), STR_8(CODE[18]), 
		 -> STR_6(CODE[18]), STR_4(CODE[18]), STR_2(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2726_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> stateMachine@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_13(CODE[17]), STR_11(CODE[17]), STR_9(CODE[17]), STR_7(CODE[17]), 
		 -> STR_5(CODE[17]), STR_3(CODE[17]), STR_1(CODE[17]), stateMachine@textCursor2(BANK0[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_dtoa
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___flsub->___flmul
    ___flge->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_sprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0   53153
                          _Lcd_Clear
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0   52823
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                        18    18      0   52822
                                             91 COMRAM     2     2      0
                                             90 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                        _eepromWrite
                            _sprintf
 ---------------------------------------------------------------------------------
 (3) _sprintf                                             22    10     12   42074
                                             81 COMRAM    10    10      0
                                             78 BANK0     12     0     12
                           _vfprintf
 ---------------------------------------------------------------------------------
 (4) _vfprintf                                             8     2      6   40801
                                             73 COMRAM     8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (5) _vfpfcnvrt                                           50    44      6   40417
                                             63 COMRAM    10     4      6
                                             56 BANK0     22    22      0
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (6) _efgtoa                                              68    61      7   29445
                                             45 COMRAM    12     5      7
                                              0 BANK0     56    56      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (6) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (7) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) _floorf                                              20    16      4     490
                                             25 COMRAM    20    16      4
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (7) ___fltol                                             10     6      4    1369
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (7) ___flsub                                              8     0      8    3497
                                             25 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fladd                                             16     8      8    2870
                                              0 COMRAM    16     8      8
 ---------------------------------------------------------------------------------
 (7) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (7) ___flmul                                             25    17      8    5240
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___flge                                              12     4      8     790
                                             25 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (7) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (7) ___fldiv                                             25    17      8    4591
                                              0 COMRAM    25    17      8
 ---------------------------------------------------------------------------------
 (7) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (7) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (6) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (7) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (8) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (8) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (6) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (7) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (7) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (7) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (7) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (6) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (7) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (6) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (7) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (3) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_String                                     6     4      2    1332
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (4) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Set_Cursor                                       5     4      1    1444
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                  16    16      0       1
                                              0 COMRAM    16    16      0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (4) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (5) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 8
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (11) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 11
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _Lcd_Set_Cursor
         _Lcd_Cmd
           _Lcd_Port
       _Lcd_Write_String
         _Lcd_Write_Char
           _Lcd_Port
       ___fladd
       ___flge
         ___flmul (ARG)
       ___flsub
         ___fladd
         ___flmul (ARG)
       _eepromWrite
       _sprintf
         _vfprintf
           _vfpfcnvrt
             _atoi
               ___wmul
               _isdigit
               _isspace
             _dtoa
               ___aodiv
               ___aomod
               _abs
                 ___aomod (ARG)
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
             _efgtoa
               ___awdiv
               ___awmod
               ___fladd
               ___fldiv
               ___fleq
               ___flge
                 ___flmul (ARG)
               ___flmul
               ___flneg
               ___flsub
                 ___fladd
                 ___flmul (ARG)
               ___fltol
               ___fpclassifyf
               _floorf
                 ___fldiv (ARG)
               _isupper
               _pad
                 _fputc
                   _putch
                 _fputs
                   _fputc
                     _putch
                 _strlen
               _strcpy
               _tolower
                 _isupper
             _fputc
               _putch
             _isdigit
             _isupper
             _strncmp
             _tolower
               _isupper
   _menuInitialize
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0       0       8        0.0%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      FF       6       99.6%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     6A      9D       4       98.1%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5D      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     1FA       9        0.0%
DATA                 0      0     1FA      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Fri Aug 07 14:09:35 2020

                 ___fldiv@aexp 0019                   ___fldiv@bexp 0018                   ___fldiv@sign 0011  
                           l70 484E                             l72 485C                             l73 485E  
                           l76 47E4                             l78 47F2                             _KD 01FB  
                           l79 47F6                             _KP 00F9                   ___awdiv@sign 0006  
          ___wmul@multiplicand 0003            __end_of_system_init 3932                            l110 4548  
                          l102 4504                            l104 451A                            l113 487C  
                          l106 4530                            l122 436E                            l108 4546  
                          l116 48B2                            l125 4222                            l134 42A0  
                          l128 47C8                            l330 321A                            l331 323C  
                          l260 4892                            l340 336E                            l332 325E  
                          l333 3280                            l325 4840                            l342 3390  
                          l334 32A2                            l335 32C4                            l336 32E6  
                          l360 13E4                            l257 4884                            l337 3308  
                          l601 36A8                            l338 332A                            l370 15D2  
                          l354 1292                            l266 3930                            l339 334C  
                          l380 1804                            l356 133E                            l348 4430  
                          l365 14FE                            l357 1382                            l614 380C  
                 _startIsClick 00F6                            l378 176C                            l731 40E2  
                          l379 178A                            l484 48A4                            l389 1A40  
                          l718 4032                            l487 481C                            l752 3AF4  
                          l761 4724                            l746 418C                            l757 3B3A  
                          l784 3A36                            _PR2 000FBB                            _abs 4676  
                          _pad 3EAA                   ___awmod@sign 0006                            wreg 000FE8  
                 ___flmul@aexp 0012                   ___flmul@bexp 0013                   ___flmul@sign 000D  
                 ___flmul@temp 0018                   ___flmul@prod 0014                    _stopIsClick 00F5  
                 ___fltol@exp1 000A                           l1101 25F6                           l1110 2864  
                         l1111 2852                           l1015 2260                           l1032 237A  
                         l1024 2530                           l1016 224E                           l1105 295A  
                         l1041 244A                           l1017 2214                           l1042 2438  
                         ?_abs 0013                           l1108 27EC                           l1213 3EF0  
                         l1118 291C                           l1071 2B54                           l1216 3F32  
                         l1224 2D96                           l1080 2B9A                           l1057 4630  
                         l1218 3F6E                           l1226 2D9E                           l1082 2C12  
                         l1074 2B18                           l1306 0E56                           l1170 45EA  
                         l1083 2C00                           l1244 2FD8                           l1500 3D0E  
                         l1069 2CF4                           l1510 4488                           l1262 1280  
                         l4000 3554                           l1280 0ABE                           l1425 3518  
                         l4010 3596                           l4002 3558                           l1434 31EA  
                         l1515 4490                           l1444 475C                           l1452 459A  
                         l1428 3520                           l4020 35F0                           l4012 35B4  
                         l4004 3566                           l4100 29DE                           l1372 1FBA  
                         l1364 2070                           l1437 312E                           l4022 361E  
                         l4014 35BC                           l4030 3658                           l4006 3586  
                         l4102 29EE                           l4110 2A18                           l5000 340A  
                         l4032 3668                           l4024 363E                           l4016 35D0  
                         l4008 358A                           l4040 36AE                           l4200 2CE2  
                         l4120 2A5A                           l4112 2A28                           l4104 29FE  
                         l1473 3EA8                           l1481 4674                           l5002 3420  
                         l4034 3688                           l4026 3640                           l4018 35DE  
                         l4050 370E                           l4042 36BC                           l1394 46AC  
                         l4202 2CE8                           l4114 2A3E                           l4106 2A0E  
                         l1490 44EC                           l1458 46EC                           l1378 43C8  
                         l1379 43D0                           l5020 34FC                           l5012 349A  
                         l5004 3428                           l4028 3652                           l4060 3784  
                         l4052 372C                           l4044 36DC                           l1484 48BC  
                         l4204 2CEA                           l4140 2ADC                           l4132 2A92  
                         l4116 2A4E                           l4124 2A6E                           l4108 2A10  
                         l4300 27FC                           l4220 255E                           l4212 2532  
                         l5100 1C40                           l1397 46B4                           l1389 3C38  
                         l5006 3430                           l4070 37EC                           l4062 37A4  
                         l4054 3734                           l4046 36E0                           l4038 36AA  
                         l4150 2B22                           l4142 2AE4                           l4134 2AAC  
                         l4126 2A7E                           l4118 2A56                           l4302 280A  
                         l4230 259A                           l4222 256E                           l4214 253E  
                         l5110 1CCA                           l5102 1C4E                           l5200 47B4  
                         l5016 34D8                           l5008 3464                           l4064 37B6  
                         l4056 3748                           l4048 36EE                           l1496 4792  
                         l4400 4052                           l4160 2B7A                           l4152 2B40  
                         l4144 2AF4                           l4136 2ABC                           l4128 2A7E  
                         l4080 2978                           l4312 2874                           l4320 28BC  
                         l4304 280E                           l4240 25D0                           l4232 25A0  
                         l4224 257E                           l4216 254C                           l5040 3CC4  
                         l5032 3C70                           l5120 1D72                           l5112 1CDA  
                         l5050 4506                           l5202 47B6                           l5018 34EA  
                         l4058 3756                           l4066 37BC                           l4410 408A  
                         l4402 4060                           l4170 2BB8                           l4162 2B80  
                         l4154 2B42                           l4146 2B08                           l4138 2ACC  
                         l4082 2988                           l4090 29B2                           l4074 295C  
                         l4330 2930                           l4322 28D6                           l4314 2880  
                         l4306 281C                           l4242 25E0                           l4234 25AE  
                         l4226 2584                           l4218 254E                           l5042 3CEC  
                         l5034 3C7E                           l5026 3C3A                           l5130 1E28  
                         l5122 1D96                           l5114 1D0C                           l5106 1C96  
                         l5210 4370                           l5060 4540                           l5052 4514  
                         l5300 329C                           l5204 47BC                           l5220 47D0  
                         l4068 37CC                           l4412 4098                           l4420 40C2  
                         l4404 4068                           l4180 2C22                           l4172 2BBC  
                         l4164 2B8A                           l4156 2B52                           l4148 2B16  
                         l4092 29C2                           l4084 2998                           l4076 2968  
                         l4332 293E                           l4324 28EA                           l4316 288E  
                         l4308 284A                           l4260 2662                           l4252 262A  
                         l4244 25E6                           l4236 25B0                           l4228 2594  
                         l4500 39D6                           l5036 3C96                           l5028 3C64  
                         l5132 1E3E                           l5140 1EA8                           l5124 1DDE  
                         l5116 1D1C                           l5108 1CA8                           l5212 4378  
                         l5054 451C                           l5046 44F0                           l5310 32F4  
                         l5302 32B0                           l5206 47BE                           l5230 47DE  
                         l5222 47D4                           l4350 3F74                           l4422 40D2  
                         l4414 40AE                           l4406 407A                           l4190 2C84  
                         l4182 2C2E                           l4174 2BCA                           l4166 2B98  
                         l4158 2B64                           l4094 29C8                           l4086 29A8  
                         l4078 2976                           l4430 4112                           l4334 2940  
                         l4326 2904                           l4318 28B8                           l4270 26AC  
                         l4262 267A                           l4254 2636                           l4246 2606  
                         l4238 25C0                           l4342 45EC                           l4510 3A06  
                         l5038 3CB2                           l5150 1F8A                           l5142 1ED6  
                         l5134 1E4C                           l5118 1D4E                           l5070 1A8A  
                         l5062 1A42                           l5214 4386                           l5056 452A  
                         l5048 44FE                           l5320 3346                           l5312 3302  
                         l5304 32BE                           l5240 4334                           l5208 47C6  
                         l5232 47E2                           l5224 47D6                           l4520 3EBA  
                         l4360 3FA4                           l4352 3F82                           l4424 40DA  
                         l4416 40B6                           l4408 4082                           l4192 2C9A  
                         l4184 2C3C                           l4176 2BF8                           l4168 2BAA  
                         l4096 29CE                           l4088 29AA                           l4440 418A  
                         l4432 4122                           l4328 2920                           l4336 2946  
                         l4280 2702                           l4272 26BC                           l4264 2686  
                         l4256 2640                           l4248 2616                           l3800 2138  
                         l4344 45FC                           l4512 3A16                           l4600 31A2  
                         l5160 2000                           l5136 1E7C                           l5128 1E16  
                         l5080 1B20                           l5072 1AAE                           l5064 1A66  
                         l5216 43AC                           l5400 146C                           l5058 4532  
                         l5322 335A                           l5314 3316                           l5306 32D2  
                         l5242 433E                           l5234 430C                           l5250 4224  
                         l5226 47D8                           l5218 47CC                           l4530 3F10  
                         l4522 3ECE                           l4370 3FD2                           l4362 3FA8  
                         l4354 3F8A                           l4418 40BC                           l4194 2CB4  
                         l4186 2C66                           l4098 29DC                           l4434 4150  
                         l4450 3AA4                           l4338 294A                           l4290 27A6  
                         l4282 271E                           l4274 26C8                           l4266 2692  
                         l4258 2656                           l3810 2172                           l3802 213A  
                         l4514 3A26                           l4506 39EA                           l4602 31CA  
                         l5162 2014                           l5146 1F44                           l5090 1BAC  
                         l5082 1B2E                           l5074 1AE4                           l5066 1A74  
                         l5402 1476                           l5410 1496                           l5330 1282  
                         l5180 4862                           l5324 3368                           l5316 3324  
                         l5308 32E0                           l5244 4350                           l5236 431C  
                         l5252 4230                           l5228 47DA                           l4620 4594  
                         l4612 454A                           l4540 4676                           l4532 3F14  
                         l4524 3EDC                           l4380 4006                           l4372 3FE0  
                         l4364 3FB0                           l4356 3F8E                           l4348 3F70  
                         l4196 2CD0                           l4188 2C6A                           l4436 4160  
                         l4428 40E4                           l4460 3B32                           l4452 3AB4  
                         l4444 3A38                           l4292 27B4                           l4284 272A  
                         l4276 26D8                           l4268 26A0                           l3900 2390  
                         l3820 2186                           l3812 2176                           l3804 2142  
                         l4508 39F6                           l4604 31DA                           l4700 0738  
                         l5148 1F56                           l5156 1FCE                           l5092 1BB4  
                         l5076 1AF2                           l5068 1A86                           l5172 203A  
                         l5260 45AC                           l6036 19F2                           l5500 16A6  
                         l5420 14DE                           l5412 14A0                           l5404 1480  
                         l5340 12DE                           l5332 1298                           l5182 4864  
                         l5326 337C                           l5318 3338                           l5246 4362  
                         l5238 432E                           l5190 4796                           l5254 4260  
                         l4614 454E                           l6038 344E                           l4542 4690  
                         l3750 3DE0                           l4534 3F42                           l4526 3EE8  
                         l4518 3EAA                           l4630 2D5E                           l4382 400C  
                         l4374 3FE6                           l4366 3FC2                           l4358 3F9C  
                         l4198 2CD4                           l4438 4184                           l4462 3B38  
                         l4454 3AC2                           l4446 3A66                           l4294 27D2  
                         l4286 2746                           l4278 26F2                           l4470 4714  
                         l3910 23CC                           l3902 23A0                           l3830 219A  
                         l3822 218A                           l3814 217A                           l3806 2152  
                         l4550 3BC2                           l4710 077E                           l4702 074A  
                         l5174 205E                           l5158 1FF2                           l5166 2020  
                         l5094 1BC2                           l5086 1B76                           l5078 1B00  
                         l5262 45B4                           l5510 16CC                           l5502 16B2  
                         l5430 1526                           l5422 14F2                           l5414 14AC  
                         l5406 1488                           l5350 1332                           l5342 12EA  
                         l5334 12A2                           l5270 4844                           ?_pad 0011  
                         l5184 486A                           l5328 338A                           l5280 31F8  
                         l5248 4368                           l5192 47A2                           l5256 4264  
                         l4608 4726                           l4616 4562                           l3760 3E62  
                         l3752 3DF2                           l4536 3F56                           l4528 3EFC  
                         l4640 2DB8                           l4632 2D6E                           l4624 2CF6  
                         l4376 3FFC                           l4368 3FCA                           l4384 4012  
                         l4392 4034                           l4456 3AD4                           l4448 3A76  
                         l4296 27DC                           l4288 2770                           l3920 23F8  
                         l3912 23CE                           l3840 21AE                           l3832 219E  
                         l3824 218E                           l3816 217E                           l3808 2164  
                         l4480 395C                           l4552 3BCE                           l4544 3B3C  
                         l4800 0B4C                           l4712 0782                           l4704 0758  
                         l5168 202E                           l5096 1BE6                           l5088 1B88  
                         l5264 45BC                           l5520 1710                           l5512 16CE  
                         l5504 16BC                           l5440 1554                           l5432 1536  
                         l5424 1512                           l5416 14B6                           l5408 1490  
                         l5360 1392                           l5352 134E                           l5344 12FE  
                         l5336 12AE                           l5600 19DC                           l5272 4848  
                         l5186 486C                           l5290 324A                           l5282 3206  
                         l5194 47A4                           l4618 4590                           l3754 3E04  
                         l4650 2DE4                           l4642 2DC6                           l4634 2D70  
                         l4626 2D16                           l4386 4022                           l4378 4004  
                         l4394 4038                           l4458 3AE2                           l4298 27EA  
                         l4466 46EE                           l3930 2430                           l3914 23DC  
                         l3906 23B4                           l3922 23FA                           l3850 220C  
                         l3834 21A2                           l3826 2192                           l3818 2182  
                         l3842 21B2                           l3770 208E                           l4490 39AA  
                         l4482 3986                           l4474 3932                           l4562 3C30  
                         l4546 3B5C                           l4570 4432                           l4810 0B8A  
                         l4802 0B54                           l4730 0838                           l4722 07E8  
                         l4714 0786                           l4706 076A                           l5098 1C20  
                         l5266 45D8                           l5258 459C                           l5530 1760  
                         l5522 171C                           l5514 16D8                           l5506 16C8  
                         l5450 157C                           l5442 1564                           l5434 1538  
                         l5426 1514                           l5418 14D2                           l5370 13F8  
                         l5362 13A2                           l5354 135E                           l5346 1306  
                         l5338 12B8                           l5274 484A                           l5188 487A  
                         l5292 3258                           l5284 3214                           l5196 47AC  
                         l3756 3E0E                           l4660 2EF0                           l4652 2E66  
                         l4644 2DCC                           l4636 2D8A                           l4628 2D3E  
                         l4388 402A                           l4396 4046                           l4468 4704  
                         l3940 24AE                           l3916 23E4                           l3908 23BE  
                         l3924 2408                           l3860 2242                           l3852 2222  
                         l3844 21B6                           l3836 21A6                           l3828 2196  
                         l3772 209E                           l3780 20C8                           l3764 2072  
                         l4484 3988                           l4476 3948                           l4548 3B9A  
                         l4556 3BDA                           l4580 2FDA                           l4900 100C  
                         l4812 0B9C                           l4820 0BDC                           l4804 0B66  
                         l4740 08BC                           l4724 07FA                           l4708 0776  
                         l4716 078C                           l5540 17B0                           l5532 1772  
                         l5524 172C                           l5516 16E0                           l5508 16CA  
                         l5452 1588                           l5444 1566                           l5436 153A  
                         l5428 1518                           l5380 141E                           l5372 13FA  
                         l5364 13B2                           l5356 136E                           l5348 1320  
                         l5700 4406                           l5276 484C                           l5622 48A6  
                         l5630 41C6                           l5294 326C                           l5286 3228  
                         l5278 31EC                           l5198 47AE                           l3758 3E2C  
                         l4670 2F64                           l4662 2F0E                           l4654 2E6C  
                         l4646 2DD4                           l4638 2DA6                           l4398 404E  
                         l3950 24F4                           l3934 245A                           l3942 24B0  
                         l3926 240C                           l3918 23E8                           l3870 2292  
                         l3862 224C                           l3854 222E                           l3846 21E0  
                         l3838 21AA                           l3790 20F8                           l3782 20D8  
                         l3774 20AE                           l3766 207E                           l4486 3998  
                         l4558 3BEC                           l4582 2FFA                           l4566 4492  
                         l4574 4468                           l4910 1086                           l4902 1040  
                         l4830 0CC4                           l4822 0BE4                           l4814 0BAA  
                         l4806 0B78                           l4742 08CE                           l4726 0816  
                         l4718 07B2                           l4734 0860                           l5550 1814  
                         l5542 17D6                           l5534 1790                           l5526 172E  
                         l5518 16EA                           l5470 160A                           l5462 15E6  
                         l5454 1592                           l5446 1568                           l5438 1544  
                         l5390 1444                           l5382 1420                           l5374 13FE  
                         l5366 13C2                           l5358 137E                           l5702 4408  
                         l5640 41F8                           l5632 41CC                           l5624 418E  
                         l5296 327A                           l5288 3236                           l4680 2FA0  
                         l4672 2F74                           l4664 2F28                           l4656 2E72  
                         l4648 2DDE                           l3960 251E                           l3952 2502  
                         l3944 24C0                           l3936 2466                           l3928 241A  
                         l3880 22CE                           l3872 22A2                           l3864 226E  
                         l3856 2232                           l3848 21FC                           l3792 2106  
                         l3784 20DE                           l3776 20BE                           l3768 208C  
                         l4496 39C2                           l4488 399C                           l4592 30E2  
                         l4584 3050                           l4568 44A2                           l4576 447A  
                         l4920 10CA                           l4912 1098                           l4904 1048  
                         l4840 0D82                           l4832 0CF8                           l4824 0BF4  
                         l4816 0BC2                           l4808 0B86                           l4760 098A  
                         l4744 08EA                           l4736 0886                           l4752 0906  
                         l4728 082E                           l5552 1824                           l5560 1864  
                         l5544 17E2                           l5536 179A                           l5528 174E  
                         l5480 1638                           l5472 160C                           l5464 15E8  
                         l5456 15AE                           l5448 1572                           l5384 142A  
                         l5376 140C                           l5392 144A                           l5368 13C8  
                         l5704 4414                           l5800 3D1C                           l5650 4216  
                         l5642 41FE                           l5634 41DC                           l5626 41A8  
                         l5298 328E                           l3970 4650                           l4674 2F7A  
                         l4682 2FB0                           l4666 2F42                           l4658 2ED6  
                         l3962 2520                           l3954 2508                           l3946 24D0  
                         l3938 2474                           l3890 2314                           l3882 22DC  
                         l3874 22B0                           l3866 227E                           l3858 2240  
                         l3794 2108                           l3786 20F0                           l3778 20C0  
                         l4498 39CC                           l4594 311E                           l4586 3064  
                         l4930 110A                           l4922 10DC                           l4914 10A6  
                         l4906 104C                           l4850 0E1E                           l4842 0D98  
                         l4826 0C08                           l4834 0CFE                           l4818 0BD4  
                         l4762 0990                           l4770 0A58                           l4754 0920  
                         l4690 06EC                           l5570 18A2                           l5562 1876  
                         l5554 1834                           l5546 17F2                           l5538 17A6  
                         l5490 165C                           l5482 163A                           l5474 160E  
                         l5466 15EC                           l5458 15BA                           l5394 1458  
                         l5386 1434                           l5378 141C                           l5706 4422  
                         l5810 3D3A                           l5802 3D20                           l5652 421C  
                         l5644 4204                           l5636 41E2                           l5628 41AE  
                         l3972 4654                           l3980 4786                           l4676 2F8C  
                         l4668 2F52                           l3956 250A                           l3948 24F0  
                         l3892 2348                           l3884 22DE                           l3876 22BE  
                         l3796 2118                           l3788 20F2                           l4588 3072  
                         l4596 3152                           l4940 1152                           l4932 1112  
                         l4924 10E4                           l4916 10B6                           l4908 106A  
                         l4860 0ED6                           l4852 0E2E                           l4844 0DCA  
                         l4836 0D1C                           l4828 0C6C                           l4780 0A98  
                         l4772 0A68                           l4764 09EA                           l4692 06FA  
                         l5580 1904                           l5572 18AC                           l5564 187E  
                         l5556 1846                           l5548 17F4                           l5492 1666  
                         l5484 163C                           l5468 15FA                           l5476 1618  
                         l5396 1468                           l5388 143C                           l5708 4424  
                         l5660 4894                           l5820 3D7E                           l5812 3D4A  
                         l5804 3D24                           l5646 420A                           l5638 41F2  
                         l5654 487E                           l3990 4814                           l3966 4632  
                         l3974 475E                           l4678 2F98                           l3958 2510  
                         l3894 234A                           l3886 22E8                           l3878 22CA  
                         l3798 2128                           l4598 318E                           l4950 11A8  
                         l4942 116E                           l4934 111A                           l4926 10F4  
                         l4918 10BA                           l4862 0EE6                           l4870 0F20  
                         l4854 0E42                           l4846 0DDA                           l4838 0D50  
                         l4790 0ADC                           l4782 0AB2                           l4774 0A6C  
                         l4766 0A1E                           l4758 0956                           l4694 0702  
                         l4686 06D2                           l5590 198E                           l5582 1914  
                         l5574 18B8                           l5566 188C                           l5558 184C  
                         l5494 1682                           l5478 1628                           l5486 1646  
                         l5398 146A                           l5670 38E4                           l5662 48A0  
                         l5830 3DCC                           l5822 3D8E                           l5814 3D5A  
                         l5806 3D28                           l5648 4210                           l5656 4882  
                         l3968 463E                           l3976 476A                           l3896 235A  
                         l3888 22EE                           l3984 46B6                           l4960 11E4  
                         l4952 11AE                           l4944 1176                           l4936 1126  
                         l4928 10FC                           l4880 0F5A                           l4872 0F32  
                         l4864 0EF8                           l4856 0E4E                           l4848 0DEA  
                         l4792 0AEE                           l4776 0A7E                           l4784 0ACA  
                         l4768 0A26                           l4696 0726                           l4688 06DC  
                         l5592 1990                           l5584 1946                           l5576 18C2  
                         l5568 189A                           l5496 168E                           l5488 1650  
                         l5680 38FE                           l5672 38E6                           l5664 48A2  
                         l5824 3DA2                           l5816 3D6A                           l5808 3D38  
                         l5832 3DD4                           l3994 3522                           l3978 476E  
                         l3898 236A                           l4970 1236                           l4962 11EA  
                         l4954 11C0                           l4938 112C                           l4946 117C  
                         l4882 0F66                           l4874 0F40                           l4890 0F86  
                         l4866 0F0A                           l4858 0E72                           l4794 0B0A  
                         l4778 0A90                           l4698 0730                           l5594 19C4  
                         l5586 194A                           l5578 18F8                           l5690 43D6  
                         l5658 481E                           l5682 3908                           l5674 38E8  
                         l5666 380E                           l5826 3DA6                           l5818 3D7A  
                         l3988 47F8                           l3996 3526                           l4972 1242  
                         l4964 11F0                           l4956 11CC                           l4948 118E  
                         l4892 0F98                           l4884 0F76                           l4876 0F50  
                         l4868 0F18                           l4796 0B40                           l5588 197E  
                         l5692 43DA                           l5684 3920                           l5676 38EA  
                         l5668 38E2                           l5828 3DB6                           l4990 33AE  
                         l3998 3534                           l4974 124A                           l4958 11D4  
                         l4894 0FAA                           l4886 0F7A                           l4878 0F54  
                         l4798 0B48                           l5694 43EA                           l5686 3928  
                         l5678 38F4                           l4992 33CA                           l4984 3392  
                         l4976 125A                           l4968 1224                           l4896 0FAE  
                         l4888 0F80                           l5696 43EC                           l5688 43D2  
                         l4994 3400                           l4986 33A6                           l4978 1260  
                         l4898 0FB4                           l5698 43F8                           l5794 3D10  
                         l4996 3404                           l4988 33AA                           l5796 3D14  
                         l5798 3D18                           STR_1 064A                           STR_2 06AF  
                         STR_3 067D                           STR_4 0616                           STR_5 068E  
                         STR_6 0616                           STR_7 0639                           STR_8 0616  
                         STR_9 065B                           u4000 2430                           u4001 242C  
                         u4010 2446                           u4011 2442                           u4100 4674  
                         u4020 245A                           u4101 4670                           u4021 2456  
                         u4110 4786                           u4030 2474                           u4111 4782  
                         u4031 2470                           u4200 3668                           u5000 3F42  
                         u4040 24AE                           u4120 46E6                           u4201 3664  
                         u5001 3F3E                           u4041 24AA                           u4121 46E0  
                         u4210 36BC                           u5010 4690                           u4050 24C0  
                         u4130 46E8                           u4211 36B8                           u5011 468C  
                         u4051 24BC                           u4140 3534                           u4220 36EE  
                         u4300 29DC                           u4060 24D0                           u5020 3B7C  
                         u5100 44EC                           u4141 3530                           u4221 36EA  
                         u4301 29D8                           u4061 24CC                           u5101 44E8  
                         u4150 3566                           u4230 372C                           u4310 29EE  
                         u4070 24F0                           u5030 3B9A                           u5110 4462  
                         u4151 3562                           u4231 3728                           u4311 29EA  
                         u4071 24EC                           u5031 3B96                           u5111 445C  
                         u6000 34EA                           u4240 3756                           u4400 2B98  
                         u4320 29FE                           u4080 2502                           u5040 3BC2  
                         u5200 311E                           u5120 4464                           u6001 34E6  
                         u4161 3590                           u4241 3752                           u4401 2B94  
                         u4321 29FA                           u4081 24FE                           u5041 3BBE  
                         u5025 3B72                           u5201 311A                           u6010 34FC  
                         u4170 35B4                           u4250 3784                           u4410 2BB8  
                         u4330 2A3E                           u4090 251E                           u5050 3BEC  
                         u5210 3172                           u5130 447A                           u6011 34F8  
                         u4171 35B0                           u4251 3780                           u4411 2BB4  
                         u4331 2A3A                           u4091 251A                           u5051 3BE8  
                         u5131 4476                           u6100 4540                           u4180 35DE  
                         u4260 37CC                           u3700 3E62                           u5300 2D3E  
                         u4420 2BCA                           u4340 2A7E                           u4500 254C  
                         u5220 318E                           u5140 3022                           u6020 3C64  
                         u6101 453C                           u4181 35DA                           u4261 37C8  
                         u3701 3E5E                           u5301 2D3A                           u4421 2BC6  
                         u4341 2A7A                           u4501 2548                           u5221 318A  
                         u6021 3C60                           u4190 361E                           u5310 2D6E  
                         u4430 2BF8                           u4350 2AF4                           u4270 2976  
                         u4510 255E                           u3710 208C                           u5070 3C26  
                         u5230 31CA                           u5150 3050                           u6030 3C96  
                         u6110 1A66                           u4191 361A                           u5311 2D6A  
                         u4431 2BF4                           u4351 2AF0                           u4271 2972  
                         u4511 255A                           u3711 2088                           u5071 3C20  
                         u5231 31C6                           u5215 3168                           u5151 304C  
                         u6031 3C92                           u6111 1A62                           u5240 4756  
                         u5400 2F64                           u5320 2D8A                           u4440 2C0E  
                         u4360 2B16                           u4280 2988                           u4600 280A  
                         u4520 256E                           u3800 21E0                           u3720 209E  
                         u5080 3C28                           u5160 3072                           u6040 3CB2  
                         u6200 1C90                           u6120 1AAE                           u7000 1834  
                         u5241 4750                           u5401 2F60                           u5321 2D86  
                         u4441 2C0A                           u4361 2B12                           u4281 2984  
                         u4601 2806                           u4521 256A                           u3801 21DC  
                         u3721 209A                           u5065 3BFE                           u5161 306E  
                         u5145 3018                           u6041 3CAE                           u6121 1AAA  
                         u7001 1830                           u5250 4758                           u5410 2F74  
                         u5330 2DB8                           u4450 2C22                           u4370 2B40  
                         u4290 2998                           u4610 281C                           u4530 25AE  
                         u3810 21F8                           u3730 20AE                           u5090 44DA  
                         u6050 3CC4                           u6210 1CA8                           u6130 1AF2  
                         u7010 1846                           u5411 2F70                           u5331 2DB4  
                         u4451 2C1E                           u4371 2B3C                           u4291 2994  
                         u4611 2818                           u4531 25AA                           u3811 21F2  
                         u3731 20AA                           u6051 3CC0                           u6211 1CA4  
                         u6131 1AEE                           u7011 1842                           u7100 4892  
                         u5260 4562                           u5420 2F8C                           u5340 2DC6  
                         u4700 3F9C                           u4460 2C3C                           u4380 2B64  
                         u4620 284A                           u4540 25C0                           u3900 22DC  
                         u3820 21FA                           u3740 20F0                           u5180 30DE  
                         u5500 07FA                           u6060 3CEC                           u6300 1F56  
                         u6220 1CDA                           u6140 1B6E                           u7020 1876  
                         u7101 488E                           u5261 455E                           u5421 2F88  
                         u5341 2DC2                           u4701 3F98                           u4461 2C38  
                         u4381 2B60                           u4621 2846                           u4541 25BC  
                         u3901 22D8                           u3741 20EC                           u5181 30DA  
                         u5501 07F6                           u6061 3CE8                           u6301 1F52  
                         u6221 1CD6                           u6141 1B68                           u7021 1872  
                         u6070 44FE                           u5270 4590                           u3670 3DF2  
                         u5350 2EF0                           u4710 3FC2                           u4470 2C84  
                         u4390 2B7A                           u4630 2860                           u4550 25D0  
                         u3910 2314                           u3830 2222                           u3750 2106  
                         u5190 3102                           u5510 0886                           u5430 06FA  
                         u6310 1FF2                           u6230 1D1C                           u6150 1B70  
                         u7030 188C                           u7110 43EA                           u6071 44FA  
                         u5271 458C                           u3671 3DEE                           u5351 2EEC  
                         u4711 3FBE                           u4471 2C80                           u4391 2B76  
                         u4631 285C                           u4551 25CC                           u3911 2310  
                         u3831 221E                           u3751 2102                           u5175 3086  
                         u5511 0882                           u5431 06F6                           u6311 1FEE  
                         u6231 1D18                           u7031 1888                           u7111 43E6  
                         u6080 4514                           u3680 3E04                           u5360 2F0E  
                         u5280 2D26                           u4720 3FE0                           u4800 40D2  
                         u4480 2CB4                           u4640 2874                           u4560 2606  
                         u3920 235A                           u3840 2240                           u3760 2118  
                         u5176 3090                           u5600 0AB2                           u5520 08B4  
                         u5440 074A                           u6240 1D72                           u6160 1B88  
                         u6320 43C8                           u7040 189A                           u7120 4406  
                         u7200 3D7A                           u6081 4510                           u6401 31F2  
                         u3681 3E00                           u5361 2F0A                           u5281 2D20  
                         u4721 3FDC                           u4801 40CE                           u4481 2CB0  
                         u4641 2870                           u4561 2602                           u3921 2356  
                         u3841 223C                           u3761 2114                           u5177 30A0  
                         u5097 44D0                           u5601 0AAE                           u5521 08AE  
                         u5441 0746                           u6241 1D6E                           u6161 1B84  
                         u6321 43C4                           u7041 1896                           u7121 4402  
                         u7201 3D76                           u6090 452A                           u6410 3206  
                         u6330 47F2                           u3690 3E2C                           u5370 2F28  
                         u5290 2D28                           u4730 3FFC                           u4490 2CE2  
                         u4810 4112                           u4650 288E                           u4570 2616  
                         u3930 2390                           u3850 2260                           u3770 2128  
                         u5610 0AD8                           u5530 08B6                           u5450 0758  
                         u6250 1D96                           u6170 1BAC                           u7050 1914  
                         u7130 4422                           u7210 3DA2                           u6091 4526  
                         u6411 3202                           u6331 47EE                           u3691 3E28  
                         u5371 2F24                           u4731 3FF8                           u4491 2CDE  
                         u4811 410E                           u4651 288A                           u4571 2612  
                         u3931 238C                           u3851 225C                           u3771 2124  
                         u5195 30F8                           u5611 0AD4                           u5451 0754  
                         u6251 1D92                           u6171 1BA8                           u7051 1910  
                         u7131 441E                           u7211 3D9E                           u6500 329C  
                         u6420 3214                           u6340 431C                           u5380 2F42  
                         u4740 4022                           u4820 4150                           u4660 28D6  
                         u4580 2790                           u3940 23A0                           u3860 226E  
                         u3780 2164                           u4900 3948                           u5700 0BD4  
                         u5620 0AEE                           u5540 08CE                           u5460 076A  
                         u6260 1E28                           u6180 1BE6                           u7060 1946  
                         u7220 3DCC                           u6501 3298                           u6421 3210  
                         u6341 4318                           u5381 2F3E                           u4741 401E  
                         u4821 414C                           u4661 28D2                           u3941 239C  
                         u3861 226A                           u3781 2160                           u4901 3944  
                         u5701 0BD0                           u5621 0AEA                           u5541 08CA  
                         u5461 0766                           u6261 1E24                           u6181 1BE2  
                         u7061 1942                           u7221 3DC8                           u6510 32B0  
                         u6430 3228                           u6350 4350                           u5390 2F52  
                         u4750 4046                           u4830 4184                           u4670 2904  
                         u4590 27EA                           u3950 23CC                           u3870 227E  
                         u3790 2172                           u4910 397C                           u5710 0D1C  
                         u5630 0B0A                           u5550 0952                           u5470 07B2  
                         u6270 1ED6                           u6190 1C8E                           u7070 198E  
                         u6511 32AC                           u6431 3224                           u6351 434C  
                         u5391 2F4E                           u4751 4042                           u4831 4180  
                         u4671 2900                           u4591 27E6                           u3951 23C8  
                         u3871 227A                           u3791 216E                           u5711 0D18  
                         u5631 0B06                           u5551 094E                           u5471 07AE  
                         u6271 1ED2                           u6191 1C88                           u7071 198A  
                         u6600 3346                           u6520 32BE                           u6440 3236  
                         u6360 425C                           u4760 4060                           u4840 3A66  
                         u4680 293E                           u3960 23DC                           u3880 22B0  
                         u4920 39AA                           u5800 0F32                           u5720 0D82  
                         u5640 0B40                           u5560 09E6                           u5480 07E0  
                         u6280 1F3C                           u7080 19D8                           u7160 3D38  
                         u6601 3342                           u6521 32BA                           u6441 3232  
                         u4761 405C                           u4841 3A62                           u4681 293A  
                         u4585 2786                           u3961 23D8                           u3881 22AC  
                         u4921 39A6                           u5801 0F2E                           u5721 0D7E  
                         u5641 0B3C                           u5561 09E2                           u5481 07DA  
                         u6281 1F36                           u7081 19D4                           u7161 3D34  
                         u6610 335A                           u6530 32D2                           u6450 324A  
                         u6370 4290                           u4690 3F82                           u4770 407A  
                         u4850 3AA4                           u3970 23F8                           u3890 22BE  
                         u4930 39BE                           u5810 0F40                           u5730 0DCA  
                         u5650 0B66                           u5570 0A58                           u5490 07E2  
                         u6290 1F3E                           u7170 3D4A                           u6611 3356  
                         u6531 32CE                           u6451 3246                           u4691 3F7E  
                         u4771 4076                           u4851 3AA0                           u3971 23F4  
                         u3891 22BA                           u4931 39BA                           u4915 3972  
                         u5811 0F3C                           u5731 0DC6                           u5651 0B62  
                         u5571 0A54                           u7171 3D46                           u6620 3368  
                         u6540 32E0                           u6460 3258                           u6380 42A0  
                         u4780 4098                           u4860 3AC2                           u3980 2408  
                         u4940 39E6                           u5900 11A8                           u5820 0F98  
                         u5740 0DDA                           u5660 0B78                           u5580 0A7E  
                         u6700 135E                           u7180 3D5A                           u6621 3364  
                         u6541 32DC                           u6461 3254                           u6381 429C  
                         u4781 4094                           u4861 3ABE                           u3981 2404  
                         u4941 39E2                           u5901 11A4                           u5821 0F94  
                         u5741 0DD6                           u5661 0B74                           u5581 0A7A  
                         u6701 135A                           u7181 3D56                           u6630 337C  
                         u6550 32F4                           u6470 326C                           u4790 40AE  
                         u4870 3AE2                           u3990 241A                           u4950 3A06  
                         u5910 11C0                           u5830 106A                           u5750 0E42  
                         u5670 0B86                           u5590 0A90                           u6710 136E  
                         u6390 485C                           u7190 3D6A                           u6631 3378  
                         u6551 32F0                           u6471 3268                           u6367 4252  
                         u4791 40AA                           u4871 3ADE                           u3991 2416  
                         u4951 3A02                           u5911 11BC                           u5831 1066  
                         u5751 0E3E                           u5671 0B82                           u5591 0A8C  
                         u6711 136A                           u6391 4858                           u7191 3D66  
                         u6640 338A                           u6560 3302                           u6480 327A  
                         u4880 3B32                           u4960 3A16                           u5920 121E  
                         u5840 1086                           u5760 0EE6                           u5680 0B9C  
                         u6800 1458                           u6720 137E                           u6641 3386  
                         u6561 32FE                           u6481 3276                           u6377 4286  
                         u4881 3B2E                           u4961 3A12                           u5921 1218  
                         u5841 1082                           u5761 0EE2                           u5681 0B98  
                         u6801 1454                           u6721 137A                           u6570 3316  
                         u6490 328E                           u4970 3EBA                           u4890 4704  
                         u5930 1220                           u5850 1098                           u5770 0EF8  
                         u5690 0BAA                           u6810 1468                           u6730 1392  
                         u6571 3312                           u6491 328A                           u7507 47C0  
                         u4971 3EB6                           u4891 4700                           u5851 1094  
                         u5771 0EF4                           u5691 0BA6                           u6811 1464  
                         u6731 138E                           u6651 1288                           u6580 3324  
                         u4980 3EDC                           u5940 1236                           u5860 10A6  
                         u5780 0F0A                           u6900 15FA                           u6820 14F2  
                         u6740 13A2                           u6660 12FE                           u7517 41B8  
                         u6581 3320                           u4981 3ED8                           u5941 1232  
                         u5861 10A2                           u5781 0F06                           u6901 15F6  
                         u6821 14EE                           u6741 139E                           u6661 12FA  
                         u6590 3338                           u5950 33CA                           u4990 3F32  
                         u5870 10DC                           u5790 0F18                           u6910 160A  
                         u6830 1512                           u6750 13B2                           u6670 1320  
                         u7527 41D2                           u6591 3334                           u5951 33C6  
                         u4991 3F2E                           u5871 10D8                           u5791 0F14  
                         u6911 1606                           u6831 150E                           u6751 13AE  
                         u6671 131C                           u5960 3400                           u5880 110A  
                         u6920 1628                           u6840 1526                           u6760 13C2  
                         u6680 1332                           u7537 41E8                           u5961 33FC  
                         u5881 1106                           u6921 1624                           u6841 1522  
                         u6761 13BE                           u6681 132E                           u5970 341C  
                         u5890 118E                           u6930 1638                           u6850 1536  
                         u6770 13F8                           u6690 134E                           u7547 4872  
                         u5971 3418                           u5891 118A                           u6931 1634  
                         u6851 1532                           u6771 13F4                           u6691 134A  
                         u5980 34D2                           u6940 16A2                           u6860 1554  
                         u6780 140C                           u5981 34CC                           u6941 169E  
                         u6861 1550                           u6781 1408                           u5990 34D4  
                         u6950 172C                           u6870 1564                           u6790 141C  
                         u6951 1728                           u6871 1560                           u6791 1418  
                         u7487 3912                           u6960 1760                           u6880 15CE  
                         u7497 47B0                           u6961 175C                           u6881 15CA  
                         u6970 17F2                           u6890 15E6                           u6971 17EE  
                         u6891 15E2                           u6980 1814                           u6981 1810  
                         u6990 1824                           u6991 1820                           _TMR2 000FBC  
                         abs@a 0013              ?_Lcd_Write_String 0005                           _dbuf 01AB  
                         _atoi 3392                           _main 3D10                           _dtoa 2CF6  
                         _prec 00EF                           _nout 00EB                           pad@i 0018  
                         pad@p 0015                           fsr0h 000FEA                           fsr1h 000FE2  
                         indf0 000FEF                           fsr2h 000FDA                           fsr0l 000FE9  
                         indf2 000FDF                           fsr1l 000FE1                           pad@w 001A  
                         fsr2l 000FD9                           btemp 005F                  ___fpclassifyf 3B3C  
                         prodh 000FF4                           prodl 000FF3                           start 0066  
           ??_Lcd_Write_String 0007                ___fldiv@new_exp 0012                __end_of_Lcd_Cmd 487E  
                 _tolower$3028 000D                   ___param_bank 000000                          ??_abs 0015  
                        ??_pad 0017                   ?_menuControl 0001                  ___fltol@sign1 0009  
              __end_of___aodiv 36AA                          ?_atoi 0008                __end_of___fladd 2532  
                        ?_main 0001                          ?_dtoa 001C                __end_of___aomod 380E  
              __end_of___fldiv 2CF6                __end_of___awdiv 4034                __end_of___flneg 4726  
                        _EEADR 000FA9                          STR_10 069F                          STR_11 066C  
                        STR_12 069F                          STR_20 06CA                          STR_13 0628  
                        STR_14 0601                          STR_23 06CE                          STR_15 06BE  
                        STR_16 06C6                          STR_25 06CE                          STR_19 06C2  
              __end_of___awmod 40E4                __end_of___flmul 295C                __end_of___flsub 4632  
              __end_of___fltol 3A38                          _T0CON 000FD5                ___awdiv@divisor 0003  
                        i2l481 0062                ___awdiv@counter 0005                   vfpfcnvrt@fmt 0042  
                        _TMR0H 000FD7                          _TMR0L 000FD6        __size_of_Lcd_Set_Cursor 0066  
                        _flags 00F1                          _fputc 3DE0                          _fputs 4632  
              __end_of_isdigit 475E                   _adc_raw_data 0193                          atoi@n 0015  
                        pad@fp 0011                          atoi@s 0008                          _width 00ED  
                        _putch 48BC                          dtoa@d 001E                          dtoa@i 003E  
                        dtoa@n 0036                          dtoa@p 0030                          dtoa@s 0034  
                        dtoa@w 0032                __end_of_isspace 459C                __end_of_isupper 46EE  
                        tablat 000FF5                          ttemp5 0060                          ttemp6 0063  
                        ttemp7 0067                          status 000FD8                          wtemp8 0060  
              __end_of_sprintf 45EC                 ?___fpclassifyf 0001                __end_of_tolower 4492  
              __end_of_strncmp 3D10               __end_of_Lcd_Port 454A                __initialization 42A2  
                  _system_init 380E                   __end_of_atoi 3522                   __end_of_main 3DE0  
                 __end_of_dtoa 2FDA                         ??_atoi 000A                         ??_main 005E  
                       ??_dtoa 0026             __size_of_Lcd_Clear 000E                  __activetblptr 000002  
                       _ADCON0 000FC2                         _ADCON1 000FC1                         ?_fputc 0001  
                       ?_fputs 000A                         _ADRESH 000FC4                         _ADRESL 000FC3  
                       _EEDATA 000FA8                         _CCPR1L 000FBE                         _CCPR2L 000F67  
                       _EECON2 000FA7               ___awdiv@dividend 0001                         ?_putch 0001  
                       _ANSELB 000F39                         i2l5900 0026                         i2l5910 0048  
                       i2l5902 0028                         i2l5912 004C                         i2l5904 0030  
                       i2l5914 005C                         i2l5906 0034                         i2l5916 0060  
                       i2l5908 0042                         i2l5896 000A                         i2l5898 0018  
                    ??_Lcd_Cmd 0002                         _TIMER0 0008        __size_of_Lcd_Write_Char 0036  
           _timer_counter_flag 00F8           __size_of_eepromWrite 002E                   vfprintf@cfmt 0050  
             __end_of_lcd_init 4224                         ___flge 3A38                         ___fleq 40E4  
                    ??___aodiv 0011                      ??___fladd 0009                      ??___aomod 0011  
                       ___wmul 47F8                      ??___fldiv 0009                      ??___awdiv 0005  
                    ??___flneg 0005                      ??___awmod 0005                      ??___flmul 0009  
                    ??___flsub 0022                      ??___fltol 0005                         _efgtoa 06D2  
                       _floorf 2FDA               __end_of_mcu_init 4894                         clear_0 42E8  
                       clear_1 42F4                eepromWrite@data 0001               ___awdiv@quotient 0007  
              ___awmod@divisor 0003                ___awmod@counter 0005                         pad@buf 0013  
                       dtoa@fp 001C                         _strcpy 4492                         _strlen 475E  
                       fputc@c 0001                         fputs@c 000E                         fputs@i 000F  
                       fputs@s 000A                      ??_isdigit 0003                ___fpclassifyf@e 0009  
              ___fpclassifyf@u 000B                ___fpclassifyf@x 0001                   __mediumconst 0000  
                    ??_isspace 0003                         tblptrh 000FF7                      ??_isupper 0003  
                       tblptrl 000FF6                         tblptru 000FF8                         putch@c 0001  
             __end_of_vfprintf 43D2                      ??_sprintf 0052                      ??_tolower 0009  
                    ??_strncmp 0007     __end_of_buttonControlFlags 3392                Lcd_Set_Cursor@a 0005  
              Lcd_Set_Cursor@b 0004                Lcd_Set_Cursor@y 0007                Lcd_Set_Cursor@z 0006  
                   ___flge@ff1 001A                     ___flge@ff2 001E                ??___fpclassifyf 0005  
                   ___fleq@ff1 0001                     ___fleq@ff2 0005                     __accesstop 0060  
      __end_of__initialization 42FC                     ___flneg@f1 0001              __end_of_Lcd_Clear 48B4  
                ___rparam_used 000001                     ___fltol@f1 0001                 __pcstackCOMRAM 0001  
                 __pidataBANK0 48B4                   __pidataBANK1 48B8                  __end_of_fputc 3EAA  
                __end_of_fputs 4676                  __end_of_putch 48BE                 _Lcd_Set_Cursor 430A  
            eepromRead@address 0001           __size_of_menuControl 0060                      ?_Lcd_Port 0001  
                      ??_fputc 0005                        ??_fputs 000E                        ??_putch 0001  
                   __pbssBANK0 00CA                     __pbssBANK1 0100                        ?_TIMER0 0001  
                      ?___flge 001A                        ?___fleq 0001                        ?___wmul 0001  
                      ?_efgtoa 002E                        _CCP1CON 000FBD                        _CCP2CON 000F66  
                      ?_floorf 001A      __size_of_Lcd_Write_String 007E         __end_of_Lcd_Set_Cursor 4370  
                      ?_strcpy 0001                        ?_strlen 0001                     _eepromRead 4842  
           __size_of_vfpfcnvrt 0630                     ??_Lcd_Port 0001                      ?_lcd_init 0001  
      __size_of_menuInitialize 0024                  _menu_selected 00F4                 _Lcd_Write_Char 4794  
                      _Lcd_Cmd 4860                      ?_mcu_init 0001                __size_of_TIMER0 005E  
            stateMachine@F6402 0163                     _controller 0150                        __Hparam 0000  
                      __Lparam 0000                   ?_system_init 0001                __size_of___flge 0104  
              __size_of___fleq 00AA                        ___aodiv 3522                        ___fladd 2072  
                      ___aomod 36AA                        ___fldiv 295C                        ___awdiv 3F70  
                      ___flneg 46EE                        ___awmod 4034                        ___flmul 2532  
                      ___flsub 45EC                        ___fltol 3932                __size_of___wmul 0026  
                    ?_vfprintf 004A                   __psmallconst 0600                __size_of_efgtoa 0BB0  
              __size_of_floorf 0212                        __pcinit 42A2                        __ramtop 0600  
              ?_Lcd_Set_Cursor 0004                        __ptext0 3D10                        __ptext1 4894  
                      __ptext2 380E                        __ptext3 4842                        __ptext4 481E  
                      __ptext5 43D2                        __ptext6 1282                        __ptext7 459C  
                      __ptext8 4370                        __ptext9 1A42                     _menu_flags 00F3  
                   _menu_value 00E8                __size_of_strcpy 005C                __size_of_strlen 0036  
                      _counter 01A7        stateMachine@textCursor2 00BA                      _T2CONbits 000FBA  
                 __size_of_abs 0040                   __size_of_pad 00C6                        _isdigit 4726  
             ___awmod@dividend 0001                        _isspace 454A                        _isupper 46B6  
                      efgtoa@c 0034                        efgtoa@d 0078                        efgtoa@e 0090  
                      efgtoa@f 0030                        efgtoa@g 008C                        efgtoa@h 0082  
                      efgtoa@i 008A                        efgtoa@l 0086                        efgtoa@m 0074  
                      efgtoa@n 0092                        efgtoa@p 007C                        efgtoa@t 0070  
                      efgtoa@u 0094                        efgtoa@w 007F                        atoi@neg 000E  
                ?_timer_0_init 0001                        _sprintf 459C                        _tolower 4432  
                   ??_lcd_init 0004         __end_of_Lcd_Write_Char 47CA                        _strncmp 3C3A  
         end_of_initialization 42FC                        floorf@e 0028                        floorf@m 0024  
                      floorf@u 002A                        floorf@x 001A                        fputc@fp 0003  
                   ??_mcu_init 0001                  __Lmediumconst 0000                        fputs@fp 000C  
            __end_of_vfpfcnvrt 2072                     efgtoa@mode 0081                     efgtoa@sign 007A  
                      postdec1 000FE5                        postdec2 000FDD                        postinc0 000FEE  
                      postinc1 000FE6                        postinc2 000FDE                      Lcd_Port@a 0001  
                   ??_vfprintf 0050                        strcpy@d 0009                        strlen@a 0003  
                      strcpy@s 0007                        strlen@s 0001                      _PORTAbits 000F80  
                    _PORTBbits 000F81                      _PORTDbits 000F83                      _PORTEbits 000F84  
                  ?_eepromRead 0001                    ___fladd@grs 0010                      _TRISAbits 000F92  
                    _TRISBbits 000F93                      _TRISCbits 000F94                      _TRISDbits 000F95  
                    _TRISEbits 000F96                 ??_timer_0_init 0001                    ___fldiv@grs 0014  
                  ___fldiv@rem 000D                ?_Lcd_Write_Char 0001              Lcd_Write_String@a 0005  
            Lcd_Write_String@i 0009                    ___flmul@grs 000E                  ??_eepromWrite 0002  
     _button_bounce_controller 005E                 __end_of_TIMER0 0066                  ?_stateMachine 0001  
           _buttonControlFlags 31EC                      _Lcd_Clear 48A6                   _convert_data 0100  
               __end_of___flge 3B3C                 __end_of___fleq 418E                    vfpfcnvrt@ap 0044  
                  vfpfcnvrt@ct 00AA                    vfpfcnvrt@fp 0040                    vfpfcnvrt@ll 0098  
               __end_of___wmul 481E               _Lcd_Write_String 4224                 __end_of_efgtoa 1282  
          ?_buttonControlFlags 0001                 __end_of_floorf 31EC                     floorf@F524 00E0  
               __end_of_strcpy 44EE                 __end_of_strlen 4794            start_initialization 42A2  
                  __end_of_abs 46B6                    __end_of_pad 3F70                 _menuInitialize 481E  
                 _driver_limit 00CA              __size_of_Lcd_Port 005C           ??_buttonControlFlags 0001  
                     ??_TIMER0 0001          __end_of___fpclassifyf 3C3A                 ??_stateMachine 005C  
          __size_of_eepromRead 001E                    vfprintf@fmt 004C                     ?_Lcd_Clear 0001  
                     ??___flge 0022                       ??___fleq 0009            __end_of_eepromWrite 47F8  
                     ??___wmul 0005  buttonControlFlags@textCursor2 0001                       ??_efgtoa 0035  
                  __pdataBANK0 00F9                    __pdataBANK1 01FB                       ??_floorf 001E  
         __size_of_system_init 0124                Lcd_Write_Char@a 0004                Lcd_Write_Char@y 0003  
                ??_menuControl 005E                       ??_strcpy 0005                       ??_strlen 0003  
                    ___fladd@a 0005                      ___fladd@b 0001                      ___fldiv@a 0005  
                    ___fldiv@b 0001                      ___flmul@a 0005                      ___flmul@b 0001  
                  __pbssCOMRAM 005E                      ___flsub@a 001E                      ___flsub@b 001A  
       __end_of_menuInitialize 4842                  __pcstackBANK0 0060               ___aodiv@dividend 0001  
                     ?_Lcd_Cmd 0001              __size_of_lcd_init 0096                      _atoi$2933 0010  
                    _atoi$2934 0014                      _atoi$2935 0012              __size_of_mcu_init 0016  
                  _efgtoa$2871 0068                    _efgtoa$2866 0064                    _efgtoa$2875 006A  
                  _efgtoa$2867 0066                    _efgtoa$2876 006C                    _efgtoa$2877 006E  
                    _dtoa$2842 002E               ??_Lcd_Set_Cursor 0005                      __pintcode 0008  
         __end_of_timer_0_init 48A6                       ?___aodiv 0001                       ?___fladd 0001  
                     ?___aomod 0001                       ?___fldiv 0001                       ?___awdiv 0001  
             ___aodiv@quotient 0013                       ?___flneg 0001                       ?___awmod 0001  
                     ?___flmul 0001                       ?___flsub 001A                       ?___fltol 0001  
            __size_of_vfprintf 0062                      fabsf@F463 01A3                    __smallconst 0600  
                     ?_isdigit 0001                       ?_isspace 0001                ?_menuInitialize 0001  
                     ?_isupper 0001            __end_of_menuControl 4432                       ?_sprintf 00AE  
                     ?_tolower 0007                 __size_of_fputc 00CA                 __size_of_fputs 0044  
                     ?_strncmp 0001                 __size_of_putch 0002             eepromWrite@address 0002  
               ___wmul@product 0005                       _LATAbits 000F89                       _LATBbits 000F8A  
                     _LATEbits 000F8D                    _eepromWrite 47CA                       Lcd_Cmd@a 0003  
                     _PIR2bits 000FA1                       i2u731_40 0018                       i2u731_41 0014  
                     i2u732_40 0026                       i2u732_41 0022                       i2u733_40 0042  
                     i2u733_41 003E                       i2u734_40 005C                       i2u734_41 0058  
                  ??_Lcd_Clear 0004                   _pauseIsClick 00F7                      _vfpfcnvrt 1A42  
                   _ADCON0bits 000FC2                     _ADCON2bits 000FC0              ___wmul@multiplier 0001  
                 ??_eepromRead 0001               ??_Lcd_Write_Char 0002           __end_of_stateMachine 1A42  
                 _isspace$2964 0007                       _Lcd_Port 44EE                     vfpfcnvrt@c 00AD  
                   vfpfcnvrt@f 00A6                      copy_data0 42B6                      copy_data1 42D6  
     __end_of_Lcd_Write_String 42A2               __size_of_Lcd_Cmd 001E                     _EECON1bits 000FA6  
                     __Hrparam 0000                     vfprintf@ap 004E                       __Lrparam 0000  
                   vfprintf@fp 004A             __end_of_eepromRead 4860        buttonControlFlags@F6398 0173  
             __size_of___aodiv 0188               __size_of___fladd 04C0               __size_of___aomod 0164  
             __size_of___fldiv 039A               __size_of___awdiv 00C4               __size_of___flneg 0038  
             __size_of___awmod 00B0               __size_of___flmul 042A               __size_of___flsub 0046  
             __size_of___fltol 0106                     ?_vfpfcnvrt 0040                    _menuControl 43D2  
              ___aodiv@divisor 0009                ___aodiv@counter 0011                     _ANSELAbits 000F38  
                   _ANSELBbits 000F39                     _ANSELCbits 000F3A                     _ANSELDbits 000F3B  
                   _ANSELEbits 000F3C             ___fpclassifyf@F463 00E4                     sprintf@fmt 00B0  
             __size_of_isdigit 0038               __size_of_isspace 0052                       __ptext10 3C3A  
                     __ptext11 06D2                       __ptext20 46EE                       __ptext12 4432  
                     __ptext21 2532                       __ptext13 46B6                       __ptext30 4632  
                     __ptext22 3A38                       __ptext14 4492                       __ptext31 3DE0  
                     __ptext23 40E4                       __ptext15 2FDA                       __ptext40 47CA  
                     __ptext32 48BC                       __ptext24 295C                       __ptext16 3B3C  
                     __ptext41 4224                       __ptext33 4676                       __ptext25 4034  
                     __ptext17 3932                       __ptext42 4794                       __ptext34 36AA  
                     __ptext26 3F70                       __ptext18 45EC                       __ptext43 430A  
                     __ptext35 3522                       __ptext27 2CF6                       __ptext19 2072  
                     __ptext44 31EC                       __ptext36 3392                       __ptext28 3EAA  
                     __ptext45 487E                       __ptext37 454A                       __ptext29 475E  
                     __ptext46 418E                       __ptext38 4726                       __ptext47 48A6  
                     __ptext39 47F8                       __ptext48 4860                       __ptext49 44EE  
             __size_of_isupper 0038                       _lcd_init 418E               __size_of_sprintf 0050  
             __size_of_tolower 0060                     strcpy@dest 0001               __size_of_strncmp 00D6  
                     _mcu_init 487E                  __size_of_atoi 0190                  __size_of_main 00D0  
                __size_of_dtoa 02E4          __size_of_timer_0_init 0012                       efgtoa@fp 002E  
                     efgtoa@ne 0076                       efgtoa@pp 0072                       efgtoa@ou 0060  
                     int$flags 005F                       _vfprintf 4370               ___aomod@dividend 0001  
               _vfpfcnvrt$2891 00A0                 _vfpfcnvrt$2892 00A2                 _vfpfcnvrt$2897 00A4  
                  _OSCTUNEbits 000F9B                     _INTCONbits 000FF2                       isdigit@c 0001  
                 _timer_0_init 4894             Lcd_Write_Char@temp 0002                       intlevel2 0000  
                    sprintf@ap 0054    __size_of_buttonControlFlags 01A6                       isspace@c 0001  
                    strcpy@src 0003                       isupper@c 0001                      strncmp@_l 0001  
                    strncmp@_r 0003                     _OSCCONbits 000FD3                  ??_system_init 0002  
                  efgtoa@nmode 007E                   _procces_data 0130                ___aomod@divisor 0009  
                  ??_vfpfcnvrt 0046                ___aomod@counter 0011             Lcd_Set_Cursor@temp 0008  
             ??_menuInitialize 0001          __size_of_stateMachine 07C0                       sprintf@f 0056  
                     tolower@c 0007                       sprintf@s 00AE         __size_of___fpclassifyf 00FE  
                     strncmp@l 0008                       strncmp@n 0005                       strncmp@r 000A  
                  _timer_value 00D6                  ___fladd@signs 000D                   ___aodiv@sign 0012  
                  _textCursor2 0183                   ___fladd@aexp 000E                   ___fladd@bexp 000F  
                 ?_eepromWrite 0001                   ___aomod@sign 0012                   _stateMachine 1282  
