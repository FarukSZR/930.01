

Microchip MPLAB XC8 Assembler V2.20 build 20200408173844 
                                                                                               Sun Aug 16 01:59:19 2020

Microchip MPLAB XC8 C Compiler v2.20 (Free license) build 20200408173844 Og1 
     1                           	processor	18F45K22
     2                           	fnconf	rparam,??,?,0
     3                           	pagewidth 120
     4                           	opt	flic
     5                           	psect	eeprom_data,global,class=EEDATA,delta=1,noexec
     6                           	psect	idataBANK1,global,class=CODE,delta=1,noexec
     7                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     8                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     9                           	psect	bssBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    10                           	psect	bssBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    11                           	psect	dataBANK1,global,class=BANK1,space=1,delta=1,lowdata,noexec
    12                           	psect	bssBANK2,global,class=BANK2,space=1,delta=1,lowdata,noexec
    13                           	psect	cstackBANK0,global,class=BANK0,space=1,delta=1,lowdata,noexec
    14                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,lowdata,noexec
    15                           	psect	text0,global,reloc=2,class=CODE,delta=1
    16                           	psect	text1,global,reloc=2,class=CODE,delta=1
    17                           	psect	text2,global,reloc=2,class=CODE,delta=1
    18                           	psect	text3,global,reloc=2,class=CODE,delta=1
    19                           	psect	text4,global,reloc=2,class=CODE,delta=1
    20                           	psect	text5,global,reloc=2,class=CODE,delta=1
    21                           	psect	text6,global,reloc=2,class=CODE,delta=1
    22                           	psect	text7,global,reloc=2,class=CODE,delta=1
    23                           	psect	text8,global,reloc=2,class=CODE,delta=1
    24                           	psect	text9,global,reloc=2,class=CODE,delta=1
    25                           	psect	text10,global,reloc=2,class=CODE,delta=1
    26                           	psect	text11,global,reloc=2,class=CODE,delta=1
    27                           	psect	text12,global,reloc=2,class=CODE,delta=1
    28                           	psect	text13,global,reloc=2,class=CODE,delta=1
    29                           	psect	text14,global,reloc=2,class=CODE,delta=1
    30                           	psect	text15,global,reloc=2,class=CODE,delta=1
    31                           	psect	text16,global,reloc=2,class=CODE,delta=1
    32                           	psect	text17,global,reloc=2,class=CODE,delta=1
    33                           	psect	text18,global,reloc=2,class=CODE,delta=1
    34                           	psect	text19,global,reloc=2,class=CODE,delta=1
    35                           	psect	text20,global,reloc=2,class=CODE,delta=1
    36                           	psect	text21,global,reloc=2,class=CODE,delta=1,group=2
    37                           	psect	text22,global,reloc=2,class=CODE,delta=1,group=2
    38                           	psect	text23,global,reloc=2,class=CODE,delta=1
    39                           	psect	text24,global,reloc=2,class=CODE,delta=1
    40                           	psect	text25,global,reloc=2,class=CODE,delta=1
    41                           	psect	text26,global,reloc=2,class=CODE,delta=1
    42                           	psect	text27,global,reloc=2,class=CODE,delta=1
    43                           	psect	text28,global,reloc=2,class=CODE,delta=1,group=3
    44                           	psect	text29,global,reloc=2,class=CODE,delta=1,group=2
    45                           	psect	text30,global,reloc=2,class=CODE,delta=1,group=3
    46                           	psect	text31,global,reloc=2,class=CODE,delta=1,group=1
    47                           	psect	text32,global,reloc=2,class=CODE,delta=1,group=1
    48                           	psect	text33,global,reloc=2,class=CODE,delta=1,group=3
    49                           	psect	text34,global,reloc=2,class=CODE,delta=1,group=1
    50                           	psect	text35,global,reloc=2,class=CODE,delta=1,group=3
    51                           	psect	text36,global,reloc=2,class=CODE,delta=1,group=3
    52                           	psect	text37,global,reloc=2,class=CODE,delta=1,group=3
    53                           	psect	text38,global,reloc=2,class=CODE,delta=1,group=3
    54                           	psect	text39,global,reloc=2,class=CODE,delta=1,group=3
    55                           	psect	text40,global,reloc=2,class=CODE,delta=1,group=2
    56                           	psect	text41,global,reloc=2,class=CODE,delta=1,group=2
    57                           	psect	text42,global,reloc=2,class=CODE,delta=1,group=2
    58                           	psect	text43,global,reloc=2,class=CODE,delta=1,group=2
    59                           	psect	text44,global,reloc=2,class=CODE,delta=1,group=2
    60                           	psect	text45,global,reloc=2,class=CODE,delta=1,group=2
    61                           	psect	text46,global,reloc=2,class=CODE,delta=1,group=2
    62                           	psect	text47,global,reloc=2,class=CODE,delta=1,group=2
    63                           	psect	text48,global,reloc=2,class=CODE,delta=1,group=2
    64                           	psect	text49,global,reloc=2,class=CODE,delta=1,group=2
    65                           	psect	text50,global,reloc=2,class=CODE,delta=1,group=1
    66                           	psect	text51,global,reloc=2,class=CODE,delta=1,group=1
    67                           	psect	text52,global,reloc=2,class=CODE,delta=1,group=3
    68                           	psect	text53,global,reloc=2,class=CODE,delta=1,group=3
    69                           	psect	text54,global,reloc=2,class=CODE,delta=1,group=3
    70                           	psect	text55,global,reloc=2,class=CODE,delta=1,group=3
    71                           	psect	text56,global,reloc=2,class=CODE,delta=1,group=3
    72                           	psect	text57,global,reloc=2,class=CODE,delta=1,group=2
    73                           	psect	text58,global,reloc=2,class=CODE,delta=1,group=2
    74                           	psect	text59,global,reloc=2,class=CODE,delta=1,group=3
    75                           	psect	text60,global,reloc=2,class=CODE,delta=1,group=3
    76                           	psect	text61,global,reloc=2,class=CODE,delta=1,group=3
    77                           	psect	text62,global,reloc=2,class=CODE,delta=1,group=2
    78                           	psect	text63,global,reloc=2,class=CODE,delta=1
    79                           	psect	text64,global,reloc=2,class=CODE,delta=1
    80                           	psect	text65,global,reloc=2,class=CODE,delta=1
    81                           	psect	text66,global,reloc=2,class=CODE,delta=1
    82                           	psect	text67,global,reloc=2,class=CODE,delta=1
    83                           	psect	text68,global,reloc=2,class=CODE,delta=1
    84                           	psect	text69,global,reloc=2,class=CODE,delta=1
    85                           	psect	text70,global,reloc=2,class=CODE,delta=1
    86                           	psect	text71,global,reloc=2,class=CODE,delta=1
    87                           	psect	text72,global,reloc=2,class=CODE,delta=1
    88                           	psect	text73,global,reloc=2,class=CODE,delta=1
    89                           	psect	intcode,global,reloc=2,class=CODE,delta=1
    90                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    91                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    92                           	psect	temp,global,ovrld,common,class=COMRAM,space=1,delta=1
    93                           	psect	idloc,global,abs,ovrld,class=IDLOC,space=5,delta=1,noexec
    94                           	psect	config,global,abs,ovrld,class=CONFIG,space=4,delta=1,noexec
    95  0000                     
    96                           ; Version 2.20
    97                           ; Generated 05/05/2020 GMT
    98                           ; 
    99                           ; Copyright Â© 2020, Microchip Technology Inc. and its subsidiaries ("Microchip")
   100                           ; All rights reserved.
   101                           ; 
   102                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
   103                           ; 
   104                           ; Redistribution and use in source and binary forms, with or without modification, are
   105                           ; permitted provided that the following conditions are met:
   106                           ; 
   107                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
   108                           ;        conditions and the following disclaimer.
   109                           ; 
   110                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
   111                           ;        of conditions and the following disclaimer in the documentation and/or other
   112                           ;        materials provided with the distribution.
   113                           ; 
   114                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
   115                           ;        software without specific prior written permission.
   116                           ; 
   117                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
   118                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
   119                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
   120                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
   121                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
   122                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
   123                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
   124                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
   125                           ; 
   126                           ; 
   127                           ; Code-generator required, PIC18F45K22 Definitions
   128                           ; 
   129                           ; SFR Addresses
   130  0000                     
   131                           	psect	eeprom_data
   132  F00000  1E 0A 04 00 00 00 00 00 	db	30,10,4,0,0,0,0,0	;# 
   133  0000                     
   134                           	psect	idataBANK1
   135  00540C                     __pidataBANK1:
   136                           	callstack 0
   137                           
   138                           ;initializer for _KD@fs_speed_controller$F2357
   139  00540C  0000               	dw	0
   140  00540E  3F80               	dw	16256
   141                           
   142                           ;initializer for _KP@fs_speed_controller$F2356
   143  005410  CCCD               	dw	52429
   144  005412  3E4C               	dw	15948
   145                           
   146                           ;initializer for _KD@fs_speed_controller$F2204
   147  005414  0000               	dw	0
   148  005416  3F80               	dw	16256
   149                           
   150                           ;initializer for _KP@fs_speed_controller$F2203
   151  005418  CCCD               	dw	52429
   152  00541A  3E4C               	dw	15948
   153                           
   154                           ;initializer for _KD@fs_speed_controller$F2073
   155  00541C  0000               	dw	0
   156  00541E  3F80               	dw	16256
   157                           
   158                           ;initializer for _KP@fs_speed_controller$F2072
   159  005420  CCCD               	dw	52429
   160  005422  3E4C               	dw	15948
   161                           
   162                           ;initializer for _KD@fs_speed_controller$F1839
   163  005424  0000               	dw	0
   164  005426  3F80               	dw	16256
   165                           
   166                           ;initializer for _KP@fs_speed_controller$F1838
   167  005428  CCCD               	dw	52429
   168  00542A  3E4C               	dw	15948
   169                           
   170                           ;initializer for _KD@fs_speed_controller$F1339
   171  00542C  0000               	dw	0
   172  00542E  3F80               	dw	16256
   173                           
   174                           ;initializer for _KP@fs_speed_controller$F1338
   175  005430  CCCD               	dw	52429
   176  005432  3E4C               	dw	15948
   177                           
   178                           ;initializer for _KD@fs_speed_controller$F1164
   179  005434  0000               	dw	0
   180  005436  3F80               	dw	16256
   181                           
   182                           ;initializer for _KP@fs_speed_controller$F1163
   183  005438  CCCD               	dw	52429
   184  00543A  3E4C               	dw	15948
   185                           
   186                           ;initializer for _KD@fs_speed_controller$F950
   187  00543C  0000               	dw	0
   188  00543E  3F80               	dw	16256
   189                           
   190                           ;initializer for _KP@fs_speed_controller$F949
   191  005440  CCCD               	dw	52429
   192  005442  3E4C               	dw	15948
   193                           
   194                           ;initializer for _KD
   195  005444  0000               	dw	0
   196  005446  3F80               	dw	16256
   197                           
   198                           ;initializer for _KP
   199  005448  CCCD               	dw	52429
   200  00544A  3E4C               	dw	15948
   201  0000                     _ANSELCbits	set	3898
   202  0000                     _ANSELBbits	set	3897
   203  0000                     _ANSELDbits	set	3899
   204  0000                     _ANSELEbits	set	3900
   205  0000                     _ANSELAbits	set	3896
   206  0000                     _T0CON	set	4053
   207  0000                     _TMR0L	set	4054
   208  0000                     _TMR0H	set	4055
   209  0000                     _INTCONbits	set	4082
   210  0000                     _CCPR2L	set	3943
   211  0000                     _CCPR1L	set	4030
   212  0000                     _PR2	set	4027
   213  0000                     _TMR2	set	4028
   214  0000                     _T2CONbits	set	4026
   215  0000                     _CCP2CON	set	3942
   216  0000                     _CCP1CON	set	4029
   217  0000                     _LATCbits	set	3979
   218  0000                     _LATDbits	set	3980
   219  0000                     _TRISCbits	set	3988
   220  0000                     _OSCTUNEbits	set	3995
   221  0000                     _OSCCONbits	set	4051
   222  0000                     _TRISBbits	set	3987
   223  0000                     _TRISDbits	set	3989
   224  0000                     _PORTDbits	set	3971
   225  0000                     _PORTBbits	set	3969
   226  0000                     _PIR2bits	set	4001
   227  0000                     _EECON2	set	4007
   228  0000                     _EEDATA	set	4008
   229  0000                     _EECON1bits	set	4006
   230  0000                     _EEADR	set	4009
   231  0000                     _ADCON2bits	set	4032
   232  0000                     _ADCON1	set	4033
   233  0000                     _ADCON0	set	4034
   234  0000                     _TRISEbits	set	3990
   235  0000                     _TRISAbits	set	3986
   236  0000                     _ADRESL	set	4035
   237  0000                     _ADRESH	set	4036
   238  0000                     _ADCON0bits	set	4034
   239                           
   240                           	psect	mediumconst
   241  007EF6                     __pmediumconst:
   242                           	callstack 0
   243  007EF6  00                 	db	0
   244  007EF7                     STR_14:
   245  007EF7  25                 	db	37
   246  007EF8  64                 	db	100	;'d'
   247  007EF9  20                 	db	32
   248  007EFA  20                 	db	32
   249  007EFB  20                 	db	32
   250  007EFC  20                 	db	32
   251  007EFD  20                 	db	32
   252  007EFE  20                 	db	32
   253  007EFF  20                 	db	32
   254  007F00  20                 	db	32
   255  007F01  20                 	db	32
   256  007F02  20                 	db	32
   257  007F03  20                 	db	32
   258  007F04  20                 	db	32
   259  007F05  20                 	db	32
   260  007F06  20                 	db	32
   261  007F07  20                 	db	32
   262  007F08  00                 	db	0
   263  007F09                     STR_9:
   264  007F09  50                 	db	80	;'P'
   265  007F0A  49                 	db	73	;'I'
   266  007F0B  44                 	db	68	;'D'
   267  007F0C  20                 	db	32
   268  007F0D  50                 	db	80	;'P'
   269  007F0E  41                 	db	65	;'A'
   270  007F0F  52                 	db	82	;'R'
   271  007F10  41                 	db	65	;'A'
   272  007F11  4D                 	db	77	;'M'
   273  007F12  20                 	db	32
   274  007F13  20                 	db	32
   275  007F14  20                 	db	32
   276  007F15  20                 	db	32
   277  007F16  20                 	db	32
   278  007F17  20                 	db	32
   279  007F18  20                 	db	32
   280  007F19  00                 	db	0
   281  007F1A                     STR_13:
   282  007F1A  48                 	db	72	;'H'
   283  007F1B  49                 	db	73	;'I'
   284  007F1C  5A                 	db	90	;'Z'
   285  007F1D  20                 	db	32
   286  007F1E  4C                 	db	76	;'L'
   287  007F1F  69                 	db	105	;'i'
   288  007F20  4D                 	db	77	;'M'
   289  007F21  69                 	db	105	;'i'
   290  007F22  54                 	db	84	;'T'
   291  007F23  69                 	db	105	;'i'
   292  007F24  20                 	db	32
   293  007F25  20                 	db	32
   294  007F26  20                 	db	32
   295  007F27  20                 	db	32
   296  007F28  20                 	db	32
   297  007F29  20                 	db	32
   298  007F2A  00                 	db	0
   299  007F2B                     STR_3:
   300  007F2B  4B                 	db	75	;'K'
   301  007F2C  41                 	db	65	;'A'
   302  007F2D  4C                 	db	76	;'L'
   303  007F2E  41                 	db	65	;'A'
   304  007F2F  4E                 	db	78	;'N'
   305  007F30  20                 	db	32
   306  007F31  5A                 	db	90	;'Z'
   307  007F32  41                 	db	65	;'A'
   308  007F33  4D                 	db	77	;'M'
   309  007F34  41                 	db	65	;'A'
   310  007F35  4E                 	db	78	;'N'
   311  007F36  20                 	db	32
   312  007F37  20                 	db	32
   313  007F38  20                 	db	32
   314  007F39  20                 	db	32
   315  007F3A  20                 	db	32
   316  007F3B  00                 	db	0
   317  007F3C                     STR_5:
   318  007F3C  5A                 	db	90	;'Z'
   319  007F3D  41                 	db	65	;'A'
   320  007F3E  4D                 	db	77	;'M'
   321  007F3F  41                 	db	65	;'A'
   322  007F40  4E                 	db	78	;'N'
   323  007F41  20                 	db	32
   324  007F42  44                 	db	68	;'D'
   325  007F43  4F                 	db	79	;'O'
   326  007F44  4C                 	db	76	;'L'
   327  007F45  44                 	db	68	;'D'
   328  007F46  55                 	db	85	;'U'
   329  007F47  20                 	db	32
   330  007F48  20                 	db	32
   331  007F49  20                 	db	32
   332  007F4A  20                 	db	32
   333  007F4B  20                 	db	32
   334  007F4C  00                 	db	0
   335  007F4D                     STR_7:
   336  007F4D  48                 	db	72	;'H'
   337  007F4E  41                 	db	65	;'A'
   338  007F4F  52                 	db	82	;'R'
   339  007F50  45                 	db	69	;'E'
   340  007F51  4B                 	db	75	;'K'
   341  007F52  45                 	db	69	;'E'
   342  007F53  54                 	db	84	;'T'
   343  007F54  20                 	db	32
   344  007F55  44                 	db	68	;'D'
   345  007F56  55                 	db	85	;'U'
   346  007F57  52                 	db	82	;'R'
   347  007F58  44                 	db	68	;'D'
   348  007F59  55                 	db	85	;'U'
   349  007F5A  20                 	db	32
   350  007F5B  20                 	db	32
   351  007F5C  20                 	db	32
   352  007F5D  00                 	db	0
   353  007F5E                     STR_17:
   354  007F5E  48                 	db	72	;'H'
   355  007F5F  41                 	db	65	;'A'
   356  007F60  52                 	db	82	;'R'
   357  007F61  45                 	db	69	;'E'
   358  007F62  4B                 	db	75	;'K'
   359  007F63  54                 	db	84	;'T'
   360  007F64  20                 	db	32
   361  007F65  5A                 	db	90	;'Z'
   362  007F66  41                 	db	65	;'A'
   363  007F67  4D                 	db	77	;'M'
   364  007F68  41                 	db	65	;'A'
   365  007F69  4E                 	db	78	;'N'
   366  007F6A  49                 	db	73	;'I'
   367  007F6B  20                 	db	32
   368  007F6C  64                 	db	100	;'d'
   369  007F6D  6B                 	db	107	;'k'
   370  007F6E  00                 	db	0
   371  007F6F                     STR_15:
   372  007F6F  44                 	db	68	;'D'
   373  007F70  55                 	db	85	;'U'
   374  007F71  52                 	db	82	;'R'
   375  007F72  4D                 	db	77	;'M'
   376  007F73  41                 	db	65	;'A'
   377  007F74  20                 	db	32
   378  007F75  5A                 	db	90	;'Z'
   379  007F76  41                 	db	65	;'A'
   380  007F77  4D                 	db	77	;'M'
   381  007F78  41                 	db	65	;'A'
   382  007F79  4E                 	db	78	;'N'
   383  007F7A  49                 	db	73	;'I'
   384  007F7B  20                 	db	32
   385  007F7C  20                 	db	32
   386  007F7D  6D                 	db	109	;'m'
   387  007F7E  73                 	db	115	;'s'
   388  007F7F  00                 	db	0
   389  007F80                     STR_2:
   390  007F80  20                 	db	32
   391  007F81  69                 	db	105	;'i'
   392  007F82  59                 	db	89	;'Y'
   393  007F83  69                 	db	105	;'i'
   394  007F84  20                 	db	32
   395  007F85  45                 	db	69	;'E'
   396  007F86  67                 	db	103	;'g'
   397  007F87  6C                 	db	108	;'l'
   398  007F88  65                 	db	101	;'e'
   399  007F89  6E                 	db	110	;'n'
   400  007F8A  63                 	db	99	;'c'
   401  007F8B  65                 	db	101	;'e'
   402  007F8C  6C                 	db	108	;'l'
   403  007F8D  65                 	db	101	;'e'
   404  007F8E  72                 	db	114	;'r'
   405  007F8F  20                 	db	32
   406  007F90  00                 	db	0
   407  007F91                     STR_16:
   408  007F91  25                 	db	37
   409  007F92  64                 	db	100	;'d'
   410  007F93  20                 	db	32
   411  007F94  20                 	db	32
   412  007F95  20                 	db	32
   413  007F96  20                 	db	32
   414  007F97  20                 	db	32
   415  007F98  20                 	db	32
   416  007F99  20                 	db	32
   417  007F9A  20                 	db	32
   418  007F9B  20                 	db	32
   419  007F9C  20                 	db	32
   420  007F9D  20                 	db	32
   421  007F9E  20                 	db	32
   422  007F9F  20                 	db	32
   423  007FA0  00                 	db	0
   424  007FA1                     STR_6:
   425  007FA1  20                 	db	32
   426  007FA2  20                 	db	32
   427  007FA3  20                 	db	32
   428  007FA4  20                 	db	32
   429  007FA5  20                 	db	32
   430  007FA6  20                 	db	32
   431  007FA7  25                 	db	37
   432  007FA8  64                 	db	100	;'d'
   433  007FA9  3A                 	db	58	;':'
   434  007FAA  25                 	db	37
   435  007FAB  64                 	db	100	;'d'
   436  007FAC  20                 	db	32
   437  007FAD  20                 	db	32
   438  007FAE  20                 	db	32
   439  007FAF  20                 	db	32
   440  007FB0  00                 	db	0
   441  007FB1                     STR_1:
   442  007FB1  20                 	db	32
   443  007FB2  20                 	db	32
   444  007FB3  20                 	db	32
   445  007FB4  45                 	db	69	;'E'
   446  007FB5  72                 	db	114	;'r'
   447  007FB6  67                 	db	103	;'g'
   448  007FB7  69                 	db	105	;'i'
   449  007FB8  6E                 	db	110	;'n'
   450  007FB9  20                 	db	32
   451  007FBA  4F                 	db	79	;'O'
   452  007FBB  79                 	db	121	;'y'
   453  007FBC  75                 	db	117	;'u'
   454  007FBD  6E                 	db	110	;'n'
   455  007FBE  20                 	db	32
   456  007FBF  20                 	db	32
   457  007FC0  00                 	db	0
   458  007FC1                     STR_4:
   459  007FC1  20                 	db	32
   460  007FC2  20                 	db	32
   461  007FC3  20                 	db	32
   462  007FC4  20                 	db	32
   463  007FC5  20                 	db	32
   464  007FC6  20                 	db	32
   465  007FC7  25                 	db	37
   466  007FC8  64                 	db	100	;'d'
   467  007FC9  3A                 	db	58	;':'
   468  007FCA  25                 	db	37
   469  007FCB  64                 	db	100	;'d'
   470  007FCC  20                 	db	32
   471  007FCD  20                 	db	32
   472  007FCE  20                 	db	32
   473  007FCF  00                 	db	0
   474  007FD0                     STR_10:
   475  007FD0  4B                 	db	75	;'K'
   476  007FD1  70                 	db	112	;'p'
   477  007FD2  3A                 	db	58	;':'
   478  007FD3  25                 	db	37
   479  007FD4  35                 	db	53	;'5'
   480  007FD5  2E                 	db	46
   481  007FD6  31                 	db	49	;'1'
   482  007FD7  66                 	db	102	;'f'
   483  007FD8  20                 	db	32
   484  007FD9  20                 	db	32
   485  007FDA  20                 	db	32
   486  007FDB  20                 	db	32
   487  007FDC  20                 	db	32
   488  007FDD  00                 	db	0
   489  007FDE                     STR_12:
   490  007FDE  4B                 	db	75	;'K'
   491  007FDF  64                 	db	100	;'d'
   492  007FE0  3A                 	db	58	;':'
   493  007FE1  25                 	db	37
   494  007FE2  35                 	db	53	;'5'
   495  007FE3  2E                 	db	46
   496  007FE4  31                 	db	49	;'1'
   497  007FE5  66                 	db	102	;'f'
   498  007FE6  20                 	db	32
   499  007FE7  20                 	db	32
   500  007FE8  20                 	db	32
   501  007FE9  20                 	db	32
   502  007FEA  00                 	db	0
   503  007FEB                     STR_19:
   504  007FEB  49                 	db	73	;'I'
   505  007FEC  4E                 	db	78	;'N'
   506  007FED  46                 	db	70	;'F'
   507  007FEE  00                 	db	0
   508  007FEF                     STR_23:
   509  007FEF  4E                 	db	78	;'N'
   510  007FF0  41                 	db	65	;'A'
   511  007FF1  4E                 	db	78	;'N'
   512  007FF2  00                 	db	0
   513  007FF3                     STR_20:
   514  007FF3  69                 	db	105	;'i'
   515  007FF4  6E                 	db	110	;'n'
   516  007FF5  66                 	db	102	;'f'
   517  007FF6  00                 	db	0
   518  007FF7                     STR_24:
   519  007FF7  6E                 	db	110	;'n'
   520  007FF8  61                 	db	97	;'a'
   521  007FF9  6E                 	db	110	;'n'
   522  007FFA  00                 	db	0
   523  007FFB                     STR_27:
   524  007FFB  6C                 	db	108	;'l'
   525  007FFC  66                 	db	102	;'f'
   526  007FFD  00                 	db	0
   527  007FFE  00                 	db	0	; dummy byte at the end
   528  0000                     
   529                           ; #config settings
   530                           
   531                           	psect	cinit
   532  005200                     __pcinit:
   533                           	callstack 0
   534  005200                     start_initialization:
   535                           	callstack 0
   536  005200                     __initialization:
   537                           	callstack 0
   538                           
   539                           ; Initialize objects allocated to BANK1 (64 bytes)
   540                           ; load TBLPTR registers with __pidataBANK1
   541  005200  0E0C               	movlw	low __pidataBANK1
   542  005202  6EF6               	movwf	tblptrl,c
   543  005204  0E54               	movlw	high __pidataBANK1
   544  005206  6EF7               	movwf	tblptrh,c
   545  005208  0E00               	movlw	low (__pidataBANK1 shr (0+16))
   546  00520A  6EF8               	movwf	tblptru,c
   547  00520C  EE01  F0B3         	lfsr	0,__pdataBANK1
   548  005210  EE10 F040          	lfsr	1,64
   549  005214                     copy_data0:
   550  005214  0009               	tblrd		*+
   551  005216  CFF5 FFEE          	movff	tablat,postinc0
   552  00521A  50E5               	movf	postdec1,w,c
   553  00521C  50E1               	movf	fsr1l,w,c
   554  00521E  E1FA               	bnz	copy_data0
   555                           
   556                           ; Clear objects allocated to BANK2 (176 bytes)
   557  005220  EE02  F000         	lfsr	0,__pbssBANK2
   558  005224  0EB0               	movlw	176
   559  005226                     clear_0:
   560  005226  6AEE               	clrf	postinc0,c
   561  005228  06E8               	decf	wreg,f,c
   562  00522A  E1FD               	bnz	clear_0
   563                           
   564                           ; Clear objects allocated to BANK1 (179 bytes)
   565  00522C  EE01  F000         	lfsr	0,__pbssBANK1
   566  005230  0EB3               	movlw	179
   567  005232                     clear_1:
   568  005232  6AEE               	clrf	postinc0,c
   569  005234  06E8               	decf	wreg,f,c
   570  005236  E1FD               	bnz	clear_1
   571                           
   572                           ; Clear objects allocated to BANK0 (13 bytes)
   573  005238  EE00  F0F3         	lfsr	0,__pbssBANK0
   574  00523C  0E0D               	movlw	13
   575  00523E                     clear_2:
   576  00523E  6AEE               	clrf	postinc0,c
   577  005240  06E8               	decf	wreg,f,c
   578  005242  E1FD               	bnz	clear_2
   579  005244                     end_of_initialization:
   580                           	callstack 0
   581  005244                     __end_of__initialization:
   582                           	callstack 0
   583  005244  905F               	bcf	int$flags,0,c	;clear compiler interrupt flag (level 1)
   584  005246  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
   585  005248  0E00               	movlw	low (__Lmediumconst shr (0+16))
   586  00524A  6EF8               	movwf	tblptru,c
   587  00524C  0100               	movlb	0
   588  00524E  EFD9  F022         	goto	_main	;jump to C main() function
   589                           
   590                           	psect	bssBANK0
   591  0000F3                     __pbssBANK0:
   592                           	callstack 0
   593  0000F3                     _menu_value:
   594                           	callstack 0
   595  0000F3                     	ds	3
   596  0000F6                     _prec:
   597                           	callstack 0
   598  0000F6                     	ds	2
   599  0000F8                     _flags:
   600                           	callstack 0
   601  0000F8                     	ds	2
   602  0000FA                     _timer_counter_flag:
   603                           	callstack 0
   604  0000FA                     	ds	1
   605  0000FB                     _menu_selected:
   606                           	callstack 0
   607  0000FB                     	ds	1
   608  0000FC                     _secretMenuCounter:
   609                           	callstack 0
   610  0000FC                     	ds	1
   611  0000FD                     _stopIsClick:
   612                           	callstack 0
   613  0000FD                     	ds	1
   614  0000FE                     _startIsClick:
   615                           	callstack 0
   616  0000FE                     	ds	1
   617  0000FF                     _pauseIsClick:
   618                           	callstack 0
   619  0000FF                     	ds	1
   620                           
   621                           	psect	bssBANK1
   622  000100                     __pbssBANK1:
   623                           	callstack 0
   624  000100                     _convert_data:
   625                           	callstack 0
   626  000100                     	ds	48
   627  000130                     _procces_data:
   628                           	callstack 0
   629  000130                     	ds	32
   630  000150                     _controller:
   631                           	callstack 0
   632  000150                     	ds	19
   633  000163                     	ds	16
   634  000173                     _adc_raw_data:
   635                           	callstack 0
   636  000173                     	ds	16
   637  000183                     _driver_limit:
   638                           	callstack 0
   639  000183                     	ds	12
   640  00018F                     _timer_value:
   641                           	callstack 0
   642  00018F                     	ds	8
   643  000197                     _menu_flags:
   644                           	callstack 0
   645  000197                     	ds	6
   646  00019D                     _button_bounce_controller:
   647                           	callstack 0
   648  00019D                     	ds	6
   649  0001A3                     floorf@F524:
   650                           	callstack 0
   651  0001A3                     	ds	4
   652  0001A7                     ___fpclassifyf@F463:
   653                           	callstack 0
   654  0001A7                     	ds	4
   655  0001AB                     fabsf@F463:
   656                           	callstack 0
   657  0001AB                     	ds	4
   658  0001AF                     _nout:
   659                           	callstack 0
   660  0001AF                     	ds	2
   661  0001B1                     _width:
   662                           	callstack 0
   663  0001B1                     	ds	2
   664                           
   665                           	psect	dataBANK1
   666  0001B3                     __pdataBANK1:
   667                           	callstack 0
   668  0001B3                     	ds	4
   669  0001B7                     	ds	4
   670  0001BB                     	ds	4
   671  0001BF                     	ds	4
   672  0001C3                     	ds	4
   673  0001C7                     	ds	4
   674  0001CB                     _KD@fs_speed_controller$F1839:
   675                           	callstack 0
   676  0001CB                     	ds	4
   677  0001CF                     _KP@fs_speed_controller$F1838:
   678                           	callstack 0
   679  0001CF                     	ds	4
   680  0001D3                     	ds	4
   681  0001D7                     	ds	4
   682  0001DB                     	ds	4
   683  0001DF                     	ds	4
   684  0001E3                     	ds	4
   685  0001E7                     	ds	4
   686  0001EB                     	ds	4
   687  0001EF                     	ds	4
   688                           
   689                           	psect	bssBANK2
   690  000200                     __pbssBANK2:
   691                           	callstack 0
   692  000200                     	ds	16
   693  000210                     	ds	16
   694  000220                     	ds	16
   695  000230                     	ds	16
   696  000240                     	ds	16
   697  000250                     	ds	16
   698  000260                     _dbuf:
   699                           	callstack 0
   700  000260                     	ds	80
   701                           
   702                           	psect	cstackBANK0
   703  000060                     __pcstackBANK0:
   704                           	callstack 0
   705  000060                     floorf@m:
   706                           	callstack 0
   707                           
   708                           ; 4 bytes @ 0x0
   709  000060                     	ds	4
   710  000064                     floorf@e:
   711                           	callstack 0
   712                           
   713                           ; 2 bytes @ 0x4
   714  000064                     	ds	2
   715  000066                     floorf@u:
   716                           	callstack 0
   717                           
   718                           ; 4 bytes @ 0x6
   719  000066                     	ds	4
   720  00006A                     ??_efgtoa:
   721                           
   722                           ; 1 bytes @ 0xA
   723  00006A                     	ds	5
   724  00006F                     efgtoa@ou:
   725                           	callstack 0
   726                           
   727                           ; 4 bytes @ 0xF
   728  00006F                     	ds	4
   729  000073                     _efgtoa$2979:
   730                           	callstack 0
   731                           
   732                           ; 2 bytes @ 0x13
   733  000073                     	ds	2
   734  000075                     _efgtoa$2980:
   735                           	callstack 0
   736                           
   737                           ; 2 bytes @ 0x15
   738  000075                     	ds	2
   739  000077                     _efgtoa$2984:
   740                           	callstack 0
   741                           
   742                           ; 2 bytes @ 0x17
   743  000077                     	ds	2
   744  000079                     _efgtoa$2988:
   745                           	callstack 0
   746                           
   747                           ; 2 bytes @ 0x19
   748  000079                     	ds	2
   749  00007B                     _efgtoa$2989:
   750                           	callstack 0
   751                           
   752                           ; 2 bytes @ 0x1B
   753  00007B                     	ds	2
   754  00007D                     _efgtoa$2990:
   755                           	callstack 0
   756                           
   757                           ; 2 bytes @ 0x1D
   758  00007D                     	ds	2
   759  00007F                     efgtoa@t:
   760                           	callstack 0
   761                           
   762                           ; 2 bytes @ 0x1F
   763  00007F                     	ds	2
   764  000081                     efgtoa@pp:
   765                           	callstack 0
   766                           
   767                           ; 2 bytes @ 0x21
   768  000081                     	ds	2
   769  000083                     efgtoa@m:
   770                           	callstack 0
   771                           
   772                           ; 2 bytes @ 0x23
   773  000083                     	ds	2
   774  000085                     efgtoa@ne:
   775                           	callstack 0
   776                           
   777                           ; 2 bytes @ 0x25
   778  000085                     	ds	2
   779  000087                     efgtoa@d:
   780                           	callstack 0
   781                           
   782                           ; 2 bytes @ 0x27
   783  000087                     	ds	2
   784  000089                     efgtoa@sign:
   785                           	callstack 0
   786                           
   787                           ; 2 bytes @ 0x29
   788  000089                     	ds	2
   789  00008B                     efgtoa@p:
   790                           	callstack 0
   791                           
   792                           ; 2 bytes @ 0x2B
   793  00008B                     	ds	2
   794  00008D                     efgtoa@nmode:
   795                           	callstack 0
   796                           
   797                           ; 1 bytes @ 0x2D
   798  00008D                     	ds	1
   799  00008E                     efgtoa@w:
   800                           	callstack 0
   801                           
   802                           ; 2 bytes @ 0x2E
   803  00008E                     	ds	2
   804  000090                     efgtoa@mode:
   805                           	callstack 0
   806                           
   807                           ; 1 bytes @ 0x30
   808  000090                     	ds	1
   809  000091                     efgtoa@h:
   810                           	callstack 0
   811                           
   812                           ; 4 bytes @ 0x31
   813  000091                     	ds	4
   814  000095                     efgtoa@l:
   815                           	callstack 0
   816                           
   817                           ; 4 bytes @ 0x35
   818  000095                     	ds	4
   819  000099                     efgtoa@i:
   820                           	callstack 0
   821                           
   822                           ; 2 bytes @ 0x39
   823  000099                     	ds	2
   824  00009B                     efgtoa@g:
   825                           	callstack 0
   826                           
   827                           ; 4 bytes @ 0x3B
   828  00009B                     	ds	4
   829  00009F                     efgtoa@e:
   830                           	callstack 0
   831                           
   832                           ; 2 bytes @ 0x3F
   833  00009F                     	ds	2
   834  0000A1                     efgtoa@n:
   835                           	callstack 0
   836                           
   837                           ; 2 bytes @ 0x41
   838  0000A1                     	ds	2
   839  0000A3                     efgtoa@u:
   840                           	callstack 0
   841                           
   842                           ; 4 bytes @ 0x43
   843  0000A3                     	ds	4
   844  0000A7                     ?_vfpfcnvrt:
   845                           	callstack 0
   846  0000A7                     vfpfcnvrt@fp:
   847                           	callstack 0
   848                           
   849                           ; 2 bytes @ 0x47
   850  0000A7                     	ds	2
   851  0000A9                     vfpfcnvrt@fmt:
   852                           	callstack 0
   853                           
   854                           ; 2 bytes @ 0x49
   855  0000A9                     	ds	2
   856  0000AB                     vfpfcnvrt@ap:
   857                           	callstack 0
   858                           
   859                           ; 2 bytes @ 0x4B
   860  0000AB                     	ds	2
   861  0000AD                     ??_vfpfcnvrt:
   862                           
   863                           ; 1 bytes @ 0x4D
   864  0000AD                     	ds	4
   865  0000B1                     vfpfcnvrt@ll:
   866                           	callstack 0
   867                           
   868                           ; 8 bytes @ 0x51
   869  0000B1                     	ds	8
   870  0000B9                     _vfpfcnvrt$3004:
   871                           	callstack 0
   872                           
   873                           ; 2 bytes @ 0x59
   874  0000B9                     	ds	2
   875  0000BB                     _vfpfcnvrt$3005:
   876                           	callstack 0
   877                           
   878                           ; 2 bytes @ 0x5B
   879  0000BB                     	ds	2
   880  0000BD                     _vfpfcnvrt$3010:
   881                           	callstack 0
   882                           
   883                           ; 2 bytes @ 0x5D
   884  0000BD                     	ds	2
   885  0000BF                     vfpfcnvrt@f:
   886                           	callstack 0
   887                           
   888                           ; 4 bytes @ 0x5F
   889  0000BF                     	ds	4
   890  0000C3                     vfpfcnvrt@ct:
   891                           	callstack 0
   892                           
   893                           ; 3 bytes @ 0x63
   894  0000C3                     	ds	3
   895  0000C6                     vfpfcnvrt@c:
   896                           	callstack 0
   897                           
   898                           ; 1 bytes @ 0x66
   899  0000C6                     	ds	1
   900  0000C7                     ?_vfprintf:
   901                           	callstack 0
   902  0000C7                     vfprintf@fp:
   903                           	callstack 0
   904                           
   905                           ; 2 bytes @ 0x67
   906  0000C7                     	ds	2
   907  0000C9                     vfprintf@fmt:
   908                           	callstack 0
   909                           
   910                           ; 2 bytes @ 0x69
   911  0000C9                     	ds	2
   912  0000CB                     vfprintf@ap:
   913                           	callstack 0
   914                           
   915                           ; 2 bytes @ 0x6B
   916  0000CB                     	ds	2
   917  0000CD                     vfprintf@cfmt:
   918                           	callstack 0
   919                           
   920                           ; 2 bytes @ 0x6D
   921  0000CD                     	ds	2
   922  0000CF                     ?_sprintf:
   923                           	callstack 0
   924  0000CF                     sprintf@s:
   925                           	callstack 0
   926                           
   927                           ; 2 bytes @ 0x6F
   928  0000CF                     	ds	2
   929  0000D1                     sprintf@fmt:
   930                           	callstack 0
   931                           
   932                           ; 2 bytes @ 0x71
   933  0000D1                     	ds	8
   934  0000D9                     sprintf@ap:
   935                           	callstack 0
   936                           
   937                           ; 2 bytes @ 0x79
   938  0000D9                     	ds	2
   939  0000DB                     sprintf@f:
   940                           	callstack 0
   941                           
   942                           ; 6 bytes @ 0x7B
   943  0000DB                     	ds	6
   944  0000E1                     mainMenu@textCursor2:
   945                           	callstack 0
   946  0000E1                     stopMenu@textCursor2:
   947                           	callstack 0
   948  0000E1                     pauseMenu@textCursor2:
   949                           	callstack 0
   950  0000E1                     secretMenu@textCursor2:
   951                           	callstack 0
   952  0000E1                     speedLimitSettingMenu@textCursor2:
   953                           	callstack 0
   954  0000E1                     stopTimeSettingMenu@textCursor2:
   955                           	callstack 0
   956  0000E1                     driverTimeSettingMenu@textCursor2:
   957                           	callstack 0
   958                           
   959                           ; 16 bytes @ 0x81
   960  0000E1                     	ds	16
   961  0000F1                     ??_stateMachine:
   962                           
   963                           ; 1 bytes @ 0x91
   964  0000F1                     	ds	2
   965                           
   966                           	psect	cstackCOMRAM
   967  000001                     __pcstackCOMRAM:
   968                           	callstack 0
   969  000001                     ?_strlen:
   970                           	callstack 0
   971  000001                     ?___fpclassifyf:
   972                           	callstack 0
   973  000001                     ?_isupper:
   974                           	callstack 0
   975  000001                     ?_isdigit:
   976                           	callstack 0
   977  000001                     ?_strncmp:
   978                           	callstack 0
   979  000001                     ?_isspace:
   980                           	callstack 0
   981  000001                     ?_readAdcValue:
   982                           	callstack 0
   983  000001                     ?___wmul:
   984                           	callstack 0
   985  000001                     ?___awdiv:
   986                           	callstack 0
   987  000001                     ?___awmod:
   988                           	callstack 0
   989  000001                     ?___lmul:
   990                           	callstack 0
   991  000001                     ?___lldiv:
   992                           	callstack 0
   993  000001                     ?___flneg:
   994                           	callstack 0
   995  000001                     ?___aodiv:
   996                           	callstack 0
   997  000001                     ?___aomod:
   998                           	callstack 0
   999  000001                     eepromRead@address:
  1000                           	callstack 0
  1001  000001                     eepromWrite@data:
  1002                           	callstack 0
  1003  000001                     Lcd_Port@a:
  1004                           	callstack 0
  1005  000001                     ___wmul@multiplier:
  1006                           	callstack 0
  1007  000001                     ___awdiv@dividend:
  1008                           	callstack 0
  1009  000001                     ___awmod@dividend:
  1010                           	callstack 0
  1011  000001                     isdigit@c:
  1012                           	callstack 0
  1013  000001                     isspace@c:
  1014                           	callstack 0
  1015  000001                     isupper@c:
  1016                           	callstack 0
  1017  000001                     fputc@c:
  1018                           	callstack 0
  1019  000001                     strcpy@dest:
  1020                           	callstack 0
  1021  000001                     strlen@s:
  1022                           	callstack 0
  1023  000001                     strncmp@_l:
  1024                           	callstack 0
  1025  000001                     ___lmul@multiplier:
  1026                           	callstack 0
  1027  000001                     ___lldiv@dividend:
  1028                           	callstack 0
  1029  000001                     ___fleq@ff1:
  1030                           	callstack 0
  1031  000001                     ___flneg@f1:
  1032                           	callstack 0
  1033  000001                     ___fpclassifyf@x:
  1034                           	callstack 0
  1035  000001                     ___aodiv@dividend:
  1036                           	callstack 0
  1037  000001                     ___aomod@dividend:
  1038                           	callstack 0
  1039                           
  1040                           ; 8 bytes @ 0x0
  1041  000001                     	ds	1
  1042  000002                     ??_system_init:
  1043  000002                     ??_Lcd_Cmd:
  1044  000002                     eepromWrite@address:
  1045                           	callstack 0
  1046  000002                     Lcd_Write_Char@temp:
  1047                           	callstack 0
  1048                           
  1049                           ; 1 bytes @ 0x1
  1050  000002                     	ds	1
  1051  000003                     ??_isupper:
  1052  000003                     ??_isdigit:
  1053  000003                     ??_isspace:
  1054  000003                     ??_readAdcValue:
  1055  000003                     Lcd_Cmd@a:
  1056                           	callstack 0
  1057  000003                     Lcd_Write_Char@y:
  1058                           	callstack 0
  1059  000003                     ___wmul@multiplicand:
  1060                           	callstack 0
  1061  000003                     ___awdiv@divisor:
  1062                           	callstack 0
  1063  000003                     ___awmod@divisor:
  1064                           	callstack 0
  1065  000003                     fputc@fp:
  1066                           	callstack 0
  1067  000003                     strcpy@src:
  1068                           	callstack 0
  1069  000003                     strlen@a:
  1070                           	callstack 0
  1071  000003                     strncmp@_r:
  1072                           	callstack 0
  1073                           
  1074                           ; 2 bytes @ 0x2
  1075  000003                     	ds	1
  1076  000004                     ??_lcd_init:
  1077  000004                     Lcd_Set_Cursor@b:
  1078                           	callstack 0
  1079  000004                     Lcd_Write_Char@a:
  1080                           	callstack 0
  1081                           
  1082                           ; 1 bytes @ 0x3
  1083  000004                     	ds	1
  1084  000005                     ??_fputc:
  1085  000005                     ??___fpclassifyf:
  1086  000005                     ??_strcpy:
  1087  000005                     readAdcValue@adcChannel:
  1088                           	callstack 0
  1089  000005                     Lcd_Set_Cursor@a:
  1090                           	callstack 0
  1091  000005                     ___awdiv@counter:
  1092                           	callstack 0
  1093  000005                     ___awmod@counter:
  1094                           	callstack 0
  1095  000005                     Lcd_Write_String@a:
  1096                           	callstack 0
  1097  000005                     ___wmul@product:
  1098                           	callstack 0
  1099  000005                     strncmp@n:
  1100                           	callstack 0
  1101  000005                     ___lmul@multiplicand:
  1102                           	callstack 0
  1103  000005                     ___lldiv@divisor:
  1104                           	callstack 0
  1105  000005                     ___fleq@ff2:
  1106                           	callstack 0
  1107                           
  1108                           ; 4 bytes @ 0x4
  1109  000005                     	ds	1
  1110  000006                     Lcd_Set_Cursor@z:
  1111                           	callstack 0
  1112  000006                     ___awdiv@sign:
  1113                           	callstack 0
  1114  000006                     ___awmod@sign:
  1115                           	callstack 0
  1116  000006                     readAdcValue@adcValue:
  1117                           	callstack 0
  1118                           
  1119                           ; 2 bytes @ 0x5
  1120  000006                     	ds	1
  1121  000007                     ??_strncmp:
  1122  000007                     ??_Lcd_Write_String:
  1123  000007                     ?_tolower:
  1124                           	callstack 0
  1125  000007                     Lcd_Set_Cursor@y:
  1126                           	callstack 0
  1127  000007                     _isspace$3077:
  1128                           	callstack 0
  1129  000007                     ___awdiv@quotient:
  1130                           	callstack 0
  1131  000007                     strcpy@s:
  1132                           	callstack 0
  1133  000007                     tolower@c:
  1134                           	callstack 0
  1135                           
  1136                           ; 2 bytes @ 0x6
  1137  000007                     	ds	1
  1138  000008                     ?_atoi:
  1139                           	callstack 0
  1140  000008                     Lcd_Set_Cursor@temp:
  1141                           	callstack 0
  1142  000008                     atoi@s:
  1143                           	callstack 0
  1144  000008                     strncmp@l:
  1145                           	callstack 0
  1146                           
  1147                           ; 2 bytes @ 0x7
  1148  000008                     	ds	1
  1149  000009                     ??_tolower:
  1150  000009                     ??___fleq:
  1151  000009                     Lcd_Write_String@i:
  1152                           	callstack 0
  1153  000009                     ___fpclassifyf@e:
  1154                           	callstack 0
  1155  000009                     strcpy@d:
  1156                           	callstack 0
  1157  000009                     ___lmul@product:
  1158                           	callstack 0
  1159  000009                     ___lldiv@quotient:
  1160                           	callstack 0
  1161  000009                     ___aodiv@divisor:
  1162                           	callstack 0
  1163  000009                     ___aomod@divisor:
  1164                           	callstack 0
  1165                           
  1166                           ; 8 bytes @ 0x8
  1167  000009                     	ds	1
  1168  00000A                     ??_atoi:
  1169  00000A                     fputs@s:
  1170                           	callstack 0
  1171  00000A                     strncmp@r:
  1172                           	callstack 0
  1173                           
  1174                           ; 2 bytes @ 0x9
  1175  00000A                     	ds	1
  1176  00000B                     ??_openLCD_Script:
  1177  00000B                     ___fpclassifyf@u:
  1178                           	callstack 0
  1179                           
  1180                           ; 4 bytes @ 0xA
  1181  00000B                     	ds	1
  1182  00000C                     fputs@fp:
  1183                           	callstack 0
  1184                           
  1185                           ; 2 bytes @ 0xB
  1186  00000C                     	ds	1
  1187  00000D                     ___lldiv@counter:
  1188                           	callstack 0
  1189  00000D                     _tolower$3141:
  1190                           	callstack 0
  1191                           
  1192                           ; 2 bytes @ 0xC
  1193  00000D                     	ds	1
  1194  00000E                     ?___xxtofl:
  1195                           	callstack 0
  1196  00000E                     fputs@c:
  1197                           	callstack 0
  1198  00000E                     atoi@neg:
  1199                           	callstack 0
  1200  00000E                     ___xxtofl@val:
  1201                           	callstack 0
  1202                           
  1203                           ; 4 bytes @ 0xD
  1204  00000E                     	ds	1
  1205  00000F                     fputs@i:
  1206                           	callstack 0
  1207                           
  1208                           ; 2 bytes @ 0xE
  1209  00000F                     	ds	1
  1210  000010                     _atoi$3046:
  1211                           	callstack 0
  1212                           
  1213                           ; 2 bytes @ 0xF
  1214  000010                     	ds	1
  1215  000011                     ?_pad:
  1216                           	callstack 0
  1217  000011                     ___aodiv@counter:
  1218                           	callstack 0
  1219  000011                     ___aomod@counter:
  1220                           	callstack 0
  1221  000011                     pad@fp:
  1222                           	callstack 0
  1223                           
  1224                           ; 2 bytes @ 0x10
  1225  000011                     	ds	1
  1226  000012                     ??___xxtofl:
  1227  000012                     ___aodiv@sign:
  1228                           	callstack 0
  1229  000012                     ___aomod@sign:
  1230                           	callstack 0
  1231  000012                     _atoi$3048:
  1232                           	callstack 0
  1233                           
  1234                           ; 2 bytes @ 0x11
  1235  000012                     	ds	1
  1236  000013                     ?_abs:
  1237                           	callstack 0
  1238  000013                     pad@buf:
  1239                           	callstack 0
  1240  000013                     abs@a:
  1241                           	callstack 0
  1242  000013                     ___aodiv@quotient:
  1243                           	callstack 0
  1244                           
  1245                           ; 8 bytes @ 0x12
  1246  000013                     	ds	1
  1247  000014                     _atoi$3047:
  1248                           	callstack 0
  1249                           
  1250                           ; 1 bytes @ 0x13
  1251  000014                     	ds	1
  1252  000015                     ??_abs:
  1253  000015                     pad@p:
  1254                           	callstack 0
  1255  000015                     atoi@n:
  1256                           	callstack 0
  1257                           
  1258                           ; 2 bytes @ 0x14
  1259  000015                     	ds	1
  1260  000016                     ___xxtofl@sign:
  1261                           	callstack 0
  1262                           
  1263                           ; 1 bytes @ 0x15
  1264  000016                     	ds	1
  1265  000017                     ??_pad:
  1266  000017                     ___xxtofl@exp:
  1267                           	callstack 0
  1268                           
  1269                           ; 1 bytes @ 0x16
  1270  000017                     	ds	1
  1271  000018                     pad@i:
  1272                           	callstack 0
  1273  000018                     ___xxtofl@arg:
  1274                           	callstack 0
  1275                           
  1276                           ; 4 bytes @ 0x17
  1277  000018                     	ds	2
  1278  00001A                     pad@w:
  1279                           	callstack 0
  1280                           
  1281                           ; 2 bytes @ 0x19
  1282  00001A                     	ds	2
  1283  00001C                     ??_calculatedAverageValue:
  1284  00001C                     ?_dtoa:
  1285                           	callstack 0
  1286  00001C                     ?_fabsf:
  1287                           	callstack 0
  1288  00001C                     ?___flmul:
  1289                           	callstack 0
  1290  00001C                     dtoa@fp:
  1291                           	callstack 0
  1292  00001C                     ___flmul@b:
  1293                           	callstack 0
  1294  00001C                     fabsf@x:
  1295                           	callstack 0
  1296                           
  1297                           ; 4 bytes @ 0x1B
  1298  00001C                     	ds	2
  1299  00001E                     dtoa@d:
  1300                           	callstack 0
  1301                           
  1302                           ; 8 bytes @ 0x1D
  1303  00001E                     	ds	2
  1304  000020                     ___flmul@a:
  1305                           	callstack 0
  1306  000020                     fabsf@u:
  1307                           	callstack 0
  1308                           
  1309                           ; 4 bytes @ 0x1F
  1310  000020                     	ds	4
  1311  000024                     ??___flmul:
  1312                           
  1313                           ; 1 bytes @ 0x23
  1314  000024                     	ds	2
  1315  000026                     ??_dtoa:
  1316                           
  1317                           ; 1 bytes @ 0x25
  1318  000026                     	ds	2
  1319  000028                     ___flmul@sign:
  1320                           	callstack 0
  1321                           
  1322                           ; 1 bytes @ 0x27
  1323  000028                     	ds	1
  1324  000029                     ___flmul@grs:
  1325                           	callstack 0
  1326                           
  1327                           ; 4 bytes @ 0x28
  1328  000029                     	ds	4
  1329  00002D                     ___flmul@aexp:
  1330                           	callstack 0
  1331                           
  1332                           ; 1 bytes @ 0x2C
  1333  00002D                     	ds	1
  1334  00002E                     ___flmul@bexp:
  1335                           	callstack 0
  1336  00002E                     _dtoa$2955:
  1337                           	callstack 0
  1338                           
  1339                           ; 2 bytes @ 0x2D
  1340  00002E                     	ds	1
  1341  00002F                     ___flmul@prod:
  1342                           	callstack 0
  1343                           
  1344                           ; 4 bytes @ 0x2E
  1345  00002F                     	ds	1
  1346  000030                     dtoa@p:
  1347                           	callstack 0
  1348                           
  1349                           ; 2 bytes @ 0x2F
  1350  000030                     	ds	2
  1351  000032                     dtoa@w:
  1352                           	callstack 0
  1353                           
  1354                           ; 2 bytes @ 0x31
  1355  000032                     	ds	1
  1356  000033                     ___flmul@temp:
  1357                           	callstack 0
  1358                           
  1359                           ; 2 bytes @ 0x32
  1360  000033                     	ds	1
  1361  000034                     dtoa@s:
  1362                           	callstack 0
  1363                           
  1364                           ; 2 bytes @ 0x33
  1365  000034                     	ds	1
  1366  000035                     ?___fladd:
  1367                           	callstack 0
  1368  000035                     ?___fldiv:
  1369                           	callstack 0
  1370  000035                     ___flge@ff1:
  1371                           	callstack 0
  1372  000035                     ___fladd@b:
  1373                           	callstack 0
  1374  000035                     ___fldiv@b:
  1375                           	callstack 0
  1376                           
  1377                           ; 4 bytes @ 0x34
  1378  000035                     	ds	1
  1379  000036                     dtoa@n:
  1380                           	callstack 0
  1381                           
  1382                           ; 8 bytes @ 0x35
  1383  000036                     	ds	3
  1384  000039                     ___flge@ff2:
  1385                           	callstack 0
  1386  000039                     ___fladd@a:
  1387                           	callstack 0
  1388  000039                     ___fldiv@a:
  1389                           	callstack 0
  1390                           
  1391                           ; 4 bytes @ 0x38
  1392  000039                     	ds	4
  1393  00003D                     ??___fladd:
  1394  00003D                     ??___fldiv:
  1395  00003D                     ??___flge:
  1396                           
  1397                           ; 1 bytes @ 0x3C
  1398  00003D                     	ds	1
  1399  00003E                     dtoa@i:
  1400                           	callstack 0
  1401                           
  1402                           ; 2 bytes @ 0x3D
  1403  00003E                     	ds	3
  1404  000041                     ___fladd@signs:
  1405                           	callstack 0
  1406  000041                     ___fldiv@rem:
  1407                           	callstack 0
  1408                           
  1409                           ; 4 bytes @ 0x40
  1410  000041                     	ds	1
  1411  000042                     ___fladd@aexp:
  1412                           	callstack 0
  1413                           
  1414                           ; 1 bytes @ 0x41
  1415  000042                     	ds	1
  1416  000043                     ___fladd@bexp:
  1417                           	callstack 0
  1418                           
  1419                           ; 1 bytes @ 0x42
  1420  000043                     	ds	1
  1421  000044                     ___fladd@grs:
  1422                           	callstack 0
  1423                           
  1424                           ; 1 bytes @ 0x43
  1425  000044                     	ds	1
  1426  000045                     ?___flsub:
  1427                           	callstack 0
  1428  000045                     ___fldiv@sign:
  1429                           	callstack 0
  1430  000045                     ___flsub@b:
  1431                           	callstack 0
  1432                           
  1433                           ; 4 bytes @ 0x44
  1434  000045                     	ds	1
  1435  000046                     ___fldiv@new_exp:
  1436                           	callstack 0
  1437                           
  1438                           ; 2 bytes @ 0x45
  1439  000046                     	ds	2
  1440  000048                     ___fldiv@grs:
  1441                           	callstack 0
  1442                           
  1443                           ; 4 bytes @ 0x47
  1444  000048                     	ds	1
  1445  000049                     ___flsub@a:
  1446                           	callstack 0
  1447                           
  1448                           ; 4 bytes @ 0x48
  1449  000049                     	ds	3
  1450  00004C                     ___fldiv@bexp:
  1451                           	callstack 0
  1452                           
  1453                           ; 1 bytes @ 0x4B
  1454  00004C                     	ds	1
  1455  00004D                     ___fldiv@aexp:
  1456                           	callstack 0
  1457                           
  1458                           ; 1 bytes @ 0x4C
  1459  00004D                     	ds	1
  1460  00004E                     ?_floorf:
  1461                           	callstack 0
  1462  00004E                     ?___fltol:
  1463                           	callstack 0
  1464  00004E                     ___fltol@f1:
  1465                           	callstack 0
  1466  00004E                     floorf@x:
  1467                           	callstack 0
  1468                           
  1469                           ; 4 bytes @ 0x4D
  1470  00004E                     	ds	4
  1471  000052                     ??_floorf:
  1472  000052                     ??___fltol:
  1473                           
  1474                           ; 1 bytes @ 0x51
  1475  000052                     	ds	4
  1476  000056                     ___fltol@sign1:
  1477                           	callstack 0
  1478                           
  1479                           ; 1 bytes @ 0x55
  1480  000056                     	ds	1
  1481  000057                     ___fltol@exp1:
  1482                           	callstack 0
  1483                           
  1484                           ; 1 bytes @ 0x56
  1485  000057                     	ds	1
  1486  000058                     ??_scanAdcConversion:
  1487  000058                     ?_efgtoa:
  1488                           	callstack 0
  1489  000058                     PWM1_setDC@dutycycle:
  1490                           	callstack 0
  1491  000058                     PWM2_setDC@dutycycle:
  1492                           	callstack 0
  1493  000058                     efgtoa@fp:
  1494                           	callstack 0
  1495  000058                     speedControl@position:
  1496                           	callstack 0
  1497                           
  1498                           ; 4 bytes @ 0x57
  1499  000058                     	ds	2
  1500  00005A                     ??_PWM1_setDC:
  1501  00005A                     ??_PWM2_setDC:
  1502  00005A                     efgtoa@f:
  1503                           	callstack 0
  1504                           
  1505                           ; 4 bytes @ 0x59
  1506  00005A                     	ds	2
  1507  00005C                     ??_speedControl:
  1508  00005C                     PWM1_setDC@duty:
  1509                           	callstack 0
  1510  00005C                     PWM2_setDC@duty:
  1511                           	callstack 0
  1512                           
  1513                           ; 2 bytes @ 0x5B
  1514  00005C                     	ds	2
  1515  00005E                     efgtoa@c:
  1516                           	callstack 0
  1517                           
  1518                           ; 1 bytes @ 0x5D
  1519  00005E                     	ds	1
  1520  00005F                     
  1521                           ; 1 bytes @ 0x5E
  1522 ;;
  1523 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
  1524 ;;
  1525 ;; *************** function _main *****************
  1526 ;; Defined at:
  1527 ;;		line 40 in file "fs_main.c"
  1528 ;; Parameters:    Size  Location     Type
  1529 ;;		None
  1530 ;; Auto vars:     Size  Location     Type
  1531 ;;		None
  1532 ;; Return value:  Size  Location     Type
  1533 ;;                  1    wreg      void 
  1534 ;; Registers used:
  1535 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  1536 ;; Tracked objects:
  1537 ;;		On entry : 0/0
  1538 ;;		On exit  : 0/0
  1539 ;;		Unchanged: 0/0
  1540 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1541 ;;      Params:         0       0       0       0       0       0       0
  1542 ;;      Locals:         0       0       0       0       0       0       0
  1543 ;;      Temps:          0       0       0       0       0       0       0
  1544 ;;      Totals:         0       0       0       0       0       0       0
  1545 ;;Total ram usage:        0 bytes
  1546 ;; Hardware stack levels required when called:   12
  1547 ;; This function calls:
  1548 ;;		_Lcd_Clear
  1549 ;;		_PWM1_setDC
  1550 ;;		_PWM2_setDC
  1551 ;;		_PWM_Init
  1552 ;;		_adcInit
  1553 ;;		_lcd_init
  1554 ;;		_mcu_init
  1555 ;;		_menuControl
  1556 ;;		_menuInitialize
  1557 ;;		_openLCD_Script
  1558 ;;		_system_init
  1559 ;;		_timer_0_init
  1560 ;; This function is called by:
  1561 ;;		Startup code after reset
  1562 ;; This function uses a non-reentrant model
  1563 ;;
  1564                           
  1565                           	psect	text0
  1566  0045B2                     __ptext0:
  1567                           	callstack 0
  1568  0045B2                     _main:
  1569                           	callstack 19
  1570  0045B2                     
  1571                           ;fs_main.c: 42:     mcu_init();
  1572  0045B2  ECC0  F02B         	call	_mcu_init	;wreg free
  1573  0045B6                     
  1574                           ;fs_main.c: 43:     menuInitialize();
  1575  0045B6  EC5A  F02B         	call	_menuInitialize	;wreg free
  1576  0045BA                     
  1577                           ;fs_main.c: 45:     adcInit();
  1578  0045BA  EC46  F02A         	call	_adcInit	;wreg free
  1579  0045BE                     
  1580                           ;fs_main.c: 47:     timer_0_init();
  1581  0045BE  ECCB  F02B         	call	_timer_0_init	;wreg free
  1582  0045C2                     
  1583                           ;fs_main.c: 48:     lcd_init();
  1584  0045C2  EC98  F026         	call	_lcd_init	;wreg free
  1585  0045C6                     
  1586                           ;fs_main.c: 49:     system_init();
  1587  0045C6  ECBF  F01F         	call	_system_init	;wreg free
  1588  0045CA                     
  1589                           ;fs_main.c: 50:     Lcd_Clear();
  1590  0045CA  ECD4  F02B         	call	_Lcd_Clear	;wreg free
  1591  0045CE                     
  1592                           ;fs_main.c: 52:     PWM_Init();
  1593  0045CE  EC6E  F02B         	call	_PWM_Init	;wreg free
  1594  0045D2                     
  1595                           ;fs_main.c: 53:     PWM1_setDC(0);
  1596  0045D2  0E00               	movlw	0
  1597  0045D4  6E59               	movwf	(PWM1_setDC@dutycycle+1)^0,c
  1598  0045D6  0E00               	movlw	0
  1599  0045D8  6E58               	movwf	PWM1_setDC@dutycycle^0,c
  1600  0045DA  EC5F  F027         	call	_PWM1_setDC	;wreg free
  1601  0045DE                     
  1602                           ;fs_main.c: 54:     PWM2_setDC(0);
  1603  0045DE  0E00               	movlw	0
  1604  0045E0  6E59               	movwf	(PWM2_setDC@dutycycle+1)^0,c
  1605  0045E2  0E00               	movlw	0
  1606  0045E4  6E58               	movwf	PWM2_setDC@dutycycle^0,c
  1607  0045E6  EC22  F027         	call	_PWM2_setDC	;wreg free
  1608  0045EA                     
  1609                           ;fs_main.c: 55:     openLCD_Script();
  1610  0045EA  EC7B  F029         	call	_openLCD_Script	;wreg free
  1611  0045EE                     l6490:
  1612                           
  1613                           ;fs_main.c: 58: {;fs_main.c: 59:     if (timer_counter_flag.one_second_flag == 1)
  1614  0045EE  0100               	movlb	0	; () banked
  1615  0045F0  A1FA               	btfss	_timer_counter_flag& (0+255),0,b
  1616  0045F2  EFFD  F022         	goto	u7841
  1617  0045F6  EFFF  F022         	goto	u7840
  1618  0045FA                     u7841:
  1619  0045FA  EF3E  F023         	goto	l6516
  1620  0045FE                     u7840:
  1621  0045FE                     
  1622                           ; BSR set to: 0
  1623                           ;fs_main.c: 60:     {;fs_main.c: 61:         timer_counter_flag.one_second_flag = 0;
  1624  0045FE  91FA               	bcf	_timer_counter_flag& (0+255),0,b
  1625  004600                     
  1626                           ; BSR set to: 0
  1627                           ;fs_main.c: 63:         if ( (startIsClick == 1) && (pauseIsClick == 0) && (stopIsClick 
      +                          == 0) && (menu_selected == MAIN_MENU) )
  1628  004600  05FE               	decf	_startIsClick& (0+255),w,b
  1629  004602  A4D8               	btfss	status,2,c
  1630  004604  EF06  F023         	goto	u7851
  1631  004608  EF08  F023         	goto	u7850
  1632  00460C                     u7851:
  1633  00460C  EF3E  F023         	goto	l6516
  1634  004610                     u7850:
  1635  004610                     
  1636                           ; BSR set to: 0
  1637  004610  51FF               	movf	_pauseIsClick& (0+255),w,b
  1638  004612  A4D8               	btfss	status,2,c
  1639  004614  EF0E  F023         	goto	u7861
  1640  004618  EF10  F023         	goto	u7860
  1641  00461C                     u7861:
  1642  00461C  EF3E  F023         	goto	l6516
  1643  004620                     u7860:
  1644  004620                     
  1645                           ; BSR set to: 0
  1646  004620  51FD               	movf	_stopIsClick& (0+255),w,b
  1647  004622  A4D8               	btfss	status,2,c
  1648  004624  EF16  F023         	goto	u7871
  1649  004628  EF18  F023         	goto	u7870
  1650  00462C                     u7871:
  1651  00462C  EF3E  F023         	goto	l6516
  1652  004630                     u7870:
  1653  004630                     
  1654                           ; BSR set to: 0
  1655  004630  51FB               	movf	_menu_selected& (0+255),w,b
  1656  004632  A4D8               	btfss	status,2,c
  1657  004634  EF1E  F023         	goto	u7881
  1658  004638  EF20  F023         	goto	u7880
  1659  00463C                     u7881:
  1660  00463C  EF3E  F023         	goto	l6516
  1661  004640                     u7880:
  1662  004640                     
  1663                           ; BSR set to: 0
  1664                           ;fs_main.c: 64:         {;fs_main.c: 65:             timer_value.second++;
  1665  004640  0101               	movlb	1	; () banked
  1666  004642  2B8F               	incf	_timer_value& (0+255),f,b
  1667  004644                     
  1668                           ; BSR set to: 1
  1669                           ;fs_main.c: 66:             timer_value.remainingSecond = (uint8_t)60 - timer_value.seco
      +                          nd;
  1670  004644  518F               	movf	_timer_value& (0+255),w,b
  1671  004646  083C               	sublw	60
  1672  004648  6F91               	movwf	(_timer_value+2)& (0+255),b
  1673  00464A                     
  1674                           ; BSR set to: 1
  1675                           ;fs_main.c: 68:             if (timer_value.remainingSecond == 59 )
  1676  00464A  0E3B               	movlw	59
  1677  00464C  1991               	xorwf	(_timer_value+2)& (0+255),w,b
  1678  00464E  A4D8               	btfss	status,2,c
  1679  004650  EF2C  F023         	goto	u7891
  1680  004654  EF2E  F023         	goto	u7890
  1681  004658                     u7891:
  1682  004658  EF34  F023         	goto	l6512
  1683  00465C                     u7890:
  1684  00465C                     
  1685                           ; BSR set to: 1
  1686                           ;fs_main.c: 69:             {;fs_main.c: 70:                 timer_value.minute++;
  1687  00465C  2B90               	incf	(_timer_value+1)& (0+255),f,b
  1688  00465E                     
  1689                           ; BSR set to: 1
  1690                           ;fs_main.c: 71:                 timer_value.remainingMinute = (int8_t)menu_value.driver_
      +                          time - timer_value.minute;
  1691  00465E  5190               	movf	(_timer_value+1)& (0+255),w,b
  1692  004660  0100               	movlb	0	; () banked
  1693  004662  5DF3               	subwf	_menu_value& (0+255),w,b
  1694  004664  0101               	movlb	1	; () banked
  1695  004666  6F92               	movwf	(_timer_value+3)& (0+255),b
  1696  004668                     l6512:
  1697                           
  1698                           ; BSR set to: 1
  1699                           ;fs_main.c: 74:             if (timer_value.second > 59)
  1700  004668  0E3B               	movlw	59
  1701  00466A  658F               	cpfsgt	_timer_value& (0+255),b
  1702  00466C  EF3A  F023         	goto	u7901
  1703  004670  EF3C  F023         	goto	u7900
  1704  004674                     u7901:
  1705  004674  EF3E  F023         	goto	l6516
  1706  004678                     u7900:
  1707  004678                     
  1708                           ; BSR set to: 1
  1709                           ;fs_main.c: 75:             {;fs_main.c: 76:                 timer_value.second = 0;
  1710  004678  0E00               	movlw	0
  1711  00467A  6F8F               	movwf	_timer_value& (0+255),b
  1712  00467C                     l6516:
  1713                           
  1714                           ;fs_main.c: 81:     menuControl();
  1715  00467C  EC9C  F027         	call	_menuControl	;wreg free
  1716  004680  EFF7  F022         	goto	l6490
  1717  004684  EF4D  F000         	goto	start
  1718  004688                     __end_of_main:
  1719                           	callstack 0
  1720                           
  1721 ;; *************** function _timer_0_init *****************
  1722 ;; Defined at:
  1723 ;;		line 72 in file "fs_timer.c"
  1724 ;; Parameters:    Size  Location     Type
  1725 ;;		None
  1726 ;; Auto vars:     Size  Location     Type
  1727 ;;		None
  1728 ;; Return value:  Size  Location     Type
  1729 ;;                  1    wreg      void 
  1730 ;; Registers used:
  1731 ;;		wreg, status,2
  1732 ;; Tracked objects:
  1733 ;;		On entry : 0/0
  1734 ;;		On exit  : 0/0
  1735 ;;		Unchanged: 0/0
  1736 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1737 ;;      Params:         0       0       0       0       0       0       0
  1738 ;;      Locals:         0       0       0       0       0       0       0
  1739 ;;      Temps:          0       0       0       0       0       0       0
  1740 ;;      Totals:         0       0       0       0       0       0       0
  1741 ;;Total ram usage:        0 bytes
  1742 ;; Hardware stack levels used:    1
  1743 ;; Hardware stack levels required when called:    1
  1744 ;; This function calls:
  1745 ;;		Nothing
  1746 ;; This function is called by:
  1747 ;;		_main
  1748 ;; This function uses a non-reentrant model
  1749 ;;
  1750                           
  1751                           	psect	text1
  1752  005796                     __ptext1:
  1753                           	callstack 0
  1754  005796                     _timer_0_init:
  1755                           	callstack 29
  1756  005796                     
  1757                           ;fs_timer.c: 74:   T0CON = 0x81;
  1758  005796  0E81               	movlw	129
  1759  005798  6ED5               	movwf	213,c	;volatile
  1760                           
  1761                           ;fs_timer.c: 75:   TMR0H = 0x63;
  1762  00579A  0E63               	movlw	99
  1763  00579C  6ED7               	movwf	215,c	;volatile
  1764                           
  1765                           ;fs_timer.c: 76:   TMR0L = 0xC0;
  1766  00579E  0EC0               	movlw	192
  1767  0057A0  6ED6               	movwf	214,c	;volatile
  1768  0057A2                     
  1769                           ;fs_timer.c: 77:   INTCONbits.GIE = 1;
  1770  0057A2  8EF2               	bsf	242,7,c	;volatile
  1771  0057A4                     
  1772                           ;fs_timer.c: 78:   INTCONbits.TMR0IE = 1;
  1773  0057A4  8AF2               	bsf	242,5,c	;volatile
  1774  0057A6  0012               	return		;funcret
  1775  0057A8                     __end_of_timer_0_init:
  1776                           	callstack 0
  1777                           
  1778 ;; *************** function _system_init *****************
  1779 ;; Defined at:
  1780 ;;		line 49 in file "fs_mcu.c"
  1781 ;; Parameters:    Size  Location     Type
  1782 ;;		None
  1783 ;; Auto vars:     Size  Location     Type
  1784 ;;		None
  1785 ;; Return value:  Size  Location     Type
  1786 ;;                  1    wreg      void 
  1787 ;; Registers used:
  1788 ;;		wreg, status,2, cstack
  1789 ;; Tracked objects:
  1790 ;;		On entry : 0/0
  1791 ;;		On exit  : 0/0
  1792 ;;		Unchanged: 0/0
  1793 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  1794 ;;      Params:         0       0       0       0       0       0       0
  1795 ;;      Locals:         0       0       0       0       0       0       0
  1796 ;;      Temps:          2       0       0       0       0       0       0
  1797 ;;      Totals:         2       0       0       0       0       0       0
  1798 ;;Total ram usage:        2 bytes
  1799 ;; Hardware stack levels used:    1
  1800 ;; Hardware stack levels required when called:    2
  1801 ;; This function calls:
  1802 ;;		_eepromRead
  1803 ;; This function is called by:
  1804 ;;		_main
  1805 ;; This function uses a non-reentrant model
  1806 ;;
  1807                           
  1808                           	psect	text2
  1809  003F7E                     __ptext2:
  1810                           	callstack 0
  1811  003F7E                     _system_init:
  1812                           	callstack 28
  1813  003F7E                     
  1814                           ;fs_mcu.c: 51:     driver_limit.pay = 0;
  1815  003F7E  0E00               	movlw	0
  1816  003F80  0101               	movlb	1	; () banked
  1817  003F82  6F83               	movwf	_driver_limit& (0+255),b
  1818  003F84  0E00               	movlw	0
  1819  003F86  6F84               	movwf	(_driver_limit+1)& (0+255),b
  1820  003F88  0E00               	movlw	0
  1821  003F8A  6F85               	movwf	(_driver_limit+2)& (0+255),b
  1822  003F8C  0E00               	movlw	0
  1823  003F8E  6F86               	movwf	(_driver_limit+3)& (0+255),b
  1824                           
  1825                           ;fs_mcu.c: 52:     driver_limit.payda = 0;
  1826  003F90  0E00               	movlw	0
  1827  003F92  6F87               	movwf	(_driver_limit+4)& (0+255),b
  1828  003F94  0E00               	movlw	0
  1829  003F96  6F88               	movwf	(_driver_limit+5)& (0+255),b
  1830  003F98  0E00               	movlw	0
  1831  003F9A  6F89               	movwf	(_driver_limit+6)& (0+255),b
  1832  003F9C  0E00               	movlw	0
  1833  003F9E  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  1834                           
  1835                           ;fs_mcu.c: 53:     driver_limit.ortalama = 0;
  1836  003FA0  0E00               	movlw	0
  1837  003FA2  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  1838  003FA4  0E00               	movlw	0
  1839  003FA6  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  1840  003FA8  0E00               	movlw	0
  1841  003FAA  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  1842  003FAC  0E00               	movlw	0
  1843  003FAE  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  1844                           
  1845                           ;fs_mcu.c: 54:     convert_data.convert_channel_0 = 0;
  1846  003FB0  0E00               	movlw	0
  1847  003FB2  6F00               	movwf	_convert_data& (0+255),b
  1848  003FB4  0E00               	movlw	0
  1849  003FB6  6F01               	movwf	(_convert_data+1)& (0+255),b
  1850  003FB8  0E00               	movlw	0
  1851  003FBA  6F02               	movwf	(_convert_data+2)& (0+255),b
  1852  003FBC  0E00               	movlw	0
  1853  003FBE  6F03               	movwf	(_convert_data+3)& (0+255),b
  1854                           
  1855                           ;fs_mcu.c: 55:     convert_data.convert_channel_1 = 0;
  1856  003FC0  0E00               	movlw	0
  1857  003FC2  6F04               	movwf	(_convert_data+4)& (0+255),b
  1858  003FC4  0E00               	movlw	0
  1859  003FC6  6F05               	movwf	(_convert_data+5)& (0+255),b
  1860  003FC8  0E00               	movlw	0
  1861  003FCA  6F06               	movwf	(_convert_data+6)& (0+255),b
  1862  003FCC  0E00               	movlw	0
  1863  003FCE  6F07               	movwf	(_convert_data+7)& (0+255),b
  1864                           
  1865                           ;fs_mcu.c: 56:     convert_data.convert_channel_2 = 0;
  1866  003FD0  0E00               	movlw	0
  1867  003FD2  6F08               	movwf	(_convert_data+8)& (0+255),b
  1868  003FD4  0E00               	movlw	0
  1869  003FD6  6F09               	movwf	(_convert_data+9)& (0+255),b
  1870  003FD8  0E00               	movlw	0
  1871  003FDA  6F0A               	movwf	(_convert_data+10)& (0+255),b
  1872  003FDC  0E00               	movlw	0
  1873  003FDE  6F0B               	movwf	(_convert_data+11)& (0+255),b
  1874                           
  1875                           ;fs_mcu.c: 57:     convert_data.convert_channel_3 = 0;
  1876  003FE0  0E00               	movlw	0
  1877  003FE2  6F0C               	movwf	(_convert_data+12)& (0+255),b
  1878  003FE4  0E00               	movlw	0
  1879  003FE6  6F0D               	movwf	(_convert_data+13)& (0+255),b
  1880  003FE8  0E00               	movlw	0
  1881  003FEA  6F0E               	movwf	(_convert_data+14)& (0+255),b
  1882  003FEC  0E00               	movlw	0
  1883  003FEE  6F0F               	movwf	(_convert_data+15)& (0+255),b
  1884                           
  1885                           ;fs_mcu.c: 58:     convert_data.convert_channel_4 = 0;
  1886  003FF0  0E00               	movlw	0
  1887  003FF2  6F10               	movwf	(_convert_data+16)& (0+255),b
  1888  003FF4  0E00               	movlw	0
  1889  003FF6  6F11               	movwf	(_convert_data+17)& (0+255),b
  1890  003FF8  0E00               	movlw	0
  1891  003FFA  6F12               	movwf	(_convert_data+18)& (0+255),b
  1892  003FFC  0E00               	movlw	0
  1893  003FFE  6F13               	movwf	(_convert_data+19)& (0+255),b
  1894                           
  1895                           ;fs_mcu.c: 59:     convert_data.convert_channel_5 = 0;
  1896  004000  0E00               	movlw	0
  1897  004002  6F14               	movwf	(_convert_data+20)& (0+255),b
  1898  004004  0E00               	movlw	0
  1899  004006  6F15               	movwf	(_convert_data+21)& (0+255),b
  1900  004008  0E00               	movlw	0
  1901  00400A  6F16               	movwf	(_convert_data+22)& (0+255),b
  1902  00400C  0E00               	movlw	0
  1903  00400E  6F17               	movwf	(_convert_data+23)& (0+255),b
  1904                           
  1905                           ;fs_mcu.c: 60:     convert_data.convert_channel_6 = 0;
  1906  004010  0E00               	movlw	0
  1907  004012  6F18               	movwf	(_convert_data+24)& (0+255),b
  1908  004014  0E00               	movlw	0
  1909  004016  6F19               	movwf	(_convert_data+25)& (0+255),b
  1910  004018  0E00               	movlw	0
  1911  00401A  6F1A               	movwf	(_convert_data+26)& (0+255),b
  1912  00401C  0E00               	movlw	0
  1913  00401E  6F1B               	movwf	(_convert_data+27)& (0+255),b
  1914                           
  1915                           ;fs_mcu.c: 61:     convert_data.convert_channel_7 = 0;
  1916  004020  0E00               	movlw	0
  1917  004022  6F1C               	movwf	(_convert_data+28)& (0+255),b
  1918  004024  0E00               	movlw	0
  1919  004026  6F1D               	movwf	(_convert_data+29)& (0+255),b
  1920  004028  0E00               	movlw	0
  1921  00402A  6F1E               	movwf	(_convert_data+30)& (0+255),b
  1922  00402C  0E00               	movlw	0
  1923  00402E  6F1F               	movwf	(_convert_data+31)& (0+255),b
  1924                           
  1925                           ;fs_mcu.c: 62:     controller.leftMotorSpeed = 0;
  1926  004030  0E00               	movlw	0
  1927  004032  6F57               	movwf	(_controller+7)& (0+255),b
  1928  004034  0E00               	movlw	0
  1929  004036  6F56               	movwf	(_controller+6)& (0+255),b
  1930                           
  1931                           ;fs_mcu.c: 63:     controller.rightMotorSpeed = 0;
  1932  004038  0E00               	movlw	0
  1933  00403A  6F59               	movwf	(_controller+9)& (0+255),b
  1934  00403C  0E00               	movlw	0
  1935  00403E  6F58               	movwf	(_controller+8)& (0+255),b
  1936                           
  1937                           ;fs_mcu.c: 64:     timer_value.adc_conversion_time = 0;
  1938  004040  0E00               	movlw	0
  1939  004042  6F94               	movwf	(_timer_value+5)& (0+255),b
  1940                           
  1941                           ;fs_mcu.c: 65:     controller.error = 0;
  1942  004044  0E00               	movlw	0
  1943  004046  6F51               	movwf	(_controller+1)& (0+255),b
  1944  004048  0E00               	movlw	0
  1945  00404A  6F50               	movwf	_controller& (0+255),b
  1946                           
  1947                           ;fs_mcu.c: 67:     button_bounce_controller.menu = 0;
  1948  00404C  0E00               	movlw	0
  1949  00404E  6F9D               	movwf	_button_bounce_controller& (0+255),b
  1950                           
  1951                           ;fs_mcu.c: 68:     button_bounce_controller.pause = 0;
  1952  004050  0E00               	movlw	0
  1953  004052  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
  1954                           
  1955                           ;fs_mcu.c: 69:     button_bounce_controller.start = 0;
  1956  004054  0E00               	movlw	0
  1957  004056  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
  1958                           
  1959                           ;fs_mcu.c: 70:     button_bounce_controller.stop = 0;
  1960  004058  0E00               	movlw	0
  1961  00405A  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
  1962  00405C                     
  1963                           ; BSR set to: 1
  1964                           ;fs_mcu.c: 71:     menu_value.driver_time = (uint8_t)eepromRead(0x00);
  1965  00405C  0E00               	movlw	0
  1966  00405E  EC95  F02B         	call	_eepromRead
  1967  004062  0100               	movlb	0	; () banked
  1968  004064  6FF3               	movwf	_menu_value& (0+255),b
  1969  004066                     
  1970                           ; BSR set to: 0
  1971                           ;fs_mcu.c: 72:     menu_value.stop_time = (uint8_t)eepromRead(0x01);
  1972  004066  0E01               	movlw	1
  1973  004068  EC95  F02B         	call	_eepromRead
  1974  00406C  0100               	movlb	0	; () banked
  1975  00406E  6FF4               	movwf	(_menu_value+1)& (0+255),b
  1976  004070                     
  1977                           ; BSR set to: 0
  1978                           ;fs_mcu.c: 73:     menu_value.speed_limit = (uint8_t)eepromRead(0x02);
  1979  004070  0E02               	movlw	2
  1980  004072  EC95  F02B         	call	_eepromRead
  1981  004076  0100               	movlb	0	; () banked
  1982  004078  6FF5               	movwf	(_menu_value+2)& (0+255),b
  1983  00407A                     
  1984                           ; BSR set to: 0
  1985                           ;fs_mcu.c: 75:     _delay((unsigned long)((700)*(64000000UL/4000.0)));
  1986  00407A  0E39               	movlw	57
  1987  00407C  6E03               	movwf	(??_system_init+1)^0,c
  1988  00407E  0ED2               	movlw	210
  1989  004080  6E02               	movwf	??_system_init^0,c
  1990  004082  0E4C               	movlw	76
  1991  004084                     u7977:
  1992  004084  2EE8               	decfsz	wreg,f,c
  1993  004086  D7FE               	bra	u7977
  1994  004088  2E02               	decfsz	??_system_init^0,f,c
  1995  00408A  D7FC               	bra	u7977
  1996  00408C  2E03               	decfsz	(??_system_init+1)^0,f,c
  1997  00408E  D7FA               	bra	u7977
  1998  004090  D000               	nop2	
  1999  004092                     
  2000                           ;fs_mcu.c: 76:     timer_value.remainingMinute = menu_value.driver_time;
  2001  004092  C0F3  F192         	movff	_menu_value,_timer_value+3
  2002  004096                     
  2003                           ;fs_mcu.c: 77:     timer_value.remainingSecond = 0;
  2004  004096  0E00               	movlw	0
  2005  004098  0101               	movlb	1	; () banked
  2006  00409A  6F91               	movwf	(_timer_value+2)& (0+255),b
  2007  00409C                     
  2008                           ; BSR set to: 1
  2009  00409C  0012               	return		;funcret
  2010  00409E                     __end_of_system_init:
  2011                           	callstack 0
  2012                           
  2013 ;; *************** function _eepromRead *****************
  2014 ;; Defined at:
  2015 ;;		line 36 in file "fs_eeprom.c"
  2016 ;; Parameters:    Size  Location     Type
  2017 ;;  address         1    wreg     unsigned char 
  2018 ;; Auto vars:     Size  Location     Type
  2019 ;;  address         1    0[COMRAM] unsigned char 
  2020 ;; Return value:  Size  Location     Type
  2021 ;;                  1    wreg      unsigned char 
  2022 ;; Registers used:
  2023 ;;		wreg, status,2
  2024 ;; Tracked objects:
  2025 ;;		On entry : 0/0
  2026 ;;		On exit  : 0/0
  2027 ;;		Unchanged: 0/0
  2028 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2029 ;;      Params:         0       0       0       0       0       0       0
  2030 ;;      Locals:         1       0       0       0       0       0       0
  2031 ;;      Temps:          0       0       0       0       0       0       0
  2032 ;;      Totals:         1       0       0       0       0       0       0
  2033 ;;Total ram usage:        1 bytes
  2034 ;; Hardware stack levels used:    1
  2035 ;; Hardware stack levels required when called:    1
  2036 ;; This function calls:
  2037 ;;		Nothing
  2038 ;; This function is called by:
  2039 ;;		_system_init
  2040 ;; This function uses a non-reentrant model
  2041 ;;
  2042                           
  2043                           	psect	text3
  2044  00572A                     __ptext3:
  2045                           	callstack 0
  2046  00572A                     _eepromRead:
  2047                           	callstack 28
  2048                           
  2049                           ; BSR set to: 1
  2050                           ;incstack = 0
  2051                           ;eepromRead@address stored from wreg
  2052  00572A  6E01               	movwf	eepromRead@address^0,c
  2053  00572C                     
  2054                           ;fs_eeprom.c: 36: uint8_t eepromRead(uint8_t address);fs_eeprom.c: 37: {;fs_eeprom.c: 48
      +                          :     EEADR = (uint8_t)address;
  2055  00572C  C001  FFA9         	movff	eepromRead@address,4009	;volatile
  2056  005730                     
  2057                           ;fs_eeprom.c: 50:     EECON1bits.EEPGD = 0;
  2058  005730  9EA6               	bcf	166,7,c	;volsfr
  2059  005732                     
  2060                           ;fs_eeprom.c: 51:     EECON1bits.CFGS = 0;
  2061  005732  9CA6               	bcf	166,6,c	;volsfr
  2062  005734                     
  2063                           ;fs_eeprom.c: 52:     EECON1bits.RD = 1;
  2064  005734  80A6               	bsf	166,0,c	;volsfr
  2065  005736                     l92:
  2066  005736  B0A6               	btfsc	166,0,c	;volsfr
  2067  005738  EFA0  F02B         	goto	u7551
  2068  00573C  EFA2  F02B         	goto	u7550
  2069  005740                     u7551:
  2070  005740  EF9B  F02B         	goto	l92
  2071  005744                     u7550:
  2072  005744                     
  2073                           ;fs_eeprom.c: 58:     return EEDATA;
  2074  005744  50A8               	movf	168,w,c	;volatile
  2075  005746  0012               	return		;funcret
  2076  005748                     __end_of_eepromRead:
  2077                           	callstack 0
  2078                           
  2079 ;; *************** function _openLCD_Script *****************
  2080 ;; Defined at:
  2081 ;;		line 87 in file "fs_mcu.c"
  2082 ;; Parameters:    Size  Location     Type
  2083 ;;		None
  2084 ;; Auto vars:     Size  Location     Type
  2085 ;;		None
  2086 ;; Return value:  Size  Location     Type
  2087 ;;                  1    wreg      void 
  2088 ;; Registers used:
  2089 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  2090 ;; Tracked objects:
  2091 ;;		On entry : 0/0
  2092 ;;		On exit  : 0/0
  2093 ;;		Unchanged: 0/0
  2094 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2095 ;;      Params:         0       0       0       0       0       0       0
  2096 ;;      Locals:         0       0       0       0       0       0       0
  2097 ;;      Temps:          2       0       0       0       0       0       0
  2098 ;;      Totals:         2       0       0       0       0       0       0
  2099 ;;Total ram usage:        2 bytes
  2100 ;; Hardware stack levels used:    1
  2101 ;; Hardware stack levels required when called:    4
  2102 ;; This function calls:
  2103 ;;		_Lcd_Clear
  2104 ;;		_Lcd_Set_Cursor
  2105 ;;		_Lcd_Write_String
  2106 ;; This function is called by:
  2107 ;;		_main
  2108 ;; This function uses a non-reentrant model
  2109 ;;
  2110                           
  2111                           	psect	text4
  2112  0052F6                     __ptext4:
  2113                           	callstack 0
  2114  0052F6                     _openLCD_Script:
  2115                           	callstack 26
  2116  0052F6                     
  2117                           ;fs_mcu.c: 89:     Lcd_Set_Cursor(1,1);
  2118  0052F6  0E01               	movlw	1
  2119  0052F8  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2120  0052FA  0E01               	movlw	1
  2121  0052FC  EC41  F028         	call	_Lcd_Set_Cursor
  2122  005300                     
  2123                           ;fs_mcu.c: 90:     Lcd_Write_String("   Ergin Oyun  ");
  2124  005300  0EB1               	movlw	low STR_1
  2125  005302  6E05               	movwf	Lcd_Write_String@a^0,c
  2126  005304  0E7F               	movlw	high STR_1
  2127  005306  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2128  005308  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  2129  00530C                     
  2130                           ;fs_mcu.c: 91:     Lcd_Set_Cursor(2,1);
  2131  00530C  0E01               	movlw	1
  2132  00530E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2133  005310  0E02               	movlw	2
  2134  005312  EC41  F028         	call	_Lcd_Set_Cursor
  2135                           
  2136                           ;fs_mcu.c: 92:     Lcd_Write_String(" iYi Eglenceler ");
  2137  005316  0E80               	movlw	low STR_2
  2138  005318  6E05               	movwf	Lcd_Write_String@a^0,c
  2139  00531A  0E7F               	movlw	high STR_2
  2140  00531C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2141  00531E  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  2142  005322                     
  2143                           ;fs_mcu.c: 93:     _delay((unsigned long)((2500)*(64000000UL/4000.0)));
  2144  005322  0ECB               	movlw	203
  2145  005324  6E0C               	movwf	(??_openLCD_Script+1)^0,c
  2146  005326  0EEC               	movlw	236
  2147  005328  6E0B               	movwf	??_openLCD_Script^0,c
  2148  00532A  0E84               	movlw	132
  2149  00532C                     u7987:
  2150  00532C  2EE8               	decfsz	wreg,f,c
  2151  00532E  D7FE               	bra	u7987
  2152  005330  2E0B               	decfsz	??_openLCD_Script^0,f,c
  2153  005332  D7FC               	bra	u7987
  2154  005334  2E0C               	decfsz	(??_openLCD_Script+1)^0,f,c
  2155  005336  D7FA               	bra	u7987
  2156  005338  D000               	nop2	
  2157  00533A                     
  2158                           ;fs_mcu.c: 94:     Lcd_Clear();
  2159  00533A  ECD4  F02B         	call	_Lcd_Clear	;wreg free
  2160  00533E  0012               	return		;funcret
  2161  005340                     __end_of_openLCD_Script:
  2162                           	callstack 0
  2163                           
  2164 ;; *************** function _Lcd_Clear *****************
  2165 ;; Defined at:
  2166 ;;		line 72 in file "fs_lcd.c"
  2167 ;; Parameters:    Size  Location     Type
  2168 ;;		None
  2169 ;; Auto vars:     Size  Location     Type
  2170 ;;		None
  2171 ;; Return value:  Size  Location     Type
  2172 ;;                  1    wreg      void 
  2173 ;; Registers used:
  2174 ;;		wreg, status,2, cstack
  2175 ;; Tracked objects:
  2176 ;;		On entry : 0/0
  2177 ;;		On exit  : 0/0
  2178 ;;		Unchanged: 0/0
  2179 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2180 ;;      Params:         0       0       0       0       0       0       0
  2181 ;;      Locals:         0       0       0       0       0       0       0
  2182 ;;      Temps:          0       0       0       0       0       0       0
  2183 ;;      Totals:         0       0       0       0       0       0       0
  2184 ;;Total ram usage:        0 bytes
  2185 ;; Hardware stack levels used:    1
  2186 ;; Hardware stack levels required when called:    3
  2187 ;; This function calls:
  2188 ;;		_Lcd_Cmd
  2189 ;; This function is called by:
  2190 ;;		_main
  2191 ;;		_openLCD_Script
  2192 ;; This function uses a non-reentrant model
  2193 ;;
  2194                           
  2195                           	psect	text5
  2196  0057A8                     __ptext5:
  2197                           	callstack 0
  2198  0057A8                     _Lcd_Clear:
  2199                           	callstack 26
  2200  0057A8                     
  2201                           ;fs_lcd.c: 74:    Lcd_Cmd(0);
  2202  0057A8  0E00               	movlw	0
  2203  0057AA  ECA4  F02B         	call	_Lcd_Cmd
  2204                           
  2205                           ;fs_lcd.c: 75:    Lcd_Cmd(1);
  2206  0057AE  0E01               	movlw	1
  2207  0057B0  ECA4  F02B         	call	_Lcd_Cmd
  2208  0057B4  0012               	return		;funcret
  2209  0057B6                     __end_of_Lcd_Clear:
  2210                           	callstack 0
  2211                           
  2212 ;; *************** function _menuInitialize *****************
  2213 ;; Defined at:
  2214 ;;		line 35 in file "fs_menu_controller.c"
  2215 ;; Parameters:    Size  Location     Type
  2216 ;;		None
  2217 ;; Auto vars:     Size  Location     Type
  2218 ;;		None
  2219 ;; Return value:  Size  Location     Type
  2220 ;;                  1    wreg      void 
  2221 ;; Registers used:
  2222 ;;		None
  2223 ;; Tracked objects:
  2224 ;;		On entry : 0/0
  2225 ;;		On exit  : 0/0
  2226 ;;		Unchanged: 0/0
  2227 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2228 ;;      Params:         0       0       0       0       0       0       0
  2229 ;;      Locals:         0       0       0       0       0       0       0
  2230 ;;      Temps:          0       0       0       0       0       0       0
  2231 ;;      Totals:         0       0       0       0       0       0       0
  2232 ;;Total ram usage:        0 bytes
  2233 ;; Hardware stack levels used:    1
  2234 ;; Hardware stack levels required when called:    1
  2235 ;; This function calls:
  2236 ;;		Nothing
  2237 ;; This function is called by:
  2238 ;;		_main
  2239 ;; This function uses a non-reentrant model
  2240 ;;
  2241                           
  2242                           	psect	text6
  2243  0056B4                     __ptext6:
  2244                           	callstack 0
  2245  0056B4                     _menuInitialize:
  2246                           	callstack 29
  2247  0056B4                     
  2248                           ;fs_menu_controller.c: 38:     TRISBbits.RB6 = 1;
  2249  0056B4  8C93               	bsf	147,6,c	;volatile
  2250                           
  2251                           ;fs_menu_controller.c: 41:     TRISBbits.RB7 = 1;
  2252  0056B6  8E93               	bsf	147,7,c	;volatile
  2253                           
  2254                           ;fs_menu_controller.c: 43:     ANSELDbits.ANSD4 = 0;
  2255  0056B8  010F               	movlb	15	; () banked
  2256  0056BA  993B               	bcf	59,4,b	;volatile
  2257                           
  2258                           ;fs_menu_controller.c: 44:     TRISDbits.RD4 = 1;
  2259  0056BC  8895               	bsf	149,4,c	;volatile
  2260                           
  2261                           ;fs_menu_controller.c: 46:     ANSELDbits.ANSD0 = 0;
  2262  0056BE  913B               	bcf	59,0,b	;volatile
  2263                           
  2264                           ;fs_menu_controller.c: 47:     TRISDbits.RD0 = 1;
  2265  0056C0  8095               	bsf	149,0,c	;volatile
  2266                           
  2267                           ;fs_menu_controller.c: 49:     ANSELDbits.ANSD1 = 0;
  2268  0056C2  933B               	bcf	59,1,b	;volatile
  2269                           
  2270                           ;fs_menu_controller.c: 50:     TRISDbits.RD1 = 1;
  2271  0056C4  8295               	bsf	149,1,c	;volatile
  2272                           
  2273                           ;fs_menu_controller.c: 52:     ANSELDbits.ANSD2 = 0;
  2274  0056C6  953B               	bcf	59,2,b	;volatile
  2275                           
  2276                           ;fs_menu_controller.c: 53:     TRISDbits.RD2 = 1;
  2277  0056C8  8495               	bsf	149,2,c	;volatile
  2278                           
  2279                           ;fs_menu_controller.c: 55:     ANSELDbits.ANSD3 = 0;
  2280  0056CA  973B               	bcf	59,3,b	;volatile
  2281                           
  2282                           ;fs_menu_controller.c: 56:     TRISDbits.RD3 = 1;
  2283  0056CC  8695               	bsf	149,3,c	;volatile
  2284                           
  2285                           ;fs_menu_controller.c: 58:     ANSELDbits.ANSD5 = 0;
  2286  0056CE  9B3B               	bcf	59,5,b	;volatile
  2287                           
  2288                           ;fs_menu_controller.c: 59:     TRISDbits.RD5 = 0;
  2289  0056D0  9A95               	bcf	149,5,c	;volatile
  2290                           
  2291                           ;fs_menu_controller.c: 61:     ANSELCbits.ANSC5 = 0;
  2292  0056D2  9B3A               	bcf	58,5,b	;volatile
  2293                           
  2294                           ;fs_menu_controller.c: 62:     TRISCbits.RC5 = 0;
  2295  0056D4  9A94               	bcf	148,5,c	;volatile
  2296                           
  2297                           ;fs_menu_controller.c: 64:     ANSELCbits.ANSC4 = 0;
  2298  0056D6  993A               	bcf	58,4,b	;volatile
  2299                           
  2300                           ;fs_menu_controller.c: 65:     TRISCbits.RC4 = 0;
  2301  0056D8  9894               	bcf	148,4,c	;volatile
  2302  0056DA                     
  2303                           ; BSR set to: 15
  2304  0056DA  0012               	return		;funcret
  2305  0056DC                     __end_of_menuInitialize:
  2306                           	callstack 0
  2307                           
  2308 ;; *************** function _menuControl *****************
  2309 ;; Defined at:
  2310 ;;		line 159 in file "fs_menu_controller.c"
  2311 ;; Parameters:    Size  Location     Type
  2312 ;;		None
  2313 ;; Auto vars:     Size  Location     Type
  2314 ;;		None
  2315 ;; Return value:  Size  Location     Type
  2316 ;;                  1    wreg      void 
  2317 ;; Registers used:
  2318 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2319 ;; Tracked objects:
  2320 ;;		On entry : 0/0
  2321 ;;		On exit  : 0/0
  2322 ;;		Unchanged: 0/0
  2323 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2324 ;;      Params:         0       0       0       0       0       0       0
  2325 ;;      Locals:         0       0       0       0       0       0       0
  2326 ;;      Temps:          0       0       0       0       0       0       0
  2327 ;;      Totals:         0       0       0       0       0       0       0
  2328 ;;Total ram usage:        0 bytes
  2329 ;; Hardware stack levels used:    1
  2330 ;; Hardware stack levels required when called:   11
  2331 ;; This function calls:
  2332 ;;		_buttonControlFlags
  2333 ;;		_stateMachine
  2334 ;; This function is called by:
  2335 ;;		_main
  2336 ;; This function uses a non-reentrant model
  2337 ;;
  2338                           
  2339                           	psect	text7
  2340  004F38                     __ptext7:
  2341                           	callstack 0
  2342  004F38                     _menuControl:
  2343                           	callstack 19
  2344  004F38                     
  2345                           ;fs_menu_controller.c: 161:     buttonControlFlags();
  2346  004F38  ECE5  F018         	call	_buttonControlFlags	;wreg free
  2347  004F3C                     
  2348                           ;fs_menu_controller.c: 162:     stateMachine();
  2349  004F3C  EC40  F025         	call	_stateMachine	;wreg free
  2350  004F40                     
  2351                           ;fs_menu_controller.c: 164:     if (menu_flags.menu_start_flag == 1)
  2352  004F40  0101               	movlb	1	; () banked
  2353  004F42  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2354  004F44  A4D8               	btfss	status,2,c
  2355  004F46  EFA7  F027         	goto	u7811
  2356  004F4A  EFA9  F027         	goto	u7810
  2357  004F4E                     u7811:
  2358  004F4E  EFB2  F027         	goto	l6456
  2359  004F52                     u7810:
  2360  004F52                     
  2361                           ; BSR set to: 1
  2362                           ;fs_menu_controller.c: 165:     {;fs_menu_controller.c: 166:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2363  004F52  0E00               	movlw	0
  2364  004F54  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2365                           
  2366                           ;fs_menu_controller.c: 167:         startIsClick = 1;
  2367  004F56  0E01               	movlw	1
  2368  004F58  0100               	movlb	0	; () banked
  2369  004F5A  6FFE               	movwf	_startIsClick& (0+255),b
  2370                           
  2371                           ;fs_menu_controller.c: 168:         pauseIsClick = 0;
  2372  004F5C  0E00               	movlw	0
  2373  004F5E  6FFF               	movwf	_pauseIsClick& (0+255),b
  2374                           
  2375                           ;fs_menu_controller.c: 169:         stopIsClick = 0;
  2376  004F60  0E00               	movlw	0
  2377  004F62  6FFD               	movwf	_stopIsClick& (0+255),b
  2378  004F64                     l6456:
  2379                           
  2380                           ;fs_menu_controller.c: 172:     if (menu_flags.menu_pause_flag == 1)
  2381  004F64  0101               	movlb	1	; () banked
  2382  004F66  059A               	decf	(_menu_flags+3)& (0+255),w,b
  2383  004F68  A4D8               	btfss	status,2,c
  2384  004F6A  EFB9  F027         	goto	u7821
  2385  004F6E  EFBB  F027         	goto	u7820
  2386  004F72                     u7821:
  2387  004F72  EFC4  F027         	goto	l6460
  2388  004F76                     u7820:
  2389  004F76                     
  2390                           ; BSR set to: 1
  2391                           ;fs_menu_controller.c: 173:     {;fs_menu_controller.c: 174:         menu_flags.menu_pau
      +                          se_flag = 0;
  2392  004F76  0E00               	movlw	0
  2393  004F78  6F9A               	movwf	(_menu_flags+3)& (0+255),b
  2394                           
  2395                           ;fs_menu_controller.c: 175:         pauseIsClick = 1;
  2396  004F7A  0E01               	movlw	1
  2397  004F7C  0100               	movlb	0	; () banked
  2398  004F7E  6FFF               	movwf	_pauseIsClick& (0+255),b
  2399                           
  2400                           ;fs_menu_controller.c: 176:         startIsClick = 0;
  2401  004F80  0E00               	movlw	0
  2402  004F82  6FFE               	movwf	_startIsClick& (0+255),b
  2403                           
  2404                           ;fs_menu_controller.c: 177:         stopIsClick = 0;
  2405  004F84  0E00               	movlw	0
  2406  004F86  6FFD               	movwf	_stopIsClick& (0+255),b
  2407  004F88                     l6460:
  2408                           
  2409                           ;fs_menu_controller.c: 180:     if (menu_flags.menu_stop_flag == 1)
  2410  004F88  0101               	movlb	1	; () banked
  2411  004F8A  0599               	decf	(_menu_flags+2)& (0+255),w,b
  2412  004F8C  A4D8               	btfss	status,2,c
  2413  004F8E  EFCB  F027         	goto	u7831
  2414  004F92  EFCD  F027         	goto	u7830
  2415  004F96                     u7831:
  2416  004F96  EFD6  F027         	goto	l428
  2417  004F9A                     u7830:
  2418  004F9A                     
  2419                           ; BSR set to: 1
  2420                           ;fs_menu_controller.c: 181:     {;fs_menu_controller.c: 182:         menu_flags.menu_sto
      +                          p_flag = 0;
  2421  004F9A  0E00               	movlw	0
  2422  004F9C  6F99               	movwf	(_menu_flags+2)& (0+255),b
  2423                           
  2424                           ;fs_menu_controller.c: 183:         pauseIsClick = 0;
  2425  004F9E  0E00               	movlw	0
  2426  004FA0  0100               	movlb	0	; () banked
  2427  004FA2  6FFF               	movwf	_pauseIsClick& (0+255),b
  2428                           
  2429                           ;fs_menu_controller.c: 184:         startIsClick = 0;
  2430  004FA4  0E00               	movlw	0
  2431  004FA6  6FFE               	movwf	_startIsClick& (0+255),b
  2432                           
  2433                           ;fs_menu_controller.c: 185:         stopIsClick = 1;
  2434  004FA8  0E01               	movlw	1
  2435  004FAA  6FFD               	movwf	_stopIsClick& (0+255),b
  2436  004FAC                     l428:
  2437  004FAC  0012               	return		;funcret
  2438  004FAE                     __end_of_menuControl:
  2439                           	callstack 0
  2440                           
  2441 ;; *************** function _stateMachine *****************
  2442 ;; Defined at:
  2443 ;;		line 196 in file "fs_menu_controller.c"
  2444 ;; Parameters:    Size  Location     Type
  2445 ;;		None
  2446 ;; Auto vars:     Size  Location     Type
  2447 ;;		None
  2448 ;; Return value:  Size  Location     Type
  2449 ;;                  1    wreg      void 
  2450 ;; Registers used:
  2451 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2452 ;; Tracked objects:
  2453 ;;		On entry : 0/0
  2454 ;;		On exit  : 0/0
  2455 ;;		Unchanged: 0/0
  2456 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2457 ;;      Params:         0       0       0       0       0       0       0
  2458 ;;      Locals:         0       0       0       0       0       0       0
  2459 ;;      Temps:          0       2       0       0       0       0       0
  2460 ;;      Totals:         0       2       0       0       0       0       0
  2461 ;;Total ram usage:        2 bytes
  2462 ;; Hardware stack levels used:    1
  2463 ;; Hardware stack levels required when called:   10
  2464 ;; This function calls:
  2465 ;;		_driverTimeSettingMenu
  2466 ;;		_exitLine
  2467 ;;		_mainMenu
  2468 ;;		_pauseMenu
  2469 ;;		_secretMenu
  2470 ;;		_speedLimitSettingMenu
  2471 ;;		_startMenu
  2472 ;;		_stopMenu
  2473 ;;		_stopTimeSettingMenu
  2474 ;; This function is called by:
  2475 ;;		_menuControl
  2476 ;; This function uses a non-reentrant model
  2477 ;;
  2478                           
  2479                           	psect	text8
  2480  004A80                     __ptext8:
  2481                           	callstack 0
  2482  004A80                     _stateMachine:
  2483                           	callstack 19
  2484  004A80                     
  2485                           ;fs_menu_controller.c: 198:     switch (menu_selected)
  2486  004A80  EF66  F025         	goto	l6364
  2487  004A84                     l6344:
  2488                           
  2489                           ; BSR set to: 0
  2490                           ;fs_menu_controller.c: 201:             mainMenu();
  2491  004A84  EC84  F01B         	call	_mainMenu	;wreg free
  2492                           
  2493                           ;fs_menu_controller.c: 202:         break;
  2494  004A88  EF98  F025         	goto	l442
  2495  004A8C                     l6346:
  2496                           
  2497                           ; BSR set to: 0
  2498                           ;fs_menu_controller.c: 205:             driverTimeSettingMenu();
  2499  004A8C  EC2B  F01F         	call	_driverTimeSettingMenu	;wreg free
  2500                           
  2501                           ;fs_menu_controller.c: 206:         break;
  2502  004A90  EF98  F025         	goto	l442
  2503  004A94                     l6348:
  2504                           
  2505                           ; BSR set to: 0
  2506                           ;fs_menu_controller.c: 209:             stopTimeSettingMenu();
  2507  004A94  EC4F  F020         	call	_stopTimeSettingMenu	;wreg free
  2508                           
  2509                           ;fs_menu_controller.c: 210:         break;
  2510  004A98  EF98  F025         	goto	l442
  2511  004A9C                     l6350:
  2512                           
  2513                           ; BSR set to: 0
  2514                           ;fs_menu_controller.c: 213:             speedLimitSettingMenu();
  2515  004A9C  EC56  F021         	call	_speedLimitSettingMenu	;wreg free
  2516                           
  2517                           ;fs_menu_controller.c: 214:         break;
  2518  004AA0  EF98  F025         	goto	l442
  2519  004AA4                     l6352:
  2520                           
  2521                           ; BSR set to: 0
  2522                           ;fs_menu_controller.c: 217:             stopMenu();
  2523  004AA4  ECAF  F023         	call	_stopMenu	;wreg free
  2524                           
  2525                           ;fs_menu_controller.c: 218:         break;
  2526  004AA8  EF98  F025         	goto	l442
  2527  004AAC                     l6354:
  2528                           
  2529                           ; BSR set to: 0
  2530                           ;fs_menu_controller.c: 221:             startMenu();
  2531  004AAC  ECB3  F02B         	call	_startMenu	;wreg free
  2532                           
  2533                           ;fs_menu_controller.c: 222:         break;
  2534  004AB0  EF98  F025         	goto	l442
  2535  004AB4                     l6356:
  2536                           
  2537                           ; BSR set to: 0
  2538                           ;fs_menu_controller.c: 225:             pauseMenu();
  2539  004AB4  EC90  F01E         	call	_pauseMenu	;wreg free
  2540                           
  2541                           ;fs_menu_controller.c: 226:         break;
  2542  004AB8  EF98  F025         	goto	l442
  2543  004ABC                     l6358:
  2544                           
  2545                           ; BSR set to: 0
  2546                           ;fs_menu_controller.c: 229:             exitLine();
  2547  004ABC  ECDB  F02B         	call	_exitLine	;wreg free
  2548                           
  2549                           ;fs_menu_controller.c: 230:         break;
  2550  004AC0  EF98  F025         	goto	l442
  2551  004AC4                     l6360:
  2552                           
  2553                           ; BSR set to: 0
  2554                           ;fs_menu_controller.c: 233:             secretMenu();
  2555  004AC4  EC70  F016         	call	_secretMenu	;wreg free
  2556                           
  2557                           ;fs_menu_controller.c: 234:         break;
  2558  004AC8  EF98  F025         	goto	l442
  2559  004ACC                     l6364:
  2560  004ACC  0100               	movlb	0	; () banked
  2561  004ACE  51FB               	movf	_menu_selected& (0+255),w,b
  2562  004AD0  6FF1               	movwf	??_stateMachine& (0+255),b
  2563  004AD2  6BF2               	clrf	(??_stateMachine+1)& (0+255),b
  2564                           
  2565                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  2566                           ; Switch size 1, requested type "simple"
  2567                           ; Number of cases is 1, Range of values is 0 to 0
  2568                           ; switch strategies available:
  2569                           ; Name         Instructions Cycles
  2570                           ; simple_byte            4     3 (average)
  2571                           ;	Chosen strategy is simple_byte
  2572  004AD4  51F2               	movf	(??_stateMachine+1)& (0+255),w,b
  2573  004AD6  0A00               	xorlw	0	; case 0
  2574  004AD8  B4D8               	btfsc	status,2,c
  2575  004ADA  EF71  F025         	goto	l6616
  2576  004ADE  EF98  F025         	goto	l442
  2577  004AE2                     l6616:
  2578                           
  2579                           ; BSR set to: 0
  2580                           ; Switch size 1, requested type "simple"
  2581                           ; Number of cases is 9, Range of values is 0 to 8
  2582                           ; switch strategies available:
  2583                           ; Name         Instructions Cycles
  2584                           ; simple_byte           28    15 (average)
  2585                           ;	Chosen strategy is simple_byte
  2586  004AE2  51F1               	movf	??_stateMachine& (0+255),w,b
  2587  004AE4  0A00               	xorlw	0	; case 0
  2588  004AE6  B4D8               	btfsc	status,2,c
  2589  004AE8  EF42  F025         	goto	l6344
  2590  004AEC  0A01               	xorlw	1	; case 1
  2591  004AEE  B4D8               	btfsc	status,2,c
  2592  004AF0  EF46  F025         	goto	l6346
  2593  004AF4  0A03               	xorlw	3	; case 2
  2594  004AF6  B4D8               	btfsc	status,2,c
  2595  004AF8  EF4A  F025         	goto	l6348
  2596  004AFC  0A01               	xorlw	1	; case 3
  2597  004AFE  B4D8               	btfsc	status,2,c
  2598  004B00  EF4E  F025         	goto	l6350
  2599  004B04  0A07               	xorlw	7	; case 4
  2600  004B06  B4D8               	btfsc	status,2,c
  2601  004B08  EF52  F025         	goto	l6352
  2602  004B0C  0A01               	xorlw	1	; case 5
  2603  004B0E  B4D8               	btfsc	status,2,c
  2604  004B10  EF56  F025         	goto	l6354
  2605  004B14  0A03               	xorlw	3	; case 6
  2606  004B16  B4D8               	btfsc	status,2,c
  2607  004B18  EF5A  F025         	goto	l6356
  2608  004B1C  0A01               	xorlw	1	; case 7
  2609  004B1E  B4D8               	btfsc	status,2,c
  2610  004B20  EF5E  F025         	goto	l6358
  2611  004B24  0A0F               	xorlw	15	; case 8
  2612  004B26  B4D8               	btfsc	status,2,c
  2613  004B28  EF62  F025         	goto	l6360
  2614  004B2C  EF98  F025         	goto	l442
  2615  004B30                     l442:
  2616  004B30  0012               	return		;funcret
  2617  004B32                     __end_of_stateMachine:
  2618                           	callstack 0
  2619                           
  2620 ;; *************** function _stopTimeSettingMenu *****************
  2621 ;; Defined at:
  2622 ;;		line 532 in file "fs_menu_controller.c"
  2623 ;; Parameters:    Size  Location     Type
  2624 ;;		None
  2625 ;; Auto vars:     Size  Location     Type
  2626 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2627 ;; Return value:  Size  Location     Type
  2628 ;;                  1    wreg      void 
  2629 ;; Registers used:
  2630 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2631 ;; Tracked objects:
  2632 ;;		On entry : 0/0
  2633 ;;		On exit  : 0/0
  2634 ;;		Unchanged: 0/0
  2635 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2636 ;;      Params:         0       0       0       0       0       0       0
  2637 ;;      Locals:         0      16       0       0       0       0       0
  2638 ;;      Temps:          0       0       0       0       0       0       0
  2639 ;;      Totals:         0      16       0       0       0       0       0
  2640 ;;Total ram usage:       16 bytes
  2641 ;; Hardware stack levels used:    1
  2642 ;; Hardware stack levels required when called:    9
  2643 ;; This function calls:
  2644 ;;		_Lcd_Set_Cursor
  2645 ;;		_Lcd_Write_String
  2646 ;;		_eepromWrite
  2647 ;;		_sprintf
  2648 ;;		_stopMotor
  2649 ;; This function is called by:
  2650 ;;		_stateMachine
  2651 ;; This function uses a non-reentrant model
  2652 ;;
  2653                           
  2654                           	psect	text9
  2655  00409E                     __ptext9:
  2656                           	callstack 0
  2657  00409E                     _stopTimeSettingMenu:
  2658                           	callstack 19
  2659  00409E                     
  2660                           ;fs_menu_controller.c: 534:     char textCursor2[16] = {0};
  2661  00409E  EE20  F0E1         	lfsr	2,stopTimeSettingMenu@textCursor2
  2662  0040A2  0E0F               	movlw	15
  2663  0040A4                     u7151:
  2664  0040A4  6ADE               	clrf	postinc2,c
  2665  0040A6  06E8               	decf	wreg,f,c
  2666  0040A8  E2FD               	bc	u7151
  2667  0040AA                     
  2668                           ;fs_menu_controller.c: 536:     stopMotor();
  2669  0040AA  EC65  F02A         	call	_stopMotor	;wreg free
  2670  0040AE                     
  2671                           ;fs_menu_controller.c: 538:     if (menu_flags.menu_input_flag == 1)
  2672  0040AE  0101               	movlb	1	; () banked
  2673  0040B0  0597               	decf	_menu_flags& (0+255),w,b
  2674  0040B2  A4D8               	btfss	status,2,c
  2675  0040B4  EF5E  F020         	goto	u7161
  2676  0040B8  EF60  F020         	goto	u7160
  2677  0040BC                     u7161:
  2678  0040BC  EF65  F020         	goto	l6046
  2679  0040C0                     u7160:
  2680  0040C0                     
  2681                           ; BSR set to: 1
  2682                           ;fs_menu_controller.c: 539:     {;fs_menu_controller.c: 540:         menu_flags.menu_inp
      +                          ut_flag = 0;
  2683  0040C0  0E00               	movlw	0
  2684  0040C2  6F97               	movwf	_menu_flags& (0+255),b
  2685                           
  2686                           ;fs_menu_controller.c: 541:         menu_selected = SPEED_LIMIT_SETTING;
  2687  0040C4  0E03               	movlw	3
  2688  0040C6  0100               	movlb	0	; () banked
  2689  0040C8  6FFB               	movwf	_menu_selected& (0+255),b
  2690  0040CA                     l6046:
  2691                           
  2692                           ;fs_menu_controller.c: 544:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          stop_time < 250))
  2693  0040CA  0101               	movlb	1	; () banked
  2694  0040CC  059B               	decf	(_menu_flags+4)& (0+255),w,b
  2695  0040CE  A4D8               	btfss	status,2,c
  2696  0040D0  EF6C  F020         	goto	u7171
  2697  0040D4  EF6E  F020         	goto	u7170
  2698  0040D8                     u7171:
  2699  0040D8  EF82  F020         	goto	l6056
  2700  0040DC                     u7170:
  2701  0040DC                     
  2702                           ; BSR set to: 1
  2703  0040DC  0EFA               	movlw	250
  2704  0040DE  0100               	movlb	0	; () banked
  2705  0040E0  61F4               	cpfslt	(_menu_value+1)& (0+255),b
  2706  0040E2  EF75  F020         	goto	u7181
  2707  0040E6  EF77  F020         	goto	u7180
  2708  0040EA                     u7181:
  2709  0040EA  EF82  F020         	goto	l6056
  2710  0040EE                     u7180:
  2711  0040EE                     
  2712                           ; BSR set to: 0
  2713                           ;fs_menu_controller.c: 545:     {;fs_menu_controller.c: 546:         menu_flags.menu_inc
      +                          rease_flag = 0;
  2714  0040EE  0E00               	movlw	0
  2715  0040F0  0101               	movlb	1	; () banked
  2716  0040F2  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  2717  0040F4                     
  2718                           ; BSR set to: 1
  2719                           ;fs_menu_controller.c: 547:         menu_value.stop_time += 10;
  2720  0040F4  0E0A               	movlw	10
  2721  0040F6  0100               	movlb	0	; () banked
  2722  0040F8  27F4               	addwf	(_menu_value+1)& (0+255),f,b
  2723  0040FA                     
  2724                           ; BSR set to: 0
  2725                           ;fs_menu_controller.c: 548:         eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2726  0040FA  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2727  0040FE  0E01               	movlw	1
  2728  004100  EC43  F02B         	call	_eepromWrite
  2729  004104                     l6056:
  2730                           
  2731                           ;fs_menu_controller.c: 551:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          stop_time > 10))
  2732  004104  0101               	movlb	1	; () banked
  2733  004106  059C               	decf	(_menu_flags+5)& (0+255),w,b
  2734  004108  A4D8               	btfss	status,2,c
  2735  00410A  EF89  F020         	goto	u7191
  2736  00410E  EF8B  F020         	goto	u7190
  2737  004112                     u7191:
  2738  004112  EF9F  F020         	goto	l501
  2739  004116                     u7190:
  2740  004116                     
  2741                           ; BSR set to: 1
  2742  004116  0E0A               	movlw	10
  2743  004118  0100               	movlb	0	; () banked
  2744  00411A  65F4               	cpfsgt	(_menu_value+1)& (0+255),b
  2745  00411C  EF92  F020         	goto	u7201
  2746  004120  EF94  F020         	goto	u7200
  2747  004124                     u7201:
  2748  004124  EF9F  F020         	goto	l501
  2749  004128                     u7200:
  2750  004128                     
  2751                           ; BSR set to: 0
  2752                           ;fs_menu_controller.c: 552:     {;fs_menu_controller.c: 553:          menu_flags.menu_de
      +                          crease_flag = 0;
  2753  004128  0E00               	movlw	0
  2754  00412A  0101               	movlb	1	; () banked
  2755  00412C  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  2756  00412E                     
  2757                           ; BSR set to: 1
  2758                           ;fs_menu_controller.c: 554:          menu_value.stop_time -= 10;
  2759  00412E  0E0A               	movlw	10
  2760  004130  0100               	movlb	0	; () banked
  2761  004132  5FF4               	subwf	(_menu_value+1)& (0+255),f,b
  2762  004134                     
  2763                           ; BSR set to: 0
  2764                           ;fs_menu_controller.c: 555:          eepromWrite(0x01,(uint8_t)menu_value.stop_time);
  2765  004134  C0F4  F001         	movff	_menu_value+1,eepromWrite@data
  2766  004138  0E01               	movlw	1
  2767  00413A  EC43  F02B         	call	_eepromWrite
  2768  00413E                     l501:
  2769                           
  2770                           ;fs_menu_controller.c: 557:     Lcd_Set_Cursor(1,1);
  2771  00413E  0E01               	movlw	1
  2772  004140  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2773  004142  0E01               	movlw	1
  2774  004144  EC41  F028         	call	_Lcd_Set_Cursor
  2775  004148                     
  2776                           ;fs_menu_controller.c: 558:     Lcd_Write_String("DURMA ZAMANI  ms");
  2777  004148  0E6F               	movlw	low STR_15
  2778  00414A  6E05               	movwf	Lcd_Write_String@a^0,c
  2779  00414C  0E7F               	movlw	high STR_15
  2780  00414E  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2781  004150  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  2782  004154                     
  2783                           ;fs_menu_controller.c: 559:     Lcd_Set_Cursor(2,1);
  2784  004154  0E01               	movlw	1
  2785  004156  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2786  004158  0E02               	movlw	2
  2787  00415A  EC41  F028         	call	_Lcd_Set_Cursor
  2788  00415E                     
  2789                           ;fs_menu_controller.c: 560:     sprintf(textCursor2,"%d             ",menu_value.stop_ti
      +                          me);
  2790  00415E  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2791  004160  0100               	movlb	0	; () banked
  2792  004162  6FCF               	movwf	sprintf@s& (0+255),b
  2793  004164  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2794  004166  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2795  004168  0E91               	movlw	low STR_16
  2796  00416A  6FD1               	movwf	sprintf@fmt& (0+255),b
  2797  00416C  0E7F               	movlw	high STR_16
  2798  00416E  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2799  004170  C0F4  F0D3         	movff	_menu_value+1,?_sprintf+4
  2800  004174  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2801  004176  EC29  F029         	call	_sprintf	;wreg free
  2802  00417A                     
  2803                           ;fs_menu_controller.c: 561:     Lcd_Write_String(textCursor2);
  2804  00417A  0EE1               	movlw	low stopTimeSettingMenu@textCursor2
  2805  00417C  6E05               	movwf	Lcd_Write_String@a^0,c
  2806  00417E  0E00               	movlw	high stopTimeSettingMenu@textCursor2
  2807  004180  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2808  004182  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  2809  004186                     
  2810                           ;fs_menu_controller.c: 563:     if(timer_value.menu_login_delay == 100)
  2811  004186  0E64               	movlw	100
  2812  004188  0101               	movlb	1	; () banked
  2813  00418A  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  2814  00418C  A4D8               	btfss	status,2,c
  2815  00418E  EFCB  F020         	goto	u7211
  2816  004192  EFCD  F020         	goto	u7210
  2817  004196                     u7211:
  2818  004196  EFD2  F020         	goto	l503
  2819  00419A                     u7210:
  2820  00419A                     
  2821                           ; BSR set to: 1
  2822                           ;fs_menu_controller.c: 564:     {;fs_menu_controller.c: 565:         timer_value.menu_lo
      +                          gin_delay = 0;
  2823  00419A  0E00               	movlw	0
  2824  00419C  6F93               	movwf	(_timer_value+4)& (0+255),b
  2825                           
  2826                           ;fs_menu_controller.c: 566:         menu_selected = PAUSE_MENU;
  2827  00419E  0E06               	movlw	6
  2828  0041A0  0100               	movlb	0	; () banked
  2829  0041A2  6FFB               	movwf	_menu_selected& (0+255),b
  2830  0041A4                     l503:
  2831  0041A4  0012               	return		;funcret
  2832  0041A6                     __end_of_stopTimeSettingMenu:
  2833                           	callstack 0
  2834                           
  2835 ;; *************** function _stopMenu *****************
  2836 ;; Defined at:
  2837 ;;		line 304 in file "fs_menu_controller.c"
  2838 ;; Parameters:    Size  Location     Type
  2839 ;;		None
  2840 ;; Auto vars:     Size  Location     Type
  2841 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  2842 ;; Return value:  Size  Location     Type
  2843 ;;                  1    wreg      void 
  2844 ;; Registers used:
  2845 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2846 ;; Tracked objects:
  2847 ;;		On entry : 0/0
  2848 ;;		On exit  : 0/0
  2849 ;;		Unchanged: 0/0
  2850 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  2851 ;;      Params:         0       0       0       0       0       0       0
  2852 ;;      Locals:         0      16       0       0       0       0       0
  2853 ;;      Temps:          0       0       0       0       0       0       0
  2854 ;;      Totals:         0      16       0       0       0       0       0
  2855 ;;Total ram usage:       16 bytes
  2856 ;; Hardware stack levels used:    1
  2857 ;; Hardware stack levels required when called:    9
  2858 ;; This function calls:
  2859 ;;		_Lcd_Set_Cursor
  2860 ;;		_Lcd_Write_String
  2861 ;;		_sprintf
  2862 ;;		_stopMotor
  2863 ;; This function is called by:
  2864 ;;		_stateMachine
  2865 ;; This function uses a non-reentrant model
  2866 ;;
  2867                           
  2868                           	psect	text10
  2869  00475E                     __ptext10:
  2870                           	callstack 0
  2871  00475E                     _stopMenu:
  2872                           	callstack 19
  2873  00475E                     
  2874                           ;fs_menu_controller.c: 306:     char textCursor2[16] = {0};
  2875  00475E  EE20  F0E1         	lfsr	2,stopMenu@textCursor2
  2876  004762  0E0F               	movlw	15
  2877  004764                     u7291:
  2878  004764  6ADE               	clrf	postinc2,c
  2879  004766  06E8               	decf	wreg,f,c
  2880  004768  E2FD               	bc	u7291
  2881  00476A                     
  2882                           ;fs_menu_controller.c: 308:     startIsClick = 0;
  2883  00476A  0E00               	movlw	0
  2884  00476C  0100               	movlb	0	; () banked
  2885  00476E  6FFE               	movwf	_startIsClick& (0+255),b
  2886  004770                     
  2887                           ; BSR set to: 0
  2888                           ;fs_menu_controller.c: 309:     pauseIsClick = 0;
  2889  004770  0E00               	movlw	0
  2890  004772  6FFF               	movwf	_pauseIsClick& (0+255),b
  2891  004774                     
  2892                           ; BSR set to: 0
  2893                           ;fs_menu_controller.c: 310:     stopIsClick = 1;
  2894  004774  0E01               	movlw	1
  2895  004776  6FFD               	movwf	_stopIsClick& (0+255),b
  2896  004778                     
  2897                           ; BSR set to: 0
  2898                           ;fs_menu_controller.c: 312:     Lcd_Set_Cursor(1,1);
  2899  004778  0E01               	movlw	1
  2900  00477A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2901  00477C  0E01               	movlw	1
  2902  00477E  EC41  F028         	call	_Lcd_Set_Cursor
  2903  004782                     
  2904                           ;fs_menu_controller.c: 313:     Lcd_Write_String("ZAMAN DOLDU     ");
  2905  004782  0E3C               	movlw	low STR_5
  2906  004784  6E05               	movwf	Lcd_Write_String@a^0,c
  2907  004786  0E7F               	movlw	high STR_5
  2908  004788  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2909  00478A  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  2910  00478E                     
  2911                           ;fs_menu_controller.c: 315:     timer_value.remainingSecond = 0;
  2912  00478E  0E00               	movlw	0
  2913  004790  0101               	movlb	1	; () banked
  2914  004792  6F91               	movwf	(_timer_value+2)& (0+255),b
  2915  004794                     
  2916                           ; BSR set to: 1
  2917                           ;fs_menu_controller.c: 316:     timer_value.remainingMinute = 0;
  2918  004794  0E00               	movlw	0
  2919  004796  6F92               	movwf	(_timer_value+3)& (0+255),b
  2920  004798                     
  2921                           ; BSR set to: 1
  2922                           ;fs_menu_controller.c: 318:     Lcd_Set_Cursor(2,1);
  2923  004798  0E01               	movlw	1
  2924  00479A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  2925  00479C  0E02               	movlw	2
  2926  00479E  EC41  F028         	call	_Lcd_Set_Cursor
  2927  0047A2                     
  2928                           ;fs_menu_controller.c: 319:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  2929  0047A2  0EE1               	movlw	low stopMenu@textCursor2
  2930  0047A4  0100               	movlb	0	; () banked
  2931  0047A6  6FCF               	movwf	sprintf@s& (0+255),b
  2932  0047A8  0E00               	movlw	high stopMenu@textCursor2
  2933  0047AA  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  2934  0047AC  0EA1               	movlw	low STR_6
  2935  0047AE  6FD1               	movwf	sprintf@fmt& (0+255),b
  2936  0047B0  0E7F               	movlw	high STR_6
  2937  0047B2  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  2938  0047B4  0101               	movlb	1	; () banked
  2939  0047B6  5192               	movf	(_timer_value+3)& (0+255),w,b
  2940  0047B8  0100               	movlb	0	; () banked
  2941  0047BA  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  2942  0047BC  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  2943  0047BE  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  2944  0047C0  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  2945  0047C2  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  2946  0047C6  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  2947  0047C8  EC29  F029         	call	_sprintf	;wreg free
  2948  0047CC                     
  2949                           ;fs_menu_controller.c: 320:     Lcd_Write_String(textCursor2);
  2950  0047CC  0EE1               	movlw	low stopMenu@textCursor2
  2951  0047CE  6E05               	movwf	Lcd_Write_String@a^0,c
  2952  0047D0  0E00               	movlw	high stopMenu@textCursor2
  2953  0047D2  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  2954  0047D4  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  2955  0047D8                     
  2956                           ;fs_menu_controller.c: 322:     if (menu_flags.menu_start_flag == 1)
  2957  0047D8  0101               	movlb	1	; () banked
  2958  0047DA  0598               	decf	(_menu_flags+1)& (0+255),w,b
  2959  0047DC  A4D8               	btfss	status,2,c
  2960  0047DE  EFF3  F023         	goto	u7301
  2961  0047E2  EFF5  F023         	goto	u7300
  2962  0047E6                     u7301:
  2963  0047E6  EF05  F024         	goto	l6146
  2964  0047EA                     u7300:
  2965  0047EA                     
  2966                           ; BSR set to: 1
  2967                           ;fs_menu_controller.c: 323:     {;fs_menu_controller.c: 324:         menu_flags.menu_sta
      +                          rt_flag = 0;
  2968  0047EA  0E00               	movlw	0
  2969  0047EC  6F98               	movwf	(_menu_flags+1)& (0+255),b
  2970                           
  2971                           ;fs_menu_controller.c: 325:         menu_selected = START_MENU;
  2972  0047EE  0E05               	movlw	5
  2973  0047F0  0100               	movlb	0	; () banked
  2974  0047F2  6FFB               	movwf	_menu_selected& (0+255),b
  2975                           
  2976                           ;fs_menu_controller.c: 327:         startIsClick = 1;
  2977  0047F4  0E01               	movlw	1
  2978  0047F6  6FFE               	movwf	_startIsClick& (0+255),b
  2979                           
  2980                           ;fs_menu_controller.c: 328:         pauseIsClick = 0;
  2981  0047F8  0E00               	movlw	0
  2982  0047FA  6FFF               	movwf	_pauseIsClick& (0+255),b
  2983                           
  2984                           ;fs_menu_controller.c: 329:         stopIsClick = 0;
  2985  0047FC  0E00               	movlw	0
  2986  0047FE  6FFD               	movwf	_stopIsClick& (0+255),b
  2987                           
  2988                           ;fs_menu_controller.c: 330:         timer_value.second = 0;
  2989  004800  0E00               	movlw	0
  2990  004802  0101               	movlb	1	; () banked
  2991  004804  6F8F               	movwf	_timer_value& (0+255),b
  2992                           
  2993                           ;fs_menu_controller.c: 331:         timer_value.minute = 0;
  2994  004806  0E00               	movlw	0
  2995  004808  6F90               	movwf	(_timer_value+1)& (0+255),b
  2996  00480A                     l6146:
  2997                           
  2998                           ; BSR set to: 1
  2999                           ;fs_menu_controller.c: 334:     if ( timer_value.menu_login_delay == 100)
  3000  00480A  0E64               	movlw	100
  3001  00480C  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3002  00480E  A4D8               	btfss	status,2,c
  3003  004810  EF0C  F024         	goto	u7311
  3004  004814  EF0E  F024         	goto	u7310
  3005  004818                     u7311:
  3006  004818  EF13  F024         	goto	l6150
  3007  00481C                     u7310:
  3008  00481C                     
  3009                           ; BSR set to: 1
  3010                           ;fs_menu_controller.c: 335:     {;fs_menu_controller.c: 336:         timer_value.menu_lo
      +                          gin_delay = 0;
  3011  00481C  0E00               	movlw	0
  3012  00481E  6F93               	movwf	(_timer_value+4)& (0+255),b
  3013                           
  3014                           ;fs_menu_controller.c: 337:         menu_selected = DRIVER_TIME_SETTING;
  3015  004820  0E01               	movlw	1
  3016  004822  0100               	movlb	0	; () banked
  3017  004824  6FFB               	movwf	_menu_selected& (0+255),b
  3018  004826                     l6150:
  3019                           
  3020                           ;fs_menu_controller.c: 339: stopMotor();
  3021  004826  EC65  F02A         	call	_stopMotor	;wreg free
  3022  00482A  0012               	return		;funcret
  3023  00482C                     __end_of_stopMenu:
  3024                           	callstack 0
  3025                           
  3026 ;; *************** function _startMenu *****************
  3027 ;; Defined at:
  3028 ;;		line 402 in file "fs_menu_controller.c"
  3029 ;; Parameters:    Size  Location     Type
  3030 ;;		None
  3031 ;; Auto vars:     Size  Location     Type
  3032 ;;		None
  3033 ;; Return value:  Size  Location     Type
  3034 ;;                  1    wreg      void 
  3035 ;; Registers used:
  3036 ;;		wreg, status,2
  3037 ;; Tracked objects:
  3038 ;;		On entry : 0/0
  3039 ;;		On exit  : 0/0
  3040 ;;		Unchanged: 0/0
  3041 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3042 ;;      Params:         0       0       0       0       0       0       0
  3043 ;;      Locals:         0       0       0       0       0       0       0
  3044 ;;      Temps:          0       0       0       0       0       0       0
  3045 ;;      Totals:         0       0       0       0       0       0       0
  3046 ;;Total ram usage:        0 bytes
  3047 ;; Hardware stack levels used:    1
  3048 ;; Hardware stack levels required when called:    1
  3049 ;; This function calls:
  3050 ;;		Nothing
  3051 ;; This function is called by:
  3052 ;;		_stateMachine
  3053 ;; This function uses a non-reentrant model
  3054 ;;
  3055                           
  3056                           	psect	text11
  3057  005766                     __ptext11:
  3058                           	callstack 0
  3059  005766                     _startMenu:
  3060                           	callstack 27
  3061  005766                     
  3062                           ;fs_menu_controller.c: 404:     timer_value.remainingMinute = menu_value.driver_time;
  3063  005766  C0F3  F192         	movff	_menu_value,_timer_value+3
  3064  00576A                     
  3065                           ;fs_menu_controller.c: 405:     timer_value.remainingSecond = 0;
  3066  00576A  0E00               	movlw	0
  3067  00576C  0101               	movlb	1	; () banked
  3068  00576E  6F91               	movwf	(_timer_value+2)& (0+255),b
  3069                           
  3070                           ;fs_menu_controller.c: 406:     startIsClick = 1;
  3071  005770  0E01               	movlw	1
  3072  005772  0100               	movlb	0	; () banked
  3073  005774  6FFE               	movwf	_startIsClick& (0+255),b
  3074                           
  3075                           ;fs_menu_controller.c: 407:     stopIsClick = 0;
  3076  005776  0E00               	movlw	0
  3077  005778  6FFD               	movwf	_stopIsClick& (0+255),b
  3078                           
  3079                           ;fs_menu_controller.c: 408:     menu_selected = MAIN_MENU;
  3080  00577A  0E00               	movlw	0
  3081  00577C  6FFB               	movwf	_menu_selected& (0+255),b
  3082  00577E                     
  3083                           ; BSR set to: 0
  3084  00577E  0012               	return		;funcret
  3085  005780                     __end_of_startMenu:
  3086                           	callstack 0
  3087                           
  3088 ;; *************** function _speedLimitSettingMenu *****************
  3089 ;; Defined at:
  3090 ;;		line 489 in file "fs_menu_controller.c"
  3091 ;; Parameters:    Size  Location     Type
  3092 ;;		None
  3093 ;; Auto vars:     Size  Location     Type
  3094 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3095 ;; Return value:  Size  Location     Type
  3096 ;;                  1    wreg      void 
  3097 ;; Registers used:
  3098 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3099 ;; Tracked objects:
  3100 ;;		On entry : 0/0
  3101 ;;		On exit  : 0/0
  3102 ;;		Unchanged: 0/0
  3103 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3104 ;;      Params:         0       0       0       0       0       0       0
  3105 ;;      Locals:         0      16       0       0       0       0       0
  3106 ;;      Temps:          0       0       0       0       0       0       0
  3107 ;;      Totals:         0      16       0       0       0       0       0
  3108 ;;Total ram usage:       16 bytes
  3109 ;; Hardware stack levels used:    1
  3110 ;; Hardware stack levels required when called:    9
  3111 ;; This function calls:
  3112 ;;		_Lcd_Set_Cursor
  3113 ;;		_Lcd_Write_String
  3114 ;;		_eepromWrite
  3115 ;;		_sprintf
  3116 ;;		_stopMotor
  3117 ;; This function is called by:
  3118 ;;		_stateMachine
  3119 ;; This function uses a non-reentrant model
  3120 ;;
  3121                           
  3122                           	psect	text12
  3123  0042AC                     __ptext12:
  3124                           	callstack 0
  3125  0042AC                     _speedLimitSettingMenu:
  3126                           	callstack 19
  3127  0042AC                     
  3128                           ;fs_menu_controller.c: 491:     char textCursor2[16] = {0};
  3129  0042AC  EE20  F0E1         	lfsr	2,speedLimitSettingMenu@textCursor2
  3130  0042B0  0E0F               	movlw	15
  3131  0042B2                     u7221:
  3132  0042B2  6ADE               	clrf	postinc2,c
  3133  0042B4  06E8               	decf	wreg,f,c
  3134  0042B6  E2FD               	bc	u7221
  3135  0042B8                     
  3136                           ;fs_menu_controller.c: 492:     stopMotor();
  3137  0042B8  EC65  F02A         	call	_stopMotor	;wreg free
  3138  0042BC                     
  3139                           ;fs_menu_controller.c: 494:     if (menu_flags.menu_input_flag == 1)
  3140  0042BC  0101               	movlb	1	; () banked
  3141  0042BE  0597               	decf	_menu_flags& (0+255),w,b
  3142  0042C0  A4D8               	btfss	status,2,c
  3143  0042C2  EF65  F021         	goto	u7231
  3144  0042C6  EF67  F021         	goto	u7230
  3145  0042CA                     u7231:
  3146  0042CA  EF6C  F021         	goto	l6086
  3147  0042CE                     u7230:
  3148  0042CE                     
  3149                           ; BSR set to: 1
  3150                           ;fs_menu_controller.c: 495:     {;fs_menu_controller.c: 496:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3151  0042CE  0E00               	movlw	0
  3152  0042D0  6F97               	movwf	_menu_flags& (0+255),b
  3153                           
  3154                           ;fs_menu_controller.c: 497:         menu_selected = DRIVER_TIME_SETTING;
  3155  0042D2  0E01               	movlw	1
  3156  0042D4  0100               	movlb	0	; () banked
  3157  0042D6  6FFB               	movwf	_menu_selected& (0+255),b
  3158  0042D8                     l6086:
  3159                           
  3160                           ;fs_menu_controller.c: 500:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          speed_limit < 5))
  3161  0042D8  0101               	movlb	1	; () banked
  3162  0042DA  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3163  0042DC  A4D8               	btfss	status,2,c
  3164  0042DE  EF73  F021         	goto	u7241
  3165  0042E2  EF75  F021         	goto	u7240
  3166  0042E6                     u7241:
  3167  0042E6  EF88  F021         	goto	l6096
  3168  0042EA                     u7240:
  3169  0042EA                     
  3170                           ; BSR set to: 1
  3171  0042EA  0E05               	movlw	5
  3172  0042EC  0100               	movlb	0	; () banked
  3173  0042EE  61F5               	cpfslt	(_menu_value+2)& (0+255),b
  3174  0042F0  EF7C  F021         	goto	u7251
  3175  0042F4  EF7E  F021         	goto	u7250
  3176  0042F8                     u7251:
  3177  0042F8  EF88  F021         	goto	l6096
  3178  0042FC                     u7250:
  3179  0042FC                     
  3180                           ; BSR set to: 0
  3181                           ;fs_menu_controller.c: 501:     {;fs_menu_controller.c: 502:         menu_flags.menu_inc
      +                          rease_flag = 0;
  3182  0042FC  0E00               	movlw	0
  3183  0042FE  0101               	movlb	1	; () banked
  3184  004300  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3185  004302                     
  3186                           ; BSR set to: 1
  3187                           ;fs_menu_controller.c: 503:         menu_value.speed_limit += 1;
  3188  004302  0100               	movlb	0	; () banked
  3189  004304  2BF5               	incf	(_menu_value+2)& (0+255),f,b
  3190  004306                     
  3191                           ; BSR set to: 0
  3192                           ;fs_menu_controller.c: 504:         eepromWrite(0x02,menu_value.speed_limit);
  3193  004306  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3194  00430A  0E02               	movlw	2
  3195  00430C  EC43  F02B         	call	_eepromWrite
  3196  004310                     l6096:
  3197                           
  3198                           ;fs_menu_controller.c: 507:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          speed_limit > 1))
  3199  004310  0101               	movlb	1	; () banked
  3200  004312  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3201  004314  A4D8               	btfss	status,2,c
  3202  004316  EF8F  F021         	goto	u7261
  3203  00431A  EF91  F021         	goto	u7260
  3204  00431E                     u7261:
  3205  00431E  EFA4  F021         	goto	l6106
  3206  004322                     u7260:
  3207  004322                     
  3208                           ; BSR set to: 1
  3209  004322  0E01               	movlw	1
  3210  004324  0100               	movlb	0	; () banked
  3211  004326  65F5               	cpfsgt	(_menu_value+2)& (0+255),b
  3212  004328  EF98  F021         	goto	u7271
  3213  00432C  EF9A  F021         	goto	u7270
  3214  004330                     u7271:
  3215  004330  EFA4  F021         	goto	l6106
  3216  004334                     u7270:
  3217  004334                     
  3218                           ; BSR set to: 0
  3219                           ;fs_menu_controller.c: 508:     {;fs_menu_controller.c: 509:          menu_flags.menu_de
      +                          crease_flag = 0;
  3220  004334  0E00               	movlw	0
  3221  004336  0101               	movlb	1	; () banked
  3222  004338  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3223  00433A                     
  3224                           ; BSR set to: 1
  3225                           ;fs_menu_controller.c: 510:          menu_value.speed_limit -= 1;
  3226  00433A  0100               	movlb	0	; () banked
  3227  00433C  07F5               	decf	(_menu_value+2)& (0+255),f,b
  3228  00433E                     
  3229                           ; BSR set to: 0
  3230                           ;fs_menu_controller.c: 511:          eepromWrite(0x02,menu_value.speed_limit);
  3231  00433E  C0F5  F001         	movff	_menu_value+2,eepromWrite@data
  3232  004342  0E02               	movlw	2
  3233  004344  EC43  F02B         	call	_eepromWrite
  3234  004348                     l6106:
  3235                           
  3236                           ;fs_menu_controller.c: 513:     Lcd_Set_Cursor(1,1);
  3237  004348  0E01               	movlw	1
  3238  00434A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3239  00434C  0E01               	movlw	1
  3240  00434E  EC41  F028         	call	_Lcd_Set_Cursor
  3241  004352                     
  3242                           ;fs_menu_controller.c: 514:     Lcd_Write_String("HIZ LiMiTi      ");
  3243  004352  0E1A               	movlw	low STR_13
  3244  004354  6E05               	movwf	Lcd_Write_String@a^0,c
  3245  004356  0E7F               	movlw	high STR_13
  3246  004358  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3247  00435A  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3248  00435E                     
  3249                           ;fs_menu_controller.c: 515:     Lcd_Set_Cursor(2,1);
  3250  00435E  0E01               	movlw	1
  3251  004360  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3252  004362  0E02               	movlw	2
  3253  004364  EC41  F028         	call	_Lcd_Set_Cursor
  3254  004368                     
  3255                           ;fs_menu_controller.c: 516:     sprintf(textCursor2,"%d               ",menu_value.speed
      +                          _limit);
  3256  004368  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3257  00436A  0100               	movlb	0	; () banked
  3258  00436C  6FCF               	movwf	sprintf@s& (0+255),b
  3259  00436E  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3260  004370  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3261  004372  0EF7               	movlw	low STR_14
  3262  004374  6FD1               	movwf	sprintf@fmt& (0+255),b
  3263  004376  0E7E               	movlw	high STR_14
  3264  004378  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3265  00437A  C0F5  F0D3         	movff	_menu_value+2,?_sprintf+4
  3266  00437E  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3267  004380  EC29  F029         	call	_sprintf	;wreg free
  3268  004384                     
  3269                           ;fs_menu_controller.c: 517:     Lcd_Write_String(textCursor2);
  3270  004384  0EE1               	movlw	low speedLimitSettingMenu@textCursor2
  3271  004386  6E05               	movwf	Lcd_Write_String@a^0,c
  3272  004388  0E00               	movlw	high speedLimitSettingMenu@textCursor2
  3273  00438A  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3274  00438C  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3275  004390                     
  3276                           ;fs_menu_controller.c: 519:     if(timer_value.menu_login_delay == 100)
  3277  004390  0E64               	movlw	100
  3278  004392  0101               	movlb	1	; () banked
  3279  004394  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3280  004396  A4D8               	btfss	status,2,c
  3281  004398  EFD0  F021         	goto	u7281
  3282  00439C  EFD2  F021         	goto	u7280
  3283  0043A0                     u7281:
  3284  0043A0  EFD7  F021         	goto	l494
  3285  0043A4                     u7280:
  3286  0043A4                     
  3287                           ; BSR set to: 1
  3288                           ;fs_menu_controller.c: 520:     {;fs_menu_controller.c: 521:         timer_value.menu_lo
      +                          gin_delay = 0;
  3289  0043A4  0E00               	movlw	0
  3290  0043A6  6F93               	movwf	(_timer_value+4)& (0+255),b
  3291                           
  3292                           ;fs_menu_controller.c: 522:         menu_selected = PAUSE_MENU;
  3293  0043A8  0E06               	movlw	6
  3294  0043AA  0100               	movlb	0	; () banked
  3295  0043AC  6FFB               	movwf	_menu_selected& (0+255),b
  3296  0043AE                     l494:
  3297  0043AE  0012               	return		;funcret
  3298  0043B0                     __end_of_speedLimitSettingMenu:
  3299                           	callstack 0
  3300                           
  3301 ;; *************** function _secretMenu *****************
  3302 ;; Defined at:
  3303 ;;		line 417 in file "fs_menu_controller.c"
  3304 ;; Parameters:    Size  Location     Type
  3305 ;;		None
  3306 ;; Auto vars:     Size  Location     Type
  3307 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3308 ;; Return value:  Size  Location     Type
  3309 ;;                  1    wreg      void 
  3310 ;; Registers used:
  3311 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3312 ;; Tracked objects:
  3313 ;;		On entry : 0/0
  3314 ;;		On exit  : 0/0
  3315 ;;		Unchanged: 0/0
  3316 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3317 ;;      Params:         0       0       0       0       0       0       0
  3318 ;;      Locals:         0      16       0       0       0       0       0
  3319 ;;      Temps:          0       0       0       0       0       0       0
  3320 ;;      Totals:         0      16       0       0       0       0       0
  3321 ;;Total ram usage:       16 bytes
  3322 ;; Hardware stack levels used:    1
  3323 ;; Hardware stack levels required when called:    9
  3324 ;; This function calls:
  3325 ;;		_Lcd_Set_Cursor
  3326 ;;		_Lcd_Write_String
  3327 ;;		___fladd
  3328 ;;		___flge
  3329 ;;		___flsub
  3330 ;;		_sprintf
  3331 ;;		_stopMotor
  3332 ;; This function is called by:
  3333 ;;		_stateMachine
  3334 ;; This function uses a non-reentrant model
  3335 ;;
  3336                           
  3337                           	psect	text13
  3338  002CE0                     __ptext13:
  3339                           	callstack 0
  3340  002CE0                     _secretMenu:
  3341                           	callstack 19
  3342  002CE0                     
  3343                           ;fs_menu_controller.c: 419:     char textCursor2[16] = {0};
  3344  002CE0  EE20  F0E1         	lfsr	2,secretMenu@textCursor2
  3345  002CE4  0E0F               	movlw	15
  3346  002CE6                     u7411:
  3347  002CE6  6ADE               	clrf	postinc2,c
  3348  002CE8  06E8               	decf	wreg,f,c
  3349  002CEA  E2FD               	bc	u7411
  3350  002CEC                     
  3351                           ;fs_menu_controller.c: 421:     stopMotor();
  3352  002CEC  EC65  F02A         	call	_stopMotor	;wreg free
  3353  002CF0                     
  3354                           ;fs_menu_controller.c: 423:     if (menu_flags.menu_input_flag == 1)
  3355  002CF0  0101               	movlb	1	; () banked
  3356  002CF2  0597               	decf	_menu_flags& (0+255),w,b
  3357  002CF4  A4D8               	btfss	status,2,c
  3358  002CF6  EF7F  F016         	goto	u7421
  3359  002CFA  EF81  F016         	goto	u7420
  3360  002CFE                     u7421:
  3361  002CFE  EF8F  F016         	goto	l6210
  3362  002D02                     u7420:
  3363  002D02                     
  3364                           ; BSR set to: 1
  3365                           ;fs_menu_controller.c: 424:     {;fs_menu_controller.c: 425:         menu_flags.menu_inp
      +                          ut_flag = 0;
  3366  002D02  0E00               	movlw	0
  3367  002D04  6F97               	movwf	_menu_flags& (0+255),b
  3368  002D06                     
  3369                           ; BSR set to: 1
  3370                           ;fs_menu_controller.c: 426:         secretMenuCounter++;
  3371  002D06  0100               	movlb	0	; () banked
  3372  002D08  2BFC               	incf	_secretMenuCounter& (0+255),f,b
  3373  002D0A                     
  3374                           ; BSR set to: 0
  3375                           ;fs_menu_controller.c: 428:         if (secretMenuCounter >2)
  3376  002D0A  0E02               	movlw	2
  3377  002D0C  65FC               	cpfsgt	_secretMenuCounter& (0+255),b
  3378  002D0E  EF8B  F016         	goto	u7431
  3379  002D12  EF8D  F016         	goto	u7430
  3380  002D16                     u7431:
  3381  002D16  EF8F  F016         	goto	l6210
  3382  002D1A                     u7430:
  3383  002D1A                     
  3384                           ; BSR set to: 0
  3385                           ;fs_menu_controller.c: 429:         {;fs_menu_controller.c: 430:             secretMenuC
      +                          ounter = 1;
  3386  002D1A  0E01               	movlw	1
  3387  002D1C  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3388  002D1E                     l6210:
  3389                           
  3390                           ;fs_menu_controller.c: 434:     if (secretMenuCounter == 1)
  3391  002D1E  0100               	movlb	0	; () banked
  3392  002D20  05FC               	decf	_secretMenuCounter& (0+255),w,b
  3393  002D22  A4D8               	btfss	status,2,c
  3394  002D24  EF96  F016         	goto	u7441
  3395  002D28  EF98  F016         	goto	u7440
  3396  002D2C                     u7441:
  3397  002D2C  EF2C  F017         	goto	l6238
  3398  002D30                     u7440:
  3399  002D30                     
  3400                           ; BSR set to: 0
  3401                           ;fs_menu_controller.c: 435:     {;fs_menu_controller.c: 436:         Lcd_Set_Cursor(1,1)
      +                          ;
  3402  002D30  0E01               	movlw	1
  3403  002D32  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3404  002D34  0E01               	movlw	1
  3405  002D36  EC41  F028         	call	_Lcd_Set_Cursor
  3406  002D3A                     
  3407                           ;fs_menu_controller.c: 437:         Lcd_Write_String("PID PARAM       ");
  3408  002D3A  0E09               	movlw	low STR_9
  3409  002D3C  6E05               	movwf	Lcd_Write_String@a^0,c
  3410  002D3E  0E7F               	movlw	high STR_9
  3411  002D40  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3412  002D42  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3413  002D46                     
  3414                           ;fs_menu_controller.c: 438:         Lcd_Set_Cursor(2,1);
  3415  002D46  0E01               	movlw	1
  3416  002D48  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3417  002D4A  0E02               	movlw	2
  3418  002D4C  EC41  F028         	call	_Lcd_Set_Cursor
  3419  002D50                     
  3420                           ;fs_menu_controller.c: 439:         sprintf(textCursor2,"Kp:%5.1f     ",KP);
  3421  002D50  0EE1               	movlw	low secretMenu@textCursor2
  3422  002D52  0100               	movlb	0	; () banked
  3423  002D54  6FCF               	movwf	sprintf@s& (0+255),b
  3424  002D56  0E00               	movlw	high secretMenu@textCursor2
  3425  002D58  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3426  002D5A  0ED0               	movlw	low STR_10
  3427  002D5C  6FD1               	movwf	sprintf@fmt& (0+255),b
  3428  002D5E  0E7F               	movlw	high STR_10
  3429  002D60  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3430  002D62  C1CF  F0D3         	movff	_KP@fs_speed_controller$F1838,?_sprintf+4
  3431  002D66  C1D0  F0D4         	movff	_KP@fs_speed_controller$F1838+1,?_sprintf+5
  3432  002D6A  C1D1  F0D5         	movff	_KP@fs_speed_controller$F1838+2,?_sprintf+6
  3433  002D6E  C1D2  F0D6         	movff	_KP@fs_speed_controller$F1838+3,?_sprintf+7
  3434  002D72  EC29  F029         	call	_sprintf	;wreg free
  3435  002D76                     
  3436                           ;fs_menu_controller.c: 440:         Lcd_Write_String(textCursor2);
  3437  002D76  0EE1               	movlw	low secretMenu@textCursor2
  3438  002D78  6E05               	movwf	Lcd_Write_String@a^0,c
  3439  002D7A  0E00               	movlw	high secretMenu@textCursor2
  3440  002D7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3441  002D7E  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3442  002D82                     
  3443                           ;fs_menu_controller.c: 442:         if ((menu_flags.menu_increase_flag == 1) && (KP < 2.
      +                          5))
  3444  002D82  0101               	movlb	1	; () banked
  3445  002D84  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3446  002D86  A4D8               	btfss	status,2,c
  3447  002D88  EFC8  F016         	goto	u7451
  3448  002D8C  EFCA  F016         	goto	u7450
  3449  002D90                     u7451:
  3450  002D90  EF00  F017         	goto	l6230
  3451  002D94                     u7450:
  3452  002D94                     
  3453                           ; BSR set to: 1
  3454  002D94  C1CF  F035         	movff	_KP@fs_speed_controller$F1838,___flge@ff1
  3455  002D98  C1D0  F036         	movff	_KP@fs_speed_controller$F1838+1,___flge@ff1+1
  3456  002D9C  C1D1  F037         	movff	_KP@fs_speed_controller$F1838+2,___flge@ff1+2
  3457  002DA0  C1D2  F038         	movff	_KP@fs_speed_controller$F1838+3,___flge@ff1+3
  3458  002DA4  0E00               	movlw	0
  3459  002DA6  6E39               	movwf	___flge@ff2^0,c
  3460  002DA8  0E00               	movlw	0
  3461  002DAA  6E3A               	movwf	(___flge@ff2+1)^0,c
  3462  002DAC  0E20               	movlw	32
  3463  002DAE  6E3B               	movwf	(___flge@ff2+2)^0,c
  3464  002DB0  0E40               	movlw	64
  3465  002DB2  6E3C               	movwf	(___flge@ff2+3)^0,c
  3466  002DB4  ECD8  F021         	call	___flge	;wreg free
  3467  002DB8  B0D8               	btfsc	status,0,c
  3468  002DBA  EFE1  F016         	goto	u7461
  3469  002DBE  EFE3  F016         	goto	u7460
  3470  002DC2                     u7461:
  3471  002DC2  EF00  F017         	goto	l6230
  3472  002DC6                     u7460:
  3473  002DC6                     
  3474                           ;fs_menu_controller.c: 443:         {;fs_menu_controller.c: 444:             menu_flags.
      +                          menu_increase_flag = 0;
  3475  002DC6  0E00               	movlw	0
  3476  002DC8  0101               	movlb	1	; () banked
  3477  002DCA  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3478  002DCC                     
  3479                           ; BSR set to: 1
  3480                           ;fs_menu_controller.c: 445:             KP += 0.1;
  3481  002DCC  C1CF  F035         	movff	_KP@fs_speed_controller$F1838,___fladd@b
  3482  002DD0  C1D0  F036         	movff	_KP@fs_speed_controller$F1838+1,___fladd@b+1
  3483  002DD4  C1D1  F037         	movff	_KP@fs_speed_controller$F1838+2,___fladd@b+2
  3484  002DD8  C1D2  F038         	movff	_KP@fs_speed_controller$F1838+3,___fladd@b+3
  3485  002DDC  0ECD               	movlw	205
  3486  002DDE  6E39               	movwf	___fladd@a^0,c
  3487  002DE0  0ECC               	movlw	204
  3488  002DE2  6E3A               	movwf	(___fladd@a+1)^0,c
  3489  002DE4  0ECC               	movlw	204
  3490  002DE6  6E3B               	movwf	(___fladd@a+2)^0,c
  3491  002DE8  0E3D               	movlw	61
  3492  002DEA  6E3C               	movwf	(___fladd@a+3)^0,c
  3493  002DEC  EC49  F00D         	call	___fladd	;wreg free
  3494  002DF0  C035  F1CF         	movff	?___fladd,_KP@fs_speed_controller$F1838
  3495  002DF4  C036  F1D0         	movff	?___fladd+1,_KP@fs_speed_controller$F1838+1
  3496  002DF8  C037  F1D1         	movff	?___fladd+2,_KP@fs_speed_controller$F1838+2
  3497  002DFC  C038  F1D2         	movff	?___fladd+3,_KP@fs_speed_controller$F1838+3
  3498  002E00                     l6230:
  3499                           
  3500                           ;fs_menu_controller.c: 448:         if ((menu_flags.menu_decrease_flag == 1) && (KP >= 0
      +                          ))
  3501  002E00  0101               	movlb	1	; () banked
  3502  002E02  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3503  002E04  A4D8               	btfss	status,2,c
  3504  002E06  EF07  F017         	goto	u7471
  3505  002E0A  EF09  F017         	goto	u7470
  3506  002E0E                     u7471:
  3507  002E0E  EF2C  F017         	goto	l6238
  3508  002E12                     u7470:
  3509  002E12                     
  3510                           ; BSR set to: 1
  3511  002E12  BFD2               	btfsc	(_KP@fs_speed_controller$F1838+3)& (0+255),7,b
  3512  002E14  EF0E  F017         	goto	u7481
  3513  002E18  EF10  F017         	goto	u7480
  3514  002E1C                     u7481:
  3515  002E1C  EF2C  F017         	goto	l6238
  3516  002E20                     u7480:
  3517  002E20                     
  3518                           ; BSR set to: 1
  3519                           ;fs_menu_controller.c: 449:         {;fs_menu_controller.c: 450:             menu_flags.
      +                          menu_decrease_flag = 0;
  3520  002E20  0E00               	movlw	0
  3521  002E22  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3522  002E24                     
  3523                           ; BSR set to: 1
  3524                           ;fs_menu_controller.c: 451:              KP -= 0.1;
  3525  002E24  C1CF  F045         	movff	_KP@fs_speed_controller$F1838,___flsub@b
  3526  002E28  C1D0  F046         	movff	_KP@fs_speed_controller$F1838+1,___flsub@b+1
  3527  002E2C  C1D1  F047         	movff	_KP@fs_speed_controller$F1838+2,___flsub@b+2
  3528  002E30  C1D2  F048         	movff	_KP@fs_speed_controller$F1838+3,___flsub@b+3
  3529  002E34  0ECD               	movlw	205
  3530  002E36  6E49               	movwf	___flsub@a^0,c
  3531  002E38  0ECC               	movlw	204
  3532  002E3A  6E4A               	movwf	(___flsub@a+1)^0,c
  3533  002E3C  0ECC               	movlw	204
  3534  002E3E  6E4B               	movwf	(___flsub@a+2)^0,c
  3535  002E40  0E3D               	movlw	61
  3536  002E42  6E4C               	movwf	(___flsub@a+3)^0,c
  3537  002E44  ECA0  F029         	call	___flsub	;wreg free
  3538  002E48  C045  F1CF         	movff	?___flsub,_KP@fs_speed_controller$F1838
  3539  002E4C  C046  F1D0         	movff	?___flsub+1,_KP@fs_speed_controller$F1838+1
  3540  002E50  C047  F1D1         	movff	?___flsub+2,_KP@fs_speed_controller$F1838+2
  3541  002E54  C048  F1D2         	movff	?___flsub+3,_KP@fs_speed_controller$F1838+3
  3542  002E58                     l6238:
  3543                           
  3544                           ;fs_menu_controller.c: 455:     if (secretMenuCounter == 2)
  3545  002E58  0E02               	movlw	2
  3546  002E5A  0100               	movlb	0	; () banked
  3547  002E5C  19FC               	xorwf	_secretMenuCounter& (0+255),w,b
  3548  002E5E  A4D8               	btfss	status,2,c
  3549  002E60  EF34  F017         	goto	u7491
  3550  002E64  EF36  F017         	goto	u7490
  3551  002E68                     u7491:
  3552  002E68  EFCA  F017         	goto	l6266
  3553  002E6C                     u7490:
  3554  002E6C                     
  3555                           ; BSR set to: 0
  3556                           ;fs_menu_controller.c: 456:     {;fs_menu_controller.c: 457:         Lcd_Set_Cursor(1,1)
      +                          ;
  3557  002E6C  0E01               	movlw	1
  3558  002E6E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3559  002E70  0E01               	movlw	1
  3560  002E72  EC41  F028         	call	_Lcd_Set_Cursor
  3561  002E76                     
  3562                           ;fs_menu_controller.c: 458:         Lcd_Write_String("PID PARAM       ");
  3563  002E76  0E09               	movlw	low STR_9
  3564  002E78  6E05               	movwf	Lcd_Write_String@a^0,c
  3565  002E7A  0E7F               	movlw	high STR_9
  3566  002E7C  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3567  002E7E  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3568  002E82                     
  3569                           ;fs_menu_controller.c: 459:         Lcd_Set_Cursor(2,1);
  3570  002E82  0E01               	movlw	1
  3571  002E84  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3572  002E86  0E02               	movlw	2
  3573  002E88  EC41  F028         	call	_Lcd_Set_Cursor
  3574  002E8C                     
  3575                           ;fs_menu_controller.c: 460:         sprintf(textCursor2,"Kd:%5.1f    ",KD);
  3576  002E8C  0EE1               	movlw	low secretMenu@textCursor2
  3577  002E8E  0100               	movlb	0	; () banked
  3578  002E90  6FCF               	movwf	sprintf@s& (0+255),b
  3579  002E92  0E00               	movlw	high secretMenu@textCursor2
  3580  002E94  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3581  002E96  0EDE               	movlw	low STR_12
  3582  002E98  6FD1               	movwf	sprintf@fmt& (0+255),b
  3583  002E9A  0E7F               	movlw	high STR_12
  3584  002E9C  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3585  002E9E  C1CB  F0D3         	movff	_KD@fs_speed_controller$F1839,?_sprintf+4
  3586  002EA2  C1CC  F0D4         	movff	_KD@fs_speed_controller$F1839+1,?_sprintf+5
  3587  002EA6  C1CD  F0D5         	movff	_KD@fs_speed_controller$F1839+2,?_sprintf+6
  3588  002EAA  C1CE  F0D6         	movff	_KD@fs_speed_controller$F1839+3,?_sprintf+7
  3589  002EAE  EC29  F029         	call	_sprintf	;wreg free
  3590  002EB2                     
  3591                           ;fs_menu_controller.c: 461:         Lcd_Write_String(textCursor2);
  3592  002EB2  0EE1               	movlw	low secretMenu@textCursor2
  3593  002EB4  6E05               	movwf	Lcd_Write_String@a^0,c
  3594  002EB6  0E00               	movlw	high secretMenu@textCursor2
  3595  002EB8  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3596  002EBA  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3597  002EBE                     
  3598                           ;fs_menu_controller.c: 463:         if ((menu_flags.menu_increase_flag == 1) && (KD < 2.
      +                          5))
  3599  002EBE  0101               	movlb	1	; () banked
  3600  002EC0  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3601  002EC2  A4D8               	btfss	status,2,c
  3602  002EC4  EF66  F017         	goto	u7501
  3603  002EC8  EF68  F017         	goto	u7500
  3604  002ECC                     u7501:
  3605  002ECC  EF9E  F017         	goto	l6258
  3606  002ED0                     u7500:
  3607  002ED0                     
  3608                           ; BSR set to: 1
  3609  002ED0  C1CB  F035         	movff	_KD@fs_speed_controller$F1839,___flge@ff1
  3610  002ED4  C1CC  F036         	movff	_KD@fs_speed_controller$F1839+1,___flge@ff1+1
  3611  002ED8  C1CD  F037         	movff	_KD@fs_speed_controller$F1839+2,___flge@ff1+2
  3612  002EDC  C1CE  F038         	movff	_KD@fs_speed_controller$F1839+3,___flge@ff1+3
  3613  002EE0  0E00               	movlw	0
  3614  002EE2  6E39               	movwf	___flge@ff2^0,c
  3615  002EE4  0E00               	movlw	0
  3616  002EE6  6E3A               	movwf	(___flge@ff2+1)^0,c
  3617  002EE8  0E20               	movlw	32
  3618  002EEA  6E3B               	movwf	(___flge@ff2+2)^0,c
  3619  002EEC  0E40               	movlw	64
  3620  002EEE  6E3C               	movwf	(___flge@ff2+3)^0,c
  3621  002EF0  ECD8  F021         	call	___flge	;wreg free
  3622  002EF4  B0D8               	btfsc	status,0,c
  3623  002EF6  EF7F  F017         	goto	u7511
  3624  002EFA  EF81  F017         	goto	u7510
  3625  002EFE                     u7511:
  3626  002EFE  EF9E  F017         	goto	l6258
  3627  002F02                     u7510:
  3628  002F02                     
  3629                           ;fs_menu_controller.c: 464:         {;fs_menu_controller.c: 465:             menu_flags.
      +                          menu_increase_flag = 0;
  3630  002F02  0E00               	movlw	0
  3631  002F04  0101               	movlb	1	; () banked
  3632  002F06  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  3633  002F08                     
  3634                           ; BSR set to: 1
  3635                           ;fs_menu_controller.c: 466:             KD += 0.1;
  3636  002F08  C1CB  F035         	movff	_KD@fs_speed_controller$F1839,___fladd@b
  3637  002F0C  C1CC  F036         	movff	_KD@fs_speed_controller$F1839+1,___fladd@b+1
  3638  002F10  C1CD  F037         	movff	_KD@fs_speed_controller$F1839+2,___fladd@b+2
  3639  002F14  C1CE  F038         	movff	_KD@fs_speed_controller$F1839+3,___fladd@b+3
  3640  002F18  0ECD               	movlw	205
  3641  002F1A  6E39               	movwf	___fladd@a^0,c
  3642  002F1C  0ECC               	movlw	204
  3643  002F1E  6E3A               	movwf	(___fladd@a+1)^0,c
  3644  002F20  0ECC               	movlw	204
  3645  002F22  6E3B               	movwf	(___fladd@a+2)^0,c
  3646  002F24  0E3D               	movlw	61
  3647  002F26  6E3C               	movwf	(___fladd@a+3)^0,c
  3648  002F28  EC49  F00D         	call	___fladd	;wreg free
  3649  002F2C  C035  F1CB         	movff	?___fladd,_KD@fs_speed_controller$F1839
  3650  002F30  C036  F1CC         	movff	?___fladd+1,_KD@fs_speed_controller$F1839+1
  3651  002F34  C037  F1CD         	movff	?___fladd+2,_KD@fs_speed_controller$F1839+2
  3652  002F38  C038  F1CE         	movff	?___fladd+3,_KD@fs_speed_controller$F1839+3
  3653  002F3C                     l6258:
  3654                           
  3655                           ;fs_menu_controller.c: 469:         if ((menu_flags.menu_decrease_flag == 1) && (KD >= 0
      +                          ))
  3656  002F3C  0101               	movlb	1	; () banked
  3657  002F3E  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3658  002F40  A4D8               	btfss	status,2,c
  3659  002F42  EFA5  F017         	goto	u7521
  3660  002F46  EFA7  F017         	goto	u7520
  3661  002F4A                     u7521:
  3662  002F4A  EFCA  F017         	goto	l6266
  3663  002F4E                     u7520:
  3664  002F4E                     
  3665                           ; BSR set to: 1
  3666  002F4E  BFCE               	btfsc	(_KD@fs_speed_controller$F1839+3)& (0+255),7,b
  3667  002F50  EFAC  F017         	goto	u7531
  3668  002F54  EFAE  F017         	goto	u7530
  3669  002F58                     u7531:
  3670  002F58  EFCA  F017         	goto	l6266
  3671  002F5C                     u7530:
  3672  002F5C                     
  3673                           ; BSR set to: 1
  3674                           ;fs_menu_controller.c: 470:         {;fs_menu_controller.c: 471:             menu_flags.
      +                          menu_decrease_flag = 0;
  3675  002F5C  0E00               	movlw	0
  3676  002F5E  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  3677  002F60                     
  3678                           ; BSR set to: 1
  3679                           ;fs_menu_controller.c: 472:              KD -= 0.1;
  3680  002F60  C1CB  F045         	movff	_KD@fs_speed_controller$F1839,___flsub@b
  3681  002F64  C1CC  F046         	movff	_KD@fs_speed_controller$F1839+1,___flsub@b+1
  3682  002F68  C1CD  F047         	movff	_KD@fs_speed_controller$F1839+2,___flsub@b+2
  3683  002F6C  C1CE  F048         	movff	_KD@fs_speed_controller$F1839+3,___flsub@b+3
  3684  002F70  0ECD               	movlw	205
  3685  002F72  6E49               	movwf	___flsub@a^0,c
  3686  002F74  0ECC               	movlw	204
  3687  002F76  6E4A               	movwf	(___flsub@a+1)^0,c
  3688  002F78  0ECC               	movlw	204
  3689  002F7A  6E4B               	movwf	(___flsub@a+2)^0,c
  3690  002F7C  0E3D               	movlw	61
  3691  002F7E  6E4C               	movwf	(___flsub@a+3)^0,c
  3692  002F80  ECA0  F029         	call	___flsub	;wreg free
  3693  002F84  C045  F1CB         	movff	?___flsub,_KD@fs_speed_controller$F1839
  3694  002F88  C046  F1CC         	movff	?___flsub+1,_KD@fs_speed_controller$F1839+1
  3695  002F8C  C047  F1CD         	movff	?___flsub+2,_KD@fs_speed_controller$F1839+2
  3696  002F90  C048  F1CE         	movff	?___flsub+3,_KD@fs_speed_controller$F1839+3
  3697  002F94                     l6266:
  3698                           
  3699                           ;fs_menu_controller.c: 476:     if ( timer_value.menu_login_delay == 100)
  3700  002F94  0E64               	movlw	100
  3701  002F96  0101               	movlb	1	; () banked
  3702  002F98  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3703  002F9A  A4D8               	btfss	status,2,c
  3704  002F9C  EFD2  F017         	goto	u7541
  3705  002FA0  EFD4  F017         	goto	u7540
  3706  002FA4                     u7541:
  3707  002FA4  EFD9  F017         	goto	l485
  3708  002FA8                     u7540:
  3709  002FA8                     
  3710                           ; BSR set to: 1
  3711                           ;fs_menu_controller.c: 477:     {;fs_menu_controller.c: 478:         timer_value.menu_lo
      +                          gin_delay = 0;
  3712  002FA8  0E00               	movlw	0
  3713  002FAA  6F93               	movwf	(_timer_value+4)& (0+255),b
  3714                           
  3715                           ;fs_menu_controller.c: 479:         menu_selected = PAUSE_MENU;
  3716  002FAC  0E06               	movlw	6
  3717  002FAE  0100               	movlb	0	; () banked
  3718  002FB0  6FFB               	movwf	_menu_selected& (0+255),b
  3719  002FB2                     l485:
  3720  002FB2  0012               	return		;funcret
  3721  002FB4                     __end_of_secretMenu:
  3722                           	callstack 0
  3723                           
  3724 ;; *************** function _pauseMenu *****************
  3725 ;; Defined at:
  3726 ;;		line 349 in file "fs_menu_controller.c"
  3727 ;; Parameters:    Size  Location     Type
  3728 ;;		None
  3729 ;; Auto vars:     Size  Location     Type
  3730 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3731 ;; Return value:  Size  Location     Type
  3732 ;;                  1    wreg      void 
  3733 ;; Registers used:
  3734 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3735 ;; Tracked objects:
  3736 ;;		On entry : 0/0
  3737 ;;		On exit  : 0/0
  3738 ;;		Unchanged: 0/0
  3739 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3740 ;;      Params:         0       0       0       0       0       0       0
  3741 ;;      Locals:         0      16       0       0       0       0       0
  3742 ;;      Temps:          0       0       0       0       0       0       0
  3743 ;;      Totals:         0      16       0       0       0       0       0
  3744 ;;Total ram usage:       16 bytes
  3745 ;; Hardware stack levels used:    1
  3746 ;; Hardware stack levels required when called:    9
  3747 ;; This function calls:
  3748 ;;		_Lcd_Set_Cursor
  3749 ;;		_Lcd_Write_String
  3750 ;;		_sprintf
  3751 ;;		_stopMotor
  3752 ;; This function is called by:
  3753 ;;		_stateMachine
  3754 ;; This function uses a non-reentrant model
  3755 ;;
  3756                           
  3757                           	psect	text14
  3758  003D20                     __ptext14:
  3759                           	callstack 0
  3760  003D20                     _pauseMenu:
  3761                           	callstack 19
  3762  003D20                     
  3763                           ;fs_menu_controller.c: 351:     char textCursor2[16] = {0};
  3764  003D20  EE20  F0E1         	lfsr	2,pauseMenu@textCursor2
  3765  003D24  0E0F               	movlw	15
  3766  003D26                     u7321:
  3767  003D26  6ADE               	clrf	postinc2,c
  3768  003D28  06E8               	decf	wreg,f,c
  3769  003D2A  E2FD               	bc	u7321
  3770  003D2C                     
  3771                           ;fs_menu_controller.c: 353:     startIsClick = 0;
  3772  003D2C  0E00               	movlw	0
  3773  003D2E  0100               	movlb	0	; () banked
  3774  003D30  6FFE               	movwf	_startIsClick& (0+255),b
  3775  003D32                     
  3776                           ; BSR set to: 0
  3777                           ;fs_menu_controller.c: 357:     Lcd_Set_Cursor(1,1);
  3778  003D32  0E01               	movlw	1
  3779  003D34  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3780  003D36  0E01               	movlw	1
  3781  003D38  EC41  F028         	call	_Lcd_Set_Cursor
  3782  003D3C                     
  3783                           ;fs_menu_controller.c: 358:     Lcd_Write_String("HAREKET DURDU   ");
  3784  003D3C  0E4D               	movlw	low STR_7
  3785  003D3E  6E05               	movwf	Lcd_Write_String@a^0,c
  3786  003D40  0E7F               	movlw	high STR_7
  3787  003D42  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3788  003D44  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3789  003D48                     
  3790                           ;fs_menu_controller.c: 359:     Lcd_Set_Cursor(2,1);
  3791  003D48  0E01               	movlw	1
  3792  003D4A  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  3793  003D4C  0E02               	movlw	2
  3794  003D4E  EC41  F028         	call	_Lcd_Set_Cursor
  3795  003D52                     
  3796                           ;fs_menu_controller.c: 360:     sprintf(textCursor2,"      %d:%d    ",timer_value.remain
      +                          ingMinute,timer_value.remainingSecond);
  3797  003D52  0EE1               	movlw	low pauseMenu@textCursor2
  3798  003D54  0100               	movlb	0	; () banked
  3799  003D56  6FCF               	movwf	sprintf@s& (0+255),b
  3800  003D58  0E00               	movlw	high pauseMenu@textCursor2
  3801  003D5A  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  3802  003D5C  0EA1               	movlw	low STR_6
  3803  003D5E  6FD1               	movwf	sprintf@fmt& (0+255),b
  3804  003D60  0E7F               	movlw	high STR_6
  3805  003D62  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  3806  003D64  0101               	movlb	1	; () banked
  3807  003D66  5192               	movf	(_timer_value+3)& (0+255),w,b
  3808  003D68  0100               	movlb	0	; () banked
  3809  003D6A  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  3810  003D6C  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  3811  003D6E  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  3812  003D70  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  3813  003D72  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  3814  003D76  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  3815  003D78  EC29  F029         	call	_sprintf	;wreg free
  3816  003D7C                     
  3817                           ;fs_menu_controller.c: 361:     Lcd_Write_String(textCursor2);
  3818  003D7C  0EE1               	movlw	low pauseMenu@textCursor2
  3819  003D7E  6E05               	movwf	Lcd_Write_String@a^0,c
  3820  003D80  0E00               	movlw	high pauseMenu@textCursor2
  3821  003D82  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  3822  003D84  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  3823  003D88                     
  3824                           ;fs_menu_controller.c: 363:     if (menu_flags.menu_start_flag == 1)
  3825  003D88  0101               	movlb	1	; () banked
  3826  003D8A  0598               	decf	(_menu_flags+1)& (0+255),w,b
  3827  003D8C  A4D8               	btfss	status,2,c
  3828  003D8E  EFCB  F01E         	goto	u7331
  3829  003D92  EFCD  F01E         	goto	u7330
  3830  003D96                     u7331:
  3831  003D96  EFD8  F01E         	goto	l464
  3832  003D9A                     u7330:
  3833  003D9A                     
  3834                           ; BSR set to: 1
  3835                           ;fs_menu_controller.c: 364:     {;fs_menu_controller.c: 365:         menu_flags.menu_sta
      +                          rt_flag = 0;
  3836  003D9A  0E00               	movlw	0
  3837  003D9C  6F98               	movwf	(_menu_flags+1)& (0+255),b
  3838                           
  3839                           ;fs_menu_controller.c: 366:         menu_selected = MAIN_MENU;
  3840  003D9E  0E00               	movlw	0
  3841  003DA0  0100               	movlb	0	; () banked
  3842  003DA2  6FFB               	movwf	_menu_selected& (0+255),b
  3843                           
  3844                           ;fs_menu_controller.c: 368:         startIsClick = 1;
  3845  003DA4  0E01               	movlw	1
  3846  003DA6  6FFE               	movwf	_startIsClick& (0+255),b
  3847                           
  3848                           ;fs_menu_controller.c: 369:         pauseIsClick = 0;
  3849  003DA8  0E00               	movlw	0
  3850  003DAA  6FFF               	movwf	_pauseIsClick& (0+255),b
  3851                           
  3852                           ;fs_menu_controller.c: 370:         stopIsClick = 0;
  3853  003DAC  0E00               	movlw	0
  3854  003DAE  6FFD               	movwf	_stopIsClick& (0+255),b
  3855  003DB0                     l464:
  3856                           
  3857                           ;fs_menu_controller.c: 373:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == PAUSE_MENU))
  3858  003DB0  0100               	movlb	0	; () banked
  3859  003DB2  51FE               	movf	_startIsClick& (0+255),w,b
  3860  003DB4  A4D8               	btfss	status,2,c
  3861  003DB6  EFDF  F01E         	goto	u7341
  3862  003DBA  EFE1  F01E         	goto	u7340
  3863  003DBE                     u7341:
  3864  003DBE  EF03  F01F         	goto	l6184
  3865  003DC2                     u7340:
  3866  003DC2                     
  3867                           ; BSR set to: 0
  3868  003DC2  51FF               	movf	_pauseIsClick& (0+255),w,b
  3869  003DC4  A4D8               	btfss	status,2,c
  3870  003DC6  EFE7  F01E         	goto	u7351
  3871  003DCA  EFE9  F01E         	goto	u7350
  3872  003DCE                     u7351:
  3873  003DCE  EF03  F01F         	goto	l6184
  3874  003DD2                     u7350:
  3875  003DD2                     
  3876                           ; BSR set to: 0
  3877  003DD2  05FD               	decf	_stopIsClick& (0+255),w,b
  3878  003DD4  A4D8               	btfss	status,2,c
  3879  003DD6  EFEF  F01E         	goto	u7361
  3880  003DDA  EFF1  F01E         	goto	u7360
  3881  003DDE                     u7361:
  3882  003DDE  EF03  F01F         	goto	l6184
  3883  003DE2                     u7360:
  3884  003DE2                     
  3885                           ; BSR set to: 0
  3886  003DE2  0E06               	movlw	6
  3887  003DE4  19FB               	xorwf	_menu_selected& (0+255),w,b
  3888  003DE6  A4D8               	btfss	status,2,c
  3889  003DE8  EFF8  F01E         	goto	u7371
  3890  003DEC  EFFA  F01E         	goto	u7370
  3891  003DF0                     u7371:
  3892  003DF0  EF03  F01F         	goto	l6184
  3893  003DF4                     u7370:
  3894  003DF4                     
  3895                           ; BSR set to: 0
  3896                           ;fs_menu_controller.c: 374:     {;fs_menu_controller.c: 375:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  3897  003DF4  C0F3  F192         	movff	_menu_value,_timer_value+3
  3898  003DF8                     
  3899                           ; BSR set to: 0
  3900                           ;fs_menu_controller.c: 376:          timer_value.remainingSecond = 0;
  3901  003DF8  0E00               	movlw	0
  3902  003DFA  0101               	movlb	1	; () banked
  3903  003DFC  6F91               	movwf	(_timer_value+2)& (0+255),b
  3904                           
  3905                           ;fs_menu_controller.c: 377:          timer_value.second = 0;
  3906  003DFE  0E00               	movlw	0
  3907  003E00  6F8F               	movwf	_timer_value& (0+255),b
  3908                           
  3909                           ;fs_menu_controller.c: 378:          timer_value.minute = 0;
  3910  003E02  0E00               	movlw	0
  3911  003E04  6F90               	movwf	(_timer_value+1)& (0+255),b
  3912  003E06                     l6184:
  3913                           
  3914                           ;fs_menu_controller.c: 381:     if ( timer_value.menu_login_delay == 100)
  3915  003E06  0E64               	movlw	100
  3916  003E08  0101               	movlb	1	; () banked
  3917  003E0A  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  3918  003E0C  A4D8               	btfss	status,2,c
  3919  003E0E  EF0B  F01F         	goto	u7381
  3920  003E12  EF0D  F01F         	goto	u7380
  3921  003E16                     u7381:
  3922  003E16  EF12  F01F         	goto	l6188
  3923  003E1A                     u7380:
  3924  003E1A                     
  3925                           ; BSR set to: 1
  3926                           ;fs_menu_controller.c: 382:     {;fs_menu_controller.c: 383:         timer_value.menu_lo
      +                          gin_delay = 0;
  3927  003E1A  0E00               	movlw	0
  3928  003E1C  6F93               	movwf	(_timer_value+4)& (0+255),b
  3929                           
  3930                           ;fs_menu_controller.c: 384:         menu_selected = DRIVER_TIME_SETTING;
  3931  003E1E  0E01               	movlw	1
  3932  003E20  0100               	movlb	0	; () banked
  3933  003E22  6FFB               	movwf	_menu_selected& (0+255),b
  3934  003E24                     l6188:
  3935                           
  3936                           ;fs_menu_controller.c: 387:     if ((menu_flags.menu_increase_flag == 1) && (menu_flags.
      +                          menu_decrease_flag == 1))
  3937  003E24  0101               	movlb	1	; () banked
  3938  003E26  059B               	decf	(_menu_flags+4)& (0+255),w,b
  3939  003E28  A4D8               	btfss	status,2,c
  3940  003E2A  EF19  F01F         	goto	u7391
  3941  003E2E  EF1B  F01F         	goto	u7390
  3942  003E32                     u7391:
  3943  003E32  EF28  F01F         	goto	l6194
  3944  003E36                     u7390:
  3945  003E36                     
  3946                           ; BSR set to: 1
  3947  003E36  059C               	decf	(_menu_flags+5)& (0+255),w,b
  3948  003E38  A4D8               	btfss	status,2,c
  3949  003E3A  EF21  F01F         	goto	u7401
  3950  003E3E  EF23  F01F         	goto	u7400
  3951  003E42                     u7401:
  3952  003E42  EF28  F01F         	goto	l6194
  3953  003E46                     u7400:
  3954  003E46                     
  3955                           ; BSR set to: 1
  3956                           ;fs_menu_controller.c: 388:     {;fs_menu_controller.c: 389:         menu_selected = SEC
      +                          RET_MENU;
  3957  003E46  0E08               	movlw	8
  3958  003E48  0100               	movlb	0	; () banked
  3959  003E4A  6FFB               	movwf	_menu_selected& (0+255),b
  3960                           
  3961                           ;fs_menu_controller.c: 390:         secretMenuCounter = 1;
  3962  003E4C  0E01               	movlw	1
  3963  003E4E  6FFC               	movwf	_secretMenuCounter& (0+255),b
  3964  003E50                     l6194:
  3965                           
  3966                           ;fs_menu_controller.c: 392:     stopMotor();
  3967  003E50  EC65  F02A         	call	_stopMotor	;wreg free
  3968  003E54  0012               	return		;funcret
  3969  003E56                     __end_of_pauseMenu:
  3970                           	callstack 0
  3971                           
  3972 ;; *************** function _mainMenu *****************
  3973 ;; Defined at:
  3974 ;;		line 245 in file "fs_menu_controller.c"
  3975 ;; Parameters:    Size  Location     Type
  3976 ;;		None
  3977 ;; Auto vars:     Size  Location     Type
  3978 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  3979 ;; Return value:  Size  Location     Type
  3980 ;;                  1    wreg      void 
  3981 ;; Registers used:
  3982 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  3983 ;; Tracked objects:
  3984 ;;		On entry : 0/0
  3985 ;;		On exit  : 0/0
  3986 ;;		Unchanged: 0/0
  3987 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  3988 ;;      Params:         0       0       0       0       0       0       0
  3989 ;;      Locals:         0      16       0       0       0       0       0
  3990 ;;      Temps:          0       0       0       0       0       0       0
  3991 ;;      Totals:         0      16       0       0       0       0       0
  3992 ;;Total ram usage:       16 bytes
  3993 ;; Hardware stack levels used:    1
  3994 ;; Hardware stack levels required when called:    9
  3995 ;; This function calls:
  3996 ;;		_Lcd_Set_Cursor
  3997 ;;		_Lcd_Write_String
  3998 ;;		_sprintf
  3999 ;;		_startMotor
  4000 ;; This function is called by:
  4001 ;;		_stateMachine
  4002 ;; This function uses a non-reentrant model
  4003 ;;
  4004                           
  4005                           	psect	text15
  4006  003708                     __ptext15:
  4007                           	callstack 0
  4008  003708                     _mainMenu:
  4009                           	callstack 19
  4010  003708                     
  4011                           ;fs_menu_controller.c: 247:     char textCursor2[16] = {0};
  4012  003708  EE20  F0E1         	lfsr	2,mainMenu@textCursor2
  4013  00370C  0E0F               	movlw	15
  4014  00370E                     u6931:
  4015  00370E  6ADE               	clrf	postinc2,c
  4016  003710  06E8               	decf	wreg,f,c
  4017  003712  E2FD               	bc	u6931
  4018  003714                     
  4019                           ;fs_menu_controller.c: 249:     Lcd_Set_Cursor(1,1);
  4020  003714  0E01               	movlw	1
  4021  003716  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  4022  003718  0E01               	movlw	1
  4023  00371A  EC41  F028         	call	_Lcd_Set_Cursor
  4024  00371E                     
  4025                           ;fs_menu_controller.c: 250:     Lcd_Write_String("KALAN ZAMAN     ");
  4026  00371E  0E2B               	movlw	low STR_3
  4027  003720  6E05               	movwf	Lcd_Write_String@a^0,c
  4028  003722  0E7F               	movlw	high STR_3
  4029  003724  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  4030  003726  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  4031  00372A                     
  4032                           ;fs_menu_controller.c: 251:     Lcd_Set_Cursor(2,1);
  4033  00372A  0E01               	movlw	1
  4034  00372C  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  4035  00372E  0E02               	movlw	2
  4036  003730  EC41  F028         	call	_Lcd_Set_Cursor
  4037  003734                     
  4038                           ;fs_menu_controller.c: 252:     sprintf(textCursor2,"      %d:%d   ",timer_value.remaini
      +                          ngMinute,timer_value.remainingSecond);
  4039  003734  0EE1               	movlw	low mainMenu@textCursor2
  4040  003736  0100               	movlb	0	; () banked
  4041  003738  6FCF               	movwf	sprintf@s& (0+255),b
  4042  00373A  0E00               	movlw	high mainMenu@textCursor2
  4043  00373C  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  4044  00373E  0EC1               	movlw	low STR_4
  4045  003740  6FD1               	movwf	sprintf@fmt& (0+255),b
  4046  003742  0E7F               	movlw	high STR_4
  4047  003744  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  4048  003746  0101               	movlb	1	; () banked
  4049  003748  5192               	movf	(_timer_value+3)& (0+255),w,b
  4050  00374A  0100               	movlb	0	; () banked
  4051  00374C  6FD3               	movwf	(?_sprintf+4)& (0+255),b
  4052  00374E  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  4053  003750  BFD3               	btfsc	(?_sprintf+4)& (0+255),7,b
  4054  003752  07D4               	decf	(?_sprintf+5)& (0+255),f,b
  4055  003754  C191  F0D5         	movff	_timer_value+2,?_sprintf+6
  4056  003758  6BD6               	clrf	(?_sprintf+7)& (0+255),b
  4057  00375A  EC29  F029         	call	_sprintf	;wreg free
  4058  00375E                     
  4059                           ;fs_menu_controller.c: 253:     Lcd_Write_String(textCursor2);
  4060  00375E  0EE1               	movlw	low mainMenu@textCursor2
  4061  003760  6E05               	movwf	Lcd_Write_String@a^0,c
  4062  003762  0E00               	movlw	high mainMenu@textCursor2
  4063  003764  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  4064  003766  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  4065  00376A                     
  4066                           ;fs_menu_controller.c: 255:     if ( timer_value.menu_login_delay == 100)
  4067  00376A  0E64               	movlw	100
  4068  00376C  0101               	movlb	1	; () banked
  4069  00376E  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  4070  003770  A4D8               	btfss	status,2,c
  4071  003772  EFBD  F01B         	goto	u6941
  4072  003776  EFBF  F01B         	goto	u6940
  4073  00377A                     u6941:
  4074  00377A  EFC6  F01B         	goto	l5930
  4075  00377E                     u6940:
  4076  00377E                     
  4077                           ; BSR set to: 1
  4078                           ;fs_menu_controller.c: 256:     {;fs_menu_controller.c: 257:         button_bounce_contr
      +                          oller.menu = 0;
  4079  00377E  0E00               	movlw	0
  4080  003780  6F9D               	movwf	_button_bounce_controller& (0+255),b
  4081                           
  4082                           ;fs_menu_controller.c: 258:         timer_value.menu_login_delay = 0;
  4083  003782  0E00               	movlw	0
  4084  003784  6F93               	movwf	(_timer_value+4)& (0+255),b
  4085                           
  4086                           ;fs_menu_controller.c: 259:         menu_selected = DRIVER_TIME_SETTING;
  4087  003786  0E01               	movlw	1
  4088  003788  0100               	movlb	0	; () banked
  4089  00378A  6FFB               	movwf	_menu_selected& (0+255),b
  4090  00378C                     l5930:
  4091                           
  4092                           ;fs_menu_controller.c: 262:     if ((timer_value.remainingMinute <= 0) && (timer_value.r
      +                          emainingSecond == 0) )
  4093  00378C  0101               	movlb	1	; () banked
  4094  00378E  5192               	movf	(_timer_value+3)& (0+255),w,b
  4095  003790  0A80               	xorlw	128
  4096  003792  0F7F               	addlw	-129
  4097  003794  B0D8               	btfsc	status,0,c
  4098  003796  EFCF  F01B         	goto	u6951
  4099  00379A  EFD1  F01B         	goto	u6950
  4100  00379E                     u6951:
  4101  00379E  EFDF  F01B         	goto	l448
  4102  0037A2                     u6950:
  4103  0037A2                     
  4104                           ; BSR set to: 1
  4105  0037A2  5191               	movf	(_timer_value+2)& (0+255),w,b
  4106  0037A4  A4D8               	btfss	status,2,c
  4107  0037A6  EFD7  F01B         	goto	u6961
  4108  0037AA  EFD9  F01B         	goto	u6960
  4109  0037AE                     u6961:
  4110  0037AE  EFDF  F01B         	goto	l448
  4111  0037B2                     u6960:
  4112  0037B2                     
  4113                           ; BSR set to: 1
  4114                           ;fs_menu_controller.c: 263:     {;fs_menu_controller.c: 264:             menu_selected =
      +                           STOP_MENU;
  4115  0037B2  0E04               	movlw	4
  4116  0037B4  0100               	movlb	0	; () banked
  4117  0037B6  6FFB               	movwf	_menu_selected& (0+255),b
  4118                           
  4119                           ;fs_menu_controller.c: 265:             timer_value.minute = 0;
  4120  0037B8  0E00               	movlw	0
  4121  0037BA  0101               	movlb	1	; () banked
  4122  0037BC  6F90               	movwf	(_timer_value+1)& (0+255),b
  4123  0037BE                     l448:
  4124                           
  4125                           ; BSR set to: 1
  4126                           ;fs_menu_controller.c: 268:     if ( (startIsClick == 0) && (pauseIsClick == 1) && (stop
      +                          IsClick == 0) && (menu_selected == MAIN_MENU))
  4127  0037BE  0100               	movlb	0	; () banked
  4128  0037C0  51FE               	movf	_startIsClick& (0+255),w,b
  4129  0037C2  A4D8               	btfss	status,2,c
  4130  0037C4  EFE6  F01B         	goto	u6971
  4131  0037C8  EFE8  F01B         	goto	u6970
  4132  0037CC                     u6971:
  4133  0037CC  EF07  F01C         	goto	l449
  4134  0037D0                     u6970:
  4135  0037D0                     
  4136                           ; BSR set to: 0
  4137  0037D0  05FF               	decf	_pauseIsClick& (0+255),w,b
  4138  0037D2  A4D8               	btfss	status,2,c
  4139  0037D4  EFEE  F01B         	goto	u6981
  4140  0037D8  EFF0  F01B         	goto	u6980
  4141  0037DC                     u6981:
  4142  0037DC  EF07  F01C         	goto	l449
  4143  0037E0                     u6980:
  4144  0037E0                     
  4145                           ; BSR set to: 0
  4146  0037E0  51FD               	movf	_stopIsClick& (0+255),w,b
  4147  0037E2  A4D8               	btfss	status,2,c
  4148  0037E4  EFF6  F01B         	goto	u6991
  4149  0037E8  EFF8  F01B         	goto	u6990
  4150  0037EC                     u6991:
  4151  0037EC  EF07  F01C         	goto	l449
  4152  0037F0                     u6990:
  4153  0037F0                     
  4154                           ; BSR set to: 0
  4155  0037F0  51FB               	movf	_menu_selected& (0+255),w,b
  4156  0037F2  A4D8               	btfss	status,2,c
  4157  0037F4  EFFE  F01B         	goto	u7001
  4158  0037F8  EF00  F01C         	goto	u7000
  4159  0037FC                     u7001:
  4160  0037FC  EF07  F01C         	goto	l449
  4161  003800                     u7000:
  4162  003800                     
  4163                           ; BSR set to: 0
  4164                           ;fs_menu_controller.c: 269:     {;fs_menu_controller.c: 270:         menu_selected = PAU
      +                          SE_MENU;
  4165  003800  0E06               	movlw	6
  4166  003802  6FFB               	movwf	_menu_selected& (0+255),b
  4167  003804                     
  4168                           ; BSR set to: 0
  4169                           ;fs_menu_controller.c: 271:         LATDbits.LATD5 = 0;
  4170  003804  9A8C               	bcf	140,5,c	;volatile
  4171  003806                     
  4172                           ; BSR set to: 0
  4173                           ;fs_menu_controller.c: 272:         LATCbits.LATC5 = 0;
  4174  003806  9A8B               	bcf	139,5,c	;volatile
  4175  003808                     
  4176                           ; BSR set to: 0
  4177                           ;fs_menu_controller.c: 273:         LATCbits.LATC4 = 0;
  4178  003808  988B               	bcf	139,4,c	;volatile
  4179                           
  4180                           ;fs_menu_controller.c: 274:         startIsClick = 0;
  4181  00380A  0E00               	movlw	0
  4182  00380C  6FFE               	movwf	_startIsClick& (0+255),b
  4183  00380E                     l449:
  4184                           
  4185                           ; BSR set to: 0
  4186                           ;fs_menu_controller.c: 277:     if ( (startIsClick == 0) && (pauseIsClick == 0) && (stop
      +                          IsClick == 1) && (menu_selected == MAIN_MENU) )
  4187  00380E  51FE               	movf	_startIsClick& (0+255),w,b
  4188  003810  A4D8               	btfss	status,2,c
  4189  003812  EF0D  F01C         	goto	u7011
  4190  003816  EF0F  F01C         	goto	u7010
  4191  00381A                     u7011:
  4192  00381A  EF33  F01C         	goto	l5966
  4193  00381E                     u7010:
  4194  00381E                     
  4195                           ; BSR set to: 0
  4196  00381E  51FF               	movf	_pauseIsClick& (0+255),w,b
  4197  003820  A4D8               	btfss	status,2,c
  4198  003822  EF15  F01C         	goto	u7021
  4199  003826  EF17  F01C         	goto	u7020
  4200  00382A                     u7021:
  4201  00382A  EF33  F01C         	goto	l5966
  4202  00382E                     u7020:
  4203  00382E                     
  4204                           ; BSR set to: 0
  4205  00382E  05FD               	decf	_stopIsClick& (0+255),w,b
  4206  003830  A4D8               	btfss	status,2,c
  4207  003832  EF1D  F01C         	goto	u7031
  4208  003836  EF1F  F01C         	goto	u7030
  4209  00383A                     u7031:
  4210  00383A  EF33  F01C         	goto	l5966
  4211  00383E                     u7030:
  4212  00383E                     
  4213                           ; BSR set to: 0
  4214  00383E  51FB               	movf	_menu_selected& (0+255),w,b
  4215  003840  A4D8               	btfss	status,2,c
  4216  003842  EF25  F01C         	goto	u7041
  4217  003846  EF27  F01C         	goto	u7040
  4218  00384A                     u7041:
  4219  00384A  EF33  F01C         	goto	l5966
  4220  00384E                     u7040:
  4221  00384E                     
  4222                           ; BSR set to: 0
  4223                           ;fs_menu_controller.c: 278:     {;fs_menu_controller.c: 279:          timer_value.remain
      +                          ingMinute = menu_value.driver_time;
  4224  00384E  C0F3  F192         	movff	_menu_value,_timer_value+3
  4225  003852                     
  4226                           ; BSR set to: 0
  4227                           ;fs_menu_controller.c: 280:          timer_value.remainingSecond = 0;
  4228  003852  0E00               	movlw	0
  4229  003854  0101               	movlb	1	; () banked
  4230  003856  6F91               	movwf	(_timer_value+2)& (0+255),b
  4231                           
  4232                           ;fs_menu_controller.c: 281:          timer_value.second = 0;
  4233  003858  0E00               	movlw	0
  4234  00385A  6F8F               	movwf	_timer_value& (0+255),b
  4235                           
  4236                           ;fs_menu_controller.c: 282:          timer_value.minute = 0;
  4237  00385C  0E00               	movlw	0
  4238  00385E  6F90               	movwf	(_timer_value+1)& (0+255),b
  4239  003860                     
  4240                           ; BSR set to: 1
  4241                           ;fs_menu_controller.c: 283:          LATDbits.LATD5 = 0;
  4242  003860  9A8C               	bcf	140,5,c	;volatile
  4243  003862                     
  4244                           ; BSR set to: 1
  4245                           ;fs_menu_controller.c: 284:          LATCbits.LATC5 = 0;
  4246  003862  9A8B               	bcf	139,5,c	;volatile
  4247  003864                     
  4248                           ; BSR set to: 1
  4249                           ;fs_menu_controller.c: 285:          LATCbits.LATC4 = 0;
  4250  003864  988B               	bcf	139,4,c	;volatile
  4251  003866                     l5966:
  4252                           
  4253                           ;fs_menu_controller.c: 288:     if ( (startIsClick == 1) && (pauseIsClick == 0) && (stop
      +                          IsClick == 0) )
  4254  003866  0100               	movlb	0	; () banked
  4255  003868  05FE               	decf	_startIsClick& (0+255),w,b
  4256  00386A  A4D8               	btfss	status,2,c
  4257  00386C  EF3A  F01C         	goto	u7051
  4258  003870  EF3C  F01C         	goto	u7050
  4259  003874                     u7051:
  4260  003874  EF51  F01C         	goto	l452
  4261  003878                     u7050:
  4262  003878                     
  4263                           ; BSR set to: 0
  4264  003878  51FF               	movf	_pauseIsClick& (0+255),w,b
  4265  00387A  A4D8               	btfss	status,2,c
  4266  00387C  EF42  F01C         	goto	u7061
  4267  003880  EF44  F01C         	goto	u7060
  4268  003884                     u7061:
  4269  003884  EF51  F01C         	goto	l452
  4270  003888                     u7060:
  4271  003888                     
  4272                           ; BSR set to: 0
  4273  003888  51FD               	movf	_stopIsClick& (0+255),w,b
  4274  00388A  A4D8               	btfss	status,2,c
  4275  00388C  EF4A  F01C         	goto	u7071
  4276  003890  EF4C  F01C         	goto	u7070
  4277  003894                     u7071:
  4278  003894  EF51  F01C         	goto	l452
  4279  003898                     u7070:
  4280  003898                     
  4281                           ; BSR set to: 0
  4282                           ;fs_menu_controller.c: 289:     {;fs_menu_controller.c: 290:         startMotor();
  4283  003898  ECF3  F02A         	call	_startMotor	;wreg free
  4284  00389C                     
  4285                           ;fs_menu_controller.c: 291:         LATDbits.LATD5 = 1;
  4286  00389C  8A8C               	bsf	140,5,c	;volatile
  4287  00389E                     
  4288                           ;fs_menu_controller.c: 292:         LATCbits.LATC5 = 1;
  4289  00389E  8A8B               	bsf	139,5,c	;volatile
  4290  0038A0                     
  4291                           ;fs_menu_controller.c: 293:         LATCbits.LATC4 = 1;
  4292  0038A0  888B               	bsf	139,4,c	;volatile
  4293  0038A2                     l452:
  4294  0038A2  0012               	return		;funcret
  4295  0038A4                     __end_of_mainMenu:
  4296                           	callstack 0
  4297                           
  4298 ;; *************** function _startMotor *****************
  4299 ;; Defined at:
  4300 ;;		line 93 in file "fs_speed_controller.c"
  4301 ;; Parameters:    Size  Location     Type
  4302 ;;		None
  4303 ;; Auto vars:     Size  Location     Type
  4304 ;;		None
  4305 ;; Return value:  Size  Location     Type
  4306 ;;                  1    wreg      void 
  4307 ;; Registers used:
  4308 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4309 ;; Tracked objects:
  4310 ;;		On entry : 0/0
  4311 ;;		On exit  : 0/0
  4312 ;;		Unchanged: 0/0
  4313 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4314 ;;      Params:         0       0       0       0       0       0       0
  4315 ;;      Locals:         0       0       0       0       0       0       0
  4316 ;;      Temps:          0       0       0       0       0       0       0
  4317 ;;      Totals:         0       0       0       0       0       0       0
  4318 ;;Total ram usage:        0 bytes
  4319 ;; Hardware stack levels used:    1
  4320 ;; Hardware stack levels required when called:    3
  4321 ;; This function calls:
  4322 ;;		_PWM1_setDC
  4323 ;;		_PWM2_setDC
  4324 ;;		_calculatedAverageValue
  4325 ;;		_scanAdcConversion
  4326 ;;		_speedControl
  4327 ;; This function is called by:
  4328 ;;		_mainMenu
  4329 ;; This function uses a non-reentrant model
  4330 ;;
  4331                           
  4332                           	psect	text16
  4333  0055E6                     __ptext16:
  4334                           	callstack 0
  4335  0055E6                     _startMotor:
  4336                           	callstack 24
  4337  0055E6                     
  4338                           ;fs_speed_controller.c: 95:         scanAdcConversion();
  4339  0055E6  EC27  F006         	call	_scanAdcConversion	;wreg free
  4340  0055EA                     
  4341                           ;fs_speed_controller.c: 96:         calculatedAverageValue();
  4342  0055EA  EC8B  F013         	call	_calculatedAverageValue	;wreg free
  4343  0055EE                     
  4344                           ;fs_speed_controller.c: 97:         speedControl(driver_limit.ortalama);
  4345  0055EE  C18B  F058         	movff	_driver_limit+8,speedControl@position
  4346  0055F2  C18C  F059         	movff	_driver_limit+9,speedControl@position+1
  4347  0055F6  C18D  F05A         	movff	_driver_limit+10,speedControl@position+2
  4348  0055FA  C18E  F05B         	movff	_driver_limit+11,speedControl@position+3
  4349  0055FE  ECCB  F019         	call	_speedControl	;wreg free
  4350                           
  4351                           ;fs_speed_controller.c: 98:         PWM1_setDC(controller.leftMotorSpeed);
  4352  005602  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  4353  005606  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  4354  00560A  EC5F  F027         	call	_PWM1_setDC	;wreg free
  4355                           
  4356                           ;fs_speed_controller.c: 99:         PWM2_setDC(controller.rightMotorSpeed);
  4357  00560E  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  4358  005612  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  4359  005616  EC22  F027         	call	_PWM2_setDC	;wreg free
  4360  00561A  0012               	return		;funcret
  4361  00561C                     __end_of_startMotor:
  4362                           	callstack 0
  4363                           
  4364 ;; *************** function _speedControl *****************
  4365 ;; Defined at:
  4366 ;;		line 36 in file "fs_speed_controller.c"
  4367 ;; Parameters:    Size  Location     Type
  4368 ;;  position        4   87[COMRAM] float 
  4369 ;; Auto vars:     Size  Location     Type
  4370 ;;  pos             4    0        float 
  4371 ;; Return value:  Size  Location     Type
  4372 ;;                  1    wreg      void 
  4373 ;; Registers used:
  4374 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4375 ;; Tracked objects:
  4376 ;;		On entry : 0/0
  4377 ;;		On exit  : 0/0
  4378 ;;		Unchanged: 0/0
  4379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4380 ;;      Params:         4       0       0       0       0       0       0
  4381 ;;      Locals:         0       4       0       0       0       0       0
  4382 ;;      Temps:          2       0       0       0       0       0       0
  4383 ;;      Totals:         6       4       0       0       0       0       0
  4384 ;;Total ram usage:       10 bytes
  4385 ;; Hardware stack levels used:    1
  4386 ;; Hardware stack levels required when called:    2
  4387 ;; This function calls:
  4388 ;;		___fladd
  4389 ;;		___flmul
  4390 ;;		___fltol
  4391 ;;		___xxtofl
  4392 ;; This function is called by:
  4393 ;;		_startMotor
  4394 ;; This function uses a non-reentrant model
  4395 ;;
  4396                           
  4397                           	psect	text17
  4398  003396                     __ptext17:
  4399                           	callstack 0
  4400  003396                     _speedControl:
  4401                           	callstack 24
  4402  003396                     
  4403                           ;fs_speed_controller.c: 42:     controller.error = (int16_t)(position - 3400.0);
  4404  003396  0E00               	movlw	0
  4405  003398  6E39               	movwf	___fladd@a^0,c
  4406  00339A  0E80               	movlw	128
  4407  00339C  6E3A               	movwf	(___fladd@a+1)^0,c
  4408  00339E  0E54               	movlw	84
  4409  0033A0  6E3B               	movwf	(___fladd@a+2)^0,c
  4410  0033A2  0EC5               	movlw	197
  4411  0033A4  6E3C               	movwf	(___fladd@a+3)^0,c
  4412  0033A6  C058  F035         	movff	speedControl@position,___fladd@b
  4413  0033AA  C059  F036         	movff	speedControl@position+1,___fladd@b+1
  4414  0033AE  C05A  F037         	movff	speedControl@position+2,___fladd@b+2
  4415  0033B2  C05B  F038         	movff	speedControl@position+3,___fladd@b+3
  4416  0033B6  EC49  F00D         	call	___fladd	;wreg free
  4417  0033BA  C035  F04E         	movff	?___fladd,___fltol@f1
  4418  0033BE  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4419  0033C2  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4420  0033C6  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4421  0033CA  ECD3  F020         	call	___fltol	;wreg free
  4422  0033CE  C04E  F150         	movff	?___fltol,_controller
  4423  0033D2  C04F  F151         	movff	?___fltol+1,_controller+1
  4424  0033D6  0E00               	movlw	0
  4425  0033D8  6E20               	movwf	___flmul@a^0,c
  4426  0033DA  0E00               	movlw	0
  4427  0033DC  6E21               	movwf	(___flmul@a+1)^0,c
  4428  0033DE  0E80               	movlw	128
  4429  0033E0  6E22               	movwf	(___flmul@a+2)^0,c
  4430  0033E2  0E3F               	movlw	63
  4431  0033E4  6E23               	movwf	(___flmul@a+3)^0,c
  4432  0033E6  0101               	movlb	1	; () banked
  4433  0033E8  5152               	movf	(_controller+2)& (0+255),w,b
  4434  0033EA  5D50               	subwf	_controller& (0+255),w,b
  4435  0033EC  6E5C               	movwf	??_speedControl^0,c
  4436  0033EE  5153               	movf	(_controller+3)& (0+255),w,b
  4437  0033F0  5951               	subwfb	(_controller+1)& (0+255),w,b
  4438  0033F2  6E5D               	movwf	(??_speedControl+1)^0,c
  4439  0033F4  C05C  F00E         	movff	??_speedControl,___xxtofl@val
  4440  0033F8  C05D  F00F         	movff	??_speedControl+1,___xxtofl@val+1
  4441  0033FC  0E00               	movlw	0
  4442  0033FE  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4443  003400  0EFF               	movlw	-1
  4444  003402  6E10               	movwf	(___xxtofl@val+2)^0,c
  4445  003404  6E11               	movwf	(___xxtofl@val+3)^0,c
  4446  003406  0E01               	movlw	1
  4447  003408  ECAA  F01A         	call	___xxtofl
  4448  00340C  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4449  003410  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4450  003414  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4451  003418  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4452  00341C  ECA9  F00F         	call	___flmul	;wreg free
  4453  003420  C01C  F039         	movff	?___flmul,___fladd@a
  4454  003424  C01D  F03A         	movff	?___flmul+1,___fladd@a+1
  4455  003428  C01E  F03B         	movff	?___flmul+2,___fladd@a+2
  4456  00342C  C01F  F03C         	movff	?___flmul+3,___fladd@a+3
  4457  003430  0ECD               	movlw	205
  4458  003432  6E20               	movwf	___flmul@a^0,c
  4459  003434  0ECC               	movlw	204
  4460  003436  6E21               	movwf	(___flmul@a+1)^0,c
  4461  003438  0E4C               	movlw	76
  4462  00343A  6E22               	movwf	(___flmul@a+2)^0,c
  4463  00343C  0E3E               	movlw	62
  4464  00343E  6E23               	movwf	(___flmul@a+3)^0,c
  4465  003440  C150  F00E         	movff	_controller,___xxtofl@val
  4466  003444  C151  F00F         	movff	_controller+1,___xxtofl@val+1
  4467  003448  0E00               	movlw	0
  4468  00344A  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  4469  00344C  0EFF               	movlw	-1
  4470  00344E  6E10               	movwf	(___xxtofl@val+2)^0,c
  4471  003450  6E11               	movwf	(___xxtofl@val+3)^0,c
  4472  003452  0E01               	movlw	1
  4473  003454  ECAA  F01A         	call	___xxtofl
  4474  003458  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4475  00345C  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4476  003460  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4477  003464  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4478  003468  ECA9  F00F         	call	___flmul	;wreg free
  4479  00346C  C01C  F035         	movff	?___flmul,___fladd@b
  4480  003470  C01D  F036         	movff	?___flmul+1,___fladd@b+1
  4481  003474  C01E  F037         	movff	?___flmul+2,___fladd@b+2
  4482  003478  C01F  F038         	movff	?___flmul+3,___fladd@b+3
  4483  00347C  EC49  F00D         	call	___fladd	;wreg free
  4484  003480  C035  F04E         	movff	?___fladd,___fltol@f1
  4485  003484  C036  F04F         	movff	?___fladd+1,___fltol@f1+1
  4486  003488  C037  F050         	movff	?___fladd+2,___fltol@f1+2
  4487  00348C  C038  F051         	movff	?___fladd+3,___fltol@f1+3
  4488  003490  ECD3  F020         	call	___fltol	;wreg free
  4489  003494  C04E  F154         	movff	?___fltol,_controller+4
  4490  003498  C04F  F155         	movff	?___fltol+1,_controller+5
  4491  00349C                     
  4492                           ;fs_speed_controller.c: 44:     controller.lastError = controller.error;
  4493  00349C  C150  F152         	movff	_controller,_controller+2
  4494  0034A0  C151  F153         	movff	_controller+1,_controller+3
  4495  0034A4                     
  4496                           ;fs_speed_controller.c: 46:    controller.leftMotorSpeed =(int16_t) (200 + controller.mo
      +                          torSpeed + 70);
  4497  0034A4  0E0E               	movlw	14
  4498  0034A6  0101               	movlb	1	; () banked
  4499  0034A8  2554               	addwf	(_controller+4)& (0+255),w,b
  4500  0034AA  6F56               	movwf	(_controller+6)& (0+255),b
  4501  0034AC  0E01               	movlw	1
  4502  0034AE  2155               	addwfc	(_controller+5)& (0+255),w,b
  4503  0034B0  6F57               	movwf	(_controller+7)& (0+255),b
  4504  0034B2                     
  4505                           ; BSR set to: 1
  4506                           ;fs_speed_controller.c: 47:    controller.rightMotorSpeed =(int16_t) (200 - controller.m
      +                          otorSpeed);
  4507  0034B2  5154               	movf	(_controller+4)& (0+255),w,b
  4508  0034B4  08C8               	sublw	200
  4509  0034B6  6F58               	movwf	(_controller+8)& (0+255),b
  4510  0034B8  5155               	movf	(_controller+5)& (0+255),w,b
  4511  0034BA  A0D8               	btfss	status,0,c
  4512  0034BC  2AE8               	incf	wreg,f,c
  4513  0034BE  0800               	sublw	0
  4514  0034C0  6F59               	movwf	(_controller+9)& (0+255),b
  4515  0034C2                     
  4516                           ; BSR set to: 1
  4517                           ;fs_speed_controller.c: 49:     if (controller.leftMotorSpeed < 50)
  4518  0034C2  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4519  0034C4  EF6F  F01A         	goto	u6820
  4520  0034C8  5157               	movf	(_controller+7)& (0+255),w,b
  4521  0034CA  E107               	bnz	u6821
  4522  0034CC  0E32               	movlw	50
  4523  0034CE  5D56               	subwf	(_controller+6)& (0+255),w,b
  4524  0034D0  B0D8               	btfsc	status,0,c
  4525  0034D2  EF6D  F01A         	goto	u6821
  4526  0034D6  EF6F  F01A         	goto	u6820
  4527  0034DA                     u6821:
  4528  0034DA  EF73  F01A         	goto	l5830
  4529  0034DE                     u6820:
  4530  0034DE                     
  4531                           ; BSR set to: 1
  4532                           ;fs_speed_controller.c: 50:     {;fs_speed_controller.c: 51:         controller.leftMoto
      +                          rSpeed = 50;
  4533  0034DE  0E00               	movlw	0
  4534  0034E0  6F57               	movwf	(_controller+7)& (0+255),b
  4535  0034E2  0E32               	movlw	50
  4536  0034E4  6F56               	movwf	(_controller+6)& (0+255),b
  4537  0034E6                     l5830:
  4538                           
  4539                           ; BSR set to: 1
  4540                           ;fs_speed_controller.c: 54:     if (controller.rightMotorSpeed < 50)
  4541  0034E6  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4542  0034E8  EF81  F01A         	goto	u6830
  4543  0034EC  5159               	movf	(_controller+9)& (0+255),w,b
  4544  0034EE  E107               	bnz	u6831
  4545  0034F0  0E32               	movlw	50
  4546  0034F2  5D58               	subwf	(_controller+8)& (0+255),w,b
  4547  0034F4  B0D8               	btfsc	status,0,c
  4548  0034F6  EF7F  F01A         	goto	u6831
  4549  0034FA  EF81  F01A         	goto	u6830
  4550  0034FE                     u6831:
  4551  0034FE  EF85  F01A         	goto	l5834
  4552  003502                     u6830:
  4553  003502                     
  4554                           ; BSR set to: 1
  4555                           ;fs_speed_controller.c: 55:     {;fs_speed_controller.c: 56:       controller.rightMotor
      +                          Speed = 50;
  4556  003502  0E00               	movlw	0
  4557  003504  6F59               	movwf	(_controller+9)& (0+255),b
  4558  003506  0E32               	movlw	50
  4559  003508  6F58               	movwf	(_controller+8)& (0+255),b
  4560  00350A                     l5834:
  4561                           
  4562                           ; BSR set to: 1
  4563                           ;fs_speed_controller.c: 59:     if (controller.leftMotorSpeed > 350)
  4564  00350A  BF57               	btfsc	(_controller+7)& (0+255),7,b
  4565  00350C  EF91  F01A         	goto	u6841
  4566  003510  0E5F               	movlw	95
  4567  003512  5D56               	subwf	(_controller+6)& (0+255),w,b
  4568  003514  0E01               	movlw	1
  4569  003516  5957               	subwfb	(_controller+7)& (0+255),w,b
  4570  003518  A0D8               	btfss	status,0,c
  4571  00351A  EF91  F01A         	goto	u6841
  4572  00351E  EF93  F01A         	goto	u6840
  4573  003522                     u6841:
  4574  003522  EF97  F01A         	goto	l5838
  4575  003526                     u6840:
  4576  003526                     
  4577                           ; BSR set to: 1
  4578                           ;fs_speed_controller.c: 60:    {;fs_speed_controller.c: 61:         controller.leftMotor
      +                          Speed = 350;
  4579  003526  0E01               	movlw	1
  4580  003528  6F57               	movwf	(_controller+7)& (0+255),b
  4581  00352A  0E5E               	movlw	94
  4582  00352C  6F56               	movwf	(_controller+6)& (0+255),b
  4583  00352E                     l5838:
  4584                           
  4585                           ; BSR set to: 1
  4586                           ;fs_speed_controller.c: 64:     if (controller.rightMotorSpeed > 350)
  4587  00352E  BF59               	btfsc	(_controller+9)& (0+255),7,b
  4588  003530  EFA3  F01A         	goto	u6851
  4589  003534  0E5F               	movlw	95
  4590  003536  5D58               	subwf	(_controller+8)& (0+255),w,b
  4591  003538  0E01               	movlw	1
  4592  00353A  5959               	subwfb	(_controller+9)& (0+255),w,b
  4593  00353C  A0D8               	btfss	status,0,c
  4594  00353E  EFA3  F01A         	goto	u6851
  4595  003542  EFA5  F01A         	goto	u6850
  4596  003546                     u6851:
  4597  003546  EFA9  F01A         	goto	l627
  4598  00354A                     u6850:
  4599  00354A                     
  4600                           ; BSR set to: 1
  4601                           ;fs_speed_controller.c: 65:     {;fs_speed_controller.c: 66:         controller.rightMot
      +                          orSpeed = 350;
  4602  00354A  0E01               	movlw	1
  4603  00354C  6F59               	movwf	(_controller+9)& (0+255),b
  4604  00354E  0E5E               	movlw	94
  4605  003550  6F58               	movwf	(_controller+8)& (0+255),b
  4606  003552                     l627:
  4607                           
  4608                           ; BSR set to: 1
  4609  003552  0012               	return		;funcret
  4610  003554                     __end_of_speedControl:
  4611                           	callstack 0
  4612                           
  4613 ;; *************** function _scanAdcConversion *****************
  4614 ;; Defined at:
  4615 ;;		line 93 in file "fs_adc.c"
  4616 ;; Parameters:    Size  Location     Type
  4617 ;;		None
  4618 ;; Auto vars:     Size  Location     Type
  4619 ;;		None
  4620 ;; Return value:  Size  Location     Type
  4621 ;;                  1    wreg      void 
  4622 ;; Registers used:
  4623 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  4624 ;; Tracked objects:
  4625 ;;		On entry : 0/0
  4626 ;;		On exit  : 0/0
  4627 ;;		Unchanged: 0/0
  4628 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  4629 ;;      Params:         0       0       0       0       0       0       0
  4630 ;;      Locals:         0       0       0       0       0       0       0
  4631 ;;      Temps:          2       0       0       0       0       0       0
  4632 ;;      Totals:         2       0       0       0       0       0       0
  4633 ;;Total ram usage:        2 bytes
  4634 ;; Hardware stack levels used:    1
  4635 ;; Hardware stack levels required when called:    2
  4636 ;; This function calls:
  4637 ;;		___fldiv
  4638 ;;		___flmul
  4639 ;;		___fltol
  4640 ;;		___xxtofl
  4641 ;;		_readAdcValue
  4642 ;; This function is called by:
  4643 ;;		_startMotor
  4644 ;; This function uses a non-reentrant model
  4645 ;;
  4646                           
  4647                           	psect	text18
  4648  000C4E                     __ptext18:
  4649                           	callstack 0
  4650  000C4E                     _scanAdcConversion:
  4651                           	callstack 24
  4652  000C4E                     
  4653                           ;fs_adc.c: 95:     switch(timer_value.adc_conversion_time)
  4654  000C4E  EFFB  F009         	goto	l5748
  4655  000C52                     l5696:
  4656                           
  4657                           ; BSR set to: 1
  4658                           ;fs_adc.c: 98:             adc_raw_data.channel_0 = readAdcValue(0);
  4659  000C52  0E00               	movlw	0
  4660  000C54  ECE5  F029         	call	_readAdcValue
  4661  000C58  C001  F173         	movff	?_readAdcValue,_adc_raw_data
  4662  000C5C  C002  F174         	movff	?_readAdcValue+1,_adc_raw_data+1
  4663  000C60                     
  4664                           ;fs_adc.c: 99:             procces_data.channel_0 = (float)((adc_raw_data.channel_0*5.0)
      +                          /1024.0);
  4665  000C60  0E00               	movlw	0
  4666  000C62  6E20               	movwf	___flmul@a^0,c
  4667  000C64  0E00               	movlw	0
  4668  000C66  6E21               	movwf	(___flmul@a+1)^0,c
  4669  000C68  0EA0               	movlw	160
  4670  000C6A  6E22               	movwf	(___flmul@a+2)^0,c
  4671  000C6C  0E40               	movlw	64
  4672  000C6E  6E23               	movwf	(___flmul@a+3)^0,c
  4673  000C70  C173  F00E         	movff	_adc_raw_data,___xxtofl@val
  4674  000C74  C174  F00F         	movff	_adc_raw_data+1,___xxtofl@val+1
  4675  000C78  6A10               	clrf	(___xxtofl@val+2)^0,c
  4676  000C7A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4677  000C7C  0E00               	movlw	0
  4678  000C7E  ECAA  F01A         	call	___xxtofl
  4679  000C82  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4680  000C86  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4681  000C8A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4682  000C8E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4683  000C92  ECA9  F00F         	call	___flmul	;wreg free
  4684  000C96  C01C  F035         	movff	?___flmul,___fldiv@b
  4685  000C9A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4686  000C9E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4687  000CA2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4688  000CA6  0E00               	movlw	0
  4689  000CA8  6E39               	movwf	___fldiv@a^0,c
  4690  000CAA  0E00               	movlw	0
  4691  000CAC  6E3A               	movwf	(___fldiv@a+1)^0,c
  4692  000CAE  0E80               	movlw	128
  4693  000CB0  6E3B               	movwf	(___fldiv@a+2)^0,c
  4694  000CB2  0E44               	movlw	68
  4695  000CB4  6E3C               	movwf	(___fldiv@a+3)^0,c
  4696  000CB6  ECBE  F011         	call	___fldiv	;wreg free
  4697  000CBA  C035  F130         	movff	?___fldiv,_procces_data
  4698  000CBE  C036  F131         	movff	?___fldiv+1,_procces_data+1
  4699  000CC2  C037  F132         	movff	?___fldiv+2,_procces_data+2
  4700  000CC6  C038  F133         	movff	?___fldiv+3,_procces_data+3
  4701  000CCA                     
  4702                           ;fs_adc.c: 100:             convert_data.convert_channel_0 = (uint32_t)((procces_data.ch
      +                          annel_0*999)/5);
  4703  000CCA  0E00               	movlw	0
  4704  000CCC  6E39               	movwf	___fldiv@a^0,c
  4705  000CCE  0E00               	movlw	0
  4706  000CD0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4707  000CD2  0EA0               	movlw	160
  4708  000CD4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4709  000CD6  0E40               	movlw	64
  4710  000CD8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4711  000CDA  0E00               	movlw	0
  4712  000CDC  6E20               	movwf	___flmul@a^0,c
  4713  000CDE  0EC0               	movlw	192
  4714  000CE0  6E21               	movwf	(___flmul@a+1)^0,c
  4715  000CE2  0E79               	movlw	121
  4716  000CE4  6E22               	movwf	(___flmul@a+2)^0,c
  4717  000CE6  0E44               	movlw	68
  4718  000CE8  6E23               	movwf	(___flmul@a+3)^0,c
  4719  000CEA  C130  F01C         	movff	_procces_data,___flmul@b
  4720  000CEE  C131  F01D         	movff	_procces_data+1,___flmul@b+1
  4721  000CF2  C132  F01E         	movff	_procces_data+2,___flmul@b+2
  4722  000CF6  C133  F01F         	movff	_procces_data+3,___flmul@b+3
  4723  000CFA  ECA9  F00F         	call	___flmul	;wreg free
  4724  000CFE  C01C  F035         	movff	?___flmul,___fldiv@b
  4725  000D02  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4726  000D06  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4727  000D0A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4728  000D0E  ECBE  F011         	call	___fldiv	;wreg free
  4729  000D12  C035  F04E         	movff	?___fldiv,___fltol@f1
  4730  000D16  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4731  000D1A  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4732  000D1E  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4733  000D22  ECD3  F020         	call	___fltol	;wreg free
  4734  000D26  C04E  F100         	movff	?___fltol,_convert_data
  4735  000D2A  C04F  F101         	movff	?___fltol+1,_convert_data+1
  4736  000D2E  C050  F102         	movff	?___fltol+2,_convert_data+2
  4737  000D32  C051  F103         	movff	?___fltol+3,_convert_data+3
  4738                           
  4739                           ;fs_adc.c: 101:         break;
  4740  000D36  EF29  F00A         	goto	l76
  4741  000D3A                     l5702:
  4742                           
  4743                           ; BSR set to: 1
  4744                           ;fs_adc.c: 104:             adc_raw_data.channel_1 = readAdcValue(1);
  4745  000D3A  0E01               	movlw	1
  4746  000D3C  ECE5  F029         	call	_readAdcValue
  4747  000D40  C001  F175         	movff	?_readAdcValue,_adc_raw_data+2
  4748  000D44  C002  F176         	movff	?_readAdcValue+1,_adc_raw_data+3
  4749  000D48                     
  4750                           ;fs_adc.c: 105:             procces_data.channel_1 = (float)((adc_raw_data.channel_1*5.0
      +                          )/1024.0);
  4751  000D48  0E00               	movlw	0
  4752  000D4A  6E20               	movwf	___flmul@a^0,c
  4753  000D4C  0E00               	movlw	0
  4754  000D4E  6E21               	movwf	(___flmul@a+1)^0,c
  4755  000D50  0EA0               	movlw	160
  4756  000D52  6E22               	movwf	(___flmul@a+2)^0,c
  4757  000D54  0E40               	movlw	64
  4758  000D56  6E23               	movwf	(___flmul@a+3)^0,c
  4759  000D58  C175  F00E         	movff	_adc_raw_data+2,___xxtofl@val
  4760  000D5C  C176  F00F         	movff	_adc_raw_data+3,___xxtofl@val+1
  4761  000D60  6A10               	clrf	(___xxtofl@val+2)^0,c
  4762  000D62  6A11               	clrf	(___xxtofl@val+3)^0,c
  4763  000D64  0E00               	movlw	0
  4764  000D66  ECAA  F01A         	call	___xxtofl
  4765  000D6A  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4766  000D6E  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4767  000D72  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4768  000D76  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4769  000D7A  ECA9  F00F         	call	___flmul	;wreg free
  4770  000D7E  C01C  F035         	movff	?___flmul,___fldiv@b
  4771  000D82  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4772  000D86  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4773  000D8A  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4774  000D8E  0E00               	movlw	0
  4775  000D90  6E39               	movwf	___fldiv@a^0,c
  4776  000D92  0E00               	movlw	0
  4777  000D94  6E3A               	movwf	(___fldiv@a+1)^0,c
  4778  000D96  0E80               	movlw	128
  4779  000D98  6E3B               	movwf	(___fldiv@a+2)^0,c
  4780  000D9A  0E44               	movlw	68
  4781  000D9C  6E3C               	movwf	(___fldiv@a+3)^0,c
  4782  000D9E  ECBE  F011         	call	___fldiv	;wreg free
  4783  000DA2  C035  F134         	movff	?___fldiv,_procces_data+4
  4784  000DA6  C036  F135         	movff	?___fldiv+1,_procces_data+5
  4785  000DAA  C037  F136         	movff	?___fldiv+2,_procces_data+6
  4786  000DAE  C038  F137         	movff	?___fldiv+3,_procces_data+7
  4787  000DB2                     
  4788                           ;fs_adc.c: 106:             convert_data.convert_channel_1 = (uint32_t)((procces_data.ch
      +                          annel_1*999)/5);
  4789  000DB2  0E00               	movlw	0
  4790  000DB4  6E39               	movwf	___fldiv@a^0,c
  4791  000DB6  0E00               	movlw	0
  4792  000DB8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4793  000DBA  0EA0               	movlw	160
  4794  000DBC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4795  000DBE  0E40               	movlw	64
  4796  000DC0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4797  000DC2  0E00               	movlw	0
  4798  000DC4  6E20               	movwf	___flmul@a^0,c
  4799  000DC6  0EC0               	movlw	192
  4800  000DC8  6E21               	movwf	(___flmul@a+1)^0,c
  4801  000DCA  0E79               	movlw	121
  4802  000DCC  6E22               	movwf	(___flmul@a+2)^0,c
  4803  000DCE  0E44               	movlw	68
  4804  000DD0  6E23               	movwf	(___flmul@a+3)^0,c
  4805  000DD2  C134  F01C         	movff	_procces_data+4,___flmul@b
  4806  000DD6  C135  F01D         	movff	_procces_data+5,___flmul@b+1
  4807  000DDA  C136  F01E         	movff	_procces_data+6,___flmul@b+2
  4808  000DDE  C137  F01F         	movff	_procces_data+7,___flmul@b+3
  4809  000DE2  ECA9  F00F         	call	___flmul	;wreg free
  4810  000DE6  C01C  F035         	movff	?___flmul,___fldiv@b
  4811  000DEA  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4812  000DEE  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4813  000DF2  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4814  000DF6  ECBE  F011         	call	___fldiv	;wreg free
  4815  000DFA  C035  F04E         	movff	?___fldiv,___fltol@f1
  4816  000DFE  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4817  000E02  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4818  000E06  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4819  000E0A  ECD3  F020         	call	___fltol	;wreg free
  4820  000E0E  C04E  F104         	movff	?___fltol,_convert_data+4
  4821  000E12  C04F  F105         	movff	?___fltol+1,_convert_data+5
  4822  000E16  C050  F106         	movff	?___fltol+2,_convert_data+6
  4823  000E1A  C051  F107         	movff	?___fltol+3,_convert_data+7
  4824                           
  4825                           ;fs_adc.c: 107:         break;
  4826  000E1E  EF29  F00A         	goto	l76
  4827  000E22                     l5708:
  4828                           
  4829                           ; BSR set to: 1
  4830                           ;fs_adc.c: 110:             adc_raw_data.channel_2 = readAdcValue(2);
  4831  000E22  0E02               	movlw	2
  4832  000E24  ECE5  F029         	call	_readAdcValue
  4833  000E28  C001  F177         	movff	?_readAdcValue,_adc_raw_data+4
  4834  000E2C  C002  F178         	movff	?_readAdcValue+1,_adc_raw_data+5
  4835  000E30                     
  4836                           ;fs_adc.c: 111:             procces_data.channel_2 = (float)((adc_raw_data.channel_2*5.0
      +                          )/1024.0);
  4837  000E30  0E00               	movlw	0
  4838  000E32  6E20               	movwf	___flmul@a^0,c
  4839  000E34  0E00               	movlw	0
  4840  000E36  6E21               	movwf	(___flmul@a+1)^0,c
  4841  000E38  0EA0               	movlw	160
  4842  000E3A  6E22               	movwf	(___flmul@a+2)^0,c
  4843  000E3C  0E40               	movlw	64
  4844  000E3E  6E23               	movwf	(___flmul@a+3)^0,c
  4845  000E40  C177  F00E         	movff	_adc_raw_data+4,___xxtofl@val
  4846  000E44  C178  F00F         	movff	_adc_raw_data+5,___xxtofl@val+1
  4847  000E48  6A10               	clrf	(___xxtofl@val+2)^0,c
  4848  000E4A  6A11               	clrf	(___xxtofl@val+3)^0,c
  4849  000E4C  0E00               	movlw	0
  4850  000E4E  ECAA  F01A         	call	___xxtofl
  4851  000E52  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4852  000E56  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4853  000E5A  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4854  000E5E  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4855  000E62  ECA9  F00F         	call	___flmul	;wreg free
  4856  000E66  C01C  F035         	movff	?___flmul,___fldiv@b
  4857  000E6A  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4858  000E6E  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4859  000E72  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4860  000E76  0E00               	movlw	0
  4861  000E78  6E39               	movwf	___fldiv@a^0,c
  4862  000E7A  0E00               	movlw	0
  4863  000E7C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4864  000E7E  0E80               	movlw	128
  4865  000E80  6E3B               	movwf	(___fldiv@a+2)^0,c
  4866  000E82  0E44               	movlw	68
  4867  000E84  6E3C               	movwf	(___fldiv@a+3)^0,c
  4868  000E86  ECBE  F011         	call	___fldiv	;wreg free
  4869  000E8A  C035  F138         	movff	?___fldiv,_procces_data+8
  4870  000E8E  C036  F139         	movff	?___fldiv+1,_procces_data+9
  4871  000E92  C037  F13A         	movff	?___fldiv+2,_procces_data+10
  4872  000E96  C038  F13B         	movff	?___fldiv+3,_procces_data+11
  4873  000E9A                     
  4874                           ;fs_adc.c: 112:             convert_data.convert_channel_2 = (uint32_t)((procces_data.ch
      +                          annel_2*999)/5);
  4875  000E9A  0E00               	movlw	0
  4876  000E9C  6E39               	movwf	___fldiv@a^0,c
  4877  000E9E  0E00               	movlw	0
  4878  000EA0  6E3A               	movwf	(___fldiv@a+1)^0,c
  4879  000EA2  0EA0               	movlw	160
  4880  000EA4  6E3B               	movwf	(___fldiv@a+2)^0,c
  4881  000EA6  0E40               	movlw	64
  4882  000EA8  6E3C               	movwf	(___fldiv@a+3)^0,c
  4883  000EAA  0E00               	movlw	0
  4884  000EAC  6E20               	movwf	___flmul@a^0,c
  4885  000EAE  0EC0               	movlw	192
  4886  000EB0  6E21               	movwf	(___flmul@a+1)^0,c
  4887  000EB2  0E79               	movlw	121
  4888  000EB4  6E22               	movwf	(___flmul@a+2)^0,c
  4889  000EB6  0E44               	movlw	68
  4890  000EB8  6E23               	movwf	(___flmul@a+3)^0,c
  4891  000EBA  C138  F01C         	movff	_procces_data+8,___flmul@b
  4892  000EBE  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4893  000EC2  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4894  000EC6  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4895  000ECA  ECA9  F00F         	call	___flmul	;wreg free
  4896  000ECE  C01C  F035         	movff	?___flmul,___fldiv@b
  4897  000ED2  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4898  000ED6  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4899  000EDA  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4900  000EDE  ECBE  F011         	call	___fldiv	;wreg free
  4901  000EE2  C035  F04E         	movff	?___fldiv,___fltol@f1
  4902  000EE6  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4903  000EEA  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4904  000EEE  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4905  000EF2  ECD3  F020         	call	___fltol	;wreg free
  4906  000EF6  C04E  F108         	movff	?___fltol,_convert_data+8
  4907  000EFA  C04F  F109         	movff	?___fltol+1,_convert_data+9
  4908  000EFE  C050  F10A         	movff	?___fltol+2,_convert_data+10
  4909  000F02  C051  F10B         	movff	?___fltol+3,_convert_data+11
  4910  000F06                     
  4911                           ;fs_adc.c: 113:             convert_data.convert_channel_2_f = (uint16_t)((procces_data.
      +                          channel_2*999)/5);
  4912  000F06  0E00               	movlw	0
  4913  000F08  6E39               	movwf	___fldiv@a^0,c
  4914  000F0A  0E00               	movlw	0
  4915  000F0C  6E3A               	movwf	(___fldiv@a+1)^0,c
  4916  000F0E  0EA0               	movlw	160
  4917  000F10  6E3B               	movwf	(___fldiv@a+2)^0,c
  4918  000F12  0E40               	movlw	64
  4919  000F14  6E3C               	movwf	(___fldiv@a+3)^0,c
  4920  000F16  0E00               	movlw	0
  4921  000F18  6E20               	movwf	___flmul@a^0,c
  4922  000F1A  0EC0               	movlw	192
  4923  000F1C  6E21               	movwf	(___flmul@a+1)^0,c
  4924  000F1E  0E79               	movlw	121
  4925  000F20  6E22               	movwf	(___flmul@a+2)^0,c
  4926  000F22  0E44               	movlw	68
  4927  000F24  6E23               	movwf	(___flmul@a+3)^0,c
  4928  000F26  C138  F01C         	movff	_procces_data+8,___flmul@b
  4929  000F2A  C139  F01D         	movff	_procces_data+9,___flmul@b+1
  4930  000F2E  C13A  F01E         	movff	_procces_data+10,___flmul@b+2
  4931  000F32  C13B  F01F         	movff	_procces_data+11,___flmul@b+3
  4932  000F36  ECA9  F00F         	call	___flmul	;wreg free
  4933  000F3A  C01C  F035         	movff	?___flmul,___fldiv@b
  4934  000F3E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4935  000F42  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4936  000F46  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4937  000F4A  ECBE  F011         	call	___fldiv	;wreg free
  4938  000F4E  C035  F04E         	movff	?___fldiv,___fltol@f1
  4939  000F52  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  4940  000F56  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  4941  000F5A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  4942  000F5E  ECD3  F020         	call	___fltol	;wreg free
  4943  000F62  C04E  F124         	movff	?___fltol,_convert_data+36
  4944  000F66  C04F  F125         	movff	?___fltol+1,_convert_data+37
  4945                           
  4946                           ;fs_adc.c: 114:         break;
  4947  000F6A  EF29  F00A         	goto	l76
  4948  000F6E                     l5716:
  4949                           
  4950                           ; BSR set to: 1
  4951                           ;fs_adc.c: 117:             adc_raw_data.channel_3 = readAdcValue(3);
  4952  000F6E  0E03               	movlw	3
  4953  000F70  ECE5  F029         	call	_readAdcValue
  4954  000F74  C001  F179         	movff	?_readAdcValue,_adc_raw_data+6
  4955  000F78  C002  F17A         	movff	?_readAdcValue+1,_adc_raw_data+7
  4956  000F7C                     
  4957                           ;fs_adc.c: 118:             procces_data.channel_3 = (float)((adc_raw_data.channel_3*5.0
      +                          )/1024.0);
  4958  000F7C  0E00               	movlw	0
  4959  000F7E  6E20               	movwf	___flmul@a^0,c
  4960  000F80  0E00               	movlw	0
  4961  000F82  6E21               	movwf	(___flmul@a+1)^0,c
  4962  000F84  0EA0               	movlw	160
  4963  000F86  6E22               	movwf	(___flmul@a+2)^0,c
  4964  000F88  0E40               	movlw	64
  4965  000F8A  6E23               	movwf	(___flmul@a+3)^0,c
  4966  000F8C  C179  F00E         	movff	_adc_raw_data+6,___xxtofl@val
  4967  000F90  C17A  F00F         	movff	_adc_raw_data+7,___xxtofl@val+1
  4968  000F94  6A10               	clrf	(___xxtofl@val+2)^0,c
  4969  000F96  6A11               	clrf	(___xxtofl@val+3)^0,c
  4970  000F98  0E00               	movlw	0
  4971  000F9A  ECAA  F01A         	call	___xxtofl
  4972  000F9E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  4973  000FA2  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  4974  000FA6  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  4975  000FAA  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  4976  000FAE  ECA9  F00F         	call	___flmul	;wreg free
  4977  000FB2  C01C  F035         	movff	?___flmul,___fldiv@b
  4978  000FB6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  4979  000FBA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  4980  000FBE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  4981  000FC2  0E00               	movlw	0
  4982  000FC4  6E39               	movwf	___fldiv@a^0,c
  4983  000FC6  0E00               	movlw	0
  4984  000FC8  6E3A               	movwf	(___fldiv@a+1)^0,c
  4985  000FCA  0E80               	movlw	128
  4986  000FCC  6E3B               	movwf	(___fldiv@a+2)^0,c
  4987  000FCE  0E44               	movlw	68
  4988  000FD0  6E3C               	movwf	(___fldiv@a+3)^0,c
  4989  000FD2  ECBE  F011         	call	___fldiv	;wreg free
  4990  000FD6  C035  F13C         	movff	?___fldiv,_procces_data+12
  4991  000FDA  C036  F13D         	movff	?___fldiv+1,_procces_data+13
  4992  000FDE  C037  F13E         	movff	?___fldiv+2,_procces_data+14
  4993  000FE2  C038  F13F         	movff	?___fldiv+3,_procces_data+15
  4994  000FE6                     
  4995                           ;fs_adc.c: 119:             convert_data.convert_channel_3 = (uint32_t)((procces_data.ch
      +                          annel_3*999)/5);
  4996  000FE6  0E00               	movlw	0
  4997  000FE8  6E39               	movwf	___fldiv@a^0,c
  4998  000FEA  0E00               	movlw	0
  4999  000FEC  6E3A               	movwf	(___fldiv@a+1)^0,c
  5000  000FEE  0EA0               	movlw	160
  5001  000FF0  6E3B               	movwf	(___fldiv@a+2)^0,c
  5002  000FF2  0E40               	movlw	64
  5003  000FF4  6E3C               	movwf	(___fldiv@a+3)^0,c
  5004  000FF6  0E00               	movlw	0
  5005  000FF8  6E20               	movwf	___flmul@a^0,c
  5006  000FFA  0EC0               	movlw	192
  5007  000FFC  6E21               	movwf	(___flmul@a+1)^0,c
  5008  000FFE  0E79               	movlw	121
  5009  001000  6E22               	movwf	(___flmul@a+2)^0,c
  5010  001002  0E44               	movlw	68
  5011  001004  6E23               	movwf	(___flmul@a+3)^0,c
  5012  001006  C13C  F01C         	movff	_procces_data+12,___flmul@b
  5013  00100A  C13D  F01D         	movff	_procces_data+13,___flmul@b+1
  5014  00100E  C13E  F01E         	movff	_procces_data+14,___flmul@b+2
  5015  001012  C13F  F01F         	movff	_procces_data+15,___flmul@b+3
  5016  001016  ECA9  F00F         	call	___flmul	;wreg free
  5017  00101A  C01C  F035         	movff	?___flmul,___fldiv@b
  5018  00101E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5019  001022  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5020  001026  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5021  00102A  ECBE  F011         	call	___fldiv	;wreg free
  5022  00102E  C035  F04E         	movff	?___fldiv,___fltol@f1
  5023  001032  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5024  001036  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5025  00103A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5026  00103E  ECD3  F020         	call	___fltol	;wreg free
  5027  001042  C04E  F10C         	movff	?___fltol,_convert_data+12
  5028  001046  C04F  F10D         	movff	?___fltol+1,_convert_data+13
  5029  00104A  C050  F10E         	movff	?___fltol+2,_convert_data+14
  5030  00104E  C051  F10F         	movff	?___fltol+3,_convert_data+15
  5031                           
  5032                           ;fs_adc.c: 120:         break;
  5033  001052  EF29  F00A         	goto	l76
  5034  001056                     l5722:
  5035                           
  5036                           ; BSR set to: 1
  5037                           ;fs_adc.c: 123:             adc_raw_data.channel_4 = readAdcValue(4);
  5038  001056  0E04               	movlw	4
  5039  001058  ECE5  F029         	call	_readAdcValue
  5040  00105C  C001  F17B         	movff	?_readAdcValue,_adc_raw_data+8
  5041  001060  C002  F17C         	movff	?_readAdcValue+1,_adc_raw_data+9
  5042  001064                     
  5043                           ;fs_adc.c: 124:             procces_data.channel_4 = (float)((adc_raw_data.channel_4*5.0
      +                          )/1024.0);
  5044  001064  0E00               	movlw	0
  5045  001066  6E20               	movwf	___flmul@a^0,c
  5046  001068  0E00               	movlw	0
  5047  00106A  6E21               	movwf	(___flmul@a+1)^0,c
  5048  00106C  0EA0               	movlw	160
  5049  00106E  6E22               	movwf	(___flmul@a+2)^0,c
  5050  001070  0E40               	movlw	64
  5051  001072  6E23               	movwf	(___flmul@a+3)^0,c
  5052  001074  C17B  F00E         	movff	_adc_raw_data+8,___xxtofl@val
  5053  001078  C17C  F00F         	movff	_adc_raw_data+9,___xxtofl@val+1
  5054  00107C  6A10               	clrf	(___xxtofl@val+2)^0,c
  5055  00107E  6A11               	clrf	(___xxtofl@val+3)^0,c
  5056  001080  0E00               	movlw	0
  5057  001082  ECAA  F01A         	call	___xxtofl
  5058  001086  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5059  00108A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5060  00108E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5061  001092  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5062  001096  ECA9  F00F         	call	___flmul	;wreg free
  5063  00109A  C01C  F035         	movff	?___flmul,___fldiv@b
  5064  00109E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5065  0010A2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5066  0010A6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5067  0010AA  0E00               	movlw	0
  5068  0010AC  6E39               	movwf	___fldiv@a^0,c
  5069  0010AE  0E00               	movlw	0
  5070  0010B0  6E3A               	movwf	(___fldiv@a+1)^0,c
  5071  0010B2  0E80               	movlw	128
  5072  0010B4  6E3B               	movwf	(___fldiv@a+2)^0,c
  5073  0010B6  0E44               	movlw	68
  5074  0010B8  6E3C               	movwf	(___fldiv@a+3)^0,c
  5075  0010BA  ECBE  F011         	call	___fldiv	;wreg free
  5076  0010BE  C035  F140         	movff	?___fldiv,_procces_data+16
  5077  0010C2  C036  F141         	movff	?___fldiv+1,_procces_data+17
  5078  0010C6  C037  F142         	movff	?___fldiv+2,_procces_data+18
  5079  0010CA  C038  F143         	movff	?___fldiv+3,_procces_data+19
  5080  0010CE                     
  5081                           ;fs_adc.c: 125:             convert_data.convert_channel_4 = (uint32_t)((procces_data.ch
      +                          annel_4*999)/5);
  5082  0010CE  0E00               	movlw	0
  5083  0010D0  6E39               	movwf	___fldiv@a^0,c
  5084  0010D2  0E00               	movlw	0
  5085  0010D4  6E3A               	movwf	(___fldiv@a+1)^0,c
  5086  0010D6  0EA0               	movlw	160
  5087  0010D8  6E3B               	movwf	(___fldiv@a+2)^0,c
  5088  0010DA  0E40               	movlw	64
  5089  0010DC  6E3C               	movwf	(___fldiv@a+3)^0,c
  5090  0010DE  0E00               	movlw	0
  5091  0010E0  6E20               	movwf	___flmul@a^0,c
  5092  0010E2  0EC0               	movlw	192
  5093  0010E4  6E21               	movwf	(___flmul@a+1)^0,c
  5094  0010E6  0E79               	movlw	121
  5095  0010E8  6E22               	movwf	(___flmul@a+2)^0,c
  5096  0010EA  0E44               	movlw	68
  5097  0010EC  6E23               	movwf	(___flmul@a+3)^0,c
  5098  0010EE  C140  F01C         	movff	_procces_data+16,___flmul@b
  5099  0010F2  C141  F01D         	movff	_procces_data+17,___flmul@b+1
  5100  0010F6  C142  F01E         	movff	_procces_data+18,___flmul@b+2
  5101  0010FA  C143  F01F         	movff	_procces_data+19,___flmul@b+3
  5102  0010FE  ECA9  F00F         	call	___flmul	;wreg free
  5103  001102  C01C  F035         	movff	?___flmul,___fldiv@b
  5104  001106  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5105  00110A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5106  00110E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5107  001112  ECBE  F011         	call	___fldiv	;wreg free
  5108  001116  C035  F04E         	movff	?___fldiv,___fltol@f1
  5109  00111A  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5110  00111E  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5111  001122  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5112  001126  ECD3  F020         	call	___fltol	;wreg free
  5113  00112A  C04E  F110         	movff	?___fltol,_convert_data+16
  5114  00112E  C04F  F111         	movff	?___fltol+1,_convert_data+17
  5115  001132  C050  F112         	movff	?___fltol+2,_convert_data+18
  5116  001136  C051  F113         	movff	?___fltol+3,_convert_data+19
  5117                           
  5118                           ;fs_adc.c: 126:         break;
  5119  00113A  EF29  F00A         	goto	l76
  5120  00113E                     l5728:
  5121                           
  5122                           ; BSR set to: 1
  5123                           ;fs_adc.c: 129:            adc_raw_data.channel_5 = readAdcValue(5);
  5124  00113E  0E05               	movlw	5
  5125  001140  ECE5  F029         	call	_readAdcValue
  5126  001144  C001  F17D         	movff	?_readAdcValue,_adc_raw_data+10
  5127  001148  C002  F17E         	movff	?_readAdcValue+1,_adc_raw_data+11
  5128  00114C                     
  5129                           ;fs_adc.c: 130:            procces_data.channel_5 = (float)((adc_raw_data.channel_5*5.0)
      +                          /1024.0);
  5130  00114C  0E00               	movlw	0
  5131  00114E  6E20               	movwf	___flmul@a^0,c
  5132  001150  0E00               	movlw	0
  5133  001152  6E21               	movwf	(___flmul@a+1)^0,c
  5134  001154  0EA0               	movlw	160
  5135  001156  6E22               	movwf	(___flmul@a+2)^0,c
  5136  001158  0E40               	movlw	64
  5137  00115A  6E23               	movwf	(___flmul@a+3)^0,c
  5138  00115C  C17D  F00E         	movff	_adc_raw_data+10,___xxtofl@val
  5139  001160  C17E  F00F         	movff	_adc_raw_data+11,___xxtofl@val+1
  5140  001164  6A10               	clrf	(___xxtofl@val+2)^0,c
  5141  001166  6A11               	clrf	(___xxtofl@val+3)^0,c
  5142  001168  0E00               	movlw	0
  5143  00116A  ECAA  F01A         	call	___xxtofl
  5144  00116E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5145  001172  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5146  001176  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5147  00117A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5148  00117E  ECA9  F00F         	call	___flmul	;wreg free
  5149  001182  C01C  F035         	movff	?___flmul,___fldiv@b
  5150  001186  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5151  00118A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5152  00118E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5153  001192  0E00               	movlw	0
  5154  001194  6E39               	movwf	___fldiv@a^0,c
  5155  001196  0E00               	movlw	0
  5156  001198  6E3A               	movwf	(___fldiv@a+1)^0,c
  5157  00119A  0E80               	movlw	128
  5158  00119C  6E3B               	movwf	(___fldiv@a+2)^0,c
  5159  00119E  0E44               	movlw	68
  5160  0011A0  6E3C               	movwf	(___fldiv@a+3)^0,c
  5161  0011A2  ECBE  F011         	call	___fldiv	;wreg free
  5162  0011A6  C035  F144         	movff	?___fldiv,_procces_data+20
  5163  0011AA  C036  F145         	movff	?___fldiv+1,_procces_data+21
  5164  0011AE  C037  F146         	movff	?___fldiv+2,_procces_data+22
  5165  0011B2  C038  F147         	movff	?___fldiv+3,_procces_data+23
  5166  0011B6                     
  5167                           ;fs_adc.c: 131:            convert_data.convert_channel_5 = (uint32_t)((procces_data.cha
      +                          nnel_5*999)/5);
  5168  0011B6  0E00               	movlw	0
  5169  0011B8  6E39               	movwf	___fldiv@a^0,c
  5170  0011BA  0E00               	movlw	0
  5171  0011BC  6E3A               	movwf	(___fldiv@a+1)^0,c
  5172  0011BE  0EA0               	movlw	160
  5173  0011C0  6E3B               	movwf	(___fldiv@a+2)^0,c
  5174  0011C2  0E40               	movlw	64
  5175  0011C4  6E3C               	movwf	(___fldiv@a+3)^0,c
  5176  0011C6  0E00               	movlw	0
  5177  0011C8  6E20               	movwf	___flmul@a^0,c
  5178  0011CA  0EC0               	movlw	192
  5179  0011CC  6E21               	movwf	(___flmul@a+1)^0,c
  5180  0011CE  0E79               	movlw	121
  5181  0011D0  6E22               	movwf	(___flmul@a+2)^0,c
  5182  0011D2  0E44               	movlw	68
  5183  0011D4  6E23               	movwf	(___flmul@a+3)^0,c
  5184  0011D6  C144  F01C         	movff	_procces_data+20,___flmul@b
  5185  0011DA  C145  F01D         	movff	_procces_data+21,___flmul@b+1
  5186  0011DE  C146  F01E         	movff	_procces_data+22,___flmul@b+2
  5187  0011E2  C147  F01F         	movff	_procces_data+23,___flmul@b+3
  5188  0011E6  ECA9  F00F         	call	___flmul	;wreg free
  5189  0011EA  C01C  F035         	movff	?___flmul,___fldiv@b
  5190  0011EE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5191  0011F2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5192  0011F6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5193  0011FA  ECBE  F011         	call	___fldiv	;wreg free
  5194  0011FE  C035  F04E         	movff	?___fldiv,___fltol@f1
  5195  001202  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5196  001206  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5197  00120A  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5198  00120E  ECD3  F020         	call	___fltol	;wreg free
  5199  001212  C04E  F114         	movff	?___fltol,_convert_data+20
  5200  001216  C04F  F115         	movff	?___fltol+1,_convert_data+21
  5201  00121A  C050  F116         	movff	?___fltol+2,_convert_data+22
  5202  00121E  C051  F117         	movff	?___fltol+3,_convert_data+23
  5203                           
  5204                           ;fs_adc.c: 132:         break;
  5205  001222  EF29  F00A         	goto	l76
  5206  001226                     l5734:
  5207                           
  5208                           ; BSR set to: 1
  5209                           ;fs_adc.c: 135:             adc_raw_data.channel_6 = readAdcValue(6);
  5210  001226  0E06               	movlw	6
  5211  001228  ECE5  F029         	call	_readAdcValue
  5212  00122C  C001  F17F         	movff	?_readAdcValue,_adc_raw_data+12
  5213  001230  C002  F180         	movff	?_readAdcValue+1,_adc_raw_data+13
  5214  001234                     
  5215                           ;fs_adc.c: 136:             procces_data.channel_6 = (float)((adc_raw_data.channel_6*5.0
      +                          )/1024.0);
  5216  001234  0E00               	movlw	0
  5217  001236  6E20               	movwf	___flmul@a^0,c
  5218  001238  0E00               	movlw	0
  5219  00123A  6E21               	movwf	(___flmul@a+1)^0,c
  5220  00123C  0EA0               	movlw	160
  5221  00123E  6E22               	movwf	(___flmul@a+2)^0,c
  5222  001240  0E40               	movlw	64
  5223  001242  6E23               	movwf	(___flmul@a+3)^0,c
  5224  001244  C17F  F00E         	movff	_adc_raw_data+12,___xxtofl@val
  5225  001248  C180  F00F         	movff	_adc_raw_data+13,___xxtofl@val+1
  5226  00124C  6A10               	clrf	(___xxtofl@val+2)^0,c
  5227  00124E  6A11               	clrf	(___xxtofl@val+3)^0,c
  5228  001250  0E00               	movlw	0
  5229  001252  ECAA  F01A         	call	___xxtofl
  5230  001256  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5231  00125A  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5232  00125E  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5233  001262  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5234  001266  ECA9  F00F         	call	___flmul	;wreg free
  5235  00126A  C01C  F035         	movff	?___flmul,___fldiv@b
  5236  00126E  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5237  001272  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5238  001276  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5239  00127A  0E00               	movlw	0
  5240  00127C  6E39               	movwf	___fldiv@a^0,c
  5241  00127E  0E00               	movlw	0
  5242  001280  6E3A               	movwf	(___fldiv@a+1)^0,c
  5243  001282  0E80               	movlw	128
  5244  001284  6E3B               	movwf	(___fldiv@a+2)^0,c
  5245  001286  0E44               	movlw	68
  5246  001288  6E3C               	movwf	(___fldiv@a+3)^0,c
  5247  00128A  ECBE  F011         	call	___fldiv	;wreg free
  5248  00128E  C035  F148         	movff	?___fldiv,_procces_data+24
  5249  001292  C036  F149         	movff	?___fldiv+1,_procces_data+25
  5250  001296  C037  F14A         	movff	?___fldiv+2,_procces_data+26
  5251  00129A  C038  F14B         	movff	?___fldiv+3,_procces_data+27
  5252  00129E                     
  5253                           ;fs_adc.c: 137:             convert_data.convert_channel_6 = (uint32_t)((procces_data.ch
      +                          annel_6*999)/5);
  5254  00129E  0E00               	movlw	0
  5255  0012A0  6E39               	movwf	___fldiv@a^0,c
  5256  0012A2  0E00               	movlw	0
  5257  0012A4  6E3A               	movwf	(___fldiv@a+1)^0,c
  5258  0012A6  0EA0               	movlw	160
  5259  0012A8  6E3B               	movwf	(___fldiv@a+2)^0,c
  5260  0012AA  0E40               	movlw	64
  5261  0012AC  6E3C               	movwf	(___fldiv@a+3)^0,c
  5262  0012AE  0E00               	movlw	0
  5263  0012B0  6E20               	movwf	___flmul@a^0,c
  5264  0012B2  0EC0               	movlw	192
  5265  0012B4  6E21               	movwf	(___flmul@a+1)^0,c
  5266  0012B6  0E79               	movlw	121
  5267  0012B8  6E22               	movwf	(___flmul@a+2)^0,c
  5268  0012BA  0E44               	movlw	68
  5269  0012BC  6E23               	movwf	(___flmul@a+3)^0,c
  5270  0012BE  C148  F01C         	movff	_procces_data+24,___flmul@b
  5271  0012C2  C149  F01D         	movff	_procces_data+25,___flmul@b+1
  5272  0012C6  C14A  F01E         	movff	_procces_data+26,___flmul@b+2
  5273  0012CA  C14B  F01F         	movff	_procces_data+27,___flmul@b+3
  5274  0012CE  ECA9  F00F         	call	___flmul	;wreg free
  5275  0012D2  C01C  F035         	movff	?___flmul,___fldiv@b
  5276  0012D6  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5277  0012DA  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5278  0012DE  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5279  0012E2  ECBE  F011         	call	___fldiv	;wreg free
  5280  0012E6  C035  F04E         	movff	?___fldiv,___fltol@f1
  5281  0012EA  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5282  0012EE  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5283  0012F2  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5284  0012F6  ECD3  F020         	call	___fltol	;wreg free
  5285  0012FA  C04E  F118         	movff	?___fltol,_convert_data+24
  5286  0012FE  C04F  F119         	movff	?___fltol+1,_convert_data+25
  5287  001302  C050  F11A         	movff	?___fltol+2,_convert_data+26
  5288  001306  C051  F11B         	movff	?___fltol+3,_convert_data+27
  5289                           
  5290                           ;fs_adc.c: 138:         break;
  5291  00130A  EF29  F00A         	goto	l76
  5292  00130E                     l5740:
  5293                           
  5294                           ; BSR set to: 1
  5295                           ;fs_adc.c: 141:             adc_raw_data.channel_7 = readAdcValue(7);
  5296  00130E  0E07               	movlw	7
  5297  001310  ECE5  F029         	call	_readAdcValue
  5298  001314  C001  F181         	movff	?_readAdcValue,_adc_raw_data+14
  5299  001318  C002  F182         	movff	?_readAdcValue+1,_adc_raw_data+15
  5300  00131C                     
  5301                           ;fs_adc.c: 142:             procces_data.channel_7 = (float)((adc_raw_data.channel_7*5.0
      +                          )/1024.0);
  5302  00131C  0E00               	movlw	0
  5303  00131E  6E20               	movwf	___flmul@a^0,c
  5304  001320  0E00               	movlw	0
  5305  001322  6E21               	movwf	(___flmul@a+1)^0,c
  5306  001324  0EA0               	movlw	160
  5307  001326  6E22               	movwf	(___flmul@a+2)^0,c
  5308  001328  0E40               	movlw	64
  5309  00132A  6E23               	movwf	(___flmul@a+3)^0,c
  5310  00132C  C181  F00E         	movff	_adc_raw_data+14,___xxtofl@val
  5311  001330  C182  F00F         	movff	_adc_raw_data+15,___xxtofl@val+1
  5312  001334  6A10               	clrf	(___xxtofl@val+2)^0,c
  5313  001336  6A11               	clrf	(___xxtofl@val+3)^0,c
  5314  001338  0E00               	movlw	0
  5315  00133A  ECAA  F01A         	call	___xxtofl
  5316  00133E  C00E  F01C         	movff	?___xxtofl,___flmul@b
  5317  001342  C00F  F01D         	movff	?___xxtofl+1,___flmul@b+1
  5318  001346  C010  F01E         	movff	?___xxtofl+2,___flmul@b+2
  5319  00134A  C011  F01F         	movff	?___xxtofl+3,___flmul@b+3
  5320  00134E  ECA9  F00F         	call	___flmul	;wreg free
  5321  001352  C01C  F035         	movff	?___flmul,___fldiv@b
  5322  001356  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5323  00135A  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5324  00135E  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5325  001362  0E00               	movlw	0
  5326  001364  6E39               	movwf	___fldiv@a^0,c
  5327  001366  0E00               	movlw	0
  5328  001368  6E3A               	movwf	(___fldiv@a+1)^0,c
  5329  00136A  0E80               	movlw	128
  5330  00136C  6E3B               	movwf	(___fldiv@a+2)^0,c
  5331  00136E  0E44               	movlw	68
  5332  001370  6E3C               	movwf	(___fldiv@a+3)^0,c
  5333  001372  ECBE  F011         	call	___fldiv	;wreg free
  5334  001376  C035  F14C         	movff	?___fldiv,_procces_data+28
  5335  00137A  C036  F14D         	movff	?___fldiv+1,_procces_data+29
  5336  00137E  C037  F14E         	movff	?___fldiv+2,_procces_data+30
  5337  001382  C038  F14F         	movff	?___fldiv+3,_procces_data+31
  5338  001386                     
  5339                           ;fs_adc.c: 143:             convert_data.convert_channel_7 = (uint32_t)((procces_data.ch
      +                          annel_7*999)/5);
  5340  001386  0E00               	movlw	0
  5341  001388  6E39               	movwf	___fldiv@a^0,c
  5342  00138A  0E00               	movlw	0
  5343  00138C  6E3A               	movwf	(___fldiv@a+1)^0,c
  5344  00138E  0EA0               	movlw	160
  5345  001390  6E3B               	movwf	(___fldiv@a+2)^0,c
  5346  001392  0E40               	movlw	64
  5347  001394  6E3C               	movwf	(___fldiv@a+3)^0,c
  5348  001396  0E00               	movlw	0
  5349  001398  6E20               	movwf	___flmul@a^0,c
  5350  00139A  0EC0               	movlw	192
  5351  00139C  6E21               	movwf	(___flmul@a+1)^0,c
  5352  00139E  0E79               	movlw	121
  5353  0013A0  6E22               	movwf	(___flmul@a+2)^0,c
  5354  0013A2  0E44               	movlw	68
  5355  0013A4  6E23               	movwf	(___flmul@a+3)^0,c
  5356  0013A6  C14C  F01C         	movff	_procces_data+28,___flmul@b
  5357  0013AA  C14D  F01D         	movff	_procces_data+29,___flmul@b+1
  5358  0013AE  C14E  F01E         	movff	_procces_data+30,___flmul@b+2
  5359  0013B2  C14F  F01F         	movff	_procces_data+31,___flmul@b+3
  5360  0013B6  ECA9  F00F         	call	___flmul	;wreg free
  5361  0013BA  C01C  F035         	movff	?___flmul,___fldiv@b
  5362  0013BE  C01D  F036         	movff	?___flmul+1,___fldiv@b+1
  5363  0013C2  C01E  F037         	movff	?___flmul+2,___fldiv@b+2
  5364  0013C6  C01F  F038         	movff	?___flmul+3,___fldiv@b+3
  5365  0013CA  ECBE  F011         	call	___fldiv	;wreg free
  5366  0013CE  C035  F04E         	movff	?___fldiv,___fltol@f1
  5367  0013D2  C036  F04F         	movff	?___fldiv+1,___fltol@f1+1
  5368  0013D6  C037  F050         	movff	?___fldiv+2,___fltol@f1+2
  5369  0013DA  C038  F051         	movff	?___fldiv+3,___fltol@f1+3
  5370  0013DE  ECD3  F020         	call	___fltol	;wreg free
  5371  0013E2  C04E  F11C         	movff	?___fltol,_convert_data+28
  5372  0013E6  C04F  F11D         	movff	?___fltol+1,_convert_data+29
  5373  0013EA  C050  F11E         	movff	?___fltol+2,_convert_data+30
  5374  0013EE  C051  F11F         	movff	?___fltol+3,_convert_data+31
  5375                           
  5376                           ;fs_adc.c: 144:         break;
  5377  0013F2  EF29  F00A         	goto	l76
  5378  0013F6                     l5748:
  5379  0013F6  0101               	movlb	1	; () banked
  5380  0013F8  5194               	movf	(_timer_value+5)& (0+255),w,b
  5381  0013FA  6E58               	movwf	??_scanAdcConversion^0,c
  5382  0013FC  6A59               	clrf	(??_scanAdcConversion+1)^0,c
  5383                           
  5384                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
  5385                           ; Switch size 1, requested type "simple"
  5386                           ; Number of cases is 1, Range of values is 0 to 0
  5387                           ; switch strategies available:
  5388                           ; Name         Instructions Cycles
  5389                           ; simple_byte            4     3 (average)
  5390                           ;	Chosen strategy is simple_byte
  5391  0013FE  5059               	movf	(??_scanAdcConversion+1)^0,w,c
  5392  001400  0A00               	xorlw	0	; case 0
  5393  001402  B4D8               	btfsc	status,2,c
  5394  001404  EF06  F00A         	goto	l6618
  5395  001408  EF29  F00A         	goto	l76
  5396  00140C                     l6618:
  5397                           
  5398                           ; BSR set to: 1
  5399                           ; Switch size 1, requested type "simple"
  5400                           ; Number of cases is 8, Range of values is 1 to 8
  5401                           ; switch strategies available:
  5402                           ; Name         Instructions Cycles
  5403                           ; simple_byte           25    13 (average)
  5404                           ;	Chosen strategy is simple_byte
  5405  00140C  5058               	movf	??_scanAdcConversion^0,w,c
  5406  00140E  0A01               	xorlw	1	; case 1
  5407  001410  B4D8               	btfsc	status,2,c
  5408  001412  EF29  F006         	goto	l5696
  5409  001416  0A03               	xorlw	3	; case 2
  5410  001418  B4D8               	btfsc	status,2,c
  5411  00141A  EF9D  F006         	goto	l5702
  5412  00141E  0A01               	xorlw	1	; case 3
  5413  001420  B4D8               	btfsc	status,2,c
  5414  001422  EF11  F007         	goto	l5708
  5415  001426  0A07               	xorlw	7	; case 4
  5416  001428  B4D8               	btfsc	status,2,c
  5417  00142A  EFB7  F007         	goto	l5716
  5418  00142E  0A01               	xorlw	1	; case 5
  5419  001430  B4D8               	btfsc	status,2,c
  5420  001432  EF2B  F008         	goto	l5722
  5421  001436  0A03               	xorlw	3	; case 6
  5422  001438  B4D8               	btfsc	status,2,c
  5423  00143A  EF9F  F008         	goto	l5728
  5424  00143E  0A01               	xorlw	1	; case 7
  5425  001440  B4D8               	btfsc	status,2,c
  5426  001442  EF13  F009         	goto	l5734
  5427  001446  0A0F               	xorlw	15	; case 8
  5428  001448  B4D8               	btfsc	status,2,c
  5429  00144A  EF87  F009         	goto	l5740
  5430  00144E  EF29  F00A         	goto	l76
  5431  001452                     l76:
  5432  001452  0012               	return		;funcret
  5433  001454                     __end_of_scanAdcConversion:
  5434                           	callstack 0
  5435                           
  5436 ;; *************** function _readAdcValue *****************
  5437 ;; Defined at:
  5438 ;;		line 34 in file "fs_adc.c"
  5439 ;; Parameters:    Size  Location     Type
  5440 ;;  adcChannel      1    wreg     unsigned char 
  5441 ;; Auto vars:     Size  Location     Type
  5442 ;;  adcChannel      1    4[COMRAM] unsigned char 
  5443 ;;  adcValue        2    5[COMRAM] unsigned short 
  5444 ;; Return value:  Size  Location     Type
  5445 ;;                  2    0[COMRAM] unsigned short 
  5446 ;; Registers used:
  5447 ;;		wreg, status,2, status,0
  5448 ;; Tracked objects:
  5449 ;;		On entry : 0/0
  5450 ;;		On exit  : 0/0
  5451 ;;		Unchanged: 0/0
  5452 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5453 ;;      Params:         2       0       0       0       0       0       0
  5454 ;;      Locals:         3       0       0       0       0       0       0
  5455 ;;      Temps:          2       0       0       0       0       0       0
  5456 ;;      Totals:         7       0       0       0       0       0       0
  5457 ;;Total ram usage:        7 bytes
  5458 ;; Hardware stack levels used:    1
  5459 ;; Hardware stack levels required when called:    1
  5460 ;; This function calls:
  5461 ;;		Nothing
  5462 ;; This function is called by:
  5463 ;;		_scanAdcConversion
  5464 ;; This function uses a non-reentrant model
  5465 ;;
  5466                           
  5467                           	psect	text19
  5468  0053CA                     __ptext19:
  5469                           	callstack 0
  5470  0053CA                     _readAdcValue:
  5471                           	callstack 24
  5472                           
  5473                           ;incstack = 0
  5474                           ;readAdcValue@adcChannel stored from wreg
  5475  0053CA  6E05               	movwf	readAdcValue@adcChannel^0,c
  5476  0053CC                     
  5477                           ;fs_adc.c: 38:  ADCON0bits.CHS = adcChannel;
  5478  0053CC  C005  F003         	movff	readAdcValue@adcChannel,??_readAdcValue
  5479  0053D0  4603               	rlncf	??_readAdcValue^0,f,c
  5480  0053D2  4603               	rlncf	??_readAdcValue^0,f,c
  5481  0053D4  50C2               	movf	194,w,c	;volatile
  5482  0053D6  1803               	xorwf	??_readAdcValue^0,w,c
  5483  0053D8  0B83               	andlw	-125
  5484  0053DA  1803               	xorwf	??_readAdcValue^0,w,c
  5485  0053DC  6EC2               	movwf	194,c	;volatile
  5486  0053DE                     
  5487                           ;fs_adc.c: 39:  ADCON0bits.ADON = 1;
  5488  0053DE  80C2               	bsf	194,0,c	;volatile
  5489  0053E0                     
  5490                           ;fs_adc.c: 40:  ADCON0bits.GO_nDONE = 1;
  5491  0053E0  82C2               	bsf	194,1,c	;volatile
  5492  0053E2                     l57:
  5493  0053E2  B2C2               	btfsc	194,1,c	;volatile
  5494  0053E4  EFF6  F029         	goto	u6391
  5495  0053E8  EFF8  F029         	goto	u6390
  5496  0053EC                     u6391:
  5497  0053EC  EFF1  F029         	goto	l57
  5498  0053F0                     u6390:
  5499  0053F0                     
  5500                           ;fs_adc.c: 42:  adcValue = (uint16_t)((ADRESH << 8) + ADRESL);
  5501  0053F0  50C4               	movf	196,w,c	;volatile
  5502  0053F2  6E04               	movwf	(??_readAdcValue+1)^0,c
  5503  0053F4  6A03               	clrf	??_readAdcValue^0,c
  5504  0053F6  50C3               	movf	195,w,c	;volatile
  5505  0053F8  2403               	addwf	??_readAdcValue^0,w,c
  5506  0053FA  6E06               	movwf	readAdcValue@adcValue^0,c
  5507  0053FC  0E00               	movlw	0
  5508  0053FE  2004               	addwfc	(??_readAdcValue+1)^0,w,c
  5509  005400  6E07               	movwf	(readAdcValue@adcValue+1)^0,c
  5510  005402                     
  5511                           ;fs_adc.c: 43:     return adcValue;
  5512  005402  C006  F001         	movff	readAdcValue@adcValue,?_readAdcValue
  5513  005406  C007  F002         	movff	readAdcValue@adcValue+1,?_readAdcValue+1
  5514  00540A  0012               	return		;funcret
  5515  00540C                     __end_of_readAdcValue:
  5516                           	callstack 0
  5517                           
  5518 ;; *************** function _calculatedAverageValue *****************
  5519 ;; Defined at:
  5520 ;;		line 154 in file "fs_adc.c"
  5521 ;; Parameters:    Size  Location     Type
  5522 ;;		None
  5523 ;; Auto vars:     Size  Location     Type
  5524 ;;		None
  5525 ;; Return value:  Size  Location     Type
  5526 ;;                  1    wreg      void 
  5527 ;; Registers used:
  5528 ;;		wreg, status,2, status,0, cstack
  5529 ;; Tracked objects:
  5530 ;;		On entry : 0/0
  5531 ;;		On exit  : 0/0
  5532 ;;		Unchanged: 0/0
  5533 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5534 ;;      Params:         0       0       0       0       0       0       0
  5535 ;;      Locals:         0       0       0       0       0       0       0
  5536 ;;      Temps:         24       0       0       0       0       0       0
  5537 ;;      Totals:        24       0       0       0       0       0       0
  5538 ;;Total ram usage:       24 bytes
  5539 ;; Hardware stack levels used:    1
  5540 ;; Hardware stack levels required when called:    2
  5541 ;; This function calls:
  5542 ;;		___lldiv
  5543 ;;		___lmul
  5544 ;;		___xxtofl
  5545 ;; This function is called by:
  5546 ;;		_startMotor
  5547 ;; This function uses a non-reentrant model
  5548 ;;
  5549                           
  5550                           	psect	text20
  5551  002716                     __ptext20:
  5552                           	callstack 0
  5553  002716                     _calculatedAverageValue:
  5554                           	callstack 24
  5555  002716                     
  5556                           ;fs_adc.c: 156:     driver_limit.pay = 0;
  5557  002716  0E00               	movlw	0
  5558  002718  0101               	movlb	1	; () banked
  5559  00271A  6F83               	movwf	_driver_limit& (0+255),b
  5560  00271C  0E00               	movlw	0
  5561  00271E  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5562  002720  0E00               	movlw	0
  5563  002722  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5564  002724  0E00               	movlw	0
  5565  002726  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5566                           
  5567                           ;fs_adc.c: 157:     driver_limit.payda = 0;
  5568  002728  0E00               	movlw	0
  5569  00272A  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5570  00272C  0E00               	movlw	0
  5571  00272E  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5572  002730  0E00               	movlw	0
  5573  002732  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5574  002734  0E00               	movlw	0
  5575  002736  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5576                           
  5577                           ;fs_adc.c: 158:     driver_limit.ortalama = 0;
  5578  002738  0E00               	movlw	0
  5579  00273A  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  5580  00273C  0E00               	movlw	0
  5581  00273E  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  5582  002740  0E00               	movlw	0
  5583  002742  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  5584  002744  0E00               	movlw	0
  5585  002746  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  5586  002748                     
  5587                           ; BSR set to: 1
  5588                           ;fs_adc.c: 161:    driver_limit.pay =(uint32_t) ( (convert_data.convert_channel_0 *1) +
  5589  002748  C10C  F001         	movff	_convert_data+12,___lmul@multiplier
  5590  00274C  C10D  F002         	movff	_convert_data+13,___lmul@multiplier+1
  5591  002750  C10E  F003         	movff	_convert_data+14,___lmul@multiplier+2
  5592  002754  C10F  F004         	movff	_convert_data+15,___lmul@multiplier+3
  5593  002758  0EB8               	movlw	184
  5594  00275A  6E05               	movwf	___lmul@multiplicand^0,c
  5595  00275C  0E0B               	movlw	11
  5596  00275E  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5597  002760  0E00               	movlw	0
  5598  002762  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5599  002764  0E00               	movlw	0
  5600  002766  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5601  002768  ECD7  F027         	call	___lmul	;wreg free
  5602  00276C  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5603  002770  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5604  002774  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5605  002778  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5606  00277C  C108  F001         	movff	_convert_data+8,___lmul@multiplier
  5607  002780  C109  F002         	movff	_convert_data+9,___lmul@multiplier+1
  5608  002784  C10A  F003         	movff	_convert_data+10,___lmul@multiplier+2
  5609  002788  C10B  F004         	movff	_convert_data+11,___lmul@multiplier+3
  5610  00278C  0ED0               	movlw	208
  5611  00278E  6E05               	movwf	___lmul@multiplicand^0,c
  5612  002790  0E07               	movlw	7
  5613  002792  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5614  002794  0E00               	movlw	0
  5615  002796  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5616  002798  0E00               	movlw	0
  5617  00279A  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5618  00279C  ECD7  F027         	call	___lmul	;wreg free
  5619  0027A0  5001               	movf	?___lmul^0,w,c
  5620  0027A2  241C               	addwf	??_calculatedAverageValue^0,w,c
  5621  0027A4  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5622  0027A6  5002               	movf	(?___lmul+1)^0,w,c
  5623  0027A8  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5624  0027AA  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5625  0027AC  5003               	movf	(?___lmul+2)^0,w,c
  5626  0027AE  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5627  0027B0  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5628  0027B2  5004               	movf	(?___lmul+3)^0,w,c
  5629  0027B4  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5630  0027B6  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5631  0027B8  C104  F001         	movff	_convert_data+4,___lmul@multiplier
  5632  0027BC  C105  F002         	movff	_convert_data+5,___lmul@multiplier+1
  5633  0027C0  C106  F003         	movff	_convert_data+6,___lmul@multiplier+2
  5634  0027C4  C107  F004         	movff	_convert_data+7,___lmul@multiplier+3
  5635  0027C8  0EE8               	movlw	232
  5636  0027CA  6E05               	movwf	___lmul@multiplicand^0,c
  5637  0027CC  0E03               	movlw	3
  5638  0027CE  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5639  0027D0  0E00               	movlw	0
  5640  0027D2  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5641  0027D4  0E00               	movlw	0
  5642  0027D6  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5643  0027D8  ECD7  F027         	call	___lmul	;wreg free
  5644  0027DC  5001               	movf	?___lmul^0,w,c
  5645  0027DE  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5646  0027E0  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5647  0027E2  5002               	movf	(?___lmul+1)^0,w,c
  5648  0027E4  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5649  0027E6  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5650  0027E8  5003               	movf	(?___lmul+2)^0,w,c
  5651  0027EA  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5652  0027EC  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5653  0027EE  5004               	movf	(?___lmul+3)^0,w,c
  5654  0027F0  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5655  0027F2  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5656  0027F4  0101               	movlb	1	; () banked
  5657  0027F6  5100               	movf	_convert_data& (0+255),w,b
  5658  0027F8  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5659  0027FA  6F83               	movwf	_driver_limit& (0+255),b
  5660  0027FC  5101               	movf	(_convert_data+1)& (0+255),w,b
  5661  0027FE  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5662  002800  6F84               	movwf	(_driver_limit+1)& (0+255),b
  5663  002802  5102               	movf	(_convert_data+2)& (0+255),w,b
  5664  002804  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5665  002806  6F85               	movwf	(_driver_limit+2)& (0+255),b
  5666  002808  5103               	movf	(_convert_data+3)& (0+255),w,b
  5667  00280A  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5668  00280C  6F86               	movwf	(_driver_limit+3)& (0+255),b
  5669  00280E                     
  5670                           ; BSR set to: 1
  5671                           ;fs_adc.c: 166:    driver_limit.pay += (uint32_t)( (convert_data.convert_channel_4 * 400
      +                          0) +
  5672  00280E  C11C  F001         	movff	_convert_data+28,___lmul@multiplier
  5673  002812  C11D  F002         	movff	_convert_data+29,___lmul@multiplier+1
  5674  002816  C11E  F003         	movff	_convert_data+30,___lmul@multiplier+2
  5675  00281A  C11F  F004         	movff	_convert_data+31,___lmul@multiplier+3
  5676  00281E  0E58               	movlw	88
  5677  002820  6E05               	movwf	___lmul@multiplicand^0,c
  5678  002822  0E1B               	movlw	27
  5679  002824  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5680  002826  0E00               	movlw	0
  5681  002828  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5682  00282A  0E00               	movlw	0
  5683  00282C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5684  00282E  ECD7  F027         	call	___lmul	;wreg free
  5685  002832  C001  F01C         	movff	?___lmul,??_calculatedAverageValue
  5686  002836  C002  F01D         	movff	?___lmul+1,??_calculatedAverageValue+1
  5687  00283A  C003  F01E         	movff	?___lmul+2,??_calculatedAverageValue+2
  5688  00283E  C004  F01F         	movff	?___lmul+3,??_calculatedAverageValue+3
  5689  002842  C118  F001         	movff	_convert_data+24,___lmul@multiplier
  5690  002846  C119  F002         	movff	_convert_data+25,___lmul@multiplier+1
  5691  00284A  C11A  F003         	movff	_convert_data+26,___lmul@multiplier+2
  5692  00284E  C11B  F004         	movff	_convert_data+27,___lmul@multiplier+3
  5693  002852  0E70               	movlw	112
  5694  002854  6E05               	movwf	___lmul@multiplicand^0,c
  5695  002856  0E17               	movlw	23
  5696  002858  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5697  00285A  0E00               	movlw	0
  5698  00285C  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5699  00285E  0E00               	movlw	0
  5700  002860  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5701  002862  ECD7  F027         	call	___lmul	;wreg free
  5702  002866  5001               	movf	?___lmul^0,w,c
  5703  002868  241C               	addwf	??_calculatedAverageValue^0,w,c
  5704  00286A  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5705  00286C  5002               	movf	(?___lmul+1)^0,w,c
  5706  00286E  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5707  002870  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5708  002872  5003               	movf	(?___lmul+2)^0,w,c
  5709  002874  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5710  002876  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5711  002878  5004               	movf	(?___lmul+3)^0,w,c
  5712  00287A  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5713  00287C  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5714  00287E  C114  F001         	movff	_convert_data+20,___lmul@multiplier
  5715  002882  C115  F002         	movff	_convert_data+21,___lmul@multiplier+1
  5716  002886  C116  F003         	movff	_convert_data+22,___lmul@multiplier+2
  5717  00288A  C117  F004         	movff	_convert_data+23,___lmul@multiplier+3
  5718  00288E  0E88               	movlw	136
  5719  002890  6E05               	movwf	___lmul@multiplicand^0,c
  5720  002892  0E13               	movlw	19
  5721  002894  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5722  002896  0E00               	movlw	0
  5723  002898  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5724  00289A  0E00               	movlw	0
  5725  00289C  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5726  00289E  ECD7  F027         	call	___lmul	;wreg free
  5727  0028A2  5001               	movf	?___lmul^0,w,c
  5728  0028A4  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5729  0028A6  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5730  0028A8  5002               	movf	(?___lmul+1)^0,w,c
  5731  0028AA  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5732  0028AC  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5733  0028AE  5003               	movf	(?___lmul+2)^0,w,c
  5734  0028B0  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5735  0028B2  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5736  0028B4  5004               	movf	(?___lmul+3)^0,w,c
  5737  0028B6  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5738  0028B8  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5739  0028BA  C110  F001         	movff	_convert_data+16,___lmul@multiplier
  5740  0028BE  C111  F002         	movff	_convert_data+17,___lmul@multiplier+1
  5741  0028C2  C112  F003         	movff	_convert_data+18,___lmul@multiplier+2
  5742  0028C6  C113  F004         	movff	_convert_data+19,___lmul@multiplier+3
  5743  0028CA  0EA0               	movlw	160
  5744  0028CC  6E05               	movwf	___lmul@multiplicand^0,c
  5745  0028CE  0E0F               	movlw	15
  5746  0028D0  6E06               	movwf	(___lmul@multiplicand+1)^0,c
  5747  0028D2  0E00               	movlw	0
  5748  0028D4  6E07               	movwf	(___lmul@multiplicand+2)^0,c
  5749  0028D6  0E00               	movlw	0
  5750  0028D8  6E08               	movwf	(___lmul@multiplicand+3)^0,c
  5751  0028DA  ECD7  F027         	call	___lmul	;wreg free
  5752  0028DE  5001               	movf	?___lmul^0,w,c
  5753  0028E0  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5754  0028E2  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5755  0028E4  5002               	movf	(?___lmul+1)^0,w,c
  5756  0028E6  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5757  0028E8  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5758  0028EA  5003               	movf	(?___lmul+2)^0,w,c
  5759  0028EC  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5760  0028EE  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5761  0028F0  5004               	movf	(?___lmul+3)^0,w,c
  5762  0028F2  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5763  0028F4  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5764  0028F6  5028               	movf	(??_calculatedAverageValue+12)^0,w,c
  5765  0028F8  0101               	movlb	1	; () banked
  5766  0028FA  2783               	addwf	_driver_limit& (0+255),f,b
  5767  0028FC  5029               	movf	(??_calculatedAverageValue+13)^0,w,c
  5768  0028FE  2384               	addwfc	(_driver_limit+1)& (0+255),f,b
  5769  002900  502A               	movf	(??_calculatedAverageValue+14)^0,w,c
  5770  002902  2385               	addwfc	(_driver_limit+2)& (0+255),f,b
  5771  002904  502B               	movf	(??_calculatedAverageValue+15)^0,w,c
  5772  002906  2386               	addwfc	(_driver_limit+3)& (0+255),f,b
  5773  002908                     
  5774                           ; BSR set to: 1
  5775                           ;fs_adc.c: 171:     driver_limit.payda = (uint32_t) (convert_data.convert_channel_0 + co
      +                          nvert_data.convert_channel_1 +
  5776  002908  5108               	movf	(_convert_data+8)& (0+255),w,b
  5777  00290A  2504               	addwf	(_convert_data+4)& (0+255),w,b
  5778  00290C  6E1C               	movwf	??_calculatedAverageValue^0,c
  5779  00290E  5109               	movf	(_convert_data+9)& (0+255),w,b
  5780  002910  2105               	addwfc	(_convert_data+5)& (0+255),w,b
  5781  002912  6E1D               	movwf	(??_calculatedAverageValue+1)^0,c
  5782  002914  510A               	movf	(_convert_data+10)& (0+255),w,b
  5783  002916  2106               	addwfc	(_convert_data+6)& (0+255),w,b
  5784  002918  6E1E               	movwf	(??_calculatedAverageValue+2)^0,c
  5785  00291A  510B               	movf	(_convert_data+11)& (0+255),w,b
  5786  00291C  2107               	addwfc	(_convert_data+7)& (0+255),w,b
  5787  00291E  6E1F               	movwf	(??_calculatedAverageValue+3)^0,c
  5788  002920  510C               	movf	(_convert_data+12)& (0+255),w,b
  5789  002922  241C               	addwf	??_calculatedAverageValue^0,w,c
  5790  002924  6E20               	movwf	(??_calculatedAverageValue+4)^0,c
  5791  002926  510D               	movf	(_convert_data+13)& (0+255),w,b
  5792  002928  201D               	addwfc	(??_calculatedAverageValue+1)^0,w,c
  5793  00292A  6E21               	movwf	(??_calculatedAverageValue+5)^0,c
  5794  00292C  510E               	movf	(_convert_data+14)& (0+255),w,b
  5795  00292E  201E               	addwfc	(??_calculatedAverageValue+2)^0,w,c
  5796  002930  6E22               	movwf	(??_calculatedAverageValue+6)^0,c
  5797  002932  510F               	movf	(_convert_data+15)& (0+255),w,b
  5798  002934  201F               	addwfc	(??_calculatedAverageValue+3)^0,w,c
  5799  002936  6E23               	movwf	(??_calculatedAverageValue+7)^0,c
  5800  002938  5110               	movf	(_convert_data+16)& (0+255),w,b
  5801  00293A  2420               	addwf	(??_calculatedAverageValue+4)^0,w,c
  5802  00293C  6E24               	movwf	(??_calculatedAverageValue+8)^0,c
  5803  00293E  5111               	movf	(_convert_data+17)& (0+255),w,b
  5804  002940  2021               	addwfc	(??_calculatedAverageValue+5)^0,w,c
  5805  002942  6E25               	movwf	(??_calculatedAverageValue+9)^0,c
  5806  002944  5112               	movf	(_convert_data+18)& (0+255),w,b
  5807  002946  2022               	addwfc	(??_calculatedAverageValue+6)^0,w,c
  5808  002948  6E26               	movwf	(??_calculatedAverageValue+10)^0,c
  5809  00294A  5113               	movf	(_convert_data+19)& (0+255),w,b
  5810  00294C  2023               	addwfc	(??_calculatedAverageValue+7)^0,w,c
  5811  00294E  6E27               	movwf	(??_calculatedAverageValue+11)^0,c
  5812  002950  5114               	movf	(_convert_data+20)& (0+255),w,b
  5813  002952  2424               	addwf	(??_calculatedAverageValue+8)^0,w,c
  5814  002954  6E28               	movwf	(??_calculatedAverageValue+12)^0,c
  5815  002956  5115               	movf	(_convert_data+21)& (0+255),w,b
  5816  002958  2025               	addwfc	(??_calculatedAverageValue+9)^0,w,c
  5817  00295A  6E29               	movwf	(??_calculatedAverageValue+13)^0,c
  5818  00295C  5116               	movf	(_convert_data+22)& (0+255),w,b
  5819  00295E  2026               	addwfc	(??_calculatedAverageValue+10)^0,w,c
  5820  002960  6E2A               	movwf	(??_calculatedAverageValue+14)^0,c
  5821  002962  5117               	movf	(_convert_data+23)& (0+255),w,b
  5822  002964  2027               	addwfc	(??_calculatedAverageValue+11)^0,w,c
  5823  002966  6E2B               	movwf	(??_calculatedAverageValue+15)^0,c
  5824  002968  5118               	movf	(_convert_data+24)& (0+255),w,b
  5825  00296A  2428               	addwf	(??_calculatedAverageValue+12)^0,w,c
  5826  00296C  6E2C               	movwf	(??_calculatedAverageValue+16)^0,c
  5827  00296E  5119               	movf	(_convert_data+25)& (0+255),w,b
  5828  002970  2029               	addwfc	(??_calculatedAverageValue+13)^0,w,c
  5829  002972  6E2D               	movwf	(??_calculatedAverageValue+17)^0,c
  5830  002974  511A               	movf	(_convert_data+26)& (0+255),w,b
  5831  002976  202A               	addwfc	(??_calculatedAverageValue+14)^0,w,c
  5832  002978  6E2E               	movwf	(??_calculatedAverageValue+18)^0,c
  5833  00297A  511B               	movf	(_convert_data+27)& (0+255),w,b
  5834  00297C  202B               	addwfc	(??_calculatedAverageValue+15)^0,w,c
  5835  00297E  6E2F               	movwf	(??_calculatedAverageValue+19)^0,c
  5836  002980  511C               	movf	(_convert_data+28)& (0+255),w,b
  5837  002982  242C               	addwf	(??_calculatedAverageValue+16)^0,w,c
  5838  002984  6E30               	movwf	(??_calculatedAverageValue+20)^0,c
  5839  002986  511D               	movf	(_convert_data+29)& (0+255),w,b
  5840  002988  202D               	addwfc	(??_calculatedAverageValue+17)^0,w,c
  5841  00298A  6E31               	movwf	(??_calculatedAverageValue+21)^0,c
  5842  00298C  511E               	movf	(_convert_data+30)& (0+255),w,b
  5843  00298E  202E               	addwfc	(??_calculatedAverageValue+18)^0,w,c
  5844  002990  6E32               	movwf	(??_calculatedAverageValue+22)^0,c
  5845  002992  511F               	movf	(_convert_data+31)& (0+255),w,b
  5846  002994  202F               	addwfc	(??_calculatedAverageValue+19)^0,w,c
  5847  002996  6E33               	movwf	(??_calculatedAverageValue+23)^0,c
  5848  002998  5100               	movf	_convert_data& (0+255),w,b
  5849  00299A  2430               	addwf	(??_calculatedAverageValue+20)^0,w,c
  5850  00299C  6F87               	movwf	(_driver_limit+4)& (0+255),b
  5851  00299E  5101               	movf	(_convert_data+1)& (0+255),w,b
  5852  0029A0  2031               	addwfc	(??_calculatedAverageValue+21)^0,w,c
  5853  0029A2  6F88               	movwf	(_driver_limit+5)& (0+255),b
  5854  0029A4  5102               	movf	(_convert_data+2)& (0+255),w,b
  5855  0029A6  2032               	addwfc	(??_calculatedAverageValue+22)^0,w,c
  5856  0029A8  6F89               	movwf	(_driver_limit+6)& (0+255),b
  5857  0029AA  5103               	movf	(_convert_data+3)& (0+255),w,b
  5858  0029AC  2033               	addwfc	(??_calculatedAverageValue+23)^0,w,c
  5859  0029AE  6F8A               	movwf	(_driver_limit+7)& (0+255),b
  5860  0029B0                     
  5861                           ; BSR set to: 1
  5862                           ;fs_adc.c: 176:     driver_limit.ortalama = (float)(driver_limit.pay/driver_limit.payda)
      +                          ;
  5863  0029B0  C187  F005         	movff	_driver_limit+4,___lldiv@divisor
  5864  0029B4  C188  F006         	movff	_driver_limit+5,___lldiv@divisor+1
  5865  0029B8  C189  F007         	movff	_driver_limit+6,___lldiv@divisor+2
  5866  0029BC  C18A  F008         	movff	_driver_limit+7,___lldiv@divisor+3
  5867  0029C0  C183  F001         	movff	_driver_limit,___lldiv@dividend
  5868  0029C4  C184  F002         	movff	_driver_limit+1,___lldiv@dividend+1
  5869  0029C8  C185  F003         	movff	_driver_limit+2,___lldiv@dividend+2
  5870  0029CC  C186  F004         	movff	_driver_limit+3,___lldiv@dividend+3
  5871  0029D0  EC46  F026         	call	___lldiv	;wreg free
  5872  0029D4  C001  F00E         	movff	?___lldiv,___xxtofl@val
  5873  0029D8  C002  F00F         	movff	?___lldiv+1,___xxtofl@val+1
  5874  0029DC  C003  F010         	movff	?___lldiv+2,___xxtofl@val+2
  5875  0029E0  C004  F011         	movff	?___lldiv+3,___xxtofl@val+3
  5876  0029E4  0E00               	movlw	0
  5877  0029E6  ECAA  F01A         	call	___xxtofl
  5878  0029EA  C00E  F18B         	movff	?___xxtofl,_driver_limit+8
  5879  0029EE  C00F  F18C         	movff	?___xxtofl+1,_driver_limit+9
  5880  0029F2  C010  F18D         	movff	?___xxtofl+2,_driver_limit+10
  5881  0029F6  C011  F18E         	movff	?___xxtofl+3,_driver_limit+11
  5882  0029FA  0012               	return		;funcret
  5883  0029FC                     __end_of_calculatedAverageValue:
  5884                           	callstack 0
  5885                           
  5886 ;; *************** function ___lmul *****************
  5887 ;; Defined at:
  5888 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul32.c"
  5889 ;; Parameters:    Size  Location     Type
  5890 ;;  multiplier      4    0[COMRAM] unsigned long 
  5891 ;;  multiplicand    4    4[COMRAM] unsigned long 
  5892 ;; Auto vars:     Size  Location     Type
  5893 ;;  product         4    8[COMRAM] unsigned long 
  5894 ;; Return value:  Size  Location     Type
  5895 ;;                  4    0[COMRAM] unsigned long 
  5896 ;; Registers used:
  5897 ;;		wreg, status,2, status,0
  5898 ;; Tracked objects:
  5899 ;;		On entry : 0/0
  5900 ;;		On exit  : 0/0
  5901 ;;		Unchanged: 0/0
  5902 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5903 ;;      Params:         8       0       0       0       0       0       0
  5904 ;;      Locals:         4       0       0       0       0       0       0
  5905 ;;      Temps:          0       0       0       0       0       0       0
  5906 ;;      Totals:        12       0       0       0       0       0       0
  5907 ;;Total ram usage:       12 bytes
  5908 ;; Hardware stack levels used:    1
  5909 ;; Hardware stack levels required when called:    1
  5910 ;; This function calls:
  5911 ;;		Nothing
  5912 ;; This function is called by:
  5913 ;;		_calculatedAverageValue
  5914 ;; This function uses a non-reentrant model
  5915 ;;
  5916                           
  5917                           	psect	text21
  5918  004FAE                     __ptext21:
  5919                           	callstack 0
  5920  004FAE                     ___lmul:
  5921                           	callstack 24
  5922  004FAE  0E00               	movlw	0
  5923  004FB0  6E09               	movwf	___lmul@product^0,c
  5924  004FB2  0E00               	movlw	0
  5925  004FB4  6E0A               	movwf	(___lmul@product+1)^0,c
  5926  004FB6  0E00               	movlw	0
  5927  004FB8  6E0B               	movwf	(___lmul@product+2)^0,c
  5928  004FBA  0E00               	movlw	0
  5929  004FBC  6E0C               	movwf	(___lmul@product+3)^0,c
  5930  004FBE                     l5500:
  5931  004FBE  A001               	btfss	___lmul@multiplier^0,0,c
  5932  004FC0  EFE4  F027         	goto	u6441
  5933  004FC4  EFE6  F027         	goto	u6440
  5934  004FC8                     u6441:
  5935  004FC8  EFEE  F027         	goto	l5504
  5936  004FCC                     u6440:
  5937  004FCC  5005               	movf	___lmul@multiplicand^0,w,c
  5938  004FCE  2609               	addwf	___lmul@product^0,f,c
  5939  004FD0  5006               	movf	(___lmul@multiplicand+1)^0,w,c
  5940  004FD2  220A               	addwfc	(___lmul@product+1)^0,f,c
  5941  004FD4  5007               	movf	(___lmul@multiplicand+2)^0,w,c
  5942  004FD6  220B               	addwfc	(___lmul@product+2)^0,f,c
  5943  004FD8  5008               	movf	(___lmul@multiplicand+3)^0,w,c
  5944  004FDA  220C               	addwfc	(___lmul@product+3)^0,f,c
  5945  004FDC                     l5504:
  5946  004FDC  90D8               	bcf	status,0,c
  5947  004FDE  3605               	rlcf	___lmul@multiplicand^0,f,c
  5948  004FE0  3606               	rlcf	(___lmul@multiplicand+1)^0,f,c
  5949  004FE2  3607               	rlcf	(___lmul@multiplicand+2)^0,f,c
  5950  004FE4  3608               	rlcf	(___lmul@multiplicand+3)^0,f,c
  5951  004FE6  90D8               	bcf	status,0,c
  5952  004FE8  3204               	rrcf	(___lmul@multiplier+3)^0,f,c
  5953  004FEA  3203               	rrcf	(___lmul@multiplier+2)^0,f,c
  5954  004FEC  3202               	rrcf	(___lmul@multiplier+1)^0,f,c
  5955  004FEE  3201               	rrcf	___lmul@multiplier^0,f,c
  5956  004FF0  5001               	movf	___lmul@multiplier^0,w,c
  5957  004FF2  1002               	iorwf	(___lmul@multiplier+1)^0,w,c
  5958  004FF4  1003               	iorwf	(___lmul@multiplier+2)^0,w,c
  5959  004FF6  1004               	iorwf	(___lmul@multiplier+3)^0,w,c
  5960  004FF8  A4D8               	btfss	status,2,c
  5961  004FFA  EF01  F028         	goto	u6451
  5962  004FFE  EF03  F028         	goto	u6450
  5963  005002                     u6451:
  5964  005002  EFDF  F027         	goto	l5500
  5965  005006                     u6450:
  5966  005006  C009  F001         	movff	___lmul@product,?___lmul
  5967  00500A  C00A  F002         	movff	___lmul@product+1,?___lmul+1
  5968  00500E  C00B  F003         	movff	___lmul@product+2,?___lmul+2
  5969  005012  C00C  F004         	movff	___lmul@product+3,?___lmul+3
  5970  005016  0012               	return		;funcret
  5971  005018                     __end_of___lmul:
  5972                           	callstack 0
  5973                           
  5974 ;; *************** function ___lldiv *****************
  5975 ;; Defined at:
  5976 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__lldiv.c"
  5977 ;; Parameters:    Size  Location     Type
  5978 ;;  dividend        4    0[COMRAM] unsigned long 
  5979 ;;  divisor         4    4[COMRAM] unsigned long 
  5980 ;; Auto vars:     Size  Location     Type
  5981 ;;  quotient        4    8[COMRAM] unsigned long 
  5982 ;;  counter         1   12[COMRAM] unsigned char 
  5983 ;; Return value:  Size  Location     Type
  5984 ;;                  4    0[COMRAM] unsigned long 
  5985 ;; Registers used:
  5986 ;;		wreg, status,2, status,0
  5987 ;; Tracked objects:
  5988 ;;		On entry : 0/0
  5989 ;;		On exit  : 0/0
  5990 ;;		Unchanged: 0/0
  5991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  5992 ;;      Params:         8       0       0       0       0       0       0
  5993 ;;      Locals:         5       0       0       0       0       0       0
  5994 ;;      Temps:          0       0       0       0       0       0       0
  5995 ;;      Totals:        13       0       0       0       0       0       0
  5996 ;;Total ram usage:       13 bytes
  5997 ;; Hardware stack levels used:    1
  5998 ;; Hardware stack levels required when called:    1
  5999 ;; This function calls:
  6000 ;;		Nothing
  6001 ;; This function is called by:
  6002 ;;		_calculatedAverageValue
  6003 ;; This function uses a non-reentrant model
  6004 ;;
  6005                           
  6006                           	psect	text22
  6007  004C8C                     __ptext22:
  6008                           	callstack 0
  6009  004C8C                     ___lldiv:
  6010                           	callstack 24
  6011  004C8C  0E00               	movlw	0
  6012  004C8E  6E09               	movwf	___lldiv@quotient^0,c
  6013  004C90  0E00               	movlw	0
  6014  004C92  6E0A               	movwf	(___lldiv@quotient+1)^0,c
  6015  004C94  0E00               	movlw	0
  6016  004C96  6E0B               	movwf	(___lldiv@quotient+2)^0,c
  6017  004C98  0E00               	movlw	0
  6018  004C9A  6E0C               	movwf	(___lldiv@quotient+3)^0,c
  6019  004C9C  5005               	movf	___lldiv@divisor^0,w,c
  6020  004C9E  1006               	iorwf	(___lldiv@divisor+1)^0,w,c
  6021  004CA0  1007               	iorwf	(___lldiv@divisor+2)^0,w,c
  6022  004CA2  1008               	iorwf	(___lldiv@divisor+3)^0,w,c
  6023  004CA4  B4D8               	btfsc	status,2,c
  6024  004CA6  EF57  F026         	goto	u6461
  6025  004CAA  EF59  F026         	goto	u6460
  6026  004CAE                     u6461:
  6027  004CAE  EF8F  F026         	goto	l718
  6028  004CB2                     u6460:
  6029  004CB2  0E01               	movlw	1
  6030  004CB4  6E0D               	movwf	___lldiv@counter^0,c
  6031  004CB6  EF63  F026         	goto	l5516
  6032  004CBA                     l5514:
  6033  004CBA  90D8               	bcf	status,0,c
  6034  004CBC  3605               	rlcf	___lldiv@divisor^0,f,c
  6035  004CBE  3606               	rlcf	(___lldiv@divisor+1)^0,f,c
  6036  004CC0  3607               	rlcf	(___lldiv@divisor+2)^0,f,c
  6037  004CC2  3608               	rlcf	(___lldiv@divisor+3)^0,f,c
  6038  004CC4  2A0D               	incf	___lldiv@counter^0,f,c
  6039  004CC6                     l5516:
  6040  004CC6  AE08               	btfss	(___lldiv@divisor+3)^0,7,c
  6041  004CC8  EF68  F026         	goto	u6471
  6042  004CCC  EF6A  F026         	goto	u6470
  6043  004CD0                     u6471:
  6044  004CD0  EF5D  F026         	goto	l5514
  6045  004CD4                     u6470:
  6046  004CD4                     l5518:
  6047  004CD4  90D8               	bcf	status,0,c
  6048  004CD6  3609               	rlcf	___lldiv@quotient^0,f,c
  6049  004CD8  360A               	rlcf	(___lldiv@quotient+1)^0,f,c
  6050  004CDA  360B               	rlcf	(___lldiv@quotient+2)^0,f,c
  6051  004CDC  360C               	rlcf	(___lldiv@quotient+3)^0,f,c
  6052  004CDE  5005               	movf	___lldiv@divisor^0,w,c
  6053  004CE0  5C01               	subwf	___lldiv@dividend^0,w,c
  6054  004CE2  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6055  004CE4  5802               	subwfb	(___lldiv@dividend+1)^0,w,c
  6056  004CE6  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6057  004CE8  5803               	subwfb	(___lldiv@dividend+2)^0,w,c
  6058  004CEA  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6059  004CEC  5804               	subwfb	(___lldiv@dividend+3)^0,w,c
  6060  004CEE  A0D8               	btfss	status,0,c
  6061  004CF0  EF7C  F026         	goto	u6481
  6062  004CF4  EF7E  F026         	goto	u6480
  6063  004CF8                     u6481:
  6064  004CF8  EF87  F026         	goto	l5526
  6065  004CFC                     u6480:
  6066  004CFC  5005               	movf	___lldiv@divisor^0,w,c
  6067  004CFE  5E01               	subwf	___lldiv@dividend^0,f,c
  6068  004D00  5006               	movf	(___lldiv@divisor+1)^0,w,c
  6069  004D02  5A02               	subwfb	(___lldiv@dividend+1)^0,f,c
  6070  004D04  5007               	movf	(___lldiv@divisor+2)^0,w,c
  6071  004D06  5A03               	subwfb	(___lldiv@dividend+2)^0,f,c
  6072  004D08  5008               	movf	(___lldiv@divisor+3)^0,w,c
  6073  004D0A  5A04               	subwfb	(___lldiv@dividend+3)^0,f,c
  6074  004D0C  8009               	bsf	___lldiv@quotient^0,0,c
  6075  004D0E                     l5526:
  6076  004D0E  90D8               	bcf	status,0,c
  6077  004D10  3208               	rrcf	(___lldiv@divisor+3)^0,f,c
  6078  004D12  3207               	rrcf	(___lldiv@divisor+2)^0,f,c
  6079  004D14  3206               	rrcf	(___lldiv@divisor+1)^0,f,c
  6080  004D16  3205               	rrcf	___lldiv@divisor^0,f,c
  6081  004D18  2E0D               	decfsz	___lldiv@counter^0,f,c
  6082  004D1A  EF6A  F026         	goto	l5518
  6083  004D1E                     l718:
  6084  004D1E  C009  F001         	movff	___lldiv@quotient,?___lldiv
  6085  004D22  C00A  F002         	movff	___lldiv@quotient+1,?___lldiv+1
  6086  004D26  C00B  F003         	movff	___lldiv@quotient+2,?___lldiv+2
  6087  004D2A  C00C  F004         	movff	___lldiv@quotient+3,?___lldiv+3
  6088  004D2E  0012               	return		;funcret
  6089  004D30                     __end_of___lldiv:
  6090                           	callstack 0
  6091                           
  6092 ;; *************** function _exitLine *****************
  6093 ;; Defined at:
  6094 ;;		line 630 in file "fs_menu_controller.c"
  6095 ;; Parameters:    Size  Location     Type
  6096 ;;		None
  6097 ;; Auto vars:     Size  Location     Type
  6098 ;;		None
  6099 ;; Return value:  Size  Location     Type
  6100 ;;                  1    wreg      void 
  6101 ;; Registers used:
  6102 ;;		None
  6103 ;; Tracked objects:
  6104 ;;		On entry : 0/0
  6105 ;;		On exit  : 0/0
  6106 ;;		Unchanged: 0/0
  6107 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6108 ;;      Params:         0       0       0       0       0       0       0
  6109 ;;      Locals:         0       0       0       0       0       0       0
  6110 ;;      Temps:          0       0       0       0       0       0       0
  6111 ;;      Totals:         0       0       0       0       0       0       0
  6112 ;;Total ram usage:        0 bytes
  6113 ;; Hardware stack levels used:    1
  6114 ;; Hardware stack levels required when called:    1
  6115 ;; This function calls:
  6116 ;;		Nothing
  6117 ;; This function is called by:
  6118 ;;		_stateMachine
  6119 ;; This function uses a non-reentrant model
  6120 ;;
  6121                           
  6122                           	psect	text23
  6123  0057B6                     __ptext23:
  6124                           	callstack 0
  6125  0057B6                     _exitLine:
  6126                           	callstack 27
  6127  0057B6  0012               	return		;funcret
  6128  0057B8                     __end_of_exitLine:
  6129                           	callstack 0
  6130                           
  6131 ;; *************** function _driverTimeSettingMenu *****************
  6132 ;; Defined at:
  6133 ;;		line 577 in file "fs_menu_controller.c"
  6134 ;; Parameters:    Size  Location     Type
  6135 ;;		None
  6136 ;; Auto vars:     Size  Location     Type
  6137 ;;  textCursor2    16  129[BANK0 ] unsigned char [16]
  6138 ;; Return value:  Size  Location     Type
  6139 ;;                  1    wreg      void 
  6140 ;; Registers used:
  6141 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6142 ;; Tracked objects:
  6143 ;;		On entry : 0/0
  6144 ;;		On exit  : 0/0
  6145 ;;		Unchanged: 0/0
  6146 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6147 ;;      Params:         0       0       0       0       0       0       0
  6148 ;;      Locals:         0      16       0       0       0       0       0
  6149 ;;      Temps:          0       0       0       0       0       0       0
  6150 ;;      Totals:         0      16       0       0       0       0       0
  6151 ;;Total ram usage:       16 bytes
  6152 ;; Hardware stack levels used:    1
  6153 ;; Hardware stack levels required when called:    9
  6154 ;; This function calls:
  6155 ;;		_Lcd_Set_Cursor
  6156 ;;		_Lcd_Write_String
  6157 ;;		_eepromWrite
  6158 ;;		_sprintf
  6159 ;;		_stopMotor
  6160 ;; This function is called by:
  6161 ;;		_stateMachine
  6162 ;; This function uses a non-reentrant model
  6163 ;;
  6164                           
  6165                           	psect	text24
  6166  003E56                     __ptext24:
  6167                           	callstack 0
  6168  003E56                     _driverTimeSettingMenu:
  6169                           	callstack 19
  6170  003E56                     
  6171                           ;fs_menu_controller.c: 579:     char textCursor2[16] = {0};
  6172  003E56  EE20  F0E1         	lfsr	2,driverTimeSettingMenu@textCursor2
  6173  003E5A  0E0F               	movlw	15
  6174  003E5C                     u7081:
  6175  003E5C  6ADE               	clrf	postinc2,c
  6176  003E5E  06E8               	decf	wreg,f,c
  6177  003E60  E2FD               	bc	u7081
  6178  003E62                     
  6179                           ;fs_menu_controller.c: 581:     stopMotor();
  6180  003E62  EC65  F02A         	call	_stopMotor	;wreg free
  6181  003E66                     
  6182                           ;fs_menu_controller.c: 583:     if (menu_flags.menu_input_flag == 1)
  6183  003E66  0101               	movlb	1	; () banked
  6184  003E68  0597               	decf	_menu_flags& (0+255),w,b
  6185  003E6A  A4D8               	btfss	status,2,c
  6186  003E6C  EF3A  F01F         	goto	u7091
  6187  003E70  EF3C  F01F         	goto	u7090
  6188  003E74                     u7091:
  6189  003E74  EF41  F01F         	goto	l5988
  6190  003E78                     u7090:
  6191  003E78                     
  6192                           ; BSR set to: 1
  6193                           ;fs_menu_controller.c: 584:     {;fs_menu_controller.c: 585:         menu_flags.menu_inp
      +                          ut_flag = 0;
  6194  003E78  0E00               	movlw	0
  6195  003E7A  6F97               	movwf	_menu_flags& (0+255),b
  6196                           
  6197                           ;fs_menu_controller.c: 586:         menu_selected = STOP_TIME_SETTING;
  6198  003E7C  0E02               	movlw	2
  6199  003E7E  0100               	movlb	0	; () banked
  6200  003E80  6FFB               	movwf	_menu_selected& (0+255),b
  6201  003E82                     l5988:
  6202                           
  6203                           ;fs_menu_controller.c: 589:     if ((menu_flags.menu_increase_flag == 1) && (menu_value.
      +                          driver_time < 30))
  6204  003E82  0101               	movlb	1	; () banked
  6205  003E84  059B               	decf	(_menu_flags+4)& (0+255),w,b
  6206  003E86  A4D8               	btfss	status,2,c
  6207  003E88  EF48  F01F         	goto	u7101
  6208  003E8C  EF4A  F01F         	goto	u7100
  6209  003E90                     u7101:
  6210  003E90  EF66  F01F         	goto	l6006
  6211  003E94                     u7100:
  6212  003E94                     
  6213                           ; BSR set to: 1
  6214  003E94  0E1E               	movlw	30
  6215  003E96  0100               	movlb	0	; () banked
  6216  003E98  61F3               	cpfslt	_menu_value& (0+255),b
  6217  003E9A  EF51  F01F         	goto	u7111
  6218  003E9E  EF53  F01F         	goto	u7110
  6219  003EA2                     u7111:
  6220  003EA2  EF66  F01F         	goto	l6006
  6221  003EA6                     u7110:
  6222  003EA6                     
  6223                           ; BSR set to: 0
  6224                           ;fs_menu_controller.c: 590:     {;fs_menu_controller.c: 591:         menu_flags.menu_inc
      +                          rease_flag = 0;
  6225  003EA6  0E00               	movlw	0
  6226  003EA8  0101               	movlb	1	; () banked
  6227  003EAA  6F9B               	movwf	(_menu_flags+4)& (0+255),b
  6228  003EAC                     
  6229                           ; BSR set to: 1
  6230                           ;fs_menu_controller.c: 592:         menu_value.driver_time++;
  6231  003EAC  0100               	movlb	0	; () banked
  6232  003EAE  2BF3               	incf	_menu_value& (0+255),f,b
  6233  003EB0                     
  6234                           ; BSR set to: 0
  6235                           ;fs_menu_controller.c: 593:         eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6236  003EB0  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6237  003EB4  0E00               	movlw	0
  6238  003EB6  EC43  F02B         	call	_eepromWrite
  6239  003EBA                     
  6240                           ;fs_menu_controller.c: 594:         timer_value.minute =0 ;
  6241  003EBA  0E00               	movlw	0
  6242  003EBC  0101               	movlb	1	; () banked
  6243  003EBE  6F90               	movwf	(_timer_value+1)& (0+255),b
  6244  003EC0                     
  6245                           ; BSR set to: 1
  6246                           ;fs_menu_controller.c: 595:         timer_value.second = 0;
  6247  003EC0  0E00               	movlw	0
  6248  003EC2  6F8F               	movwf	_timer_value& (0+255),b
  6249  003EC4                     
  6250                           ; BSR set to: 1
  6251                           ;fs_menu_controller.c: 596:         timer_value.remainingSecond = 0;
  6252  003EC4  0E00               	movlw	0
  6253  003EC6  6F91               	movwf	(_timer_value+2)& (0+255),b
  6254  003EC8                     
  6255                           ; BSR set to: 1
  6256                           ;fs_menu_controller.c: 597:         timer_value.remainingMinute = menu_value.driver_time
      +                          ;
  6257  003EC8  C0F3  F192         	movff	_menu_value,_timer_value+3
  6258  003ECC                     l6006:
  6259                           
  6260                           ;fs_menu_controller.c: 600:     if ((menu_flags.menu_decrease_flag == 1) && (menu_value.
      +                          driver_time > 0))
  6261  003ECC  0101               	movlb	1	; () banked
  6262  003ECE  059C               	decf	(_menu_flags+5)& (0+255),w,b
  6263  003ED0  A4D8               	btfss	status,2,c
  6264  003ED2  EF6D  F01F         	goto	u7121
  6265  003ED6  EF6F  F01F         	goto	u7120
  6266  003EDA                     u7121:
  6267  003EDA  EF8B  F01F         	goto	l6024
  6268  003EDE                     u7120:
  6269  003EDE                     
  6270                           ; BSR set to: 1
  6271  003EDE  0100               	movlb	0	; () banked
  6272  003EE0  51F3               	movf	_menu_value& (0+255),w,b
  6273  003EE2  B4D8               	btfsc	status,2,c
  6274  003EE4  EF76  F01F         	goto	u7131
  6275  003EE8  EF78  F01F         	goto	u7130
  6276  003EEC                     u7131:
  6277  003EEC  EF8B  F01F         	goto	l6024
  6278  003EF0                     u7130:
  6279  003EF0                     
  6280                           ; BSR set to: 0
  6281                           ;fs_menu_controller.c: 601:     {;fs_menu_controller.c: 602:          menu_flags.menu_de
      +                          crease_flag = 0;
  6282  003EF0  0E00               	movlw	0
  6283  003EF2  0101               	movlb	1	; () banked
  6284  003EF4  6F9C               	movwf	(_menu_flags+5)& (0+255),b
  6285  003EF6                     
  6286                           ; BSR set to: 1
  6287                           ;fs_menu_controller.c: 603:          menu_value.driver_time--;
  6288  003EF6  0100               	movlb	0	; () banked
  6289  003EF8  07F3               	decf	_menu_value& (0+255),f,b
  6290  003EFA                     
  6291                           ; BSR set to: 0
  6292                           ;fs_menu_controller.c: 604:          eepromWrite(0x00,(uint8_t)menu_value.driver_time);
  6293  003EFA  C0F3  F001         	movff	_menu_value,eepromWrite@data
  6294  003EFE  0E00               	movlw	0
  6295  003F00  EC43  F02B         	call	_eepromWrite
  6296  003F04                     
  6297                           ;fs_menu_controller.c: 605:          timer_value.minute =0 ;
  6298  003F04  0E00               	movlw	0
  6299  003F06  0101               	movlb	1	; () banked
  6300  003F08  6F90               	movwf	(_timer_value+1)& (0+255),b
  6301  003F0A                     
  6302                           ; BSR set to: 1
  6303                           ;fs_menu_controller.c: 606:          timer_value.second = 0;
  6304  003F0A  0E00               	movlw	0
  6305  003F0C  6F8F               	movwf	_timer_value& (0+255),b
  6306  003F0E                     
  6307                           ; BSR set to: 1
  6308                           ;fs_menu_controller.c: 607:          timer_value.remainingSecond = 0;
  6309  003F0E  0E00               	movlw	0
  6310  003F10  6F91               	movwf	(_timer_value+2)& (0+255),b
  6311  003F12                     
  6312                           ; BSR set to: 1
  6313                           ;fs_menu_controller.c: 608:          timer_value.remainingMinute = menu_value.driver_tim
      +                          e;
  6314  003F12  C0F3  F192         	movff	_menu_value,_timer_value+3
  6315  003F16                     l6024:
  6316                           
  6317                           ;fs_menu_controller.c: 610:     Lcd_Set_Cursor(1,1);
  6318  003F16  0E01               	movlw	1
  6319  003F18  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6320  003F1A  0E01               	movlw	1
  6321  003F1C  EC41  F028         	call	_Lcd_Set_Cursor
  6322  003F20                     
  6323                           ;fs_menu_controller.c: 611:     Lcd_Write_String("HAREKT ZAMANI dk");
  6324  003F20  0E5E               	movlw	low STR_17
  6325  003F22  6E05               	movwf	Lcd_Write_String@a^0,c
  6326  003F24  0E7F               	movlw	high STR_17
  6327  003F26  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6328  003F28  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  6329  003F2C                     
  6330                           ;fs_menu_controller.c: 612:     Lcd_Set_Cursor(2,1);
  6331  003F2C  0E01               	movlw	1
  6332  003F2E  6E04               	movwf	Lcd_Set_Cursor@b^0,c
  6333  003F30  0E02               	movlw	2
  6334  003F32  EC41  F028         	call	_Lcd_Set_Cursor
  6335  003F36                     
  6336                           ;fs_menu_controller.c: 613:     sprintf(textCursor2,"%d               ",menu_value.drive
      +                          r_time);
  6337  003F36  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6338  003F38  0100               	movlb	0	; () banked
  6339  003F3A  6FCF               	movwf	sprintf@s& (0+255),b
  6340  003F3C  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6341  003F3E  6FD0               	movwf	(sprintf@s+1)& (0+255),b
  6342  003F40  0EF7               	movlw	low STR_14
  6343  003F42  6FD1               	movwf	sprintf@fmt& (0+255),b
  6344  003F44  0E7E               	movlw	high STR_14
  6345  003F46  6FD2               	movwf	(sprintf@fmt+1)& (0+255),b
  6346  003F48  C0F3  F0D3         	movff	_menu_value,?_sprintf+4
  6347  003F4C  6BD4               	clrf	(?_sprintf+5)& (0+255),b
  6348  003F4E  EC29  F029         	call	_sprintf	;wreg free
  6349  003F52                     
  6350                           ;fs_menu_controller.c: 614:     Lcd_Write_String(textCursor2);
  6351  003F52  0EE1               	movlw	low driverTimeSettingMenu@textCursor2
  6352  003F54  6E05               	movwf	Lcd_Write_String@a^0,c
  6353  003F56  0E00               	movlw	high driverTimeSettingMenu@textCursor2
  6354  003F58  6E06               	movwf	(Lcd_Write_String@a+1)^0,c
  6355  003F5A  ECE3  F026         	call	_Lcd_Write_String	;wreg free
  6356  003F5E                     
  6357                           ;fs_menu_controller.c: 616:     if(timer_value.menu_login_delay == 100)
  6358  003F5E  0E64               	movlw	100
  6359  003F60  0101               	movlb	1	; () banked
  6360  003F62  1993               	xorwf	(_timer_value+4)& (0+255),w,b
  6361  003F64  A4D8               	btfss	status,2,c
  6362  003F66  EFB7  F01F         	goto	u7141
  6363  003F6A  EFB9  F01F         	goto	u7140
  6364  003F6E                     u7141:
  6365  003F6E  EFBE  F01F         	goto	l512
  6366  003F72                     u7140:
  6367  003F72                     
  6368                           ; BSR set to: 1
  6369                           ;fs_menu_controller.c: 617:     {;fs_menu_controller.c: 618:         timer_value.menu_lo
      +                          gin_delay = 0;
  6370  003F72  0E00               	movlw	0
  6371  003F74  6F93               	movwf	(_timer_value+4)& (0+255),b
  6372                           
  6373                           ;fs_menu_controller.c: 619:         menu_selected = PAUSE_MENU;
  6374  003F76  0E06               	movlw	6
  6375  003F78  0100               	movlb	0	; () banked
  6376  003F7A  6FFB               	movwf	_menu_selected& (0+255),b
  6377  003F7C                     l512:
  6378  003F7C  0012               	return		;funcret
  6379  003F7E                     __end_of_driverTimeSettingMenu:
  6380                           	callstack 0
  6381                           
  6382 ;; *************** function _stopMotor *****************
  6383 ;; Defined at:
  6384 ;;		line 77 in file "fs_speed_controller.c"
  6385 ;; Parameters:    Size  Location     Type
  6386 ;;		None
  6387 ;; Auto vars:     Size  Location     Type
  6388 ;;		None
  6389 ;; Return value:  Size  Location     Type
  6390 ;;                  1    wreg      void 
  6391 ;; Registers used:
  6392 ;;		wreg, status,2, status,0, cstack
  6393 ;; Tracked objects:
  6394 ;;		On entry : 0/0
  6395 ;;		On exit  : 0/0
  6396 ;;		Unchanged: 0/0
  6397 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6398 ;;      Params:         0       0       0       0       0       0       0
  6399 ;;      Locals:         0       0       0       0       0       0       0
  6400 ;;      Temps:          0       0       0       0       0       0       0
  6401 ;;      Totals:         0       0       0       0       0       0       0
  6402 ;;Total ram usage:        0 bytes
  6403 ;; Hardware stack levels used:    1
  6404 ;; Hardware stack levels required when called:    3
  6405 ;; This function calls:
  6406 ;;		_PWM1_setDC
  6407 ;;		_PWM2_setDC
  6408 ;; This function is called by:
  6409 ;;		_stopMenu
  6410 ;;		_pauseMenu
  6411 ;;		_secretMenu
  6412 ;;		_speedLimitSettingMenu
  6413 ;;		_stopTimeSettingMenu
  6414 ;;		_driverTimeSettingMenu
  6415 ;; This function uses a non-reentrant model
  6416 ;;
  6417                           
  6418                           	psect	text25
  6419  0054CA                     __ptext25:
  6420                           	callstack 0
  6421  0054CA                     _stopMotor:
  6422                           	callstack 24
  6423  0054CA                     
  6424                           ;fs_speed_controller.c: 79:     controller.rightMotorSpeed = 0;
  6425  0054CA  0E00               	movlw	0
  6426  0054CC  0101               	movlb	1	; () banked
  6427  0054CE  6F59               	movwf	(_controller+9)& (0+255),b
  6428  0054D0  0E00               	movlw	0
  6429  0054D2  6F58               	movwf	(_controller+8)& (0+255),b
  6430                           
  6431                           ;fs_speed_controller.c: 80:     controller.leftMotorSpeed = 0;
  6432  0054D4  0E00               	movlw	0
  6433  0054D6  6F57               	movwf	(_controller+7)& (0+255),b
  6434  0054D8  0E00               	movlw	0
  6435  0054DA  6F56               	movwf	(_controller+6)& (0+255),b
  6436                           
  6437                           ;fs_speed_controller.c: 81:     driver_limit.ortalama = 0;
  6438  0054DC  0E00               	movlw	0
  6439  0054DE  6F8B               	movwf	(_driver_limit+8)& (0+255),b
  6440  0054E0  0E00               	movlw	0
  6441  0054E2  6F8C               	movwf	(_driver_limit+9)& (0+255),b
  6442  0054E4  0E00               	movlw	0
  6443  0054E6  6F8D               	movwf	(_driver_limit+10)& (0+255),b
  6444  0054E8  0E00               	movlw	0
  6445  0054EA  6F8E               	movwf	(_driver_limit+11)& (0+255),b
  6446  0054EC                     
  6447                           ; BSR set to: 1
  6448                           ;fs_speed_controller.c: 82:     PWM1_setDC(controller.leftMotorSpeed);
  6449  0054EC  C156  F058         	movff	_controller+6,PWM1_setDC@dutycycle
  6450  0054F0  C157  F059         	movff	_controller+7,PWM1_setDC@dutycycle+1
  6451  0054F4  EC5F  F027         	call	_PWM1_setDC	;wreg free
  6452  0054F8                     
  6453                           ;fs_speed_controller.c: 83:     PWM2_setDC(controller.rightMotorSpeed);
  6454  0054F8  C158  F058         	movff	_controller+8,PWM2_setDC@dutycycle
  6455  0054FC  C159  F059         	movff	_controller+9,PWM2_setDC@dutycycle+1
  6456  005500  EC22  F027         	call	_PWM2_setDC	;wreg free
  6457  005504  0012               	return		;funcret
  6458  005506                     __end_of_stopMotor:
  6459                           	callstack 0
  6460                           
  6461 ;; *************** function _PWM2_setDC *****************
  6462 ;; Defined at:
  6463 ;;		line 76 in file "fs_pwm.c"
  6464 ;; Parameters:    Size  Location     Type
  6465 ;;  dutycycle       2   87[COMRAM] short 
  6466 ;; Auto vars:     Size  Location     Type
  6467 ;;  duty            2   91[COMRAM] unsigned short 
  6468 ;; Return value:  Size  Location     Type
  6469 ;;                  1    wreg      void 
  6470 ;; Registers used:
  6471 ;;		wreg, status,2, status,0, cstack
  6472 ;; Tracked objects:
  6473 ;;		On entry : 0/0
  6474 ;;		On exit  : 0/0
  6475 ;;		Unchanged: 0/0
  6476 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6477 ;;      Params:         2       0       0       0       0       0       0
  6478 ;;      Locals:         2       0       0       0       0       0       0
  6479 ;;      Temps:          2       0       0       0       0       0       0
  6480 ;;      Totals:         6       0       0       0       0       0       0
  6481 ;;Total ram usage:        6 bytes
  6482 ;; Hardware stack levels used:    1
  6483 ;; Hardware stack levels required when called:    2
  6484 ;; This function calls:
  6485 ;;		___fltol
  6486 ;;		___xxtofl
  6487 ;;		_fabsf
  6488 ;; This function is called by:
  6489 ;;		_main
  6490 ;;		_stopMotor
  6491 ;;		_startMotor
  6492 ;; This function uses a non-reentrant model
  6493 ;;
  6494                           
  6495                           	psect	text26
  6496  004E44                     __ptext26:
  6497                           	callstack 0
  6498  004E44                     _PWM2_setDC:
  6499                           	callstack 24
  6500  004E44                     
  6501                           ;fs_pwm.c: 80:     if (dutycycle <= 1023)
  6502  004E44  BE59               	btfsc	(PWM2_setDC@dutycycle+1)^0,7,c
  6503  004E46  EF2E  F027         	goto	u6810
  6504  004E4A  0E04               	movlw	4
  6505  004E4C  5C59               	subwf	(PWM2_setDC@dutycycle+1)^0,w,c
  6506  004E4E  B0D8               	btfsc	status,0,c
  6507  004E50  EF2C  F027         	goto	u6811
  6508  004E54  EF2E  F027         	goto	u6810
  6509  004E58                     u6811:
  6510  004E58  EF5E  F027         	goto	l578
  6511  004E5C                     u6810:
  6512  004E5C                     
  6513                           ;fs_pwm.c: 81:     {;fs_pwm.c: 82:         duty = (uint16_t) fabsf(dutycycle);
  6514  004E5C  C058  F00E         	movff	PWM2_setDC@dutycycle,___xxtofl@val
  6515  004E60  C059  F00F         	movff	PWM2_setDC@dutycycle+1,___xxtofl@val+1
  6516  004E64  0E00               	movlw	0
  6517  004E66  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6518  004E68  0EFF               	movlw	-1
  6519  004E6A  6E10               	movwf	(___xxtofl@val+2)^0,c
  6520  004E6C  6E11               	movwf	(___xxtofl@val+3)^0,c
  6521  004E6E  0E01               	movlw	1
  6522  004E70  ECAA  F01A         	call	___xxtofl
  6523  004E74  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6524  004E78  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6525  004E7C  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6526  004E80  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6527  004E84  EC29  F02B         	call	_fabsf	;wreg free
  6528  004E88  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6529  004E8C  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6530  004E90  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6531  004E94  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6532  004E98  ECD3  F020         	call	___fltol	;wreg free
  6533  004E9C  C04E  F05C         	movff	?___fltol,PWM2_setDC@duty
  6534  004EA0  C04F  F05D         	movff	?___fltol+1,PWM2_setDC@duty+1
  6535  004EA4                     
  6536                           ;fs_pwm.c: 83:         CCPR2L = duty>>2;
  6537  004EA4  C05C  F05A         	movff	PWM2_setDC@duty,??_PWM2_setDC
  6538  004EA8  C05D  F05B         	movff	PWM2_setDC@duty+1,??_PWM2_setDC+1
  6539  004EAC  90D8               	bcf	status,0,c
  6540  004EAE  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6541  004EB0  325A               	rrcf	??_PWM2_setDC^0,f,c
  6542  004EB2  90D8               	bcf	status,0,c
  6543  004EB4  325B               	rrcf	(??_PWM2_setDC+1)^0,f,c
  6544  004EB6  325A               	rrcf	??_PWM2_setDC^0,f,c
  6545  004EB8  505A               	movf	??_PWM2_setDC^0,w,c
  6546  004EBA  6E67               	movwf	103,c	;volatile
  6547  004EBC                     l578:
  6548  004EBC  0012               	return		;funcret
  6549  004EBE                     __end_of_PWM2_setDC:
  6550                           	callstack 0
  6551                           
  6552 ;; *************** function _PWM1_setDC *****************
  6553 ;; Defined at:
  6554 ;;		line 60 in file "fs_pwm.c"
  6555 ;; Parameters:    Size  Location     Type
  6556 ;;  dutycycle       2   87[COMRAM] short 
  6557 ;; Auto vars:     Size  Location     Type
  6558 ;;  duty            2   91[COMRAM] unsigned short 
  6559 ;; Return value:  Size  Location     Type
  6560 ;;                  1    wreg      void 
  6561 ;; Registers used:
  6562 ;;		wreg, status,2, status,0, cstack
  6563 ;; Tracked objects:
  6564 ;;		On entry : 0/0
  6565 ;;		On exit  : 0/0
  6566 ;;		Unchanged: 0/0
  6567 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6568 ;;      Params:         2       0       0       0       0       0       0
  6569 ;;      Locals:         2       0       0       0       0       0       0
  6570 ;;      Temps:          2       0       0       0       0       0       0
  6571 ;;      Totals:         6       0       0       0       0       0       0
  6572 ;;Total ram usage:        6 bytes
  6573 ;; Hardware stack levels used:    1
  6574 ;; Hardware stack levels required when called:    2
  6575 ;; This function calls:
  6576 ;;		___fltol
  6577 ;;		___xxtofl
  6578 ;;		_fabsf
  6579 ;; This function is called by:
  6580 ;;		_main
  6581 ;;		_stopMotor
  6582 ;;		_startMotor
  6583 ;; This function uses a non-reentrant model
  6584 ;;
  6585                           
  6586                           	psect	text27
  6587  004EBE                     __ptext27:
  6588                           	callstack 0
  6589  004EBE                     _PWM1_setDC:
  6590                           	callstack 24
  6591  004EBE                     
  6592                           ;fs_pwm.c: 64:     if (dutycycle <= 1023)
  6593  004EBE  BE59               	btfsc	(PWM1_setDC@dutycycle+1)^0,7,c
  6594  004EC0  EF6B  F027         	goto	u6800
  6595  004EC4  0E04               	movlw	4
  6596  004EC6  5C59               	subwf	(PWM1_setDC@dutycycle+1)^0,w,c
  6597  004EC8  B0D8               	btfsc	status,0,c
  6598  004ECA  EF69  F027         	goto	u6801
  6599  004ECE  EF6B  F027         	goto	u6800
  6600  004ED2                     u6801:
  6601  004ED2  EF9B  F027         	goto	l574
  6602  004ED6                     u6800:
  6603  004ED6                     
  6604                           ;fs_pwm.c: 65:     {;fs_pwm.c: 66:         duty = (uint16_t) fabsf(dutycycle);
  6605  004ED6  C058  F00E         	movff	PWM1_setDC@dutycycle,___xxtofl@val
  6606  004EDA  C059  F00F         	movff	PWM1_setDC@dutycycle+1,___xxtofl@val+1
  6607  004EDE  0E00               	movlw	0
  6608  004EE0  BE0F               	btfsc	(___xxtofl@val+1)^0,7,c
  6609  004EE2  0EFF               	movlw	-1
  6610  004EE4  6E10               	movwf	(___xxtofl@val+2)^0,c
  6611  004EE6  6E11               	movwf	(___xxtofl@val+3)^0,c
  6612  004EE8  0E01               	movlw	1
  6613  004EEA  ECAA  F01A         	call	___xxtofl
  6614  004EEE  C00E  F01C         	movff	?___xxtofl,fabsf@x
  6615  004EF2  C00F  F01D         	movff	?___xxtofl+1,fabsf@x+1
  6616  004EF6  C010  F01E         	movff	?___xxtofl+2,fabsf@x+2
  6617  004EFA  C011  F01F         	movff	?___xxtofl+3,fabsf@x+3
  6618  004EFE  EC29  F02B         	call	_fabsf	;wreg free
  6619  004F02  C01C  F04E         	movff	?_fabsf,___fltol@f1
  6620  004F06  C01D  F04F         	movff	?_fabsf+1,___fltol@f1+1
  6621  004F0A  C01E  F050         	movff	?_fabsf+2,___fltol@f1+2
  6622  004F0E  C01F  F051         	movff	?_fabsf+3,___fltol@f1+3
  6623  004F12  ECD3  F020         	call	___fltol	;wreg free
  6624  004F16  C04E  F05C         	movff	?___fltol,PWM1_setDC@duty
  6625  004F1A  C04F  F05D         	movff	?___fltol+1,PWM1_setDC@duty+1
  6626  004F1E                     
  6627                           ;fs_pwm.c: 67:         CCPR1L = duty>>2;
  6628  004F1E  C05C  F05A         	movff	PWM1_setDC@duty,??_PWM1_setDC
  6629  004F22  C05D  F05B         	movff	PWM1_setDC@duty+1,??_PWM1_setDC+1
  6630  004F26  90D8               	bcf	status,0,c
  6631  004F28  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6632  004F2A  325A               	rrcf	??_PWM1_setDC^0,f,c
  6633  004F2C  90D8               	bcf	status,0,c
  6634  004F2E  325B               	rrcf	(??_PWM1_setDC+1)^0,f,c
  6635  004F30  325A               	rrcf	??_PWM1_setDC^0,f,c
  6636  004F32  505A               	movf	??_PWM1_setDC^0,w,c
  6637  004F34  6EBE               	movwf	190,c	;volatile
  6638  004F36                     l574:
  6639  004F36  0012               	return		;funcret
  6640  004F38                     __end_of_PWM1_setDC:
  6641                           	callstack 0
  6642                           
  6643 ;; *************** function _fabsf *****************
  6644 ;; Defined at:
  6645 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fabsf.c"
  6646 ;; Parameters:    Size  Location     Type
  6647 ;;  x               4   27[COMRAM] float 
  6648 ;; Auto vars:     Size  Location     Type
  6649 ;;  u               4   31[COMRAM] struct .
  6650 ;; Return value:  Size  Location     Type
  6651 ;;                  4   27[COMRAM] float 
  6652 ;; Registers used:
  6653 ;;		status,2, status,0
  6654 ;; Tracked objects:
  6655 ;;		On entry : 0/0
  6656 ;;		On exit  : 0/0
  6657 ;;		Unchanged: 0/0
  6658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6659 ;;      Params:         4       0       0       0       0       0       0
  6660 ;;      Locals:         4       0       0       0       0       0       0
  6661 ;;      Temps:          0       0       0       0       0       0       0
  6662 ;;      Totals:         8       0       0       0       0       0       0
  6663 ;;Total ram usage:        8 bytes
  6664 ;; Hardware stack levels used:    1
  6665 ;; Hardware stack levels required when called:    1
  6666 ;; This function calls:
  6667 ;;		Nothing
  6668 ;; This function is called by:
  6669 ;;		_PWM1_setDC
  6670 ;;		_PWM2_setDC
  6671 ;; This function uses a non-reentrant model
  6672 ;;
  6673                           
  6674                           	psect	text28
  6675  005652                     __ptext28:
  6676                           	callstack 0
  6677  005652                     _fabsf:
  6678                           	callstack 24
  6679  005652  C1AB  F020         	movff	fabsf@F463,fabsf@u
  6680  005656  C1AC  F021         	movff	fabsf@F463+1,fabsf@u+1
  6681  00565A  C1AD  F022         	movff	fabsf@F463+2,fabsf@u+2
  6682  00565E  C1AE  F023         	movff	fabsf@F463+3,fabsf@u+3
  6683  005662  C01C  F020         	movff	fabsf@x,fabsf@u
  6684  005666  C01D  F021         	movff	fabsf@x+1,fabsf@u+1
  6685  00566A  C01E  F022         	movff	fabsf@x+2,fabsf@u+2
  6686  00566E  C01F  F023         	movff	fabsf@x+3,fabsf@u+3
  6687  005672  9E23               	bcf	(fabsf@u+3)^0,7,c
  6688  005674  C020  F01C         	movff	fabsf@u,?_fabsf
  6689  005678  C021  F01D         	movff	fabsf@u+1,?_fabsf+1
  6690  00567C  C022  F01E         	movff	fabsf@u+2,?_fabsf+2
  6691  005680  C023  F01F         	movff	fabsf@u+3,?_fabsf+3
  6692  005684  0012               	return		;funcret
  6693  005686                     __end_of_fabsf:
  6694                           	callstack 0
  6695                           
  6696 ;; *************** function ___xxtofl *****************
  6697 ;; Defined at:
  6698 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\xxtofl.c"
  6699 ;; Parameters:    Size  Location     Type
  6700 ;;  sign            1    wreg     unsigned char 
  6701 ;;  val             4   13[COMRAM] long 
  6702 ;; Auto vars:     Size  Location     Type
  6703 ;;  sign            1   21[COMRAM] unsigned char 
  6704 ;;  arg             4   23[COMRAM] unsigned long 
  6705 ;;  exp             1   22[COMRAM] unsigned char 
  6706 ;; Return value:  Size  Location     Type
  6707 ;;                  4   13[COMRAM] unsigned char 
  6708 ;; Registers used:
  6709 ;;		wreg, status,2, status,0
  6710 ;; Tracked objects:
  6711 ;;		On entry : 0/0
  6712 ;;		On exit  : 0/0
  6713 ;;		Unchanged: 0/0
  6714 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6715 ;;      Params:         4       0       0       0       0       0       0
  6716 ;;      Locals:         6       0       0       0       0       0       0
  6717 ;;      Temps:          4       0       0       0       0       0       0
  6718 ;;      Totals:        14       0       0       0       0       0       0
  6719 ;;Total ram usage:       14 bytes
  6720 ;; Hardware stack levels used:    1
  6721 ;; Hardware stack levels required when called:    1
  6722 ;; This function calls:
  6723 ;;		Nothing
  6724 ;; This function is called by:
  6725 ;;		_scanAdcConversion
  6726 ;;		_calculatedAverageValue
  6727 ;;		_PWM1_setDC
  6728 ;;		_PWM2_setDC
  6729 ;;		_speedControl
  6730 ;; This function uses a non-reentrant model
  6731 ;;
  6732                           
  6733                           	psect	text29
  6734  003554                     __ptext29:
  6735                           	callstack 0
  6736  003554                     ___xxtofl:
  6737                           	callstack 24
  6738                           
  6739                           ;incstack = 0
  6740                           ;___xxtofl@sign stored from wreg
  6741  003554  6E16               	movwf	___xxtofl@sign^0,c
  6742  003556  5016               	movf	___xxtofl@sign^0,w,c
  6743  003558  B4D8               	btfsc	status,2,c
  6744  00355A  EFB1  F01A         	goto	u6491
  6745  00355E  EFB3  F01A         	goto	u6490
  6746  003562                     u6491:
  6747  003562  EFD5  F01A         	goto	l1346
  6748  003566                     u6490:
  6749  003566  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6750  003568  EFBA  F01A         	goto	u6500
  6751  00356C  EFB8  F01A         	goto	u6501
  6752  003570                     u6501:
  6753  003570  EFD5  F01A         	goto	l1346
  6754  003574                     u6500:
  6755  003574  C00E  F012         	movff	___xxtofl@val,??___xxtofl
  6756  003578  C00F  F013         	movff	___xxtofl@val+1,??___xxtofl+1
  6757  00357C  C010  F014         	movff	___xxtofl@val+2,??___xxtofl+2
  6758  003580  C011  F015         	movff	___xxtofl@val+3,??___xxtofl+3
  6759  003584  1E12               	comf	??___xxtofl^0,f,c
  6760  003586  1E13               	comf	(??___xxtofl+1)^0,f,c
  6761  003588  1E14               	comf	(??___xxtofl+2)^0,f,c
  6762  00358A  1E15               	comf	(??___xxtofl+3)^0,f,c
  6763  00358C  2A12               	incf	??___xxtofl^0,f,c
  6764  00358E  0E00               	movlw	0
  6765  003590  2213               	addwfc	(??___xxtofl+1)^0,f,c
  6766  003592  2214               	addwfc	(??___xxtofl+2)^0,f,c
  6767  003594  2215               	addwfc	(??___xxtofl+3)^0,f,c
  6768  003596  C012  F018         	movff	??___xxtofl,___xxtofl@arg
  6769  00359A  C013  F019         	movff	??___xxtofl+1,___xxtofl@arg+1
  6770  00359E  C014  F01A         	movff	??___xxtofl+2,___xxtofl@arg+2
  6771  0035A2  C015  F01B         	movff	??___xxtofl+3,___xxtofl@arg+3
  6772  0035A6  EFDD  F01A         	goto	l5536
  6773  0035AA                     l1346:
  6774  0035AA  C00E  F018         	movff	___xxtofl@val,___xxtofl@arg
  6775  0035AE  C00F  F019         	movff	___xxtofl@val+1,___xxtofl@arg+1
  6776  0035B2  C010  F01A         	movff	___xxtofl@val+2,___xxtofl@arg+2
  6777  0035B6  C011  F01B         	movff	___xxtofl@val+3,___xxtofl@arg+3
  6778  0035BA                     l5536:
  6779  0035BA  500E               	movf	___xxtofl@val^0,w,c
  6780  0035BC  100F               	iorwf	(___xxtofl@val+1)^0,w,c
  6781  0035BE  1010               	iorwf	(___xxtofl@val+2)^0,w,c
  6782  0035C0  1011               	iorwf	(___xxtofl@val+3)^0,w,c
  6783  0035C2  A4D8               	btfss	status,2,c
  6784  0035C4  EFE6  F01A         	goto	u6511
  6785  0035C8  EFE8  F01A         	goto	u6510
  6786  0035CC                     u6511:
  6787  0035CC  EFF2  F01A         	goto	l5542
  6788  0035D0                     u6510:
  6789  0035D0  0E00               	movlw	0
  6790  0035D2  6E0E               	movwf	?___xxtofl^0,c
  6791  0035D4  0E00               	movlw	0
  6792  0035D6  6E0F               	movwf	(?___xxtofl+1)^0,c
  6793  0035D8  0E00               	movlw	0
  6794  0035DA  6E10               	movwf	(?___xxtofl+2)^0,c
  6795  0035DC  0E00               	movlw	0
  6796  0035DE  6E11               	movwf	(?___xxtofl+3)^0,c
  6797  0035E0  EF83  F01B         	goto	l1349
  6798  0035E4                     l5542:
  6799  0035E4  0E96               	movlw	150
  6800  0035E6  6E17               	movwf	___xxtofl@exp^0,c
  6801  0035E8  EFFC  F01A         	goto	l5546
  6802  0035EC                     l5544:
  6803  0035EC  2A17               	incf	___xxtofl@exp^0,f,c
  6804  0035EE  90D8               	bcf	status,0,c
  6805  0035F0  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6806  0035F2  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6807  0035F4  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6808  0035F6  3218               	rrcf	___xxtofl@arg^0,f,c
  6809  0035F8                     l5546:
  6810  0035F8  0E00               	movlw	0
  6811  0035FA  1418               	andwf	___xxtofl@arg^0,w,c
  6812  0035FC  6E12               	movwf	??___xxtofl^0,c
  6813  0035FE  0E00               	movlw	0
  6814  003600  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6815  003602  6E13               	movwf	(??___xxtofl+1)^0,c
  6816  003604  0E00               	movlw	0
  6817  003606  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6818  003608  6E14               	movwf	(??___xxtofl+2)^0,c
  6819  00360A  0EFE               	movlw	254
  6820  00360C  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6821  00360E  6E15               	movwf	(??___xxtofl+3)^0,c
  6822  003610  5012               	movf	??___xxtofl^0,w,c
  6823  003612  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6824  003614  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6825  003616  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6826  003618  A4D8               	btfss	status,2,c
  6827  00361A  EF11  F01B         	goto	u6521
  6828  00361E  EF13  F01B         	goto	u6520
  6829  003622                     u6521:
  6830  003622  EFF6  F01A         	goto	l5544
  6831  003626                     u6520:
  6832  003626  EF21  F01B         	goto	l1353
  6833  00362A                     l5548:
  6834  00362A  2A17               	incf	___xxtofl@exp^0,f,c
  6835  00362C  0E01               	movlw	1
  6836  00362E  2618               	addwf	___xxtofl@arg^0,f,c
  6837  003630  0E00               	movlw	0
  6838  003632  2219               	addwfc	(___xxtofl@arg+1)^0,f,c
  6839  003634  221A               	addwfc	(___xxtofl@arg+2)^0,f,c
  6840  003636  221B               	addwfc	(___xxtofl@arg+3)^0,f,c
  6841  003638  90D8               	bcf	status,0,c
  6842  00363A  321B               	rrcf	(___xxtofl@arg+3)^0,f,c
  6843  00363C  321A               	rrcf	(___xxtofl@arg+2)^0,f,c
  6844  00363E  3219               	rrcf	(___xxtofl@arg+1)^0,f,c
  6845  003640  3218               	rrcf	___xxtofl@arg^0,f,c
  6846  003642                     l1353:
  6847  003642  0E00               	movlw	0
  6848  003644  1418               	andwf	___xxtofl@arg^0,w,c
  6849  003646  6E12               	movwf	??___xxtofl^0,c
  6850  003648  0E00               	movlw	0
  6851  00364A  1419               	andwf	(___xxtofl@arg+1)^0,w,c
  6852  00364C  6E13               	movwf	(??___xxtofl+1)^0,c
  6853  00364E  0E00               	movlw	0
  6854  003650  141A               	andwf	(___xxtofl@arg+2)^0,w,c
  6855  003652  6E14               	movwf	(??___xxtofl+2)^0,c
  6856  003654  0EFF               	movlw	255
  6857  003656  141B               	andwf	(___xxtofl@arg+3)^0,w,c
  6858  003658  6E15               	movwf	(??___xxtofl+3)^0,c
  6859  00365A  5012               	movf	??___xxtofl^0,w,c
  6860  00365C  1013               	iorwf	(??___xxtofl+1)^0,w,c
  6861  00365E  1014               	iorwf	(??___xxtofl+2)^0,w,c
  6862  003660  1015               	iorwf	(??___xxtofl+3)^0,w,c
  6863  003662  A4D8               	btfss	status,2,c
  6864  003664  EF36  F01B         	goto	u6531
  6865  003668  EF38  F01B         	goto	u6530
  6866  00366C                     u6531:
  6867  00366C  EF15  F01B         	goto	l5548
  6868  003670                     u6530:
  6869  003670  EF40  F01B         	goto	l5556
  6870  003674                     l5554:
  6871  003674  0617               	decf	___xxtofl@exp^0,f,c
  6872  003676  90D8               	bcf	status,0,c
  6873  003678  3618               	rlcf	___xxtofl@arg^0,f,c
  6874  00367A  3619               	rlcf	(___xxtofl@arg+1)^0,f,c
  6875  00367C  361A               	rlcf	(___xxtofl@arg+2)^0,f,c
  6876  00367E  361B               	rlcf	(___xxtofl@arg+3)^0,f,c
  6877  003680                     l5556:
  6878  003680  BE1A               	btfsc	(___xxtofl@arg+2)^0,7,c
  6879  003682  EF45  F01B         	goto	u6541
  6880  003686  EF47  F01B         	goto	u6540
  6881  00368A                     u6541:
  6882  00368A  EF4F  F01B         	goto	l1360
  6883  00368E                     u6540:
  6884  00368E  0E02               	movlw	2
  6885  003690  6017               	cpfslt	___xxtofl@exp^0,c
  6886  003692  EF4D  F01B         	goto	u6551
  6887  003696  EF4F  F01B         	goto	u6550
  6888  00369A                     u6551:
  6889  00369A  EF3A  F01B         	goto	l5554
  6890  00369E                     u6550:
  6891  00369E                     l1360:
  6892  00369E  B017               	btfsc	___xxtofl@exp^0,0,c
  6893  0036A0  EF54  F01B         	goto	u6561
  6894  0036A4  EF56  F01B         	goto	u6560
  6895  0036A8                     u6561:
  6896  0036A8  EF57  F01B         	goto	l5562
  6897  0036AC                     u6560:
  6898  0036AC  9E1A               	bcf	(___xxtofl@arg+2)^0,7,c
  6899  0036AE                     l5562:
  6900  0036AE  90D8               	bcf	status,0,c
  6901  0036B0  3217               	rrcf	___xxtofl@exp^0,f,c
  6902  0036B2  C017  F012         	movff	___xxtofl@exp,??___xxtofl
  6903  0036B6  6A13               	clrf	(??___xxtofl+1)^0,c
  6904  0036B8  6A14               	clrf	(??___xxtofl+2)^0,c
  6905  0036BA  6A15               	clrf	(??___xxtofl+3)^0,c
  6906  0036BC  C012  F015         	movff	??___xxtofl,??___xxtofl+3
  6907  0036C0  6A14               	clrf	(??___xxtofl+2)^0,c
  6908  0036C2  6A13               	clrf	(??___xxtofl+1)^0,c
  6909  0036C4  6A12               	clrf	??___xxtofl^0,c
  6910  0036C6  5012               	movf	??___xxtofl^0,w,c
  6911  0036C8  1218               	iorwf	___xxtofl@arg^0,f,c
  6912  0036CA  5013               	movf	(??___xxtofl+1)^0,w,c
  6913  0036CC  1219               	iorwf	(___xxtofl@arg+1)^0,f,c
  6914  0036CE  5014               	movf	(??___xxtofl+2)^0,w,c
  6915  0036D0  121A               	iorwf	(___xxtofl@arg+2)^0,f,c
  6916  0036D2  5015               	movf	(??___xxtofl+3)^0,w,c
  6917  0036D4  121B               	iorwf	(___xxtofl@arg+3)^0,f,c
  6918  0036D6  5016               	movf	___xxtofl@sign^0,w,c
  6919  0036D8  B4D8               	btfsc	status,2,c
  6920  0036DA  EF71  F01B         	goto	u6571
  6921  0036DE  EF73  F01B         	goto	u6570
  6922  0036E2                     u6571:
  6923  0036E2  EF7B  F01B         	goto	l5572
  6924  0036E6                     u6570:
  6925  0036E6  BE11               	btfsc	(___xxtofl@val+3)^0,7,c
  6926  0036E8  EF7A  F01B         	goto	u6580
  6927  0036EC  EF78  F01B         	goto	u6581
  6928  0036F0                     u6581:
  6929  0036F0  EF7B  F01B         	goto	l5572
  6930  0036F4                     u6580:
  6931  0036F4  8E1B               	bsf	(___xxtofl@arg+3)^0,7,c
  6932  0036F6                     l5572:
  6933  0036F6  C018  F00E         	movff	___xxtofl@arg,?___xxtofl
  6934  0036FA  C019  F00F         	movff	___xxtofl@arg+1,?___xxtofl+1
  6935  0036FE  C01A  F010         	movff	___xxtofl@arg+2,?___xxtofl+2
  6936  003702  C01B  F011         	movff	___xxtofl@arg+3,?___xxtofl+3
  6937  003706                     l1349:
  6938  003706  0012               	return		;funcret
  6939  003708                     __end_of___xxtofl:
  6940                           	callstack 0
  6941                           
  6942 ;; *************** function _sprintf *****************
  6943 ;; Defined at:
  6944 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_sprintf.c"
  6945 ;; Parameters:    Size  Location     Type
  6946 ;;  s               2  111[BANK0 ] PTR unsigned char 
  6947 ;;		 -> driverTimeSettingMenu@textCursor2(16), stopTimeSettingMenu@textCursor2(16), speedLimitSettingMenu@textCursor2(16
      +), secretMenu@textCursor2(16), 
  6948 ;;		 -> pauseMenu@textCursor2(16), stopMenu@textCursor2(16), mainMenu@textCursor2(16), 
  6949 ;;  fmt             2  113[BANK0 ] PTR const unsigned char 
  6950 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  6951 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  6952 ;; Auto vars:     Size  Location     Type
  6953 ;;  f               6  123[BANK0 ] struct _IO_FILE
  6954 ;;  ap              2  121[BANK0 ] PTR void [1]
  6955 ;;		 -> ?_sprintf(2), 
  6956 ;;  ret             2    0        int 
  6957 ;; Return value:  Size  Location     Type
  6958 ;;                  2  111[BANK0 ] int 
  6959 ;; Registers used:
  6960 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  6961 ;; Tracked objects:
  6962 ;;		On entry : 0/0
  6963 ;;		On exit  : 0/0
  6964 ;;		Unchanged: 0/0
  6965 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  6966 ;;      Params:         0       8       0       0       0       0       0
  6967 ;;      Locals:         0      10       0       0       0       0       0
  6968 ;;      Temps:          0       0       0       0       0       0       0
  6969 ;;      Totals:         0      18       0       0       0       0       0
  6970 ;;Total ram usage:       18 bytes
  6971 ;; Hardware stack levels used:    1
  6972 ;; Hardware stack levels required when called:    8
  6973 ;; This function calls:
  6974 ;;		_vfprintf
  6975 ;; This function is called by:
  6976 ;;		_mainMenu
  6977 ;;		_stopMenu
  6978 ;;		_pauseMenu
  6979 ;;		_secretMenu
  6980 ;;		_speedLimitSettingMenu
  6981 ;;		_stopTimeSettingMenu
  6982 ;;		_driverTimeSettingMenu
  6983 ;; This function uses a non-reentrant model
  6984 ;;
  6985                           
  6986                           	psect	text30
  6987  005252                     __ptext30:
  6988                           	callstack 0
  6989  005252                     _sprintf:
  6990                           	callstack 19
  6991  005252  0ED3               	movlw	low (?_sprintf+4)
  6992  005254  0100               	movlb	0	; () banked
  6993  005256  6FD9               	movwf	sprintf@ap& (0+255),b
  6994  005258  0E00               	movlw	high (?_sprintf+4)
  6995  00525A  6FDA               	movwf	(sprintf@ap+1)& (0+255),b
  6996  00525C  C0CF  F0DB         	movff	sprintf@s,sprintf@f
  6997  005260  C0D0  F0DC         	movff	sprintf@s+1,sprintf@f+1
  6998  005264                     
  6999                           ; BSR set to: 0
  7000  005264  0E00               	movlw	0
  7001  005266  6FDE               	movwf	(sprintf@f+3)& (0+255),b
  7002  005268  0E00               	movlw	0
  7003  00526A  6FDD               	movwf	(sprintf@f+2)& (0+255),b
  7004  00526C                     
  7005                           ; BSR set to: 0
  7006  00526C  0E00               	movlw	0
  7007  00526E  6FE0               	movwf	(sprintf@f+5)& (0+255),b
  7008  005270  0E00               	movlw	0
  7009  005272  6FDF               	movwf	(sprintf@f+4)& (0+255),b
  7010  005274                     
  7011                           ; BSR set to: 0
  7012  005274  0EDB               	movlw	low sprintf@f
  7013  005276  6FC7               	movwf	vfprintf@fp& (0+255),b
  7014  005278  0E00               	movlw	high sprintf@f
  7015  00527A  6FC8               	movwf	(vfprintf@fp+1)& (0+255),b
  7016  00527C  C0D1  F0C9         	movff	sprintf@fmt,vfprintf@fmt
  7017  005280  C0D2  F0CA         	movff	sprintf@fmt+1,vfprintf@fmt+1
  7018  005284  0ED9               	movlw	low sprintf@ap
  7019  005286  6FCB               	movwf	vfprintf@ap& (0+255),b
  7020  005288  0E00               	movlw	high sprintf@ap
  7021  00528A  6FCC               	movwf	(vfprintf@ap+1)& (0+255),b
  7022  00528C  EC0C  F028         	call	_vfprintf	;wreg free
  7023  005290  0100               	movlb	0	; () banked
  7024  005292  51DD               	movf	(sprintf@f+2)& (0+255),w,b
  7025  005294  25CF               	addwf	sprintf@s& (0+255),w,b
  7026  005296  6ED9               	movwf	fsr2l,c
  7027  005298  51DE               	movf	(sprintf@f+3)& (0+255),w,b
  7028  00529A  21D0               	addwfc	(sprintf@s+1)& (0+255),w,b
  7029  00529C  6EDA               	movwf	fsr2h,c
  7030  00529E  0E00               	movlw	0
  7031  0052A0  6EDF               	movwf	indf2,c
  7032  0052A2                     
  7033                           ; BSR set to: 0
  7034  0052A2  0012               	return		;funcret
  7035  0052A4                     __end_of_sprintf:
  7036                           	callstack 0
  7037                           
  7038 ;; *************** function _vfprintf *****************
  7039 ;; Defined at:
  7040 ;;		line 1368 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7041 ;; Parameters:    Size  Location     Type
  7042 ;;  fp              2  103[BANK0 ] PTR struct _IO_FILE
  7043 ;;		 -> sprintf@f(6), 
  7044 ;;  fmt             2  105[BANK0 ] PTR const unsigned char 
  7045 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  7046 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  7047 ;;  ap              2  107[BANK0 ] PTR PTR void 
  7048 ;;		 -> sprintf@ap(2), 
  7049 ;; Auto vars:     Size  Location     Type
  7050 ;;  cfmt            2  109[BANK0 ] PTR unsigned char 
  7051 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
  7052 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
  7053 ;; Return value:  Size  Location     Type
  7054 ;;                  2  103[BANK0 ] int 
  7055 ;; Registers used:
  7056 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7057 ;; Tracked objects:
  7058 ;;		On entry : 0/0
  7059 ;;		On exit  : 0/0
  7060 ;;		Unchanged: 0/0
  7061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7062 ;;      Params:         0       6       0       0       0       0       0
  7063 ;;      Locals:         0       2       0       0       0       0       0
  7064 ;;      Temps:          0       0       0       0       0       0       0
  7065 ;;      Totals:         0       8       0       0       0       0       0
  7066 ;;Total ram usage:        8 bytes
  7067 ;; Hardware stack levels used:    1
  7068 ;; Hardware stack levels required when called:    7
  7069 ;; This function calls:
  7070 ;;		_vfpfcnvrt
  7071 ;; This function is called by:
  7072 ;;		_sprintf
  7073 ;; This function uses a non-reentrant model
  7074 ;;
  7075                           
  7076                           	psect	text31
  7077  005018                     __ptext31:
  7078                           	callstack 0
  7079  005018                     _vfprintf:
  7080                           	callstack 19
  7081  005018                     
  7082                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1368: int vfprint
      +                          f(FILE *fp, const char *fmt, va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\source
      +                          s\c99\common\doprnt.c: 1369: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\comm
      +                          on\doprnt.c: 1371:     char *cfmt;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\
      +                          common\doprnt.c: 1373:     cfmt = (char *)fmt;
  7083  005018  C0C9  F0CD         	movff	vfprintf@fmt,vfprintf@cfmt
  7084  00501C  C0CA  F0CE         	movff	vfprintf@fmt+1,vfprintf@cfmt+1
  7085  005020                     
  7086                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1374:     nout = 
      +                          0;
  7087  005020  0E00               	movlw	0
  7088  005022  0101               	movlb	1	; () banked
  7089  005024  6FB0               	movwf	(_nout+1)& (0+255),b
  7090  005026  0E00               	movlw	0
  7091  005028  6FAF               	movwf	_nout& (0+255),b
  7092                           
  7093                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  7094  00502A  EF2E  F028         	goto	l5848
  7095  00502E                     l5846:
  7096                           
  7097                           ; BSR set to: 1
  7098                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1376:         nou
      +                          t += vfpfcnvrt(fp, &cfmt, ap);
  7099  00502E  C0C7  F0A7         	movff	vfprintf@fp,vfpfcnvrt@fp
  7100  005032  C0C8  F0A8         	movff	vfprintf@fp+1,vfpfcnvrt@fp+1
  7101  005036  0ECD               	movlw	low vfprintf@cfmt
  7102  005038  0100               	movlb	0	; () banked
  7103  00503A  6FA9               	movwf	vfpfcnvrt@fmt& (0+255),b
  7104  00503C  0E00               	movlw	high vfprintf@cfmt
  7105  00503E  6FAA               	movwf	(vfpfcnvrt@fmt+1)& (0+255),b
  7106  005040  C0CB  F0AB         	movff	vfprintf@ap,vfpfcnvrt@ap
  7107  005044  C0CC  F0AC         	movff	vfprintf@ap+1,vfpfcnvrt@ap+1
  7108  005048  EC2A  F00A         	call	_vfpfcnvrt	;wreg free
  7109  00504C  0100               	movlb	0	; () banked
  7110  00504E  51A7               	movf	?_vfpfcnvrt& (0+255),w,b
  7111  005050  0101               	movlb	1	; () banked
  7112  005052  27AF               	addwf	_nout& (0+255),f,b
  7113  005054  0100               	movlb	0	; () banked
  7114  005056  51A8               	movf	(?_vfpfcnvrt+1)& (0+255),w,b
  7115  005058  0101               	movlb	1	; () banked
  7116  00505A  23B0               	addwfc	(_nout+1)& (0+255),f,b
  7117  00505C                     l5848:
  7118                           
  7119                           ; BSR set to: 1
  7120                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1375:     while (
      +                          *cfmt) {
  7121  00505C  C0CD  FFF6         	movff	vfprintf@cfmt,tblptrl
  7122  005060  C0CE  FFF7         	movff	vfprintf@cfmt+1,tblptrh
  7123  005064                     	if	0	;tblptru may be non-zero
  7124  005064                     	endif
  7125  005064                     	if	0	;tblptru may be non-zero
  7126  005064                     	endif
  7127  005064  0008               	tblrd		*
  7128  005066  50F5               	movf	tablat,w,c
  7129  005068  0900               	iorlw	0
  7130  00506A  A4D8               	btfss	status,2,c
  7131  00506C  EF3A  F028         	goto	u6861
  7132  005070  EF3C  F028         	goto	u6860
  7133  005074                     u6861:
  7134  005074  EF17  F028         	goto	l5846
  7135  005078                     u6860:
  7136  005078                     
  7137                           ; BSR set to: 1
  7138                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1378:     return 
      +                          nout;
  7139  005078  C1AF  F0C7         	movff	_nout,?_vfprintf
  7140  00507C  C1B0  F0C8         	movff	_nout+1,?_vfprintf+1
  7141  005080                     
  7142                           ; BSR set to: 1
  7143  005080  0012               	return		;funcret
  7144  005082                     __end_of_vfprintf:
  7145                           	callstack 0
  7146                           
  7147 ;; *************** function _vfpfcnvrt *****************
  7148 ;; Defined at:
  7149 ;;		line 670 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  7150 ;; Parameters:    Size  Location     Type
  7151 ;;  fp              2   71[BANK0 ] PTR struct _IO_FILE
  7152 ;;		 -> sprintf@f(6), 
  7153 ;;  fmt             2   73[BANK0 ] PTR PTR unsigned char 
  7154 ;;		 -> vfprintf@cfmt(2), 
  7155 ;;  ap              2   75[BANK0 ] PTR PTR void 
  7156 ;;		 -> sprintf@ap(2), 
  7157 ;; Auto vars:     Size  Location     Type
  7158 ;;  ll              8   81[BANK0 ] long long 
  7159 ;;  llu             8    0        unsigned long long 
  7160 ;;  f               4   95[BANK0 ] unsigned long long 
  7161 ;;  ct              3   99[BANK0 ] unsigned char [3]
  7162 ;;  vp              3    0        PTR void 
  7163 ;;  cp              3    0        PTR unsigned char 
  7164 ;;  i               2    0        int 
  7165 ;;  done            2    0        int 
  7166 ;;  c               1  102[BANK0 ] unsigned char 
  7167 ;; Return value:  Size  Location     Type
  7168 ;;                  2   71[BANK0 ] int 
  7169 ;; Registers used:
  7170 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  7171 ;; Tracked objects:
  7172 ;;		On entry : 0/0
  7173 ;;		On exit  : 0/0
  7174 ;;		Unchanged: 0/0
  7175 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  7176 ;;      Params:         0       6       0       0       0       0       0
  7177 ;;      Locals:         0      22       0       0       0       0       0
  7178 ;;      Temps:          0       4       0       0       0       0       0
  7179 ;;      Totals:         0      32       0       0       0       0       0
  7180 ;;Total ram usage:       32 bytes
  7181 ;; Hardware stack levels used:    1
  7182 ;; Hardware stack levels required when called:    6
  7183 ;; This function calls:
  7184 ;;		_atoi
  7185 ;;		_dtoa
  7186 ;;		_efgtoa
  7187 ;;		_fputc
  7188 ;;		_isdigit
  7189 ;;		_isupper
  7190 ;;		_strncmp
  7191 ;;		_tolower
  7192 ;; This function is called by:
  7193 ;;		_vfprintf
  7194 ;; This function uses a non-reentrant model
  7195 ;;
  7196                           
  7197                           	psect	text32
  7198  001454                     __ptext32:
  7199                           	callstack 0
  7200  001454                     _vfpfcnvrt:
  7201                           	callstack 19
  7202  001454                     
  7203                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 670: static int v
      +                          fpfcnvrt(FILE *fp, char *fmt[], va_list ap);C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 671: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\co
      +                          mmon\doprnt.c: 672:     char c, *cp, ct[3];;C:\Program Files\Microchip\xc8\v2.20\pic\sou
      +                          rces\c99\common\doprnt.c: 673:     int done, i;;C:\Program Files\Microchip\xc8\v2.20\pic
      +                          \sources\c99\common\doprnt.c: 674:     long long ll;;C:\Program Files\Microchip\xc8\v2.2
      +                          0\pic\sources\c99\common\doprnt.c: 675:     unsigned long long llu;
  7204  001454  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7205  001458  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7206  00145C  CFDE FFF6          	movff	postinc2,tblptrl
  7207  001460  CFDD FFF7          	movff	postdec2,tblptrh
  7208  001464                     	if	0	;tblptru may be non-zero
  7209  001464                     	endif
  7210  001464                     	if	0	;tblptru may be non-zero
  7211  001464                     	endif
  7212  001464  0008               	tblrd		*
  7213  001466  50F5               	movf	tablat,w,c
  7214  001468  0A25               	xorlw	37
  7215  00146A  A4D8               	btfss	status,2,c
  7216  00146C  EF3A  F00A         	goto	u6591
  7217  001470  EF3C  F00A         	goto	u6590
  7218  001474                     u6591:
  7219  001474  EF2D  F00D         	goto	l5686
  7220  001478                     u6590:
  7221  001478                     
  7222                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 681:         ++*f
      +                          mt;
  7223  001478  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7224  00147C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7225  001480  2ADE               	incf	postinc2,f,c
  7226  001482  0E00               	movlw	0
  7227  001484  22DD               	addwfc	postdec2,f,c
  7228  001486                     
  7229                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 683:         flag
      +                          s = width = 0;
  7230  001486  0E00               	movlw	0
  7231  001488  0101               	movlb	1	; () banked
  7232  00148A  6FB2               	movwf	(_width+1)& (0+255),b
  7233  00148C  0E00               	movlw	0
  7234  00148E  6FB1               	movwf	_width& (0+255),b
  7235  001490  C1B1  F0F8         	movff	_width,_flags
  7236  001494  C1B2  F0F9         	movff	_width+1,_flags+1
  7237  001498                     
  7238                           ; BSR set to: 1
  7239                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 684:         prec
      +                           = -1;
  7240  001498  0100               	movlb	0	; () banked
  7241  00149A  69F6               	setf	_prec& (0+255),b
  7242  00149C  69F7               	setf	(_prec+1)& (0+255),b
  7243  00149E                     
  7244                           ; BSR set to: 0
  7245                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 723:         if (
      +                          (*fmt)[0] == '*') {
  7246  00149E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7247  0014A2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7248  0014A6  CFDE FFF6          	movff	postinc2,tblptrl
  7249  0014AA  CFDD FFF7          	movff	postdec2,tblptrh
  7250  0014AE                     	if	0	;tblptru may be non-zero
  7251  0014AE                     	endif
  7252  0014AE                     	if	0	;tblptru may be non-zero
  7253  0014AE                     	endif
  7254  0014AE  0008               	tblrd		*
  7255  0014B0  50F5               	movf	tablat,w,c
  7256  0014B2  0A2A               	xorlw	42
  7257  0014B4  A4D8               	btfss	status,2,c
  7258  0014B6  EF5F  F00A         	goto	u6601
  7259  0014BA  EF61  F00A         	goto	u6600
  7260  0014BE                     u6601:
  7261  0014BE  EF8D  F00A         	goto	l5592
  7262  0014C2                     u6600:
  7263  0014C2                     
  7264                           ; BSR set to: 0
  7265                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 724:             
      +                          ++*fmt;
  7266  0014C2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7267  0014C6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7268  0014CA  2ADE               	incf	postinc2,f,c
  7269  0014CC  0E00               	movlw	0
  7270  0014CE  22DD               	addwfc	postdec2,f,c
  7271                           
  7272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 725:             
      +                          width = (*(int *)__va_arg(*(int **)ap, (int)0));
  7273  0014D0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7274  0014D4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7275  0014D8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7276  0014DC  0E02               	movlw	2
  7277  0014DE  26DE               	addwf	postinc2,f,c
  7278  0014E0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7279  0014E4  0E00               	movlw	0
  7280  0014E6  22DD               	addwfc	postdec2,f,c
  7281  0014E8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7282  0014EC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7283  0014F0  CFDE F1B1          	movff	postinc2,_width
  7284  0014F4  CFDD F1B2          	movff	postdec2,_width+1
  7285  0014F8                     
  7286                           ; BSR set to: 0
  7287                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 726:             
      +                          if (width < 0) {
  7288  0014F8  0101               	movlb	1	; () banked
  7289  0014FA  BFB2               	btfsc	(_width+1)& (0+255),7,b
  7290  0014FC  EF84  F00A         	goto	u6610
  7291  001500  EF82  F00A         	goto	u6611
  7292  001504                     u6611:
  7293  001504  EFD1  F00A         	goto	l5602
  7294  001508                     u6610:
  7295  001508                     
  7296                           ; BSR set to: 1
  7297                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 727:             
      +                              flags |= (1 << 0);
  7298  001508  0100               	movlb	0	; () banked
  7299  00150A  81F8               	bsf	_flags& (0+255),0,b
  7300                           
  7301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 728:             
      +                              width = -width;
  7302  00150C  0101               	movlb	1	; () banked
  7303  00150E  6DB1               	negf	_width& (0+255),b
  7304  001510  1FB2               	comf	(_width+1)& (0+255),f,b
  7305  001512  B0D8               	btfsc	status,0,c
  7306  001514  2BB2               	incf	(_width+1)& (0+255),f,b
  7307  001516  EFD1  F00A         	goto	l5602
  7308  00151A                     l5592:
  7309                           
  7310                           ; BSR set to: 0
  7311                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 731:             
      +                          width = atoi(*fmt);
  7312  00151A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7313  00151E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7314  001522  CFDE F008          	movff	postinc2,atoi@s
  7315  001526  CFDD F009          	movff	postdec2,atoi@s+1
  7316  00152A  EC52  F01C         	call	_atoi	;wreg free
  7317  00152E  C008  F1B1         	movff	?_atoi,_width
  7318  001532  C009  F1B2         	movff	?_atoi+1,_width+1
  7319                           
  7320                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 732:             
      +                          while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7321  001536  EFA4  F00A         	goto	l5596
  7322  00153A                     l5594:
  7323                           
  7324                           ; BSR set to: 0
  7325                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 733:             
      +                              ++*fmt;
  7326  00153A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7327  00153E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7328  001542  2ADE               	incf	postinc2,f,c
  7329  001544  0E00               	movlw	0
  7330  001546  22DD               	addwfc	postdec2,f,c
  7331  001548                     l5596:
  7332  001548  0ED0               	movlw	208
  7333  00154A  0100               	movlb	0	; () banked
  7334  00154C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7335  00154E  0EFF               	movlw	255
  7336  001550  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7337  001552  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7338  001556  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7339  00155A  CFDE FFF6          	movff	postinc2,tblptrl
  7340  00155E  CFDD FFF7          	movff	postdec2,tblptrh
  7341  001562                     	if	0	;tblptru may be non-zero
  7342  001562                     	endif
  7343  001562                     	if	0	;tblptru may be non-zero
  7344  001562                     	endif
  7345  001562  0008               	tblrd		*
  7346  001564  50F5               	movf	tablat,w,c
  7347  001566  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7348  001568  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7349  00156A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7350  00156C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7351  00156E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7352  001570  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7353  001572  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7354  001574  E10A               	bnz	u6620
  7355  001576  0E0A               	movlw	10
  7356  001578  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7357  00157A  A0D8               	btfss	status,0,c
  7358  00157C  EFC2  F00A         	goto	u6621
  7359  001580  EFC5  F00A         	goto	u6620
  7360  001584                     u6621:
  7361  001584  0E01               	movlw	1
  7362  001586  EFC6  F00A         	goto	u6630
  7363  00158A                     u6620:
  7364  00158A  0E00               	movlw	0
  7365  00158C                     u6630:
  7366  00158C  6FB9               	movwf	_vfpfcnvrt$3004& (0+255),b
  7367  00158E  6BBA               	clrf	(_vfpfcnvrt$3004+1)& (0+255),b
  7368  001590                     
  7369                           ; BSR set to: 0
  7370  001590  51B9               	movf	_vfpfcnvrt$3004& (0+255),w,b
  7371  001592  11BA               	iorwf	(_vfpfcnvrt$3004+1)& (0+255),w,b
  7372  001594  A4D8               	btfss	status,2,c
  7373  001596  EFCF  F00A         	goto	u6641
  7374  00159A  EFD1  F00A         	goto	u6640
  7375  00159E                     u6641:
  7376  00159E  EF9D  F00A         	goto	l5594
  7377  0015A2                     u6640:
  7378  0015A2                     l5602:
  7379                           
  7380                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 740:         if (
      +                          (*fmt)[0] == '.') {
  7381  0015A2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7382  0015A6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7383  0015AA  CFDE FFF6          	movff	postinc2,tblptrl
  7384  0015AE  CFDD FFF7          	movff	postdec2,tblptrh
  7385  0015B2                     	if	0	;tblptru may be non-zero
  7386  0015B2                     	endif
  7387  0015B2                     	if	0	;tblptru may be non-zero
  7388  0015B2                     	endif
  7389  0015B2  0008               	tblrd		*
  7390  0015B4  50F5               	movf	tablat,w,c
  7391  0015B6  0A2E               	xorlw	46
  7392  0015B8  A4D8               	btfss	status,2,c
  7393  0015BA  EFE1  F00A         	goto	u6651
  7394  0015BE  EFE3  F00A         	goto	u6650
  7395  0015C2                     u6651:
  7396  0015C2  EF62  F00B         	goto	l5622
  7397  0015C6                     u6650:
  7398  0015C6                     
  7399                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 741:             
      +                          prec = 0;
  7400  0015C6  0E00               	movlw	0
  7401  0015C8  0100               	movlb	0	; () banked
  7402  0015CA  6FF7               	movwf	(_prec+1)& (0+255),b
  7403  0015CC  0E00               	movlw	0
  7404  0015CE  6FF6               	movwf	_prec& (0+255),b
  7405  0015D0                     
  7406                           ; BSR set to: 0
  7407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 742:             
      +                          ++*fmt;
  7408  0015D0  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7409  0015D4  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7410  0015D8  2ADE               	incf	postinc2,f,c
  7411  0015DA  0E00               	movlw	0
  7412  0015DC  22DD               	addwfc	postdec2,f,c
  7413  0015DE                     
  7414                           ; BSR set to: 0
  7415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 743:             
      +                          if ((*fmt)[0] == '*') {
  7416  0015DE  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7417  0015E2  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7418  0015E6  CFDE FFF6          	movff	postinc2,tblptrl
  7419  0015EA  CFDD FFF7          	movff	postdec2,tblptrh
  7420  0015EE                     	if	0	;tblptru may be non-zero
  7421  0015EE                     	endif
  7422  0015EE                     	if	0	;tblptru may be non-zero
  7423  0015EE                     	endif
  7424  0015EE  0008               	tblrd		*
  7425  0015F0  50F5               	movf	tablat,w,c
  7426  0015F2  0A2A               	xorlw	42
  7427  0015F4  A4D8               	btfss	status,2,c
  7428  0015F6  EFFF  F00A         	goto	u6661
  7429  0015FA  EF01  F00B         	goto	u6660
  7430  0015FE                     u6661:
  7431  0015FE  EF1E  F00B         	goto	l5612
  7432  001602                     u6660:
  7433  001602                     
  7434                           ; BSR set to: 0
  7435                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 744:             
      +                              ++*fmt;
  7436  001602  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7437  001606  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7438  00160A  2ADE               	incf	postinc2,f,c
  7439  00160C  0E00               	movlw	0
  7440  00160E  22DD               	addwfc	postdec2,f,c
  7441                           
  7442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 745:             
      +                              prec = (*(int *)__va_arg(*(int **)ap, (int)0));
  7443  001610  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7444  001614  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7445  001618  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7446  00161C  0E02               	movlw	2
  7447  00161E  26DE               	addwf	postinc2,f,c
  7448  001620  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7449  001624  0E00               	movlw	0
  7450  001626  22DD               	addwfc	postdec2,f,c
  7451  001628  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7452  00162C  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7453  001630  CFDE F0F6          	movff	postinc2,_prec
  7454  001634  CFDD F0F7          	movff	postdec2,_prec+1
  7455                           
  7456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 746:             
      +                          } else {
  7457  001638  EF62  F00B         	goto	l5622
  7458  00163C                     l5612:
  7459                           
  7460                           ; BSR set to: 0
  7461                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 747:             
      +                              prec = atoi(*fmt);
  7462  00163C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7463  001640  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7464  001644  CFDE F008          	movff	postinc2,atoi@s
  7465  001648  CFDD F009          	movff	postdec2,atoi@s+1
  7466  00164C  EC52  F01C         	call	_atoi	;wreg free
  7467  001650  C008  F0F6         	movff	?_atoi,_prec
  7468  001654  C009  F0F7         	movff	?_atoi+1,_prec+1
  7469                           
  7470                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 748:             
      +                              while ((0 ? isdigit((*fmt)[0]) : ((unsigned)((*fmt)[0])-'0') < 10)) {
  7471  001658  EF35  F00B         	goto	l5616
  7472  00165C                     l5614:
  7473                           
  7474                           ; BSR set to: 0
  7475                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 749:             
      +                                  ++*fmt;
  7476  00165C  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7477  001660  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7478  001664  2ADE               	incf	postinc2,f,c
  7479  001666  0E00               	movlw	0
  7480  001668  22DD               	addwfc	postdec2,f,c
  7481  00166A                     l5616:
  7482  00166A  0ED0               	movlw	208
  7483  00166C  0100               	movlb	0	; () banked
  7484  00166E  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7485  001670  0EFF               	movlw	255
  7486  001672  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7487  001674  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7488  001678  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7489  00167C  CFDE FFF6          	movff	postinc2,tblptrl
  7490  001680  CFDD FFF7          	movff	postdec2,tblptrh
  7491  001684                     	if	0	;tblptru may be non-zero
  7492  001684                     	endif
  7493  001684                     	if	0	;tblptru may be non-zero
  7494  001684                     	endif
  7495  001684  0008               	tblrd		*
  7496  001686  50F5               	movf	tablat,w,c
  7497  001688  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7498  00168A  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7499  00168C  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7500  00168E  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7501  001690  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7502  001692  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7503  001694  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7504  001696  E10A               	bnz	u6670
  7505  001698  0E0A               	movlw	10
  7506  00169A  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7507  00169C  A0D8               	btfss	status,0,c
  7508  00169E  EF53  F00B         	goto	u6671
  7509  0016A2  EF56  F00B         	goto	u6670
  7510  0016A6                     u6671:
  7511  0016A6  0E01               	movlw	1
  7512  0016A8  EF57  F00B         	goto	u6680
  7513  0016AC                     u6670:
  7514  0016AC  0E00               	movlw	0
  7515  0016AE                     u6680:
  7516  0016AE  6FBB               	movwf	_vfpfcnvrt$3005& (0+255),b
  7517  0016B0  6BBC               	clrf	(_vfpfcnvrt$3005+1)& (0+255),b
  7518  0016B2                     
  7519                           ; BSR set to: 0
  7520  0016B2  51BB               	movf	_vfpfcnvrt$3005& (0+255),w,b
  7521  0016B4  11BC               	iorwf	(_vfpfcnvrt$3005+1)& (0+255),w,b
  7522  0016B6  A4D8               	btfss	status,2,c
  7523  0016B8  EF60  F00B         	goto	u6691
  7524  0016BC  EF62  F00B         	goto	u6690
  7525  0016C0                     u6691:
  7526  0016C0  EF2E  F00B         	goto	l5614
  7527  0016C4                     u6690:
  7528  0016C4                     l5622:
  7529                           
  7530                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 757:         ct[0
      +                          ] = tolower((int)(*fmt)[0]);
  7531  0016C4  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7532  0016C8  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7533  0016CC  CFDE FFF6          	movff	postinc2,tblptrl
  7534  0016D0  CFDD FFF7          	movff	postdec2,tblptrh
  7535  0016D4                     	if	0	;tblptru may be non-zero
  7536  0016D4                     	endif
  7537  0016D4                     	if	0	;tblptru may be non-zero
  7538  0016D4                     	endif
  7539  0016D4  0008               	tblrd		*
  7540  0016D6  50F5               	movf	tablat,w,c
  7541  0016D8  6E07               	movwf	tolower@c^0,c
  7542  0016DA  6A08               	clrf	(tolower@c+1)^0,c
  7543  0016DC  EC74  F028         	call	_tolower	;wreg free
  7544  0016E0  5007               	movf	?_tolower^0,w,c
  7545  0016E2  0100               	movlb	0	; () banked
  7546  0016E4  6FC3               	movwf	vfpfcnvrt@ct& (0+255),b
  7547  0016E6                     
  7548                           ; BSR set to: 0
  7549                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 758:         if (
      +                          ct[0]) {
  7550  0016E6  51C3               	movf	vfpfcnvrt@ct& (0+255),w,b
  7551  0016E8  B4D8               	btfsc	status,2,c
  7552  0016EA  EF79  F00B         	goto	u6701
  7553  0016EE  EF7B  F00B         	goto	u6700
  7554  0016F2                     u6701:
  7555  0016F2  EFB5  F00B         	goto	l5632
  7556  0016F6                     u6700:
  7557  0016F6                     
  7558                           ; BSR set to: 0
  7559                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 759:             
      +                          ct[1] = tolower((int)(*fmt)[1]);
  7560  0016F6  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7561  0016FA  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7562  0016FE  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7563  001702  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7564  001706  0E01               	movlw	1
  7565  001708  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7566  00170A  0E00               	movlw	0
  7567  00170C  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7568  00170E  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7569  001712  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7570  001716                     	if	0	;tblptru may be non-zero
  7571  001716                     	endif
  7572  001716                     	if	0	;tblptru may be non-zero
  7573  001716                     	endif
  7574  001716  0008               	tblrd		*
  7575  001718  50F5               	movf	tablat,w,c
  7576  00171A  6E07               	movwf	tolower@c^0,c
  7577  00171C  6A08               	clrf	(tolower@c+1)^0,c
  7578  00171E  EC74  F028         	call	_tolower	;wreg free
  7579  001722  5007               	movf	?_tolower^0,w,c
  7580  001724  0100               	movlb	0	; () banked
  7581  001726  6FC4               	movwf	(vfpfcnvrt@ct+1)& (0+255),b
  7582  001728                     
  7583                           ; BSR set to: 0
  7584                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 760:             
      +                          if (ct[1]) {
  7585  001728  51C4               	movf	(vfpfcnvrt@ct+1)& (0+255),w,b
  7586  00172A  B4D8               	btfsc	status,2,c
  7587  00172C  EF9A  F00B         	goto	u6711
  7588  001730  EF9C  F00B         	goto	u6710
  7589  001734                     u6711:
  7590  001734  EFB5  F00B         	goto	l5632
  7591  001738                     u6710:
  7592  001738                     
  7593                           ; BSR set to: 0
  7594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 761:             
      +                              ct[2] = tolower((int)(*fmt)[2]);
  7595  001738  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7596  00173C  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7597  001740  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7598  001744  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7599  001748  0E02               	movlw	2
  7600  00174A  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7601  00174C  0E00               	movlw	0
  7602  00174E  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7603  001750  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7604  001754  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7605  001758                     	if	0	;tblptru may be non-zero
  7606  001758                     	endif
  7607  001758                     	if	0	;tblptru may be non-zero
  7608  001758                     	endif
  7609  001758  0008               	tblrd		*
  7610  00175A  50F5               	movf	tablat,w,c
  7611  00175C  6E07               	movwf	tolower@c^0,c
  7612  00175E  6A08               	clrf	(tolower@c+1)^0,c
  7613  001760  EC74  F028         	call	_tolower	;wreg free
  7614  001764  5007               	movf	?_tolower^0,w,c
  7615  001766  0100               	movlb	0	; () banked
  7616  001768  6FC5               	movwf	(vfpfcnvrt@ct+2)& (0+255),b
  7617  00176A                     l5632:
  7618                           
  7619                           ; BSR set to: 0
  7620                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 825:         if (
      +                          (*fmt[0] == 'd') || (*fmt[0] == 'i')) {
  7621  00176A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7622  00176E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7623  001772  CFDE FFF6          	movff	postinc2,tblptrl
  7624  001776  CFDD FFF7          	movff	postdec2,tblptrh
  7625  00177A                     	if	0	;tblptru may be non-zero
  7626  00177A                     	endif
  7627  00177A                     	if	0	;tblptru may be non-zero
  7628  00177A                     	endif
  7629  00177A  0008               	tblrd		*
  7630  00177C  50F5               	movf	tablat,w,c
  7631  00177E  0A64               	xorlw	100
  7632  001780  B4D8               	btfsc	status,2,c
  7633  001782  EFC5  F00B         	goto	u6721
  7634  001786  EFC7  F00B         	goto	u6720
  7635  00178A                     u6721:
  7636  00178A  EFD9  F00B         	goto	l5636
  7637  00178E                     u6720:
  7638  00178E                     
  7639                           ; BSR set to: 0
  7640  00178E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7641  001792  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7642  001796  CFDE FFF6          	movff	postinc2,tblptrl
  7643  00179A  CFDD FFF7          	movff	postdec2,tblptrh
  7644  00179E                     	if	0	;tblptru may be non-zero
  7645  00179E                     	endif
  7646  00179E                     	if	0	;tblptru may be non-zero
  7647  00179E                     	endif
  7648  00179E  0008               	tblrd		*
  7649  0017A0  50F5               	movf	tablat,w,c
  7650  0017A2  0A69               	xorlw	105
  7651  0017A4  A4D8               	btfss	status,2,c
  7652  0017A6  EFD7  F00B         	goto	u6731
  7653  0017AA  EFD9  F00B         	goto	u6730
  7654  0017AE                     u6731:
  7655  0017AE  EF19  F00C         	goto	l5642
  7656  0017B2                     u6730:
  7657  0017B2                     l5636:
  7658                           
  7659                           ; BSR set to: 0
  7660                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 827:             
      +                          ++*fmt;
  7661  0017B2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7662  0017B6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7663  0017BA  2ADE               	incf	postinc2,f,c
  7664  0017BC  0E00               	movlw	0
  7665  0017BE  22DD               	addwfc	postdec2,f,c
  7666                           
  7667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 828:             
      +                          ll = (long long)(*(int *)__va_arg(*(int **)ap, (int)0));
  7668  0017C0  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7669  0017C4  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7670  0017C8  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7671  0017CC  0E02               	movlw	2
  7672  0017CE  26DE               	addwf	postinc2,f,c
  7673  0017D0  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7674  0017D4  0E00               	movlw	0
  7675  0017D6  22DD               	addwfc	postdec2,f,c
  7676  0017D8  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7677  0017DC  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7678  0017E0  CFDE F0B1          	movff	postinc2,vfpfcnvrt@ll
  7679  0017E4  CFDD F0B2          	movff	postdec2,vfpfcnvrt@ll+1
  7680  0017E8  0E00               	movlw	0
  7681  0017EA  BFB2               	btfsc	(vfpfcnvrt@ll+1)& (0+255),7,b
  7682  0017EC  0EFF               	movlw	-1
  7683  0017EE  6FB3               	movwf	(vfpfcnvrt@ll+2)& (0+255),b
  7684  0017F0  6FB4               	movwf	(vfpfcnvrt@ll+3)& (0+255),b
  7685  0017F2  6FB5               	movwf	(vfpfcnvrt@ll+4)& (0+255),b
  7686  0017F4  6FB6               	movwf	(vfpfcnvrt@ll+5)& (0+255),b
  7687  0017F6  6FB7               	movwf	(vfpfcnvrt@ll+6)& (0+255),b
  7688  0017F8  6FB8               	movwf	(vfpfcnvrt@ll+7)& (0+255),b
  7689  0017FA                     
  7690                           ; BSR set to: 0
  7691                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 830:             
      +                          return dtoa(fp, ll);
  7692  0017FA  C0A7  F01C         	movff	vfpfcnvrt@fp,dtoa@fp
  7693  0017FE  C0A8  F01D         	movff	vfpfcnvrt@fp+1,dtoa@fp+1
  7694  001802  C0B1  F01E         	movff	vfpfcnvrt@ll,dtoa@d
  7695  001806  C0B2  F01F         	movff	vfpfcnvrt@ll+1,dtoa@d+1
  7696  00180A  C0B3  F020         	movff	vfpfcnvrt@ll+2,dtoa@d+2
  7697  00180E  C0B4  F021         	movff	vfpfcnvrt@ll+3,dtoa@d+3
  7698  001812  C0B5  F022         	movff	vfpfcnvrt@ll+4,dtoa@d+4
  7699  001816  C0B6  F023         	movff	vfpfcnvrt@ll+5,dtoa@d+5
  7700  00181A  C0B7  F024         	movff	vfpfcnvrt@ll+6,dtoa@d+6
  7701  00181E  C0B8  F025         	movff	vfpfcnvrt@ll+7,dtoa@d+7
  7702  001822  ECFE  F014         	call	_dtoa	;wreg free
  7703  001826  C01C  F0A7         	movff	?_dtoa,?_vfpfcnvrt
  7704  00182A  C01D  F0A8         	movff	?_dtoa+1,?_vfpfcnvrt+1
  7705  00182E  EF48  F00D         	goto	l1568
  7706  001832                     l5642:
  7707                           
  7708                           ; BSR set to: 0
  7709                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 920:         if (
      +                          ct[0] == 'f') {
  7710  001832  0E66               	movlw	102
  7711  001834  19C3               	xorwf	vfpfcnvrt@ct& (0+255),w,b
  7712  001836  A4D8               	btfss	status,2,c
  7713  001838  EF20  F00C         	goto	u6741
  7714  00183C  EF22  F00C         	goto	u6740
  7715  001840                     u6741:
  7716  001840  EF62  F00C         	goto	l5654
  7717  001844                     u6740:
  7718  001844                     
  7719                           ; BSR set to: 0
  7720                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 922:             
      +                          c = (*fmt)[0];
  7721  001844  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7722  001848  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7723  00184C  CFDE FFF6          	movff	postinc2,tblptrl
  7724  001850  CFDD FFF7          	movff	postdec2,tblptrh
  7725  001854                     	if	0	;tblptru may be non-zero
  7726  001854                     	endif
  7727  001854                     	if	0	;tblptru may be non-zero
  7728  001854                     	endif
  7729  001854  0008               	tblrd		*
  7730  001856  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7731  00185A                     
  7732                           ; BSR set to: 0
  7733                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 923:             
      +                          ++*fmt;
  7734  00185A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7735  00185E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7736  001862  2ADE               	incf	postinc2,f,c
  7737  001864  0E00               	movlw	0
  7738  001866  22DD               	addwfc	postdec2,f,c
  7739  001868                     
  7740                           ; BSR set to: 0
  7741                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 924:             
      +                          f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7742  001868  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7743  00186C  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7744  001870  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7745  001874  0E04               	movlw	4
  7746  001876  26DE               	addwf	postinc2,f,c
  7747  001878  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7748  00187C  0E00               	movlw	0
  7749  00187E  22DD               	addwfc	postdec2,f,c
  7750  001880  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7751  001884  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7752  001888  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7753  00188C  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7754  001890  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7755  001894  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7756  001898                     l5650:
  7757                           
  7758                           ; BSR set to: 0
  7759                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 926:             
      +                          return efgtoa(fp, f, c);
  7760  001898  C0A7  F058         	movff	vfpfcnvrt@fp,efgtoa@fp
  7761  00189C  C0A8  F059         	movff	vfpfcnvrt@fp+1,efgtoa@fp+1
  7762  0018A0  C0BF  F05A         	movff	vfpfcnvrt@f,efgtoa@f
  7763  0018A4  C0C0  F05B         	movff	vfpfcnvrt@f+1,efgtoa@f+1
  7764  0018A8  C0C1  F05C         	movff	vfpfcnvrt@f+2,efgtoa@f+2
  7765  0018AC  C0C2  F05D         	movff	vfpfcnvrt@f+3,efgtoa@f+3
  7766  0018B0  C0C6  F05E         	movff	vfpfcnvrt@c,efgtoa@c
  7767  0018B4  EC4F  F000         	call	_efgtoa	;wreg free
  7768  0018B8  C058  F0A7         	movff	?_efgtoa,?_vfpfcnvrt
  7769  0018BC  C059  F0A8         	movff	?_efgtoa+1,?_vfpfcnvrt+1
  7770  0018C0  EF48  F00D         	goto	l1568
  7771  0018C4                     l5654:
  7772                           
  7773                           ; BSR set to: 0
  7774                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 928:         if (
      +                          !strncmp(ct, "lf", ((sizeof("lf")/sizeof("lf"[0]))-1))) {
  7775  0018C4  0EC3               	movlw	low vfpfcnvrt@ct
  7776  0018C6  6E01               	movwf	strncmp@_l^0,c
  7777  0018C8  0E00               	movlw	high vfpfcnvrt@ct
  7778  0018CA  6E02               	movwf	(strncmp@_l+1)^0,c
  7779  0018CC  0EFB               	movlw	low STR_27
  7780  0018CE  6E03               	movwf	strncmp@_r^0,c
  7781  0018D0  0E7F               	movlw	high STR_27
  7782  0018D2  6E04               	movwf	(strncmp@_r+1)^0,c
  7783  0018D4  0E00               	movlw	0
  7784  0018D6  6E06               	movwf	(strncmp@n+1)^0,c
  7785  0018D8  0E02               	movlw	2
  7786  0018DA  6E05               	movwf	strncmp@n^0,c
  7787  0018DC  EC44  F023         	call	_strncmp	;wreg free
  7788  0018E0  5001               	movf	?_strncmp^0,w,c
  7789  0018E2  1002               	iorwf	(?_strncmp+1)^0,w,c
  7790  0018E4  A4D8               	btfss	status,2,c
  7791  0018E6  EF77  F00C         	goto	u6751
  7792  0018EA  EF79  F00C         	goto	u6750
  7793  0018EE                     u6751:
  7794  0018EE  EFF5  F00C         	goto	l5670
  7795  0018F2                     u6750:
  7796  0018F2                     
  7797                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 931:             
      +                          if ((0 ? isupper((int)(*fmt)[0]) : ((unsigned)((int)(*fmt)[0])-'A') < 26)) {
  7798  0018F2  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7799  0018F6  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7800  0018FA  CFDE F0AD          	movff	postinc2,??_vfpfcnvrt
  7801  0018FE  CFDD F0AE          	movff	postdec2,??_vfpfcnvrt+1
  7802  001902  0E01               	movlw	1
  7803  001904  0100               	movlb	0	; () banked
  7804  001906  27AD               	addwf	??_vfpfcnvrt& (0+255),f,b
  7805  001908  0E00               	movlw	0
  7806  00190A  23AE               	addwfc	(??_vfpfcnvrt+1)& (0+255),f,b
  7807  00190C  C0AD  FFF6         	movff	??_vfpfcnvrt,tblptrl
  7808  001910  C0AE  FFF7         	movff	??_vfpfcnvrt+1,tblptrh
  7809  001914                     	if	0	;tblptru may be non-zero
  7810  001914                     	endif
  7811  001914                     	if	0	;tblptru may be non-zero
  7812  001914                     	endif
  7813  001914  0008               	tblrd		*
  7814  001916  CFF5 F0C6          	movff	tablat,vfpfcnvrt@c
  7815  00191A  0EBF               	movlw	191
  7816  00191C  6FAD               	movwf	??_vfpfcnvrt& (0+255),b
  7817  00191E  0EFF               	movlw	255
  7818  001920  6FAE               	movwf	(??_vfpfcnvrt+1)& (0+255),b
  7819  001922  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7820  001926  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7821  00192A  CFDE FFF6          	movff	postinc2,tblptrl
  7822  00192E  CFDD FFF7          	movff	postdec2,tblptrh
  7823  001932                     	if	0	;tblptru may be non-zero
  7824  001932                     	endif
  7825  001932                     	if	0	;tblptru may be non-zero
  7826  001932                     	endif
  7827  001932  0008               	tblrd		*
  7828  001934  50F5               	movf	tablat,w,c
  7829  001936  6FAF               	movwf	(??_vfpfcnvrt+2)& (0+255),b
  7830  001938  6BB0               	clrf	(??_vfpfcnvrt+3)& (0+255),b
  7831  00193A  51AD               	movf	??_vfpfcnvrt& (0+255),w,b
  7832  00193C  27AF               	addwf	(??_vfpfcnvrt+2)& (0+255),f,b
  7833  00193E  51AE               	movf	(??_vfpfcnvrt+1)& (0+255),w,b
  7834  001940  23B0               	addwfc	(??_vfpfcnvrt+3)& (0+255),f,b
  7835  001942  51B0               	movf	(??_vfpfcnvrt+3)& (0+255),w,b
  7836  001944  E10A               	bnz	u6760
  7837  001946  0E1A               	movlw	26
  7838  001948  5DAF               	subwf	(??_vfpfcnvrt+2)& (0+255),w,b
  7839  00194A  A0D8               	btfss	status,0,c
  7840  00194C  EFAA  F00C         	goto	u6761
  7841  001950  EFAD  F00C         	goto	u6760
  7842  001954                     u6761:
  7843  001954  0E01               	movlw	1
  7844  001956  EFAE  F00C         	goto	u6770
  7845  00195A                     u6760:
  7846  00195A  0E00               	movlw	0
  7847  00195C                     u6770:
  7848  00195C  6FBD               	movwf	_vfpfcnvrt$3010& (0+255),b
  7849  00195E  6BBE               	clrf	(_vfpfcnvrt$3010+1)& (0+255),b
  7850  001960                     
  7851                           ; BSR set to: 0
  7852  001960  51BD               	movf	_vfpfcnvrt$3010& (0+255),w,b
  7853  001962  11BE               	iorwf	(_vfpfcnvrt$3010+1)& (0+255),w,b
  7854  001964  B4D8               	btfsc	status,2,c
  7855  001966  EFB7  F00C         	goto	u6781
  7856  00196A  EFB9  F00C         	goto	u6780
  7857  00196E                     u6781:
  7858  00196E  EFD3  F00C         	goto	l5664
  7859  001972                     u6780:
  7860  001972                     
  7861                           ; BSR set to: 0
  7862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 932:             
      +                              f = (*(long double *)__va_arg(*(long double **)ap, (long double)0));
  7863  001972  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7864  001976  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7865  00197A  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7866  00197E  0E04               	movlw	4
  7867  001980  26DE               	addwf	postinc2,f,c
  7868  001982  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7869  001986  0E00               	movlw	0
  7870  001988  22DD               	addwfc	postdec2,f,c
  7871  00198A  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7872  00198E  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7873  001992  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7874  001996  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7875  00199A  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7876  00199E  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7877                           
  7878                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 933:             
      +                          } else {
  7879  0019A2  EFEB  F00C         	goto	l1576
  7880  0019A6                     l5664:
  7881                           
  7882                           ; BSR set to: 0
  7883                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 934:             
      +                              f = (long double)(*(double *)__va_arg(*(double **)ap, (double)0));
  7884  0019A6  C0AB  FFD9         	movff	vfpfcnvrt@ap,fsr2l
  7885  0019AA  C0AC  FFDA         	movff	vfpfcnvrt@ap+1,fsr2h
  7886  0019AE  CFDF F0AD          	movff	indf2,??_vfpfcnvrt
  7887  0019B2  0E04               	movlw	4
  7888  0019B4  26DE               	addwf	postinc2,f,c
  7889  0019B6  CFDF F0AE          	movff	indf2,??_vfpfcnvrt+1
  7890  0019BA  0E00               	movlw	0
  7891  0019BC  22DD               	addwfc	postdec2,f,c
  7892  0019BE  C0AD  FFD9         	movff	??_vfpfcnvrt,fsr2l
  7893  0019C2  C0AE  FFDA         	movff	??_vfpfcnvrt+1,fsr2h
  7894  0019C6  CFDE F0BF          	movff	postinc2,vfpfcnvrt@f
  7895  0019CA  CFDE F0C0          	movff	postinc2,vfpfcnvrt@f+1
  7896  0019CE  CFDE F0C1          	movff	postinc2,vfpfcnvrt@f+2
  7897  0019D2  CFDE F0C2          	movff	postinc2,vfpfcnvrt@f+3
  7898  0019D6                     l1576:
  7899                           
  7900                           ; BSR set to: 0
  7901                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 936:             
      +                          *fmt += ((sizeof("lf")/sizeof("lf"[0]))-1);
  7902  0019D6  0E02               	movlw	2
  7903  0019D8  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7904  0019DC  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7905  0019E0  26DE               	addwf	postinc2,f,c
  7906  0019E2  0E00               	movlw	0
  7907  0019E4  22DD               	addwfc	postdec2,f,c
  7908  0019E6  EF4C  F00C         	goto	l5650
  7909  0019EA                     l5670:
  7910                           
  7911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1350:         if 
      +                          ((*fmt)[0] == '%') {
  7912  0019EA  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7913  0019EE  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7914  0019F2  CFDE FFF6          	movff	postinc2,tblptrl
  7915  0019F6  CFDD FFF7          	movff	postdec2,tblptrh
  7916  0019FA                     	if	0	;tblptru may be non-zero
  7917  0019FA                     	endif
  7918  0019FA                     	if	0	;tblptru may be non-zero
  7919  0019FA                     	endif
  7920  0019FA  0008               	tblrd		*
  7921  0019FC  50F5               	movf	tablat,w,c
  7922  0019FE  0A25               	xorlw	37
  7923  001A00  A4D8               	btfss	status,2,c
  7924  001A02  EF05  F00D         	goto	u6791
  7925  001A06  EF07  F00D         	goto	u6790
  7926  001A0A                     u6791:
  7927  001A0A  EF1F  F00D         	goto	l5680
  7928  001A0E                     u6790:
  7929  001A0E                     
  7930                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1351:            
      +                           ++*fmt;
  7931  001A0E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7932  001A12  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7933  001A16  2ADE               	incf	postinc2,f,c
  7934  001A18  0E00               	movlw	0
  7935  001A1A  22DD               	addwfc	postdec2,f,c
  7936  001A1C                     
  7937                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1352:            
      +                           fputc((int)'%', fp);
  7938  001A1C  0E00               	movlw	0
  7939  001A1E  6E02               	movwf	(fputc@c+1)^0,c
  7940  001A20  0E25               	movlw	37
  7941  001A22  6E01               	movwf	fputc@c^0,c
  7942  001A24  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7943  001A28  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7944  001A2C  EC16  F024         	call	_fputc	;wreg free
  7945  001A30                     l5676:
  7946                           
  7947                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1353:            
      +                           return 1;
  7948  001A30  0E00               	movlw	0
  7949  001A32  0100               	movlb	0	; () banked
  7950  001A34  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7951  001A36  0E01               	movlw	1
  7952  001A38  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7953  001A3A  EF48  F00D         	goto	l1568
  7954  001A3E                     l5680:
  7955                           
  7956                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1357:         ++*
      +                          fmt;
  7957  001A3E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7958  001A42  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7959  001A46  2ADE               	incf	postinc2,f,c
  7960  001A48  0E00               	movlw	0
  7961  001A4A  22DD               	addwfc	postdec2,f,c
  7962  001A4C                     
  7963                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1358:         ret
      +                          urn 0;
  7964  001A4C  0E00               	movlw	0
  7965  001A4E  0100               	movlb	0	; () banked
  7966  001A50  6FA8               	movwf	(?_vfpfcnvrt+1)& (0+255),b
  7967  001A52  0E00               	movlw	0
  7968  001A54  6FA7               	movwf	?_vfpfcnvrt& (0+255),b
  7969  001A56  EF48  F00D         	goto	l1568
  7970  001A5A                     l5686:
  7971                           
  7972                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1362:     fputc((
      +                          int)(*fmt)[0], fp);
  7973  001A5A  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7974  001A5E  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7975  001A62  CFDE FFF6          	movff	postinc2,tblptrl
  7976  001A66  CFDD FFF7          	movff	postdec2,tblptrh
  7977  001A6A                     	if	0	;tblptru may be non-zero
  7978  001A6A                     	endif
  7979  001A6A                     	if	0	;tblptru may be non-zero
  7980  001A6A                     	endif
  7981  001A6A  0008               	tblrd		*
  7982  001A6C  50F5               	movf	tablat,w,c
  7983  001A6E  6E01               	movwf	fputc@c^0,c
  7984  001A70  6A02               	clrf	(fputc@c+1)^0,c
  7985  001A72  C0A7  F003         	movff	vfpfcnvrt@fp,fputc@fp
  7986  001A76  C0A8  F004         	movff	vfpfcnvrt@fp+1,fputc@fp+1
  7987  001A7A  EC16  F024         	call	_fputc	;wreg free
  7988  001A7E                     
  7989                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 1363:     ++*fmt;
  7990  001A7E  C0A9  FFD9         	movff	vfpfcnvrt@fmt,fsr2l
  7991  001A82  C0AA  FFDA         	movff	vfpfcnvrt@fmt+1,fsr2h
  7992  001A86  2ADE               	incf	postinc2,f,c
  7993  001A88  0E00               	movlw	0
  7994  001A8A  22DD               	addwfc	postdec2,f,c
  7995  001A8C  EF18  F00D         	goto	l5676
  7996  001A90                     l1568:
  7997  001A90  0012               	return		;funcret
  7998  001A92                     __end_of_vfpfcnvrt:
  7999                           	callstack 0
  8000                           
  8001 ;; *************** function _strncmp *****************
  8002 ;; Defined at:
  8003 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strncmp.c"
  8004 ;; Parameters:    Size  Location     Type
  8005 ;;  _l              2    0[COMRAM] PTR const unsigned char 
  8006 ;;		 -> vfpfcnvrt@ct(3), 
  8007 ;;  _r              2    2[COMRAM] PTR const unsigned char 
  8008 ;;		 -> STR_29(3), 
  8009 ;;  n               2    4[COMRAM] unsigned int 
  8010 ;; Auto vars:     Size  Location     Type
  8011 ;;  r               2    9[COMRAM] PTR const unsigned char 
  8012 ;;		 -> STR_29(3), 
  8013 ;;  l               2    7[COMRAM] PTR const unsigned char 
  8014 ;;		 -> vfpfcnvrt@ct(3), 
  8015 ;; Return value:  Size  Location     Type
  8016 ;;                  2    0[COMRAM] int 
  8017 ;; Registers used:
  8018 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  8019 ;; Tracked objects:
  8020 ;;		On entry : 0/0
  8021 ;;		On exit  : 0/0
  8022 ;;		Unchanged: 0/0
  8023 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8024 ;;      Params:         6       0       0       0       0       0       0
  8025 ;;      Locals:         4       0       0       0       0       0       0
  8026 ;;      Temps:          1       0       0       0       0       0       0
  8027 ;;      Totals:        11       0       0       0       0       0       0
  8028 ;;Total ram usage:       11 bytes
  8029 ;; Hardware stack levels used:    1
  8030 ;; Hardware stack levels required when called:    1
  8031 ;; This function calls:
  8032 ;;		Nothing
  8033 ;; This function is called by:
  8034 ;;		_vfpfcnvrt
  8035 ;; This function uses a non-reentrant model
  8036 ;;
  8037                           
  8038                           	psect	text33
  8039  004688                     __ptext33:
  8040                           	callstack 0
  8041  004688                     _strncmp:
  8042                           	callstack 23
  8043  004688  C001  F008         	movff	strncmp@_l,strncmp@l
  8044  00468C  C002  F009         	movff	strncmp@_l+1,strncmp@l+1
  8045  004690  C003  F00A         	movff	strncmp@_r,strncmp@r
  8046  004694  C004  F00B         	movff	strncmp@_r+1,strncmp@r+1
  8047  004698  0605               	decf	strncmp@n^0,f,c
  8048  00469A  A0D8               	btfss	status,0,c
  8049  00469C  0606               	decf	(strncmp@n+1)^0,f,c
  8050  00469E  2805               	incf	strncmp@n^0,w,c
  8051  0046A0  E106               	bnz	u6341
  8052  0046A2  2806               	incf	(strncmp@n+1)^0,w,c
  8053  0046A4  A4D8               	btfss	status,2,c
  8054  0046A6  EF57  F023         	goto	u6341
  8055  0046AA  EF59  F023         	goto	u6340
  8056  0046AE                     u6341:
  8057  0046AE  EF66  F023         	goto	l5448
  8058  0046B2                     u6340:
  8059  0046B2  0E00               	movlw	0
  8060  0046B4  6E02               	movwf	(?_strncmp+1)^0,c
  8061  0046B6  0E00               	movlw	0
  8062  0046B8  6E01               	movwf	?_strncmp^0,c
  8063  0046BA  EFAE  F023         	goto	l1704
  8064  0046BE                     l5446:
  8065  0046BE  4A08               	infsnz	strncmp@l^0,f,c
  8066  0046C0  2A09               	incf	(strncmp@l+1)^0,f,c
  8067  0046C2  4A0A               	infsnz	strncmp@r^0,f,c
  8068  0046C4  2A0B               	incf	(strncmp@r+1)^0,f,c
  8069  0046C6  0605               	decf	strncmp@n^0,f,c
  8070  0046C8  A0D8               	btfss	status,0,c
  8071  0046CA  0606               	decf	(strncmp@n+1)^0,f,c
  8072  0046CC                     l5448:
  8073  0046CC  C008  FFD9         	movff	strncmp@l,fsr2l
  8074  0046D0  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8075  0046D4  50DF               	movf	indf2,w,c
  8076  0046D6  B4D8               	btfsc	status,2,c
  8077  0046D8  EF70  F023         	goto	u6351
  8078  0046DC  EF72  F023         	goto	u6350
  8079  0046E0                     u6351:
  8080  0046E0  EF9D  F023         	goto	l5456
  8081  0046E4                     u6350:
  8082  0046E4  C00A  FFF6         	movff	strncmp@r,tblptrl
  8083  0046E8  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8084  0046EC                     	if	0	;tblptru may be non-zero
  8085  0046EC                     	endif
  8086  0046EC                     	if	0	;tblptru may be non-zero
  8087  0046EC                     	endif
  8088  0046EC  0008               	tblrd		*
  8089  0046EE  50F5               	movf	tablat,w,c
  8090  0046F0  0900               	iorlw	0
  8091  0046F2  B4D8               	btfsc	status,2,c
  8092  0046F4  EF7E  F023         	goto	u6361
  8093  0046F8  EF80  F023         	goto	u6360
  8094  0046FC                     u6361:
  8095  0046FC  EF9D  F023         	goto	l5456
  8096  004700                     u6360:
  8097  004700  5005               	movf	strncmp@n^0,w,c
  8098  004702  1006               	iorwf	(strncmp@n+1)^0,w,c
  8099  004704  B4D8               	btfsc	status,2,c
  8100  004706  EF87  F023         	goto	u6371
  8101  00470A  EF89  F023         	goto	u6370
  8102  00470E                     u6371:
  8103  00470E  EF9D  F023         	goto	l5456
  8104  004712                     u6370:
  8105  004712  C008  FFD9         	movff	strncmp@l,fsr2l
  8106  004716  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8107  00471A  50DF               	movf	indf2,w,c
  8108  00471C  6E07               	movwf	??_strncmp^0,c
  8109  00471E  C00A  FFF6         	movff	strncmp@r,tblptrl
  8110  004722  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8111  004726                     	if	0	;tblptru may be non-zero
  8112  004726                     	endif
  8113  004726                     	if	0	;tblptru may be non-zero
  8114  004726                     	endif
  8115  004726  0008               	tblrd		*
  8116  004728  50F5               	movf	tablat,w,c
  8117  00472A  1807               	xorwf	??_strncmp^0,w,c
  8118  00472C  B4D8               	btfsc	status,2,c
  8119  00472E  EF9B  F023         	goto	u6381
  8120  004732  EF9D  F023         	goto	u6380
  8121  004736                     u6381:
  8122  004736  EF5F  F023         	goto	l5446
  8123  00473A                     u6380:
  8124  00473A                     l5456:
  8125  00473A  C008  FFD9         	movff	strncmp@l,fsr2l
  8126  00473E  C009  FFDA         	movff	strncmp@l+1,fsr2h
  8127  004742  50DF               	movf	indf2,w,c
  8128  004744  6E07               	movwf	??_strncmp^0,c
  8129  004746  C00A  FFF6         	movff	strncmp@r,tblptrl
  8130  00474A  C00B  FFF7         	movff	strncmp@r+1,tblptrh
  8131  00474E                     	if	0	;tblptru may be non-zero
  8132  00474E                     	endif
  8133  00474E                     	if	0	;tblptru may be non-zero
  8134  00474E                     	endif
  8135  00474E  0008               	tblrd		*
  8136  004750  50F5               	movf	tablat,w,c
  8137  004752  5C07               	subwf	??_strncmp^0,w,c
  8138  004754  6E01               	movwf	?_strncmp^0,c
  8139  004756  6A02               	clrf	(?_strncmp+1)^0,c
  8140  004758  A0D8               	btfss	status,0,c
  8141  00475A  0602               	decf	(?_strncmp+1)^0,f,c
  8142  00475C                     l1704:
  8143  00475C  0012               	return		;funcret
  8144  00475E                     __end_of_strncmp:
  8145                           	callstack 0
  8146                           
  8147 ;; *************** function _efgtoa *****************
  8148 ;; Defined at:
  8149 ;;		line 319 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
  8150 ;; Parameters:    Size  Location     Type
  8151 ;;  fp              2   87[COMRAM] PTR struct _IO_FILE
  8152 ;;		 -> sprintf@f(6), 
  8153 ;;  f               4   89[COMRAM] PTR struct _IO_FILE
  8154 ;;  c               1   93[COMRAM] unsigned char 
  8155 ;; Auto vars:     Size  Location     Type
  8156 ;;  u               4   67[BANK0 ] unsigned char 
  8157 ;;  g               4   59[BANK0 ] unsigned char 
  8158 ;;  l               4   53[BANK0 ] unsigned char 
  8159 ;;  h               4   49[BANK0 ] unsigned char 
  8160 ;;  ou              4   15[BANK0 ] unsigned char 
  8161 ;;  n               2   65[BANK0 ] int 
  8162 ;;  e               2   63[BANK0 ] int 
  8163 ;;  i               2   57[BANK0 ] int 
  8164 ;;  w               2   46[BANK0 ] int 
  8165 ;;  p               2   43[BANK0 ] int 
  8166 ;;  sign            2   41[BANK0 ] int 
  8167 ;;  d               2   39[BANK0 ] int 
  8168 ;;  ne              2   37[BANK0 ] int 
  8169 ;;  m               2   35[BANK0 ] int 
  8170 ;;  pp              2   33[BANK0 ] int 
  8171 ;;  t               2   31[BANK0 ] int 
  8172 ;;  mode            1   48[BANK0 ] unsigned char 
  8173 ;;  nmode           1   45[BANK0 ] unsigned char 
  8174 ;; Return value:  Size  Location     Type
  8175 ;;                  2   87[COMRAM] int 
  8176 ;; Registers used:
  8177 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  8178 ;; Tracked objects:
  8179 ;;		On entry : 0/0
  8180 ;;		On exit  : 0/0
  8181 ;;		Unchanged: 0/0
  8182 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  8183 ;;      Params:         7       0       0       0       0       0       0
  8184 ;;      Locals:         0      56       0       0       0       0       0
  8185 ;;      Temps:          0       5       0       0       0       0       0
  8186 ;;      Totals:         7      61       0       0       0       0       0
  8187 ;;Total ram usage:       68 bytes
  8188 ;; Hardware stack levels used:    1
  8189 ;; Hardware stack levels required when called:    5
  8190 ;; This function calls:
  8191 ;;		___awdiv
  8192 ;;		___awmod
  8193 ;;		___fladd
  8194 ;;		___fldiv
  8195 ;;		___fleq
  8196 ;;		___flge
  8197 ;;		___flmul
  8198 ;;		___flneg
  8199 ;;		___flsub
  8200 ;;		___fltol
  8201 ;;		___fpclassifyf
  8202 ;;		_floorf
  8203 ;;		_isupper
  8204 ;;		_pad
  8205 ;;		_strcpy
  8206 ;;		_tolower
  8207 ;; This function is called by:
  8208 ;;		_vfpfcnvrt
  8209 ;; This function uses a non-reentrant model
  8210 ;;
  8211                           
  8212                           	psect	text34
  8213  00009E                     __ptext34:
  8214                           	callstack 0
  8215  00009E                     _efgtoa:
  8216                           	callstack 19
  8217  00009E                     
  8218                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 319: static int e
      +                          fgtoa(FILE *fp, long double f, char c);C:\Program Files\Microchip\xc8\v2.20\pic\sources\
      +                          c99\common\doprnt.c: 320: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\
      +                          doprnt.c: 321:     char mode, nmode;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c9
      +                          9\common\doprnt.c: 322:     int d, e, i, m, n, ne, p, pp, sign, t, w;;C:\Program Files\M
      +                          icrochip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 323:     long double g, h, l, ou, u;
  8219  00009E  0E00               	movlw	0
  8220  0000A0  0100               	movlb	0	; () banked
  8221  0000A2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8222  0000A4  0E00               	movlw	0
  8223  0000A6  6F89               	movwf	efgtoa@sign& (0+255),b
  8224  0000A8                     
  8225                           ; BSR set to: 0
  8226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 327:     g = f;
  8227  0000A8  C05A  F09B         	movff	efgtoa@f,efgtoa@g
  8228  0000AC  C05B  F09C         	movff	efgtoa@f+1,efgtoa@g+1
  8229  0000B0  C05C  F09D         	movff	efgtoa@f+2,efgtoa@g+2
  8230  0000B4  C05D  F09E         	movff	efgtoa@f+3,efgtoa@g+3
  8231  0000B8                     
  8232                           ; BSR set to: 0
  8233                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 328:     if (g < 
      +                          0.0) {
  8234  0000B8  BF9E               	btfsc	(efgtoa@g+3)& (0+255),7,b
  8235  0000BA  EF63  F000         	goto	u5750
  8236  0000BE  EF61  F000         	goto	u5751
  8237  0000C2                     u5751:
  8238  0000C2  EF79  F000         	goto	l5110
  8239  0000C6                     u5750:
  8240  0000C6                     
  8241                           ; BSR set to: 0
  8242                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 329:         sign
      +                           = 1;
  8243  0000C6  0E00               	movlw	0
  8244  0000C8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  8245  0000CA  0E01               	movlw	1
  8246  0000CC  6F89               	movwf	efgtoa@sign& (0+255),b
  8247  0000CE                     
  8248                           ; BSR set to: 0
  8249                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 330:         g = 
      +                          -g;
  8250  0000CE  C09B  F001         	movff	efgtoa@g,___flneg@f1
  8251  0000D2  C09C  F002         	movff	efgtoa@g+1,___flneg@f1+1
  8252  0000D6  C09D  F003         	movff	efgtoa@g+2,___flneg@f1+2
  8253  0000DA  C09E  F004         	movff	efgtoa@g+3,___flneg@f1+3
  8254  0000DE  EC9F  F02A         	call	___flneg	;wreg free
  8255  0000E2  C001  F09B         	movff	?___flneg,efgtoa@g
  8256  0000E6  C002  F09C         	movff	?___flneg+1,efgtoa@g+1
  8257  0000EA  C003  F09D         	movff	?___flneg+2,efgtoa@g+2
  8258  0000EE  C004  F09E         	movff	?___flneg+3,efgtoa@g+3
  8259  0000F2                     l5110:
  8260                           
  8261                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 334:     n = 0;
  8262  0000F2  0E00               	movlw	0
  8263  0000F4  0100               	movlb	0	; () banked
  8264  0000F6  6FA2               	movwf	(efgtoa@n+1)& (0+255),b
  8265  0000F8  0E00               	movlw	0
  8266  0000FA  6FA1               	movwf	efgtoa@n& (0+255),b
  8267  0000FC                     
  8268                           ; BSR set to: 0
  8269                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 335:     w = widt
      +                          h;
  8270  0000FC  C1B1  F08E         	movff	_width,efgtoa@w
  8271  000100  C1B2  F08F         	movff	_width+1,efgtoa@w+1
  8272  000104                     
  8273                           ; BSR set to: 0
  8274                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 336:     if (sign
      +                           || (flags & (1 << 2))) {
  8275  000104  5189               	movf	efgtoa@sign& (0+255),w,b
  8276  000106  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8277  000108  A4D8               	btfss	status,2,c
  8278  00010A  EF89  F000         	goto	u5761
  8279  00010E  EF8B  F000         	goto	u5760
  8280  000112                     u5761:
  8281  000112  EF92  F000         	goto	l5118
  8282  000116                     u5760:
  8283  000116                     
  8284                           ; BSR set to: 0
  8285  000116  A5F8               	btfss	_flags& (0+255),2,b
  8286  000118  EF90  F000         	goto	u5771
  8287  00011C  EF92  F000         	goto	u5770
  8288  000120                     u5771:
  8289  000120  EFAC  F000         	goto	l5130
  8290  000124                     u5770:
  8291  000124                     l5118:
  8292                           
  8293                           ; BSR set to: 0
  8294                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 337:         dbuf
      +                          [n] = sign ? '-' : '+';
  8295  000124  5189               	movf	efgtoa@sign& (0+255),w,b
  8296  000126  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  8297  000128  A4D8               	btfss	status,2,c
  8298  00012A  EF99  F000         	goto	u5781
  8299  00012E  EF9B  F000         	goto	u5780
  8300  000132                     u5781:
  8301  000132  EFA1  F000         	goto	l5122
  8302  000136                     u5780:
  8303  000136                     
  8304                           ; BSR set to: 0
  8305  000136  0E00               	movlw	0
  8306  000138  6F74               	movwf	(_efgtoa$2979+1)& (0+255),b
  8307  00013A  0E2B               	movlw	43
  8308  00013C  6F73               	movwf	_efgtoa$2979& (0+255),b
  8309  00013E  EFA5  F000         	goto	l5124
  8310  000142                     l5122:
  8311                           
  8312                           ; BSR set to: 0
  8313  000142  0E00               	movlw	0
  8314  000144  6F74               	movwf	(_efgtoa$2979+1)& (0+255),b
  8315  000146  0E2D               	movlw	45
  8316  000148  6F73               	movwf	_efgtoa$2979& (0+255),b
  8317  00014A                     l5124:
  8318                           
  8319                           ; BSR set to: 0
  8320  00014A  C073  F260         	movff	_efgtoa$2979,_dbuf
  8321  00014E                     
  8322                           ; BSR set to: 0
  8323                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 338:         ++n;
  8324  00014E  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  8325  000150  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  8326  000152                     
  8327                           ; BSR set to: 0
  8328                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 339:         --w;
  8329  000152  078E               	decf	efgtoa@w& (0+255),f,b
  8330  000154  A0D8               	btfss	status,0,c
  8331  000156  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  8332  000158                     l5130:
  8333                           
  8334                           ; BSR set to: 0
  8335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 344:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8336  000158  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8337  00015C  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8338  000160  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8339  000164  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8340  000168  EC5A  F022         	call	___fpclassifyf	;wreg free
  8341  00016C  0401               	decf	?___fpclassifyf^0,w,c
  8342  00016E  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8343  000170  A4D8               	btfss	status,2,c
  8344  000172  EFBD  F000         	goto	u5791
  8345  000176  EFBF  F000         	goto	u5790
  8346  00017A                     u5791:
  8347  00017A  EF16  F001         	goto	l5148
  8348  00017E                     u5790:
  8349  00017E  0EBF               	movlw	191
  8350  000180  0100               	movlb	0	; () banked
  8351  000182  6F6A               	movwf	??_efgtoa& (0+255),b
  8352  000184  0EFF               	movlw	255
  8353  000186  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8354  000188  505E               	movf	efgtoa@c^0,w,c
  8355  00018A  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8356  00018C  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8357  00018E  516A               	movf	??_efgtoa& (0+255),w,b
  8358  000190  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8359  000192  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8360  000194  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8361  000196  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8362  000198  E10A               	bnz	u5800
  8363  00019A  0E1A               	movlw	26
  8364  00019C  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8365  00019E  A0D8               	btfss	status,0,c
  8366  0001A0  EFD4  F000         	goto	u5801
  8367  0001A4  EFD7  F000         	goto	u5800
  8368  0001A8                     u5801:
  8369  0001A8  0E01               	movlw	1
  8370  0001AA  EFD8  F000         	goto	u5810
  8371  0001AE                     u5800:
  8372  0001AE  0E00               	movlw	0
  8373  0001B0                     u5810:
  8374  0001B0  6F75               	movwf	_efgtoa$2980& (0+255),b
  8375  0001B2  6B76               	clrf	(_efgtoa$2980+1)& (0+255),b
  8376  0001B4                     
  8377                           ; BSR set to: 0
  8378  0001B4  5175               	movf	_efgtoa$2980& (0+255),w,b
  8379  0001B6  1176               	iorwf	(_efgtoa$2980+1)& (0+255),w,b
  8380  0001B8  B4D8               	btfsc	status,2,c
  8381  0001BA  EFE1  F000         	goto	u5821
  8382  0001BE  EFE3  F000         	goto	u5820
  8383  0001C2                     u5821:
  8384  0001C2  EFF1  F000         	goto	l5140
  8385  0001C6                     u5820:
  8386  0001C6                     
  8387                           ; BSR set to: 0
  8388                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 345:             
      +                          strcpy(&dbuf[n], "INF");
  8389  0001C6  0E60               	movlw	low _dbuf
  8390  0001C8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8391  0001CA  6E01               	movwf	strcpy@dest^0,c
  8392  0001CC  0E02               	movlw	high _dbuf
  8393  0001CE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8394  0001D0  6E02               	movwf	(strcpy@dest+1)^0,c
  8395  0001D2  0EEB               	movlw	low STR_19
  8396  0001D4  6E03               	movwf	strcpy@src^0,c
  8397  0001D6  0E7F               	movlw	high STR_19
  8398  0001D8  6E04               	movwf	(strcpy@src+1)^0,c
  8399  0001DA  ECA4  F028         	call	_strcpy	;wreg free
  8400                           
  8401                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 346:         } el
      +                          se {
  8402  0001DE  EFFD  F000         	goto	l5142
  8403  0001E2                     l5140:
  8404                           
  8405                           ; BSR set to: 0
  8406                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 347:             
      +                          strcpy(&dbuf[n], "inf");
  8407  0001E2  0E60               	movlw	low _dbuf
  8408  0001E4  25A1               	addwf	efgtoa@n& (0+255),w,b
  8409  0001E6  6E01               	movwf	strcpy@dest^0,c
  8410  0001E8  0E02               	movlw	high _dbuf
  8411  0001EA  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8412  0001EC  6E02               	movwf	(strcpy@dest+1)^0,c
  8413  0001EE  0EF3               	movlw	low STR_20
  8414  0001F0  6E03               	movwf	strcpy@src^0,c
  8415  0001F2  0E7F               	movlw	high STR_20
  8416  0001F4  6E04               	movwf	(strcpy@src+1)^0,c
  8417  0001F6  ECA4  F028         	call	_strcpy	;wreg free
  8418  0001FA                     l5142:
  8419                           
  8420                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 349:         w -=
      +                           ((sizeof("inf")/sizeof("inf"[0]))-1);
  8421  0001FA  0100               	movlb	0	; () banked
  8422  0001FC  0EFD               	movlw	253
  8423  0001FE  278E               	addwf	efgtoa@w& (0+255),f,b
  8424  000200  0EFF               	movlw	255
  8425  000202  238F               	addwfc	(efgtoa@w+1)& (0+255),f,b
  8426  000204                     l5144:
  8427                           
  8428                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 350:         retu
      +                          rn pad(fp, &dbuf[0], w);
  8429  000204  C058  F011         	movff	efgtoa@fp,pad@fp
  8430  000208  C059  F012         	movff	efgtoa@fp+1,pad@fp+1
  8431  00020C  0E60               	movlw	low _dbuf
  8432  00020E  6E13               	movwf	pad@buf^0,c
  8433  000210  0E02               	movlw	high _dbuf
  8434  000212  6E14               	movwf	(pad@buf+1)^0,c
  8435  000214  C08E  F015         	movff	efgtoa@w,pad@p
  8436  000218  C08F  F016         	movff	efgtoa@w+1,pad@p+1
  8437  00021C  EC7B  F024         	call	_pad	;wreg free
  8438  000220  C011  F058         	movff	?_pad,?_efgtoa
  8439  000224  C012  F059         	movff	?_pad+1,?_efgtoa+1
  8440  000228  EF26  F006         	goto	l1466
  8441  00022C                     l5148:
  8442                           
  8443                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 353:         if (
      +                          (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26)) {
  8444  00022C  C09B  F001         	movff	efgtoa@g,___fpclassifyf@x
  8445  000230  C09C  F002         	movff	efgtoa@g+1,___fpclassifyf@x+1
  8446  000234  C09D  F003         	movff	efgtoa@g+2,___fpclassifyf@x+2
  8447  000238  C09E  F004         	movff	efgtoa@g+3,___fpclassifyf@x+3
  8448  00023C  EC5A  F022         	call	___fpclassifyf	;wreg free
  8449  000240  5001               	movf	?___fpclassifyf^0,w,c
  8450  000242  1002               	iorwf	(?___fpclassifyf+1)^0,w,c
  8451  000244  A4D8               	btfss	status,2,c
  8452  000246  EF27  F001         	goto	u5831
  8453  00024A  EF29  F001         	goto	u5830
  8454  00024E                     u5831:
  8455  00024E  EF69  F001         	goto	l5166
  8456  000252                     u5830:
  8457  000252  0EBF               	movlw	191
  8458  000254  0100               	movlb	0	; () banked
  8459  000256  6F6A               	movwf	??_efgtoa& (0+255),b
  8460  000258  0EFF               	movlw	255
  8461  00025A  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8462  00025C  505E               	movf	efgtoa@c^0,w,c
  8463  00025E  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  8464  000260  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  8465  000262  516A               	movf	??_efgtoa& (0+255),w,b
  8466  000264  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8467  000266  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8468  000268  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8469  00026A  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8470  00026C  E10A               	bnz	u5840
  8471  00026E  0E1A               	movlw	26
  8472  000270  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8473  000272  A0D8               	btfss	status,0,c
  8474  000274  EF3E  F001         	goto	u5841
  8475  000278  EF41  F001         	goto	u5840
  8476  00027C                     u5841:
  8477  00027C  0E01               	movlw	1
  8478  00027E  EF42  F001         	goto	u5850
  8479  000282                     u5840:
  8480  000282  0E00               	movlw	0
  8481  000284                     u5850:
  8482  000284  6F77               	movwf	_efgtoa$2984& (0+255),b
  8483  000286  6B78               	clrf	(_efgtoa$2984+1)& (0+255),b
  8484  000288                     
  8485                           ; BSR set to: 0
  8486  000288  5177               	movf	_efgtoa$2984& (0+255),w,b
  8487  00028A  1178               	iorwf	(_efgtoa$2984+1)& (0+255),w,b
  8488  00028C  B4D8               	btfsc	status,2,c
  8489  00028E  EF4B  F001         	goto	u5861
  8490  000292  EF4D  F001         	goto	u5860
  8491  000296                     u5861:
  8492  000296  EF5B  F001         	goto	l5158
  8493  00029A                     u5860:
  8494  00029A                     
  8495                           ; BSR set to: 0
  8496                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 354:             
      +                          strcpy(&dbuf[n], "NAN");
  8497  00029A  0E60               	movlw	low _dbuf
  8498  00029C  25A1               	addwf	efgtoa@n& (0+255),w,b
  8499  00029E  6E01               	movwf	strcpy@dest^0,c
  8500  0002A0  0E02               	movlw	high _dbuf
  8501  0002A2  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8502  0002A4  6E02               	movwf	(strcpy@dest+1)^0,c
  8503  0002A6  0EEF               	movlw	low STR_23
  8504  0002A8  6E03               	movwf	strcpy@src^0,c
  8505  0002AA  0E7F               	movlw	high STR_23
  8506  0002AC  6E04               	movwf	(strcpy@src+1)^0,c
  8507  0002AE  ECA4  F028         	call	_strcpy	;wreg free
  8508                           
  8509                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 355:         } el
      +                          se {
  8510  0002B2  EFFD  F000         	goto	l5142
  8511  0002B6                     l5158:
  8512                           
  8513                           ; BSR set to: 0
  8514                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 356:             
      +                          strcpy(&dbuf[n], "nan");
  8515  0002B6  0E60               	movlw	low _dbuf
  8516  0002B8  25A1               	addwf	efgtoa@n& (0+255),w,b
  8517  0002BA  6E01               	movwf	strcpy@dest^0,c
  8518  0002BC  0E02               	movlw	high _dbuf
  8519  0002BE  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  8520  0002C0  6E02               	movwf	(strcpy@dest+1)^0,c
  8521  0002C2  0EF7               	movlw	low STR_24
  8522  0002C4  6E03               	movwf	strcpy@src^0,c
  8523  0002C6  0E7F               	movlw	high STR_24
  8524  0002C8  6E04               	movwf	(strcpy@src+1)^0,c
  8525  0002CA  ECA4  F028         	call	_strcpy	;wreg free
  8526  0002CE  EFFD  F000         	goto	l5142
  8527  0002D2                     l5166:
  8528                           
  8529                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 363:     u = 1.0;
  8530  0002D2  0E00               	movlw	0
  8531  0002D4  0100               	movlb	0	; () banked
  8532  0002D6  6FA3               	movwf	efgtoa@u& (0+255),b
  8533  0002D8  0E00               	movlw	0
  8534  0002DA  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8535  0002DC  0E80               	movlw	128
  8536  0002DE  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8537  0002E0  0E3F               	movlw	63
  8538  0002E2  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8539                           
  8540                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 364:     e = 0;
  8541  0002E4  0E00               	movlw	0
  8542  0002E6  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8543  0002E8  0E00               	movlw	0
  8544  0002EA  6F9F               	movwf	efgtoa@e& (0+255),b
  8545  0002EC                     
  8546                           ; BSR set to: 0
  8547                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 365:     if (!(g 
      +                          == 0.0)) {
  8548  0002EC  C09B  F001         	movff	efgtoa@g,___fleq@ff1
  8549  0002F0  C09C  F002         	movff	efgtoa@g+1,___fleq@ff1+1
  8550  0002F4  C09D  F003         	movff	efgtoa@g+2,___fleq@ff1+2
  8551  0002F8  C09E  F004         	movff	efgtoa@g+3,___fleq@ff1+3
  8552  0002FC  0E00               	movlw	0
  8553  0002FE  6E05               	movwf	___fleq@ff2^0,c
  8554  000300  0E00               	movlw	0
  8555  000302  6E06               	movwf	(___fleq@ff2+1)^0,c
  8556  000304  0E00               	movlw	0
  8557  000306  6E07               	movwf	(___fleq@ff2+2)^0,c
  8558  000308  0E00               	movlw	0
  8559  00030A  6E08               	movwf	(___fleq@ff2+3)^0,c
  8560  00030C  ECF1  F025         	call	___fleq	;wreg free
  8561  000310  B0D8               	btfsc	status,0,c
  8562  000312  EF8D  F001         	goto	u5871
  8563  000316  EF8F  F001         	goto	u5870
  8564  00031A                     u5871:
  8565  00031A  EF12  F002         	goto	l5184
  8566  00031E                     u5870:
  8567  00031E  EFAE  F001         	goto	l5176
  8568  000322                     l5172:
  8569                           
  8570                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 367:             
      +                          u = u*10.0;
  8571  000322  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8572  000326  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8573  00032A  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8574  00032E  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8575  000332  0E00               	movlw	0
  8576  000334  6E20               	movwf	___flmul@a^0,c
  8577  000336  0E00               	movlw	0
  8578  000338  6E21               	movwf	(___flmul@a+1)^0,c
  8579  00033A  0E20               	movlw	32
  8580  00033C  6E22               	movwf	(___flmul@a+2)^0,c
  8581  00033E  0E41               	movlw	65
  8582  000340  6E23               	movwf	(___flmul@a+3)^0,c
  8583  000342  ECA9  F00F         	call	___flmul	;wreg free
  8584  000346  C01C  F0A3         	movff	?___flmul,efgtoa@u
  8585  00034A  C01D  F0A4         	movff	?___flmul+1,efgtoa@u+1
  8586  00034E  C01E  F0A5         	movff	?___flmul+2,efgtoa@u+2
  8587  000352  C01F  F0A6         	movff	?___flmul+3,efgtoa@u+3
  8588  000356                     
  8589                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 368:             
      +                          ++e;
  8590  000356  0100               	movlb	0	; () banked
  8591  000358  4B9F               	infsnz	efgtoa@e& (0+255),f,b
  8592  00035A  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  8593  00035C                     l5176:
  8594                           
  8595                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 366:         whil
      +                          e (!(g < (u*10.0))) {
  8596  00035C  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8597  000360  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8598  000364  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8599  000368  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8600  00036C  0E00               	movlw	0
  8601  00036E  6E20               	movwf	___flmul@a^0,c
  8602  000370  0E00               	movlw	0
  8603  000372  6E21               	movwf	(___flmul@a+1)^0,c
  8604  000374  0E20               	movlw	32
  8605  000376  6E22               	movwf	(___flmul@a+2)^0,c
  8606  000378  0E41               	movlw	65
  8607  00037A  6E23               	movwf	(___flmul@a+3)^0,c
  8608  00037C  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  8609  000380  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  8610  000384  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  8611  000388  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  8612  00038C  ECA9  F00F         	call	___flmul	;wreg free
  8613  000390  C01C  F039         	movff	?___flmul,___flge@ff2
  8614  000394  C01D  F03A         	movff	?___flmul+1,___flge@ff2+1
  8615  000398  C01E  F03B         	movff	?___flmul+2,___flge@ff2+2
  8616  00039C  C01F  F03C         	movff	?___flmul+3,___flge@ff2+3
  8617  0003A0  ECD8  F021         	call	___flge	;wreg free
  8618  0003A4  B0D8               	btfsc	status,0,c
  8619  0003A6  EFD7  F001         	goto	u5881
  8620  0003AA  EFD9  F001         	goto	u5880
  8621  0003AE                     u5881:
  8622  0003AE  EF91  F001         	goto	l5172
  8623  0003B2                     u5880:
  8624  0003B2  EFF9  F001         	goto	l5182
  8625  0003B6                     l5178:
  8626                           
  8627                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 371:             
      +                          u = u/10.0;
  8628  0003B6  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8629  0003BA  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  8630  0003BE  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  8631  0003C2  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  8632  0003C6  0E00               	movlw	0
  8633  0003C8  6E39               	movwf	___fldiv@a^0,c
  8634  0003CA  0E00               	movlw	0
  8635  0003CC  6E3A               	movwf	(___fldiv@a+1)^0,c
  8636  0003CE  0E20               	movlw	32
  8637  0003D0  6E3B               	movwf	(___fldiv@a+2)^0,c
  8638  0003D2  0E41               	movlw	65
  8639  0003D4  6E3C               	movwf	(___fldiv@a+3)^0,c
  8640  0003D6  ECBE  F011         	call	___fldiv	;wreg free
  8641  0003DA  C035  F0A3         	movff	?___fldiv,efgtoa@u
  8642  0003DE  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  8643  0003E2  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  8644  0003E6  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  8645  0003EA                     
  8646                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 372:             
      +                          --e;
  8647  0003EA  0100               	movlb	0	; () banked
  8648  0003EC  079F               	decf	efgtoa@e& (0+255),f,b
  8649  0003EE  A0D8               	btfss	status,0,c
  8650  0003F0  07A0               	decf	(efgtoa@e+1)& (0+255),f,b
  8651  0003F2                     l5182:
  8652                           
  8653                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 370:         whil
      +                          e (g < u) {
  8654  0003F2  C09B  F035         	movff	efgtoa@g,___flge@ff1
  8655  0003F6  C09C  F036         	movff	efgtoa@g+1,___flge@ff1+1
  8656  0003FA  C09D  F037         	movff	efgtoa@g+2,___flge@ff1+2
  8657  0003FE  C09E  F038         	movff	efgtoa@g+3,___flge@ff1+3
  8658  000402  C0A3  F039         	movff	efgtoa@u,___flge@ff2
  8659  000406  C0A4  F03A         	movff	efgtoa@u+1,___flge@ff2+1
  8660  00040A  C0A5  F03B         	movff	efgtoa@u+2,___flge@ff2+2
  8661  00040E  C0A6  F03C         	movff	efgtoa@u+3,___flge@ff2+3
  8662  000412  ECD8  F021         	call	___flge	;wreg free
  8663  000416  A0D8               	btfss	status,0,c
  8664  000418  EF10  F002         	goto	u5891
  8665  00041C  EF12  F002         	goto	u5890
  8666  000420                     u5891:
  8667  000420  EFDB  F001         	goto	l5178
  8668  000424                     u5890:
  8669  000424                     l5184:
  8670                           
  8671                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 377:     mode = t
      +                          olower((int)c);
  8672  000424  C05E  F007         	movff	efgtoa@c,tolower@c
  8673  000428  6A08               	clrf	(tolower@c+1)^0,c
  8674  00042A  EC74  F028         	call	_tolower	;wreg free
  8675  00042E  5007               	movf	?_tolower^0,w,c
  8676  000430  0100               	movlb	0	; () banked
  8677  000432  6F90               	movwf	efgtoa@mode& (0+255),b
  8678  000434                     
  8679                           ; BSR set to: 0
  8680                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 378:     nmode = 
      +                          mode;
  8681  000434  C090  F08D         	movff	efgtoa@mode,efgtoa@nmode
  8682  000438                     
  8683                           ; BSR set to: 0
  8684                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 379:     if (mode
      +                           == 'g') {
  8685  000438  0E67               	movlw	103
  8686  00043A  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8687  00043C  A4D8               	btfss	status,2,c
  8688  00043E  EF23  F002         	goto	u5901
  8689  000442  EF25  F002         	goto	u5900
  8690  000446                     u5901:
  8691  000446  EF4B  F002         	goto	l5198
  8692  00044A                     u5900:
  8693  00044A                     
  8694                           ; BSR set to: 0
  8695                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 380:   if (prec =
      +                          = 0) {
  8696  00044A  51F6               	movf	_prec& (0+255),w,b
  8697  00044C  11F7               	iorwf	(_prec+1)& (0+255),w,b
  8698  00044E  A4D8               	btfss	status,2,c
  8699  000450  EF2C  F002         	goto	u5911
  8700  000454  EF2E  F002         	goto	u5910
  8701  000458                     u5911:
  8702  000458  EF32  F002         	goto	l5194
  8703  00045C                     u5910:
  8704  00045C                     
  8705                           ; BSR set to: 0
  8706                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 381:    prec = 1;
  8707  00045C  0E00               	movlw	0
  8708  00045E  6FF7               	movwf	(_prec+1)& (0+255),b
  8709  000460  0E01               	movlw	1
  8710  000462  6FF6               	movwf	_prec& (0+255),b
  8711  000464                     l5194:
  8712                           
  8713                           ; BSR set to: 0
  8714                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 383:         p = 
      +                          (0 < prec) ? prec : 6;
  8715  000464  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8716  000466  EF3F  F002         	goto	u5920
  8717  00046A  51F7               	movf	(_prec+1)& (0+255),w,b
  8718  00046C  E106               	bnz	u5921
  8719  00046E  05F6               	decf	_prec& (0+255),w,b
  8720  000470  B0D8               	btfsc	status,0,c
  8721  000472  EF3D  F002         	goto	u5921
  8722  000476  EF3F  F002         	goto	u5920
  8723  00047A                     u5921:
  8724  00047A  EF45  F002         	goto	l1484
  8725  00047E                     u5920:
  8726  00047E                     l5196:
  8727                           
  8728                           ; BSR set to: 0
  8729  00047E  0E00               	movlw	0
  8730  000480  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  8731  000482  0E06               	movlw	6
  8732  000484  6F8B               	movwf	efgtoa@p& (0+255),b
  8733  000486  EF54  F002         	goto	l5204
  8734  00048A                     l1484:
  8735                           
  8736                           ; BSR set to: 0
  8737  00048A  C0F6  F08B         	movff	_prec,efgtoa@p
  8738  00048E  C0F7  F08C         	movff	_prec+1,efgtoa@p+1
  8739  000492  EF54  F002         	goto	l5204
  8740  000496                     l5198:
  8741                           
  8742                           ; BSR set to: 0
  8743                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 385:         p = 
      +                          (prec < 0) ? 6 : prec;
  8744  000496  BFF7               	btfsc	(_prec+1)& (0+255),7,b
  8745  000498  EF50  F002         	goto	u5931
  8746  00049C  EF52  F002         	goto	u5930
  8747  0004A0                     u5931:
  8748  0004A0  EF3F  F002         	goto	l5196
  8749  0004A4                     u5930:
  8750  0004A4  EF45  F002         	goto	l1484
  8751  0004A8                     l5204:
  8752                           
  8753                           ; BSR set to: 0
  8754                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 389:     if (mode
      +                           == 'g') {
  8755  0004A8  0E67               	movlw	103
  8756  0004AA  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8757  0004AC  A4D8               	btfss	status,2,c
  8758  0004AE  EF5B  F002         	goto	u5941
  8759  0004B2  EF5D  F002         	goto	u5940
  8760  0004B6                     u5941:
  8761  0004B6  EF8C  F002         	goto	l5214
  8762  0004BA                     u5940:
  8763  0004BA                     
  8764                           ; BSR set to: 0
  8765                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 390:         if (
      +                          !(e < -4) && !((p - 1) < e)) {
  8766  0004BA  AFA0               	btfss	(efgtoa@e+1)& (0+255),7,b
  8767  0004BC  EF6B  F002         	goto	u5950
  8768  0004C0  0EFC               	movlw	252
  8769  0004C2  5D9F               	subwf	efgtoa@e& (0+255),w,b
  8770  0004C4  0EFF               	movlw	255
  8771  0004C6  59A0               	subwfb	(efgtoa@e+1)& (0+255),w,b
  8772  0004C8  A0D8               	btfss	status,0,c
  8773  0004CA  EF69  F002         	goto	u5951
  8774  0004CE  EF6B  F002         	goto	u5950
  8775  0004D2                     u5951:
  8776  0004D2  EF8A  F002         	goto	l5212
  8777  0004D6                     u5950:
  8778  0004D6                     
  8779                           ; BSR set to: 0
  8780  0004D6  0EFF               	movlw	255
  8781  0004D8  6F6A               	movwf	??_efgtoa& (0+255),b
  8782  0004DA  0EFF               	movlw	255
  8783  0004DC  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  8784  0004DE  C08B  F06C         	movff	efgtoa@p,??_efgtoa+2
  8785  0004E2  C08C  F06D         	movff	efgtoa@p+1,??_efgtoa+3
  8786  0004E6  516A               	movf	??_efgtoa& (0+255),w,b
  8787  0004E8  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  8788  0004EA  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  8789  0004EC  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  8790  0004EE  519F               	movf	efgtoa@e& (0+255),w,b
  8791  0004F0  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  8792  0004F2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  8793  0004F4  0A80               	xorlw	128
  8794  0004F6  6F6E               	movwf	(??_efgtoa+4)& (0+255),b
  8795  0004F8  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8796  0004FA  0A80               	xorlw	128
  8797  0004FC  596E               	subwfb	(??_efgtoa+4)& (0+255),w,b
  8798  0004FE  A0D8               	btfss	status,0,c
  8799  000500  EF84  F002         	goto	u5961
  8800  000504  EF86  F002         	goto	u5960
  8801  000508                     u5961:
  8802  000508  EF8A  F002         	goto	l5212
  8803  00050C                     u5960:
  8804  00050C                     
  8805                           ; BSR set to: 0
  8806                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 391:             
      +                          nmode = 'f';
  8807  00050C  0E66               	movlw	102
  8808  00050E  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8809                           
  8810                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 392:         } el
      +                          se {
  8811  000510  EF8C  F002         	goto	l5214
  8812  000514                     l5212:
  8813                           
  8814                           ; BSR set to: 0
  8815                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 393:             
      +                          nmode = 'e';
  8816  000514  0E65               	movlw	101
  8817  000516  6F8D               	movwf	efgtoa@nmode& (0+255),b
  8818  000518                     l5214:
  8819                           
  8820                           ; BSR set to: 0
  8821                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 398:     m = p;
  8822  000518  C08B  F083         	movff	efgtoa@p,efgtoa@m
  8823  00051C  C08C  F084         	movff	efgtoa@p+1,efgtoa@m+1
  8824  000520                     
  8825                           ; BSR set to: 0
  8826                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 399:     if (!(mo
      +                          de == 'g') || ((nmode == 'f') && (e < 0))) {
  8827  000520  0E67               	movlw	103
  8828  000522  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8829  000524  A4D8               	btfss	status,2,c
  8830  000526  EF97  F002         	goto	u5971
  8831  00052A  EF99  F002         	goto	u5970
  8832  00052E                     u5971:
  8833  00052E  EFA9  F002         	goto	l5222
  8834  000532                     u5970:
  8835  000532                     
  8836                           ; BSR set to: 0
  8837  000532  0E66               	movlw	102
  8838  000534  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8839  000536  A4D8               	btfss	status,2,c
  8840  000538  EFA0  F002         	goto	u5981
  8841  00053C  EFA2  F002         	goto	u5980
  8842  000540                     u5981:
  8843  000540  EFAB  F002         	goto	l5224
  8844  000544                     u5980:
  8845  000544                     
  8846                           ; BSR set to: 0
  8847  000544  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8848  000546  EFA9  F002         	goto	u5990
  8849  00054A  EFA7  F002         	goto	u5991
  8850  00054E                     u5991:
  8851  00054E  EFAB  F002         	goto	l5224
  8852  000552                     u5990:
  8853  000552                     l5222:
  8854                           
  8855                           ; BSR set to: 0
  8856                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 400:         ++m;
  8857  000552  4B83               	infsnz	efgtoa@m& (0+255),f,b
  8858  000554  2B84               	incf	(efgtoa@m+1)& (0+255),f,b
  8859  000556                     l5224:
  8860                           
  8861                           ; BSR set to: 0
  8862                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 404:     if (nmod
      +                          e == 'f') {
  8863  000556  0E66               	movlw	102
  8864  000558  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  8865  00055A  A4D8               	btfss	status,2,c
  8866  00055C  EFB2  F002         	goto	u6001
  8867  000560  EFB4  F002         	goto	u6000
  8868  000564                     u6001:
  8869  000564  EFD4  F002         	goto	l5234
  8870  000568                     u6000:
  8871  000568                     
  8872                           ; BSR set to: 0
  8873                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 405:         if (
      +                          e < 0) {
  8874  000568  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  8875  00056A  EFBB  F002         	goto	u6010
  8876  00056E  EFB9  F002         	goto	u6011
  8877  000572                     u6011:
  8878  000572  EFC7  F002         	goto	l5230
  8879  000576                     u6010:
  8880  000576                     
  8881                           ; BSR set to: 0
  8882                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 406:             
      +                          u = 1.0;
  8883  000576  0E00               	movlw	0
  8884  000578  6FA3               	movwf	efgtoa@u& (0+255),b
  8885  00057A  0E00               	movlw	0
  8886  00057C  6FA4               	movwf	(efgtoa@u+1)& (0+255),b
  8887  00057E  0E80               	movlw	128
  8888  000580  6FA5               	movwf	(efgtoa@u+2)& (0+255),b
  8889  000582  0E3F               	movlw	63
  8890  000584  6FA6               	movwf	(efgtoa@u+3)& (0+255),b
  8891                           
  8892                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 407:             
      +                          e = 0;
  8893  000586  0E00               	movlw	0
  8894  000588  6FA0               	movwf	(efgtoa@e+1)& (0+255),b
  8895  00058A  0E00               	movlw	0
  8896  00058C  6F9F               	movwf	efgtoa@e& (0+255),b
  8897  00058E                     l5230:
  8898                           
  8899                           ; BSR set to: 0
  8900                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 409:         if (
      +                          !(mode == 'g')) {
  8901  00058E  0E67               	movlw	103
  8902  000590  1990               	xorwf	efgtoa@mode& (0+255),w,b
  8903  000592  B4D8               	btfsc	status,2,c
  8904  000594  EFCE  F002         	goto	u6021
  8905  000598  EFD0  F002         	goto	u6020
  8906  00059C                     u6021:
  8907  00059C  EFD4  F002         	goto	l5234
  8908  0005A0                     u6020:
  8909  0005A0                     
  8910                           ; BSR set to: 0
  8911                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 410:             
      +                          m += e;
  8912  0005A0  519F               	movf	efgtoa@e& (0+255),w,b
  8913  0005A2  2783               	addwf	efgtoa@m& (0+255),f,b
  8914  0005A4  51A0               	movf	(efgtoa@e+1)& (0+255),w,b
  8915  0005A6  2384               	addwfc	(efgtoa@m+1)& (0+255),f,b
  8916  0005A8                     l5234:
  8917                           
  8918                           ; BSR set to: 0
  8919                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 415:     i = 0;
  8920  0005A8  0E00               	movlw	0
  8921  0005AA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  8922  0005AC  0E00               	movlw	0
  8923  0005AE  6F99               	movwf	efgtoa@i& (0+255),b
  8924  0005B0                     
  8925                           ; BSR set to: 0
  8926                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 416:     h = g;
  8927  0005B0  C09B  F091         	movff	efgtoa@g,efgtoa@h
  8928  0005B4  C09C  F092         	movff	efgtoa@g+1,efgtoa@h+1
  8929  0005B8  C09D  F093         	movff	efgtoa@g+2,efgtoa@h+2
  8930  0005BC  C09E  F094         	movff	efgtoa@g+3,efgtoa@h+3
  8931  0005C0                     
  8932                           ; BSR set to: 0
  8933                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 417:     ou = u;
  8934  0005C0  C0A3  F06F         	movff	efgtoa@u,efgtoa@ou
  8935  0005C4  C0A4  F070         	movff	efgtoa@u+1,efgtoa@ou+1
  8936  0005C8  C0A5  F071         	movff	efgtoa@u+2,efgtoa@ou+2
  8937  0005CC  C0A6  F072         	movff	efgtoa@u+3,efgtoa@ou+3
  8938                           
  8939                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  8940  0005D0  EF65  F003         	goto	l5248
  8941  0005D4                     l5240:
  8942                           
  8943                           ; BSR set to: 0
  8944                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 419:         l = 
      +                          floorf(h/u);
  8945  0005D4  C091  F035         	movff	efgtoa@h,___fldiv@b
  8946  0005D8  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  8947  0005DC  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  8948  0005E0  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  8949  0005E4  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  8950  0005E8  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  8951  0005EC  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  8952  0005F0  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  8953  0005F4  ECBE  F011         	call	___fldiv	;wreg free
  8954  0005F8  C035  F04E         	movff	?___fldiv,floorf@x
  8955  0005FC  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  8956  000600  C037  F050         	movff	?___fldiv+2,floorf@x+2
  8957  000604  C038  F051         	movff	?___fldiv+3,floorf@x+3
  8958  000608  ECDA  F017         	call	_floorf	;wreg free
  8959  00060C  C04E  F095         	movff	?_floorf,efgtoa@l
  8960  000610  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  8961  000614  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  8962  000618  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  8963                           
  8964                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 420:         d = 
      +                          (int)l;
  8965  00061C  C095  F04E         	movff	efgtoa@l,___fltol@f1
  8966  000620  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  8967  000624  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  8968  000628  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  8969  00062C  ECD3  F020         	call	___fltol	;wreg free
  8970  000630  C04E  F087         	movff	?___fltol,efgtoa@d
  8971  000634  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  8972  000638                     
  8973                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 421:         h -=
      +                           l*u;
  8974  000638  C091  F045         	movff	efgtoa@h,___flsub@b
  8975  00063C  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  8976  000640  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  8977  000644  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  8978  000648  C0A3  F020         	movff	efgtoa@u,___flmul@a
  8979  00064C  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  8980  000650  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  8981  000654  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  8982  000658  C095  F01C         	movff	efgtoa@l,___flmul@b
  8983  00065C  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  8984  000660  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  8985  000664  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  8986  000668  ECA9  F00F         	call	___flmul	;wreg free
  8987  00066C  C01C  F049         	movff	?___flmul,___flsub@a
  8988  000670  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  8989  000674  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  8990  000678  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  8991  00067C  ECA0  F029         	call	___flsub	;wreg free
  8992  000680  C045  F091         	movff	?___flsub,efgtoa@h
  8993  000684  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  8994  000688  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  8995  00068C  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  8996  000690                     
  8997                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 422:         u = 
      +                          u/10.0;
  8998  000690  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  8999  000694  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  9000  000698  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  9001  00069C  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  9002  0006A0  0E00               	movlw	0
  9003  0006A2  6E39               	movwf	___fldiv@a^0,c
  9004  0006A4  0E00               	movlw	0
  9005  0006A6  6E3A               	movwf	(___fldiv@a+1)^0,c
  9006  0006A8  0E20               	movlw	32
  9007  0006AA  6E3B               	movwf	(___fldiv@a+2)^0,c
  9008  0006AC  0E41               	movlw	65
  9009  0006AE  6E3C               	movwf	(___fldiv@a+3)^0,c
  9010  0006B0  ECBE  F011         	call	___fldiv	;wreg free
  9011  0006B4  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9012  0006B8  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9013  0006BC  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9014  0006C0  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9015  0006C4                     
  9016                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 423:         ++i;
  9017  0006C4  0100               	movlb	0	; () banked
  9018  0006C6  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9019  0006C8  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9020  0006CA                     l5248:
  9021                           
  9022                           ; BSR set to: 0
  9023                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 418:     while (i
      +                           < m) {
  9024  0006CA  5183               	movf	efgtoa@m& (0+255),w,b
  9025  0006CC  5D99               	subwf	efgtoa@i& (0+255),w,b
  9026  0006CE  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9027  0006D0  0A80               	xorlw	128
  9028  0006D2  6F6A               	movwf	??_efgtoa& (0+255),b
  9029  0006D4  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9030  0006D6  0A80               	xorlw	128
  9031  0006D8  596A               	subwfb	??_efgtoa& (0+255),w,b
  9032  0006DA  A0D8               	btfss	status,0,c
  9033  0006DC  EF72  F003         	goto	u6031
  9034  0006E0  EF74  F003         	goto	u6030
  9035  0006E4                     u6031:
  9036  0006E4  EFEA  F002         	goto	l5240
  9037  0006E8                     u6030:
  9038  0006E8                     
  9039                           ; BSR set to: 0
  9040                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 427:     l = u*5.
      +                          0;
  9041  0006E8  C0A3  F01C         	movff	efgtoa@u,___flmul@b
  9042  0006EC  C0A4  F01D         	movff	efgtoa@u+1,___flmul@b+1
  9043  0006F0  C0A5  F01E         	movff	efgtoa@u+2,___flmul@b+2
  9044  0006F4  C0A6  F01F         	movff	efgtoa@u+3,___flmul@b+3
  9045  0006F8  0E00               	movlw	0
  9046  0006FA  6E20               	movwf	___flmul@a^0,c
  9047  0006FC  0E00               	movlw	0
  9048  0006FE  6E21               	movwf	(___flmul@a+1)^0,c
  9049  000700  0EA0               	movlw	160
  9050  000702  6E22               	movwf	(___flmul@a+2)^0,c
  9051  000704  0E40               	movlw	64
  9052  000706  6E23               	movwf	(___flmul@a+3)^0,c
  9053  000708  ECA9  F00F         	call	___flmul	;wreg free
  9054  00070C  C01C  F095         	movff	?___flmul,efgtoa@l
  9055  000710  C01D  F096         	movff	?___flmul+1,efgtoa@l+1
  9056  000714  C01E  F097         	movff	?___flmul+2,efgtoa@l+2
  9057  000718  C01F  F098         	movff	?___flmul+3,efgtoa@l+3
  9058  00071C                     
  9059                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 428:     if (h < 
      +                          l) {
  9060  00071C  C091  F035         	movff	efgtoa@h,___flge@ff1
  9061  000720  C092  F036         	movff	efgtoa@h+1,___flge@ff1+1
  9062  000724  C093  F037         	movff	efgtoa@h+2,___flge@ff1+2
  9063  000728  C094  F038         	movff	efgtoa@h+3,___flge@ff1+3
  9064  00072C  C095  F039         	movff	efgtoa@l,___flge@ff2
  9065  000730  C096  F03A         	movff	efgtoa@l+1,___flge@ff2+1
  9066  000734  C097  F03B         	movff	efgtoa@l+2,___flge@ff2+2
  9067  000738  C098  F03C         	movff	efgtoa@l+3,___flge@ff2+3
  9068  00073C  ECD8  F021         	call	___flge	;wreg free
  9069  000740  B0D8               	btfsc	status,0,c
  9070  000742  EFA5  F003         	goto	u6041
  9071  000746  EFA7  F003         	goto	u6040
  9072  00074A                     u6041:
  9073  00074A  EFB2  F003         	goto	l5256
  9074  00074E                     u6040:
  9075  00074E                     
  9076                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 429:         l = 
      +                          0.0;
  9077  00074E  0E00               	movlw	0
  9078  000750  0100               	movlb	0	; () banked
  9079  000752  6F95               	movwf	efgtoa@l& (0+255),b
  9080  000754  0E00               	movlw	0
  9081  000756  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  9082  000758  0E00               	movlw	0
  9083  00075A  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  9084  00075C  0E00               	movlw	0
  9085  00075E  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  9086                           
  9087                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 430:     } else {
  9088  000760  EFDB  F003         	goto	l5262
  9089  000764                     l5256:
  9090                           
  9091                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 432:         if (
      +                          (h == l) && !(d % 2)) {
  9092  000764  C091  F001         	movff	efgtoa@h,___fleq@ff1
  9093  000768  C092  F002         	movff	efgtoa@h+1,___fleq@ff1+1
  9094  00076C  C093  F003         	movff	efgtoa@h+2,___fleq@ff1+2
  9095  000770  C094  F004         	movff	efgtoa@h+3,___fleq@ff1+3
  9096  000774  C095  F005         	movff	efgtoa@l,___fleq@ff2
  9097  000778  C096  F006         	movff	efgtoa@l+1,___fleq@ff2+1
  9098  00077C  C097  F007         	movff	efgtoa@l+2,___fleq@ff2+2
  9099  000780  C098  F008         	movff	efgtoa@l+3,___fleq@ff2+3
  9100  000784  ECF1  F025         	call	___fleq	;wreg free
  9101  000788  A0D8               	btfss	status,0,c
  9102  00078A  EFC9  F003         	goto	u6051
  9103  00078E  EFCB  F003         	goto	u6050
  9104  000792                     u6051:
  9105  000792  EFDB  F003         	goto	l5262
  9106  000796                     u6050:
  9107  000796  0100               	movlb	0	; () banked
  9108  000798  B187               	btfsc	efgtoa@d& (0+255),0,b
  9109  00079A  EFD1  F003         	goto	u6061
  9110  00079E  EFD3  F003         	goto	u6060
  9111  0007A2                     u6061:
  9112  0007A2  EFDB  F003         	goto	l5262
  9113  0007A6                     u6060:
  9114  0007A6                     
  9115                           ; BSR set to: 0
  9116                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 433:             
      +                          l = 0.0;
  9117  0007A6  0E00               	movlw	0
  9118  0007A8  6F95               	movwf	efgtoa@l& (0+255),b
  9119  0007AA  0E00               	movlw	0
  9120  0007AC  6F96               	movwf	(efgtoa@l+1)& (0+255),b
  9121  0007AE  0E00               	movlw	0
  9122  0007B0  6F97               	movwf	(efgtoa@l+2)& (0+255),b
  9123  0007B2  0E00               	movlw	0
  9124  0007B4  6F98               	movwf	(efgtoa@l+3)& (0+255),b
  9125  0007B6                     l5262:
  9126                           
  9127                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 438:     h = g + 
      +                          l;
  9128  0007B6  C09B  F035         	movff	efgtoa@g,___fladd@b
  9129  0007BA  C09C  F036         	movff	efgtoa@g+1,___fladd@b+1
  9130  0007BE  C09D  F037         	movff	efgtoa@g+2,___fladd@b+2
  9131  0007C2  C09E  F038         	movff	efgtoa@g+3,___fladd@b+3
  9132  0007C6  C095  F039         	movff	efgtoa@l,___fladd@a
  9133  0007CA  C096  F03A         	movff	efgtoa@l+1,___fladd@a+1
  9134  0007CE  C097  F03B         	movff	efgtoa@l+2,___fladd@a+2
  9135  0007D2  C098  F03C         	movff	efgtoa@l+3,___fladd@a+3
  9136  0007D6  EC49  F00D         	call	___fladd	;wreg free
  9137  0007DA  C035  F091         	movff	?___fladd,efgtoa@h
  9138  0007DE  C036  F092         	movff	?___fladd+1,efgtoa@h+1
  9139  0007E2  C037  F093         	movff	?___fladd+2,efgtoa@h+2
  9140  0007E6  C038  F094         	movff	?___fladd+3,efgtoa@h+3
  9141  0007EA                     
  9142                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 441:     u = ou;
  9143  0007EA  C06F  F0A3         	movff	efgtoa@ou,efgtoa@u
  9144  0007EE  C070  F0A4         	movff	efgtoa@ou+1,efgtoa@u+1
  9145  0007F2  C071  F0A5         	movff	efgtoa@ou+2,efgtoa@u+2
  9146  0007F6  C072  F0A6         	movff	efgtoa@ou+3,efgtoa@u+3
  9147  0007FA                     
  9148                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 442:     ne = (nm
      +                          ode == 'e') ? 0 : e;
  9149  0007FA  0E65               	movlw	101
  9150  0007FC  0100               	movlb	0	; () banked
  9151  0007FE  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9152  000800  B4D8               	btfsc	status,2,c
  9153  000802  EF05  F004         	goto	u6071
  9154  000806  EF07  F004         	goto	u6070
  9155  00080A                     u6071:
  9156  00080A  EF0D  F004         	goto	l5270
  9157  00080E                     u6070:
  9158  00080E                     
  9159                           ; BSR set to: 0
  9160  00080E  C09F  F085         	movff	efgtoa@e,efgtoa@ne
  9161  000812  C0A0  F086         	movff	efgtoa@e+1,efgtoa@ne+1
  9162  000816  EF11  F004         	goto	l1510
  9163  00081A                     l5270:
  9164                           
  9165                           ; BSR set to: 0
  9166  00081A  0E00               	movlw	0
  9167  00081C  6F86               	movwf	(efgtoa@ne+1)& (0+255),b
  9168  00081E  0E00               	movlw	0
  9169  000820  6F85               	movwf	efgtoa@ne& (0+255),b
  9170  000822                     l1510:
  9171                           
  9172                           ; BSR set to: 0
  9173                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 443:     pp = 0;
  9174  000822  0E00               	movlw	0
  9175  000824  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9176  000826  0E00               	movlw	0
  9177  000828  6F81               	movwf	efgtoa@pp& (0+255),b
  9178                           
  9179                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 444:     t = 0;
  9180  00082A  0E00               	movlw	0
  9181  00082C  6F80               	movwf	(efgtoa@t+1)& (0+255),b
  9182  00082E  0E00               	movlw	0
  9183  000830  6F7F               	movwf	efgtoa@t& (0+255),b
  9184                           
  9185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 445:     i = 0;
  9186  000832  0E00               	movlw	0
  9187  000834  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9188  000836  0E00               	movlw	0
  9189  000838  6F99               	movwf	efgtoa@i& (0+255),b
  9190                           
  9191                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9192  00083A  EF0C  F005         	goto	l5320
  9193  00083E                     l5272:
  9194                           
  9195                           ; BSR set to: 0
  9196                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 447:         l = 
      +                          floorf(h/u);
  9197  00083E  C091  F035         	movff	efgtoa@h,___fldiv@b
  9198  000842  C092  F036         	movff	efgtoa@h+1,___fldiv@b+1
  9199  000846  C093  F037         	movff	efgtoa@h+2,___fldiv@b+2
  9200  00084A  C094  F038         	movff	efgtoa@h+3,___fldiv@b+3
  9201  00084E  C0A3  F039         	movff	efgtoa@u,___fldiv@a
  9202  000852  C0A4  F03A         	movff	efgtoa@u+1,___fldiv@a+1
  9203  000856  C0A5  F03B         	movff	efgtoa@u+2,___fldiv@a+2
  9204  00085A  C0A6  F03C         	movff	efgtoa@u+3,___fldiv@a+3
  9205  00085E  ECBE  F011         	call	___fldiv	;wreg free
  9206  000862  C035  F04E         	movff	?___fldiv,floorf@x
  9207  000866  C036  F04F         	movff	?___fldiv+1,floorf@x+1
  9208  00086A  C037  F050         	movff	?___fldiv+2,floorf@x+2
  9209  00086E  C038  F051         	movff	?___fldiv+3,floorf@x+3
  9210  000872  ECDA  F017         	call	_floorf	;wreg free
  9211  000876  C04E  F095         	movff	?_floorf,efgtoa@l
  9212  00087A  C04F  F096         	movff	?_floorf+1,efgtoa@l+1
  9213  00087E  C050  F097         	movff	?_floorf+2,efgtoa@l+2
  9214  000882  C051  F098         	movff	?_floorf+3,efgtoa@l+3
  9215                           
  9216                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 448:         d = 
      +                          (int)l;
  9217  000886  C095  F04E         	movff	efgtoa@l,___fltol@f1
  9218  00088A  C096  F04F         	movff	efgtoa@l+1,___fltol@f1+1
  9219  00088E  C097  F050         	movff	efgtoa@l+2,___fltol@f1+2
  9220  000892  C098  F051         	movff	efgtoa@l+3,___fltol@f1+3
  9221  000896  ECD3  F020         	call	___fltol	;wreg free
  9222  00089A  C04E  F087         	movff	?___fltol,efgtoa@d
  9223  00089E  C04F  F088         	movff	?___fltol+1,efgtoa@d+1
  9224  0008A2                     
  9225                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 449:         if (
      +                          !(flags & (1 << 4)) && !d && (mode == 'g') && (ne < 0)) {
  9226  0008A2  0100               	movlb	0	; () banked
  9227  0008A4  B9F8               	btfsc	_flags& (0+255),4,b
  9228  0008A6  EF57  F004         	goto	u6081
  9229  0008AA  EF59  F004         	goto	u6080
  9230  0008AE                     u6081:
  9231  0008AE  EF76  F004         	goto	l5284
  9232  0008B2                     u6080:
  9233  0008B2                     
  9234                           ; BSR set to: 0
  9235  0008B2  5187               	movf	efgtoa@d& (0+255),w,b
  9236  0008B4  1188               	iorwf	(efgtoa@d+1)& (0+255),w,b
  9237  0008B6  A4D8               	btfss	status,2,c
  9238  0008B8  EF60  F004         	goto	u6091
  9239  0008BC  EF62  F004         	goto	u6090
  9240  0008C0                     u6091:
  9241  0008C0  EF76  F004         	goto	l5284
  9242  0008C4                     u6090:
  9243  0008C4                     
  9244                           ; BSR set to: 0
  9245  0008C4  0E67               	movlw	103
  9246  0008C6  1990               	xorwf	efgtoa@mode& (0+255),w,b
  9247  0008C8  A4D8               	btfss	status,2,c
  9248  0008CA  EF69  F004         	goto	u6101
  9249  0008CE  EF6B  F004         	goto	u6100
  9250  0008D2                     u6101:
  9251  0008D2  EF76  F004         	goto	l5284
  9252  0008D6                     u6100:
  9253  0008D6                     
  9254                           ; BSR set to: 0
  9255  0008D6  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9256  0008D8  EF72  F004         	goto	u6110
  9257  0008DC  EF70  F004         	goto	u6111
  9258  0008E0                     u6111:
  9259  0008E0  EF76  F004         	goto	l5284
  9260  0008E4                     u6110:
  9261  0008E4                     
  9262                           ; BSR set to: 0
  9263                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 450:             
      +                          ++t;
  9264  0008E4  4B7F               	infsnz	efgtoa@t& (0+255),f,b
  9265  0008E6  2B80               	incf	(efgtoa@t+1)& (0+255),f,b
  9266                           
  9267                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 451:         } el
      +                          se {
  9268  0008E8  EFC0  F004         	goto	l5312
  9269  0008EC                     l5284:
  9270                           
  9271                           ; BSR set to: 0
  9272                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 452:             
      +                          if (!pp && (ne < 0)) {
  9273  0008EC  5181               	movf	efgtoa@pp& (0+255),w,b
  9274  0008EE  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9275  0008F0  A4D8               	btfss	status,2,c
  9276  0008F2  EF7D  F004         	goto	u6121
  9277  0008F6  EF7F  F004         	goto	u6120
  9278  0008FA                     u6121:
  9279  0008FA  EFA9  F004         	goto	l5304
  9280  0008FE                     u6120:
  9281  0008FE                     
  9282                           ; BSR set to: 0
  9283  0008FE  BF86               	btfsc	(efgtoa@ne+1)& (0+255),7,b
  9284  000900  EF86  F004         	goto	u6130
  9285  000904  EF84  F004         	goto	u6131
  9286  000908                     u6131:
  9287  000908  EFA9  F004         	goto	l5304
  9288  00090C                     u6130:
  9289  00090C                     
  9290                           ; BSR set to: 0
  9291                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 453:             
      +                              dbuf[n++] = '.';
  9292  00090C  0E60               	movlw	low _dbuf
  9293  00090E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9294  000910  6ED9               	movwf	fsr2l,c
  9295  000912  0E02               	movlw	high _dbuf
  9296  000914  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9297  000916  6EDA               	movwf	fsr2h,c
  9298  000918  0E2E               	movlw	46
  9299  00091A  6EDF               	movwf	indf2,c
  9300  00091C                     
  9301                           ; BSR set to: 0
  9302  00091C  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9303  00091E  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9304  000920                     
  9305                           ; BSR set to: 0
  9306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 454:             
      +                              --w;
  9307  000920  078E               	decf	efgtoa@w& (0+255),f,b
  9308  000922  A0D8               	btfss	status,0,c
  9309  000924  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9310  000926                     
  9311                           ; BSR set to: 0
  9312                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 455:             
      +                              pp = 1;
  9313  000926  0E00               	movlw	0
  9314  000928  6F82               	movwf	(efgtoa@pp+1)& (0+255),b
  9315  00092A  0E01               	movlw	1
  9316  00092C  6F81               	movwf	efgtoa@pp& (0+255),b
  9317  00092E  EFA9  F004         	goto	l5304
  9318  000932                     l5296:
  9319                           
  9320                           ; BSR set to: 0
  9321                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 458:             
      +                              dbuf[n++] = '0';
  9322  000932  0E60               	movlw	low _dbuf
  9323  000934  25A1               	addwf	efgtoa@n& (0+255),w,b
  9324  000936  6ED9               	movwf	fsr2l,c
  9325  000938  0E02               	movlw	high _dbuf
  9326  00093A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9327  00093C  6EDA               	movwf	fsr2h,c
  9328  00093E  0E30               	movlw	48
  9329  000940  6EDF               	movwf	indf2,c
  9330  000942                     
  9331                           ; BSR set to: 0
  9332  000942  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9333  000944  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9334  000946                     
  9335                           ; BSR set to: 0
  9336                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 459:             
      +                              --w;
  9337  000946  078E               	decf	efgtoa@w& (0+255),f,b
  9338  000948  A0D8               	btfss	status,0,c
  9339  00094A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9340  00094C                     
  9341                           ; BSR set to: 0
  9342                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 460:             
      +                              --t;
  9343  00094C  077F               	decf	efgtoa@t& (0+255),f,b
  9344  00094E  A0D8               	btfss	status,0,c
  9345  000950  0780               	decf	(efgtoa@t+1)& (0+255),f,b
  9346  000952                     l5304:
  9347                           
  9348                           ; BSR set to: 0
  9349                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 457:             
      +                          while (t) {
  9350  000952  517F               	movf	efgtoa@t& (0+255),w,b
  9351  000954  1180               	iorwf	(efgtoa@t+1)& (0+255),w,b
  9352  000956  A4D8               	btfss	status,2,c
  9353  000958  EFB0  F004         	goto	u6141
  9354  00095C  EFB2  F004         	goto	u6140
  9355  000960                     u6141:
  9356  000960  EF99  F004         	goto	l5296
  9357  000964                     u6140:
  9358  000964                     
  9359                           ; BSR set to: 0
  9360                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 462:             
      +                          dbuf[n++] = '0' + d;
  9361  000964  0E60               	movlw	low _dbuf
  9362  000966  25A1               	addwf	efgtoa@n& (0+255),w,b
  9363  000968  6ED9               	movwf	fsr2l,c
  9364  00096A  0E02               	movlw	high _dbuf
  9365  00096C  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9366  00096E  6EDA               	movwf	fsr2h,c
  9367  000970  5187               	movf	efgtoa@d& (0+255),w,b
  9368  000972  0F30               	addlw	48
  9369  000974  6EDF               	movwf	indf2,c
  9370  000976                     
  9371                           ; BSR set to: 0
  9372  000976  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9373  000978  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9374  00097A                     
  9375                           ; BSR set to: 0
  9376                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 463:             
      +                          --w;
  9377  00097A  078E               	decf	efgtoa@w& (0+255),f,b
  9378  00097C  A0D8               	btfss	status,0,c
  9379  00097E  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9380  000980                     l5312:
  9381                           
  9382                           ; BSR set to: 0
  9383                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 465:         h -=
      +                           l*u;
  9384  000980  C091  F045         	movff	efgtoa@h,___flsub@b
  9385  000984  C092  F046         	movff	efgtoa@h+1,___flsub@b+1
  9386  000988  C093  F047         	movff	efgtoa@h+2,___flsub@b+2
  9387  00098C  C094  F048         	movff	efgtoa@h+3,___flsub@b+3
  9388  000990  C0A3  F020         	movff	efgtoa@u,___flmul@a
  9389  000994  C0A4  F021         	movff	efgtoa@u+1,___flmul@a+1
  9390  000998  C0A5  F022         	movff	efgtoa@u+2,___flmul@a+2
  9391  00099C  C0A6  F023         	movff	efgtoa@u+3,___flmul@a+3
  9392  0009A0  C095  F01C         	movff	efgtoa@l,___flmul@b
  9393  0009A4  C096  F01D         	movff	efgtoa@l+1,___flmul@b+1
  9394  0009A8  C097  F01E         	movff	efgtoa@l+2,___flmul@b+2
  9395  0009AC  C098  F01F         	movff	efgtoa@l+3,___flmul@b+3
  9396  0009B0  ECA9  F00F         	call	___flmul	;wreg free
  9397  0009B4  C01C  F049         	movff	?___flmul,___flsub@a
  9398  0009B8  C01D  F04A         	movff	?___flmul+1,___flsub@a+1
  9399  0009BC  C01E  F04B         	movff	?___flmul+2,___flsub@a+2
  9400  0009C0  C01F  F04C         	movff	?___flmul+3,___flsub@a+3
  9401  0009C4  ECA0  F029         	call	___flsub	;wreg free
  9402  0009C8  C045  F091         	movff	?___flsub,efgtoa@h
  9403  0009CC  C046  F092         	movff	?___flsub+1,efgtoa@h+1
  9404  0009D0  C047  F093         	movff	?___flsub+2,efgtoa@h+2
  9405  0009D4  C048  F094         	movff	?___flsub+3,efgtoa@h+3
  9406  0009D8                     
  9407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 466:         u = 
      +                          u/10.0;
  9408  0009D8  C0A3  F035         	movff	efgtoa@u,___fldiv@b
  9409  0009DC  C0A4  F036         	movff	efgtoa@u+1,___fldiv@b+1
  9410  0009E0  C0A5  F037         	movff	efgtoa@u+2,___fldiv@b+2
  9411  0009E4  C0A6  F038         	movff	efgtoa@u+3,___fldiv@b+3
  9412  0009E8  0E00               	movlw	0
  9413  0009EA  6E39               	movwf	___fldiv@a^0,c
  9414  0009EC  0E00               	movlw	0
  9415  0009EE  6E3A               	movwf	(___fldiv@a+1)^0,c
  9416  0009F0  0E20               	movlw	32
  9417  0009F2  6E3B               	movwf	(___fldiv@a+2)^0,c
  9418  0009F4  0E41               	movlw	65
  9419  0009F6  6E3C               	movwf	(___fldiv@a+3)^0,c
  9420  0009F8  ECBE  F011         	call	___fldiv	;wreg free
  9421  0009FC  C035  F0A3         	movff	?___fldiv,efgtoa@u
  9422  000A00  C036  F0A4         	movff	?___fldiv+1,efgtoa@u+1
  9423  000A04  C037  F0A5         	movff	?___fldiv+2,efgtoa@u+2
  9424  000A08  C038  F0A6         	movff	?___fldiv+3,efgtoa@u+3
  9425  000A0C                     
  9426                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 467:         --ne
      +                          ;
  9427  000A0C  0100               	movlb	0	; () banked
  9428  000A0E  0785               	decf	efgtoa@ne& (0+255),f,b
  9429  000A10  A0D8               	btfss	status,0,c
  9430  000A12  0786               	decf	(efgtoa@ne+1)& (0+255),f,b
  9431  000A14                     
  9432                           ; BSR set to: 0
  9433                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 468:         ++i;
  9434  000A14  4B99               	infsnz	efgtoa@i& (0+255),f,b
  9435  000A16  2B9A               	incf	(efgtoa@i+1)& (0+255),f,b
  9436  000A18                     l5320:
  9437                           
  9438                           ; BSR set to: 0
  9439                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 446:     while ((
      +                          i < m) && (n < (80 - 5))) {
  9440  000A18  5183               	movf	efgtoa@m& (0+255),w,b
  9441  000A1A  5D99               	subwf	efgtoa@i& (0+255),w,b
  9442  000A1C  519A               	movf	(efgtoa@i+1)& (0+255),w,b
  9443  000A1E  0A80               	xorlw	128
  9444  000A20  6F6A               	movwf	??_efgtoa& (0+255),b
  9445  000A22  5184               	movf	(efgtoa@m+1)& (0+255),w,b
  9446  000A24  0A80               	xorlw	128
  9447  000A26  596A               	subwfb	??_efgtoa& (0+255),w,b
  9448  000A28  B0D8               	btfsc	status,0,c
  9449  000A2A  EF19  F005         	goto	u6151
  9450  000A2E  EF1B  F005         	goto	u6150
  9451  000A32                     u6151:
  9452  000A32  EF29  F005         	goto	l5324
  9453  000A36                     u6150:
  9454  000A36                     
  9455                           ; BSR set to: 0
  9456  000A36  BFA2               	btfsc	(efgtoa@n+1)& (0+255),7,b
  9457  000A38  EF27  F005         	goto	u6161
  9458  000A3C  51A2               	movf	(efgtoa@n+1)& (0+255),w,b
  9459  000A3E  E109               	bnz	u6160
  9460  000A40  0E4B               	movlw	75
  9461  000A42  5DA1               	subwf	efgtoa@n& (0+255),w,b
  9462  000A44  A0D8               	btfss	status,0,c
  9463  000A46  EF27  F005         	goto	u6161
  9464  000A4A  EF29  F005         	goto	u6160
  9465  000A4E                     u6161:
  9466  000A4E  EF1F  F004         	goto	l5272
  9467  000A52                     u6160:
  9468  000A52                     l5324:
  9469                           
  9470                           ; BSR set to: 0
  9471                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 470:     if (!pp 
      +                          && (flags & (1 << 4))) {
  9472  000A52  5181               	movf	efgtoa@pp& (0+255),w,b
  9473  000A54  1182               	iorwf	(efgtoa@pp+1)& (0+255),w,b
  9474  000A56  A4D8               	btfss	status,2,c
  9475  000A58  EF30  F005         	goto	u6171
  9476  000A5C  EF32  F005         	goto	u6170
  9477  000A60                     u6171:
  9478  000A60  EF43  F005         	goto	l5332
  9479  000A64                     u6170:
  9480  000A64                     
  9481                           ; BSR set to: 0
  9482  000A64  A9F8               	btfss	_flags& (0+255),4,b
  9483  000A66  EF37  F005         	goto	u6181
  9484  000A6A  EF39  F005         	goto	u6180
  9485  000A6E                     u6181:
  9486  000A6E  EF43  F005         	goto	l5332
  9487  000A72                     u6180:
  9488  000A72                     
  9489                           ; BSR set to: 0
  9490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 471:         dbuf
      +                          [n++] = '.';
  9491  000A72  0E60               	movlw	low _dbuf
  9492  000A74  25A1               	addwf	efgtoa@n& (0+255),w,b
  9493  000A76  6ED9               	movwf	fsr2l,c
  9494  000A78  0E02               	movlw	high _dbuf
  9495  000A7A  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9496  000A7C  6EDA               	movwf	fsr2h,c
  9497  000A7E  0E2E               	movlw	46
  9498  000A80  6EDF               	movwf	indf2,c
  9499  000A82                     
  9500                           ; BSR set to: 0
  9501  000A82  4BA1               	infsnz	efgtoa@n& (0+255),f,b
  9502  000A84  2BA2               	incf	(efgtoa@n+1)& (0+255),f,b
  9503  000A86                     l5332:
  9504                           
  9505                           ; BSR set to: 0
  9506                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 473:     dbuf[n] 
      +                          = '\0';
  9507  000A86  0E60               	movlw	low _dbuf
  9508  000A88  25A1               	addwf	efgtoa@n& (0+255),w,b
  9509  000A8A  6ED9               	movwf	fsr2l,c
  9510  000A8C  0E02               	movlw	high _dbuf
  9511  000A8E  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9512  000A90  6EDA               	movwf	fsr2h,c
  9513  000A92  0E00               	movlw	0
  9514  000A94  6EDF               	movwf	indf2,c
  9515  000A96                     
  9516                           ; BSR set to: 0
  9517                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 476:     if (nmod
      +                          e == 'e') {
  9518  000A96  0E65               	movlw	101
  9519  000A98  198D               	xorwf	efgtoa@nmode& (0+255),w,b
  9520  000A9A  A4D8               	btfss	status,2,c
  9521  000A9C  EF52  F005         	goto	u6191
  9522  000AA0  EF54  F005         	goto	u6190
  9523  000AA4                     u6191:
  9524  000AA4  EF02  F001         	goto	l5144
  9525  000AA8                     u6190:
  9526  000AA8                     
  9527                           ; BSR set to: 0
  9528                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 477:         i = 
      +                          sizeof(dbuf) - 1;
  9529  000AA8  0E00               	movlw	0
  9530  000AAA  6F9A               	movwf	(efgtoa@i+1)& (0+255),b
  9531  000AAC  0E4F               	movlw	79
  9532  000AAE  6F99               	movwf	efgtoa@i& (0+255),b
  9533  000AB0                     
  9534                           ; BSR set to: 0
  9535                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 478:         dbuf
      +                          [i] = '\0';
  9536  000AB0  0E60               	movlw	low _dbuf
  9537  000AB2  2599               	addwf	efgtoa@i& (0+255),w,b
  9538  000AB4  6ED9               	movwf	fsr2l,c
  9539  000AB6  0E02               	movlw	high _dbuf
  9540  000AB8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9541  000ABA  6EDA               	movwf	fsr2h,c
  9542  000ABC  0E00               	movlw	0
  9543  000ABE  6EDF               	movwf	indf2,c
  9544  000AC0                     
  9545                           ; BSR set to: 0
  9546                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 479:         sign
      +                           = 0;
  9547  000AC0  0E00               	movlw	0
  9548  000AC2  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9549  000AC4  0E00               	movlw	0
  9550  000AC6  6F89               	movwf	efgtoa@sign& (0+255),b
  9551  000AC8                     
  9552                           ; BSR set to: 0
  9553                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 480:         if (
      +                          e < 0) {
  9554  000AC8  BFA0               	btfsc	(efgtoa@e+1)& (0+255),7,b
  9555  000ACA  EF6B  F005         	goto	u6200
  9556  000ACE  EF69  F005         	goto	u6201
  9557  000AD2                     u6201:
  9558  000AD2  EF73  F005         	goto	l5348
  9559  000AD6                     u6200:
  9560  000AD6                     
  9561                           ; BSR set to: 0
  9562                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 481:             
      +                          sign = 1;
  9563  000AD6  0E00               	movlw	0
  9564  000AD8  6F8A               	movwf	(efgtoa@sign+1)& (0+255),b
  9565  000ADA  0E01               	movlw	1
  9566  000ADC  6F89               	movwf	efgtoa@sign& (0+255),b
  9567  000ADE                     
  9568                           ; BSR set to: 0
  9569                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 482:             
      +                          e = -e;
  9570  000ADE  6D9F               	negf	efgtoa@e& (0+255),b
  9571  000AE0  1FA0               	comf	(efgtoa@e+1)& (0+255),f,b
  9572  000AE2  B0D8               	btfsc	status,0,c
  9573  000AE4  2BA0               	incf	(efgtoa@e+1)& (0+255),f,b
  9574  000AE6                     l5348:
  9575                           
  9576                           ; BSR set to: 0
  9577                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 484:         p = 
      +                          2;
  9578  000AE6  0E00               	movlw	0
  9579  000AE8  6F8C               	movwf	(efgtoa@p+1)& (0+255),b
  9580  000AEA  0E02               	movlw	2
  9581  000AEC  6F8B               	movwf	efgtoa@p& (0+255),b
  9582                           
  9583                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9584  000AEE  EFA4  F005         	goto	l5360
  9585  000AF2                     l5350:
  9586                           
  9587                           ; BSR set to: 0
  9588                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 486:             
      +                          --i;
  9589  000AF2  0799               	decf	efgtoa@i& (0+255),f,b
  9590  000AF4  A0D8               	btfss	status,0,c
  9591  000AF6  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9592  000AF8                     
  9593                           ; BSR set to: 0
  9594                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 487:             
      +                          dbuf[i] = '0' + (e % 10);
  9595  000AF8  0E60               	movlw	low _dbuf
  9596  000AFA  2599               	addwf	efgtoa@i& (0+255),w,b
  9597  000AFC  6ED9               	movwf	fsr2l,c
  9598  000AFE  0E02               	movlw	high _dbuf
  9599  000B00  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9600  000B02  6EDA               	movwf	fsr2h,c
  9601  000B04  C09F  F001         	movff	efgtoa@e,___awmod@dividend
  9602  000B08  C0A0  F002         	movff	efgtoa@e+1,___awmod@dividend+1
  9603  000B0C  0E00               	movlw	0
  9604  000B0E  6E04               	movwf	(___awmod@divisor+1)^0,c
  9605  000B10  0E0A               	movlw	10
  9606  000B12  6E03               	movwf	___awmod@divisor^0,c
  9607  000B14  EC99  F025         	call	___awmod	;wreg free
  9608  000B18  5001               	movf	?___awmod^0,w,c
  9609  000B1A  0F30               	addlw	48
  9610  000B1C  6EDF               	movwf	indf2,c
  9611  000B1E                     
  9612                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 488:             
      +                          e = e / 10;
  9613  000B1E  C09F  F001         	movff	efgtoa@e,___awdiv@dividend
  9614  000B22  C0A0  F002         	movff	efgtoa@e+1,___awdiv@dividend+1
  9615  000B26  0E00               	movlw	0
  9616  000B28  6E04               	movwf	(___awdiv@divisor+1)^0,c
  9617  000B2A  0E0A               	movlw	10
  9618  000B2C  6E03               	movwf	___awdiv@divisor^0,c
  9619  000B2E  ECDE  F024         	call	___awdiv	;wreg free
  9620  000B32  C001  F09F         	movff	?___awdiv,efgtoa@e
  9621  000B36  C002  F0A0         	movff	?___awdiv+1,efgtoa@e+1
  9622  000B3A                     
  9623                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 489:             
      +                          --p;
  9624  000B3A  0100               	movlb	0	; () banked
  9625  000B3C  078B               	decf	efgtoa@p& (0+255),f,b
  9626  000B3E  A0D8               	btfss	status,0,c
  9627  000B40  078C               	decf	(efgtoa@p+1)& (0+255),f,b
  9628  000B42                     
  9629                           ; BSR set to: 0
  9630                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 490:             
      +                          --w;
  9631  000B42  078E               	decf	efgtoa@w& (0+255),f,b
  9632  000B44  A0D8               	btfss	status,0,c
  9633  000B46  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9634  000B48                     l5360:
  9635                           
  9636                           ; BSR set to: 0
  9637                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 485:         whil
      +                          e (e || (0 < p)) {
  9638  000B48  519F               	movf	efgtoa@e& (0+255),w,b
  9639  000B4A  11A0               	iorwf	(efgtoa@e+1)& (0+255),w,b
  9640  000B4C  A4D8               	btfss	status,2,c
  9641  000B4E  EFAB  F005         	goto	u6211
  9642  000B52  EFAD  F005         	goto	u6210
  9643  000B56                     u6211:
  9644  000B56  EF79  F005         	goto	l5350
  9645  000B5A                     u6210:
  9646  000B5A                     
  9647                           ; BSR set to: 0
  9648  000B5A  BF8C               	btfsc	(efgtoa@p+1)& (0+255),7,b
  9649  000B5C  EFBA  F005         	goto	u6220
  9650  000B60  518C               	movf	(efgtoa@p+1)& (0+255),w,b
  9651  000B62  E106               	bnz	u6221
  9652  000B64  058B               	decf	efgtoa@p& (0+255),w,b
  9653  000B66  B0D8               	btfsc	status,0,c
  9654  000B68  EFB8  F005         	goto	u6221
  9655  000B6C  EFBA  F005         	goto	u6220
  9656  000B70                     u6221:
  9657  000B70  EF79  F005         	goto	l5350
  9658  000B74                     u6220:
  9659  000B74                     
  9660                           ; BSR set to: 0
  9661                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 492:         --i;
  9662  000B74  0799               	decf	efgtoa@i& (0+255),f,b
  9663  000B76  A0D8               	btfss	status,0,c
  9664  000B78  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9665  000B7A                     
  9666                           ; BSR set to: 0
  9667                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 493:         dbuf
      +                          [i] = sign ? '-' : '+';
  9668  000B7A  5189               	movf	efgtoa@sign& (0+255),w,b
  9669  000B7C  118A               	iorwf	(efgtoa@sign+1)& (0+255),w,b
  9670  000B7E  A4D8               	btfss	status,2,c
  9671  000B80  EFC4  F005         	goto	u6231
  9672  000B84  EFC6  F005         	goto	u6230
  9673  000B88                     u6231:
  9674  000B88  EFCC  F005         	goto	l5370
  9675  000B8C                     u6230:
  9676  000B8C                     
  9677                           ; BSR set to: 0
  9678  000B8C  0E00               	movlw	0
  9679  000B8E  6F7A               	movwf	(_efgtoa$2988+1)& (0+255),b
  9680  000B90  0E2B               	movlw	43
  9681  000B92  6F79               	movwf	_efgtoa$2988& (0+255),b
  9682  000B94  EFD0  F005         	goto	l5372
  9683  000B98                     l5370:
  9684                           
  9685                           ; BSR set to: 0
  9686  000B98  0E00               	movlw	0
  9687  000B9A  6F7A               	movwf	(_efgtoa$2988+1)& (0+255),b
  9688  000B9C  0E2D               	movlw	45
  9689  000B9E  6F79               	movwf	_efgtoa$2988& (0+255),b
  9690  000BA0                     l5372:
  9691                           
  9692                           ; BSR set to: 0
  9693  000BA0  0E60               	movlw	low _dbuf
  9694  000BA2  2599               	addwf	efgtoa@i& (0+255),w,b
  9695  000BA4  6ED9               	movwf	fsr2l,c
  9696  000BA6  0E02               	movlw	high _dbuf
  9697  000BA8  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9698  000BAA  6EDA               	movwf	fsr2h,c
  9699  000BAC  C079  FFDF         	movff	_efgtoa$2988,indf2
  9700  000BB0                     
  9701                           ; BSR set to: 0
  9702                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 494:         --w;
  9703  000BB0  078E               	decf	efgtoa@w& (0+255),f,b
  9704  000BB2  A0D8               	btfss	status,0,c
  9705  000BB4  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9706  000BB6                     
  9707                           ; BSR set to: 0
  9708                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 496:         dbuf
      +                          [i] = (0 ? isupper((int)c) : ((unsigned)((int)c)-'A') < 26) ? 'E' : 'e';
  9709  000BB6  0799               	decf	efgtoa@i& (0+255),f,b
  9710  000BB8  A0D8               	btfss	status,0,c
  9711  000BBA  079A               	decf	(efgtoa@i+1)& (0+255),f,b
  9712  000BBC                     
  9713                           ; BSR set to: 0
  9714  000BBC  0EBF               	movlw	191
  9715  000BBE  6F6A               	movwf	??_efgtoa& (0+255),b
  9716  000BC0  0EFF               	movlw	255
  9717  000BC2  6F6B               	movwf	(??_efgtoa+1)& (0+255),b
  9718  000BC4  505E               	movf	efgtoa@c^0,w,c
  9719  000BC6  6F6C               	movwf	(??_efgtoa+2)& (0+255),b
  9720  000BC8  6B6D               	clrf	(??_efgtoa+3)& (0+255),b
  9721  000BCA  516A               	movf	??_efgtoa& (0+255),w,b
  9722  000BCC  276C               	addwf	(??_efgtoa+2)& (0+255),f,b
  9723  000BCE  516B               	movf	(??_efgtoa+1)& (0+255),w,b
  9724  000BD0  236D               	addwfc	(??_efgtoa+3)& (0+255),f,b
  9725  000BD2  516D               	movf	(??_efgtoa+3)& (0+255),w,b
  9726  000BD4  E10A               	bnz	u6240
  9727  000BD6  0E1A               	movlw	26
  9728  000BD8  5D6C               	subwf	(??_efgtoa+2)& (0+255),w,b
  9729  000BDA  A0D8               	btfss	status,0,c
  9730  000BDC  EFF2  F005         	goto	u6241
  9731  000BE0  EFF5  F005         	goto	u6240
  9732  000BE4                     u6241:
  9733  000BE4  0E01               	movlw	1
  9734  000BE6  EFF6  F005         	goto	u6250
  9735  000BEA                     u6240:
  9736  000BEA  0E00               	movlw	0
  9737  000BEC                     u6250:
  9738  000BEC  6F7D               	movwf	_efgtoa$2990& (0+255),b
  9739  000BEE  6B7E               	clrf	(_efgtoa$2990+1)& (0+255),b
  9740  000BF0                     
  9741                           ; BSR set to: 0
  9742  000BF0  517D               	movf	_efgtoa$2990& (0+255),w,b
  9743  000BF2  117E               	iorwf	(_efgtoa$2990+1)& (0+255),w,b
  9744  000BF4  A4D8               	btfss	status,2,c
  9745  000BF6  EFFF  F005         	goto	u6261
  9746  000BFA  EF01  F006         	goto	u6260
  9747  000BFE                     u6261:
  9748  000BFE  EF07  F006         	goto	l5386
  9749  000C02                     u6260:
  9750  000C02                     
  9751                           ; BSR set to: 0
  9752  000C02  0E00               	movlw	0
  9753  000C04  6F7C               	movwf	(_efgtoa$2989+1)& (0+255),b
  9754  000C06  0E65               	movlw	101
  9755  000C08  6F7B               	movwf	_efgtoa$2989& (0+255),b
  9756  000C0A  EF0B  F006         	goto	l5388
  9757  000C0E                     l5386:
  9758                           
  9759                           ; BSR set to: 0
  9760  000C0E  0E00               	movlw	0
  9761  000C10  6F7C               	movwf	(_efgtoa$2989+1)& (0+255),b
  9762  000C12  0E45               	movlw	69
  9763  000C14  6F7B               	movwf	_efgtoa$2989& (0+255),b
  9764  000C16                     l5388:
  9765                           
  9766                           ; BSR set to: 0
  9767  000C16  0E60               	movlw	low _dbuf
  9768  000C18  2599               	addwf	efgtoa@i& (0+255),w,b
  9769  000C1A  6ED9               	movwf	fsr2l,c
  9770  000C1C  0E02               	movlw	high _dbuf
  9771  000C1E  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9772  000C20  6EDA               	movwf	fsr2h,c
  9773  000C22  C07B  FFDF         	movff	_efgtoa$2989,indf2
  9774  000C26                     
  9775                           ; BSR set to: 0
  9776                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 497:         --w;
  9777  000C26  078E               	decf	efgtoa@w& (0+255),f,b
  9778  000C28  A0D8               	btfss	status,0,c
  9779  000C2A  078F               	decf	(efgtoa@w+1)& (0+255),f,b
  9780  000C2C                     
  9781                           ; BSR set to: 0
  9782                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 498:         strc
      +                          py(&dbuf[n], &dbuf[i]);
  9783  000C2C  0E60               	movlw	low _dbuf
  9784  000C2E  25A1               	addwf	efgtoa@n& (0+255),w,b
  9785  000C30  6E01               	movwf	strcpy@dest^0,c
  9786  000C32  0E02               	movlw	high _dbuf
  9787  000C34  21A2               	addwfc	(efgtoa@n+1)& (0+255),w,b
  9788  000C36  6E02               	movwf	(strcpy@dest+1)^0,c
  9789  000C38  0E60               	movlw	low _dbuf
  9790  000C3A  2599               	addwf	efgtoa@i& (0+255),w,b
  9791  000C3C  6E03               	movwf	strcpy@src^0,c
  9792  000C3E  0E02               	movlw	high _dbuf
  9793  000C40  219A               	addwfc	(efgtoa@i+1)& (0+255),w,b
  9794  000C42  6E04               	movwf	(strcpy@src+1)^0,c
  9795  000C44  ECA4  F028         	call	_strcpy	;wreg free
  9796  000C48  EF02  F001         	goto	l5144
  9797  000C4C                     l1466:
  9798  000C4C  0012               	return		;funcret
  9799  000C4E                     __end_of_efgtoa:
  9800                           	callstack 0
  9801                           
  9802 ;; *************** function _tolower *****************
  9803 ;; Defined at:
  9804 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\tolower.c"
  9805 ;; Parameters:    Size  Location     Type
  9806 ;;  c               2    6[COMRAM] int 
  9807 ;; Auto vars:     Size  Location     Type
  9808 ;;		None
  9809 ;; Return value:  Size  Location     Type
  9810 ;;                  2    6[COMRAM] int 
  9811 ;; Registers used:
  9812 ;;		wreg, status,2, status,0
  9813 ;; Tracked objects:
  9814 ;;		On entry : 0/0
  9815 ;;		On exit  : 0/0
  9816 ;;		Unchanged: 0/0
  9817 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9818 ;;      Params:         2       0       0       0       0       0       0
  9819 ;;      Locals:         2       0       0       0       0       0       0
  9820 ;;      Temps:          4       0       0       0       0       0       0
  9821 ;;      Totals:         8       0       0       0       0       0       0
  9822 ;;Total ram usage:        8 bytes
  9823 ;; Hardware stack levels used:    1
  9824 ;; Hardware stack levels required when called:    2
  9825 ;; This function calls:
  9826 ;;		_isupper
  9827 ;; This function is called by:
  9828 ;;		_efgtoa
  9829 ;;		_vfpfcnvrt
  9830 ;; This function uses a non-reentrant model
  9831 ;;
  9832                           
  9833                           	psect	text35
  9834  0050E8                     __ptext35:
  9835                           	callstack 0
  9836  0050E8                     _tolower:
  9837                           	callstack 22
  9838  0050E8  0EBF               	movlw	191
  9839  0050EA  6E09               	movwf	??_tolower^0,c
  9840  0050EC  0EFF               	movlw	255
  9841  0050EE  6E0A               	movwf	(??_tolower+1)^0,c
  9842  0050F0  C007  F00B         	movff	tolower@c,??_tolower+2
  9843  0050F4  C008  F00C         	movff	tolower@c+1,??_tolower+3
  9844  0050F8  5009               	movf	??_tolower^0,w,c
  9845  0050FA  260B               	addwf	(??_tolower+2)^0,f,c
  9846  0050FC  500A               	movf	(??_tolower+1)^0,w,c
  9847  0050FE  220C               	addwfc	(??_tolower+3)^0,f,c
  9848  005100  500C               	movf	(??_tolower+3)^0,w,c
  9849  005102  E10A               	bnz	u5430
  9850  005104  0E1A               	movlw	26
  9851  005106  5C0B               	subwf	(??_tolower+2)^0,w,c
  9852  005108  A0D8               	btfss	status,0,c
  9853  00510A  EF89  F028         	goto	u5431
  9854  00510E  EF8C  F028         	goto	u5430
  9855  005112                     u5431:
  9856  005112  0E01               	movlw	1
  9857  005114  EF8D  F028         	goto	u5440
  9858  005118                     u5430:
  9859  005118  0E00               	movlw	0
  9860  00511A                     u5440:
  9861  00511A  6E0D               	movwf	_tolower$3141^0,c
  9862  00511C  6A0E               	clrf	(_tolower$3141+1)^0,c
  9863  00511E  500D               	movf	_tolower$3141^0,w,c
  9864  005120  100E               	iorwf	(_tolower$3141+1)^0,w,c
  9865  005122  B4D8               	btfsc	status,2,c
  9866  005124  EF96  F028         	goto	u5451
  9867  005128  EF98  F028         	goto	u5450
  9868  00512C                     u5451:
  9869  00512C  EF9F  F028         	goto	l1714
  9870  005130                     u5450:
  9871  005130  0E20               	movlw	32
  9872  005132  1007               	iorwf	tolower@c^0,w,c
  9873  005134  6E07               	movwf	?_tolower^0,c
  9874  005136  5008               	movf	(tolower@c+1)^0,w,c
  9875  005138  6E08               	movwf	(?_tolower+1)^0,c
  9876  00513A  EFA3  F028         	goto	l1719
  9877  00513E                     l1714:
  9878  00513E  C007  F007         	movff	tolower@c,?_tolower
  9879  005142  C008  F008         	movff	tolower@c+1,?_tolower+1
  9880  005146                     l1719:
  9881  005146  0012               	return		;funcret
  9882  005148                     __end_of_tolower:
  9883                           	callstack 0
  9884                           
  9885 ;; *************** function _isupper *****************
  9886 ;; Defined at:
  9887 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isupper.c"
  9888 ;; Parameters:    Size  Location     Type
  9889 ;;  c               2    0[COMRAM] int 
  9890 ;; Auto vars:     Size  Location     Type
  9891 ;;		None
  9892 ;; Return value:  Size  Location     Type
  9893 ;;                  2    0[COMRAM] int 
  9894 ;; Registers used:
  9895 ;;		wreg, status,2, status,0
  9896 ;; Tracked objects:
  9897 ;;		On entry : 0/0
  9898 ;;		On exit  : 0/0
  9899 ;;		Unchanged: 0/0
  9900 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9901 ;;      Params:         2       0       0       0       0       0       0
  9902 ;;      Locals:         0       0       0       0       0       0       0
  9903 ;;      Temps:          4       0       0       0       0       0       0
  9904 ;;      Totals:         6       0       0       0       0       0       0
  9905 ;;Total ram usage:        6 bytes
  9906 ;; Hardware stack levels used:    1
  9907 ;; Hardware stack levels required when called:    1
  9908 ;; This function calls:
  9909 ;;		Nothing
  9910 ;; This function is called by:
  9911 ;;		_efgtoa
  9912 ;;		_vfpfcnvrt
  9913 ;;		_tolower
  9914 ;; This function uses a non-reentrant model
  9915 ;;
  9916                           
  9917                           	psect	text36
  9918  005506                     __ptext36:
  9919                           	callstack 0
  9920  005506                     _isupper:
  9921                           	callstack 22
  9922  005506  0EBF               	movlw	191
  9923  005508  6E03               	movwf	??_isupper^0,c
  9924  00550A  0EFF               	movlw	255
  9925  00550C  6E04               	movwf	(??_isupper+1)^0,c
  9926  00550E  C001  F005         	movff	isupper@c,??_isupper+2
  9927  005512  C002  F006         	movff	isupper@c+1,??_isupper+3
  9928  005516  5003               	movf	??_isupper^0,w,c
  9929  005518  2605               	addwf	(??_isupper+2)^0,f,c
  9930  00551A  5004               	movf	(??_isupper+1)^0,w,c
  9931  00551C  2206               	addwfc	(??_isupper+3)^0,f,c
  9932  00551E  5006               	movf	(??_isupper+3)^0,w,c
  9933  005520  E10A               	bnz	u4440
  9934  005522  0E1A               	movlw	26
  9935  005524  5C05               	subwf	(??_isupper+2)^0,w,c
  9936  005526  A0D8               	btfss	status,0,c
  9937  005528  EF98  F02A         	goto	u4441
  9938  00552C  EF9B  F02A         	goto	u4440
  9939  005530                     u4441:
  9940  005530  0E01               	movlw	1
  9941  005532  EF9C  F02A         	goto	u4450
  9942  005536                     u4440:
  9943  005536  0E00               	movlw	0
  9944  005538                     u4450:
  9945  005538  6E01               	movwf	?_isupper^0,c
  9946  00553A  6A02               	clrf	(?_isupper+1)^0,c
  9947  00553C  0012               	return		;funcret
  9948  00553E                     __end_of_isupper:
  9949                           	callstack 0
  9950                           
  9951 ;; *************** function _strcpy *****************
  9952 ;; Defined at:
  9953 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strcpy.c"
  9954 ;; Parameters:    Size  Location     Type
  9955 ;;  dest            2    0[COMRAM] PTR unsigned char 
  9956 ;;		 -> dbuf(80), 
  9957 ;;  src             2    2[COMRAM] PTR const unsigned char 
  9958 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  9959 ;;		 -> dbuf(80), 
  9960 ;; Auto vars:     Size  Location     Type
  9961 ;;  d               2    8[COMRAM] PTR unsigned char 
  9962 ;;		 -> dbuf(80), 
  9963 ;;  s               2    6[COMRAM] PTR const unsigned char 
  9964 ;;		 -> STR_24(4), STR_23(4), STR_20(4), STR_19(4), 
  9965 ;;		 -> dbuf(80), 
  9966 ;; Return value:  Size  Location     Type
  9967 ;;                  2    0[COMRAM] PTR unsigned char 
  9968 ;; Registers used:
  9969 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
  9970 ;; Tracked objects:
  9971 ;;		On entry : 0/0
  9972 ;;		On exit  : 0/0
  9973 ;;		Unchanged: 0/0
  9974 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
  9975 ;;      Params:         4       0       0       0       0       0       0
  9976 ;;      Locals:         4       0       0       0       0       0       0
  9977 ;;      Temps:          2       0       0       0       0       0       0
  9978 ;;      Totals:        10       0       0       0       0       0       0
  9979 ;;Total ram usage:       10 bytes
  9980 ;; Hardware stack levels used:    1
  9981 ;; Hardware stack levels required when called:    1
  9982 ;; This function calls:
  9983 ;;		Nothing
  9984 ;; This function is called by:
  9985 ;;		_efgtoa
  9986 ;; This function uses a non-reentrant model
  9987 ;;
  9988                           
  9989                           	psect	text37
  9990  005148                     __ptext37:
  9991                           	callstack 0
  9992  005148                     _strcpy:
  9993                           	callstack 22
  9994  005148  C003  F007         	movff	strcpy@src,strcpy@s
  9995  00514C  C004  F008         	movff	strcpy@src+1,strcpy@s+1
  9996  005150  C001  F009         	movff	strcpy@dest,strcpy@d
  9997  005154  C002  F00A         	movff	strcpy@dest+1,strcpy@d+1
  9998  005158                     l4982:
  9999  005158  5007               	movf	strcpy@s^0,w,c
 10000  00515A  6E05               	movwf	??_strcpy^0,c
 10001  00515C  5008               	movf	(strcpy@s+1)^0,w,c
 10002  00515E  6E06               	movwf	(??_strcpy+1)^0,c
 10003  005160  4A07               	infsnz	strcpy@s^0,f,c
 10004  005162  2A08               	incf	(strcpy@s+1)^0,f,c
 10005  005164  C005  FFF6         	movff	??_strcpy,tblptrl
 10006  005168  C006  FFF7         	movff	??_strcpy+1,tblptrh
 10007  00516C  6AF8               	clrf	tblptru,c
 10008  00516E  C009  FFD9         	movff	strcpy@d,fsr2l
 10009  005172  C00A  FFDA         	movff	strcpy@d+1,fsr2h
 10010  005176  4A09               	infsnz	strcpy@d^0,f,c
 10011  005178  2A0A               	incf	(strcpy@d+1)^0,f,c
 10012  00517A  0E05               	movlw	(high __ramtop+-1)
 10013  00517C  64F7               	cpfsgt	tblptrh,c
 10014  00517E  D003               	bra	u5417
 10015  005180  0008               	tblrd		*
 10016  005182  50F5               	movf	tablat,w,c
 10017  005184  D005               	bra	u5410
 10018  005186                     u5417:
 10019  005186  CFF6 FFE1          	movff	tblptrl,fsr1l
 10020  00518A  CFF7 FFE2          	movff	tblptrh,fsr1h
 10021  00518E  50E7               	movf	indf1,w,c
 10022  005190                     u5410:
 10023  005190  6EDF               	movwf	indf2,c
 10024  005192  50DF               	movf	indf2,w,c
 10025  005194  A4D8               	btfss	status,2,c
 10026  005196  EFCF  F028         	goto	u5421
 10027  00519A  EFD1  F028         	goto	u5420
 10028  00519E                     u5421:
 10029  00519E  EFAC  F028         	goto	l4982
 10030  0051A2                     u5420:
 10031  0051A2  0012               	return		;funcret
 10032  0051A4                     __end_of_strcpy:
 10033                           	callstack 0
 10034                           
 10035 ;; *************** function _floorf *****************
 10036 ;; Defined at:
 10037 ;;		line 3 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\floorf.c"
 10038 ;; Parameters:    Size  Location     Type
 10039 ;;  x               4   77[COMRAM] float 
 10040 ;; Auto vars:     Size  Location     Type
 10041 ;;  u               4    6[BANK0 ] struct .
 10042 ;;  m               4    0[BANK0 ] unsigned long 
 10043 ;;  e               2    4[BANK0 ] int 
 10044 ;; Return value:  Size  Location     Type
 10045 ;;                  4   77[COMRAM] float 
 10046 ;; Registers used:
 10047 ;;		wreg, status,2, status,0
 10048 ;; Tracked objects:
 10049 ;;		On entry : 0/0
 10050 ;;		On exit  : 0/0
 10051 ;;		Unchanged: 0/0
 10052 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10053 ;;      Params:         4       0       0       0       0       0       0
 10054 ;;      Locals:         0      10       0       0       0       0       0
 10055 ;;      Temps:          6       0       0       0       0       0       0
 10056 ;;      Totals:        10      10       0       0       0       0       0
 10057 ;;Total ram usage:       20 bytes
 10058 ;; Hardware stack levels used:    1
 10059 ;; Hardware stack levels required when called:    1
 10060 ;; This function calls:
 10061 ;;		Nothing
 10062 ;; This function is called by:
 10063 ;;		_efgtoa
 10064 ;; This function uses a non-reentrant model
 10065 ;;
 10066                           
 10067                           	psect	text38
 10068  002FB4                     __ptext38:
 10069                           	callstack 0
 10070  002FB4                     _floorf:
 10071                           	callstack 22
 10072  002FB4  C1A3  F066         	movff	floorf@F524,floorf@u
 10073  002FB8  C1A4  F067         	movff	floorf@F524+1,floorf@u+1
 10074  002FBC  C1A5  F068         	movff	floorf@F524+2,floorf@u+2
 10075  002FC0  C1A6  F069         	movff	floorf@F524+3,floorf@u+3
 10076  002FC4  C04E  F066         	movff	floorf@x,floorf@u
 10077  002FC8  C04F  F067         	movff	floorf@x+1,floorf@u+1
 10078  002FCC  C050  F068         	movff	floorf@x+2,floorf@u+2
 10079  002FD0  C051  F069         	movff	floorf@x+3,floorf@u+3
 10080  002FD4  0E81               	movlw	129
 10081  002FD6  6E52               	movwf	??_floorf^0,c
 10082  002FD8  0EFF               	movlw	255
 10083  002FDA  6E53               	movwf	(??_floorf+1)^0,c
 10084  002FDC  C066  F054         	movff	floorf@u,??_floorf+2
 10085  002FE0  C067  F055         	movff	floorf@u+1,??_floorf+3
 10086  002FE4  C068  F056         	movff	floorf@u+2,??_floorf+4
 10087  002FE8  C069  F057         	movff	floorf@u+3,??_floorf+5
 10088  002FEC  0E18               	movlw	24
 10089  002FEE  EFFE  F017         	goto	u5460
 10090  002FF2                     u5465:
 10091  002FF2  90D8               	bcf	status,0,c
 10092  002FF4  3257               	rrcf	(??_floorf+5)^0,f,c
 10093  002FF6  3256               	rrcf	(??_floorf+4)^0,f,c
 10094  002FF8  3255               	rrcf	(??_floorf+3)^0,f,c
 10095  002FFA  3254               	rrcf	(??_floorf+2)^0,f,c
 10096  002FFC                     u5460:
 10097  002FFC  2EE8               	decfsz	wreg,f,c
 10098  002FFE  EFF9  F017         	goto	u5465
 10099  003002  5054               	movf	(??_floorf+2)^0,w,c
 10100  003004  2452               	addwf	??_floorf^0,w,c
 10101  003006  0100               	movlb	0	; () banked
 10102  003008  6F64               	movwf	floorf@e& (0+255),b
 10103  00300A  0E00               	movlw	0
 10104  00300C  2053               	addwfc	(??_floorf+1)^0,w,c
 10105  00300E  6F65               	movwf	(floorf@e+1)& (0+255),b
 10106  003010  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10107  003012  EF14  F018         	goto	u5471
 10108  003016  5165               	movf	(floorf@e+1)& (0+255),w,b
 10109  003018  E109               	bnz	u5470
 10110  00301A  0E17               	movlw	23
 10111  00301C  5D64               	subwf	floorf@e& (0+255),w,b
 10112  00301E  A0D8               	btfss	status,0,c
 10113  003020  EF14  F018         	goto	u5471
 10114  003024  EF16  F018         	goto	u5470
 10115  003028                     u5471:
 10116  003028  EF20  F018         	goto	l5000
 10117  00302C                     u5470:
 10118  00302C                     l4998:
 10119                           
 10120                           ; BSR set to: 0
 10121  00302C  C04E  F04E         	movff	floorf@x,?_floorf
 10122  003030  C04F  F04F         	movff	floorf@x+1,?_floorf+1
 10123  003034  C050  F050         	movff	floorf@x+2,?_floorf+2
 10124  003038  C051  F051         	movff	floorf@x+3,?_floorf+3
 10125  00303C  EFE4  F018         	goto	l1638
 10126  003040                     l5000:
 10127                           
 10128                           ; BSR set to: 0
 10129  003040  BF65               	btfsc	(floorf@e+1)& (0+255),7,b
 10130  003042  EF25  F018         	goto	u5481
 10131  003046  EF27  F018         	goto	u5480
 10132  00304A                     u5481:
 10133  00304A  EF98  F018         	goto	l5010
 10134  00304E                     u5480:
 10135  00304E                     
 10136                           ; BSR set to: 0
 10137  00304E  C064  F052         	movff	floorf@e,??_floorf
 10138  003052  0EFF               	movlw	255
 10139  003054  6E53               	movwf	(??_floorf+1)^0,c
 10140  003056  0EFF               	movlw	255
 10141  003058  6E54               	movwf	(??_floorf+2)^0,c
 10142  00305A  0E7F               	movlw	127
 10143  00305C  6E55               	movwf	(??_floorf+3)^0,c
 10144  00305E  0E00               	movlw	0
 10145  003060  6E56               	movwf	(??_floorf+4)^0,c
 10146  003062                     u5495:
 10147  003062  6652               	tstfsz	??_floorf^0,c
 10148  003064  EF36  F018         	goto	u5496
 10149  003068  EF3E  F018         	goto	u5497
 10150  00306C                     u5496:
 10151  00306C  3456               	rlcf	(??_floorf+4)^0,w,c
 10152  00306E  3256               	rrcf	(??_floorf+4)^0,f,c
 10153  003070  3255               	rrcf	(??_floorf+3)^0,f,c
 10154  003072  3254               	rrcf	(??_floorf+2)^0,f,c
 10155  003074  3253               	rrcf	(??_floorf+1)^0,f,c
 10156  003076  2E52               	decfsz	??_floorf^0,f,c
 10157  003078  EF31  F018         	goto	u5495
 10158  00307C                     u5497:
 10159  00307C  C053  F060         	movff	??_floorf+1,floorf@m
 10160  003080  C054  F061         	movff	??_floorf+2,floorf@m+1
 10161  003084  C055  F062         	movff	??_floorf+3,floorf@m+2
 10162  003088  C056  F063         	movff	??_floorf+4,floorf@m+3
 10163  00308C  0100               	movlb	0	; () banked
 10164  00308E  5160               	movf	floorf@m& (0+255),w,b
 10165  003090  1566               	andwf	floorf@u& (0+255),w,b
 10166  003092  6E52               	movwf	??_floorf^0,c
 10167  003094  5161               	movf	(floorf@m+1)& (0+255),w,b
 10168  003096  1567               	andwf	(floorf@u+1)& (0+255),w,b
 10169  003098  6E53               	movwf	(??_floorf+1)^0,c
 10170  00309A  5162               	movf	(floorf@m+2)& (0+255),w,b
 10171  00309C  1568               	andwf	(floorf@u+2)& (0+255),w,b
 10172  00309E  6E54               	movwf	(??_floorf+2)^0,c
 10173  0030A0  5163               	movf	(floorf@m+3)& (0+255),w,b
 10174  0030A2  1569               	andwf	(floorf@u+3)& (0+255),w,b
 10175  0030A4  6E55               	movwf	(??_floorf+3)^0,c
 10176  0030A6  5052               	movf	??_floorf^0,w,c
 10177  0030A8  1053               	iorwf	(??_floorf+1)^0,w,c
 10178  0030AA  1054               	iorwf	(??_floorf+2)^0,w,c
 10179  0030AC  1055               	iorwf	(??_floorf+3)^0,w,c
 10180  0030AE  A4D8               	btfss	status,2,c
 10181  0030B0  EF5C  F018         	goto	u5501
 10182  0030B4  EF5E  F018         	goto	u5500
 10183  0030B8                     u5501:
 10184  0030B8  EF60  F018         	goto	l5006
 10185  0030BC                     u5500:
 10186  0030BC  EF16  F018         	goto	l4998
 10187  0030C0                     l5006:
 10188                           
 10189                           ; BSR set to: 0
 10190  0030C0  C066  F052         	movff	floorf@u,??_floorf
 10191  0030C4  C067  F053         	movff	floorf@u+1,??_floorf+1
 10192  0030C8  C068  F054         	movff	floorf@u+2,??_floorf+2
 10193  0030CC  C069  F055         	movff	floorf@u+3,??_floorf+3
 10194  0030D0  0E20               	movlw	32
 10195  0030D2  EF70  F018         	goto	u5510
 10196  0030D6                     u5515:
 10197  0030D6  90D8               	bcf	status,0,c
 10198  0030D8  3255               	rrcf	(??_floorf+3)^0,f,c
 10199  0030DA  3254               	rrcf	(??_floorf+2)^0,f,c
 10200  0030DC  3253               	rrcf	(??_floorf+1)^0,f,c
 10201  0030DE  3252               	rrcf	??_floorf^0,f,c
 10202  0030E0                     u5510:
 10203  0030E0  2EE8               	decfsz	wreg,f,c
 10204  0030E2  EF6B  F018         	goto	u5515
 10205  0030E6  5052               	movf	??_floorf^0,w,c
 10206  0030E8  1053               	iorwf	(??_floorf+1)^0,w,c
 10207  0030EA  1054               	iorwf	(??_floorf+2)^0,w,c
 10208  0030EC  1055               	iorwf	(??_floorf+3)^0,w,c
 10209  0030EE  B4D8               	btfsc	status,2,c
 10210  0030F0  EF7C  F018         	goto	u5521
 10211  0030F4  EF7E  F018         	goto	u5520
 10212  0030F8                     u5521:
 10213  0030F8  EF86  F018         	goto	l1641
 10214  0030FC                     u5520:
 10215  0030FC                     
 10216                           ; BSR set to: 0
 10217  0030FC  5160               	movf	floorf@m& (0+255),w,b
 10218  0030FE  2766               	addwf	floorf@u& (0+255),f,b
 10219  003100  5161               	movf	(floorf@m+1)& (0+255),w,b
 10220  003102  2367               	addwfc	(floorf@u+1)& (0+255),f,b
 10221  003104  5162               	movf	(floorf@m+2)& (0+255),w,b
 10222  003106  2368               	addwfc	(floorf@u+2)& (0+255),f,b
 10223  003108  5163               	movf	(floorf@m+3)& (0+255),w,b
 10224  00310A  2369               	addwfc	(floorf@u+3)& (0+255),f,b
 10225  00310C                     l1641:
 10226                           
 10227                           ; BSR set to: 0
 10228  00310C  1D60               	comf	floorf@m& (0+255),w,b
 10229  00310E  6E52               	movwf	??_floorf^0,c
 10230  003110  1D61               	comf	(floorf@m+1)& (0+255),w,b
 10231  003112  6E53               	movwf	(??_floorf+1)^0,c
 10232  003114  1D62               	comf	(floorf@m+2)& (0+255),w,b
 10233  003116  6E54               	movwf	(??_floorf+2)^0,c
 10234  003118  1D63               	comf	(floorf@m+3)& (0+255),w,b
 10235  00311A  6E55               	movwf	(??_floorf+3)^0,c
 10236  00311C  5052               	movf	??_floorf^0,w,c
 10237  00311E  1766               	andwf	floorf@u& (0+255),f,b
 10238  003120  5053               	movf	(??_floorf+1)^0,w,c
 10239  003122  1767               	andwf	(floorf@u+1)& (0+255),f,b
 10240  003124  5054               	movf	(??_floorf+2)^0,w,c
 10241  003126  1768               	andwf	(floorf@u+2)& (0+255),f,b
 10242  003128  5055               	movf	(??_floorf+3)^0,w,c
 10243  00312A  1769               	andwf	(floorf@u+3)& (0+255),f,b
 10244  00312C  EFDC  F018         	goto	l5018
 10245  003130                     l5010:
 10246                           
 10247                           ; BSR set to: 0
 10248  003130  C066  F052         	movff	floorf@u,??_floorf
 10249  003134  C067  F053         	movff	floorf@u+1,??_floorf+1
 10250  003138  C068  F054         	movff	floorf@u+2,??_floorf+2
 10251  00313C  C069  F055         	movff	floorf@u+3,??_floorf+3
 10252  003140  0E20               	movlw	32
 10253  003142  EFA8  F018         	goto	u5530
 10254  003146                     u5535:
 10255  003146  90D8               	bcf	status,0,c
 10256  003148  3255               	rrcf	(??_floorf+3)^0,f,c
 10257  00314A  3254               	rrcf	(??_floorf+2)^0,f,c
 10258  00314C  3253               	rrcf	(??_floorf+1)^0,f,c
 10259  00314E  3252               	rrcf	??_floorf^0,f,c
 10260  003150                     u5530:
 10261  003150  2EE8               	decfsz	wreg,f,c
 10262  003152  EFA3  F018         	goto	u5535
 10263  003156  5052               	movf	??_floorf^0,w,c
 10264  003158  1053               	iorwf	(??_floorf+1)^0,w,c
 10265  00315A  1054               	iorwf	(??_floorf+2)^0,w,c
 10266  00315C  1055               	iorwf	(??_floorf+3)^0,w,c
 10267  00315E  A4D8               	btfss	status,2,c
 10268  003160  EFB4  F018         	goto	u5541
 10269  003164  EFB6  F018         	goto	u5540
 10270  003168                     u5541:
 10271  003168  EFC0  F018         	goto	l5014
 10272  00316C                     u5540:
 10273  00316C                     
 10274                           ; BSR set to: 0
 10275  00316C  0E00               	movlw	0
 10276  00316E  6F66               	movwf	floorf@u& (0+255),b
 10277  003170  0E00               	movlw	0
 10278  003172  6F67               	movwf	(floorf@u+1)& (0+255),b
 10279  003174  0E00               	movlw	0
 10280  003176  6F68               	movwf	(floorf@u+2)& (0+255),b
 10281  003178  0E00               	movlw	0
 10282  00317A  6F69               	movwf	(floorf@u+3)& (0+255),b
 10283  00317C  EFDC  F018         	goto	l5018
 10284  003180                     l5014:
 10285                           
 10286                           ; BSR set to: 0
 10287  003180  90D8               	bcf	status,0,c
 10288  003182  3566               	rlcf	floorf@u& (0+255),w,b
 10289  003184  6E52               	movwf	??_floorf^0,c
 10290  003186  3567               	rlcf	(floorf@u+1)& (0+255),w,b
 10291  003188  6E53               	movwf	(??_floorf+1)^0,c
 10292  00318A  3568               	rlcf	(floorf@u+2)& (0+255),w,b
 10293  00318C  6E54               	movwf	(??_floorf+2)^0,c
 10294  00318E  3569               	rlcf	(floorf@u+3)& (0+255),w,b
 10295  003190  6E55               	movwf	(??_floorf+3)^0,c
 10296  003192  5052               	movf	??_floorf^0,w,c
 10297  003194  1053               	iorwf	(??_floorf+1)^0,w,c
 10298  003196  1054               	iorwf	(??_floorf+2)^0,w,c
 10299  003198  1055               	iorwf	(??_floorf+3)^0,w,c
 10300  00319A  B4D8               	btfsc	status,2,c
 10301  00319C  EFD2  F018         	goto	u5551
 10302  0031A0  EFD4  F018         	goto	u5550
 10303  0031A4                     u5551:
 10304  0031A4  EFDC  F018         	goto	l5018
 10305  0031A8                     u5550:
 10306  0031A8                     
 10307                           ; BSR set to: 0
 10308  0031A8  0E00               	movlw	0
 10309  0031AA  6F66               	movwf	floorf@u& (0+255),b
 10310  0031AC  0E00               	movlw	0
 10311  0031AE  6F67               	movwf	(floorf@u+1)& (0+255),b
 10312  0031B0  0E80               	movlw	128
 10313  0031B2  6F68               	movwf	(floorf@u+2)& (0+255),b
 10314  0031B4  0EBF               	movlw	191
 10315  0031B6  6F69               	movwf	(floorf@u+3)& (0+255),b
 10316  0031B8                     l5018:
 10317                           
 10318                           ; BSR set to: 0
 10319  0031B8  C066  F04E         	movff	floorf@u,?_floorf
 10320  0031BC  C067  F04F         	movff	floorf@u+1,?_floorf+1
 10321  0031C0  C068  F050         	movff	floorf@u+2,?_floorf+2
 10322  0031C4  C069  F051         	movff	floorf@u+3,?_floorf+3
 10323  0031C8                     l1638:
 10324                           
 10325                           ; BSR set to: 0
 10326  0031C8  0012               	return		;funcret
 10327  0031CA                     __end_of_floorf:
 10328                           	callstack 0
 10329                           
 10330 ;; *************** function ___fpclassifyf *****************
 10331 ;; Defined at:
 10332 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\__fpclassifyf.c"
 10333 ;; Parameters:    Size  Location     Type
 10334 ;;  x               4    0[COMRAM] float 
 10335 ;; Auto vars:     Size  Location     Type
 10336 ;;  u               4   10[COMRAM] struct .
 10337 ;;  e               2    8[COMRAM] int 
 10338 ;; Return value:  Size  Location     Type
 10339 ;;                  2    0[COMRAM] int 
 10340 ;; Registers used:
 10341 ;;		wreg, status,2, status,0
 10342 ;; Tracked objects:
 10343 ;;		On entry : 0/0
 10344 ;;		On exit  : 0/0
 10345 ;;		Unchanged: 0/0
 10346 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10347 ;;      Params:         4       0       0       0       0       0       0
 10348 ;;      Locals:         6       0       0       0       0       0       0
 10349 ;;      Temps:          4       0       0       0       0       0       0
 10350 ;;      Totals:        14       0       0       0       0       0       0
 10351 ;;Total ram usage:       14 bytes
 10352 ;; Hardware stack levels used:    1
 10353 ;; Hardware stack levels required when called:    1
 10354 ;; This function calls:
 10355 ;;		Nothing
 10356 ;; This function is called by:
 10357 ;;		_efgtoa
 10358 ;; This function uses a non-reentrant model
 10359 ;;
 10360                           
 10361                           	psect	text39
 10362  0044B4                     __ptext39:
 10363                           	callstack 0
 10364  0044B4                     ___fpclassifyf:
 10365                           	callstack 22
 10366  0044B4  C1A7  F00B         	movff	___fpclassifyf@F463,___fpclassifyf@u
 10367  0044B8  C1A8  F00C         	movff	___fpclassifyf@F463+1,___fpclassifyf@u+1
 10368  0044BC  C1A9  F00D         	movff	___fpclassifyf@F463+2,___fpclassifyf@u+2
 10369  0044C0  C1AA  F00E         	movff	___fpclassifyf@F463+3,___fpclassifyf@u+3
 10370  0044C4  C001  F00B         	movff	___fpclassifyf@x,___fpclassifyf@u
 10371  0044C8  C002  F00C         	movff	___fpclassifyf@x+1,___fpclassifyf@u+1
 10372  0044CC  C003  F00D         	movff	___fpclassifyf@x+2,___fpclassifyf@u+2
 10373  0044D0  C004  F00E         	movff	___fpclassifyf@x+3,___fpclassifyf@u+3
 10374  0044D4  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10375  0044D8  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10376  0044DC  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10377  0044E0  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10378  0044E4  0E18               	movlw	24
 10379  0044E6  EF7A  F022         	goto	u5340
 10380  0044EA                     u5345:
 10381  0044EA  90D8               	bcf	status,0,c
 10382  0044EC  3208               	rrcf	(??___fpclassifyf+3)^0,f,c
 10383  0044EE  3207               	rrcf	(??___fpclassifyf+2)^0,f,c
 10384  0044F0  3206               	rrcf	(??___fpclassifyf+1)^0,f,c
 10385  0044F2  3205               	rrcf	??___fpclassifyf^0,f,c
 10386  0044F4                     u5340:
 10387  0044F4  2EE8               	decfsz	wreg,f,c
 10388  0044F6  EF75  F022         	goto	u5345
 10389  0044FA  5005               	movf	??___fpclassifyf^0,w,c
 10390  0044FC  6E09               	movwf	___fpclassifyf@e^0,c
 10391  0044FE  6A0A               	clrf	(___fpclassifyf@e+1)^0,c
 10392  004500  5009               	movf	___fpclassifyf@e^0,w,c
 10393  004502  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10394  004504  A4D8               	btfss	status,2,c
 10395  004506  EF87  F022         	goto	u5351
 10396  00450A  EF89  F022         	goto	u5350
 10397  00450E                     u5351:
 10398  00450E  EFA9  F022         	goto	l4970
 10399  004512                     u5350:
 10400  004512  90D8               	bcf	status,0,c
 10401  004514  340B               	rlcf	___fpclassifyf@u^0,w,c
 10402  004516  6E05               	movwf	??___fpclassifyf^0,c
 10403  004518  340C               	rlcf	(___fpclassifyf@u+1)^0,w,c
 10404  00451A  6E06               	movwf	(??___fpclassifyf+1)^0,c
 10405  00451C  340D               	rlcf	(___fpclassifyf@u+2)^0,w,c
 10406  00451E  6E07               	movwf	(??___fpclassifyf+2)^0,c
 10407  004520  340E               	rlcf	(___fpclassifyf@u+3)^0,w,c
 10408  004522  6E08               	movwf	(??___fpclassifyf+3)^0,c
 10409  004524  5005               	movf	??___fpclassifyf^0,w,c
 10410  004526  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10411  004528  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10412  00452A  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10413  00452C  A4D8               	btfss	status,2,c
 10414  00452E  EF9B  F022         	goto	u5361
 10415  004532  EF9D  F022         	goto	u5360
 10416  004536                     u5361:
 10417  004536  EFA3  F022         	goto	l4966
 10418  00453A                     u5360:
 10419  00453A  0E00               	movlw	0
 10420  00453C  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10421  00453E  0E02               	movlw	2
 10422  004540  6E01               	movwf	?___fpclassifyf^0,c
 10423  004542  EFD8  F022         	goto	l1593
 10424  004546                     l4966:
 10425  004546  0E00               	movlw	0
 10426  004548  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10427  00454A  0E03               	movlw	3
 10428  00454C  6E01               	movwf	?___fpclassifyf^0,c
 10429  00454E  EFD8  F022         	goto	l1593
 10430  004552                     l4970:
 10431  004552  2809               	incf	___fpclassifyf@e^0,w,c
 10432  004554  100A               	iorwf	(___fpclassifyf@e+1)^0,w,c
 10433  004556  A4D8               	btfss	status,2,c
 10434  004558  EFB0  F022         	goto	u5371
 10435  00455C  EFB2  F022         	goto	u5370
 10436  004560                     u5371:
 10437  004560  EFD4  F022         	goto	l4976
 10438  004564                     u5370:
 10439  004564  C00B  F005         	movff	___fpclassifyf@u,??___fpclassifyf
 10440  004568  C00C  F006         	movff	___fpclassifyf@u+1,??___fpclassifyf+1
 10441  00456C  C00D  F007         	movff	___fpclassifyf@u+2,??___fpclassifyf+2
 10442  004570  C00E  F008         	movff	___fpclassifyf@u+3,??___fpclassifyf+3
 10443  004574  0E09               	movlw	9
 10444  004576                     u5385:
 10445  004576  90D8               	bcf	status,0,c
 10446  004578  3605               	rlcf	??___fpclassifyf^0,f,c
 10447  00457A  3606               	rlcf	(??___fpclassifyf+1)^0,f,c
 10448  00457C  3607               	rlcf	(??___fpclassifyf+2)^0,f,c
 10449  00457E  3608               	rlcf	(??___fpclassifyf+3)^0,f,c
 10450  004580  2EE8               	decfsz	wreg,f,c
 10451  004582  EFBB  F022         	goto	u5385
 10452  004586  5005               	movf	??___fpclassifyf^0,w,c
 10453  004588  1006               	iorwf	(??___fpclassifyf+1)^0,w,c
 10454  00458A  1007               	iorwf	(??___fpclassifyf+2)^0,w,c
 10455  00458C  1008               	iorwf	(??___fpclassifyf+3)^0,w,c
 10456  00458E  B4D8               	btfsc	status,2,c
 10457  004590  EFCC  F022         	goto	u5391
 10458  004594  EFCF  F022         	goto	u5390
 10459  004598                     u5391:
 10460  004598  0E01               	movlw	1
 10461  00459A  EFD0  F022         	goto	u5400
 10462  00459E                     u5390:
 10463  00459E  0E00               	movlw	0
 10464  0045A0                     u5400:
 10465  0045A0  6E01               	movwf	?___fpclassifyf^0,c
 10466  0045A2  6A02               	clrf	(?___fpclassifyf+1)^0,c
 10467  0045A4  EFD8  F022         	goto	l1593
 10468  0045A8                     l4976:
 10469  0045A8  0E00               	movlw	0
 10470  0045AA  6E02               	movwf	(?___fpclassifyf+1)^0,c
 10471  0045AC  0E04               	movlw	4
 10472  0045AE  6E01               	movwf	?___fpclassifyf^0,c
 10473  0045B0                     l1593:
 10474  0045B0  0012               	return		;funcret
 10475  0045B2                     __end_of___fpclassifyf:
 10476                           	callstack 0
 10477                           
 10478 ;; *************** function ___fltol *****************
 10479 ;; Defined at:
 10480 ;;		line 43 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fltol.c"
 10481 ;; Parameters:    Size  Location     Type
 10482 ;;  f1              4   77[COMRAM] int 
 10483 ;; Auto vars:     Size  Location     Type
 10484 ;;  exp1            1   86[COMRAM] unsigned char 
 10485 ;;  sign1           1   85[COMRAM] unsigned char 
 10486 ;; Return value:  Size  Location     Type
 10487 ;;                  4   77[COMRAM] long 
 10488 ;; Registers used:
 10489 ;;		wreg, status,2, status,0
 10490 ;; Tracked objects:
 10491 ;;		On entry : 0/0
 10492 ;;		On exit  : 0/0
 10493 ;;		Unchanged: 0/0
 10494 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10495 ;;      Params:         4       0       0       0       0       0       0
 10496 ;;      Locals:         2       0       0       0       0       0       0
 10497 ;;      Temps:          4       0       0       0       0       0       0
 10498 ;;      Totals:        10       0       0       0       0       0       0
 10499 ;;Total ram usage:       10 bytes
 10500 ;; Hardware stack levels used:    1
 10501 ;; Hardware stack levels required when called:    1
 10502 ;; This function calls:
 10503 ;;		Nothing
 10504 ;; This function is called by:
 10505 ;;		_scanAdcConversion
 10506 ;;		_PWM1_setDC
 10507 ;;		_PWM2_setDC
 10508 ;;		_speedControl
 10509 ;;		_efgtoa
 10510 ;; This function uses a non-reentrant model
 10511 ;;
 10512                           
 10513                           	psect	text40
 10514  0041A6                     __ptext40:
 10515                           	callstack 0
 10516  0041A6                     ___fltol:
 10517                           	callstack 24
 10518  0041A6  3450               	rlcf	(___fltol@f1+2)^0,w,c
 10519  0041A8  3451               	rlcf	(___fltol@f1+3)^0,w,c
 10520  0041AA  6E57               	movwf	___fltol@exp1^0,c
 10521  0041AC  5057               	movf	___fltol@exp1^0,w,c
 10522  0041AE  A4D8               	btfss	status,2,c
 10523  0041B0  EFDC  F020         	goto	u5221
 10524  0041B4  EFDE  F020         	goto	u5220
 10525  0041B8                     u5221:
 10526  0041B8  EFE8  F020         	goto	l4894
 10527  0041BC                     u5220:
 10528  0041BC                     l4890:
 10529  0041BC  0E00               	movlw	0
 10530  0041BE  6E4E               	movwf	?___fltol^0,c
 10531  0041C0  0E00               	movlw	0
 10532  0041C2  6E4F               	movwf	(?___fltol+1)^0,c
 10533  0041C4  0E00               	movlw	0
 10534  0041C6  6E50               	movwf	(?___fltol+2)^0,c
 10535  0041C8  0E00               	movlw	0
 10536  0041CA  6E51               	movwf	(?___fltol+3)^0,c
 10537  0041CC  EF55  F021         	goto	l988
 10538  0041D0                     l4894:
 10539  0041D0  C04E  F052         	movff	___fltol@f1,??___fltol
 10540  0041D4  C04F  F053         	movff	___fltol@f1+1,??___fltol+1
 10541  0041D8  C050  F054         	movff	___fltol@f1+2,??___fltol+2
 10542  0041DC  C051  F055         	movff	___fltol@f1+3,??___fltol+3
 10543  0041E0  0E20               	movlw	32
 10544  0041E2  EFF8  F020         	goto	u5230
 10545  0041E6                     u5235:
 10546  0041E6  90D8               	bcf	status,0,c
 10547  0041E8  3255               	rrcf	(??___fltol+3)^0,f,c
 10548  0041EA  3254               	rrcf	(??___fltol+2)^0,f,c
 10549  0041EC  3253               	rrcf	(??___fltol+1)^0,f,c
 10550  0041EE  3252               	rrcf	??___fltol^0,f,c
 10551  0041F0                     u5230:
 10552  0041F0  2EE8               	decfsz	wreg,f,c
 10553  0041F2  EFF3  F020         	goto	u5235
 10554  0041F6  5052               	movf	??___fltol^0,w,c
 10555  0041F8  6E56               	movwf	___fltol@sign1^0,c
 10556  0041FA  8E50               	bsf	(___fltol@f1+2)^0,7,c
 10557  0041FC  0EFF               	movlw	255
 10558  0041FE  164E               	andwf	___fltol@f1^0,f,c
 10559  004200  0EFF               	movlw	255
 10560  004202  164F               	andwf	(___fltol@f1+1)^0,f,c
 10561  004204  0EFF               	movlw	255
 10562  004206  1650               	andwf	(___fltol@f1+2)^0,f,c
 10563  004208  0E00               	movlw	0
 10564  00420A  1651               	andwf	(___fltol@f1+3)^0,f,c
 10565  00420C  0E96               	movlw	150
 10566  00420E  5E57               	subwf	___fltol@exp1^0,f,c
 10567  004210  BE57               	btfsc	___fltol@exp1^0,7,c
 10568  004212  EF0F  F021         	goto	u5240
 10569  004216  EF0D  F021         	goto	u5241
 10570  00421A                     u5241:
 10571  00421A  EF25  F021         	goto	l4914
 10572  00421E                     u5240:
 10573  00421E  5057               	movf	___fltol@exp1^0,w,c
 10574  004220  0A80               	xorlw	128
 10575  004222  0F97               	addlw	151
 10576  004224  B0D8               	btfsc	status,0,c
 10577  004226  EF17  F021         	goto	u5251
 10578  00422A  EF19  F021         	goto	u5250
 10579  00422E                     u5251:
 10580  00422E  EF1B  F021         	goto	l4910
 10581  004232                     u5250:
 10582  004232  EFDE  F020         	goto	l4890
 10583  004236                     l4910:
 10584  004236  90D8               	bcf	status,0,c
 10585  004238  3251               	rrcf	(___fltol@f1+3)^0,f,c
 10586  00423A  3250               	rrcf	(___fltol@f1+2)^0,f,c
 10587  00423C  324F               	rrcf	(___fltol@f1+1)^0,f,c
 10588  00423E  324E               	rrcf	___fltol@f1^0,f,c
 10589  004240  3E57               	incfsz	___fltol@exp1^0,f,c
 10590  004242  EF1B  F021         	goto	l4910
 10591  004246  EF3D  F021         	goto	l4924
 10592  00424A                     l4914:
 10593  00424A  0E1F               	movlw	31
 10594  00424C  6457               	cpfsgt	___fltol@exp1^0,c
 10595  00424E  EF2B  F021         	goto	u5261
 10596  004252  EF2D  F021         	goto	u5260
 10597  004256                     u5261:
 10598  004256  EF35  F021         	goto	l4922
 10599  00425A                     u5260:
 10600  00425A  EFDE  F020         	goto	l4890
 10601  00425E                     l4920:
 10602  00425E  90D8               	bcf	status,0,c
 10603  004260  364E               	rlcf	___fltol@f1^0,f,c
 10604  004262  364F               	rlcf	(___fltol@f1+1)^0,f,c
 10605  004264  3650               	rlcf	(___fltol@f1+2)^0,f,c
 10606  004266  3651               	rlcf	(___fltol@f1+3)^0,f,c
 10607  004268  0657               	decf	___fltol@exp1^0,f,c
 10608  00426A                     l4922:
 10609  00426A  5057               	movf	___fltol@exp1^0,w,c
 10610  00426C  A4D8               	btfss	status,2,c
 10611  00426E  EF3B  F021         	goto	u5271
 10612  004272  EF3D  F021         	goto	u5270
 10613  004276                     u5271:
 10614  004276  EF2F  F021         	goto	l4920
 10615  00427A                     u5270:
 10616  00427A                     l4924:
 10617  00427A  5056               	movf	___fltol@sign1^0,w,c
 10618  00427C  B4D8               	btfsc	status,2,c
 10619  00427E  EF43  F021         	goto	u5281
 10620  004282  EF45  F021         	goto	u5280
 10621  004286                     u5281:
 10622  004286  EF4D  F021         	goto	l4928
 10623  00428A                     u5280:
 10624  00428A  1E51               	comf	(___fltol@f1+3)^0,f,c
 10625  00428C  1E50               	comf	(___fltol@f1+2)^0,f,c
 10626  00428E  1E4F               	comf	(___fltol@f1+1)^0,f,c
 10627  004290  6C4E               	negf	___fltol@f1^0,c
 10628  004292  0E00               	movlw	0
 10629  004294  224F               	addwfc	(___fltol@f1+1)^0,f,c
 10630  004296  2250               	addwfc	(___fltol@f1+2)^0,f,c
 10631  004298  2251               	addwfc	(___fltol@f1+3)^0,f,c
 10632  00429A                     l4928:
 10633  00429A  C04E  F04E         	movff	___fltol@f1,?___fltol
 10634  00429E  C04F  F04F         	movff	___fltol@f1+1,?___fltol+1
 10635  0042A2  C050  F050         	movff	___fltol@f1+2,?___fltol+2
 10636  0042A6  C051  F051         	movff	___fltol@f1+3,?___fltol+3
 10637  0042AA                     l988:
 10638  0042AA  0012               	return		;funcret
 10639  0042AC                     __end_of___fltol:
 10640                           	callstack 0
 10641                           
 10642 ;; *************** function ___flsub *****************
 10643 ;; Defined at:
 10644 ;;		line 245 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10645 ;; Parameters:    Size  Location     Type
 10646 ;;  b               4   68[COMRAM] long 
 10647 ;;  a               4   72[COMRAM] long 
 10648 ;; Auto vars:     Size  Location     Type
 10649 ;;		None
 10650 ;; Return value:  Size  Location     Type
 10651 ;;                  4   68[COMRAM] long 
 10652 ;; Registers used:
 10653 ;;		wreg, status,2, status,0, cstack
 10654 ;; Tracked objects:
 10655 ;;		On entry : 0/0
 10656 ;;		On exit  : 0/0
 10657 ;;		Unchanged: 0/0
 10658 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10659 ;;      Params:         8       0       0       0       0       0       0
 10660 ;;      Locals:         0       0       0       0       0       0       0
 10661 ;;      Temps:          0       0       0       0       0       0       0
 10662 ;;      Totals:         8       0       0       0       0       0       0
 10663 ;;Total ram usage:        8 bytes
 10664 ;; Hardware stack levels used:    1
 10665 ;; Hardware stack levels required when called:    2
 10666 ;; This function calls:
 10667 ;;		___fladd
 10668 ;; This function is called by:
 10669 ;;		_secretMenu
 10670 ;;		_efgtoa
 10671 ;; This function uses a non-reentrant model
 10672 ;;
 10673                           
 10674                           	psect	text41
 10675  005340                     __ptext41:
 10676                           	callstack 0
 10677  005340                     ___flsub:
 10678                           	callstack 21
 10679  005340  0E00               	movlw	0
 10680  005342  1A49               	xorwf	___flsub@a^0,f,c
 10681  005344  0E00               	movlw	0
 10682  005346  1A4A               	xorwf	(___flsub@a+1)^0,f,c
 10683  005348  0E00               	movlw	0
 10684  00534A  1A4B               	xorwf	(___flsub@a+2)^0,f,c
 10685  00534C  0E80               	movlw	128
 10686  00534E  1A4C               	xorwf	(___flsub@a+3)^0,f,c
 10687  005350  C045  F035         	movff	___flsub@b,___fladd@b
 10688  005354  C046  F036         	movff	___flsub@b+1,___fladd@b+1
 10689  005358  C047  F037         	movff	___flsub@b+2,___fladd@b+2
 10690  00535C  C048  F038         	movff	___flsub@b+3,___fladd@b+3
 10691  005360  C049  F039         	movff	___flsub@a,___fladd@a
 10692  005364  C04A  F03A         	movff	___flsub@a+1,___fladd@a+1
 10693  005368  C04B  F03B         	movff	___flsub@a+2,___fladd@a+2
 10694  00536C  C04C  F03C         	movff	___flsub@a+3,___fladd@a+3
 10695  005370  EC49  F00D         	call	___fladd	;wreg free
 10696  005374  C035  F045         	movff	?___fladd,?___flsub
 10697  005378  C036  F046         	movff	?___fladd+1,?___flsub+1
 10698  00537C  C037  F047         	movff	?___fladd+2,?___flsub+2
 10699  005380  C038  F048         	movff	?___fladd+3,?___flsub+3
 10700  005384  0012               	return		;funcret
 10701  005386                     __end_of___flsub:
 10702                           	callstack 0
 10703                           
 10704 ;; *************** function ___fladd *****************
 10705 ;; Defined at:
 10706 ;;		line 10 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcadd.c"
 10707 ;; Parameters:    Size  Location     Type
 10708 ;;  b               4   52[COMRAM] long 
 10709 ;;  a               4   56[COMRAM] long 
 10710 ;; Auto vars:     Size  Location     Type
 10711 ;;  grs             1   67[COMRAM] unsigned char 
 10712 ;;  bexp            1   66[COMRAM] unsigned char 
 10713 ;;  aexp            1   65[COMRAM] unsigned char 
 10714 ;;  signs           1   64[COMRAM] unsigned char 
 10715 ;; Return value:  Size  Location     Type
 10716 ;;                  4   52[COMRAM] unsigned char 
 10717 ;; Registers used:
 10718 ;;		wreg, status,2, status,0
 10719 ;; Tracked objects:
 10720 ;;		On entry : 0/0
 10721 ;;		On exit  : 0/0
 10722 ;;		Unchanged: 0/0
 10723 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 10724 ;;      Params:         8       0       0       0       0       0       0
 10725 ;;      Locals:         4       0       0       0       0       0       0
 10726 ;;      Temps:          4       0       0       0       0       0       0
 10727 ;;      Totals:        16       0       0       0       0       0       0
 10728 ;;Total ram usage:       16 bytes
 10729 ;; Hardware stack levels used:    1
 10730 ;; Hardware stack levels required when called:    1
 10731 ;; This function calls:
 10732 ;;		Nothing
 10733 ;; This function is called by:
 10734 ;;		_secretMenu
 10735 ;;		_speedControl
 10736 ;;		___flsub
 10737 ;;		_efgtoa
 10738 ;; This function uses a non-reentrant model
 10739 ;;
 10740                           
 10741                           	psect	text42
 10742  001A92                     __ptext42:
 10743                           	callstack 0
 10744  001A92                     ___fladd:
 10745                           	callstack 21
 10746  001A92  5038               	movf	(___fladd@b+3)^0,w,c
 10747  001A94  0B80               	andlw	128
 10748  001A96  6E41               	movwf	___fladd@signs^0,c
 10749  001A98  5038               	movf	(___fladd@b+3)^0,w,c
 10750  001A9A  2438               	addwf	(___fladd@b+3)^0,w,c
 10751  001A9C  6E43               	movwf	___fladd@bexp^0,c
 10752  001A9E  AE37               	btfss	(___fladd@b+2)^0,7,c
 10753  001AA0  EF54  F00D         	goto	u4031
 10754  001AA4  EF56  F00D         	goto	u4030
 10755  001AA8                     u4031:
 10756  001AA8  EF57  F00D         	goto	l4184
 10757  001AAC                     u4030:
 10758  001AAC  8043               	bsf	___fladd@bexp^0,0,c
 10759  001AAE                     l4184:
 10760  001AAE  5043               	movf	___fladd@bexp^0,w,c
 10761  001AB0  B4D8               	btfsc	status,2,c
 10762  001AB2  EF5D  F00D         	goto	u4041
 10763  001AB6  EF5F  F00D         	goto	u4040
 10764  001ABA                     u4041:
 10765  001ABA  EF74  F00D         	goto	l4194
 10766  001ABE                     u4040:
 10767  001ABE  2843               	incf	___fladd@bexp^0,w,c
 10768  001AC0  A4D8               	btfss	status,2,c
 10769  001AC2  EF65  F00D         	goto	u4051
 10770  001AC6  EF67  F00D         	goto	u4050
 10771  001ACA                     u4051:
 10772  001ACA  EF6F  F00D         	goto	l4190
 10773  001ACE                     u4050:
 10774  001ACE  0E00               	movlw	0
 10775  001AD0  6E35               	movwf	___fladd@b^0,c
 10776  001AD2  0E00               	movlw	0
 10777  001AD4  6E36               	movwf	(___fladd@b+1)^0,c
 10778  001AD6  0E00               	movlw	0
 10779  001AD8  6E37               	movwf	(___fladd@b+2)^0,c
 10780  001ADA  0E00               	movlw	0
 10781  001ADC  6E38               	movwf	(___fladd@b+3)^0,c
 10782  001ADE                     l4190:
 10783  001ADE  8E37               	bsf	(___fladd@b+2)^0,7,c
 10784  001AE0  0E00               	movlw	0
 10785  001AE2  6E38               	movwf	(___fladd@b+3)^0,c
 10786  001AE4  EF7C  F00D         	goto	l4196
 10787  001AE8                     l4194:
 10788  001AE8  0E00               	movlw	0
 10789  001AEA  6E35               	movwf	___fladd@b^0,c
 10790  001AEC  0E00               	movlw	0
 10791  001AEE  6E36               	movwf	(___fladd@b+1)^0,c
 10792  001AF0  0E00               	movlw	0
 10793  001AF2  6E37               	movwf	(___fladd@b+2)^0,c
 10794  001AF4  0E00               	movlw	0
 10795  001AF6  6E38               	movwf	(___fladd@b+3)^0,c
 10796  001AF8                     l4196:
 10797  001AF8  503C               	movf	(___fladd@a+3)^0,w,c
 10798  001AFA  0B80               	andlw	128
 10799  001AFC  6E42               	movwf	___fladd@aexp^0,c
 10800  001AFE  5041               	movf	___fladd@signs^0,w,c
 10801  001B00  1842               	xorwf	___fladd@aexp^0,w,c
 10802  001B02  B4D8               	btfsc	status,2,c
 10803  001B04  EF86  F00D         	goto	u4061
 10804  001B08  EF88  F00D         	goto	u4060
 10805  001B0C                     u4061:
 10806  001B0C  EF89  F00D         	goto	l4202
 10807  001B10                     u4060:
 10808  001B10  8C41               	bsf	___fladd@signs^0,6,c
 10809  001B12                     l4202:
 10810  001B12  503C               	movf	(___fladd@a+3)^0,w,c
 10811  001B14  243C               	addwf	(___fladd@a+3)^0,w,c
 10812  001B16  6E42               	movwf	___fladd@aexp^0,c
 10813  001B18  AE3B               	btfss	(___fladd@a+2)^0,7,c
 10814  001B1A  EF91  F00D         	goto	u4071
 10815  001B1E  EF93  F00D         	goto	u4070
 10816  001B22                     u4071:
 10817  001B22  EF94  F00D         	goto	l4208
 10818  001B26                     u4070:
 10819  001B26  8042               	bsf	___fladd@aexp^0,0,c
 10820  001B28                     l4208:
 10821  001B28  5042               	movf	___fladd@aexp^0,w,c
 10822  001B2A  B4D8               	btfsc	status,2,c
 10823  001B2C  EF9A  F00D         	goto	u4081
 10824  001B30  EF9C  F00D         	goto	u4080
 10825  001B34                     u4081:
 10826  001B34  EFB1  F00D         	goto	l4218
 10827  001B38                     u4080:
 10828  001B38  2842               	incf	___fladd@aexp^0,w,c
 10829  001B3A  A4D8               	btfss	status,2,c
 10830  001B3C  EFA2  F00D         	goto	u4091
 10831  001B40  EFA4  F00D         	goto	u4090
 10832  001B44                     u4091:
 10833  001B44  EFAC  F00D         	goto	l4214
 10834  001B48                     u4090:
 10835  001B48  0E00               	movlw	0
 10836  001B4A  6E39               	movwf	___fladd@a^0,c
 10837  001B4C  0E00               	movlw	0
 10838  001B4E  6E3A               	movwf	(___fladd@a+1)^0,c
 10839  001B50  0E00               	movlw	0
 10840  001B52  6E3B               	movwf	(___fladd@a+2)^0,c
 10841  001B54  0E00               	movlw	0
 10842  001B56  6E3C               	movwf	(___fladd@a+3)^0,c
 10843  001B58                     l4214:
 10844  001B58  8E3B               	bsf	(___fladd@a+2)^0,7,c
 10845  001B5A  0E00               	movlw	0
 10846  001B5C  6E3C               	movwf	(___fladd@a+3)^0,c
 10847  001B5E  EFB9  F00D         	goto	l4220
 10848  001B62                     l4218:
 10849  001B62  0E00               	movlw	0
 10850  001B64  6E39               	movwf	___fladd@a^0,c
 10851  001B66  0E00               	movlw	0
 10852  001B68  6E3A               	movwf	(___fladd@a+1)^0,c
 10853  001B6A  0E00               	movlw	0
 10854  001B6C  6E3B               	movwf	(___fladd@a+2)^0,c
 10855  001B6E  0E00               	movlw	0
 10856  001B70  6E3C               	movwf	(___fladd@a+3)^0,c
 10857  001B72                     l4220:
 10858  001B72  5043               	movf	___fladd@bexp^0,w,c
 10859  001B74  5C42               	subwf	___fladd@aexp^0,w,c
 10860  001B76  B0D8               	btfsc	status,0,c
 10861  001B78  EFC0  F00D         	goto	u4101
 10862  001B7C  EFC2  F00D         	goto	u4100
 10863  001B80                     u4101:
 10864  001B80  EFE9  F00D         	goto	l4256
 10865  001B84                     u4100:
 10866  001B84  AC41               	btfss	___fladd@signs^0,6,c
 10867  001B86  EFC7  F00D         	goto	u4111
 10868  001B8A  EFC9  F00D         	goto	u4110
 10869  001B8E                     u4111:
 10870  001B8E  EFCB  F00D         	goto	l4226
 10871  001B92                     u4110:
 10872  001B92  0E80               	movlw	128
 10873  001B94  1A41               	xorwf	___fladd@signs^0,f,c
 10874  001B96                     l4226:
 10875  001B96  C043  F044         	movff	___fladd@bexp,___fladd@grs
 10876  001B9A  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10877  001B9E  C044  F042         	movff	___fladd@grs,___fladd@aexp
 10878  001BA2  C035  F044         	movff	___fladd@b,___fladd@grs
 10879  001BA6  C039  F035         	movff	___fladd@a,___fladd@b
 10880  001BAA  C044  F039         	movff	___fladd@grs,___fladd@a
 10881  001BAE  C036  F044         	movff	___fladd@b+1,___fladd@grs
 10882  001BB2  C03A  F036         	movff	___fladd@a+1,___fladd@b+1
 10883  001BB6  C044  F03A         	movff	___fladd@grs,___fladd@a+1
 10884  001BBA  C037  F044         	movff	___fladd@b+2,___fladd@grs
 10885  001BBE  C03B  F037         	movff	___fladd@a+2,___fladd@b+2
 10886  001BC2  C044  F03B         	movff	___fladd@grs,___fladd@a+2
 10887  001BC6  C038  F044         	movff	___fladd@b+3,___fladd@grs
 10888  001BCA  C03C  F038         	movff	___fladd@a+3,___fladd@b+3
 10889  001BCE  C044  F03C         	movff	___fladd@grs,___fladd@a+3
 10890  001BD2                     l4256:
 10891  001BD2  0E00               	movlw	0
 10892  001BD4  6E44               	movwf	___fladd@grs^0,c
 10893  001BD6  5043               	movf	___fladd@bexp^0,w,c
 10894  001BD8  C042  F03D         	movff	___fladd@aexp,??___fladd
 10895  001BDC  6A3E               	clrf	(??___fladd+1)^0,c
 10896  001BDE  5E3D               	subwf	??___fladd^0,f,c
 10897  001BE0  0E00               	movlw	0
 10898  001BE2  5A3E               	subwfb	(??___fladd+1)^0,f,c
 10899  001BE4  BE3E               	btfsc	(??___fladd+1)^0,7,c
 10900  001BE6  EFFE  F00D         	goto	u4121
 10901  001BEA  503E               	movf	(??___fladd+1)^0,w,c
 10902  001BEC  E109               	bnz	u4120
 10903  001BEE  0E1A               	movlw	26
 10904  001BF0  5C3D               	subwf	??___fladd^0,w,c
 10905  001BF2  A0D8               	btfss	status,0,c
 10906  001BF4  EFFE  F00D         	goto	u4121
 10907  001BF8  EF00  F00E         	goto	u4120
 10908  001BFC                     u4121:
 10909  001BFC  EF37  F00E         	goto	l1220
 10910  001C00                     u4120:
 10911  001C00  5035               	movf	___fladd@b^0,w,c
 10912  001C02  1036               	iorwf	(___fladd@b+1)^0,w,c
 10913  001C04  1037               	iorwf	(___fladd@b+2)^0,w,c
 10914  001C06  1038               	iorwf	(___fladd@b+3)^0,w,c
 10915  001C08  A4D8               	btfss	status,2,c
 10916  001C0A  EF09  F00E         	goto	u4131
 10917  001C0E  EF0C  F00E         	goto	u4130
 10918  001C12                     u4131:
 10919  001C12  0E01               	movlw	1
 10920  001C14  EF0D  F00E         	goto	u4140
 10921  001C18                     u4130:
 10922  001C18  0E00               	movlw	0
 10923  001C1A                     u4140:
 10924  001C1A  6E44               	movwf	___fladd@grs^0,c
 10925  001C1C  0E00               	movlw	0
 10926  001C1E  6E35               	movwf	___fladd@b^0,c
 10927  001C20  0E00               	movlw	0
 10928  001C22  6E36               	movwf	(___fladd@b+1)^0,c
 10929  001C24  0E00               	movlw	0
 10930  001C26  6E37               	movwf	(___fladd@b+2)^0,c
 10931  001C28  0E00               	movlw	0
 10932  001C2A  6E38               	movwf	(___fladd@b+3)^0,c
 10933  001C2C  C042  F043         	movff	___fladd@aexp,___fladd@bexp
 10934  001C30  EF40  F00E         	goto	l1219
 10935  001C34                     l1221:
 10936  001C34  A044               	btfss	___fladd@grs^0,0,c
 10937  001C36  EF1F  F00E         	goto	u4151
 10938  001C3A  EF21  F00E         	goto	u4150
 10939  001C3E                     u4151:
 10940  001C3E  EF27  F00E         	goto	l4268
 10941  001C42                     u4150:
 10942  001C42  90D8               	bcf	status,0,c
 10943  001C44  3044               	rrcf	___fladd@grs^0,w,c
 10944  001C46  0901               	iorlw	1
 10945  001C48  6E44               	movwf	___fladd@grs^0,c
 10946  001C4A  EF29  F00E         	goto	l4270
 10947  001C4E                     l4268:
 10948  001C4E  90D8               	bcf	status,0,c
 10949  001C50  3244               	rrcf	___fladd@grs^0,f,c
 10950  001C52                     l4270:
 10951  001C52  A035               	btfss	___fladd@b^0,0,c
 10952  001C54  EF2E  F00E         	goto	u4161
 10953  001C58  EF30  F00E         	goto	u4160
 10954  001C5C                     u4161:
 10955  001C5C  EF31  F00E         	goto	l4274
 10956  001C60                     u4160:
 10957  001C60  8E44               	bsf	___fladd@grs^0,7,c
 10958  001C62                     l4274:
 10959  001C62  3438               	rlcf	(___fladd@b+3)^0,w,c
 10960  001C64  3238               	rrcf	(___fladd@b+3)^0,f,c
 10961  001C66  3237               	rrcf	(___fladd@b+2)^0,f,c
 10962  001C68  3236               	rrcf	(___fladd@b+1)^0,f,c
 10963  001C6A  3235               	rrcf	___fladd@b^0,f,c
 10964  001C6C  2A43               	incf	___fladd@bexp^0,f,c
 10965  001C6E                     l1220:
 10966  001C6E  5042               	movf	___fladd@aexp^0,w,c
 10967  001C70  5C43               	subwf	___fladd@bexp^0,w,c
 10968  001C72  A0D8               	btfss	status,0,c
 10969  001C74  EF3E  F00E         	goto	u4171
 10970  001C78  EF40  F00E         	goto	u4170
 10971  001C7C                     u4171:
 10972  001C7C  EF1A  F00E         	goto	l1221
 10973  001C80                     u4170:
 10974  001C80                     l1219:
 10975  001C80  BC41               	btfsc	___fladd@signs^0,6,c
 10976  001C82  EF45  F00E         	goto	u4181
 10977  001C86  EF47  F00E         	goto	u4180
 10978  001C8A                     u4181:
 10979  001C8A  EF87  F00E         	goto	l4302
 10980  001C8E                     u4180:
 10981  001C8E  5043               	movf	___fladd@bexp^0,w,c
 10982  001C90  A4D8               	btfss	status,2,c
 10983  001C92  EF4D  F00E         	goto	u4191
 10984  001C96  EF4F  F00E         	goto	u4190
 10985  001C9A                     u4191:
 10986  001C9A  EF59  F00E         	goto	l4284
 10987  001C9E                     u4190:
 10988  001C9E  0E00               	movlw	0
 10989  001CA0  6E35               	movwf	?___fladd^0,c
 10990  001CA2  0E00               	movlw	0
 10991  001CA4  6E36               	movwf	(?___fladd+1)^0,c
 10992  001CA6  0E00               	movlw	0
 10993  001CA8  6E37               	movwf	(?___fladd+2)^0,c
 10994  001CAA  0E00               	movlw	0
 10995  001CAC  6E38               	movwf	(?___fladd+3)^0,c
 10996  001CAE  EFA8  F00F         	goto	l1228
 10997  001CB2                     l4284:
 10998  001CB2  5039               	movf	___fladd@a^0,w,c
 10999  001CB4  2635               	addwf	___fladd@b^0,f,c
 11000  001CB6  503A               	movf	(___fladd@a+1)^0,w,c
 11001  001CB8  2236               	addwfc	(___fladd@b+1)^0,f,c
 11002  001CBA  503B               	movf	(___fladd@a+2)^0,w,c
 11003  001CBC  2237               	addwfc	(___fladd@b+2)^0,f,c
 11004  001CBE  503C               	movf	(___fladd@a+3)^0,w,c
 11005  001CC0  2238               	addwfc	(___fladd@b+3)^0,f,c
 11006  001CC2  A038               	btfss	(___fladd@b+3)^0,0,c
 11007  001CC4  EF66  F00E         	goto	u4201
 11008  001CC8  EF68  F00E         	goto	u4200
 11009  001CCC                     u4201:
 11010  001CCC  EF14  F00F         	goto	l4338
 11011  001CD0                     u4200:
 11012  001CD0  A044               	btfss	___fladd@grs^0,0,c
 11013  001CD2  EF6D  F00E         	goto	u4211
 11014  001CD6  EF6F  F00E         	goto	u4210
 11015  001CDA                     u4211:
 11016  001CDA  EF75  F00E         	goto	l4292
 11017  001CDE                     u4210:
 11018  001CDE  90D8               	bcf	status,0,c
 11019  001CE0  3044               	rrcf	___fladd@grs^0,w,c
 11020  001CE2  0901               	iorlw	1
 11021  001CE4  6E44               	movwf	___fladd@grs^0,c
 11022  001CE6  EF77  F00E         	goto	l4294
 11023  001CEA                     l4292:
 11024  001CEA  90D8               	bcf	status,0,c
 11025  001CEC  3244               	rrcf	___fladd@grs^0,f,c
 11026  001CEE                     l4294:
 11027  001CEE  A035               	btfss	___fladd@b^0,0,c
 11028  001CF0  EF7C  F00E         	goto	u4221
 11029  001CF4  EF7E  F00E         	goto	u4220
 11030  001CF8                     u4221:
 11031  001CF8  EF7F  F00E         	goto	l4298
 11032  001CFC                     u4220:
 11033  001CFC  8E44               	bsf	___fladd@grs^0,7,c
 11034  001CFE                     l4298:
 11035  001CFE  3438               	rlcf	(___fladd@b+3)^0,w,c
 11036  001D00  3238               	rrcf	(___fladd@b+3)^0,f,c
 11037  001D02  3237               	rrcf	(___fladd@b+2)^0,f,c
 11038  001D04  3236               	rrcf	(___fladd@b+1)^0,f,c
 11039  001D06  3235               	rrcf	___fladd@b^0,f,c
 11040  001D08  2A43               	incf	___fladd@bexp^0,f,c
 11041  001D0A  EF14  F00F         	goto	l4338
 11042  001D0E                     l4302:
 11043  001D0E  5039               	movf	___fladd@a^0,w,c
 11044  001D10  5C35               	subwf	___fladd@b^0,w,c
 11045  001D12  503A               	movf	(___fladd@a+1)^0,w,c
 11046  001D14  5836               	subwfb	(___fladd@b+1)^0,w,c
 11047  001D16  503B               	movf	(___fladd@a+2)^0,w,c
 11048  001D18  5837               	subwfb	(___fladd@b+2)^0,w,c
 11049  001D1A  5038               	movf	(___fladd@b+3)^0,w,c
 11050  001D1C  0A80               	xorlw	128
 11051  001D1E  6E3D               	movwf	??___fladd^0,c
 11052  001D20  503C               	movf	(___fladd@a+3)^0,w,c
 11053  001D22  0A80               	xorlw	128
 11054  001D24  583D               	subwfb	??___fladd^0,w,c
 11055  001D26  B0D8               	btfsc	status,0,c
 11056  001D28  EF98  F00E         	goto	u4231
 11057  001D2C  EF9A  F00E         	goto	u4230
 11058  001D30                     u4231:
 11059  001D30  EFC5  F00E         	goto	l4312
 11060  001D34                     u4230:
 11061  001D34  5035               	movf	___fladd@b^0,w,c
 11062  001D36  5C39               	subwf	___fladd@a^0,w,c
 11063  001D38  6E3D               	movwf	??___fladd^0,c
 11064  001D3A  5036               	movf	(___fladd@b+1)^0,w,c
 11065  001D3C  583A               	subwfb	(___fladd@a+1)^0,w,c
 11066  001D3E  6E3E               	movwf	(??___fladd+1)^0,c
 11067  001D40  5037               	movf	(___fladd@b+2)^0,w,c
 11068  001D42  583B               	subwfb	(___fladd@a+2)^0,w,c
 11069  001D44  6E3F               	movwf	(??___fladd+2)^0,c
 11070  001D46  5038               	movf	(___fladd@b+3)^0,w,c
 11071  001D48  583C               	subwfb	(___fladd@a+3)^0,w,c
 11072  001D4A  6E40               	movwf	(??___fladd+3)^0,c
 11073  001D4C  0EFF               	movlw	255
 11074  001D4E  243D               	addwf	??___fladd^0,w,c
 11075  001D50  6E35               	movwf	___fladd@b^0,c
 11076  001D52  0EFF               	movlw	255
 11077  001D54  203E               	addwfc	(??___fladd+1)^0,w,c
 11078  001D56  6E36               	movwf	(___fladd@b+1)^0,c
 11079  001D58  0EFF               	movlw	255
 11080  001D5A  203F               	addwfc	(??___fladd+2)^0,w,c
 11081  001D5C  6E37               	movwf	(___fladd@b+2)^0,c
 11082  001D5E  0EFF               	movlw	255
 11083  001D60  2040               	addwfc	(??___fladd+3)^0,w,c
 11084  001D62  6E38               	movwf	(___fladd@b+3)^0,c
 11085  001D64  0E80               	movlw	128
 11086  001D66  1A41               	xorwf	___fladd@signs^0,f,c
 11087  001D68  6C44               	negf	___fladd@grs^0,c
 11088  001D6A  5044               	movf	___fladd@grs^0,w,c
 11089  001D6C  A4D8               	btfss	status,2,c
 11090  001D6E  EFBB  F00E         	goto	u4241
 11091  001D72  EFBD  F00E         	goto	u4240
 11092  001D76                     u4241:
 11093  001D76  EFCD  F00E         	goto	l1236
 11094  001D7A                     u4240:
 11095  001D7A  0E01               	movlw	1
 11096  001D7C  2635               	addwf	___fladd@b^0,f,c
 11097  001D7E  0E00               	movlw	0
 11098  001D80  2236               	addwfc	(___fladd@b+1)^0,f,c
 11099  001D82  2237               	addwfc	(___fladd@b+2)^0,f,c
 11100  001D84  2238               	addwfc	(___fladd@b+3)^0,f,c
 11101  001D86  EFCD  F00E         	goto	l1236
 11102  001D8A                     l4312:
 11103  001D8A  5039               	movf	___fladd@a^0,w,c
 11104  001D8C  5E35               	subwf	___fladd@b^0,f,c
 11105  001D8E  503A               	movf	(___fladd@a+1)^0,w,c
 11106  001D90  5A36               	subwfb	(___fladd@b+1)^0,f,c
 11107  001D92  503B               	movf	(___fladd@a+2)^0,w,c
 11108  001D94  5A37               	subwfb	(___fladd@b+2)^0,f,c
 11109  001D96  503C               	movf	(___fladd@a+3)^0,w,c
 11110  001D98  5A38               	subwfb	(___fladd@b+3)^0,f,c
 11111  001D9A                     l1236:
 11112  001D9A  5035               	movf	___fladd@b^0,w,c
 11113  001D9C  1036               	iorwf	(___fladd@b+1)^0,w,c
 11114  001D9E  1037               	iorwf	(___fladd@b+2)^0,w,c
 11115  001DA0  1038               	iorwf	(___fladd@b+3)^0,w,c
 11116  001DA2  A4D8               	btfss	status,2,c
 11117  001DA4  EFD6  F00E         	goto	u4251
 11118  001DA8  EFD8  F00E         	goto	u4250
 11119  001DAC                     u4251:
 11120  001DAC  EF0D  F00F         	goto	l4336
 11121  001DB0                     u4250:
 11122  001DB0  5044               	movf	___fladd@grs^0,w,c
 11123  001DB2  A4D8               	btfss	status,2,c
 11124  001DB4  EFDE  F00E         	goto	u4261
 11125  001DB8  EFE0  F00E         	goto	u4260
 11126  001DBC                     u4261:
 11127  001DBC  EF0D  F00F         	goto	l4336
 11128  001DC0                     u4260:
 11129  001DC0  0E00               	movlw	0
 11130  001DC2  6E35               	movwf	?___fladd^0,c
 11131  001DC4  0E00               	movlw	0
 11132  001DC6  6E36               	movwf	(?___fladd+1)^0,c
 11133  001DC8  0E00               	movlw	0
 11134  001DCA  6E37               	movwf	(?___fladd+2)^0,c
 11135  001DCC  0E00               	movlw	0
 11136  001DCE  6E38               	movwf	(?___fladd+3)^0,c
 11137  001DD0  EFA8  F00F         	goto	l1228
 11138  001DD4                     l4320:
 11139  001DD4  90D8               	bcf	status,0,c
 11140  001DD6  3635               	rlcf	___fladd@b^0,f,c
 11141  001DD8  3636               	rlcf	(___fladd@b+1)^0,f,c
 11142  001DDA  3637               	rlcf	(___fladd@b+2)^0,f,c
 11143  001DDC  3638               	rlcf	(___fladd@b+3)^0,f,c
 11144  001DDE  AE44               	btfss	___fladd@grs^0,7,c
 11145  001DE0  EFF4  F00E         	goto	u4271
 11146  001DE4  EFF6  F00E         	goto	u4270
 11147  001DE8                     u4271:
 11148  001DE8  EFF7  F00E         	goto	l4326
 11149  001DEC                     u4270:
 11150  001DEC  8035               	bsf	___fladd@b^0,0,c
 11151  001DEE                     l4326:
 11152  001DEE  A044               	btfss	___fladd@grs^0,0,c
 11153  001DF0  EFFC  F00E         	goto	u4281
 11154  001DF4  EFFE  F00E         	goto	u4280
 11155  001DF8                     u4281:
 11156  001DF8  EF02  F00F         	goto	l4330
 11157  001DFC                     u4280:
 11158  001DFC  80D8               	bsf	status,0,c
 11159  001DFE  3644               	rlcf	___fladd@grs^0,f,c
 11160  001E00  EF04  F00F         	goto	l4332
 11161  001E04                     l4330:
 11162  001E04  90D8               	bcf	status,0,c
 11163  001E06  3644               	rlcf	___fladd@grs^0,f,c
 11164  001E08                     l4332:
 11165  001E08  5043               	movf	___fladd@bexp^0,w,c
 11166  001E0A  B4D8               	btfsc	status,2,c
 11167  001E0C  EF0A  F00F         	goto	u4291
 11168  001E10  EF0C  F00F         	goto	u4290
 11169  001E14                     u4291:
 11170  001E14  EF0D  F00F         	goto	l4336
 11171  001E18                     u4290:
 11172  001E18  0643               	decf	___fladd@bexp^0,f,c
 11173  001E1A                     l4336:
 11174  001E1A  AE37               	btfss	(___fladd@b+2)^0,7,c
 11175  001E1C  EF12  F00F         	goto	u4301
 11176  001E20  EF14  F00F         	goto	u4300
 11177  001E24                     u4301:
 11178  001E24  EFEA  F00E         	goto	l4320
 11179  001E28                     u4300:
 11180  001E28                     l4338:
 11181  001E28  0E00               	movlw	0
 11182  001E2A  6E42               	movwf	___fladd@aexp^0,c
 11183  001E2C  AE44               	btfss	___fladd@grs^0,7,c
 11184  001E2E  EF1B  F00F         	goto	u4311
 11185  001E32  EF1D  F00F         	goto	u4310
 11186  001E36                     u4311:
 11187  001E36  EF35  F00F         	goto	l1245
 11188  001E3A                     u4310:
 11189  001E3A  C044  F03D         	movff	___fladd@grs,??___fladd
 11190  001E3E  0E7F               	movlw	127
 11191  001E40  163D               	andwf	??___fladd^0,f,c
 11192  001E42  B4D8               	btfsc	status,2,c
 11193  001E44  EF26  F00F         	goto	u4321
 11194  001E48  EF28  F00F         	goto	u4320
 11195  001E4C                     u4321:
 11196  001E4C  EF2C  F00F         	goto	l1246
 11197  001E50                     u4320:
 11198  001E50                     l4344:
 11199  001E50  0E01               	movlw	1
 11200  001E52  6E42               	movwf	___fladd@aexp^0,c
 11201  001E54  EF35  F00F         	goto	l1245
 11202  001E58                     l1246:
 11203  001E58  A035               	btfss	___fladd@b^0,0,c
 11204  001E5A  EF31  F00F         	goto	u4331
 11205  001E5E  EF33  F00F         	goto	u4330
 11206  001E62                     u4331:
 11207  001E62  EF35  F00F         	goto	l1245
 11208  001E66                     u4330:
 11209  001E66  EF28  F00F         	goto	l4344
 11210  001E6A                     l1245:
 11211  001E6A  5042               	movf	___fladd@aexp^0,w,c
 11212  001E6C  B4D8               	btfsc	status,2,c
 11213  001E6E  EF3B  F00F         	goto	u4341
 11214  001E72  EF3D  F00F         	goto	u4340
 11215  001E76                     u4341:
 11216  001E76  EF68  F00F         	goto	l4356
 11217  001E7A                     u4340:
 11218  001E7A  0E01               	movlw	1
 11219  001E7C  2635               	addwf	___fladd@b^0,f,c
 11220  001E7E  0E00               	movlw	0
 11221  001E80  2236               	addwfc	(___fladd@b+1)^0,f,c
 11222  001E82  2237               	addwfc	(___fladd@b+2)^0,f,c
 11223  001E84  2238               	addwfc	(___fladd@b+3)^0,f,c
 11224  001E86  A038               	btfss	(___fladd@b+3)^0,0,c
 11225  001E88  EF48  F00F         	goto	u4351
 11226  001E8C  EF4A  F00F         	goto	u4350
 11227  001E90                     u4351:
 11228  001E90  EF68  F00F         	goto	l4356
 11229  001E94                     u4350:
 11230  001E94  C035  F03D         	movff	___fladd@b,??___fladd
 11231  001E98  C036  F03E         	movff	___fladd@b+1,??___fladd+1
 11232  001E9C  C037  F03F         	movff	___fladd@b+2,??___fladd+2
 11233  001EA0  C038  F040         	movff	___fladd@b+3,??___fladd+3
 11234  001EA4  3440               	rlcf	(??___fladd+3)^0,w,c
 11235  001EA6  3240               	rrcf	(??___fladd+3)^0,f,c
 11236  001EA8  323F               	rrcf	(??___fladd+2)^0,f,c
 11237  001EAA  323E               	rrcf	(??___fladd+1)^0,f,c
 11238  001EAC  323D               	rrcf	??___fladd^0,f,c
 11239  001EAE  C03D  F035         	movff	??___fladd,___fladd@b
 11240  001EB2  C03E  F036         	movff	??___fladd+1,___fladd@b+1
 11241  001EB6  C03F  F037         	movff	??___fladd+2,___fladd@b+2
 11242  001EBA  C040  F038         	movff	??___fladd+3,___fladd@b+3
 11243  001EBE  2843               	incf	___fladd@bexp^0,w,c
 11244  001EC0  B4D8               	btfsc	status,2,c
 11245  001EC2  EF65  F00F         	goto	u4361
 11246  001EC6  EF67  F00F         	goto	u4360
 11247  001ECA                     u4361:
 11248  001ECA  EF68  F00F         	goto	l4356
 11249  001ECE                     u4360:
 11250  001ECE  2A43               	incf	___fladd@bexp^0,f,c
 11251  001ED0                     l4356:
 11252  001ED0  2843               	incf	___fladd@bexp^0,w,c
 11253  001ED2  B4D8               	btfsc	status,2,c
 11254  001ED4  EF6E  F00F         	goto	u4371
 11255  001ED8  EF70  F00F         	goto	u4370
 11256  001EDC                     u4371:
 11257  001EDC  EF78  F00F         	goto	l4360
 11258  001EE0                     u4370:
 11259  001EE0  5043               	movf	___fladd@bexp^0,w,c
 11260  001EE2  A4D8               	btfss	status,2,c
 11261  001EE4  EF76  F00F         	goto	u4381
 11262  001EE8  EF78  F00F         	goto	u4380
 11263  001EEC                     u4381:
 11264  001EEC  EF8A  F00F         	goto	l4364
 11265  001EF0                     u4380:
 11266  001EF0                     l4360:
 11267  001EF0  0E00               	movlw	0
 11268  001EF2  6E35               	movwf	___fladd@b^0,c
 11269  001EF4  0E00               	movlw	0
 11270  001EF6  6E36               	movwf	(___fladd@b+1)^0,c
 11271  001EF8  0E00               	movlw	0
 11272  001EFA  6E37               	movwf	(___fladd@b+2)^0,c
 11273  001EFC  0E00               	movlw	0
 11274  001EFE  6E38               	movwf	(___fladd@b+3)^0,c
 11275  001F00  5043               	movf	___fladd@bexp^0,w,c
 11276  001F02  A4D8               	btfss	status,2,c
 11277  001F04  EF86  F00F         	goto	u4391
 11278  001F08  EF88  F00F         	goto	u4390
 11279  001F0C                     u4391:
 11280  001F0C  EF8A  F00F         	goto	l4364
 11281  001F10                     u4390:
 11282  001F10  0E00               	movlw	0
 11283  001F12  6E41               	movwf	___fladd@signs^0,c
 11284  001F14                     l4364:
 11285  001F14  A043               	btfss	___fladd@bexp^0,0,c
 11286  001F16  EF8F  F00F         	goto	u4401
 11287  001F1A  EF91  F00F         	goto	u4400
 11288  001F1E                     u4401:
 11289  001F1E  EF94  F00F         	goto	l4368
 11290  001F22                     u4400:
 11291  001F22  8E37               	bsf	(___fladd@b+2)^0,7,c
 11292  001F24  EF95  F00F         	goto	l4370
 11293  001F28                     l4368:
 11294  001F28  9E37               	bcf	(___fladd@b+2)^0,7,c
 11295  001F2A                     l4370:
 11296  001F2A  90D8               	bcf	status,0,c
 11297  001F2C  3043               	rrcf	___fladd@bexp^0,w,c
 11298  001F2E  6E38               	movwf	(___fladd@b+3)^0,c
 11299  001F30  AE41               	btfss	___fladd@signs^0,7,c
 11300  001F32  EF9D  F00F         	goto	u4411
 11301  001F36  EF9F  F00F         	goto	u4410
 11302  001F3A                     u4411:
 11303  001F3A  EFA0  F00F         	goto	l4376
 11304  001F3E                     u4410:
 11305  001F3E  8E38               	bsf	(___fladd@b+3)^0,7,c
 11306  001F40                     l4376:
 11307  001F40  C035  F035         	movff	___fladd@b,?___fladd
 11308  001F44  C036  F036         	movff	___fladd@b+1,?___fladd+1
 11309  001F48  C037  F037         	movff	___fladd@b+2,?___fladd+2
 11310  001F4C  C038  F038         	movff	___fladd@b+3,?___fladd+3
 11311  001F50                     l1228:
 11312  001F50  0012               	return		;funcret
 11313  001F52                     __end_of___fladd:
 11314                           	callstack 0
 11315                           
 11316 ;; *************** function ___flneg *****************
 11317 ;; Defined at:
 11318 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flneg.c"
 11319 ;; Parameters:    Size  Location     Type
 11320 ;;  f1              4    0[COMRAM] unsigned char 
 11321 ;; Auto vars:     Size  Location     Type
 11322 ;;		None
 11323 ;; Return value:  Size  Location     Type
 11324 ;;                  4    0[COMRAM] unsigned char 
 11325 ;; Registers used:
 11326 ;;		wreg, status,2, status,0
 11327 ;; Tracked objects:
 11328 ;;		On entry : 0/0
 11329 ;;		On exit  : 0/0
 11330 ;;		Unchanged: 0/0
 11331 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11332 ;;      Params:         4       0       0       0       0       0       0
 11333 ;;      Locals:         0       0       0       0       0       0       0
 11334 ;;      Temps:          0       0       0       0       0       0       0
 11335 ;;      Totals:         4       0       0       0       0       0       0
 11336 ;;Total ram usage:        4 bytes
 11337 ;; Hardware stack levels used:    1
 11338 ;; Hardware stack levels required when called:    1
 11339 ;; This function calls:
 11340 ;;		Nothing
 11341 ;; This function is called by:
 11342 ;;		_efgtoa
 11343 ;; This function uses a non-reentrant model
 11344 ;;
 11345                           
 11346                           	psect	text43
 11347  00553E                     __ptext43:
 11348                           	callstack 0
 11349  00553E                     ___flneg:
 11350                           	callstack 22
 11351  00553E  5001               	movf	___flneg@f1^0,w,c
 11352  005540  1002               	iorwf	(___flneg@f1+1)^0,w,c
 11353  005542  1003               	iorwf	(___flneg@f1+2)^0,w,c
 11354  005544  1004               	iorwf	(___flneg@f1+3)^0,w,c
 11355  005546  B4D8               	btfsc	status,2,c
 11356  005548  EFA8  F02A         	goto	u5211
 11357  00554C  EFAA  F02A         	goto	u5210
 11358  005550                     u5211:
 11359  005550  EFB2  F02A         	goto	l4884
 11360  005554                     u5210:
 11361  005554  0E00               	movlw	0
 11362  005556  1A01               	xorwf	___flneg@f1^0,f,c
 11363  005558  0E00               	movlw	0
 11364  00555A  1A02               	xorwf	(___flneg@f1+1)^0,f,c
 11365  00555C  0E00               	movlw	0
 11366  00555E  1A03               	xorwf	(___flneg@f1+2)^0,f,c
 11367  005560  0E80               	movlw	128
 11368  005562  1A04               	xorwf	(___flneg@f1+3)^0,f,c
 11369  005564                     l4884:
 11370  005564  C001  F001         	movff	___flneg@f1,?___flneg
 11371  005568  C002  F002         	movff	___flneg@f1+1,?___flneg+1
 11372  00556C  C003  F003         	movff	___flneg@f1+2,?___flneg+2
 11373  005570  C004  F004         	movff	___flneg@f1+3,?___flneg+3
 11374  005574  0012               	return		;funcret
 11375  005576                     __end_of___flneg:
 11376                           	callstack 0
 11377                           
 11378 ;; *************** function ___flmul *****************
 11379 ;; Defined at:
 11380 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcmul.c"
 11381 ;; Parameters:    Size  Location     Type
 11382 ;;  b               4   27[COMRAM] unsigned char 
 11383 ;;  a               4   31[COMRAM] unsigned char 
 11384 ;; Auto vars:     Size  Location     Type
 11385 ;;  prod            4   46[COMRAM] struct .
 11386 ;;  grs             4   40[COMRAM] unsigned long 
 11387 ;;  temp            2   50[COMRAM] struct .
 11388 ;;  bexp            1   45[COMRAM] unsigned char 
 11389 ;;  aexp            1   44[COMRAM] unsigned char 
 11390 ;;  sign            1   39[COMRAM] unsigned char 
 11391 ;; Return value:  Size  Location     Type
 11392 ;;                  4   27[COMRAM] unsigned char 
 11393 ;; Registers used:
 11394 ;;		wreg, status,2, status,0, prodl, prodh
 11395 ;; Tracked objects:
 11396 ;;		On entry : 0/0
 11397 ;;		On exit  : 0/0
 11398 ;;		Unchanged: 0/0
 11399 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11400 ;;      Params:         8       0       0       0       0       0       0
 11401 ;;      Locals:        13       0       0       0       0       0       0
 11402 ;;      Temps:          4       0       0       0       0       0       0
 11403 ;;      Totals:        25       0       0       0       0       0       0
 11404 ;;Total ram usage:       25 bytes
 11405 ;; Hardware stack levels used:    1
 11406 ;; Hardware stack levels required when called:    1
 11407 ;; This function calls:
 11408 ;;		Nothing
 11409 ;; This function is called by:
 11410 ;;		_scanAdcConversion
 11411 ;;		_speedControl
 11412 ;;		_efgtoa
 11413 ;; This function uses a non-reentrant model
 11414 ;;
 11415                           
 11416                           	psect	text44
 11417  001F52                     __ptext44:
 11418                           	callstack 0
 11419  001F52                     ___flmul:
 11420                           	callstack 22
 11421  001F52  501F               	movf	(___flmul@b+3)^0,w,c
 11422  001F54  0B80               	andlw	128
 11423  001F56  6E28               	movwf	___flmul@sign^0,c
 11424  001F58  501F               	movf	(___flmul@b+3)^0,w,c
 11425  001F5A  241F               	addwf	(___flmul@b+3)^0,w,c
 11426  001F5C  6E2E               	movwf	___flmul@bexp^0,c
 11427  001F5E  AE1E               	btfss	(___flmul@b+2)^0,7,c
 11428  001F60  EFB4  F00F         	goto	u4821
 11429  001F64  EFB6  F00F         	goto	u4820
 11430  001F68                     u4821:
 11431  001F68  EFB7  F00F         	goto	l4632
 11432  001F6C                     u4820:
 11433  001F6C  802E               	bsf	___flmul@bexp^0,0,c
 11434  001F6E                     l4632:
 11435  001F6E  502E               	movf	___flmul@bexp^0,w,c
 11436  001F70  B4D8               	btfsc	status,2,c
 11437  001F72  EFBD  F00F         	goto	u4831
 11438  001F76  EFBF  F00F         	goto	u4830
 11439  001F7A                     u4831:
 11440  001F7A  EFD2  F00F         	goto	l4640
 11441  001F7E                     u4830:
 11442  001F7E  282E               	incf	___flmul@bexp^0,w,c
 11443  001F80  A4D8               	btfss	status,2,c
 11444  001F82  EFC5  F00F         	goto	u4841
 11445  001F86  EFC7  F00F         	goto	u4840
 11446  001F8A                     u4841:
 11447  001F8A  EFCF  F00F         	goto	l4638
 11448  001F8E                     u4840:
 11449  001F8E  0E00               	movlw	0
 11450  001F90  6E1C               	movwf	___flmul@b^0,c
 11451  001F92  0E00               	movlw	0
 11452  001F94  6E1D               	movwf	(___flmul@b+1)^0,c
 11453  001F96  0E00               	movlw	0
 11454  001F98  6E1E               	movwf	(___flmul@b+2)^0,c
 11455  001F9A  0E00               	movlw	0
 11456  001F9C  6E1F               	movwf	(___flmul@b+3)^0,c
 11457  001F9E                     l4638:
 11458  001F9E  8E1E               	bsf	(___flmul@b+2)^0,7,c
 11459  001FA0  EFDA  F00F         	goto	l4642
 11460  001FA4                     l4640:
 11461  001FA4  0E00               	movlw	0
 11462  001FA6  6E1C               	movwf	___flmul@b^0,c
 11463  001FA8  0E00               	movlw	0
 11464  001FAA  6E1D               	movwf	(___flmul@b+1)^0,c
 11465  001FAC  0E00               	movlw	0
 11466  001FAE  6E1E               	movwf	(___flmul@b+2)^0,c
 11467  001FB0  0E00               	movlw	0
 11468  001FB2  6E1F               	movwf	(___flmul@b+3)^0,c
 11469  001FB4                     l4642:
 11470  001FB4  5023               	movf	(___flmul@a+3)^0,w,c
 11471  001FB6  0B80               	andlw	128
 11472  001FB8  1A28               	xorwf	___flmul@sign^0,f,c
 11473  001FBA  5023               	movf	(___flmul@a+3)^0,w,c
 11474  001FBC  2423               	addwf	(___flmul@a+3)^0,w,c
 11475  001FBE  6E2D               	movwf	___flmul@aexp^0,c
 11476  001FC0  AE22               	btfss	(___flmul@a+2)^0,7,c
 11477  001FC2  EFE5  F00F         	goto	u4851
 11478  001FC6  EFE7  F00F         	goto	u4850
 11479  001FCA                     u4851:
 11480  001FCA  EFE8  F00F         	goto	l4650
 11481  001FCE                     u4850:
 11482  001FCE  802D               	bsf	___flmul@aexp^0,0,c
 11483  001FD0                     l4650:
 11484  001FD0  502D               	movf	___flmul@aexp^0,w,c
 11485  001FD2  B4D8               	btfsc	status,2,c
 11486  001FD4  EFEE  F00F         	goto	u4861
 11487  001FD8  EFF0  F00F         	goto	u4860
 11488  001FDC                     u4861:
 11489  001FDC  EF03  F010         	goto	l4658
 11490  001FE0                     u4860:
 11491  001FE0  282D               	incf	___flmul@aexp^0,w,c
 11492  001FE2  A4D8               	btfss	status,2,c
 11493  001FE4  EFF6  F00F         	goto	u4871
 11494  001FE8  EFF8  F00F         	goto	u4870
 11495  001FEC                     u4871:
 11496  001FEC  EF00  F010         	goto	l4656
 11497  001FF0                     u4870:
 11498  001FF0  0E00               	movlw	0
 11499  001FF2  6E20               	movwf	___flmul@a^0,c
 11500  001FF4  0E00               	movlw	0
 11501  001FF6  6E21               	movwf	(___flmul@a+1)^0,c
 11502  001FF8  0E00               	movlw	0
 11503  001FFA  6E22               	movwf	(___flmul@a+2)^0,c
 11504  001FFC  0E00               	movlw	0
 11505  001FFE  6E23               	movwf	(___flmul@a+3)^0,c
 11506  002000                     l4656:
 11507  002000  8E22               	bsf	(___flmul@a+2)^0,7,c
 11508  002002  EF0B  F010         	goto	l1305
 11509  002006                     l4658:
 11510  002006  0E00               	movlw	0
 11511  002008  6E20               	movwf	___flmul@a^0,c
 11512  00200A  0E00               	movlw	0
 11513  00200C  6E21               	movwf	(___flmul@a+1)^0,c
 11514  00200E  0E00               	movlw	0
 11515  002010  6E22               	movwf	(___flmul@a+2)^0,c
 11516  002012  0E00               	movlw	0
 11517  002014  6E23               	movwf	(___flmul@a+3)^0,c
 11518  002016                     l1305:
 11519  002016  502D               	movf	___flmul@aexp^0,w,c
 11520  002018  B4D8               	btfsc	status,2,c
 11521  00201A  EF11  F010         	goto	u4881
 11522  00201E  EF13  F010         	goto	u4880
 11523  002022                     u4881:
 11524  002022  EF1B  F010         	goto	l4662
 11525  002026                     u4880:
 11526  002026  502E               	movf	___flmul@bexp^0,w,c
 11527  002028  A4D8               	btfss	status,2,c
 11528  00202A  EF19  F010         	goto	u4891
 11529  00202E  EF1B  F010         	goto	u4890
 11530  002032                     u4891:
 11531  002032  EF25  F010         	goto	l4666
 11532  002036                     u4890:
 11533  002036                     l4662:
 11534  002036  0E00               	movlw	0
 11535  002038  6E1C               	movwf	?___flmul^0,c
 11536  00203A  0E00               	movlw	0
 11537  00203C  6E1D               	movwf	(?___flmul+1)^0,c
 11538  00203E  0E00               	movlw	0
 11539  002040  6E1E               	movwf	(?___flmul+2)^0,c
 11540  002042  0E00               	movlw	0
 11541  002044  6E1F               	movwf	(?___flmul+3)^0,c
 11542  002046  EFBD  F011         	goto	l1309
 11543  00204A                     l4666:
 11544  00204A  5022               	movf	(___flmul@a+2)^0,w,c
 11545  00204C  021C               	mulwf	___flmul@b^0,c
 11546  00204E  CFF3 F033          	movff	prodl,___flmul@temp
 11547  002052  CFF4 F034          	movff	prodh,___flmul@temp+1
 11548  002056  5033               	movf	___flmul@temp^0,w,c
 11549  002058  6E29               	movwf	___flmul@grs^0,c
 11550  00205A  6A2A               	clrf	(___flmul@grs+1)^0,c
 11551  00205C  6A2B               	clrf	(___flmul@grs+2)^0,c
 11552  00205E  6A2C               	clrf	(___flmul@grs+3)^0,c
 11553  002060  5034               	movf	(___flmul@temp+1)^0,w,c
 11554  002062  6E2F               	movwf	___flmul@prod^0,c
 11555  002064  6A30               	clrf	(___flmul@prod+1)^0,c
 11556  002066  6A31               	clrf	(___flmul@prod+2)^0,c
 11557  002068  6A32               	clrf	(___flmul@prod+3)^0,c
 11558  00206A  5021               	movf	(___flmul@a+1)^0,w,c
 11559  00206C  021D               	mulwf	(___flmul@b+1)^0,c
 11560  00206E  CFF3 F033          	movff	prodl,___flmul@temp
 11561  002072  CFF4 F034          	movff	prodh,___flmul@temp+1
 11562  002076  5033               	movf	___flmul@temp^0,w,c
 11563  002078  2629               	addwf	___flmul@grs^0,f,c
 11564  00207A  0E00               	movlw	0
 11565  00207C  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11566  00207E  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11567  002080  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11568  002082  5034               	movf	(___flmul@temp+1)^0,w,c
 11569  002084  262F               	addwf	___flmul@prod^0,f,c
 11570  002086  0E00               	movlw	0
 11571  002088  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11572  00208A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11573  00208C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11574  00208E  5020               	movf	___flmul@a^0,w,c
 11575  002090  021E               	mulwf	(___flmul@b+2)^0,c
 11576  002092  CFF3 F033          	movff	prodl,___flmul@temp
 11577  002096  CFF4 F034          	movff	prodh,___flmul@temp+1
 11578  00209A  5033               	movf	___flmul@temp^0,w,c
 11579  00209C  2629               	addwf	___flmul@grs^0,f,c
 11580  00209E  0E00               	movlw	0
 11581  0020A0  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11582  0020A2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11583  0020A4  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11584  0020A6  5034               	movf	(___flmul@temp+1)^0,w,c
 11585  0020A8  262F               	addwf	___flmul@prod^0,f,c
 11586  0020AA  0E00               	movlw	0
 11587  0020AC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11588  0020AE  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11589  0020B0  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11590  0020B2  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11591  0020B6  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11592  0020BA  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11593  0020BE  6A29               	clrf	___flmul@grs^0,c
 11594  0020C0  5020               	movf	___flmul@a^0,w,c
 11595  0020C2  021D               	mulwf	(___flmul@b+1)^0,c
 11596  0020C4  CFF3 F033          	movff	prodl,___flmul@temp
 11597  0020C8  CFF4 F034          	movff	prodh,___flmul@temp+1
 11598  0020CC  5033               	movf	___flmul@temp^0,w,c
 11599  0020CE  2629               	addwf	___flmul@grs^0,f,c
 11600  0020D0  5034               	movf	(___flmul@temp+1)^0,w,c
 11601  0020D2  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11602  0020D4  0E00               	movlw	0
 11603  0020D6  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11604  0020D8  0E00               	movlw	0
 11605  0020DA  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11606  0020DC  5021               	movf	(___flmul@a+1)^0,w,c
 11607  0020DE  021C               	mulwf	___flmul@b^0,c
 11608  0020E0  CFF3 F033          	movff	prodl,___flmul@temp
 11609  0020E4  CFF4 F034          	movff	prodh,___flmul@temp+1
 11610  0020E8  5033               	movf	___flmul@temp^0,w,c
 11611  0020EA  2629               	addwf	___flmul@grs^0,f,c
 11612  0020EC  5034               	movf	(___flmul@temp+1)^0,w,c
 11613  0020EE  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11614  0020F0  0E00               	movlw	0
 11615  0020F2  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11616  0020F4  0E00               	movlw	0
 11617  0020F6  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11618  0020F8  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11619  0020FC  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11620  002100  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11621  002104  6A29               	clrf	___flmul@grs^0,c
 11622  002106  5020               	movf	___flmul@a^0,w,c
 11623  002108  021C               	mulwf	___flmul@b^0,c
 11624  00210A  CFF3 F033          	movff	prodl,___flmul@temp
 11625  00210E  CFF4 F034          	movff	prodh,___flmul@temp+1
 11626  002112  5033               	movf	___flmul@temp^0,w,c
 11627  002114  2629               	addwf	___flmul@grs^0,f,c
 11628  002116  5034               	movf	(___flmul@temp+1)^0,w,c
 11629  002118  222A               	addwfc	(___flmul@grs+1)^0,f,c
 11630  00211A  0E00               	movlw	0
 11631  00211C  222B               	addwfc	(___flmul@grs+2)^0,f,c
 11632  00211E  0E00               	movlw	0
 11633  002120  222C               	addwfc	(___flmul@grs+3)^0,f,c
 11634  002122  5022               	movf	(___flmul@a+2)^0,w,c
 11635  002124  021D               	mulwf	(___flmul@b+1)^0,c
 11636  002126  CFF3 F033          	movff	prodl,___flmul@temp
 11637  00212A  CFF4 F034          	movff	prodh,___flmul@temp+1
 11638  00212E  5033               	movf	___flmul@temp^0,w,c
 11639  002130  262F               	addwf	___flmul@prod^0,f,c
 11640  002132  5034               	movf	(___flmul@temp+1)^0,w,c
 11641  002134  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11642  002136  0E00               	movlw	0
 11643  002138  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11644  00213A  0E00               	movlw	0
 11645  00213C  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11646  00213E  5021               	movf	(___flmul@a+1)^0,w,c
 11647  002140  021E               	mulwf	(___flmul@b+2)^0,c
 11648  002142  CFF3 F033          	movff	prodl,___flmul@temp
 11649  002146  CFF4 F034          	movff	prodh,___flmul@temp+1
 11650  00214A  5033               	movf	___flmul@temp^0,w,c
 11651  00214C  262F               	addwf	___flmul@prod^0,f,c
 11652  00214E  5034               	movf	(___flmul@temp+1)^0,w,c
 11653  002150  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11654  002152  0E00               	movlw	0
 11655  002154  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11656  002156  0E00               	movlw	0
 11657  002158  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11658  00215A  5022               	movf	(___flmul@a+2)^0,w,c
 11659  00215C  021E               	mulwf	(___flmul@b+2)^0,c
 11660  00215E  CFF3 F033          	movff	prodl,___flmul@temp
 11661  002162  CFF4 F034          	movff	prodh,___flmul@temp+1
 11662  002166  5033               	movf	___flmul@temp^0,w,c
 11663  002168  6E24               	movwf	??___flmul^0,c
 11664  00216A  5034               	movf	(___flmul@temp+1)^0,w,c
 11665  00216C  6E25               	movwf	(??___flmul+1)^0,c
 11666  00216E  6A26               	clrf	(??___flmul+2)^0,c
 11667  002170  6A27               	clrf	(??___flmul+3)^0,c
 11668  002172  C026  F027         	movff	??___flmul+2,??___flmul+3
 11669  002176  C025  F026         	movff	??___flmul+1,??___flmul+2
 11670  00217A  C024  F025         	movff	??___flmul,??___flmul+1
 11671  00217E  6A24               	clrf	??___flmul^0,c
 11672  002180  5024               	movf	??___flmul^0,w,c
 11673  002182  262F               	addwf	___flmul@prod^0,f,c
 11674  002184  5025               	movf	(??___flmul+1)^0,w,c
 11675  002186  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11676  002188  5026               	movf	(??___flmul+2)^0,w,c
 11677  00218A  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11678  00218C  5027               	movf	(??___flmul+3)^0,w,c
 11679  00218E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11680  002190  C029  F024         	movff	___flmul@grs,??___flmul
 11681  002194  C02A  F025         	movff	___flmul@grs+1,??___flmul+1
 11682  002198  C02B  F026         	movff	___flmul@grs+2,??___flmul+2
 11683  00219C  C02C  F027         	movff	___flmul@grs+3,??___flmul+3
 11684  0021A0  0E19               	movlw	25
 11685  0021A2  EFD8  F010         	goto	u4900
 11686  0021A6                     u4905:
 11687  0021A6  90D8               	bcf	status,0,c
 11688  0021A8  3227               	rrcf	(??___flmul+3)^0,f,c
 11689  0021AA  3226               	rrcf	(??___flmul+2)^0,f,c
 11690  0021AC  3225               	rrcf	(??___flmul+1)^0,f,c
 11691  0021AE  3224               	rrcf	??___flmul^0,f,c
 11692  0021B0                     u4900:
 11693  0021B0  2EE8               	decfsz	wreg,f,c
 11694  0021B2  EFD3  F010         	goto	u4905
 11695  0021B6  5024               	movf	??___flmul^0,w,c
 11696  0021B8  262F               	addwf	___flmul@prod^0,f,c
 11697  0021BA  5025               	movf	(??___flmul+1)^0,w,c
 11698  0021BC  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11699  0021BE  5026               	movf	(??___flmul+2)^0,w,c
 11700  0021C0  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11701  0021C2  5027               	movf	(??___flmul+3)^0,w,c
 11702  0021C4  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11703  0021C6  C02B  F02C         	movff	___flmul@grs+2,___flmul@grs+3
 11704  0021CA  C02A  F02B         	movff	___flmul@grs+1,___flmul@grs+2
 11705  0021CE  C029  F02A         	movff	___flmul@grs,___flmul@grs+1
 11706  0021D2  6A29               	clrf	___flmul@grs^0,c
 11707  0021D4  502D               	movf	___flmul@aexp^0,w,c
 11708  0021D6  C02E  F024         	movff	___flmul@bexp,??___flmul
 11709  0021DA  6A25               	clrf	(??___flmul+1)^0,c
 11710  0021DC  2624               	addwf	??___flmul^0,f,c
 11711  0021DE  0E00               	movlw	0
 11712  0021E0  2225               	addwfc	(??___flmul+1)^0,f,c
 11713  0021E2  0E82               	movlw	130
 11714  0021E4  2424               	addwf	??___flmul^0,w,c
 11715  0021E6  6E33               	movwf	___flmul@temp^0,c
 11716  0021E8  0EFF               	movlw	255
 11717  0021EA  2025               	addwfc	(??___flmul+1)^0,w,c
 11718  0021EC  6E34               	movwf	(___flmul@temp+1)^0,c
 11719  0021EE  EF0E  F011         	goto	l4714
 11720  0021F2                     l4708:
 11721  0021F2  90D8               	bcf	status,0,c
 11722  0021F4  362F               	rlcf	___flmul@prod^0,f,c
 11723  0021F6  3630               	rlcf	(___flmul@prod+1)^0,f,c
 11724  0021F8  3631               	rlcf	(___flmul@prod+2)^0,f,c
 11725  0021FA  3632               	rlcf	(___flmul@prod+3)^0,f,c
 11726  0021FC  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11727  0021FE  EF03  F011         	goto	u4911
 11728  002202  EF05  F011         	goto	u4910
 11729  002206                     u4911:
 11730  002206  EF06  F011         	goto	l1312
 11731  00220A                     u4910:
 11732  00220A  802F               	bsf	___flmul@prod^0,0,c
 11733  00220C                     l1312:
 11734  00220C  90D8               	bcf	status,0,c
 11735  00220E  3629               	rlcf	___flmul@grs^0,f,c
 11736  002210  362A               	rlcf	(___flmul@grs+1)^0,f,c
 11737  002212  362B               	rlcf	(___flmul@grs+2)^0,f,c
 11738  002214  362C               	rlcf	(___flmul@grs+3)^0,f,c
 11739  002216  0633               	decf	___flmul@temp^0,f,c
 11740  002218  A0D8               	btfss	status,0,c
 11741  00221A  0634               	decf	(___flmul@temp+1)^0,f,c
 11742  00221C                     l4714:
 11743  00221C  AE31               	btfss	(___flmul@prod+2)^0,7,c
 11744  00221E  EF13  F011         	goto	u4921
 11745  002222  EF15  F011         	goto	u4920
 11746  002226                     u4921:
 11747  002226  EFF9  F010         	goto	l4708
 11748  00222A                     u4920:
 11749  00222A  0E00               	movlw	0
 11750  00222C  6E2D               	movwf	___flmul@aexp^0,c
 11751  00222E  AE2C               	btfss	(___flmul@grs+3)^0,7,c
 11752  002230  EF1C  F011         	goto	u4931
 11753  002234  EF1E  F011         	goto	u4930
 11754  002238                     u4931:
 11755  002238  EF42  F011         	goto	l1314
 11756  00223C                     u4930:
 11757  00223C  0EFF               	movlw	255
 11758  00223E  1429               	andwf	___flmul@grs^0,w,c
 11759  002240  6E24               	movwf	??___flmul^0,c
 11760  002242  0EFF               	movlw	255
 11761  002244  142A               	andwf	(___flmul@grs+1)^0,w,c
 11762  002246  6E25               	movwf	(??___flmul+1)^0,c
 11763  002248  0EFF               	movlw	255
 11764  00224A  142B               	andwf	(___flmul@grs+2)^0,w,c
 11765  00224C  6E26               	movwf	(??___flmul+2)^0,c
 11766  00224E  0E7F               	movlw	127
 11767  002250  142C               	andwf	(___flmul@grs+3)^0,w,c
 11768  002252  6E27               	movwf	(??___flmul+3)^0,c
 11769  002254  5024               	movf	??___flmul^0,w,c
 11770  002256  1025               	iorwf	(??___flmul+1)^0,w,c
 11771  002258  1026               	iorwf	(??___flmul+2)^0,w,c
 11772  00225A  1027               	iorwf	(??___flmul+3)^0,w,c
 11773  00225C  B4D8               	btfsc	status,2,c
 11774  00225E  EF33  F011         	goto	u4941
 11775  002262  EF35  F011         	goto	u4940
 11776  002266                     u4941:
 11777  002266  EF39  F011         	goto	l1315
 11778  00226A                     u4940:
 11779  00226A                     l4722:
 11780  00226A  0E01               	movlw	1
 11781  00226C  6E2D               	movwf	___flmul@aexp^0,c
 11782  00226E  EF42  F011         	goto	l1314
 11783  002272                     l1315:
 11784  002272  A02F               	btfss	___flmul@prod^0,0,c
 11785  002274  EF3E  F011         	goto	u4951
 11786  002278  EF40  F011         	goto	u4950
 11787  00227C                     u4951:
 11788  00227C  EF42  F011         	goto	l1314
 11789  002280                     u4950:
 11790  002280  EF35  F011         	goto	l4722
 11791  002284                     l1314:
 11792  002284  502D               	movf	___flmul@aexp^0,w,c
 11793  002286  B4D8               	btfsc	status,2,c
 11794  002288  EF48  F011         	goto	u4961
 11795  00228C  EF4A  F011         	goto	u4960
 11796  002290                     u4961:
 11797  002290  EF6E  F011         	goto	l4734
 11798  002294                     u4960:
 11799  002294  0E01               	movlw	1
 11800  002296  262F               	addwf	___flmul@prod^0,f,c
 11801  002298  0E00               	movlw	0
 11802  00229A  2230               	addwfc	(___flmul@prod+1)^0,f,c
 11803  00229C  2231               	addwfc	(___flmul@prod+2)^0,f,c
 11804  00229E  2232               	addwfc	(___flmul@prod+3)^0,f,c
 11805  0022A0  A032               	btfss	(___flmul@prod+3)^0,0,c
 11806  0022A2  EF55  F011         	goto	u4971
 11807  0022A6  EF57  F011         	goto	u4970
 11808  0022AA                     u4971:
 11809  0022AA  EF6E  F011         	goto	l4734
 11810  0022AE                     u4970:
 11811  0022AE  C02F  F024         	movff	___flmul@prod,??___flmul
 11812  0022B2  C030  F025         	movff	___flmul@prod+1,??___flmul+1
 11813  0022B6  C031  F026         	movff	___flmul@prod+2,??___flmul+2
 11814  0022BA  C032  F027         	movff	___flmul@prod+3,??___flmul+3
 11815  0022BE  3427               	rlcf	(??___flmul+3)^0,w,c
 11816  0022C0  3227               	rrcf	(??___flmul+3)^0,f,c
 11817  0022C2  3226               	rrcf	(??___flmul+2)^0,f,c
 11818  0022C4  3225               	rrcf	(??___flmul+1)^0,f,c
 11819  0022C6  3224               	rrcf	??___flmul^0,f,c
 11820  0022C8  C024  F02F         	movff	??___flmul,___flmul@prod
 11821  0022CC  C025  F030         	movff	??___flmul+1,___flmul@prod+1
 11822  0022D0  C026  F031         	movff	??___flmul+2,___flmul@prod+2
 11823  0022D4  C027  F032         	movff	??___flmul+3,___flmul@prod+3
 11824  0022D8  4A33               	infsnz	___flmul@temp^0,f,c
 11825  0022DA  2A34               	incf	(___flmul@temp+1)^0,f,c
 11826  0022DC                     l4734:
 11827  0022DC  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11828  0022DE  EF79  F011         	goto	u4981
 11829  0022E2  5034               	movf	(___flmul@temp+1)^0,w,c
 11830  0022E4  E108               	bnz	u4980
 11831  0022E6  2833               	incf	___flmul@temp^0,w,c
 11832  0022E8  A0D8               	btfss	status,0,c
 11833  0022EA  EF79  F011         	goto	u4981
 11834  0022EE  EF7B  F011         	goto	u4980
 11835  0022F2                     u4981:
 11836  0022F2  EF85  F011         	goto	l4738
 11837  0022F6                     u4980:
 11838  0022F6  0E00               	movlw	0
 11839  0022F8  6E2F               	movwf	___flmul@prod^0,c
 11840  0022FA  0E00               	movlw	0
 11841  0022FC  6E30               	movwf	(___flmul@prod+1)^0,c
 11842  0022FE  0E80               	movlw	128
 11843  002300  6E31               	movwf	(___flmul@prod+2)^0,c
 11844  002302  0E7F               	movlw	127
 11845  002304  6E32               	movwf	(___flmul@prod+3)^0,c
 11846  002306  EFB3  F011         	goto	l4750
 11847  00230A                     l4738:
 11848  00230A  BE34               	btfsc	(___flmul@temp+1)^0,7,c
 11849  00230C  EF92  F011         	goto	u4990
 11850  002310  5034               	movf	(___flmul@temp+1)^0,w,c
 11851  002312  E106               	bnz	u4991
 11852  002314  0433               	decf	___flmul@temp^0,w,c
 11853  002316  B0D8               	btfsc	status,0,c
 11854  002318  EF90  F011         	goto	u4991
 11855  00231C  EF92  F011         	goto	u4990
 11856  002320                     u4991:
 11857  002320  EF9E  F011         	goto	l1322
 11858  002324                     u4990:
 11859  002324  0E00               	movlw	0
 11860  002326  6E2F               	movwf	___flmul@prod^0,c
 11861  002328  0E00               	movlw	0
 11862  00232A  6E30               	movwf	(___flmul@prod+1)^0,c
 11863  00232C  0E00               	movlw	0
 11864  00232E  6E31               	movwf	(___flmul@prod+2)^0,c
 11865  002330  0E00               	movlw	0
 11866  002332  6E32               	movwf	(___flmul@prod+3)^0,c
 11867  002334  0E00               	movlw	0
 11868  002336  6E28               	movwf	___flmul@sign^0,c
 11869  002338  EFB3  F011         	goto	l4750
 11870  00233C                     l1322:
 11871  00233C  C033  F02E         	movff	___flmul@temp,___flmul@bexp
 11872  002340  0EFF               	movlw	255
 11873  002342  162F               	andwf	___flmul@prod^0,f,c
 11874  002344  0EFF               	movlw	255
 11875  002346  1630               	andwf	(___flmul@prod+1)^0,f,c
 11876  002348  0E7F               	movlw	127
 11877  00234A  1631               	andwf	(___flmul@prod+2)^0,f,c
 11878  00234C  0E00               	movlw	0
 11879  00234E  1632               	andwf	(___flmul@prod+3)^0,f,c
 11880  002350  A02E               	btfss	___flmul@bexp^0,0,c
 11881  002352  EFAD  F011         	goto	u5001
 11882  002356  EFAF  F011         	goto	u5000
 11883  00235A                     u5001:
 11884  00235A  EFB0  F011         	goto	l4748
 11885  00235E                     u5000:
 11886  00235E  8E31               	bsf	(___flmul@prod+2)^0,7,c
 11887  002360                     l4748:
 11888  002360  90D8               	bcf	status,0,c
 11889  002362  302E               	rrcf	___flmul@bexp^0,w,c
 11890  002364  6E32               	movwf	(___flmul@prod+3)^0,c
 11891  002366                     l4750:
 11892  002366  5028               	movf	___flmul@sign^0,w,c
 11893  002368  1232               	iorwf	(___flmul@prod+3)^0,f,c
 11894  00236A  C02F  F01C         	movff	___flmul@prod,?___flmul
 11895  00236E  C030  F01D         	movff	___flmul@prod+1,?___flmul+1
 11896  002372  C031  F01E         	movff	___flmul@prod+2,?___flmul+2
 11897  002376  C032  F01F         	movff	___flmul@prod+3,?___flmul+3
 11898  00237A                     l1309:
 11899  00237A  0012               	return		;funcret
 11900  00237C                     __end_of___flmul:
 11901                           	callstack 0
 11902                           
 11903 ;; *************** function ___flge *****************
 11904 ;; Defined at:
 11905 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\flge.c"
 11906 ;; Parameters:    Size  Location     Type
 11907 ;;  ff1             4   52[COMRAM] unsigned char 
 11908 ;;  ff2             4   56[COMRAM] unsigned char 
 11909 ;; Auto vars:     Size  Location     Type
 11910 ;;		None
 11911 ;; Return value:  Size  Location     Type
 11912 ;;		None               void
 11913 ;; Registers used:
 11914 ;;		wreg, status,2, status,0
 11915 ;; Tracked objects:
 11916 ;;		On entry : 0/0
 11917 ;;		On exit  : 0/0
 11918 ;;		Unchanged: 0/0
 11919 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 11920 ;;      Params:         8       0       0       0       0       0       0
 11921 ;;      Locals:         0       0       0       0       0       0       0
 11922 ;;      Temps:          4       0       0       0       0       0       0
 11923 ;;      Totals:        12       0       0       0       0       0       0
 11924 ;;Total ram usage:       12 bytes
 11925 ;; Hardware stack levels used:    1
 11926 ;; Hardware stack levels required when called:    1
 11927 ;; This function calls:
 11928 ;;		Nothing
 11929 ;; This function is called by:
 11930 ;;		_secretMenu
 11931 ;;		_efgtoa
 11932 ;; This function uses a non-reentrant model
 11933 ;;
 11934                           
 11935                           	psect	text45
 11936  0043B0                     __ptext45:
 11937                           	callstack 0
 11938  0043B0                     ___flge:
 11939                           	callstack 22
 11940  0043B0  0E00               	movlw	0
 11941  0043B2  1435               	andwf	___flge@ff1^0,w,c
 11942  0043B4  6E3D               	movwf	??___flge^0,c
 11943  0043B6  0E00               	movlw	0
 11944  0043B8  1436               	andwf	(___flge@ff1+1)^0,w,c
 11945  0043BA  6E3E               	movwf	(??___flge+1)^0,c
 11946  0043BC  0E80               	movlw	128
 11947  0043BE  1437               	andwf	(___flge@ff1+2)^0,w,c
 11948  0043C0  6E3F               	movwf	(??___flge+2)^0,c
 11949  0043C2  0E7F               	movlw	127
 11950  0043C4  1438               	andwf	(___flge@ff1+3)^0,w,c
 11951  0043C6  6E40               	movwf	(??___flge+3)^0,c
 11952  0043C8  503D               	movf	??___flge^0,w,c
 11953  0043CA  103E               	iorwf	(??___flge+1)^0,w,c
 11954  0043CC  103F               	iorwf	(??___flge+2)^0,w,c
 11955  0043CE  1040               	iorwf	(??___flge+3)^0,w,c
 11956  0043D0  A4D8               	btfss	status,2,c
 11957  0043D2  EFED  F021         	goto	u5161
 11958  0043D6  EFEF  F021         	goto	u5160
 11959  0043DA                     u5161:
 11960  0043DA  EFF7  F021         	goto	l4862
 11961  0043DE                     u5160:
 11962  0043DE  0E00               	movlw	0
 11963  0043E0  6E35               	movwf	___flge@ff1^0,c
 11964  0043E2  0E00               	movlw	0
 11965  0043E4  6E36               	movwf	(___flge@ff1+1)^0,c
 11966  0043E6  0E00               	movlw	0
 11967  0043E8  6E37               	movwf	(___flge@ff1+2)^0,c
 11968  0043EA  0E00               	movlw	0
 11969  0043EC  6E38               	movwf	(___flge@ff1+3)^0,c
 11970  0043EE                     l4862:
 11971  0043EE  0E00               	movlw	0
 11972  0043F0  1439               	andwf	___flge@ff2^0,w,c
 11973  0043F2  6E3D               	movwf	??___flge^0,c
 11974  0043F4  0E00               	movlw	0
 11975  0043F6  143A               	andwf	(___flge@ff2+1)^0,w,c
 11976  0043F8  6E3E               	movwf	(??___flge+1)^0,c
 11977  0043FA  0E80               	movlw	128
 11978  0043FC  143B               	andwf	(___flge@ff2+2)^0,w,c
 11979  0043FE  6E3F               	movwf	(??___flge+2)^0,c
 11980  004400  0E7F               	movlw	127
 11981  004402  143C               	andwf	(___flge@ff2+3)^0,w,c
 11982  004404  6E40               	movwf	(??___flge+3)^0,c
 11983  004406  503D               	movf	??___flge^0,w,c
 11984  004408  103E               	iorwf	(??___flge+1)^0,w,c
 11985  00440A  103F               	iorwf	(??___flge+2)^0,w,c
 11986  00440C  1040               	iorwf	(??___flge+3)^0,w,c
 11987  00440E  A4D8               	btfss	status,2,c
 11988  004410  EF0C  F022         	goto	u5171
 11989  004414  EF0E  F022         	goto	u5170
 11990  004418                     u5171:
 11991  004418  EF16  F022         	goto	l4866
 11992  00441C                     u5170:
 11993  00441C  0E00               	movlw	0
 11994  00441E  6E39               	movwf	___flge@ff2^0,c
 11995  004420  0E00               	movlw	0
 11996  004422  6E3A               	movwf	(___flge@ff2+1)^0,c
 11997  004424  0E00               	movlw	0
 11998  004426  6E3B               	movwf	(___flge@ff2+2)^0,c
 11999  004428  0E00               	movlw	0
 12000  00442A  6E3C               	movwf	(___flge@ff2+3)^0,c
 12001  00442C                     l4866:
 12002  00442C  AE38               	btfss	(___flge@ff1+3)^0,7,c
 12003  00442E  EF1B  F022         	goto	u5181
 12004  004432  EF1D  F022         	goto	u5180
 12005  004436                     u5181:
 12006  004436  EF26  F022         	goto	l4870
 12007  00443A                     u5180:
 12008  00443A  6C35               	negf	___flge@ff1^0,c
 12009  00443C  1E36               	comf	(___flge@ff1+1)^0,f,c
 12010  00443E  B0D8               	btfsc	status,0,c
 12011  004440  2A36               	incf	(___flge@ff1+1)^0,f,c
 12012  004442  1E37               	comf	(___flge@ff1+2)^0,f,c
 12013  004444  B0D8               	btfsc	status,0,c
 12014  004446  2A37               	incf	(___flge@ff1+2)^0,f,c
 12015  004448  0E80               	movlw	128
 12016  00444A  5638               	subfwb	(___flge@ff1+3)^0,f,c
 12017  00444C                     l4870:
 12018  00444C  AE3C               	btfss	(___flge@ff2+3)^0,7,c
 12019  00444E  EF2B  F022         	goto	u5191
 12020  004452  EF2D  F022         	goto	u5190
 12021  004456                     u5191:
 12022  004456  EF36  F022         	goto	l956
 12023  00445A                     u5190:
 12024  00445A  6C39               	negf	___flge@ff2^0,c
 12025  00445C  1E3A               	comf	(___flge@ff2+1)^0,f,c
 12026  00445E  B0D8               	btfsc	status,0,c
 12027  004460  2A3A               	incf	(___flge@ff2+1)^0,f,c
 12028  004462  1E3B               	comf	(___flge@ff2+2)^0,f,c
 12029  004464  B0D8               	btfsc	status,0,c
 12030  004466  2A3B               	incf	(___flge@ff2+2)^0,f,c
 12031  004468  0E80               	movlw	128
 12032  00446A  563C               	subfwb	(___flge@ff2+3)^0,f,c
 12033  00446C                     l956:
 12034  00446C  0E00               	movlw	0
 12035  00446E  1A35               	xorwf	___flge@ff1^0,f,c
 12036  004470  0E00               	movlw	0
 12037  004472  1A36               	xorwf	(___flge@ff1+1)^0,f,c
 12038  004474  0E00               	movlw	0
 12039  004476  1A37               	xorwf	(___flge@ff1+2)^0,f,c
 12040  004478  0E80               	movlw	128
 12041  00447A  1A38               	xorwf	(___flge@ff1+3)^0,f,c
 12042  00447C  0E00               	movlw	0
 12043  00447E  1A39               	xorwf	___flge@ff2^0,f,c
 12044  004480  0E00               	movlw	0
 12045  004482  1A3A               	xorwf	(___flge@ff2+1)^0,f,c
 12046  004484  0E00               	movlw	0
 12047  004486  1A3B               	xorwf	(___flge@ff2+2)^0,f,c
 12048  004488  0E80               	movlw	128
 12049  00448A  1A3C               	xorwf	(___flge@ff2+3)^0,f,c
 12050  00448C  5039               	movf	___flge@ff2^0,w,c
 12051  00448E  5C35               	subwf	___flge@ff1^0,w,c
 12052  004490  503A               	movf	(___flge@ff2+1)^0,w,c
 12053  004492  5836               	subwfb	(___flge@ff1+1)^0,w,c
 12054  004494  503B               	movf	(___flge@ff2+2)^0,w,c
 12055  004496  5837               	subwfb	(___flge@ff1+2)^0,w,c
 12056  004498  503C               	movf	(___flge@ff2+3)^0,w,c
 12057  00449A  5838               	subwfb	(___flge@ff1+3)^0,w,c
 12058  00449C  B0D8               	btfsc	status,0,c
 12059  00449E  EF53  F022         	goto	u5201
 12060  0044A2  EF55  F022         	goto	u5200
 12061  0044A6                     u5201:
 12062  0044A6  EF58  F022         	goto	l4876
 12063  0044AA                     u5200:
 12064  0044AA  90D8               	bcf	status,0,c
 12065  0044AC  EF59  F022         	goto	l961
 12066  0044B0                     l4876:
 12067  0044B0  80D8               	bsf	status,0,c
 12068  0044B2                     l961:
 12069  0044B2  0012               	return		;funcret
 12070  0044B4                     __end_of___flge:
 12071                           	callstack 0
 12072                           
 12073 ;; *************** function ___fleq *****************
 12074 ;; Defined at:
 12075 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\fleq.c"
 12076 ;; Parameters:    Size  Location     Type
 12077 ;;  ff1             4    0[COMRAM] unsigned char 
 12078 ;;  ff2             4    4[COMRAM] unsigned char 
 12079 ;; Auto vars:     Size  Location     Type
 12080 ;;		None
 12081 ;; Return value:  Size  Location     Type
 12082 ;;		None               void
 12083 ;; Registers used:
 12084 ;;		wreg, status,2, status,0
 12085 ;; Tracked objects:
 12086 ;;		On entry : 0/0
 12087 ;;		On exit  : 0/0
 12088 ;;		Unchanged: 0/0
 12089 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12090 ;;      Params:         8       0       0       0       0       0       0
 12091 ;;      Locals:         0       0       0       0       0       0       0
 12092 ;;      Temps:          4       0       0       0       0       0       0
 12093 ;;      Totals:        12       0       0       0       0       0       0
 12094 ;;Total ram usage:       12 bytes
 12095 ;; Hardware stack levels used:    1
 12096 ;; Hardware stack levels required when called:    1
 12097 ;; This function calls:
 12098 ;;		Nothing
 12099 ;; This function is called by:
 12100 ;;		_efgtoa
 12101 ;; This function uses a non-reentrant model
 12102 ;;
 12103                           
 12104                           	psect	text46
 12105  004BE2                     __ptext46:
 12106                           	callstack 0
 12107  004BE2                     ___fleq:
 12108                           	callstack 22
 12109  004BE2  0E00               	movlw	0
 12110  004BE4  1401               	andwf	___fleq@ff1^0,w,c
 12111  004BE6  6E09               	movwf	??___fleq^0,c
 12112  004BE8  0E00               	movlw	0
 12113  004BEA  1402               	andwf	(___fleq@ff1+1)^0,w,c
 12114  004BEC  6E0A               	movwf	(??___fleq+1)^0,c
 12115  004BEE  0E80               	movlw	128
 12116  004BF0  1403               	andwf	(___fleq@ff1+2)^0,w,c
 12117  004BF2  6E0B               	movwf	(??___fleq+2)^0,c
 12118  004BF4  0E7F               	movlw	127
 12119  004BF6  1404               	andwf	(___fleq@ff1+3)^0,w,c
 12120  004BF8  6E0C               	movwf	(??___fleq+3)^0,c
 12121  004BFA  5009               	movf	??___fleq^0,w,c
 12122  004BFC  100A               	iorwf	(??___fleq+1)^0,w,c
 12123  004BFE  100B               	iorwf	(??___fleq+2)^0,w,c
 12124  004C00  100C               	iorwf	(??___fleq+3)^0,w,c
 12125  004C02  A4D8               	btfss	status,2,c
 12126  004C04  EF06  F026         	goto	u5131
 12127  004C08  EF08  F026         	goto	u5130
 12128  004C0C                     u5131:
 12129  004C0C  EF10  F026         	goto	l4846
 12130  004C10                     u5130:
 12131  004C10  0E00               	movlw	0
 12132  004C12  6E01               	movwf	___fleq@ff1^0,c
 12133  004C14  0E00               	movlw	0
 12134  004C16  6E02               	movwf	(___fleq@ff1+1)^0,c
 12135  004C18  0E00               	movlw	0
 12136  004C1A  6E03               	movwf	(___fleq@ff1+2)^0,c
 12137  004C1C  0E00               	movlw	0
 12138  004C1E  6E04               	movwf	(___fleq@ff1+3)^0,c
 12139  004C20                     l4846:
 12140  004C20  0E00               	movlw	0
 12141  004C22  1405               	andwf	___fleq@ff2^0,w,c
 12142  004C24  6E09               	movwf	??___fleq^0,c
 12143  004C26  0E00               	movlw	0
 12144  004C28  1406               	andwf	(___fleq@ff2+1)^0,w,c
 12145  004C2A  6E0A               	movwf	(??___fleq+1)^0,c
 12146  004C2C  0E80               	movlw	128
 12147  004C2E  1407               	andwf	(___fleq@ff2+2)^0,w,c
 12148  004C30  6E0B               	movwf	(??___fleq+2)^0,c
 12149  004C32  0E7F               	movlw	127
 12150  004C34  1408               	andwf	(___fleq@ff2+3)^0,w,c
 12151  004C36  6E0C               	movwf	(??___fleq+3)^0,c
 12152  004C38  5009               	movf	??___fleq^0,w,c
 12153  004C3A  100A               	iorwf	(??___fleq+1)^0,w,c
 12154  004C3C  100B               	iorwf	(??___fleq+2)^0,w,c
 12155  004C3E  100C               	iorwf	(??___fleq+3)^0,w,c
 12156  004C40  A4D8               	btfss	status,2,c
 12157  004C42  EF25  F026         	goto	u5141
 12158  004C46  EF27  F026         	goto	u5140
 12159  004C4A                     u5141:
 12160  004C4A  EF2F  F026         	goto	l4850
 12161  004C4E                     u5140:
 12162  004C4E  0E00               	movlw	0
 12163  004C50  6E05               	movwf	___fleq@ff2^0,c
 12164  004C52  0E00               	movlw	0
 12165  004C54  6E06               	movwf	(___fleq@ff2+1)^0,c
 12166  004C56  0E00               	movlw	0
 12167  004C58  6E07               	movwf	(___fleq@ff2+2)^0,c
 12168  004C5A  0E00               	movlw	0
 12169  004C5C  6E08               	movwf	(___fleq@ff2+3)^0,c
 12170  004C5E                     l4850:
 12171  004C5E  5005               	movf	___fleq@ff2^0,w,c
 12172  004C60  1801               	xorwf	___fleq@ff1^0,w,c
 12173  004C62  E10F               	bnz	u5150
 12174  004C64  5006               	movf	(___fleq@ff2+1)^0,w,c
 12175  004C66  1802               	xorwf	(___fleq@ff1+1)^0,w,c
 12176  004C68  E10C               	bnz	u5150
 12177  004C6A  5007               	movf	(___fleq@ff2+2)^0,w,c
 12178  004C6C  1803               	xorwf	(___fleq@ff1+2)^0,w,c
 12179  004C6E  E109               	bnz	u5150
 12180  004C70  5008               	movf	(___fleq@ff2+3)^0,w,c
 12181  004C72  1804               	xorwf	(___fleq@ff1+3)^0,w,c
 12182  004C74  B4D8               	btfsc	status,2,c
 12183  004C76  EF3F  F026         	goto	u5151
 12184  004C7A  EF41  F026         	goto	u5150
 12185  004C7E                     u5151:
 12186  004C7E  EF44  F026         	goto	l4854
 12187  004C82                     u5150:
 12188  004C82  90D8               	bcf	status,0,c
 12189  004C84  EF45  F026         	goto	l950
 12190  004C88                     l4854:
 12191  004C88  80D8               	bsf	status,0,c
 12192  004C8A                     l950:
 12193  004C8A  0012               	return		;funcret
 12194  004C8C                     __end_of___fleq:
 12195                           	callstack 0
 12196                           
 12197 ;; *************** function ___fldiv *****************
 12198 ;; Defined at:
 12199 ;;		line 11 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\sprcdiv.c"
 12200 ;; Parameters:    Size  Location     Type
 12201 ;;  b               4   52[COMRAM] unsigned char 
 12202 ;;  a               4   56[COMRAM] unsigned char 
 12203 ;; Auto vars:     Size  Location     Type
 12204 ;;  grs             4   71[COMRAM] unsigned long 
 12205 ;;  rem             4   64[COMRAM] unsigned long 
 12206 ;;  new_exp         2   69[COMRAM] short 
 12207 ;;  aexp            1   76[COMRAM] unsigned char 
 12208 ;;  bexp            1   75[COMRAM] unsigned char 
 12209 ;;  sign            1   68[COMRAM] unsigned char 
 12210 ;; Return value:  Size  Location     Type
 12211 ;;                  4   52[COMRAM] unsigned char 
 12212 ;; Registers used:
 12213 ;;		wreg, status,2, status,0
 12214 ;; Tracked objects:
 12215 ;;		On entry : 0/0
 12216 ;;		On exit  : 0/0
 12217 ;;		Unchanged: 0/0
 12218 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12219 ;;      Params:         8       0       0       0       0       0       0
 12220 ;;      Locals:        13       0       0       0       0       0       0
 12221 ;;      Temps:          4       0       0       0       0       0       0
 12222 ;;      Totals:        25       0       0       0       0       0       0
 12223 ;;Total ram usage:       25 bytes
 12224 ;; Hardware stack levels used:    1
 12225 ;; Hardware stack levels required when called:    1
 12226 ;; This function calls:
 12227 ;;		Nothing
 12228 ;; This function is called by:
 12229 ;;		_scanAdcConversion
 12230 ;;		_efgtoa
 12231 ;; This function uses a non-reentrant model
 12232 ;;
 12233                           
 12234                           	psect	text47
 12235  00237C                     __ptext47:
 12236                           	callstack 0
 12237  00237C                     ___fldiv:
 12238                           	callstack 22
 12239  00237C  5038               	movf	(___fldiv@b+3)^0,w,c
 12240  00237E  0B80               	andlw	128
 12241  002380  6E45               	movwf	___fldiv@sign^0,c
 12242  002382  5038               	movf	(___fldiv@b+3)^0,w,c
 12243  002384  2438               	addwf	(___fldiv@b+3)^0,w,c
 12244  002386  6E4C               	movwf	___fldiv@bexp^0,c
 12245  002388  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12246  00238A  EFC9  F011         	goto	u4591
 12247  00238E  EFCB  F011         	goto	u4590
 12248  002392                     u4591:
 12249  002392  EFCC  F011         	goto	l4494
 12250  002396                     u4590:
 12251  002396  804C               	bsf	___fldiv@bexp^0,0,c
 12252  002398                     l4494:
 12253  002398  504C               	movf	___fldiv@bexp^0,w,c
 12254  00239A  B4D8               	btfsc	status,2,c
 12255  00239C  EFD2  F011         	goto	u4601
 12256  0023A0  EFD4  F011         	goto	u4600
 12257  0023A4                     u4601:
 12258  0023A4  EFE9  F011         	goto	l4504
 12259  0023A8                     u4600:
 12260  0023A8  284C               	incf	___fldiv@bexp^0,w,c
 12261  0023AA  A4D8               	btfss	status,2,c
 12262  0023AC  EFDA  F011         	goto	u4611
 12263  0023B0  EFDC  F011         	goto	u4610
 12264  0023B4                     u4611:
 12265  0023B4  EFE4  F011         	goto	l4500
 12266  0023B8                     u4610:
 12267  0023B8  0E00               	movlw	0
 12268  0023BA  6E35               	movwf	___fldiv@b^0,c
 12269  0023BC  0E00               	movlw	0
 12270  0023BE  6E36               	movwf	(___fldiv@b+1)^0,c
 12271  0023C0  0E00               	movlw	0
 12272  0023C2  6E37               	movwf	(___fldiv@b+2)^0,c
 12273  0023C4  0E00               	movlw	0
 12274  0023C6  6E38               	movwf	(___fldiv@b+3)^0,c
 12275  0023C8                     l4500:
 12276  0023C8  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12277  0023CA  0E00               	movlw	0
 12278  0023CC  6E38               	movwf	(___fldiv@b+3)^0,c
 12279  0023CE  EFF1  F011         	goto	l4506
 12280  0023D2                     l4504:
 12281  0023D2  0E00               	movlw	0
 12282  0023D4  6E35               	movwf	___fldiv@b^0,c
 12283  0023D6  0E00               	movlw	0
 12284  0023D8  6E36               	movwf	(___fldiv@b+1)^0,c
 12285  0023DA  0E00               	movlw	0
 12286  0023DC  6E37               	movwf	(___fldiv@b+2)^0,c
 12287  0023DE  0E00               	movlw	0
 12288  0023E0  6E38               	movwf	(___fldiv@b+3)^0,c
 12289  0023E2                     l4506:
 12290  0023E2  503C               	movf	(___fldiv@a+3)^0,w,c
 12291  0023E4  0B80               	andlw	128
 12292  0023E6  1A45               	xorwf	___fldiv@sign^0,f,c
 12293  0023E8  503C               	movf	(___fldiv@a+3)^0,w,c
 12294  0023EA  243C               	addwf	(___fldiv@a+3)^0,w,c
 12295  0023EC  6E4D               	movwf	___fldiv@aexp^0,c
 12296  0023EE  AE3B               	btfss	(___fldiv@a+2)^0,7,c
 12297  0023F0  EFFC  F011         	goto	u4621
 12298  0023F4  EFFE  F011         	goto	u4620
 12299  0023F8                     u4621:
 12300  0023F8  EFFF  F011         	goto	l4514
 12301  0023FC                     u4620:
 12302  0023FC  804D               	bsf	___fldiv@aexp^0,0,c
 12303  0023FE                     l4514:
 12304  0023FE  504D               	movf	___fldiv@aexp^0,w,c
 12305  002400  B4D8               	btfsc	status,2,c
 12306  002402  EF05  F012         	goto	u4631
 12307  002406  EF07  F012         	goto	u4630
 12308  00240A                     u4631:
 12309  00240A  EF1C  F012         	goto	l4524
 12310  00240E                     u4630:
 12311  00240E  284D               	incf	___fldiv@aexp^0,w,c
 12312  002410  A4D8               	btfss	status,2,c
 12313  002412  EF0D  F012         	goto	u4641
 12314  002416  EF0F  F012         	goto	u4640
 12315  00241A                     u4641:
 12316  00241A  EF17  F012         	goto	l4520
 12317  00241E                     u4640:
 12318  00241E  0E00               	movlw	0
 12319  002420  6E39               	movwf	___fldiv@a^0,c
 12320  002422  0E00               	movlw	0
 12321  002424  6E3A               	movwf	(___fldiv@a+1)^0,c
 12322  002426  0E00               	movlw	0
 12323  002428  6E3B               	movwf	(___fldiv@a+2)^0,c
 12324  00242A  0E00               	movlw	0
 12325  00242C  6E3C               	movwf	(___fldiv@a+3)^0,c
 12326  00242E                     l4520:
 12327  00242E  8E3B               	bsf	(___fldiv@a+2)^0,7,c
 12328  002430  0E00               	movlw	0
 12329  002432  6E3C               	movwf	(___fldiv@a+3)^0,c
 12330  002434  EF24  F012         	goto	l4526
 12331  002438                     l4524:
 12332  002438  0E00               	movlw	0
 12333  00243A  6E39               	movwf	___fldiv@a^0,c
 12334  00243C  0E00               	movlw	0
 12335  00243E  6E3A               	movwf	(___fldiv@a+1)^0,c
 12336  002440  0E00               	movlw	0
 12337  002442  6E3B               	movwf	(___fldiv@a+2)^0,c
 12338  002444  0E00               	movlw	0
 12339  002446  6E3C               	movwf	(___fldiv@a+3)^0,c
 12340  002448                     l4526:
 12341  002448  5039               	movf	___fldiv@a^0,w,c
 12342  00244A  103A               	iorwf	(___fldiv@a+1)^0,w,c
 12343  00244C  103B               	iorwf	(___fldiv@a+2)^0,w,c
 12344  00244E  103C               	iorwf	(___fldiv@a+3)^0,w,c
 12345  002450  A4D8               	btfss	status,2,c
 12346  002452  EF2D  F012         	goto	u4651
 12347  002456  EF2F  F012         	goto	u4650
 12348  00245A                     u4651:
 12349  00245A  EF47  F012         	goto	l4538
 12350  00245E                     u4650:
 12351  00245E  0E00               	movlw	0
 12352  002460  6E35               	movwf	___fldiv@b^0,c
 12353  002462  0E00               	movlw	0
 12354  002464  6E36               	movwf	(___fldiv@b+1)^0,c
 12355  002466  0E00               	movlw	0
 12356  002468  6E37               	movwf	(___fldiv@b+2)^0,c
 12357  00246A  0E00               	movlw	0
 12358  00246C  6E38               	movwf	(___fldiv@b+3)^0,c
 12359  00246E  0E80               	movlw	128
 12360  002470  1237               	iorwf	(___fldiv@b+2)^0,f,c
 12361  002472  0E7F               	movlw	127
 12362  002474  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12363  002476                     l4532:
 12364  002476  5045               	movf	___fldiv@sign^0,w,c
 12365  002478  1238               	iorwf	(___fldiv@b+3)^0,f,c
 12366  00247A  C035  F035         	movff	___fldiv@b,?___fldiv
 12367  00247E  C036  F036         	movff	___fldiv@b+1,?___fldiv+1
 12368  002482  C037  F037         	movff	___fldiv@b+2,?___fldiv+2
 12369  002486  C038  F038         	movff	___fldiv@b+3,?___fldiv+3
 12370  00248A  EF8A  F013         	goto	l1273
 12371  00248E                     l4538:
 12372  00248E  504C               	movf	___fldiv@bexp^0,w,c
 12373  002490  A4D8               	btfss	status,2,c
 12374  002492  EF4D  F012         	goto	u4661
 12375  002496  EF4F  F012         	goto	u4660
 12376  00249A                     u4661:
 12377  00249A  EF59  F012         	goto	l4546
 12378  00249E                     u4660:
 12379  00249E  0E00               	movlw	0
 12380  0024A0  6E35               	movwf	?___fldiv^0,c
 12381  0024A2  0E00               	movlw	0
 12382  0024A4  6E36               	movwf	(?___fldiv+1)^0,c
 12383  0024A6  0E00               	movlw	0
 12384  0024A8  6E37               	movwf	(?___fldiv+2)^0,c
 12385  0024AA  0E00               	movlw	0
 12386  0024AC  6E38               	movwf	(?___fldiv+3)^0,c
 12387  0024AE  EF8A  F013         	goto	l1273
 12388  0024B2                     l4546:
 12389  0024B2  504D               	movf	___fldiv@aexp^0,w,c
 12390  0024B4  C04C  F03D         	movff	___fldiv@bexp,??___fldiv
 12391  0024B8  6A3E               	clrf	(??___fldiv+1)^0,c
 12392  0024BA  5E3D               	subwf	??___fldiv^0,f,c
 12393  0024BC  0E00               	movlw	0
 12394  0024BE  5A3E               	subwfb	(??___fldiv+1)^0,f,c
 12395  0024C0  0E7F               	movlw	127
 12396  0024C2  243D               	addwf	??___fldiv^0,w,c
 12397  0024C4  6E46               	movwf	___fldiv@new_exp^0,c
 12398  0024C6  0E00               	movlw	0
 12399  0024C8  203E               	addwfc	(??___fldiv+1)^0,w,c
 12400  0024CA  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12401  0024CC  C035  F041         	movff	___fldiv@b,___fldiv@rem
 12402  0024D0  C036  F042         	movff	___fldiv@b+1,___fldiv@rem+1
 12403  0024D4  C037  F043         	movff	___fldiv@b+2,___fldiv@rem+2
 12404  0024D8  C038  F044         	movff	___fldiv@b+3,___fldiv@rem+3
 12405  0024DC  0E00               	movlw	0
 12406  0024DE  6E35               	movwf	___fldiv@b^0,c
 12407  0024E0  0E00               	movlw	0
 12408  0024E2  6E36               	movwf	(___fldiv@b+1)^0,c
 12409  0024E4  0E00               	movlw	0
 12410  0024E6  6E37               	movwf	(___fldiv@b+2)^0,c
 12411  0024E8  0E00               	movlw	0
 12412  0024EA  6E38               	movwf	(___fldiv@b+3)^0,c
 12413  0024EC  0E00               	movlw	0
 12414  0024EE  6E48               	movwf	___fldiv@grs^0,c
 12415  0024F0  0E00               	movlw	0
 12416  0024F2  6E49               	movwf	(___fldiv@grs+1)^0,c
 12417  0024F4  0E00               	movlw	0
 12418  0024F6  6E4A               	movwf	(___fldiv@grs+2)^0,c
 12419  0024F8  0E00               	movlw	0
 12420  0024FA  6E4B               	movwf	(___fldiv@grs+3)^0,c
 12421  0024FC  0E00               	movlw	0
 12422  0024FE  6E4D               	movwf	___fldiv@aexp^0,c
 12423  002500  EFBA  F012         	goto	l1275
 12424  002504                     l4556:
 12425  002504  504D               	movf	___fldiv@aexp^0,w,c
 12426  002506  B4D8               	btfsc	status,2,c
 12427  002508  EF88  F012         	goto	u4671
 12428  00250C  EF8A  F012         	goto	u4670
 12429  002510                     u4671:
 12430  002510  EFA1  F012         	goto	l4564
 12431  002514                     u4670:
 12432  002514  90D8               	bcf	status,0,c
 12433  002516  3641               	rlcf	___fldiv@rem^0,f,c
 12434  002518  3642               	rlcf	(___fldiv@rem+1)^0,f,c
 12435  00251A  3643               	rlcf	(___fldiv@rem+2)^0,f,c
 12436  00251C  3644               	rlcf	(___fldiv@rem+3)^0,f,c
 12437  00251E  90D8               	bcf	status,0,c
 12438  002520  3635               	rlcf	___fldiv@b^0,f,c
 12439  002522  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12440  002524  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12441  002526  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12442  002528  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12443  00252A  EF99  F012         	goto	u4681
 12444  00252E  EF9B  F012         	goto	u4680
 12445  002532                     u4681:
 12446  002532  EF9C  F012         	goto	l1278
 12447  002536                     u4680:
 12448  002536  8035               	bsf	___fldiv@b^0,0,c
 12449  002538                     l1278:
 12450  002538  90D8               	bcf	status,0,c
 12451  00253A  3648               	rlcf	___fldiv@grs^0,f,c
 12452  00253C  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12453  00253E  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12454  002540  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12455  002542                     l4564:
 12456  002542  5039               	movf	___fldiv@a^0,w,c
 12457  002544  5C41               	subwf	___fldiv@rem^0,w,c
 12458  002546  503A               	movf	(___fldiv@a+1)^0,w,c
 12459  002548  5842               	subwfb	(___fldiv@rem+1)^0,w,c
 12460  00254A  503B               	movf	(___fldiv@a+2)^0,w,c
 12461  00254C  5843               	subwfb	(___fldiv@rem+2)^0,w,c
 12462  00254E  503C               	movf	(___fldiv@a+3)^0,w,c
 12463  002550  5844               	subwfb	(___fldiv@rem+3)^0,w,c
 12464  002552  A0D8               	btfss	status,0,c
 12465  002554  EFAE  F012         	goto	u4691
 12466  002558  EFB0  F012         	goto	u4690
 12467  00255C                     u4691:
 12468  00255C  EFB9  F012         	goto	l4570
 12469  002560                     u4690:
 12470  002560  8C4B               	bsf	(___fldiv@grs+3)^0,6,c
 12471  002562  5039               	movf	___fldiv@a^0,w,c
 12472  002564  5E41               	subwf	___fldiv@rem^0,f,c
 12473  002566  503A               	movf	(___fldiv@a+1)^0,w,c
 12474  002568  5A42               	subwfb	(___fldiv@rem+1)^0,f,c
 12475  00256A  503B               	movf	(___fldiv@a+2)^0,w,c
 12476  00256C  5A43               	subwfb	(___fldiv@rem+2)^0,f,c
 12477  00256E  503C               	movf	(___fldiv@a+3)^0,w,c
 12478  002570  5A44               	subwfb	(___fldiv@rem+3)^0,f,c
 12479  002572                     l4570:
 12480  002572  2A4D               	incf	___fldiv@aexp^0,f,c
 12481  002574                     l1275:
 12482  002574  0E19               	movlw	25
 12483  002576  644D               	cpfsgt	___fldiv@aexp^0,c
 12484  002578  EFC0  F012         	goto	u4701
 12485  00257C  EFC2  F012         	goto	u4700
 12486  002580                     u4701:
 12487  002580  EF82  F012         	goto	l4556
 12488  002584                     u4700:
 12489  002584  5041               	movf	___fldiv@rem^0,w,c
 12490  002586  1042               	iorwf	(___fldiv@rem+1)^0,w,c
 12491  002588  1043               	iorwf	(___fldiv@rem+2)^0,w,c
 12492  00258A  1044               	iorwf	(___fldiv@rem+3)^0,w,c
 12493  00258C  B4D8               	btfsc	status,2,c
 12494  00258E  EFCB  F012         	goto	u4711
 12495  002592  EFCD  F012         	goto	u4710
 12496  002596                     u4711:
 12497  002596  EFE5  F012         	goto	l4582
 12498  00259A                     u4710:
 12499  00259A  8048               	bsf	___fldiv@grs^0,0,c
 12500  00259C  EFE5  F012         	goto	l4582
 12501  0025A0                     l4576:
 12502  0025A0  90D8               	bcf	status,0,c
 12503  0025A2  3635               	rlcf	___fldiv@b^0,f,c
 12504  0025A4  3636               	rlcf	(___fldiv@b+1)^0,f,c
 12505  0025A6  3637               	rlcf	(___fldiv@b+2)^0,f,c
 12506  0025A8  3638               	rlcf	(___fldiv@b+3)^0,f,c
 12507  0025AA  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12508  0025AC  EFDA  F012         	goto	u4721
 12509  0025B0  EFDC  F012         	goto	u4720
 12510  0025B4                     u4721:
 12511  0025B4  EFDD  F012         	goto	l1284
 12512  0025B8                     u4720:
 12513  0025B8  8035               	bsf	___fldiv@b^0,0,c
 12514  0025BA                     l1284:
 12515  0025BA  90D8               	bcf	status,0,c
 12516  0025BC  3648               	rlcf	___fldiv@grs^0,f,c
 12517  0025BE  3649               	rlcf	(___fldiv@grs+1)^0,f,c
 12518  0025C0  364A               	rlcf	(___fldiv@grs+2)^0,f,c
 12519  0025C2  364B               	rlcf	(___fldiv@grs+3)^0,f,c
 12520  0025C4  0646               	decf	___fldiv@new_exp^0,f,c
 12521  0025C6  A0D8               	btfss	status,0,c
 12522  0025C8  0647               	decf	(___fldiv@new_exp+1)^0,f,c
 12523  0025CA                     l4582:
 12524  0025CA  AE37               	btfss	(___fldiv@b+2)^0,7,c
 12525  0025CC  EFEA  F012         	goto	u4731
 12526  0025D0  EFEC  F012         	goto	u4730
 12527  0025D4                     u4731:
 12528  0025D4  EFD0  F012         	goto	l4576
 12529  0025D8                     u4730:
 12530  0025D8  0E00               	movlw	0
 12531  0025DA  6E4D               	movwf	___fldiv@aexp^0,c
 12532  0025DC  AE4B               	btfss	(___fldiv@grs+3)^0,7,c
 12533  0025DE  EFF3  F012         	goto	u4741
 12534  0025E2  EFF5  F012         	goto	u4740
 12535  0025E6                     u4741:
 12536  0025E6  EF19  F013         	goto	l1286
 12537  0025EA                     u4740:
 12538  0025EA  0EFF               	movlw	255
 12539  0025EC  1448               	andwf	___fldiv@grs^0,w,c
 12540  0025EE  6E3D               	movwf	??___fldiv^0,c
 12541  0025F0  0EFF               	movlw	255
 12542  0025F2  1449               	andwf	(___fldiv@grs+1)^0,w,c
 12543  0025F4  6E3E               	movwf	(??___fldiv+1)^0,c
 12544  0025F6  0EFF               	movlw	255
 12545  0025F8  144A               	andwf	(___fldiv@grs+2)^0,w,c
 12546  0025FA  6E3F               	movwf	(??___fldiv+2)^0,c
 12547  0025FC  0E7F               	movlw	127
 12548  0025FE  144B               	andwf	(___fldiv@grs+3)^0,w,c
 12549  002600  6E40               	movwf	(??___fldiv+3)^0,c
 12550  002602  503D               	movf	??___fldiv^0,w,c
 12551  002604  103E               	iorwf	(??___fldiv+1)^0,w,c
 12552  002606  103F               	iorwf	(??___fldiv+2)^0,w,c
 12553  002608  1040               	iorwf	(??___fldiv+3)^0,w,c
 12554  00260A  B4D8               	btfsc	status,2,c
 12555  00260C  EF0A  F013         	goto	u4751
 12556  002610  EF0C  F013         	goto	u4750
 12557  002614                     u4751:
 12558  002614  EF10  F013         	goto	l1287
 12559  002618                     u4750:
 12560  002618                     l4590:
 12561  002618  0E01               	movlw	1
 12562  00261A  6E4D               	movwf	___fldiv@aexp^0,c
 12563  00261C  EF19  F013         	goto	l1286
 12564  002620                     l1287:
 12565  002620  A035               	btfss	___fldiv@b^0,0,c
 12566  002622  EF15  F013         	goto	u4761
 12567  002626  EF17  F013         	goto	u4760
 12568  00262A                     u4761:
 12569  00262A  EF19  F013         	goto	l1286
 12570  00262E                     u4760:
 12571  00262E  EF0C  F013         	goto	l4590
 12572  002632                     l1286:
 12573  002632  504D               	movf	___fldiv@aexp^0,w,c
 12574  002634  B4D8               	btfsc	status,2,c
 12575  002636  EF1F  F013         	goto	u4771
 12576  00263A  EF21  F013         	goto	u4770
 12577  00263E                     u4771:
 12578  00263E  EF45  F013         	goto	l4602
 12579  002642                     u4770:
 12580  002642  0E01               	movlw	1
 12581  002644  2635               	addwf	___fldiv@b^0,f,c
 12582  002646  0E00               	movlw	0
 12583  002648  2236               	addwfc	(___fldiv@b+1)^0,f,c
 12584  00264A  2237               	addwfc	(___fldiv@b+2)^0,f,c
 12585  00264C  2238               	addwfc	(___fldiv@b+3)^0,f,c
 12586  00264E  A038               	btfss	(___fldiv@b+3)^0,0,c
 12587  002650  EF2C  F013         	goto	u4781
 12588  002654  EF2E  F013         	goto	u4780
 12589  002658                     u4781:
 12590  002658  EF45  F013         	goto	l4602
 12591  00265C                     u4780:
 12592  00265C  C035  F03D         	movff	___fldiv@b,??___fldiv
 12593  002660  C036  F03E         	movff	___fldiv@b+1,??___fldiv+1
 12594  002664  C037  F03F         	movff	___fldiv@b+2,??___fldiv+2
 12595  002668  C038  F040         	movff	___fldiv@b+3,??___fldiv+3
 12596  00266C  3440               	rlcf	(??___fldiv+3)^0,w,c
 12597  00266E  3240               	rrcf	(??___fldiv+3)^0,f,c
 12598  002670  323F               	rrcf	(??___fldiv+2)^0,f,c
 12599  002672  323E               	rrcf	(??___fldiv+1)^0,f,c
 12600  002674  323D               	rrcf	??___fldiv^0,f,c
 12601  002676  C03D  F035         	movff	??___fldiv,___fldiv@b
 12602  00267A  C03E  F036         	movff	??___fldiv+1,___fldiv@b+1
 12603  00267E  C03F  F037         	movff	??___fldiv+2,___fldiv@b+2
 12604  002682  C040  F038         	movff	??___fldiv+3,___fldiv@b+3
 12605  002686  4A46               	infsnz	___fldiv@new_exp^0,f,c
 12606  002688  2A47               	incf	(___fldiv@new_exp+1)^0,f,c
 12607  00268A                     l4602:
 12608  00268A  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12609  00268C  EF50  F013         	goto	u4791
 12610  002690  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12611  002692  E108               	bnz	u4790
 12612  002694  2846               	incf	___fldiv@new_exp^0,w,c
 12613  002696  A0D8               	btfss	status,0,c
 12614  002698  EF50  F013         	goto	u4791
 12615  00269C  EF52  F013         	goto	u4790
 12616  0026A0                     u4791:
 12617  0026A0  EF5D  F013         	goto	l4606
 12618  0026A4                     u4790:
 12619  0026A4  0E00               	movlw	0
 12620  0026A6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12621  0026A8  6846               	setf	___fldiv@new_exp^0,c
 12622  0026AA  0E00               	movlw	0
 12623  0026AC  6E35               	movwf	___fldiv@b^0,c
 12624  0026AE  0E00               	movlw	0
 12625  0026B0  6E36               	movwf	(___fldiv@b+1)^0,c
 12626  0026B2  0E00               	movlw	0
 12627  0026B4  6E37               	movwf	(___fldiv@b+2)^0,c
 12628  0026B6  0E00               	movlw	0
 12629  0026B8  6E38               	movwf	(___fldiv@b+3)^0,c
 12630  0026BA                     l4606:
 12631  0026BA  BE47               	btfsc	(___fldiv@new_exp+1)^0,7,c
 12632  0026BC  EF6A  F013         	goto	u4800
 12633  0026C0  5047               	movf	(___fldiv@new_exp+1)^0,w,c
 12634  0026C2  E106               	bnz	u4801
 12635  0026C4  0446               	decf	___fldiv@new_exp^0,w,c
 12636  0026C6  B0D8               	btfsc	status,0,c
 12637  0026C8  EF68  F013         	goto	u4801
 12638  0026CC  EF6A  F013         	goto	u4800
 12639  0026D0                     u4801:
 12640  0026D0  EF78  F013         	goto	l4610
 12641  0026D4                     u4800:
 12642  0026D4  0E00               	movlw	0
 12643  0026D6  6E47               	movwf	(___fldiv@new_exp+1)^0,c
 12644  0026D8  0E00               	movlw	0
 12645  0026DA  6E46               	movwf	___fldiv@new_exp^0,c
 12646  0026DC  0E00               	movlw	0
 12647  0026DE  6E35               	movwf	___fldiv@b^0,c
 12648  0026E0  0E00               	movlw	0
 12649  0026E2  6E36               	movwf	(___fldiv@b+1)^0,c
 12650  0026E4  0E00               	movlw	0
 12651  0026E6  6E37               	movwf	(___fldiv@b+2)^0,c
 12652  0026E8  0E00               	movlw	0
 12653  0026EA  6E38               	movwf	(___fldiv@b+3)^0,c
 12654  0026EC  0E00               	movlw	0
 12655  0026EE  6E45               	movwf	___fldiv@sign^0,c
 12656  0026F0                     l4610:
 12657  0026F0  C046  F04C         	movff	___fldiv@new_exp,___fldiv@bexp
 12658  0026F4  A04C               	btfss	___fldiv@bexp^0,0,c
 12659  0026F6  EF7F  F013         	goto	u4811
 12660  0026FA  EF81  F013         	goto	u4810
 12661  0026FE                     u4811:
 12662  0026FE  EF84  F013         	goto	l4616
 12663  002702                     u4810:
 12664  002702  8E37               	bsf	(___fldiv@b+2)^0,7,c
 12665  002704  EF85  F013         	goto	l4618
 12666  002708                     l4616:
 12667  002708  9E37               	bcf	(___fldiv@b+2)^0,7,c
 12668  00270A                     l4618:
 12669  00270A  90D8               	bcf	status,0,c
 12670  00270C  304C               	rrcf	___fldiv@bexp^0,w,c
 12671  00270E  6E38               	movwf	(___fldiv@b+3)^0,c
 12672  002710  EF3B  F012         	goto	l4532
 12673  002714                     l1273:
 12674  002714  0012               	return		;funcret
 12675  002716                     __end_of___fldiv:
 12676                           	callstack 0
 12677                           
 12678 ;; *************** function ___awmod *****************
 12679 ;; Defined at:
 12680 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awmod.c"
 12681 ;; Parameters:    Size  Location     Type
 12682 ;;  dividend        2    0[COMRAM] int 
 12683 ;;  divisor         2    2[COMRAM] int 
 12684 ;; Auto vars:     Size  Location     Type
 12685 ;;  sign            1    5[COMRAM] unsigned char 
 12686 ;;  counter         1    4[COMRAM] unsigned char 
 12687 ;; Return value:  Size  Location     Type
 12688 ;;                  2    0[COMRAM] int 
 12689 ;; Registers used:
 12690 ;;		wreg, status,2, status,0
 12691 ;; Tracked objects:
 12692 ;;		On entry : 0/0
 12693 ;;		On exit  : 0/0
 12694 ;;		Unchanged: 0/0
 12695 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12696 ;;      Params:         4       0       0       0       0       0       0
 12697 ;;      Locals:         2       0       0       0       0       0       0
 12698 ;;      Temps:          0       0       0       0       0       0       0
 12699 ;;      Totals:         6       0       0       0       0       0       0
 12700 ;;Total ram usage:        6 bytes
 12701 ;; Hardware stack levels used:    1
 12702 ;; Hardware stack levels required when called:    1
 12703 ;; This function calls:
 12704 ;;		Nothing
 12705 ;; This function is called by:
 12706 ;;		_efgtoa
 12707 ;; This function uses a non-reentrant model
 12708 ;;
 12709                           
 12710                           	psect	text48
 12711  004B32                     __ptext48:
 12712                           	callstack 0
 12713  004B32                     ___awmod:
 12714                           	callstack 22
 12715  004B32  0E00               	movlw	0
 12716  004B34  6E06               	movwf	___awmod@sign^0,c
 12717  004B36  BE02               	btfsc	(___awmod@dividend+1)^0,7,c
 12718  004B38  EFA2  F025         	goto	u5070
 12719  004B3C  EFA0  F025         	goto	u5071
 12720  004B40                     u5071:
 12721  004B40  EFA8  F025         	goto	l4814
 12722  004B44                     u5070:
 12723  004B44  6C01               	negf	___awmod@dividend^0,c
 12724  004B46  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12725  004B48  B0D8               	btfsc	status,0,c
 12726  004B4A  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12727  004B4C  0E01               	movlw	1
 12728  004B4E  6E06               	movwf	___awmod@sign^0,c
 12729  004B50                     l4814:
 12730  004B50  BE04               	btfsc	(___awmod@divisor+1)^0,7,c
 12731  004B52  EFAF  F025         	goto	u5080
 12732  004B56  EFAD  F025         	goto	u5081
 12733  004B5A                     u5081:
 12734  004B5A  EFB3  F025         	goto	l4818
 12735  004B5E                     u5080:
 12736  004B5E  6C03               	negf	___awmod@divisor^0,c
 12737  004B60  1E04               	comf	(___awmod@divisor+1)^0,f,c
 12738  004B62  B0D8               	btfsc	status,0,c
 12739  004B64  2A04               	incf	(___awmod@divisor+1)^0,f,c
 12740  004B66                     l4818:
 12741  004B66  5003               	movf	___awmod@divisor^0,w,c
 12742  004B68  1004               	iorwf	(___awmod@divisor+1)^0,w,c
 12743  004B6A  B4D8               	btfsc	status,2,c
 12744  004B6C  EFBA  F025         	goto	u5091
 12745  004B70  EFBC  F025         	goto	u5090
 12746  004B74                     u5091:
 12747  004B74  EFE0  F025         	goto	l4834
 12748  004B78                     u5090:
 12749  004B78  0E01               	movlw	1
 12750  004B7A  6E05               	movwf	___awmod@counter^0,c
 12751  004B7C  EFC4  F025         	goto	l4824
 12752  004B80                     l4822:
 12753  004B80  90D8               	bcf	status,0,c
 12754  004B82  3603               	rlcf	___awmod@divisor^0,f,c
 12755  004B84  3604               	rlcf	(___awmod@divisor+1)^0,f,c
 12756  004B86  2A05               	incf	___awmod@counter^0,f,c
 12757  004B88                     l4824:
 12758  004B88  AE04               	btfss	(___awmod@divisor+1)^0,7,c
 12759  004B8A  EFC9  F025         	goto	u5101
 12760  004B8E  EFCB  F025         	goto	u5100
 12761  004B92                     u5101:
 12762  004B92  EFC0  F025         	goto	l4822
 12763  004B96                     u5100:
 12764  004B96                     l4826:
 12765  004B96  5003               	movf	___awmod@divisor^0,w,c
 12766  004B98  5C01               	subwf	___awmod@dividend^0,w,c
 12767  004B9A  5004               	movf	(___awmod@divisor+1)^0,w,c
 12768  004B9C  5802               	subwfb	(___awmod@dividend+1)^0,w,c
 12769  004B9E  A0D8               	btfss	status,0,c
 12770  004BA0  EFD4  F025         	goto	u5111
 12771  004BA4  EFD6  F025         	goto	u5110
 12772  004BA8                     u5111:
 12773  004BA8  EFDA  F025         	goto	l4830
 12774  004BAC                     u5110:
 12775  004BAC  5003               	movf	___awmod@divisor^0,w,c
 12776  004BAE  5E01               	subwf	___awmod@dividend^0,f,c
 12777  004BB0  5004               	movf	(___awmod@divisor+1)^0,w,c
 12778  004BB2  5A02               	subwfb	(___awmod@dividend+1)^0,f,c
 12779  004BB4                     l4830:
 12780  004BB4  90D8               	bcf	status,0,c
 12781  004BB6  3204               	rrcf	(___awmod@divisor+1)^0,f,c
 12782  004BB8  3203               	rrcf	___awmod@divisor^0,f,c
 12783  004BBA  2E05               	decfsz	___awmod@counter^0,f,c
 12784  004BBC  EFCB  F025         	goto	l4826
 12785  004BC0                     l4834:
 12786  004BC0  5006               	movf	___awmod@sign^0,w,c
 12787  004BC2  B4D8               	btfsc	status,2,c
 12788  004BC4  EFE6  F025         	goto	u5121
 12789  004BC8  EFE8  F025         	goto	u5120
 12790  004BCC                     u5121:
 12791  004BCC  EFEC  F025         	goto	l4838
 12792  004BD0                     u5120:
 12793  004BD0  6C01               	negf	___awmod@dividend^0,c
 12794  004BD2  1E02               	comf	(___awmod@dividend+1)^0,f,c
 12795  004BD4  B0D8               	btfsc	status,0,c
 12796  004BD6  2A02               	incf	(___awmod@dividend+1)^0,f,c
 12797  004BD8                     l4838:
 12798  004BD8  C001  F001         	movff	___awmod@dividend,?___awmod
 12799  004BDC  C002  F002         	movff	___awmod@dividend+1,?___awmod+1
 12800  004BE0  0012               	return		;funcret
 12801  004BE2                     __end_of___awmod:
 12802                           	callstack 0
 12803                           
 12804 ;; *************** function ___awdiv *****************
 12805 ;; Defined at:
 12806 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\awdiv.c"
 12807 ;; Parameters:    Size  Location     Type
 12808 ;;  dividend        2    0[COMRAM] int 
 12809 ;;  divisor         2    2[COMRAM] int 
 12810 ;; Auto vars:     Size  Location     Type
 12811 ;;  quotient        2    6[COMRAM] int 
 12812 ;;  sign            1    5[COMRAM] unsigned char 
 12813 ;;  counter         1    4[COMRAM] unsigned char 
 12814 ;; Return value:  Size  Location     Type
 12815 ;;                  2    0[COMRAM] int 
 12816 ;; Registers used:
 12817 ;;		wreg, status,2, status,0
 12818 ;; Tracked objects:
 12819 ;;		On entry : 0/0
 12820 ;;		On exit  : 0/0
 12821 ;;		Unchanged: 0/0
 12822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12823 ;;      Params:         4       0       0       0       0       0       0
 12824 ;;      Locals:         4       0       0       0       0       0       0
 12825 ;;      Temps:          0       0       0       0       0       0       0
 12826 ;;      Totals:         8       0       0       0       0       0       0
 12827 ;;Total ram usage:        8 bytes
 12828 ;; Hardware stack levels used:    1
 12829 ;; Hardware stack levels required when called:    1
 12830 ;; This function calls:
 12831 ;;		Nothing
 12832 ;; This function is called by:
 12833 ;;		_efgtoa
 12834 ;; This function uses a non-reentrant model
 12835 ;;
 12836                           
 12837                           	psect	text49
 12838  0049BC                     __ptext49:
 12839                           	callstack 0
 12840  0049BC                     ___awdiv:
 12841                           	callstack 22
 12842  0049BC  0E00               	movlw	0
 12843  0049BE  6E06               	movwf	___awdiv@sign^0,c
 12844  0049C0  BE04               	btfsc	(___awdiv@divisor+1)^0,7,c
 12845  0049C2  EFE7  F024         	goto	u5010
 12846  0049C6  EFE5  F024         	goto	u5011
 12847  0049CA                     u5011:
 12848  0049CA  EFED  F024         	goto	l4770
 12849  0049CE                     u5010:
 12850  0049CE  6C03               	negf	___awdiv@divisor^0,c
 12851  0049D0  1E04               	comf	(___awdiv@divisor+1)^0,f,c
 12852  0049D2  B0D8               	btfsc	status,0,c
 12853  0049D4  2A04               	incf	(___awdiv@divisor+1)^0,f,c
 12854  0049D6  0E01               	movlw	1
 12855  0049D8  6E06               	movwf	___awdiv@sign^0,c
 12856  0049DA                     l4770:
 12857  0049DA  BE02               	btfsc	(___awdiv@dividend+1)^0,7,c
 12858  0049DC  EFF4  F024         	goto	u5020
 12859  0049E0  EFF2  F024         	goto	u5021
 12860  0049E4                     u5021:
 12861  0049E4  EFFA  F024         	goto	l4776
 12862  0049E8                     u5020:
 12863  0049E8  6C01               	negf	___awdiv@dividend^0,c
 12864  0049EA  1E02               	comf	(___awdiv@dividend+1)^0,f,c
 12865  0049EC  B0D8               	btfsc	status,0,c
 12866  0049EE  2A02               	incf	(___awdiv@dividend+1)^0,f,c
 12867  0049F0  0E01               	movlw	1
 12868  0049F2  1A06               	xorwf	___awdiv@sign^0,f,c
 12869  0049F4                     l4776:
 12870  0049F4  0E00               	movlw	0
 12871  0049F6  6E08               	movwf	(___awdiv@quotient+1)^0,c
 12872  0049F8  0E00               	movlw	0
 12873  0049FA  6E07               	movwf	___awdiv@quotient^0,c
 12874  0049FC  5003               	movf	___awdiv@divisor^0,w,c
 12875  0049FE  1004               	iorwf	(___awdiv@divisor+1)^0,w,c
 12876  004A00  B4D8               	btfsc	status,2,c
 12877  004A02  EF05  F025         	goto	u5031
 12878  004A06  EF07  F025         	goto	u5030
 12879  004A0A                     u5031:
 12880  004A0A  EF2F  F025         	goto	l4798
 12881  004A0E                     u5030:
 12882  004A0E  0E01               	movlw	1
 12883  004A10  6E05               	movwf	___awdiv@counter^0,c
 12884  004A12  EF0F  F025         	goto	l4784
 12885  004A16                     l4782:
 12886  004A16  90D8               	bcf	status,0,c
 12887  004A18  3603               	rlcf	___awdiv@divisor^0,f,c
 12888  004A1A  3604               	rlcf	(___awdiv@divisor+1)^0,f,c
 12889  004A1C  2A05               	incf	___awdiv@counter^0,f,c
 12890  004A1E                     l4784:
 12891  004A1E  AE04               	btfss	(___awdiv@divisor+1)^0,7,c
 12892  004A20  EF14  F025         	goto	u5041
 12893  004A24  EF16  F025         	goto	u5040
 12894  004A28                     u5041:
 12895  004A28  EF0B  F025         	goto	l4782
 12896  004A2C                     u5040:
 12897  004A2C                     l4786:
 12898  004A2C  90D8               	bcf	status,0,c
 12899  004A2E  3607               	rlcf	___awdiv@quotient^0,f,c
 12900  004A30  3608               	rlcf	(___awdiv@quotient+1)^0,f,c
 12901  004A32  5003               	movf	___awdiv@divisor^0,w,c
 12902  004A34  5C01               	subwf	___awdiv@dividend^0,w,c
 12903  004A36  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12904  004A38  5802               	subwfb	(___awdiv@dividend+1)^0,w,c
 12905  004A3A  A0D8               	btfss	status,0,c
 12906  004A3C  EF22  F025         	goto	u5051
 12907  004A40  EF24  F025         	goto	u5050
 12908  004A44                     u5051:
 12909  004A44  EF29  F025         	goto	l4794
 12910  004A48                     u5050:
 12911  004A48  5003               	movf	___awdiv@divisor^0,w,c
 12912  004A4A  5E01               	subwf	___awdiv@dividend^0,f,c
 12913  004A4C  5004               	movf	(___awdiv@divisor+1)^0,w,c
 12914  004A4E  5A02               	subwfb	(___awdiv@dividend+1)^0,f,c
 12915  004A50  8007               	bsf	___awdiv@quotient^0,0,c
 12916  004A52                     l4794:
 12917  004A52  90D8               	bcf	status,0,c
 12918  004A54  3204               	rrcf	(___awdiv@divisor+1)^0,f,c
 12919  004A56  3203               	rrcf	___awdiv@divisor^0,f,c
 12920  004A58  2E05               	decfsz	___awdiv@counter^0,f,c
 12921  004A5A  EF16  F025         	goto	l4786
 12922  004A5E                     l4798:
 12923  004A5E  5006               	movf	___awdiv@sign^0,w,c
 12924  004A60  B4D8               	btfsc	status,2,c
 12925  004A62  EF35  F025         	goto	u5061
 12926  004A66  EF37  F025         	goto	u5060
 12927  004A6A                     u5061:
 12928  004A6A  EF3B  F025         	goto	l4802
 12929  004A6E                     u5060:
 12930  004A6E  6C07               	negf	___awdiv@quotient^0,c
 12931  004A70  1E08               	comf	(___awdiv@quotient+1)^0,f,c
 12932  004A72  B0D8               	btfsc	status,0,c
 12933  004A74  2A08               	incf	(___awdiv@quotient+1)^0,f,c
 12934  004A76                     l4802:
 12935  004A76  C007  F001         	movff	___awdiv@quotient,?___awdiv
 12936  004A7A  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
 12937  004A7E  0012               	return		;funcret
 12938  004A80                     __end_of___awdiv:
 12939                           	callstack 0
 12940                           
 12941 ;; *************** function _dtoa *****************
 12942 ;; Defined at:
 12943 ;;		line 274 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 12944 ;; Parameters:    Size  Location     Type
 12945 ;;  fp              2   27[COMRAM] PTR struct _IO_FILE
 12946 ;;		 -> sprintf@f(6), 
 12947 ;;  d               8   29[COMRAM] long long 
 12948 ;; Auto vars:     Size  Location     Type
 12949 ;;  n               8   53[COMRAM] long long 
 12950 ;;  i               2   61[COMRAM] int 
 12951 ;;  s               2   51[COMRAM] int 
 12952 ;;  w               2   49[COMRAM] int 
 12953 ;;  p               2   47[COMRAM] int 
 12954 ;; Return value:  Size  Location     Type
 12955 ;;                  2   27[COMRAM] int 
 12956 ;; Registers used:
 12957 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 12958 ;; Tracked objects:
 12959 ;;		On entry : 0/0
 12960 ;;		On exit  : 0/0
 12961 ;;		Unchanged: 0/0
 12962 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 12963 ;;      Params:        10       0       0       0       0       0       0
 12964 ;;      Locals:        18       0       0       0       0       0       0
 12965 ;;      Temps:          8       0       0       0       0       0       0
 12966 ;;      Totals:        36       0       0       0       0       0       0
 12967 ;;Total ram usage:       36 bytes
 12968 ;; Hardware stack levels used:    1
 12969 ;; Hardware stack levels required when called:    5
 12970 ;; This function calls:
 12971 ;;		___aodiv
 12972 ;;		___aomod
 12973 ;;		_abs
 12974 ;;		_pad
 12975 ;; This function is called by:
 12976 ;;		_vfpfcnvrt
 12977 ;; This function uses a non-reentrant model
 12978 ;;
 12979                           
 12980                           	psect	text50
 12981  0029FC                     __ptext50:
 12982                           	callstack 0
 12983  0029FC                     _dtoa:
 12984                           	callstack 19
 12985  0029FC                     
 12986                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 274: static int d
      +                          toa(FILE *fp, long long d);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 275: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 27
      +                          6:     int i, p, s, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprn
      +                          t.c: 277:     long long n;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\d
      +                          oprnt.c: 280:     n = d;
 12987  0029FC  C01E  F036         	movff	dtoa@d,dtoa@n
 12988  002A00  C01F  F037         	movff	dtoa@d+1,dtoa@n+1
 12989  002A04  C020  F038         	movff	dtoa@d+2,dtoa@n+2
 12990  002A08  C021  F039         	movff	dtoa@d+3,dtoa@n+3
 12991  002A0C  C022  F03A         	movff	dtoa@d+4,dtoa@n+4
 12992  002A10  C023  F03B         	movff	dtoa@d+5,dtoa@n+5
 12993  002A14  C024  F03C         	movff	dtoa@d+6,dtoa@n+6
 12994  002A18  C025  F03D         	movff	dtoa@d+7,dtoa@n+7
 12995  002A1C                     
 12996                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 281:     s = n < 
      +                          0 ? 1 : 0;
 12997  002A1C  BE3D               	btfsc	(dtoa@n+7)^0,7,c
 12998  002A1E  EF13  F015         	goto	u5601
 12999  002A22  EF16  F015         	goto	u5600
 13000  002A26                     u5601:
 13001  002A26  0E01               	movlw	1
 13002  002A28  EF17  F015         	goto	u5610
 13003  002A2C                     u5600:
 13004  002A2C  0E00               	movlw	0
 13005  002A2E                     u5610:
 13006  002A2E  6E34               	movwf	dtoa@s^0,c
 13007  002A30  6A35               	clrf	(dtoa@s+1)^0,c
 13008                           
 13009                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 282:     if (s) {
 13010  002A32  5034               	movf	dtoa@s^0,w,c
 13011  002A34  1035               	iorwf	(dtoa@s+1)^0,w,c
 13012  002A36  B4D8               	btfsc	status,2,c
 13013  002A38  EF20  F015         	goto	u5621
 13014  002A3C  EF22  F015         	goto	u5620
 13015  002A40                     u5621:
 13016  002A40  EF32  F015         	goto	l5044
 13017  002A44                     u5620:
 13018  002A44                     
 13019                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 283:         n = 
      +                          -n;
 13020  002A44  1E3D               	comf	(dtoa@n+7)^0,f,c
 13021  002A46  1E3C               	comf	(dtoa@n+6)^0,f,c
 13022  002A48  1E3B               	comf	(dtoa@n+5)^0,f,c
 13023  002A4A  1E3A               	comf	(dtoa@n+4)^0,f,c
 13024  002A4C  1E39               	comf	(dtoa@n+3)^0,f,c
 13025  002A4E  1E38               	comf	(dtoa@n+2)^0,f,c
 13026  002A50  1E37               	comf	(dtoa@n+1)^0,f,c
 13027  002A52  6C36               	negf	dtoa@n^0,c
 13028  002A54  0E00               	movlw	0
 13029  002A56  2237               	addwfc	(dtoa@n+1)^0,f,c
 13030  002A58  2238               	addwfc	(dtoa@n+2)^0,f,c
 13031  002A5A  2239               	addwfc	(dtoa@n+3)^0,f,c
 13032  002A5C  223A               	addwfc	(dtoa@n+4)^0,f,c
 13033  002A5E  223B               	addwfc	(dtoa@n+5)^0,f,c
 13034  002A60  223C               	addwfc	(dtoa@n+6)^0,f,c
 13035  002A62  223D               	addwfc	(dtoa@n+7)^0,f,c
 13036  002A64                     l5044:
 13037                           
 13038                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 287:     if (!(pr
      +                          ec < 0)) {
 13039  002A64  0100               	movlb	0	; () banked
 13040  002A66  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 13041  002A68  EF38  F015         	goto	u5631
 13042  002A6C  EF3A  F015         	goto	u5630
 13043  002A70                     u5631:
 13044  002A70  EF3B  F015         	goto	l5048
 13045  002A74                     u5630:
 13046  002A74                     
 13047                           ; BSR set to: 0
 13048                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 288:         flag
      +                          s &= ~(1 << 1);
 13049  002A74  93F8               	bcf	_flags& (0+255),1,b
 13050  002A76                     l5048:
 13051                           
 13052                           ; BSR set to: 0
 13053                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 290:     p = (0 <
      +                           prec) ? prec : 1;
 13054  002A76  BFF7               	btfsc	(_prec+1)& (0+255),7,b
 13055  002A78  EF48  F015         	goto	u5640
 13056  002A7C  51F7               	movf	(_prec+1)& (0+255),w,b
 13057  002A7E  E106               	bnz	u5641
 13058  002A80  05F6               	decf	_prec& (0+255),w,b
 13059  002A82  B0D8               	btfsc	status,0,c
 13060  002A84  EF46  F015         	goto	u5641
 13061  002A88  EF48  F015         	goto	u5640
 13062  002A8C                     u5641:
 13063  002A8C  EF4E  F015         	goto	l1428
 13064  002A90                     u5640:
 13065  002A90                     
 13066                           ; BSR set to: 0
 13067  002A90  0E00               	movlw	0
 13068  002A92  6E31               	movwf	(dtoa@p+1)^0,c
 13069  002A94  0E01               	movlw	1
 13070  002A96  6E30               	movwf	dtoa@p^0,c
 13071  002A98  EF52  F015         	goto	l1430
 13072  002A9C                     l1428:
 13073                           
 13074                           ; BSR set to: 0
 13075  002A9C  C0F6  F030         	movff	_prec,dtoa@p
 13076  002AA0  C0F7  F031         	movff	_prec+1,dtoa@p+1
 13077  002AA4                     l1430:
 13078                           
 13079                           ; BSR set to: 0
 13080                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 291:     w = widt
      +                          h;
 13081  002AA4  C1B1  F032         	movff	_width,dtoa@w
 13082  002AA8  C1B2  F033         	movff	_width+1,dtoa@w+1
 13083  002AAC                     
 13084                           ; BSR set to: 0
 13085                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 292:     if (s ||
      +                           (flags & (1 << 2))) {
 13086  002AAC  5034               	movf	dtoa@s^0,w,c
 13087  002AAE  1035               	iorwf	(dtoa@s+1)^0,w,c
 13088  002AB0  A4D8               	btfss	status,2,c
 13089  002AB2  EF5D  F015         	goto	u5651
 13090  002AB6  EF5F  F015         	goto	u5650
 13091  002ABA                     u5651:
 13092  002ABA  EF66  F015         	goto	l5056
 13093  002ABE                     u5650:
 13094  002ABE                     
 13095                           ; BSR set to: 0
 13096  002ABE  A5F8               	btfss	_flags& (0+255),2,b
 13097  002AC0  EF64  F015         	goto	u5661
 13098  002AC4  EF66  F015         	goto	u5660
 13099  002AC8                     u5661:
 13100  002AC8  EF69  F015         	goto	l5058
 13101  002ACC                     u5660:
 13102  002ACC                     l5056:
 13103                           
 13104                           ; BSR set to: 0
 13105                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 293:         --w;
 13106  002ACC  0632               	decf	dtoa@w^0,f,c
 13107  002ACE  A0D8               	btfss	status,0,c
 13108  002AD0  0633               	decf	(dtoa@w+1)^0,f,c
 13109  002AD2                     l5058:
 13110                           
 13111                           ; BSR set to: 0
 13112                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 297:     i = size
      +                          of(dbuf) - 1;
 13113  002AD2  0E00               	movlw	0
 13114  002AD4  6E3F               	movwf	(dtoa@i+1)^0,c
 13115  002AD6  0E4F               	movlw	79
 13116  002AD8  6E3E               	movwf	dtoa@i^0,c
 13117  002ADA                     
 13118                           ; BSR set to: 0
 13119                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 298:     dbuf[i] 
      +                          = '\0';
 13120  002ADA  0E00               	movlw	0
 13121  002ADC  0102               	movlb	2	; () banked
 13122  002ADE  6FAF               	movwf	(_dbuf+79)& (0+255),b
 13123                           
 13124                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13125  002AE0  EFEE  F015         	goto	l5072
 13126  002AE4                     l5062:
 13127                           
 13128                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 300:         --i;
 13129  002AE4  063E               	decf	dtoa@i^0,f,c
 13130  002AE6  A0D8               	btfss	status,0,c
 13131  002AE8  063F               	decf	(dtoa@i+1)^0,f,c
 13132  002AEA                     
 13133                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 301:         dbuf
      +                          [i] = '0' + abs(n % 10);
 13134  002AEA  0E60               	movlw	low _dbuf
 13135  002AEC  243E               	addwf	dtoa@i^0,w,c
 13136  002AEE  6ED9               	movwf	fsr2l,c
 13137  002AF0  0E02               	movlw	high _dbuf
 13138  002AF2  203F               	addwfc	(dtoa@i+1)^0,w,c
 13139  002AF4  6EDA               	movwf	fsr2h,c
 13140  002AF6  C036  F001         	movff	dtoa@n,___aomod@dividend
 13141  002AFA  C037  F002         	movff	dtoa@n+1,___aomod@dividend+1
 13142  002AFE  C038  F003         	movff	dtoa@n+2,___aomod@dividend+2
 13143  002B02  C039  F004         	movff	dtoa@n+3,___aomod@dividend+3
 13144  002B06  C03A  F005         	movff	dtoa@n+4,___aomod@dividend+4
 13145  002B0A  C03B  F006         	movff	dtoa@n+5,___aomod@dividend+5
 13146  002B0E  C03C  F007         	movff	dtoa@n+6,___aomod@dividend+6
 13147  002B12  C03D  F008         	movff	dtoa@n+7,___aomod@dividend+7
 13148  002B16  0E0A               	movlw	10
 13149  002B18  6E09               	movwf	___aomod@divisor^0,c
 13150  002B1A  0E00               	movlw	0
 13151  002B1C  6E0A               	movwf	(___aomod@divisor+1)^0,c
 13152  002B1E  0E00               	movlw	0
 13153  002B20  6E0B               	movwf	(___aomod@divisor+2)^0,c
 13154  002B22  0E00               	movlw	0
 13155  002B24  6E0C               	movwf	(___aomod@divisor+3)^0,c
 13156  002B26  0E00               	movlw	0
 13157  002B28  6E0D               	movwf	(___aomod@divisor+4)^0,c
 13158  002B2A  0E00               	movlw	0
 13159  002B2C  6E0E               	movwf	(___aomod@divisor+5)^0,c
 13160  002B2E  0E00               	movlw	0
 13161  002B30  6E0F               	movwf	(___aomod@divisor+6)^0,c
 13162  002B32  0E00               	movlw	0
 13163  002B34  6E10               	movwf	(___aomod@divisor+7)^0,c
 13164  002B36  ECDE  F01D         	call	___aomod	;wreg free
 13165  002B3A  C001  F026         	movff	?___aomod,??_dtoa
 13166  002B3E  C002  F027         	movff	?___aomod+1,??_dtoa+1
 13167  002B42  C003  F028         	movff	?___aomod+2,??_dtoa+2
 13168  002B46  C004  F029         	movff	?___aomod+3,??_dtoa+3
 13169  002B4A  C005  F02A         	movff	?___aomod+4,??_dtoa+4
 13170  002B4E  C006  F02B         	movff	?___aomod+5,??_dtoa+5
 13171  002B52  C007  F02C         	movff	?___aomod+6,??_dtoa+6
 13172  002B56  C008  F02D         	movff	?___aomod+7,??_dtoa+7
 13173  002B5A  C026  F013         	movff	??_dtoa,abs@a
 13174  002B5E  C028  F014         	movff	??_dtoa+2,abs@a+1
 13175  002B62  EC26  F02A         	call	_abs	;wreg free
 13176  002B66  5013               	movf	?_abs^0,w,c
 13177  002B68  0F30               	addlw	48
 13178  002B6A  6EDF               	movwf	indf2,c
 13179  002B6C                     
 13180                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 302:         --p;
 13181  002B6C  0630               	decf	dtoa@p^0,f,c
 13182  002B6E  A0D8               	btfss	status,0,c
 13183  002B70  0631               	decf	(dtoa@p+1)^0,f,c
 13184  002B72                     
 13185                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 303:         --w;
 13186  002B72  0632               	decf	dtoa@w^0,f,c
 13187  002B74  A0D8               	btfss	status,0,c
 13188  002B76  0633               	decf	(dtoa@w+1)^0,f,c
 13189  002B78                     
 13190                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 304:         n = 
      +                          n / 10;
 13191  002B78  C036  F001         	movff	dtoa@n,___aodiv@dividend
 13192  002B7C  C037  F002         	movff	dtoa@n+1,___aodiv@dividend+1
 13193  002B80  C038  F003         	movff	dtoa@n+2,___aodiv@dividend+2
 13194  002B84  C039  F004         	movff	dtoa@n+3,___aodiv@dividend+3
 13195  002B88  C03A  F005         	movff	dtoa@n+4,___aodiv@dividend+4
 13196  002B8C  C03B  F006         	movff	dtoa@n+5,___aodiv@dividend+5
 13197  002B90  C03C  F007         	movff	dtoa@n+6,___aodiv@dividend+6
 13198  002B94  C03D  F008         	movff	dtoa@n+7,___aodiv@dividend+7
 13199  002B98  0E0A               	movlw	10
 13200  002B9A  6E09               	movwf	___aodiv@divisor^0,c
 13201  002B9C  0E00               	movlw	0
 13202  002B9E  6E0A               	movwf	(___aodiv@divisor+1)^0,c
 13203  002BA0  0E00               	movlw	0
 13204  002BA2  6E0B               	movwf	(___aodiv@divisor+2)^0,c
 13205  002BA4  0E00               	movlw	0
 13206  002BA6  6E0C               	movwf	(___aodiv@divisor+3)^0,c
 13207  002BA8  0E00               	movlw	0
 13208  002BAA  6E0D               	movwf	(___aodiv@divisor+4)^0,c
 13209  002BAC  0E00               	movlw	0
 13210  002BAE  6E0E               	movwf	(___aodiv@divisor+5)^0,c
 13211  002BB0  0E00               	movlw	0
 13212  002BB2  6E0F               	movwf	(___aodiv@divisor+6)^0,c
 13213  002BB4  0E00               	movlw	0
 13214  002BB6  6E10               	movwf	(___aodiv@divisor+7)^0,c
 13215  002BB8  EC1A  F01D         	call	___aodiv	;wreg free
 13216  002BBC  C001  F036         	movff	?___aodiv,dtoa@n
 13217  002BC0  C002  F037         	movff	?___aodiv+1,dtoa@n+1
 13218  002BC4  C003  F038         	movff	?___aodiv+2,dtoa@n+2
 13219  002BC8  C004  F039         	movff	?___aodiv+3,dtoa@n+3
 13220  002BCC  C005  F03A         	movff	?___aodiv+4,dtoa@n+4
 13221  002BD0  C006  F03B         	movff	?___aodiv+5,dtoa@n+5
 13222  002BD4  C007  F03C         	movff	?___aodiv+6,dtoa@n+6
 13223  002BD8  C008  F03D         	movff	?___aodiv+7,dtoa@n+7
 13224  002BDC                     l5072:
 13225                           
 13226                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 299:     while (!
      +                          (i < 1) && (n || (0 < p) || ((0 < w) && (flags & (1 << 1))))) {
 13227  002BDC  BE3F               	btfsc	(dtoa@i+1)^0,7,c
 13228  002BDE  EFF9  F015         	goto	u5671
 13229  002BE2  503F               	movf	(dtoa@i+1)^0,w,c
 13230  002BE4  E108               	bnz	u5670
 13231  002BE6  043E               	decf	dtoa@i^0,w,c
 13232  002BE8  A0D8               	btfss	status,0,c
 13233  002BEA  EFF9  F015         	goto	u5671
 13234  002BEE  EFFB  F015         	goto	u5670
 13235  002BF2                     u5671:
 13236  002BF2  EF2C  F016         	goto	l5082
 13237  002BF6                     u5670:
 13238  002BF6  5036               	movf	dtoa@n^0,w,c
 13239  002BF8  1037               	iorwf	(dtoa@n+1)^0,w,c
 13240  002BFA  1038               	iorwf	(dtoa@n+2)^0,w,c
 13241  002BFC  1039               	iorwf	(dtoa@n+3)^0,w,c
 13242  002BFE  103A               	iorwf	(dtoa@n+4)^0,w,c
 13243  002C00  103B               	iorwf	(dtoa@n+5)^0,w,c
 13244  002C02  103C               	iorwf	(dtoa@n+6)^0,w,c
 13245  002C04  103D               	iorwf	(dtoa@n+7)^0,w,c
 13246  002C06  A4D8               	btfss	status,2,c
 13247  002C08  EF08  F016         	goto	u5681
 13248  002C0C  EF0A  F016         	goto	u5680
 13249  002C10                     u5681:
 13250  002C10  EF72  F015         	goto	l5062
 13251  002C14                     u5680:
 13252  002C14  BE31               	btfsc	(dtoa@p+1)^0,7,c
 13253  002C16  EF17  F016         	goto	u5690
 13254  002C1A  5031               	movf	(dtoa@p+1)^0,w,c
 13255  002C1C  E106               	bnz	u5691
 13256  002C1E  0430               	decf	dtoa@p^0,w,c
 13257  002C20  B0D8               	btfsc	status,0,c
 13258  002C22  EF15  F016         	goto	u5691
 13259  002C26  EF17  F016         	goto	u5690
 13260  002C2A                     u5691:
 13261  002C2A  EF72  F015         	goto	l5062
 13262  002C2E                     u5690:
 13263  002C2E  BE33               	btfsc	(dtoa@w+1)^0,7,c
 13264  002C30  EF22  F016         	goto	u5701
 13265  002C34  5033               	movf	(dtoa@w+1)^0,w,c
 13266  002C36  E108               	bnz	u5700
 13267  002C38  0432               	decf	dtoa@w^0,w,c
 13268  002C3A  A0D8               	btfss	status,0,c
 13269  002C3C  EF22  F016         	goto	u5701
 13270  002C40  EF24  F016         	goto	u5700
 13271  002C44                     u5701:
 13272  002C44  EF2C  F016         	goto	l5082
 13273  002C48                     u5700:
 13274  002C48  0100               	movlb	0	; () banked
 13275  002C4A  B3F8               	btfsc	_flags& (0+255),1,b
 13276  002C4C  EF2A  F016         	goto	u5711
 13277  002C50  EF2C  F016         	goto	u5710
 13278  002C54                     u5711:
 13279  002C54  EF72  F015         	goto	l5062
 13280  002C58                     u5710:
 13281  002C58                     l5082:
 13282                           
 13283                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 308:     if (s ||
      +                           (flags & (1 << 2))) {
 13284  002C58  5034               	movf	dtoa@s^0,w,c
 13285  002C5A  1035               	iorwf	(dtoa@s+1)^0,w,c
 13286  002C5C  A4D8               	btfss	status,2,c
 13287  002C5E  EF33  F016         	goto	u5721
 13288  002C62  EF35  F016         	goto	u5720
 13289  002C66                     u5721:
 13290  002C66  EF3D  F016         	goto	l5086
 13291  002C6A                     u5720:
 13292  002C6A  0100               	movlb	0	; () banked
 13293  002C6C  A5F8               	btfss	_flags& (0+255),2,b
 13294  002C6E  EF3B  F016         	goto	u5731
 13295  002C72  EF3D  F016         	goto	u5730
 13296  002C76                     u5731:
 13297  002C76  EF5B  F016         	goto	l5096
 13298  002C7A                     u5730:
 13299  002C7A                     l5086:
 13300                           
 13301                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 309:         --i;
 13302  002C7A  063E               	decf	dtoa@i^0,f,c
 13303  002C7C  A0D8               	btfss	status,0,c
 13304  002C7E  063F               	decf	(dtoa@i+1)^0,f,c
 13305  002C80                     
 13306                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 310:         dbuf
      +                          [i] = s ? '-' : '+';
 13307  002C80  5034               	movf	dtoa@s^0,w,c
 13308  002C82  1035               	iorwf	(dtoa@s+1)^0,w,c
 13309  002C84  A4D8               	btfss	status,2,c
 13310  002C86  EF47  F016         	goto	u5741
 13311  002C8A  EF49  F016         	goto	u5740
 13312  002C8E                     u5741:
 13313  002C8E  EF4F  F016         	goto	l5092
 13314  002C92                     u5740:
 13315  002C92  0E00               	movlw	0
 13316  002C94  6E2F               	movwf	(_dtoa$2955+1)^0,c
 13317  002C96  0E2B               	movlw	43
 13318  002C98  6E2E               	movwf	_dtoa$2955^0,c
 13319  002C9A  EF53  F016         	goto	l5094
 13320  002C9E                     l5092:
 13321  002C9E  0E00               	movlw	0
 13322  002CA0  6E2F               	movwf	(_dtoa$2955+1)^0,c
 13323  002CA2  0E2D               	movlw	45
 13324  002CA4  6E2E               	movwf	_dtoa$2955^0,c
 13325  002CA6                     l5094:
 13326  002CA6  0E60               	movlw	low _dbuf
 13327  002CA8  243E               	addwf	dtoa@i^0,w,c
 13328  002CAA  6ED9               	movwf	fsr2l,c
 13329  002CAC  0E02               	movlw	high _dbuf
 13330  002CAE  203F               	addwfc	(dtoa@i+1)^0,w,c
 13331  002CB0  6EDA               	movwf	fsr2h,c
 13332  002CB2  C02E  FFDF         	movff	_dtoa$2955,indf2
 13333  002CB6                     l5096:
 13334                           
 13335                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 314:     return p
      +                          ad(fp, &dbuf[i], w);
 13336  002CB6  C01C  F011         	movff	dtoa@fp,pad@fp
 13337  002CBA  C01D  F012         	movff	dtoa@fp+1,pad@fp+1
 13338  002CBE  0E60               	movlw	low _dbuf
 13339  002CC0  243E               	addwf	dtoa@i^0,w,c
 13340  002CC2  6E13               	movwf	pad@buf^0,c
 13341  002CC4  0E02               	movlw	high _dbuf
 13342  002CC6  203F               	addwfc	(dtoa@i+1)^0,w,c
 13343  002CC8  6E14               	movwf	(pad@buf+1)^0,c
 13344  002CCA  C032  F015         	movff	dtoa@w,pad@p
 13345  002CCE  C033  F016         	movff	dtoa@w+1,pad@p+1
 13346  002CD2  EC7B  F024         	call	_pad	;wreg free
 13347  002CD6  C011  F01C         	movff	?_pad,?_dtoa
 13348  002CDA  C012  F01D         	movff	?_pad+1,?_dtoa+1
 13349  002CDE  0012               	return		;funcret
 13350  002CE0                     __end_of_dtoa:
 13351                           	callstack 0
 13352                           
 13353 ;; *************** function _pad *****************
 13354 ;; Defined at:
 13355 ;;		line 72 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c"
 13356 ;; Parameters:    Size  Location     Type
 13357 ;;  fp              2   16[COMRAM] PTR struct _IO_FILE
 13358 ;;		 -> sprintf@f(6), 
 13359 ;;  buf             2   18[COMRAM] PTR unsigned char 
 13360 ;;		 -> dbuf(80), 
 13361 ;;  p               2   20[COMRAM] int 
 13362 ;; Auto vars:     Size  Location     Type
 13363 ;;  w               2   25[COMRAM] int 
 13364 ;;  i               2   23[COMRAM] int 
 13365 ;; Return value:  Size  Location     Type
 13366 ;;                  2   16[COMRAM] int 
 13367 ;; Registers used:
 13368 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13369 ;; Tracked objects:
 13370 ;;		On entry : 0/0
 13371 ;;		On exit  : 0/0
 13372 ;;		Unchanged: 0/0
 13373 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13374 ;;      Params:         6       0       0       0       0       0       0
 13375 ;;      Locals:         4       0       0       0       0       0       0
 13376 ;;      Temps:          1       0       0       0       0       0       0
 13377 ;;      Totals:        11       0       0       0       0       0       0
 13378 ;;Total ram usage:       11 bytes
 13379 ;; Hardware stack levels used:    1
 13380 ;; Hardware stack levels required when called:    4
 13381 ;; This function calls:
 13382 ;;		_fputc
 13383 ;;		_fputs
 13384 ;;		_strlen
 13385 ;; This function is called by:
 13386 ;;		_dtoa
 13387 ;;		_efgtoa
 13388 ;; This function uses a non-reentrant model
 13389 ;;
 13390                           
 13391                           	psect	text51
 13392  0048F6                     __ptext51:
 13393                           	callstack 0
 13394  0048F6                     _pad:
 13395                           	callstack 19
 13396  0048F6                     
 13397                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 72: static int pa
      +                          d(FILE *fp, char *buf, int p);C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\commo
      +                          n\doprnt.c: 73: {;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          74:     int i, w;;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 
      +                          77:     if (flags & (1 << 0)) {
 13398  0048F6  0100               	movlb	0	; () banked
 13399  0048F8  A1F8               	btfss	_flags& (0+255),0,b
 13400  0048FA  EF81  F024         	goto	u5291
 13401  0048FE  EF83  F024         	goto	u5290
 13402  004902                     u5291:
 13403  004902  EF8D  F024         	goto	l4936
 13404  004906                     u5290:
 13405  004906                     
 13406                           ; BSR set to: 0
 13407                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 78:         fputs
      +                          ((const char *)buf, fp);
 13408  004906  C013  F00A         	movff	pad@buf,fputs@s
 13409  00490A  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13410  00490E  C011  F00C         	movff	pad@fp,fputs@fp
 13411  004912  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13412  004916  ECC3  F029         	call	_fputs	;wreg free
 13413  00491A                     l4936:
 13414                           
 13415                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 82:     w = (p < 
      +                          0) ? 0 : p;
 13416  00491A  BE16               	btfsc	(pad@p+1)^0,7,c
 13417  00491C  EF92  F024         	goto	u5301
 13418  004920  EF94  F024         	goto	u5300
 13419  004924                     u5301:
 13420  004924  EF9A  F024         	goto	l4940
 13421  004928                     u5300:
 13422  004928  C015  F01A         	movff	pad@p,pad@w
 13423  00492C  C016  F01B         	movff	pad@p+1,pad@w+1
 13424  004930  EF9E  F024         	goto	l1417
 13425  004934                     l4940:
 13426  004934  0E00               	movlw	0
 13427  004936  6E1B               	movwf	(pad@w+1)^0,c
 13428  004938  0E00               	movlw	0
 13429  00493A  6E1A               	movwf	pad@w^0,c
 13430  00493C                     l1417:
 13431                           
 13432                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 83:     i = 0;
 13433  00493C  0E00               	movlw	0
 13434  00493E  6E19               	movwf	(pad@i+1)^0,c
 13435  004940  0E00               	movlw	0
 13436  004942  6E18               	movwf	pad@i^0,c
 13437                           
 13438                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13439  004944  EFB0  F024         	goto	l4946
 13440  004948                     l4942:
 13441                           
 13442                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 85:         fputc
      +                          (' ', fp);
 13443  004948  0E00               	movlw	0
 13444  00494A  6E02               	movwf	(fputc@c+1)^0,c
 13445  00494C  0E20               	movlw	32
 13446  00494E  6E01               	movwf	fputc@c^0,c
 13447  004950  C011  F003         	movff	pad@fp,fputc@fp
 13448  004954  C012  F004         	movff	pad@fp+1,fputc@fp+1
 13449  004958  EC16  F024         	call	_fputc	;wreg free
 13450  00495C                     
 13451                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 86:         ++i;
 13452  00495C  4A18               	infsnz	pad@i^0,f,c
 13453  00495E  2A19               	incf	(pad@i+1)^0,f,c
 13454  004960                     l4946:
 13455                           
 13456                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 84:     while (i 
      +                          < w) {
 13457  004960  501A               	movf	pad@w^0,w,c
 13458  004962  5C18               	subwf	pad@i^0,w,c
 13459  004964  5019               	movf	(pad@i+1)^0,w,c
 13460  004966  0A80               	xorlw	128
 13461  004968  6E17               	movwf	??_pad^0,c
 13462  00496A  501B               	movf	(pad@w+1)^0,w,c
 13463  00496C  0A80               	xorlw	128
 13464  00496E  5817               	subwfb	??_pad^0,w,c
 13465  004970  A0D8               	btfss	status,0,c
 13466  004972  EFBD  F024         	goto	u5311
 13467  004976  EFBF  F024         	goto	u5310
 13468  00497A                     u5311:
 13469  00497A  EFA4  F024         	goto	l4942
 13470  00497E                     u5310:
 13471  00497E                     
 13472                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 90:     if (!(fla
      +                          gs & (1 << 0))) {
 13473  00497E  0100               	movlb	0	; () banked
 13474  004980  B1F8               	btfsc	_flags& (0+255),0,b
 13475  004982  EFC5  F024         	goto	u5321
 13476  004986  EFC7  F024         	goto	u5320
 13477  00498A                     u5321:
 13478  00498A  EFD1  F024         	goto	l4950
 13479  00498E                     u5320:
 13480  00498E                     
 13481                           ; BSR set to: 0
 13482                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 91:         fputs
      +                          ((const char *)buf, fp);
 13483  00498E  C013  F00A         	movff	pad@buf,fputs@s
 13484  004992  C014  F00B         	movff	pad@buf+1,fputs@s+1
 13485  004996  C011  F00C         	movff	pad@fp,fputs@fp
 13486  00499A  C012  F00D         	movff	pad@fp+1,fputs@fp+1
 13487  00499E  ECC3  F029         	call	_fputs	;wreg free
 13488  0049A2                     l4950:
 13489                           
 13490                           ;C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\doprnt.c: 94:     return st
      +                          rlen(buf) + w;
 13491  0049A2  C013  F001         	movff	pad@buf,strlen@s
 13492  0049A6  C014  F002         	movff	pad@buf+1,strlen@s+1
 13493  0049AA  EC0E  F02B         	call	_strlen	;wreg free
 13494  0049AE  501A               	movf	pad@w^0,w,c
 13495  0049B0  2401               	addwf	?_strlen^0,w,c
 13496  0049B2  6E11               	movwf	?_pad^0,c
 13497  0049B4  501B               	movf	(pad@w+1)^0,w,c
 13498  0049B6  2002               	addwfc	(?_strlen+1)^0,w,c
 13499  0049B8  6E12               	movwf	(?_pad+1)^0,c
 13500  0049BA  0012               	return		;funcret
 13501  0049BC                     __end_of_pad:
 13502                           	callstack 0
 13503                           
 13504 ;; *************** function _strlen *****************
 13505 ;; Defined at:
 13506 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\strlen.c"
 13507 ;; Parameters:    Size  Location     Type
 13508 ;;  s               2    0[COMRAM] PTR const unsigned char 
 13509 ;;		 -> dbuf(80), 
 13510 ;; Auto vars:     Size  Location     Type
 13511 ;;  a               2    2[COMRAM] PTR const unsigned char 
 13512 ;;		 -> dbuf(80), 
 13513 ;; Return value:  Size  Location     Type
 13514 ;;                  2    0[COMRAM] unsigned int 
 13515 ;; Registers used:
 13516 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 13517 ;; Tracked objects:
 13518 ;;		On entry : 0/0
 13519 ;;		On exit  : 0/0
 13520 ;;		Unchanged: 0/0
 13521 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13522 ;;      Params:         2       0       0       0       0       0       0
 13523 ;;      Locals:         2       0       0       0       0       0       0
 13524 ;;      Temps:          0       0       0       0       0       0       0
 13525 ;;      Totals:         4       0       0       0       0       0       0
 13526 ;;Total ram usage:        4 bytes
 13527 ;; Hardware stack levels used:    1
 13528 ;; Hardware stack levels required when called:    1
 13529 ;; This function calls:
 13530 ;;		Nothing
 13531 ;; This function is called by:
 13532 ;;		_pad
 13533 ;; This function uses a non-reentrant model
 13534 ;;
 13535                           
 13536                           	psect	text52
 13537  00561C                     __ptext52:
 13538                           	callstack 0
 13539  00561C                     _strlen:
 13540                           	callstack 21
 13541  00561C  C001  F003         	movff	strlen@s,strlen@a
 13542  005620  C002  F004         	movff	strlen@s+1,strlen@a+1
 13543  005624  EF16  F02B         	goto	l4392
 13544  005628                     l4390:
 13545  005628  4A01               	infsnz	strlen@s^0,f,c
 13546  00562A  2A02               	incf	(strlen@s+1)^0,f,c
 13547  00562C                     l4392:
 13548  00562C  C001  FFD9         	movff	strlen@s,fsr2l
 13549  005630  C002  FFDA         	movff	strlen@s+1,fsr2h
 13550  005634  50DF               	movf	indf2,w,c
 13551  005636  A4D8               	btfss	status,2,c
 13552  005638  EF20  F02B         	goto	u4431
 13553  00563C  EF22  F02B         	goto	u4430
 13554  005640                     u4431:
 13555  005640  EF14  F02B         	goto	l4390
 13556  005644                     u4430:
 13557  005644  5003               	movf	strlen@a^0,w,c
 13558  005646  5C01               	subwf	strlen@s^0,w,c
 13559  005648  6E01               	movwf	?_strlen^0,c
 13560  00564A  5004               	movf	(strlen@a+1)^0,w,c
 13561  00564C  5802               	subwfb	(strlen@s+1)^0,w,c
 13562  00564E  6E02               	movwf	(?_strlen+1)^0,c
 13563  005650  0012               	return		;funcret
 13564  005652                     __end_of_strlen:
 13565                           	callstack 0
 13566                           
 13567 ;; *************** function _fputs *****************
 13568 ;; Defined at:
 13569 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputs.c"
 13570 ;; Parameters:    Size  Location     Type
 13571 ;;  s               2    9[COMRAM] PTR const unsigned char 
 13572 ;;		 -> dbuf(80), 
 13573 ;;  fp              2   11[COMRAM] PTR struct _IO_FILE
 13574 ;;		 -> sprintf@f(6), 
 13575 ;; Auto vars:     Size  Location     Type
 13576 ;;  i               2   14[COMRAM] int 
 13577 ;;  c               1   13[COMRAM] unsigned char 
 13578 ;; Return value:  Size  Location     Type
 13579 ;;                  2    9[COMRAM] int 
 13580 ;; Registers used:
 13581 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13582 ;; Tracked objects:
 13583 ;;		On entry : 0/0
 13584 ;;		On exit  : 0/0
 13585 ;;		Unchanged: 0/0
 13586 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13587 ;;      Params:         4       0       0       0       0       0       0
 13588 ;;      Locals:         3       0       0       0       0       0       0
 13589 ;;      Temps:          0       0       0       0       0       0       0
 13590 ;;      Totals:         7       0       0       0       0       0       0
 13591 ;;Total ram usage:        7 bytes
 13592 ;; Hardware stack levels used:    1
 13593 ;; Hardware stack levels required when called:    3
 13594 ;; This function calls:
 13595 ;;		_fputc
 13596 ;; This function is called by:
 13597 ;;		_pad
 13598 ;; This function uses a non-reentrant model
 13599 ;;
 13600                           
 13601                           	psect	text53
 13602  005386                     __ptext53:
 13603                           	callstack 0
 13604  005386                     _fputs:
 13605                           	callstack 19
 13606  005386  0E00               	movlw	0
 13607  005388  6E10               	movwf	(fputs@i+1)^0,c
 13608  00538A  0E00               	movlw	0
 13609  00538C  6E0F               	movwf	fputs@i^0,c
 13610  00538E  EFD4  F029         	goto	l4386
 13611  005392                     l4382:
 13612  005392  C00E  F001         	movff	fputs@c,fputc@c
 13613  005396  6A02               	clrf	(fputc@c+1)^0,c
 13614  005398  C00C  F003         	movff	fputs@fp,fputc@fp
 13615  00539C  C00D  F004         	movff	fputs@fp+1,fputc@fp+1
 13616  0053A0  EC16  F024         	call	_fputc	;wreg free
 13617  0053A4  4A0F               	infsnz	fputs@i^0,f,c
 13618  0053A6  2A10               	incf	(fputs@i+1)^0,f,c
 13619  0053A8                     l4386:
 13620  0053A8  500F               	movf	fputs@i^0,w,c
 13621  0053AA  240A               	addwf	fputs@s^0,w,c
 13622  0053AC  6ED9               	movwf	fsr2l,c
 13623  0053AE  5010               	movf	(fputs@i+1)^0,w,c
 13624  0053B0  200B               	addwfc	(fputs@s+1)^0,w,c
 13625  0053B2  6EDA               	movwf	fsr2h,c
 13626  0053B4  50DF               	movf	indf2,w,c
 13627  0053B6  6E0E               	movwf	fputs@c^0,c
 13628  0053B8  500E               	movf	fputs@c^0,w,c
 13629  0053BA  A4D8               	btfss	status,2,c
 13630  0053BC  EFE2  F029         	goto	u4421
 13631  0053C0  EFE4  F029         	goto	u4420
 13632  0053C4                     u4421:
 13633  0053C4  EFC9  F029         	goto	l4382
 13634  0053C8                     u4420:
 13635  0053C8  0012               	return		;funcret
 13636  0053CA                     __end_of_fputs:
 13637                           	callstack 0
 13638                           
 13639 ;; *************** function _fputc *****************
 13640 ;; Defined at:
 13641 ;;		line 8 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\nf_fputc.c"
 13642 ;; Parameters:    Size  Location     Type
 13643 ;;  c               2    0[COMRAM] int 
 13644 ;;  fp              2    2[COMRAM] PTR struct _IO_FILE
 13645 ;;		 -> sprintf@f(6), 
 13646 ;; Auto vars:     Size  Location     Type
 13647 ;;		None
 13648 ;; Return value:  Size  Location     Type
 13649 ;;                  2    0[COMRAM] int 
 13650 ;; Registers used:
 13651 ;;		wreg, fsr1l, fsr1h, fsr2l, fsr2h, status,2, status,0, cstack
 13652 ;; Tracked objects:
 13653 ;;		On entry : 0/0
 13654 ;;		On exit  : 0/0
 13655 ;;		Unchanged: 0/0
 13656 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13657 ;;      Params:         4       0       0       0       0       0       0
 13658 ;;      Locals:         0       0       0       0       0       0       0
 13659 ;;      Temps:          5       0       0       0       0       0       0
 13660 ;;      Totals:         9       0       0       0       0       0       0
 13661 ;;Total ram usage:        9 bytes
 13662 ;; Hardware stack levels used:    1
 13663 ;; Hardware stack levels required when called:    2
 13664 ;; This function calls:
 13665 ;;		_putch
 13666 ;; This function is called by:
 13667 ;;		_pad
 13668 ;;		_vfpfcnvrt
 13669 ;;		_fputs
 13670 ;; This function uses a non-reentrant model
 13671 ;;
 13672                           
 13673                           	psect	text54
 13674  00482C                     __ptext54:
 13675                           	callstack 0
 13676  00482C                     _fputc:
 13677                           	callstack 22
 13678  00482C  5003               	movf	fputc@fp^0,w,c
 13679  00482E  1004               	iorwf	(fputc@fp+1)^0,w,c
 13680  004830  B4D8               	btfsc	status,2,c
 13681  004832  EF1D  F024         	goto	u3991
 13682  004836  EF1F  F024         	goto	u3990
 13683  00483A                     u3991:
 13684  00483A  EF28  F024         	goto	l4168
 13685  00483E                     u3990:
 13686  00483E  5003               	movf	fputc@fp^0,w,c
 13687  004840  1004               	iorwf	(fputc@fp+1)^0,w,c
 13688  004842  A4D8               	btfss	status,2,c
 13689  004844  EF26  F024         	goto	u4001
 13690  004848  EF28  F024         	goto	u4000
 13691  00484C                     u4001:
 13692  00484C  EF2D  F024         	goto	l4170
 13693  004850                     u4000:
 13694  004850                     l4168:
 13695  004850  5001               	movf	fputc@c^0,w,c
 13696  004852  ECDC  F02B         	call	_putch
 13697  004856  EF7A  F024         	goto	l1677
 13698  00485A                     l4170:
 13699  00485A  EE20 F004          	lfsr	2,4
 13700  00485E  5003               	movf	fputc@fp^0,w,c
 13701  004860  26D9               	addwf	fsr2l,f,c
 13702  004862  5004               	movf	(fputc@fp+1)^0,w,c
 13703  004864  22DA               	addwfc	fsr2h,f,c
 13704  004866  50DE               	movf	postinc2,w,c
 13705  004868  10DE               	iorwf	postinc2,w,c
 13706  00486A  B4D8               	btfsc	status,2,c
 13707  00486C  EF3A  F024         	goto	u4011
 13708  004870  EF3C  F024         	goto	u4010
 13709  004874                     u4011:
 13710  004874  EF57  F024         	goto	l4174
 13711  004878                     u4010:
 13712  004878  EE20 F004          	lfsr	2,4
 13713  00487C  5003               	movf	fputc@fp^0,w,c
 13714  00487E  26D9               	addwf	fsr2l,f,c
 13715  004880  5004               	movf	(fputc@fp+1)^0,w,c
 13716  004882  22DA               	addwfc	fsr2h,f,c
 13717  004884  EE10 F002          	lfsr	1,2
 13718  004888  5003               	movf	fputc@fp^0,w,c
 13719  00488A  26E1               	addwf	fsr1l,f,c
 13720  00488C  5004               	movf	(fputc@fp+1)^0,w,c
 13721  00488E  22E2               	addwfc	fsr1h,f,c
 13722  004890  50DE               	movf	postinc2,w,c
 13723  004892  5CE6               	subwf	postinc1,w,c
 13724  004894  50E6               	movf	postinc1,w,c
 13725  004896  0A80               	xorlw	128
 13726  004898  6E09               	movwf	(??_fputc+4)^0,c
 13727  00489A  50DE               	movf	postinc2,w,c
 13728  00489C  0A80               	xorlw	128
 13729  00489E  5809               	subwfb	(??_fputc+4)^0,w,c
 13730  0048A0  B0D8               	btfsc	status,0,c
 13731  0048A2  EF55  F024         	goto	u4021
 13732  0048A6  EF57  F024         	goto	u4020
 13733  0048AA                     u4021:
 13734  0048AA  EF7A  F024         	goto	l1677
 13735  0048AE                     u4020:
 13736  0048AE                     l4174:
 13737  0048AE  EE20 F002          	lfsr	2,2
 13738  0048B2  5003               	movf	fputc@fp^0,w,c
 13739  0048B4  26D9               	addwf	fsr2l,f,c
 13740  0048B6  5004               	movf	(fputc@fp+1)^0,w,c
 13741  0048B8  22DA               	addwfc	fsr2h,f,c
 13742  0048BA  CFDE F005          	movff	postinc2,??_fputc
 13743  0048BE  CFDD F006          	movff	postdec2,??_fputc+1
 13744  0048C2  C003  FFD9         	movff	fputc@fp,fsr2l
 13745  0048C6  C004  FFDA         	movff	fputc@fp+1,fsr2h
 13746  0048CA  CFDE F007          	movff	postinc2,??_fputc+2
 13747  0048CE  CFDD F008          	movff	postdec2,??_fputc+3
 13748  0048D2  5005               	movf	??_fputc^0,w,c
 13749  0048D4  2407               	addwf	(??_fputc+2)^0,w,c
 13750  0048D6  6ED9               	movwf	fsr2l,c
 13751  0048D8  5006               	movf	(??_fputc+1)^0,w,c
 13752  0048DA  2008               	addwfc	(??_fputc+3)^0,w,c
 13753  0048DC  6EDA               	movwf	fsr2h,c
 13754  0048DE  C001  FFDF         	movff	fputc@c,indf2
 13755  0048E2  EE20 F002          	lfsr	2,2
 13756  0048E6  5003               	movf	fputc@fp^0,w,c
 13757  0048E8  26D9               	addwf	fsr2l,f,c
 13758  0048EA  5004               	movf	(fputc@fp+1)^0,w,c
 13759  0048EC  22DA               	addwfc	fsr2h,f,c
 13760  0048EE  2ADE               	incf	postinc2,f,c
 13761  0048F0  0E00               	movlw	0
 13762  0048F2  22DD               	addwfc	postdec2,f,c
 13763  0048F4                     l1677:
 13764  0048F4  0012               	return		;funcret
 13765  0048F6                     __end_of_fputc:
 13766                           	callstack 0
 13767                           
 13768 ;; *************** function _putch *****************
 13769 ;; Defined at:
 13770 ;;		line 7 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\putch.c"
 13771 ;; Parameters:    Size  Location     Type
 13772 ;;  c               1    wreg     unsigned char 
 13773 ;; Auto vars:     Size  Location     Type
 13774 ;;  c               1    0[COMRAM] unsigned char 
 13775 ;; Return value:  Size  Location     Type
 13776 ;;                  1    wreg      void 
 13777 ;; Registers used:
 13778 ;;		wreg
 13779 ;; Tracked objects:
 13780 ;;		On entry : 0/0
 13781 ;;		On exit  : 0/0
 13782 ;;		Unchanged: 0/0
 13783 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13784 ;;      Params:         0       0       0       0       0       0       0
 13785 ;;      Locals:         0       0       0       0       0       0       0
 13786 ;;      Temps:          0       0       0       0       0       0       0
 13787 ;;      Totals:         0       0       0       0       0       0       0
 13788 ;;Total ram usage:        0 bytes
 13789 ;; Hardware stack levels used:    1
 13790 ;; Hardware stack levels required when called:    1
 13791 ;; This function calls:
 13792 ;;		Nothing
 13793 ;; This function is called by:
 13794 ;;		_fputc
 13795 ;; This function uses a non-reentrant model
 13796 ;;
 13797                           
 13798                           	psect	text55
 13799  0057B8                     __ptext55:
 13800                           	callstack 0
 13801  0057B8                     _putch:
 13802                           	callstack 22
 13803  0057B8  0012               	return		;funcret
 13804  0057BA                     __end_of_putch:
 13805                           	callstack 0
 13806                           
 13807 ;; *************** function _abs *****************
 13808 ;; Defined at:
 13809 ;;		line 1 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\abs.c"
 13810 ;; Parameters:    Size  Location     Type
 13811 ;;  a               2   18[COMRAM] int 
 13812 ;; Auto vars:     Size  Location     Type
 13813 ;;		None
 13814 ;; Return value:  Size  Location     Type
 13815 ;;                  2   18[COMRAM] int 
 13816 ;; Registers used:
 13817 ;;		wreg, status,2, status,0
 13818 ;; Tracked objects:
 13819 ;;		On entry : 0/0
 13820 ;;		On exit  : 0/0
 13821 ;;		Unchanged: 0/0
 13822 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13823 ;;      Params:         2       0       0       0       0       0       0
 13824 ;;      Locals:         0       0       0       0       0       0       0
 13825 ;;      Temps:          2       0       0       0       0       0       0
 13826 ;;      Totals:         4       0       0       0       0       0       0
 13827 ;;Total ram usage:        4 bytes
 13828 ;; Hardware stack levels used:    1
 13829 ;; Hardware stack levels required when called:    1
 13830 ;; This function calls:
 13831 ;;		Nothing
 13832 ;; This function is called by:
 13833 ;;		_dtoa
 13834 ;; This function uses a non-reentrant model
 13835 ;;
 13836                           
 13837                           	psect	text56
 13838  00544C                     __ptext56:
 13839                           	callstack 0
 13840  00544C                     _abs:
 13841                           	callstack 22
 13842  00544C  BE14               	btfsc	(abs@a+1)^0,7,c
 13843  00544E  EF33  F02A         	goto	u5330
 13844  005452  5014               	movf	(abs@a+1)^0,w,c
 13845  005454  E106               	bnz	u5331
 13846  005456  0413               	decf	abs@a^0,w,c
 13847  005458  B0D8               	btfsc	status,0,c
 13848  00545A  EF31  F02A         	goto	u5331
 13849  00545E  EF33  F02A         	goto	u5330
 13850  005462                     u5331:
 13851  005462  EF41  F02A         	goto	l1598
 13852  005466                     u5330:
 13853  005466  C013  F015         	movff	abs@a,??_abs
 13854  00546A  C014  F016         	movff	abs@a+1,??_abs+1
 13855  00546E  1E15               	comf	??_abs^0,f,c
 13856  005470  1E16               	comf	(??_abs+1)^0,f,c
 13857  005472  4A15               	infsnz	??_abs^0,f,c
 13858  005474  2A16               	incf	(??_abs+1)^0,f,c
 13859  005476  C015  F013         	movff	??_abs,?_abs
 13860  00547A  C016  F014         	movff	??_abs+1,?_abs+1
 13861  00547E  EF45  F02A         	goto	l1601
 13862  005482                     l1598:
 13863  005482  C013  F013         	movff	abs@a,?_abs
 13864  005486  C014  F014         	movff	abs@a+1,?_abs+1
 13865  00548A                     l1601:
 13866  00548A  0012               	return		;funcret
 13867  00548C                     __end_of_abs:
 13868                           	callstack 0
 13869                           
 13870 ;; *************** function ___aomod *****************
 13871 ;; Defined at:
 13872 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aomod.c"
 13873 ;; Parameters:    Size  Location     Type
 13874 ;;  dividend        8    0[COMRAM] long long 
 13875 ;;  divisor         8    8[COMRAM] long long 
 13876 ;; Auto vars:     Size  Location     Type
 13877 ;;  sign            1   17[COMRAM] unsigned char 
 13878 ;;  counter         1   16[COMRAM] unsigned char 
 13879 ;; Return value:  Size  Location     Type
 13880 ;;                  8    0[COMRAM] long long 
 13881 ;; Registers used:
 13882 ;;		wreg, status,2, status,0
 13883 ;; Tracked objects:
 13884 ;;		On entry : 0/0
 13885 ;;		On exit  : 0/0
 13886 ;;		Unchanged: 0/0
 13887 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 13888 ;;      Params:        16       0       0       0       0       0       0
 13889 ;;      Locals:         2       0       0       0       0       0       0
 13890 ;;      Temps:          0       0       0       0       0       0       0
 13891 ;;      Totals:        18       0       0       0       0       0       0
 13892 ;;Total ram usage:       18 bytes
 13893 ;; Hardware stack levels used:    1
 13894 ;; Hardware stack levels required when called:    1
 13895 ;; This function calls:
 13896 ;;		Nothing
 13897 ;; This function is called by:
 13898 ;;		_dtoa
 13899 ;; This function uses a non-reentrant model
 13900 ;;
 13901                           
 13902                           	psect	text57
 13903  003BBC                     __ptext57:
 13904                           	callstack 0
 13905  003BBC                     ___aomod:
 13906                           	callstack 22
 13907  003BBC  0E00               	movlw	0
 13908  003BBE  6E12               	movwf	___aomod@sign^0,c
 13909  003BC0  BE08               	btfsc	(___aomod@dividend+7)^0,7,c
 13910  003BC2  EFE7  F01D         	goto	u4530
 13911  003BC6  EFE5  F01D         	goto	u4531
 13912  003BCA                     u4531:
 13913  003BCA  EFF9  F01D         	goto	l4460
 13914  003BCE                     u4530:
 13915  003BCE  1E08               	comf	(___aomod@dividend+7)^0,f,c
 13916  003BD0  1E07               	comf	(___aomod@dividend+6)^0,f,c
 13917  003BD2  1E06               	comf	(___aomod@dividend+5)^0,f,c
 13918  003BD4  1E05               	comf	(___aomod@dividend+4)^0,f,c
 13919  003BD6  1E04               	comf	(___aomod@dividend+3)^0,f,c
 13920  003BD8  1E03               	comf	(___aomod@dividend+2)^0,f,c
 13921  003BDA  1E02               	comf	(___aomod@dividend+1)^0,f,c
 13922  003BDC  6C01               	negf	___aomod@dividend^0,c
 13923  003BDE  0E00               	movlw	0
 13924  003BE0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 13925  003BE2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 13926  003BE4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 13927  003BE6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 13928  003BE8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 13929  003BEA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 13930  003BEC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 13931  003BEE  0E01               	movlw	1
 13932  003BF0  6E12               	movwf	___aomod@sign^0,c
 13933  003BF2                     l4460:
 13934  003BF2  BE10               	btfsc	(___aomod@divisor+7)^0,7,c
 13935  003BF4  EF00  F01E         	goto	u4540
 13936  003BF8  EFFE  F01D         	goto	u4541
 13937  003BFC                     u4541:
 13938  003BFC  EF10  F01E         	goto	l4464
 13939  003C00                     u4540:
 13940  003C00  1E10               	comf	(___aomod@divisor+7)^0,f,c
 13941  003C02  1E0F               	comf	(___aomod@divisor+6)^0,f,c
 13942  003C04  1E0E               	comf	(___aomod@divisor+5)^0,f,c
 13943  003C06  1E0D               	comf	(___aomod@divisor+4)^0,f,c
 13944  003C08  1E0C               	comf	(___aomod@divisor+3)^0,f,c
 13945  003C0A  1E0B               	comf	(___aomod@divisor+2)^0,f,c
 13946  003C0C  1E0A               	comf	(___aomod@divisor+1)^0,f,c
 13947  003C0E  6C09               	negf	___aomod@divisor^0,c
 13948  003C10  0E00               	movlw	0
 13949  003C12  220A               	addwfc	(___aomod@divisor+1)^0,f,c
 13950  003C14  220B               	addwfc	(___aomod@divisor+2)^0,f,c
 13951  003C16  220C               	addwfc	(___aomod@divisor+3)^0,f,c
 13952  003C18  220D               	addwfc	(___aomod@divisor+4)^0,f,c
 13953  003C1A  220E               	addwfc	(___aomod@divisor+5)^0,f,c
 13954  003C1C  220F               	addwfc	(___aomod@divisor+6)^0,f,c
 13955  003C1E  2210               	addwfc	(___aomod@divisor+7)^0,f,c
 13956  003C20                     l4464:
 13957  003C20  5009               	movf	___aomod@divisor^0,w,c
 13958  003C22  100A               	iorwf	(___aomod@divisor+1)^0,w,c
 13959  003C24  100B               	iorwf	(___aomod@divisor+2)^0,w,c
 13960  003C26  100C               	iorwf	(___aomod@divisor+3)^0,w,c
 13961  003C28  100D               	iorwf	(___aomod@divisor+4)^0,w,c
 13962  003C2A  100E               	iorwf	(___aomod@divisor+5)^0,w,c
 13963  003C2C  100F               	iorwf	(___aomod@divisor+6)^0,w,c
 13964  003C2E  1010               	iorwf	(___aomod@divisor+7)^0,w,c
 13965  003C30  B4D8               	btfsc	status,2,c
 13966  003C32  EF1D  F01E         	goto	u4551
 13967  003C36  EF1F  F01E         	goto	u4550
 13968  003C3A                     u4551:
 13969  003C3A  EF67  F01E         	goto	l4480
 13970  003C3E                     u4550:
 13971  003C3E  0E01               	movlw	1
 13972  003C40  6E11               	movwf	___aomod@counter^0,c
 13973  003C42  EF2D  F01E         	goto	l4470
 13974  003C46                     l4468:
 13975  003C46  90D8               	bcf	status,0,c
 13976  003C48  3609               	rlcf	___aomod@divisor^0,f,c
 13977  003C4A  360A               	rlcf	(___aomod@divisor+1)^0,f,c
 13978  003C4C  360B               	rlcf	(___aomod@divisor+2)^0,f,c
 13979  003C4E  360C               	rlcf	(___aomod@divisor+3)^0,f,c
 13980  003C50  360D               	rlcf	(___aomod@divisor+4)^0,f,c
 13981  003C52  360E               	rlcf	(___aomod@divisor+5)^0,f,c
 13982  003C54  360F               	rlcf	(___aomod@divisor+6)^0,f,c
 13983  003C56  3610               	rlcf	(___aomod@divisor+7)^0,f,c
 13984  003C58  2A11               	incf	___aomod@counter^0,f,c
 13985  003C5A                     l4470:
 13986  003C5A  AE10               	btfss	(___aomod@divisor+7)^0,7,c
 13987  003C5C  EF32  F01E         	goto	u4561
 13988  003C60  EF34  F01E         	goto	u4560
 13989  003C64                     u4561:
 13990  003C64  EF23  F01E         	goto	l4468
 13991  003C68                     u4560:
 13992  003C68                     l4472:
 13993  003C68  5009               	movf	___aomod@divisor^0,w,c
 13994  003C6A  5C01               	subwf	___aomod@dividend^0,w,c
 13995  003C6C  500A               	movf	(___aomod@divisor+1)^0,w,c
 13996  003C6E  5802               	subwfb	(___aomod@dividend+1)^0,w,c
 13997  003C70  500B               	movf	(___aomod@divisor+2)^0,w,c
 13998  003C72  5803               	subwfb	(___aomod@dividend+2)^0,w,c
 13999  003C74  500C               	movf	(___aomod@divisor+3)^0,w,c
 14000  003C76  5804               	subwfb	(___aomod@dividend+3)^0,w,c
 14001  003C78  500D               	movf	(___aomod@divisor+4)^0,w,c
 14002  003C7A  5805               	subwfb	(___aomod@dividend+4)^0,w,c
 14003  003C7C  500E               	movf	(___aomod@divisor+5)^0,w,c
 14004  003C7E  5806               	subwfb	(___aomod@dividend+5)^0,w,c
 14005  003C80  500F               	movf	(___aomod@divisor+6)^0,w,c
 14006  003C82  5807               	subwfb	(___aomod@dividend+6)^0,w,c
 14007  003C84  5010               	movf	(___aomod@divisor+7)^0,w,c
 14008  003C86  5808               	subwfb	(___aomod@dividend+7)^0,w,c
 14009  003C88  A0D8               	btfss	status,0,c
 14010  003C8A  EF49  F01E         	goto	u4571
 14011  003C8E  EF4B  F01E         	goto	u4570
 14012  003C92                     u4571:
 14013  003C92  EF5B  F01E         	goto	l4476
 14014  003C96                     u4570:
 14015  003C96  5009               	movf	___aomod@divisor^0,w,c
 14016  003C98  5E01               	subwf	___aomod@dividend^0,f,c
 14017  003C9A  500A               	movf	(___aomod@divisor+1)^0,w,c
 14018  003C9C  5A02               	subwfb	(___aomod@dividend+1)^0,f,c
 14019  003C9E  500B               	movf	(___aomod@divisor+2)^0,w,c
 14020  003CA0  5A03               	subwfb	(___aomod@dividend+2)^0,f,c
 14021  003CA2  500C               	movf	(___aomod@divisor+3)^0,w,c
 14022  003CA4  5A04               	subwfb	(___aomod@dividend+3)^0,f,c
 14023  003CA6  500D               	movf	(___aomod@divisor+4)^0,w,c
 14024  003CA8  5A05               	subwfb	(___aomod@dividend+4)^0,f,c
 14025  003CAA  500E               	movf	(___aomod@divisor+5)^0,w,c
 14026  003CAC  5A06               	subwfb	(___aomod@dividend+5)^0,f,c
 14027  003CAE  500F               	movf	(___aomod@divisor+6)^0,w,c
 14028  003CB0  5A07               	subwfb	(___aomod@dividend+6)^0,f,c
 14029  003CB2  5010               	movf	(___aomod@divisor+7)^0,w,c
 14030  003CB4  5A08               	subwfb	(___aomod@dividend+7)^0,f,c
 14031  003CB6                     l4476:
 14032  003CB6  90D8               	bcf	status,0,c
 14033  003CB8  3210               	rrcf	(___aomod@divisor+7)^0,f,c
 14034  003CBA  320F               	rrcf	(___aomod@divisor+6)^0,f,c
 14035  003CBC  320E               	rrcf	(___aomod@divisor+5)^0,f,c
 14036  003CBE  320D               	rrcf	(___aomod@divisor+4)^0,f,c
 14037  003CC0  320C               	rrcf	(___aomod@divisor+3)^0,f,c
 14038  003CC2  320B               	rrcf	(___aomod@divisor+2)^0,f,c
 14039  003CC4  320A               	rrcf	(___aomod@divisor+1)^0,f,c
 14040  003CC6  3209               	rrcf	___aomod@divisor^0,f,c
 14041  003CC8  2E11               	decfsz	___aomod@counter^0,f,c
 14042  003CCA  EF34  F01E         	goto	l4472
 14043  003CCE                     l4480:
 14044  003CCE  5012               	movf	___aomod@sign^0,w,c
 14045  003CD0  B4D8               	btfsc	status,2,c
 14046  003CD2  EF6D  F01E         	goto	u4581
 14047  003CD6  EF6F  F01E         	goto	u4580
 14048  003CDA                     u4581:
 14049  003CDA  EF7F  F01E         	goto	l4484
 14050  003CDE                     u4580:
 14051  003CDE  1E08               	comf	(___aomod@dividend+7)^0,f,c
 14052  003CE0  1E07               	comf	(___aomod@dividend+6)^0,f,c
 14053  003CE2  1E06               	comf	(___aomod@dividend+5)^0,f,c
 14054  003CE4  1E05               	comf	(___aomod@dividend+4)^0,f,c
 14055  003CE6  1E04               	comf	(___aomod@dividend+3)^0,f,c
 14056  003CE8  1E03               	comf	(___aomod@dividend+2)^0,f,c
 14057  003CEA  1E02               	comf	(___aomod@dividend+1)^0,f,c
 14058  003CEC  6C01               	negf	___aomod@dividend^0,c
 14059  003CEE  0E00               	movlw	0
 14060  003CF0  2202               	addwfc	(___aomod@dividend+1)^0,f,c
 14061  003CF2  2203               	addwfc	(___aomod@dividend+2)^0,f,c
 14062  003CF4  2204               	addwfc	(___aomod@dividend+3)^0,f,c
 14063  003CF6  2205               	addwfc	(___aomod@dividend+4)^0,f,c
 14064  003CF8  2206               	addwfc	(___aomod@dividend+5)^0,f,c
 14065  003CFA  2207               	addwfc	(___aomod@dividend+6)^0,f,c
 14066  003CFC  2208               	addwfc	(___aomod@dividend+7)^0,f,c
 14067  003CFE                     l4484:
 14068  003CFE  C001  F001         	movff	___aomod@dividend,?___aomod
 14069  003D02  C002  F002         	movff	___aomod@dividend+1,?___aomod+1
 14070  003D06  C003  F003         	movff	___aomod@dividend+2,?___aomod+2
 14071  003D0A  C004  F004         	movff	___aomod@dividend+3,?___aomod+3
 14072  003D0E  C005  F005         	movff	___aomod@dividend+4,?___aomod+4
 14073  003D12  C006  F006         	movff	___aomod@dividend+5,?___aomod+5
 14074  003D16  C007  F007         	movff	___aomod@dividend+6,?___aomod+6
 14075  003D1A  C008  F008         	movff	___aomod@dividend+7,?___aomod+7
 14076  003D1E  0012               	return		;funcret
 14077  003D20                     __end_of___aomod:
 14078                           	callstack 0
 14079                           
 14080 ;; *************** function ___aodiv *****************
 14081 ;; Defined at:
 14082 ;;		line 9 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\aodiv.c"
 14083 ;; Parameters:    Size  Location     Type
 14084 ;;  dividend        8    0[COMRAM] long long 
 14085 ;;  divisor         8    8[COMRAM] long long 
 14086 ;; Auto vars:     Size  Location     Type
 14087 ;;  quotient        8   18[COMRAM] long long 
 14088 ;;  sign            1   17[COMRAM] unsigned char 
 14089 ;;  counter         1   16[COMRAM] unsigned char 
 14090 ;; Return value:  Size  Location     Type
 14091 ;;                  8    0[COMRAM] long long 
 14092 ;; Registers used:
 14093 ;;		wreg, fsr2l, fsr2h, status,2, status,0
 14094 ;; Tracked objects:
 14095 ;;		On entry : 0/0
 14096 ;;		On exit  : 0/0
 14097 ;;		Unchanged: 0/0
 14098 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14099 ;;      Params:        16       0       0       0       0       0       0
 14100 ;;      Locals:        10       0       0       0       0       0       0
 14101 ;;      Temps:          0       0       0       0       0       0       0
 14102 ;;      Totals:        26       0       0       0       0       0       0
 14103 ;;Total ram usage:       26 bytes
 14104 ;; Hardware stack levels used:    1
 14105 ;; Hardware stack levels required when called:    1
 14106 ;; This function calls:
 14107 ;;		Nothing
 14108 ;; This function is called by:
 14109 ;;		_dtoa
 14110 ;; This function uses a non-reentrant model
 14111 ;;
 14112                           
 14113                           	psect	text58
 14114  003A34                     __ptext58:
 14115                           	callstack 0
 14116  003A34                     ___aodiv:
 14117                           	callstack 22
 14118  003A34  0E00               	movlw	0
 14119  003A36  6E12               	movwf	___aodiv@sign^0,c
 14120  003A38  BE10               	btfsc	(___aodiv@divisor+7)^0,7,c
 14121  003A3A  EF23  F01D         	goto	u4460
 14122  003A3E  EF21  F01D         	goto	u4461
 14123  003A42                     u4461:
 14124  003A42  EF35  F01D         	goto	l4416
 14125  003A46                     u4460:
 14126  003A46  1E10               	comf	(___aodiv@divisor+7)^0,f,c
 14127  003A48  1E0F               	comf	(___aodiv@divisor+6)^0,f,c
 14128  003A4A  1E0E               	comf	(___aodiv@divisor+5)^0,f,c
 14129  003A4C  1E0D               	comf	(___aodiv@divisor+4)^0,f,c
 14130  003A4E  1E0C               	comf	(___aodiv@divisor+3)^0,f,c
 14131  003A50  1E0B               	comf	(___aodiv@divisor+2)^0,f,c
 14132  003A52  1E0A               	comf	(___aodiv@divisor+1)^0,f,c
 14133  003A54  6C09               	negf	___aodiv@divisor^0,c
 14134  003A56  0E00               	movlw	0
 14135  003A58  220A               	addwfc	(___aodiv@divisor+1)^0,f,c
 14136  003A5A  220B               	addwfc	(___aodiv@divisor+2)^0,f,c
 14137  003A5C  220C               	addwfc	(___aodiv@divisor+3)^0,f,c
 14138  003A5E  220D               	addwfc	(___aodiv@divisor+4)^0,f,c
 14139  003A60  220E               	addwfc	(___aodiv@divisor+5)^0,f,c
 14140  003A62  220F               	addwfc	(___aodiv@divisor+6)^0,f,c
 14141  003A64  2210               	addwfc	(___aodiv@divisor+7)^0,f,c
 14142  003A66  0E01               	movlw	1
 14143  003A68  6E12               	movwf	___aodiv@sign^0,c
 14144  003A6A                     l4416:
 14145  003A6A  BE08               	btfsc	(___aodiv@dividend+7)^0,7,c
 14146  003A6C  EF3C  F01D         	goto	u4470
 14147  003A70  EF3A  F01D         	goto	u4471
 14148  003A74                     u4471:
 14149  003A74  EF4E  F01D         	goto	l4422
 14150  003A78                     u4470:
 14151  003A78  1E08               	comf	(___aodiv@dividend+7)^0,f,c
 14152  003A7A  1E07               	comf	(___aodiv@dividend+6)^0,f,c
 14153  003A7C  1E06               	comf	(___aodiv@dividend+5)^0,f,c
 14154  003A7E  1E05               	comf	(___aodiv@dividend+4)^0,f,c
 14155  003A80  1E04               	comf	(___aodiv@dividend+3)^0,f,c
 14156  003A82  1E03               	comf	(___aodiv@dividend+2)^0,f,c
 14157  003A84  1E02               	comf	(___aodiv@dividend+1)^0,f,c
 14158  003A86  6C01               	negf	___aodiv@dividend^0,c
 14159  003A88  0E00               	movlw	0
 14160  003A8A  2202               	addwfc	(___aodiv@dividend+1)^0,f,c
 14161  003A8C  2203               	addwfc	(___aodiv@dividend+2)^0,f,c
 14162  003A8E  2204               	addwfc	(___aodiv@dividend+3)^0,f,c
 14163  003A90  2205               	addwfc	(___aodiv@dividend+4)^0,f,c
 14164  003A92  2206               	addwfc	(___aodiv@dividend+5)^0,f,c
 14165  003A94  2207               	addwfc	(___aodiv@dividend+6)^0,f,c
 14166  003A96  2208               	addwfc	(___aodiv@dividend+7)^0,f,c
 14167  003A98  0E01               	movlw	1
 14168  003A9A  1A12               	xorwf	___aodiv@sign^0,f,c
 14169  003A9C                     l4422:
 14170  003A9C  EE20  F013         	lfsr	2,___aodiv@quotient
 14171  003AA0  0E07               	movlw	7
 14172  003AA2                     u4481:
 14173  003AA2  6ADE               	clrf	postinc2,c
 14174  003AA4  06E8               	decf	wreg,f,c
 14175  003AA6  E2FD               	bc	u4481
 14176  003AA8  5009               	movf	___aodiv@divisor^0,w,c
 14177  003AAA  100A               	iorwf	(___aodiv@divisor+1)^0,w,c
 14178  003AAC  100B               	iorwf	(___aodiv@divisor+2)^0,w,c
 14179  003AAE  100C               	iorwf	(___aodiv@divisor+3)^0,w,c
 14180  003AB0  100D               	iorwf	(___aodiv@divisor+4)^0,w,c
 14181  003AB2  100E               	iorwf	(___aodiv@divisor+5)^0,w,c
 14182  003AB4  100F               	iorwf	(___aodiv@divisor+6)^0,w,c
 14183  003AB6  1010               	iorwf	(___aodiv@divisor+7)^0,w,c
 14184  003AB8  B4D8               	btfsc	status,2,c
 14185  003ABA  EF61  F01D         	goto	u4491
 14186  003ABE  EF63  F01D         	goto	u4490
 14187  003AC2                     u4491:
 14188  003AC2  EFB5  F01D         	goto	l4444
 14189  003AC6                     u4490:
 14190  003AC6  0E01               	movlw	1
 14191  003AC8  6E11               	movwf	___aodiv@counter^0,c
 14192  003ACA  EF71  F01D         	goto	l4430
 14193  003ACE                     l4428:
 14194  003ACE  90D8               	bcf	status,0,c
 14195  003AD0  3609               	rlcf	___aodiv@divisor^0,f,c
 14196  003AD2  360A               	rlcf	(___aodiv@divisor+1)^0,f,c
 14197  003AD4  360B               	rlcf	(___aodiv@divisor+2)^0,f,c
 14198  003AD6  360C               	rlcf	(___aodiv@divisor+3)^0,f,c
 14199  003AD8  360D               	rlcf	(___aodiv@divisor+4)^0,f,c
 14200  003ADA  360E               	rlcf	(___aodiv@divisor+5)^0,f,c
 14201  003ADC  360F               	rlcf	(___aodiv@divisor+6)^0,f,c
 14202  003ADE  3610               	rlcf	(___aodiv@divisor+7)^0,f,c
 14203  003AE0  2A11               	incf	___aodiv@counter^0,f,c
 14204  003AE2                     l4430:
 14205  003AE2  AE10               	btfss	(___aodiv@divisor+7)^0,7,c
 14206  003AE4  EF76  F01D         	goto	u4501
 14207  003AE8  EF78  F01D         	goto	u4500
 14208  003AEC                     u4501:
 14209  003AEC  EF67  F01D         	goto	l4428
 14210  003AF0                     u4500:
 14211  003AF0                     l4432:
 14212  003AF0  90D8               	bcf	status,0,c
 14213  003AF2  3613               	rlcf	___aodiv@quotient^0,f,c
 14214  003AF4  3614               	rlcf	(___aodiv@quotient+1)^0,f,c
 14215  003AF6  3615               	rlcf	(___aodiv@quotient+2)^0,f,c
 14216  003AF8  3616               	rlcf	(___aodiv@quotient+3)^0,f,c
 14217  003AFA  3617               	rlcf	(___aodiv@quotient+4)^0,f,c
 14218  003AFC  3618               	rlcf	(___aodiv@quotient+5)^0,f,c
 14219  003AFE  3619               	rlcf	(___aodiv@quotient+6)^0,f,c
 14220  003B00  361A               	rlcf	(___aodiv@quotient+7)^0,f,c
 14221  003B02  5009               	movf	___aodiv@divisor^0,w,c
 14222  003B04  5C01               	subwf	___aodiv@dividend^0,w,c
 14223  003B06  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14224  003B08  5802               	subwfb	(___aodiv@dividend+1)^0,w,c
 14225  003B0A  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14226  003B0C  5803               	subwfb	(___aodiv@dividend+2)^0,w,c
 14227  003B0E  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14228  003B10  5804               	subwfb	(___aodiv@dividend+3)^0,w,c
 14229  003B12  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14230  003B14  5805               	subwfb	(___aodiv@dividend+4)^0,w,c
 14231  003B16  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14232  003B18  5806               	subwfb	(___aodiv@dividend+5)^0,w,c
 14233  003B1A  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14234  003B1C  5807               	subwfb	(___aodiv@dividend+6)^0,w,c
 14235  003B1E  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14236  003B20  5808               	subwfb	(___aodiv@dividend+7)^0,w,c
 14237  003B22  A0D8               	btfss	status,0,c
 14238  003B24  EF96  F01D         	goto	u4511
 14239  003B28  EF98  F01D         	goto	u4510
 14240  003B2C                     u4511:
 14241  003B2C  EFA9  F01D         	goto	l4440
 14242  003B30                     u4510:
 14243  003B30  5009               	movf	___aodiv@divisor^0,w,c
 14244  003B32  5E01               	subwf	___aodiv@dividend^0,f,c
 14245  003B34  500A               	movf	(___aodiv@divisor+1)^0,w,c
 14246  003B36  5A02               	subwfb	(___aodiv@dividend+1)^0,f,c
 14247  003B38  500B               	movf	(___aodiv@divisor+2)^0,w,c
 14248  003B3A  5A03               	subwfb	(___aodiv@dividend+2)^0,f,c
 14249  003B3C  500C               	movf	(___aodiv@divisor+3)^0,w,c
 14250  003B3E  5A04               	subwfb	(___aodiv@dividend+3)^0,f,c
 14251  003B40  500D               	movf	(___aodiv@divisor+4)^0,w,c
 14252  003B42  5A05               	subwfb	(___aodiv@dividend+4)^0,f,c
 14253  003B44  500E               	movf	(___aodiv@divisor+5)^0,w,c
 14254  003B46  5A06               	subwfb	(___aodiv@dividend+5)^0,f,c
 14255  003B48  500F               	movf	(___aodiv@divisor+6)^0,w,c
 14256  003B4A  5A07               	subwfb	(___aodiv@dividend+6)^0,f,c
 14257  003B4C  5010               	movf	(___aodiv@divisor+7)^0,w,c
 14258  003B4E  5A08               	subwfb	(___aodiv@dividend+7)^0,f,c
 14259  003B50  8013               	bsf	___aodiv@quotient^0,0,c
 14260  003B52                     l4440:
 14261  003B52  90D8               	bcf	status,0,c
 14262  003B54  3210               	rrcf	(___aodiv@divisor+7)^0,f,c
 14263  003B56  320F               	rrcf	(___aodiv@divisor+6)^0,f,c
 14264  003B58  320E               	rrcf	(___aodiv@divisor+5)^0,f,c
 14265  003B5A  320D               	rrcf	(___aodiv@divisor+4)^0,f,c
 14266  003B5C  320C               	rrcf	(___aodiv@divisor+3)^0,f,c
 14267  003B5E  320B               	rrcf	(___aodiv@divisor+2)^0,f,c
 14268  003B60  320A               	rrcf	(___aodiv@divisor+1)^0,f,c
 14269  003B62  3209               	rrcf	___aodiv@divisor^0,f,c
 14270  003B64  2E11               	decfsz	___aodiv@counter^0,f,c
 14271  003B66  EF78  F01D         	goto	l4432
 14272  003B6A                     l4444:
 14273  003B6A  5012               	movf	___aodiv@sign^0,w,c
 14274  003B6C  B4D8               	btfsc	status,2,c
 14275  003B6E  EFBB  F01D         	goto	u4521
 14276  003B72  EFBD  F01D         	goto	u4520
 14277  003B76                     u4521:
 14278  003B76  EFCD  F01D         	goto	l4448
 14279  003B7A                     u4520:
 14280  003B7A  1E1A               	comf	(___aodiv@quotient+7)^0,f,c
 14281  003B7C  1E19               	comf	(___aodiv@quotient+6)^0,f,c
 14282  003B7E  1E18               	comf	(___aodiv@quotient+5)^0,f,c
 14283  003B80  1E17               	comf	(___aodiv@quotient+4)^0,f,c
 14284  003B82  1E16               	comf	(___aodiv@quotient+3)^0,f,c
 14285  003B84  1E15               	comf	(___aodiv@quotient+2)^0,f,c
 14286  003B86  1E14               	comf	(___aodiv@quotient+1)^0,f,c
 14287  003B88  6C13               	negf	___aodiv@quotient^0,c
 14288  003B8A  0E00               	movlw	0
 14289  003B8C  2214               	addwfc	(___aodiv@quotient+1)^0,f,c
 14290  003B8E  2215               	addwfc	(___aodiv@quotient+2)^0,f,c
 14291  003B90  2216               	addwfc	(___aodiv@quotient+3)^0,f,c
 14292  003B92  2217               	addwfc	(___aodiv@quotient+4)^0,f,c
 14293  003B94  2218               	addwfc	(___aodiv@quotient+5)^0,f,c
 14294  003B96  2219               	addwfc	(___aodiv@quotient+6)^0,f,c
 14295  003B98  221A               	addwfc	(___aodiv@quotient+7)^0,f,c
 14296  003B9A                     l4448:
 14297  003B9A  C013  F001         	movff	___aodiv@quotient,?___aodiv
 14298  003B9E  C014  F002         	movff	___aodiv@quotient+1,?___aodiv+1
 14299  003BA2  C015  F003         	movff	___aodiv@quotient+2,?___aodiv+2
 14300  003BA6  C016  F004         	movff	___aodiv@quotient+3,?___aodiv+3
 14301  003BAA  C017  F005         	movff	___aodiv@quotient+4,?___aodiv+4
 14302  003BAE  C018  F006         	movff	___aodiv@quotient+5,?___aodiv+5
 14303  003BB2  C019  F007         	movff	___aodiv@quotient+6,?___aodiv+6
 14304  003BB6  C01A  F008         	movff	___aodiv@quotient+7,?___aodiv+7
 14305  003BBA  0012               	return		;funcret
 14306  003BBC                     __end_of___aodiv:
 14307                           	callstack 0
 14308                           
 14309 ;; *************** function _atoi *****************
 14310 ;; Defined at:
 14311 ;;		line 4 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\atoi.c"
 14312 ;; Parameters:    Size  Location     Type
 14313 ;;  s               2    7[COMRAM] PTR const unsigned char 
 14314 ;;		 -> STR_18(18), STR_16(16), STR_14(18), STR_12(13), 
 14315 ;;		 -> STR_10(14), STR_8(16), STR_6(16), STR_4(15), 
 14316 ;; Auto vars:     Size  Location     Type
 14317 ;;  n               2   20[COMRAM] int 
 14318 ;;  neg             2   13[COMRAM] int 
 14319 ;; Return value:  Size  Location     Type
 14320 ;;                  2    7[COMRAM] int 
 14321 ;; Registers used:
 14322 ;;		wreg, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
 14323 ;; Tracked objects:
 14324 ;;		On entry : 0/0
 14325 ;;		On exit  : 0/0
 14326 ;;		Unchanged: 0/0
 14327 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14328 ;;      Params:         2       0       0       0       0       0       0
 14329 ;;      Locals:         9       0       0       0       0       0       0
 14330 ;;      Temps:          4       0       0       0       0       0       0
 14331 ;;      Totals:        15       0       0       0       0       0       0
 14332 ;;Total ram usage:       15 bytes
 14333 ;; Hardware stack levels used:    1
 14334 ;; Hardware stack levels required when called:    2
 14335 ;; This function calls:
 14336 ;;		___wmul
 14337 ;;		_isdigit
 14338 ;;		_isspace
 14339 ;; This function is called by:
 14340 ;;		_vfpfcnvrt
 14341 ;; This function uses a non-reentrant model
 14342 ;;
 14343                           
 14344                           	psect	text59
 14345  0038A4                     __ptext59:
 14346                           	callstack 0
 14347  0038A4                     _atoi:
 14348                           	callstack 22
 14349  0038A4  0E00               	movlw	0
 14350  0038A6  6E16               	movwf	(atoi@n+1)^0,c
 14351  0038A8  0E00               	movlw	0
 14352  0038AA  6E15               	movwf	atoi@n^0,c
 14353  0038AC  0E00               	movlw	0
 14354  0038AE  6E0F               	movwf	(atoi@neg+1)^0,c
 14355  0038B0  0E00               	movlw	0
 14356  0038B2  6E0E               	movwf	atoi@neg^0,c
 14357  0038B4  EF5E  F01C         	goto	l5402
 14358  0038B8                     l5400:
 14359  0038B8  4A08               	infsnz	atoi@s^0,f,c
 14360  0038BA  2A09               	incf	(atoi@s+1)^0,f,c
 14361  0038BC                     l5402:
 14362  0038BC  0E01               	movlw	1
 14363  0038BE  6E14               	movwf	_atoi$3047^0,c
 14364  0038C0  C008  FFF6         	movff	atoi@s,tblptrl
 14365  0038C4  C009  FFF7         	movff	atoi@s+1,tblptrh
 14366  0038C8                     	if	0	;tblptru may be non-zero
 14367  0038C8                     	endif
 14368  0038C8                     	if	0	;tblptru may be non-zero
 14369  0038C8                     	endif
 14370  0038C8  0008               	tblrd		*
 14371  0038CA  50F5               	movf	tablat,w,c
 14372  0038CC  0A20               	xorlw	32
 14373  0038CE  B4D8               	btfsc	status,2,c
 14374  0038D0  EF6C  F01C         	goto	u6271
 14375  0038D4  EF6E  F01C         	goto	u6270
 14376  0038D8                     u6271:
 14377  0038D8  EF8B  F01C         	goto	l5410
 14378  0038DC                     u6270:
 14379  0038DC  0EF7               	movlw	247
 14380  0038DE  6E0A               	movwf	??_atoi^0,c
 14381  0038E0  0EFF               	movlw	255
 14382  0038E2  6E0B               	movwf	(??_atoi+1)^0,c
 14383  0038E4  C008  FFF6         	movff	atoi@s,tblptrl
 14384  0038E8  C009  FFF7         	movff	atoi@s+1,tblptrh
 14385  0038EC                     	if	0	;tblptru may be non-zero
 14386  0038EC                     	endif
 14387  0038EC                     	if	0	;tblptru may be non-zero
 14388  0038EC                     	endif
 14389  0038EC  0008               	tblrd		*
 14390  0038EE  50F5               	movf	tablat,w,c
 14391  0038F0  6E0C               	movwf	(??_atoi+2)^0,c
 14392  0038F2  6A0D               	clrf	(??_atoi+3)^0,c
 14393  0038F4  500A               	movf	??_atoi^0,w,c
 14394  0038F6  260C               	addwf	(??_atoi+2)^0,f,c
 14395  0038F8  500B               	movf	(??_atoi+1)^0,w,c
 14396  0038FA  220D               	addwfc	(??_atoi+3)^0,f,c
 14397  0038FC  500D               	movf	(??_atoi+3)^0,w,c
 14398  0038FE  E109               	bnz	u6280
 14399  003900  0E05               	movlw	5
 14400  003902  5C0C               	subwf	(??_atoi+2)^0,w,c
 14401  003904  A0D8               	btfss	status,0,c
 14402  003906  EF87  F01C         	goto	u6281
 14403  00390A  EF89  F01C         	goto	u6280
 14404  00390E                     u6281:
 14405  00390E  EF8B  F01C         	goto	l5410
 14406  003912                     u6280:
 14407  003912  0E00               	movlw	0
 14408  003914  6E14               	movwf	_atoi$3047^0,c
 14409  003916                     l5410:
 14410  003916  C014  F010         	movff	_atoi$3047,_atoi$3046
 14411  00391A  6A11               	clrf	(_atoi$3046+1)^0,c
 14412  00391C  5010               	movf	_atoi$3046^0,w,c
 14413  00391E  1011               	iorwf	(_atoi$3046+1)^0,w,c
 14414  003920  A4D8               	btfss	status,2,c
 14415  003922  EF95  F01C         	goto	u6291
 14416  003926  EF97  F01C         	goto	u6290
 14417  00392A                     u6291:
 14418  00392A  EF5C  F01C         	goto	l5400
 14419  00392E                     u6290:
 14420  00392E  EFA1  F01C         	goto	l5420
 14421  003932                     l5416:
 14422  003932  0E00               	movlw	0
 14423  003934  6E0F               	movwf	(atoi@neg+1)^0,c
 14424  003936  0E01               	movlw	1
 14425  003938  6E0E               	movwf	atoi@neg^0,c
 14426  00393A                     l5418:
 14427  00393A  4A08               	infsnz	atoi@s^0,f,c
 14428  00393C  2A09               	incf	(atoi@s+1)^0,f,c
 14429  00393E  EFD6  F01C         	goto	l5426
 14430  003942                     l5420:
 14431  003942  C008  FFF6         	movff	atoi@s,tblptrl
 14432  003946  C009  FFF7         	movff	atoi@s+1,tblptrh
 14433  00394A                     	if	0	;tblptru may be non-zero
 14434  00394A                     	endif
 14435  00394A                     	if	0	;tblptru may be non-zero
 14436  00394A                     	endif
 14437  00394A  0008               	tblrd		*
 14438  00394C  50F5               	movf	tablat,w,c
 14439  00394E  6E0A               	movwf	??_atoi^0,c
 14440  003950  6A0B               	clrf	(??_atoi+1)^0,c
 14441                           
 14442                           ; Switch on 2 bytes has been partitioned into a top level switch of size 1, and 1 sub-sw
      +                          itches
 14443                           ; Switch size 1, requested type "simple"
 14444                           ; Number of cases is 1, Range of values is 0 to 0
 14445                           ; switch strategies available:
 14446                           ; Name         Instructions Cycles
 14447                           ; simple_byte            4     3 (average)
 14448                           ;	Chosen strategy is simple_byte
 14449  003952  500B               	movf	(??_atoi+1)^0,w,c
 14450  003954  0A00               	xorlw	0	; case 0
 14451  003956  B4D8               	btfsc	status,2,c
 14452  003958  EFB0  F01C         	goto	l6620
 14453  00395C  EFD6  F01C         	goto	l5426
 14454  003960                     l6620:
 14455                           
 14456                           ; Switch size 1, requested type "simple"
 14457                           ; Number of cases is 2, Range of values is 43 to 45
 14458                           ; switch strategies available:
 14459                           ; Name         Instructions Cycles
 14460                           ; simple_byte            7     4 (average)
 14461                           ;	Chosen strategy is simple_byte
 14462  003960  500A               	movf	??_atoi^0,w,c
 14463  003962  0A2B               	xorlw	43	; case 43
 14464  003964  B4D8               	btfsc	status,2,c
 14465  003966  EF9D  F01C         	goto	l5418
 14466  00396A  0A06               	xorlw	6	; case 45
 14467  00396C  B4D8               	btfsc	status,2,c
 14468  00396E  EF99  F01C         	goto	l5416
 14469  003972  EFD6  F01C         	goto	l5426
 14470  003976                     l5422:
 14471  003976  C015  F001         	movff	atoi@n,___wmul@multiplier
 14472  00397A  C016  F002         	movff	atoi@n+1,___wmul@multiplier+1
 14473  00397E  0E00               	movlw	0
 14474  003980  6E04               	movwf	(___wmul@multiplicand+1)^0,c
 14475  003982  0E0A               	movlw	10
 14476  003984  6E03               	movwf	___wmul@multiplicand^0,c
 14477  003986  EC82  F02B         	call	___wmul	;wreg free
 14478  00398A  C008  FFF6         	movff	atoi@s,tblptrl
 14479  00398E  C009  FFF7         	movff	atoi@s+1,tblptrh
 14480  003992                     	if	0	;tblptru may be non-zero
 14481  003992                     	endif
 14482  003992                     	if	0	;tblptru may be non-zero
 14483  003992                     	endif
 14484  003992  0008               	tblrd		*
 14485  003994  50F5               	movf	tablat,w,c
 14486  003996  5E01               	subwf	?___wmul^0,f,c
 14487  003998  0E00               	movlw	0
 14488  00399A  5A02               	subwfb	(?___wmul+1)^0,f,c
 14489  00399C  0E30               	movlw	48
 14490  00399E  2401               	addwf	?___wmul^0,w,c
 14491  0039A0  6E15               	movwf	atoi@n^0,c
 14492  0039A2  0E00               	movlw	0
 14493  0039A4  2002               	addwfc	(?___wmul+1)^0,w,c
 14494  0039A6  6E16               	movwf	(atoi@n+1)^0,c
 14495  0039A8  EF9D  F01C         	goto	l5418
 14496  0039AC                     l5426:
 14497  0039AC  0ED0               	movlw	208
 14498  0039AE  6E0A               	movwf	??_atoi^0,c
 14499  0039B0  0EFF               	movlw	255
 14500  0039B2  6E0B               	movwf	(??_atoi+1)^0,c
 14501  0039B4  C008  FFF6         	movff	atoi@s,tblptrl
 14502  0039B8  C009  FFF7         	movff	atoi@s+1,tblptrh
 14503  0039BC                     	if	0	;tblptru may be non-zero
 14504  0039BC                     	endif
 14505  0039BC                     	if	0	;tblptru may be non-zero
 14506  0039BC                     	endif
 14507  0039BC  0008               	tblrd		*
 14508  0039BE  50F5               	movf	tablat,w,c
 14509  0039C0  6E0C               	movwf	(??_atoi+2)^0,c
 14510  0039C2  6A0D               	clrf	(??_atoi+3)^0,c
 14511  0039C4  500A               	movf	??_atoi^0,w,c
 14512  0039C6  260C               	addwf	(??_atoi+2)^0,f,c
 14513  0039C8  500B               	movf	(??_atoi+1)^0,w,c
 14514  0039CA  220D               	addwfc	(??_atoi+3)^0,f,c
 14515  0039CC  500D               	movf	(??_atoi+3)^0,w,c
 14516  0039CE  E10A               	bnz	u6300
 14517  0039D0  0E0A               	movlw	10
 14518  0039D2  5C0C               	subwf	(??_atoi+2)^0,w,c
 14519  0039D4  A0D8               	btfss	status,0,c
 14520  0039D6  EFEF  F01C         	goto	u6301
 14521  0039DA  EFF2  F01C         	goto	u6300
 14522  0039DE                     u6301:
 14523  0039DE  0E01               	movlw	1
 14524  0039E0  EFF3  F01C         	goto	u6310
 14525  0039E4                     u6300:
 14526  0039E4  0E00               	movlw	0
 14527  0039E6                     u6310:
 14528  0039E6  6E12               	movwf	_atoi$3048^0,c
 14529  0039E8  6A13               	clrf	(_atoi$3048+1)^0,c
 14530  0039EA  5012               	movf	_atoi$3048^0,w,c
 14531  0039EC  1013               	iorwf	(_atoi$3048+1)^0,w,c
 14532  0039EE  A4D8               	btfss	status,2,c
 14533  0039F0  EFFC  F01C         	goto	u6321
 14534  0039F4  EFFE  F01C         	goto	u6320
 14535  0039F8                     u6321:
 14536  0039F8  EFBB  F01C         	goto	l5422
 14537  0039FC                     u6320:
 14538  0039FC  500E               	movf	atoi@neg^0,w,c
 14539  0039FE  100F               	iorwf	(atoi@neg+1)^0,w,c
 14540  003A00  A4D8               	btfss	status,2,c
 14541  003A02  EF05  F01D         	goto	u6331
 14542  003A06  EF07  F01D         	goto	u6330
 14543  003A0A                     u6331:
 14544  003A0A  EF15  F01D         	goto	l1629
 14545  003A0E                     u6330:
 14546  003A0E  C015  F00A         	movff	atoi@n,??_atoi
 14547  003A12  C016  F00B         	movff	atoi@n+1,??_atoi+1
 14548  003A16  1E0A               	comf	??_atoi^0,f,c
 14549  003A18  1E0B               	comf	(??_atoi+1)^0,f,c
 14550  003A1A  4A0A               	infsnz	??_atoi^0,f,c
 14551  003A1C  2A0B               	incf	(??_atoi+1)^0,f,c
 14552  003A1E  C00A  F008         	movff	??_atoi,?_atoi
 14553  003A22  C00B  F009         	movff	??_atoi+1,?_atoi+1
 14554  003A26  EF19  F01D         	goto	l1632
 14555  003A2A                     l1629:
 14556  003A2A  C015  F008         	movff	atoi@n,?_atoi
 14557  003A2E  C016  F009         	movff	atoi@n+1,?_atoi+1
 14558  003A32                     l1632:
 14559  003A32  0012               	return		;funcret
 14560  003A34                     __end_of_atoi:
 14561                           	callstack 0
 14562                           
 14563 ;; *************** function _isspace *****************
 14564 ;; Defined at:
 14565 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isspace.c"
 14566 ;; Parameters:    Size  Location     Type
 14567 ;;  c               2    0[COMRAM] int 
 14568 ;; Auto vars:     Size  Location     Type
 14569 ;;		None
 14570 ;; Return value:  Size  Location     Type
 14571 ;;                  2    0[COMRAM] int 
 14572 ;; Registers used:
 14573 ;;		wreg, status,2, status,0
 14574 ;; Tracked objects:
 14575 ;;		On entry : 0/0
 14576 ;;		On exit  : 0/0
 14577 ;;		Unchanged: 0/0
 14578 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14579 ;;      Params:         2       0       0       0       0       0       0
 14580 ;;      Locals:         1       0       0       0       0       0       0
 14581 ;;      Temps:          4       0       0       0       0       0       0
 14582 ;;      Totals:         7       0       0       0       0       0       0
 14583 ;;Total ram usage:        7 bytes
 14584 ;; Hardware stack levels used:    1
 14585 ;; Hardware stack levels required when called:    1
 14586 ;; This function calls:
 14587 ;;		Nothing
 14588 ;; This function is called by:
 14589 ;;		_atoi
 14590 ;; This function uses a non-reentrant model
 14591 ;;
 14592                           
 14593                           	psect	text60
 14594  0052A4                     __ptext60:
 14595                           	callstack 0
 14596  0052A4                     _isspace:
 14597                           	callstack 22
 14598  0052A4  0E01               	movlw	1
 14599  0052A6  6E07               	movwf	_isspace$3077^0,c
 14600  0052A8  0E20               	movlw	32
 14601  0052AA  1801               	xorwf	isspace@c^0,w,c
 14602  0052AC  1002               	iorwf	(isspace@c+1)^0,w,c
 14603  0052AE  B4D8               	btfsc	status,2,c
 14604  0052B0  EF5C  F029         	goto	u5581
 14605  0052B4  EF5E  F029         	goto	u5580
 14606  0052B8                     u5581:
 14607  0052B8  EF77  F029         	goto	l5034
 14608  0052BC                     u5580:
 14609  0052BC  0EF7               	movlw	247
 14610  0052BE  6E03               	movwf	??_isspace^0,c
 14611  0052C0  0EFF               	movlw	255
 14612  0052C2  6E04               	movwf	(??_isspace+1)^0,c
 14613  0052C4  C001  F005         	movff	isspace@c,??_isspace+2
 14614  0052C8  C002  F006         	movff	isspace@c+1,??_isspace+3
 14615  0052CC  5003               	movf	??_isspace^0,w,c
 14616  0052CE  2605               	addwf	(??_isspace+2)^0,f,c
 14617  0052D0  5004               	movf	(??_isspace+1)^0,w,c
 14618  0052D2  2206               	addwfc	(??_isspace+3)^0,f,c
 14619  0052D4  5006               	movf	(??_isspace+3)^0,w,c
 14620  0052D6  E109               	bnz	u5590
 14621  0052D8  0E05               	movlw	5
 14622  0052DA  5C05               	subwf	(??_isspace+2)^0,w,c
 14623  0052DC  A0D8               	btfss	status,0,c
 14624  0052DE  EF73  F029         	goto	u5591
 14625  0052E2  EF75  F029         	goto	u5590
 14626  0052E6                     u5591:
 14627  0052E6  EF77  F029         	goto	l5034
 14628  0052EA                     u5590:
 14629  0052EA  0E00               	movlw	0
 14630  0052EC  6E07               	movwf	_isspace$3077^0,c
 14631  0052EE                     l5034:
 14632  0052EE  C007  F001         	movff	_isspace$3077,?_isspace
 14633  0052F2  6A02               	clrf	(?_isspace+1)^0,c
 14634  0052F4  0012               	return		;funcret
 14635  0052F6                     __end_of_isspace:
 14636                           	callstack 0
 14637                           
 14638 ;; *************** function _isdigit *****************
 14639 ;; Defined at:
 14640 ;;		line 5 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\isdigit.c"
 14641 ;; Parameters:    Size  Location     Type
 14642 ;;  c               2    0[COMRAM] int 
 14643 ;; Auto vars:     Size  Location     Type
 14644 ;;		None
 14645 ;; Return value:  Size  Location     Type
 14646 ;;                  2    0[COMRAM] int 
 14647 ;; Registers used:
 14648 ;;		wreg, status,2, status,0
 14649 ;; Tracked objects:
 14650 ;;		On entry : 0/0
 14651 ;;		On exit  : 0/0
 14652 ;;		Unchanged: 0/0
 14653 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14654 ;;      Params:         2       0       0       0       0       0       0
 14655 ;;      Locals:         0       0       0       0       0       0       0
 14656 ;;      Temps:          4       0       0       0       0       0       0
 14657 ;;      Totals:         6       0       0       0       0       0       0
 14658 ;;Total ram usage:        6 bytes
 14659 ;; Hardware stack levels used:    1
 14660 ;; Hardware stack levels required when called:    1
 14661 ;; This function calls:
 14662 ;;		Nothing
 14663 ;; This function is called by:
 14664 ;;		_vfpfcnvrt
 14665 ;;		_atoi
 14666 ;; This function uses a non-reentrant model
 14667 ;;
 14668                           
 14669                           	psect	text61
 14670  005576                     __ptext61:
 14671                           	callstack 0
 14672  005576                     _isdigit:
 14673                           	callstack 23
 14674  005576  0ED0               	movlw	208
 14675  005578  6E03               	movwf	??_isdigit^0,c
 14676  00557A  0EFF               	movlw	255
 14677  00557C  6E04               	movwf	(??_isdigit+1)^0,c
 14678  00557E  C001  F005         	movff	isdigit@c,??_isdigit+2
 14679  005582  C002  F006         	movff	isdigit@c+1,??_isdigit+3
 14680  005586  5003               	movf	??_isdigit^0,w,c
 14681  005588  2605               	addwf	(??_isdigit+2)^0,f,c
 14682  00558A  5004               	movf	(??_isdigit+1)^0,w,c
 14683  00558C  2206               	addwfc	(??_isdigit+3)^0,f,c
 14684  00558E  5006               	movf	(??_isdigit+3)^0,w,c
 14685  005590  E10A               	bnz	u5560
 14686  005592  0E0A               	movlw	10
 14687  005594  5C05               	subwf	(??_isdigit+2)^0,w,c
 14688  005596  A0D8               	btfss	status,0,c
 14689  005598  EFD0  F02A         	goto	u5561
 14690  00559C  EFD3  F02A         	goto	u5560
 14691  0055A0                     u5561:
 14692  0055A0  0E01               	movlw	1
 14693  0055A2  EFD4  F02A         	goto	u5570
 14694  0055A6                     u5560:
 14695  0055A6  0E00               	movlw	0
 14696  0055A8                     u5570:
 14697  0055A8  6E01               	movwf	?_isdigit^0,c
 14698  0055AA  6A02               	clrf	(?_isdigit+1)^0,c
 14699  0055AC  0012               	return		;funcret
 14700  0055AE                     __end_of_isdigit:
 14701                           	callstack 0
 14702                           
 14703 ;; *************** function ___wmul *****************
 14704 ;; Defined at:
 14705 ;;		line 15 in file "C:\Program Files\Microchip\xc8\v2.20\pic\sources\c99\common\Umul16.c"
 14706 ;; Parameters:    Size  Location     Type
 14707 ;;  multiplier      2    0[COMRAM] unsigned int 
 14708 ;;  multiplicand    2    2[COMRAM] unsigned int 
 14709 ;; Auto vars:     Size  Location     Type
 14710 ;;  product         2    4[COMRAM] unsigned int 
 14711 ;; Return value:  Size  Location     Type
 14712 ;;                  2    0[COMRAM] unsigned int 
 14713 ;; Registers used:
 14714 ;;		wreg, status,2, status,0, prodl, prodh
 14715 ;; Tracked objects:
 14716 ;;		On entry : 0/0
 14717 ;;		On exit  : 0/0
 14718 ;;		Unchanged: 0/0
 14719 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14720 ;;      Params:         4       0       0       0       0       0       0
 14721 ;;      Locals:         2       0       0       0       0       0       0
 14722 ;;      Temps:          0       0       0       0       0       0       0
 14723 ;;      Totals:         6       0       0       0       0       0       0
 14724 ;;Total ram usage:        6 bytes
 14725 ;; Hardware stack levels used:    1
 14726 ;; Hardware stack levels required when called:    1
 14727 ;; This function calls:
 14728 ;;		Nothing
 14729 ;; This function is called by:
 14730 ;;		_atoi
 14731 ;; This function uses a non-reentrant model
 14732 ;;
 14733                           
 14734                           	psect	text62
 14735  005704                     __ptext62:
 14736                           	callstack 0
 14737  005704                     ___wmul:
 14738                           	callstack 22
 14739  005704  5001               	movf	___wmul@multiplier^0,w,c
 14740  005706  0203               	mulwf	___wmul@multiplicand^0,c
 14741  005708  CFF3 F005          	movff	prodl,___wmul@product
 14742  00570C  CFF4 F006          	movff	prodh,___wmul@product+1
 14743  005710  5001               	movf	___wmul@multiplier^0,w,c
 14744  005712  0204               	mulwf	(___wmul@multiplicand+1)^0,c
 14745  005714  50F3               	movf	243,w,c
 14746  005716  2606               	addwf	(___wmul@product+1)^0,f,c
 14747  005718  5002               	movf	(___wmul@multiplier+1)^0,w,c
 14748  00571A  0203               	mulwf	___wmul@multiplicand^0,c
 14749  00571C  50F3               	movf	243,w,c
 14750  00571E  2606               	addwf	(___wmul@product+1)^0,f,c
 14751  005720  C005  F001         	movff	___wmul@product,?___wmul
 14752  005724  C006  F002         	movff	___wmul@product+1,?___wmul+1
 14753  005728  0012               	return		;funcret
 14754  00572A                     __end_of___wmul:
 14755                           	callstack 0
 14756                           
 14757 ;; *************** function _eepromWrite *****************
 14758 ;; Defined at:
 14759 ;;		line 69 in file "fs_eeprom.c"
 14760 ;; Parameters:    Size  Location     Type
 14761 ;;  address         1    wreg     unsigned char 
 14762 ;;  data            1    0[COMRAM] unsigned char 
 14763 ;; Auto vars:     Size  Location     Type
 14764 ;;  address         1    1[COMRAM] unsigned char 
 14765 ;; Return value:  Size  Location     Type
 14766 ;;                  1    wreg      void 
 14767 ;; Registers used:
 14768 ;;		wreg, status,2
 14769 ;; Tracked objects:
 14770 ;;		On entry : 0/0
 14771 ;;		On exit  : 0/0
 14772 ;;		Unchanged: 0/0
 14773 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14774 ;;      Params:         1       0       0       0       0       0       0
 14775 ;;      Locals:         1       0       0       0       0       0       0
 14776 ;;      Temps:          0       0       0       0       0       0       0
 14777 ;;      Totals:         2       0       0       0       0       0       0
 14778 ;;Total ram usage:        2 bytes
 14779 ;; Hardware stack levels used:    1
 14780 ;; Hardware stack levels required when called:    1
 14781 ;; This function calls:
 14782 ;;		Nothing
 14783 ;; This function is called by:
 14784 ;;		_speedLimitSettingMenu
 14785 ;;		_stopTimeSettingMenu
 14786 ;;		_driverTimeSettingMenu
 14787 ;; This function uses a non-reentrant model
 14788 ;;
 14789                           
 14790                           	psect	text63
 14791  005686                     __ptext63:
 14792                           	callstack 0
 14793  005686                     _eepromWrite:
 14794                           	callstack 26
 14795                           
 14796                           ;incstack = 0
 14797                           ;eepromWrite@address stored from wreg
 14798  005686  6E02               	movwf	eepromWrite@address^0,c
 14799  005688                     
 14800                           ;fs_eeprom.c: 69: void eepromWrite(uint8_t address, uint8_t data);fs_eeprom.c: 70: {;fs_
      +                          eeprom.c: 73:     EEADR = (uint8_t)address;
 14801  005688  C002  FFA9         	movff	eepromWrite@address,4009	;volatile
 14802  00568C                     
 14803                           ;fs_eeprom.c: 75:     EEDATA = data;
 14804  00568C  C001  FFA8         	movff	eepromWrite@data,4008	;volatile
 14805  005690                     
 14806                           ;fs_eeprom.c: 76:     EECON1bits.EEPGD = 0;
 14807  005690  9EA6               	bcf	166,7,c	;volsfr
 14808  005692                     
 14809                           ;fs_eeprom.c: 77:     EECON1bits.CFGS = 0;
 14810  005692  9CA6               	bcf	166,6,c	;volsfr
 14811  005694                     
 14812                           ;fs_eeprom.c: 78:     EECON1bits.WREN = 1;
 14813  005694  84A6               	bsf	166,2,c	;volsfr
 14814  005696                     
 14815                           ;fs_eeprom.c: 82:     EECON2 = 0x55;
 14816  005696  0E55               	movlw	85
 14817  005698  6EA7               	movwf	167,c	;volsfr
 14818  00569A                     
 14819                           ;fs_eeprom.c: 83:     EECON2 = 0xAA;
 14820  00569A  0EAA               	movlw	170
 14821  00569C  6EA7               	movwf	167,c	;volsfr
 14822  00569E                     
 14823                           ;fs_eeprom.c: 84:     EECON1bits.WR = 1;
 14824  00569E  82A6               	bsf	166,1,c	;volsfr
 14825  0056A0                     l98:
 14826                           
 14827                           ;fs_eeprom.c: 87:     while(PIR2bits.EEIF == 0)
 14828  0056A0  A8A1               	btfss	161,4,c	;volatile
 14829  0056A2  EF55  F02B         	goto	u6871
 14830  0056A6  EF57  F02B         	goto	u6870
 14831  0056AA                     u6871:
 14832  0056AA  EF50  F02B         	goto	l98
 14833  0056AE                     u6870:
 14834  0056AE                     
 14835                           ;fs_eeprom.c: 92:     PIR2bits.EEIF = 0;
 14836  0056AE  98A1               	bcf	161,4,c	;volatile
 14837                           
 14838                           ;fs_eeprom.c: 93:     EECON1bits.WREN = 0;
 14839  0056B0  94A6               	bcf	166,2,c	;volsfr
 14840  0056B2  0012               	return		;funcret
 14841  0056B4                     __end_of_eepromWrite:
 14842                           	callstack 0
 14843                           
 14844 ;; *************** function _Lcd_Write_String *****************
 14845 ;; Defined at:
 14846 ;;		line 176 in file "fs_lcd.c"
 14847 ;; Parameters:    Size  Location     Type
 14848 ;;  a               2    4[COMRAM] PTR unsigned char 
 14849 ;;		 -> STR_17(17), driverTimeSettingMenu@textCursor2(16), STR_15(17), stopTimeSettingMenu@textCursor2(16), 
 14850 ;;		 -> STR_13(17), speedLimitSettingMenu@textCursor2(16), STR_11(17), STR_9(17), 
 14851 ;;		 -> secretMenu@textCursor2(16), STR_7(17), pauseMenu@textCursor2(16), STR_5(17), 
 14852 ;;		 -> stopMenu@textCursor2(16), STR_3(17), mainMenu@textCursor2(16), STR_2(17), 
 14853 ;;		 -> STR_1(16), 
 14854 ;; Auto vars:     Size  Location     Type
 14855 ;;  i               2    8[COMRAM] int 
 14856 ;; Return value:  Size  Location     Type
 14857 ;;                  1    wreg      void 
 14858 ;; Registers used:
 14859 ;;		wreg, fsr1l, fsr1h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
 14860 ;; Tracked objects:
 14861 ;;		On entry : 0/0
 14862 ;;		On exit  : 0/0
 14863 ;;		Unchanged: 0/0
 14864 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14865 ;;      Params:         2       0       0       0       0       0       0
 14866 ;;      Locals:         2       0       0       0       0       0       0
 14867 ;;      Temps:          2       0       0       0       0       0       0
 14868 ;;      Totals:         6       0       0       0       0       0       0
 14869 ;;Total ram usage:        6 bytes
 14870 ;; Hardware stack levels used:    1
 14871 ;; Hardware stack levels required when called:    3
 14872 ;; This function calls:
 14873 ;;		_Lcd_Write_Char
 14874 ;; This function is called by:
 14875 ;;		_openLCD_Script
 14876 ;;		_mainMenu
 14877 ;;		_stopMenu
 14878 ;;		_pauseMenu
 14879 ;;		_secretMenu
 14880 ;;		_speedLimitSettingMenu
 14881 ;;		_stopTimeSettingMenu
 14882 ;;		_driverTimeSettingMenu
 14883 ;; This function uses a non-reentrant model
 14884 ;;
 14885                           
 14886                           	psect	text64
 14887  004DC6                     __ptext64:
 14888                           	callstack 0
 14889  004DC6                     _Lcd_Write_String:
 14890                           	callstack 26
 14891  004DC6                     
 14892                           ;fs_lcd.c: 176: void Lcd_Write_String(char *a);fs_lcd.c: 177: {;fs_lcd.c: 178:    int i;
      +                          ;fs_lcd.c: 179:    for(i=0;a[i]!='\0';i++)
 14893  004DC6  0E00               	movlw	0
 14894  004DC8  6E0A               	movwf	(Lcd_Write_String@i+1)^0,c
 14895  004DCA  0E00               	movlw	0
 14896  004DCC  6E09               	movwf	Lcd_Write_String@i^0,c
 14897  004DCE  EF03  F027         	goto	l5888
 14898  004DD2                     l5884:
 14899                           
 14900                           ;fs_lcd.c: 180:    Lcd_Write_Char(a[i]);
 14901  004DD2  5009               	movf	Lcd_Write_String@i^0,w,c
 14902  004DD4  2405               	addwf	Lcd_Write_String@a^0,w,c
 14903  004DD6  6E07               	movwf	??_Lcd_Write_String^0,c
 14904  004DD8  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14905  004DDA  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14906  004DDC  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14907  004DDE  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14908  004DE2  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14909  004DE6  6AF8               	clrf	tblptru,c
 14910  004DE8  0E05               	movlw	(high __ramtop+-1)
 14911  004DEA  64F7               	cpfsgt	tblptrh,c
 14912  004DEC  D003               	bra	u6907
 14913  004DEE  0008               	tblrd		*
 14914  004DF0  50F5               	movf	tablat,w,c
 14915  004DF2  D005               	bra	u6900
 14916  004DF4                     u6907:
 14917  004DF4  CFF6 FFE1          	movff	tblptrl,fsr1l
 14918  004DF8  CFF7 FFE2          	movff	tblptrh,fsr1h
 14919  004DFC  50E7               	movf	indf1,w,c
 14920  004DFE                     u6900:
 14921  004DFE  ECD7  F02A         	call	_Lcd_Write_Char
 14922  004E02  4A09               	infsnz	Lcd_Write_String@i^0,f,c
 14923  004E04  2A0A               	incf	(Lcd_Write_String@i+1)^0,f,c
 14924  004E06                     l5888:
 14925  004E06  5009               	movf	Lcd_Write_String@i^0,w,c
 14926  004E08  2405               	addwf	Lcd_Write_String@a^0,w,c
 14927  004E0A  6E07               	movwf	??_Lcd_Write_String^0,c
 14928  004E0C  500A               	movf	(Lcd_Write_String@i+1)^0,w,c
 14929  004E0E  2006               	addwfc	(Lcd_Write_String@a+1)^0,w,c
 14930  004E10  6E08               	movwf	(??_Lcd_Write_String+1)^0,c
 14931  004E12  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
 14932  004E16  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
 14933  004E1A  6AF8               	clrf	tblptru,c
 14934  004E1C  0E05               	movlw	(high __ramtop+-1)
 14935  004E1E  64F7               	cpfsgt	tblptrh,c
 14936  004E20  D003               	bra	u6917
 14937  004E22  0008               	tblrd		*
 14938  004E24  50F5               	movf	tablat,w,c
 14939  004E26  D005               	bra	u6910
 14940  004E28                     u6917:
 14941  004E28  CFF6 FFE1          	movff	tblptrl,fsr1l
 14942  004E2C  CFF7 FFE2          	movff	tblptrh,fsr1h
 14943  004E30  50E7               	movf	indf1,w,c
 14944  004E32                     u6910:
 14945  004E32  0900               	iorlw	0
 14946  004E34  A4D8               	btfss	status,2,c
 14947  004E36  EF1F  F027         	goto	u6921
 14948  004E3A  EF21  F027         	goto	u6920
 14949  004E3E                     u6921:
 14950  004E3E  EFE9  F026         	goto	l5884
 14951  004E42                     u6920:
 14952  004E42  0012               	return		;funcret
 14953  004E44                     __end_of_Lcd_Write_String:
 14954                           	callstack 0
 14955                           
 14956 ;; *************** function _Lcd_Write_Char *****************
 14957 ;; Defined at:
 14958 ;;		line 153 in file "fs_lcd.c"
 14959 ;; Parameters:    Size  Location     Type
 14960 ;;  a               1    wreg     unsigned char 
 14961 ;; Auto vars:     Size  Location     Type
 14962 ;;  a               1    3[COMRAM] unsigned char 
 14963 ;;  y               1    2[COMRAM] unsigned char 
 14964 ;;  temp            1    1[COMRAM] unsigned char 
 14965 ;; Return value:  Size  Location     Type
 14966 ;;                  1    wreg      void 
 14967 ;; Registers used:
 14968 ;;		wreg, status,2, status,0, cstack
 14969 ;; Tracked objects:
 14970 ;;		On entry : 0/0
 14971 ;;		On exit  : 0/0
 14972 ;;		Unchanged: 0/0
 14973 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 14974 ;;      Params:         0       0       0       0       0       0       0
 14975 ;;      Locals:         3       0       0       0       0       0       0
 14976 ;;      Temps:          0       0       0       0       0       0       0
 14977 ;;      Totals:         3       0       0       0       0       0       0
 14978 ;;Total ram usage:        3 bytes
 14979 ;; Hardware stack levels used:    1
 14980 ;; Hardware stack levels required when called:    2
 14981 ;; This function calls:
 14982 ;;		_Lcd_Port
 14983 ;; This function is called by:
 14984 ;;		_Lcd_Write_String
 14985 ;; This function uses a non-reentrant model
 14986 ;;
 14987                           
 14988                           	psect	text65
 14989  0055AE                     __ptext65:
 14990                           	callstack 0
 14991  0055AE                     _Lcd_Write_Char:
 14992                           	callstack 26
 14993                           
 14994                           ;incstack = 0
 14995                           ;Lcd_Write_Char@a stored from wreg
 14996  0055AE  6E04               	movwf	Lcd_Write_Char@a^0,c
 14997  0055B0                     
 14998                           ;fs_lcd.c: 153: void Lcd_Write_Char(char a);fs_lcd.c: 154: {;fs_lcd.c: 155:    char temp
      +                          ,y;;fs_lcd.c: 156:    temp = a&0x0F;
 14999  0055B0  5004               	movf	Lcd_Write_Char@a^0,w,c
 15000  0055B2  0B0F               	andlw	15
 15001  0055B4  6E02               	movwf	Lcd_Write_Char@temp^0,c
 15002                           
 15003                           ;fs_lcd.c: 157:    y = a&0xF0;
 15004  0055B6  5004               	movf	Lcd_Write_Char@a^0,w,c
 15005  0055B8  0BF0               	andlw	240
 15006  0055BA  6E03               	movwf	Lcd_Write_Char@y^0,c
 15007  0055BC                     
 15008                           ;fs_lcd.c: 158:    PORTDbits.RD6 = 1;
 15009  0055BC  8C83               	bsf	131,6,c	;volatile
 15010  0055BE                     
 15011                           ;fs_lcd.c: 159:    Lcd_Port(y>>4);
 15012  0055BE  3803               	swapf	Lcd_Write_Char@y^0,w,c
 15013  0055C0  0B0F               	andlw	15
 15014  0055C2  ECD2  F028         	call	_Lcd_Port
 15015  0055C6                     
 15016                           ;fs_lcd.c: 160:    PORTDbits.RD7 = 1;
 15017  0055C6  8E83               	bsf	131,7,c	;volatile
 15018  0055C8                     
 15019                           ;fs_lcd.c: 161:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 15020  0055C8  0ED5               	movlw	213
 15021  0055CA                     u7997:
 15022  0055CA  2EE8               	decfsz	wreg,f,c
 15023  0055CC  D7FE               	bra	u7997
 15024  0055CE  F000               	nop	
 15025  0055D0                     
 15026                           ;fs_lcd.c: 162:    PORTDbits.RD7 = 0;
 15027  0055D0  9E83               	bcf	131,7,c	;volatile
 15028  0055D2                     
 15029                           ;fs_lcd.c: 163:    Lcd_Port(temp);
 15030  0055D2  5002               	movf	Lcd_Write_Char@temp^0,w,c
 15031  0055D4  ECD2  F028         	call	_Lcd_Port
 15032  0055D8                     
 15033                           ;fs_lcd.c: 164:    PORTDbits.RD7 = 1;
 15034  0055D8  8E83               	bsf	131,7,c	;volatile
 15035  0055DA                     
 15036                           ;fs_lcd.c: 165:    _delay((unsigned long)((40)*(64000000UL/4000000.0)));
 15037  0055DA  0ED5               	movlw	213
 15038  0055DC                     u8007:
 15039  0055DC  2EE8               	decfsz	wreg,f,c
 15040  0055DE  D7FE               	bra	u8007
 15041  0055E0  F000               	nop	
 15042  0055E2                     
 15043                           ;fs_lcd.c: 166:    PORTDbits.RD7 = 0;
 15044  0055E2  9E83               	bcf	131,7,c	;volatile
 15045  0055E4  0012               	return		;funcret
 15046  0055E6                     __end_of_Lcd_Write_Char:
 15047                           	callstack 0
 15048                           
 15049 ;; *************** function _Lcd_Set_Cursor *****************
 15050 ;; Defined at:
 15051 ;;		line 83 in file "fs_lcd.c"
 15052 ;; Parameters:    Size  Location     Type
 15053 ;;  a               1    wreg     unsigned char 
 15054 ;;  b               1    3[COMRAM] unsigned char 
 15055 ;; Auto vars:     Size  Location     Type
 15056 ;;  a               1    4[COMRAM] unsigned char 
 15057 ;;  temp            1    7[COMRAM] unsigned char 
 15058 ;;  y               1    6[COMRAM] unsigned char 
 15059 ;;  z               1    5[COMRAM] unsigned char 
 15060 ;; Return value:  Size  Location     Type
 15061 ;;                  1    wreg      void 
 15062 ;; Registers used:
 15063 ;;		wreg, status,2, status,0, cstack
 15064 ;; Tracked objects:
 15065 ;;		On entry : 0/0
 15066 ;;		On exit  : 0/0
 15067 ;;		Unchanged: 0/0
 15068 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15069 ;;      Params:         1       0       0       0       0       0       0
 15070 ;;      Locals:         4       0       0       0       0       0       0
 15071 ;;      Temps:          0       0       0       0       0       0       0
 15072 ;;      Totals:         5       0       0       0       0       0       0
 15073 ;;Total ram usage:        5 bytes
 15074 ;; Hardware stack levels used:    1
 15075 ;; Hardware stack levels required when called:    3
 15076 ;; This function calls:
 15077 ;;		_Lcd_Cmd
 15078 ;; This function is called by:
 15079 ;;		_openLCD_Script
 15080 ;;		_mainMenu
 15081 ;;		_stopMenu
 15082 ;;		_pauseMenu
 15083 ;;		_secretMenu
 15084 ;;		_speedLimitSettingMenu
 15085 ;;		_stopTimeSettingMenu
 15086 ;;		_driverTimeSettingMenu
 15087 ;; This function uses a non-reentrant model
 15088 ;;
 15089                           
 15090                           	psect	text66
 15091  005082                     __ptext66:
 15092                           	callstack 0
 15093  005082                     _Lcd_Set_Cursor:
 15094                           	callstack 26
 15095                           
 15096                           ;incstack = 0
 15097                           ;Lcd_Set_Cursor@a stored from wreg
 15098  005082  6E05               	movwf	Lcd_Set_Cursor@a^0,c
 15099  005084                     
 15100                           ;fs_lcd.c: 83: void Lcd_Set_Cursor(char a, char b);fs_lcd.c: 84: {;fs_lcd.c: 85:    char
      +                           temp,z,y;;fs_lcd.c: 86:    if(a == 1)
 15101  005084  0405               	decf	Lcd_Set_Cursor@a^0,w,c
 15102  005086  A4D8               	btfss	status,2,c
 15103  005088  EF48  F028         	goto	u6881
 15104  00508C  EF4A  F028         	goto	u6880
 15105  005090                     u6881:
 15106  005090  EF5B  F028         	goto	l5874
 15107  005094                     u6880:
 15108  005094                     
 15109                           ;fs_lcd.c: 87:    {;fs_lcd.c: 88:      temp = 0x80 + b - 1;
 15110  005094  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 15111  005096  0F7F               	addlw	127
 15112  005098  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 15113                           
 15114                           ;fs_lcd.c: 89:       z = temp>>4;
 15115  00509A  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 15116  00509C  0B0F               	andlw	15
 15117  00509E  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 15118                           
 15119                           ;fs_lcd.c: 90:       y = temp & 0x0F;
 15120  0050A0  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 15121  0050A2  0B0F               	andlw	15
 15122  0050A4  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 15123  0050A6                     
 15124                           ;fs_lcd.c: 91:       Lcd_Cmd(z);
 15125  0050A6  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 15126  0050A8  ECA4  F02B         	call	_Lcd_Cmd
 15127  0050AC                     
 15128                           ;fs_lcd.c: 92:       Lcd_Cmd(y);
 15129  0050AC  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 15130  0050AE  ECA4  F02B         	call	_Lcd_Cmd
 15131                           
 15132                           ;fs_lcd.c: 93:    }
 15133  0050B2  EF73  F028         	goto	l172
 15134  0050B6                     l5874:
 15135  0050B6  0E02               	movlw	2
 15136  0050B8  1805               	xorwf	Lcd_Set_Cursor@a^0,w,c
 15137  0050BA  A4D8               	btfss	status,2,c
 15138  0050BC  EF62  F028         	goto	u6891
 15139  0050C0  EF64  F028         	goto	u6890
 15140  0050C4                     u6891:
 15141  0050C4  EF73  F028         	goto	l172
 15142  0050C8                     u6890:
 15143  0050C8                     
 15144                           ;fs_lcd.c: 95:    {;fs_lcd.c: 96:       temp = 0xC0 + b - 1;
 15145  0050C8  5004               	movf	Lcd_Set_Cursor@b^0,w,c
 15146  0050CA  0FBF               	addlw	191
 15147  0050CC  6E08               	movwf	Lcd_Set_Cursor@temp^0,c
 15148                           
 15149                           ;fs_lcd.c: 97:       z = temp>>4;
 15150  0050CE  3808               	swapf	Lcd_Set_Cursor@temp^0,w,c
 15151  0050D0  0B0F               	andlw	15
 15152  0050D2  6E06               	movwf	Lcd_Set_Cursor@z^0,c
 15153                           
 15154                           ;fs_lcd.c: 98:       y = temp & 0x0F;
 15155  0050D4  5008               	movf	Lcd_Set_Cursor@temp^0,w,c
 15156  0050D6  0B0F               	andlw	15
 15157  0050D8  6E07               	movwf	Lcd_Set_Cursor@y^0,c
 15158  0050DA                     
 15159                           ;fs_lcd.c: 99:       Lcd_Cmd(z);
 15160  0050DA  5006               	movf	Lcd_Set_Cursor@z^0,w,c
 15161  0050DC  ECA4  F02B         	call	_Lcd_Cmd
 15162  0050E0                     
 15163                           ;fs_lcd.c: 100:       Lcd_Cmd(y);
 15164  0050E0  5007               	movf	Lcd_Set_Cursor@y^0,w,c
 15165  0050E2  ECA4  F02B         	call	_Lcd_Cmd
 15166  0050E6                     l172:
 15167  0050E6  0012               	return		;funcret
 15168  0050E8                     __end_of_Lcd_Set_Cursor:
 15169                           	callstack 0
 15170                           
 15171 ;; *************** function _buttonControlFlags *****************
 15172 ;; Defined at:
 15173 ;;		line 76 in file "fs_menu_controller.c"
 15174 ;; Parameters:    Size  Location     Type
 15175 ;;		None
 15176 ;; Auto vars:     Size  Location     Type
 15177 ;;		None
 15178 ;; Return value:  Size  Location     Type
 15179 ;;                  1    wreg      void 
 15180 ;; Registers used:
 15181 ;;		wreg, status,2, status,0
 15182 ;; Tracked objects:
 15183 ;;		On entry : 0/0
 15184 ;;		On exit  : 0/0
 15185 ;;		Unchanged: 0/0
 15186 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15187 ;;      Params:         0       0       0       0       0       0       0
 15188 ;;      Locals:         0       0       0       0       0       0       0
 15189 ;;      Temps:          0       0       0       0       0       0       0
 15190 ;;      Totals:         0       0       0       0       0       0       0
 15191 ;;Total ram usage:        0 bytes
 15192 ;; Hardware stack levels used:    1
 15193 ;; Hardware stack levels required when called:    1
 15194 ;; This function calls:
 15195 ;;		Nothing
 15196 ;; This function is called by:
 15197 ;;		_menuControl
 15198 ;; This function uses a non-reentrant model
 15199 ;;
 15200                           
 15201                           	psect	text67
 15202  0031CA                     __ptext67:
 15203                           	callstack 0
 15204  0031CA                     _buttonControlFlags:
 15205                           	callstack 28
 15206  0031CA                     
 15207                           ;fs_menu_controller.c: 79:     if ((button_bounce_controller.menu == 0) && (PORTBbits.RB
      +                          7 == 0))
 15208  0031CA  0101               	movlb	1	; () banked
 15209  0031CC  519D               	movf	_button_bounce_controller& (0+255),w,b
 15210  0031CE  A4D8               	btfss	status,2,c
 15211  0031D0  EFEC  F018         	goto	u7561
 15212  0031D4  EFEE  F018         	goto	u7560
 15213  0031D8                     u7561:
 15214  0031D8  EFF9  F018         	goto	l6286
 15215  0031DC                     u7560:
 15216  0031DC                     
 15217                           ; BSR set to: 1
 15218  0031DC  BE81               	btfsc	129,7,c	;volatile
 15219  0031DE  EFF3  F018         	goto	u7571
 15220  0031E2  EFF5  F018         	goto	u7570
 15221  0031E6                     u7571:
 15222  0031E6  EFF9  F018         	goto	l6286
 15223  0031EA                     u7570:
 15224  0031EA                     
 15225                           ; BSR set to: 1
 15226                           ;fs_menu_controller.c: 80:     {;fs_menu_controller.c: 81:         button_bounce_control
      +                          ler.menu = 1;
 15227  0031EA  0E01               	movlw	1
 15228  0031EC  6F9D               	movwf	_button_bounce_controller& (0+255),b
 15229                           
 15230                           ;fs_menu_controller.c: 82:         menu_flags.menu_input_flag = 1;
 15231  0031EE  0E01               	movlw	1
 15232  0031F0  6F97               	movwf	_menu_flags& (0+255),b
 15233  0031F2                     l6286:
 15234                           
 15235                           ; BSR set to: 1
 15236                           ;fs_menu_controller.c: 85:     if ((PORTBbits.RB7 == 1) && (button_bounce_controller.men
      +                          u == 1))
 15237  0031F2  AE81               	btfss	129,7,c	;volatile
 15238  0031F4  EFFE  F018         	goto	u7581
 15239  0031F8  EF00  F019         	goto	u7580
 15240  0031FC                     u7581:
 15241  0031FC  EF0C  F019         	goto	l411
 15242  003200                     u7580:
 15243  003200                     
 15244                           ; BSR set to: 1
 15245  003200  059D               	decf	_button_bounce_controller& (0+255),w,b
 15246  003202  A4D8               	btfss	status,2,c
 15247  003204  EF06  F019         	goto	u7591
 15248  003208  EF08  F019         	goto	u7590
 15249  00320C                     u7591:
 15250  00320C  EF0C  F019         	goto	l411
 15251  003210                     u7590:
 15252  003210                     
 15253                           ; BSR set to: 1
 15254                           ;fs_menu_controller.c: 86:     {;fs_menu_controller.c: 87:         button_bounce_control
      +                          ler.menu = 0;
 15255  003210  0E00               	movlw	0
 15256  003212  6F9D               	movwf	_button_bounce_controller& (0+255),b
 15257                           
 15258                           ;fs_menu_controller.c: 88:         menu_flags.menu_input_flag = 0;
 15259  003214  0E00               	movlw	0
 15260  003216  6F97               	movwf	_menu_flags& (0+255),b
 15261  003218                     l411:
 15262                           
 15263                           ; BSR set to: 1
 15264                           ;fs_menu_controller.c: 92:     if ((button_bounce_controller.pause == 0) && (PORTDbits.R
      +                          D2 == 0))
 15265  003218  51A0               	movf	(_button_bounce_controller+3)& (0+255),w,b
 15266  00321A  A4D8               	btfss	status,2,c
 15267  00321C  EF12  F019         	goto	u7601
 15268  003220  EF14  F019         	goto	u7600
 15269  003224                     u7601:
 15270  003224  EF1F  F019         	goto	l6296
 15271  003228                     u7600:
 15272  003228                     
 15273                           ; BSR set to: 1
 15274  003228  B483               	btfsc	131,2,c	;volatile
 15275  00322A  EF19  F019         	goto	u7611
 15276  00322E  EF1B  F019         	goto	u7610
 15277  003232                     u7611:
 15278  003232  EF1F  F019         	goto	l6296
 15279  003236                     u7610:
 15280  003236                     
 15281                           ; BSR set to: 1
 15282                           ;fs_menu_controller.c: 93:     {;fs_menu_controller.c: 94:         button_bounce_control
      +                          ler.pause = 1;
 15283  003236  0E01               	movlw	1
 15284  003238  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15285                           
 15286                           ;fs_menu_controller.c: 95:         menu_flags.menu_pause_flag = 1;
 15287  00323A  0E01               	movlw	1
 15288  00323C  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 15289  00323E                     l6296:
 15290                           
 15291                           ; BSR set to: 1
 15292                           ;fs_menu_controller.c: 97:     if ((PORTDbits.RD2 == 1) && (button_bounce_controller.pau
      +                          se == 1))
 15293  00323E  A483               	btfss	131,2,c	;volatile
 15294  003240  EF24  F019         	goto	u7621
 15295  003244  EF26  F019         	goto	u7620
 15296  003248                     u7621:
 15297  003248  EF32  F019         	goto	l413
 15298  00324C                     u7620:
 15299  00324C                     
 15300                           ; BSR set to: 1
 15301  00324C  05A0               	decf	(_button_bounce_controller+3)& (0+255),w,b
 15302  00324E  A4D8               	btfss	status,2,c
 15303  003250  EF2C  F019         	goto	u7631
 15304  003254  EF2E  F019         	goto	u7630
 15305  003258                     u7631:
 15306  003258  EF32  F019         	goto	l413
 15307  00325C                     u7630:
 15308  00325C                     
 15309                           ; BSR set to: 1
 15310                           ;fs_menu_controller.c: 98:     {;fs_menu_controller.c: 99:         button_bounce_control
      +                          ler.pause = 0;
 15311  00325C  0E00               	movlw	0
 15312  00325E  6FA0               	movwf	(_button_bounce_controller+3)& (0+255),b
 15313                           
 15314                           ;fs_menu_controller.c: 100:         menu_flags.menu_pause_flag = 0;
 15315  003260  0E00               	movlw	0
 15316  003262  6F9A               	movwf	(_menu_flags+3)& (0+255),b
 15317  003264                     l413:
 15318                           
 15319                           ; BSR set to: 1
 15320                           ;fs_menu_controller.c: 104:     if ((button_bounce_controller.start == 0) && (PORTDbits.
      +                          RD0 == 0))
 15321  003264  519E               	movf	(_button_bounce_controller+1)& (0+255),w,b
 15322  003266  A4D8               	btfss	status,2,c
 15323  003268  EF38  F019         	goto	u7641
 15324  00326C  EF3A  F019         	goto	u7640
 15325  003270                     u7641:
 15326  003270  EF45  F019         	goto	l6306
 15327  003274                     u7640:
 15328  003274                     
 15329                           ; BSR set to: 1
 15330  003274  B083               	btfsc	131,0,c	;volatile
 15331  003276  EF3F  F019         	goto	u7651
 15332  00327A  EF41  F019         	goto	u7650
 15333  00327E                     u7651:
 15334  00327E  EF45  F019         	goto	l6306
 15335  003282                     u7650:
 15336  003282                     
 15337                           ; BSR set to: 1
 15338                           ;fs_menu_controller.c: 105:     {;fs_menu_controller.c: 106:         button_bounce_contr
      +                          oller.start = 1;
 15339  003282  0E01               	movlw	1
 15340  003284  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 15341                           
 15342                           ;fs_menu_controller.c: 107:         menu_flags.menu_start_flag = 1;
 15343  003286  0E01               	movlw	1
 15344  003288  6F98               	movwf	(_menu_flags+1)& (0+255),b
 15345  00328A                     l6306:
 15346                           
 15347                           ; BSR set to: 1
 15348                           ;fs_menu_controller.c: 109:     if ((PORTDbits.RD0 == 1) && (button_bounce_controller.st
      +                          art == 1))
 15349  00328A  A083               	btfss	131,0,c	;volatile
 15350  00328C  EF4A  F019         	goto	u7661
 15351  003290  EF4C  F019         	goto	u7660
 15352  003294                     u7661:
 15353  003294  EF58  F019         	goto	l415
 15354  003298                     u7660:
 15355  003298                     
 15356                           ; BSR set to: 1
 15357  003298  059E               	decf	(_button_bounce_controller+1)& (0+255),w,b
 15358  00329A  A4D8               	btfss	status,2,c
 15359  00329C  EF52  F019         	goto	u7671
 15360  0032A0  EF54  F019         	goto	u7670
 15361  0032A4                     u7671:
 15362  0032A4  EF58  F019         	goto	l415
 15363  0032A8                     u7670:
 15364  0032A8                     
 15365                           ; BSR set to: 1
 15366                           ;fs_menu_controller.c: 110:     {;fs_menu_controller.c: 111:         button_bounce_contr
      +                          oller.start = 0;
 15367  0032A8  0E00               	movlw	0
 15368  0032AA  6F9E               	movwf	(_button_bounce_controller+1)& (0+255),b
 15369                           
 15370                           ;fs_menu_controller.c: 112:         menu_flags.menu_start_flag = 0;
 15371  0032AC  0E00               	movlw	0
 15372  0032AE  6F98               	movwf	(_menu_flags+1)& (0+255),b
 15373  0032B0                     l415:
 15374                           
 15375                           ; BSR set to: 1
 15376                           ;fs_menu_controller.c: 116:     if ((button_bounce_controller.stop == 0) && (PORTDbits.R
      +                          D1 == 0))
 15377  0032B0  519F               	movf	(_button_bounce_controller+2)& (0+255),w,b
 15378  0032B2  A4D8               	btfss	status,2,c
 15379  0032B4  EF5E  F019         	goto	u7681
 15380  0032B8  EF60  F019         	goto	u7680
 15381  0032BC                     u7681:
 15382  0032BC  EF6B  F019         	goto	l6316
 15383  0032C0                     u7680:
 15384  0032C0                     
 15385                           ; BSR set to: 1
 15386  0032C0  B283               	btfsc	131,1,c	;volatile
 15387  0032C2  EF65  F019         	goto	u7691
 15388  0032C6  EF67  F019         	goto	u7690
 15389  0032CA                     u7691:
 15390  0032CA  EF6B  F019         	goto	l6316
 15391  0032CE                     u7690:
 15392  0032CE                     
 15393                           ; BSR set to: 1
 15394                           ;fs_menu_controller.c: 117:     {;fs_menu_controller.c: 118:         button_bounce_contr
      +                          oller.stop = 1;
 15395  0032CE  0E01               	movlw	1
 15396  0032D0  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 15397                           
 15398                           ;fs_menu_controller.c: 119:         menu_flags.menu_stop_flag = 1;
 15399  0032D2  0E01               	movlw	1
 15400  0032D4  6F99               	movwf	(_menu_flags+2)& (0+255),b
 15401  0032D6                     l6316:
 15402                           
 15403                           ; BSR set to: 1
 15404                           ;fs_menu_controller.c: 121:     if ((PORTDbits.RD1 == 1) && (button_bounce_controller.st
      +                          op == 1))
 15405  0032D6  A283               	btfss	131,1,c	;volatile
 15406  0032D8  EF70  F019         	goto	u7701
 15407  0032DC  EF72  F019         	goto	u7700
 15408  0032E0                     u7701:
 15409  0032E0  EF7E  F019         	goto	l417
 15410  0032E4                     u7700:
 15411  0032E4                     
 15412                           ; BSR set to: 1
 15413  0032E4  059F               	decf	(_button_bounce_controller+2)& (0+255),w,b
 15414  0032E6  A4D8               	btfss	status,2,c
 15415  0032E8  EF78  F019         	goto	u7711
 15416  0032EC  EF7A  F019         	goto	u7710
 15417  0032F0                     u7711:
 15418  0032F0  EF7E  F019         	goto	l417
 15419  0032F4                     u7710:
 15420  0032F4                     
 15421                           ; BSR set to: 1
 15422                           ;fs_menu_controller.c: 122:     {;fs_menu_controller.c: 123:         button_bounce_contr
      +                          oller.stop = 0;
 15423  0032F4  0E00               	movlw	0
 15424  0032F6  6F9F               	movwf	(_button_bounce_controller+2)& (0+255),b
 15425                           
 15426                           ;fs_menu_controller.c: 124:         menu_flags.menu_stop_flag = 0;
 15427  0032F8  0E00               	movlw	0
 15428  0032FA  6F99               	movwf	(_menu_flags+2)& (0+255),b
 15429  0032FC                     l417:
 15430                           
 15431                           ; BSR set to: 1
 15432                           ;fs_menu_controller.c: 128:     if ((button_bounce_controller.increase == 0) && (PORTBbi
      +                          ts.RB6 == 0))
 15433  0032FC  51A2               	movf	(_button_bounce_controller+5)& (0+255),w,b
 15434  0032FE  A4D8               	btfss	status,2,c
 15435  003300  EF84  F019         	goto	u7721
 15436  003304  EF86  F019         	goto	u7720
 15437  003308                     u7721:
 15438  003308  EF91  F019         	goto	l6326
 15439  00330C                     u7720:
 15440  00330C                     
 15441                           ; BSR set to: 1
 15442  00330C  BC81               	btfsc	129,6,c	;volatile
 15443  00330E  EF8B  F019         	goto	u7731
 15444  003312  EF8D  F019         	goto	u7730
 15445  003316                     u7731:
 15446  003316  EF91  F019         	goto	l6326
 15447  00331A                     u7730:
 15448  00331A                     
 15449                           ; BSR set to: 1
 15450                           ;fs_menu_controller.c: 129:     {;fs_menu_controller.c: 130:         button_bounce_contr
      +                          oller.increase = 1;
 15451  00331A  0E01               	movlw	1
 15452  00331C  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15453                           
 15454                           ;fs_menu_controller.c: 131:         menu_flags.menu_increase_flag = 1;
 15455  00331E  0E01               	movlw	1
 15456  003320  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 15457  003322                     l6326:
 15458                           
 15459                           ; BSR set to: 1
 15460                           ;fs_menu_controller.c: 133:     if ((PORTBbits.RB6 == 1) && (button_bounce_controller.in
      +                          crease == 1))
 15461  003322  AC81               	btfss	129,6,c	;volatile
 15462  003324  EF96  F019         	goto	u7741
 15463  003328  EF98  F019         	goto	u7740
 15464  00332C                     u7741:
 15465  00332C  EFA4  F019         	goto	l419
 15466  003330                     u7740:
 15467  003330                     
 15468                           ; BSR set to: 1
 15469  003330  05A2               	decf	(_button_bounce_controller+5)& (0+255),w,b
 15470  003332  A4D8               	btfss	status,2,c
 15471  003334  EF9E  F019         	goto	u7751
 15472  003338  EFA0  F019         	goto	u7750
 15473  00333C                     u7751:
 15474  00333C  EFA4  F019         	goto	l419
 15475  003340                     u7750:
 15476  003340                     
 15477                           ; BSR set to: 1
 15478                           ;fs_menu_controller.c: 134:     {;fs_menu_controller.c: 135:         button_bounce_contr
      +                          oller.increase = 0;
 15479  003340  0E00               	movlw	0
 15480  003342  6FA2               	movwf	(_button_bounce_controller+5)& (0+255),b
 15481                           
 15482                           ;fs_menu_controller.c: 136:         menu_flags.menu_increase_flag = 0;
 15483  003344  0E00               	movlw	0
 15484  003346  6F9B               	movwf	(_menu_flags+4)& (0+255),b
 15485  003348                     l419:
 15486                           
 15487                           ; BSR set to: 1
 15488                           ;fs_menu_controller.c: 140:     if ((button_bounce_controller.decrease == 0) && (PORTDbi
      +                          ts.RD4 == 0))
 15489  003348  51A1               	movf	(_button_bounce_controller+4)& (0+255),w,b
 15490  00334A  A4D8               	btfss	status,2,c
 15491  00334C  EFAA  F019         	goto	u7761
 15492  003350  EFAC  F019         	goto	u7760
 15493  003354                     u7761:
 15494  003354  EFB7  F019         	goto	l6336
 15495  003358                     u7760:
 15496  003358                     
 15497                           ; BSR set to: 1
 15498  003358  B883               	btfsc	131,4,c	;volatile
 15499  00335A  EFB1  F019         	goto	u7771
 15500  00335E  EFB3  F019         	goto	u7770
 15501  003362                     u7771:
 15502  003362  EFB7  F019         	goto	l6336
 15503  003366                     u7770:
 15504  003366                     
 15505                           ; BSR set to: 1
 15506                           ;fs_menu_controller.c: 141:     {;fs_menu_controller.c: 142:         button_bounce_contr
      +                          oller.decrease = 1;
 15507  003366  0E01               	movlw	1
 15508  003368  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15509                           
 15510                           ;fs_menu_controller.c: 143:         menu_flags.menu_decrease_flag = 1;
 15511  00336A  0E01               	movlw	1
 15512  00336C  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 15513  00336E                     l6336:
 15514                           
 15515                           ; BSR set to: 1
 15516                           ;fs_menu_controller.c: 145:     if ((PORTDbits.RD4 == 1) && (button_bounce_controller.de
      +                          crease == 1))
 15517  00336E  A883               	btfss	131,4,c	;volatile
 15518  003370  EFBC  F019         	goto	u7781
 15519  003374  EFBE  F019         	goto	u7780
 15520  003378                     u7781:
 15521  003378  EFCA  F019         	goto	l422
 15522  00337C                     u7780:
 15523  00337C                     
 15524                           ; BSR set to: 1
 15525  00337C  05A1               	decf	(_button_bounce_controller+4)& (0+255),w,b
 15526  00337E  A4D8               	btfss	status,2,c
 15527  003380  EFC4  F019         	goto	u7791
 15528  003384  EFC6  F019         	goto	u7790
 15529  003388                     u7791:
 15530  003388  EFCA  F019         	goto	l422
 15531  00338C                     u7790:
 15532  00338C                     
 15533                           ; BSR set to: 1
 15534                           ;fs_menu_controller.c: 146:     {;fs_menu_controller.c: 147:         button_bounce_contr
      +                          oller.decrease = 0;
 15535  00338C  0E00               	movlw	0
 15536  00338E  6FA1               	movwf	(_button_bounce_controller+4)& (0+255),b
 15537                           
 15538                           ;fs_menu_controller.c: 148:         menu_flags.menu_decrease_flag = 0;
 15539  003390  0E00               	movlw	0
 15540  003392  6F9C               	movwf	(_menu_flags+5)& (0+255),b
 15541  003394                     l422:
 15542                           
 15543                           ; BSR set to: 1
 15544  003394  0012               	return		;funcret
 15545  003396                     __end_of_buttonControlFlags:
 15546                           	callstack 0
 15547                           
 15548 ;; *************** function _mcu_init *****************
 15549 ;; Defined at:
 15550 ;;		line 35 in file "fs_mcu.c"
 15551 ;; Parameters:    Size  Location     Type
 15552 ;;		None
 15553 ;; Auto vars:     Size  Location     Type
 15554 ;;		None
 15555 ;; Return value:  Size  Location     Type
 15556 ;;                  1    wreg      void 
 15557 ;; Registers used:
 15558 ;;		wreg, status,2
 15559 ;; Tracked objects:
 15560 ;;		On entry : 0/0
 15561 ;;		On exit  : 0/0
 15562 ;;		Unchanged: 0/0
 15563 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15564 ;;      Params:         0       0       0       0       0       0       0
 15565 ;;      Locals:         0       0       0       0       0       0       0
 15566 ;;      Temps:          0       0       0       0       0       0       0
 15567 ;;      Totals:         0       0       0       0       0       0       0
 15568 ;;Total ram usage:        0 bytes
 15569 ;; Hardware stack levels used:    1
 15570 ;; Hardware stack levels required when called:    1
 15571 ;; This function calls:
 15572 ;;		Nothing
 15573 ;; This function is called by:
 15574 ;;		_main
 15575 ;; This function uses a non-reentrant model
 15576 ;;
 15577                           
 15578                           	psect	text68
 15579  005780                     __ptext68:
 15580                           	callstack 0
 15581  005780                     _mcu_init:
 15582                           	callstack 29
 15583  005780                     
 15584                           ;fs_mcu.c: 37:    OSCCONbits.IRCF = 0b111;
 15585  005780  0E70               	movlw	112
 15586  005782  12D3               	iorwf	211,f,c	;volatile
 15587  005784                     
 15588                           ;fs_mcu.c: 38:    OSCTUNEbits.PLLEN = 0b1;
 15589  005784  8C9B               	bsf	155,6,c	;volatile
 15590  005786                     l311:
 15591  005786  A4D3               	btfss	211,2,c	;volatile
 15592  005788  EFC8  F02B         	goto	u7801
 15593  00578C  EFCA  F02B         	goto	u7800
 15594  005790                     u7801:
 15595  005790  EFC3  F02B         	goto	l311
 15596  005794                     u7800:
 15597  005794  0012               	return		;funcret
 15598  005796                     __end_of_mcu_init:
 15599                           	callstack 0
 15600                           
 15601 ;; *************** function _lcd_init *****************
 15602 ;; Defined at:
 15603 ;;		line 109 in file "fs_lcd.c"
 15604 ;; Parameters:    Size  Location     Type
 15605 ;;		None
 15606 ;; Auto vars:     Size  Location     Type
 15607 ;;		None
 15608 ;; Return value:  Size  Location     Type
 15609 ;;                  1    wreg      void 
 15610 ;; Registers used:
 15611 ;;		wreg, status,2, cstack
 15612 ;; Tracked objects:
 15613 ;;		On entry : 0/0
 15614 ;;		On exit  : 0/0
 15615 ;;		Unchanged: 0/0
 15616 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15617 ;;      Params:         0       0       0       0       0       0       0
 15618 ;;      Locals:         0       0       0       0       0       0       0
 15619 ;;      Temps:          2       0       0       0       0       0       0
 15620 ;;      Totals:         2       0       0       0       0       0       0
 15621 ;;Total ram usage:        2 bytes
 15622 ;; Hardware stack levels used:    1
 15623 ;; Hardware stack levels required when called:    3
 15624 ;; This function calls:
 15625 ;;		_Lcd_Cmd
 15626 ;;		_Lcd_Port
 15627 ;; This function is called by:
 15628 ;;		_main
 15629 ;; This function uses a non-reentrant model
 15630 ;;
 15631                           
 15632                           	psect	text69
 15633  004D30                     __ptext69:
 15634                           	callstack 0
 15635  004D30                     _lcd_init:
 15636                           	callstack 27
 15637  004D30                     
 15638                           ;fs_lcd.c: 111:     TRISDbits.RD6 = 0;
 15639  004D30  9C95               	bcf	149,6,c	;volatile
 15640                           
 15641                           ;fs_lcd.c: 112:     ANSELDbits.ANSD6 = 0;
 15642  004D32  010F               	movlb	15	; () banked
 15643  004D34  9D3B               	bcf	59,6,b	;volatile
 15644                           
 15645                           ;fs_lcd.c: 114:     TRISDbits.RD7 = 0;
 15646  004D36  9E95               	bcf	149,7,c	;volatile
 15647                           
 15648                           ;fs_lcd.c: 115:     ANSELDbits.ANSD7 = 0;
 15649  004D38  9F3B               	bcf	59,7,b	;volatile
 15650                           
 15651                           ;fs_lcd.c: 117:     TRISBbits.RB0 = 0;
 15652  004D3A  9093               	bcf	147,0,c	;volatile
 15653                           
 15654                           ;fs_lcd.c: 118:     ANSELBbits.ANSB0 = 0;
 15655  004D3C  9139               	bcf	57,0,b	;volatile
 15656                           
 15657                           ;fs_lcd.c: 120:     TRISBbits.RB1 = 0;
 15658  004D3E  9293               	bcf	147,1,c	;volatile
 15659                           
 15660                           ;fs_lcd.c: 121:     ANSELBbits.ANSB1 = 0;
 15661  004D40  9339               	bcf	57,1,b	;volatile
 15662                           
 15663                           ;fs_lcd.c: 123:     TRISBbits.RB2 = 0;
 15664  004D42  9493               	bcf	147,2,c	;volatile
 15665                           
 15666                           ;fs_lcd.c: 124:     ANSELBbits.ANSB2 = 0;
 15667  004D44  9539               	bcf	57,2,b	;volatile
 15668                           
 15669                           ;fs_lcd.c: 126:     TRISBbits.RB3 = 0;
 15670  004D46  9693               	bcf	147,3,c	;volatile
 15671                           
 15672                           ;fs_lcd.c: 127:     ANSELBbits.ANSB3 = 0;
 15673  004D48  9739               	bcf	57,3,b	;volatile
 15674  004D4A                     
 15675                           ; BSR set to: 15
 15676                           ;fs_lcd.c: 130:     Lcd_Port(0x00);
 15677  004D4A  0E00               	movlw	0
 15678  004D4C  ECD2  F028         	call	_Lcd_Port
 15679  004D50                     
 15680                           ;fs_lcd.c: 131:      _delay((unsigned long)((20)*(64000000UL/4000.0)));
 15681  004D50  0E02               	movlw	2
 15682  004D52  6E05               	movwf	(??_lcd_init+1)^0,c
 15683  004D54  0EA0               	movlw	160
 15684  004D56  6E04               	movwf	??_lcd_init^0,c
 15685  004D58  0E92               	movlw	146
 15686  004D5A                     u8017:
 15687  004D5A  2EE8               	decfsz	wreg,f,c
 15688  004D5C  D7FE               	bra	u8017
 15689  004D5E  2E04               	decfsz	??_lcd_init^0,f,c
 15690  004D60  D7FC               	bra	u8017
 15691  004D62  2E05               	decfsz	(??_lcd_init+1)^0,f,c
 15692  004D64  D7FA               	bra	u8017
 15693  004D66  D000               	nop2	
 15694  004D68                     
 15695                           ;fs_lcd.c: 132:     Lcd_Cmd(0x03);
 15696  004D68  0E03               	movlw	3
 15697  004D6A  ECA4  F02B         	call	_Lcd_Cmd
 15698  004D6E                     
 15699                           ;fs_lcd.c: 133:      _delay((unsigned long)((5)*(64000000UL/4000.0)));
 15700  004D6E  0E68               	movlw	104
 15701  004D70  6E04               	movwf	??_lcd_init^0,c
 15702  004D72  0EE4               	movlw	228
 15703  004D74                     u8027:
 15704  004D74  2EE8               	decfsz	wreg,f,c
 15705  004D76  D7FE               	bra	u8027
 15706  004D78  2E04               	decfsz	??_lcd_init^0,f,c
 15707  004D7A  D7FC               	bra	u8027
 15708  004D7C  D000               	nop2	
 15709  004D7E                     
 15710                           ;fs_lcd.c: 134:     Lcd_Cmd(0x03);
 15711  004D7E  0E03               	movlw	3
 15712  004D80  ECA4  F02B         	call	_Lcd_Cmd
 15713  004D84                     
 15714                           ;fs_lcd.c: 135:      _delay((unsigned long)((11)*(64000000UL/4000.0)));
 15715  004D84  0EE5               	movlw	229
 15716  004D86  6E04               	movwf	??_lcd_init^0,c
 15717  004D88  0E91               	movlw	145
 15718  004D8A                     u8037:
 15719  004D8A  2EE8               	decfsz	wreg,f,c
 15720  004D8C  D7FE               	bra	u8037
 15721  004D8E  2E04               	decfsz	??_lcd_init^0,f,c
 15722  004D90  D7FC               	bra	u8037
 15723  004D92  F000               	nop	
 15724  004D94                     
 15725                           ;fs_lcd.c: 136:     Lcd_Cmd(0x03);
 15726  004D94  0E03               	movlw	3
 15727  004D96  ECA4  F02B         	call	_Lcd_Cmd
 15728  004D9A                     
 15729                           ;fs_lcd.c: 137:     Lcd_Cmd(0x02);
 15730  004D9A  0E02               	movlw	2
 15731  004D9C  ECA4  F02B         	call	_Lcd_Cmd
 15732  004DA0                     
 15733                           ;fs_lcd.c: 138:     Lcd_Cmd(0x02);
 15734  004DA0  0E02               	movlw	2
 15735  004DA2  ECA4  F02B         	call	_Lcd_Cmd
 15736  004DA6                     
 15737                           ;fs_lcd.c: 139:     Lcd_Cmd(0x08);
 15738  004DA6  0E08               	movlw	8
 15739  004DA8  ECA4  F02B         	call	_Lcd_Cmd
 15740  004DAC                     
 15741                           ;fs_lcd.c: 140:     Lcd_Cmd(0x00);
 15742  004DAC  0E00               	movlw	0
 15743  004DAE  ECA4  F02B         	call	_Lcd_Cmd
 15744  004DB2                     
 15745                           ;fs_lcd.c: 141:     Lcd_Cmd(0x0C);
 15746  004DB2  0E0C               	movlw	12
 15747  004DB4  ECA4  F02B         	call	_Lcd_Cmd
 15748  004DB8                     
 15749                           ;fs_lcd.c: 142:     Lcd_Cmd(0x00);
 15750  004DB8  0E00               	movlw	0
 15751  004DBA  ECA4  F02B         	call	_Lcd_Cmd
 15752  004DBE                     
 15753                           ;fs_lcd.c: 143:     Lcd_Cmd(0x06);
 15754  004DBE  0E06               	movlw	6
 15755  004DC0  ECA4  F02B         	call	_Lcd_Cmd
 15756  004DC4  0012               	return		;funcret
 15757  004DC6                     __end_of_lcd_init:
 15758                           	callstack 0
 15759                           
 15760 ;; *************** function _Lcd_Cmd *****************
 15761 ;; Defined at:
 15762 ;;		line 56 in file "fs_lcd.c"
 15763 ;; Parameters:    Size  Location     Type
 15764 ;;  a               1    wreg     unsigned char 
 15765 ;; Auto vars:     Size  Location     Type
 15766 ;;  a               1    2[COMRAM] unsigned char 
 15767 ;; Return value:  Size  Location     Type
 15768 ;;                  1    wreg      void 
 15769 ;; Registers used:
 15770 ;;		wreg, status,2, cstack
 15771 ;; Tracked objects:
 15772 ;;		On entry : 0/0
 15773 ;;		On exit  : 0/0
 15774 ;;		Unchanged: 0/0
 15775 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15776 ;;      Params:         0       0       0       0       0       0       0
 15777 ;;      Locals:         1       0       0       0       0       0       0
 15778 ;;      Temps:          1       0       0       0       0       0       0
 15779 ;;      Totals:         2       0       0       0       0       0       0
 15780 ;;Total ram usage:        2 bytes
 15781 ;; Hardware stack levels used:    1
 15782 ;; Hardware stack levels required when called:    2
 15783 ;; This function calls:
 15784 ;;		_Lcd_Port
 15785 ;; This function is called by:
 15786 ;;		_Lcd_Clear
 15787 ;;		_Lcd_Set_Cursor
 15788 ;;		_lcd_init
 15789 ;;		_Lcd_Shift_Right
 15790 ;;		_Lcd_Shift_Left
 15791 ;; This function uses a non-reentrant model
 15792 ;;
 15793                           
 15794                           	psect	text70
 15795  005748                     __ptext70:
 15796                           	callstack 0
 15797  005748                     _Lcd_Cmd:
 15798                           	callstack 26
 15799                           
 15800                           ;incstack = 0
 15801                           ;Lcd_Cmd@a stored from wreg
 15802  005748  6E03               	movwf	Lcd_Cmd@a^0,c
 15803  00574A                     
 15804                           ;fs_lcd.c: 56: void Lcd_Cmd(char a);fs_lcd.c: 57: {;fs_lcd.c: 58:    PORTDbits.RD6 = 0;
 15805  00574A  9C83               	bcf	131,6,c	;volatile
 15806  00574C                     
 15807                           ;fs_lcd.c: 59:    Lcd_Port(a);
 15808  00574C  5003               	movf	Lcd_Cmd@a^0,w,c
 15809  00574E  ECD2  F028         	call	_Lcd_Port
 15810  005752                     
 15811                           ;fs_lcd.c: 60:    PORTDbits.RD7 = 1;
 15812  005752  8E83               	bsf	131,7,c	;volatile
 15813  005754                     
 15814                           ;fs_lcd.c: 61:    _delay((unsigned long)((2)*(64000000UL/4000.0)));
 15815  005754  0E2A               	movlw	42
 15816  005756  6E02               	movwf	??_Lcd_Cmd^0,c
 15817  005758  0E8E               	movlw	142
 15818  00575A                     u8047:
 15819  00575A  2EE8               	decfsz	wreg,f,c
 15820  00575C  D7FE               	bra	u8047
 15821  00575E  2E02               	decfsz	??_Lcd_Cmd^0,f,c
 15822  005760  D7FC               	bra	u8047
 15823  005762                     
 15824                           ;fs_lcd.c: 62:    PORTDbits.RD7 = 0;
 15825  005762  9E83               	bcf	131,7,c	;volatile
 15826  005764  0012               	return		;funcret
 15827  005766                     __end_of_Lcd_Cmd:
 15828                           	callstack 0
 15829                           
 15830 ;; *************** function _Lcd_Port *****************
 15831 ;; Defined at:
 15832 ;;		line 33 in file "fs_lcd.c"
 15833 ;; Parameters:    Size  Location     Type
 15834 ;;  a               1    wreg     unsigned char 
 15835 ;; Auto vars:     Size  Location     Type
 15836 ;;  a               1    0[COMRAM] unsigned char 
 15837 ;; Return value:  Size  Location     Type
 15838 ;;                  1    wreg      void 
 15839 ;; Registers used:
 15840 ;;		wreg
 15841 ;; Tracked objects:
 15842 ;;		On entry : 0/0
 15843 ;;		On exit  : 0/0
 15844 ;;		Unchanged: 0/0
 15845 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15846 ;;      Params:         0       0       0       0       0       0       0
 15847 ;;      Locals:         1       0       0       0       0       0       0
 15848 ;;      Temps:          0       0       0       0       0       0       0
 15849 ;;      Totals:         1       0       0       0       0       0       0
 15850 ;;Total ram usage:        1 bytes
 15851 ;; Hardware stack levels used:    1
 15852 ;; Hardware stack levels required when called:    1
 15853 ;; This function calls:
 15854 ;;		Nothing
 15855 ;; This function is called by:
 15856 ;;		_Lcd_Cmd
 15857 ;;		_lcd_init
 15858 ;;		_Lcd_Write_Char
 15859 ;; This function uses a non-reentrant model
 15860 ;;
 15861                           
 15862                           	psect	text71
 15863  0051A4                     __ptext71:
 15864                           	callstack 0
 15865  0051A4                     _Lcd_Port:
 15866                           	callstack 26
 15867                           
 15868                           ;incstack = 0
 15869                           ;Lcd_Port@a stored from wreg
 15870  0051A4  6E01               	movwf	Lcd_Port@a^0,c
 15871  0051A6                     
 15872                           ;fs_lcd.c: 33: void Lcd_Port(char a);fs_lcd.c: 34: {;fs_lcd.c: 35:    if(a & 1) { PORTBb
      +                          its.RB0 = 1;}
 15873  0051A6  A001               	btfss	Lcd_Port@a^0,0,c
 15874  0051A8  EFD8  F028         	goto	u6401
 15875  0051AC  EFDA  F028         	goto	u6400
 15876  0051B0                     u6401:
 15877  0051B0  EFDD  F028         	goto	l152
 15878  0051B4                     u6400:
 15879  0051B4  8081               	bsf	129,0,c	;volatile
 15880  0051B6  EFDE  F028         	goto	l5478
 15881  0051BA                     l152:
 15882  0051BA  9081               	bcf	129,0,c	;volatile
 15883  0051BC                     l5478:
 15884                           
 15885                           ;fs_lcd.c: 38:    if(a & 2) { PORTBbits.RB1 = 1;}
 15886  0051BC  A201               	btfss	Lcd_Port@a^0,1,c
 15887  0051BE  EFE3  F028         	goto	u6411
 15888  0051C2  EFE5  F028         	goto	u6410
 15889  0051C6                     u6411:
 15890  0051C6  EFE8  F028         	goto	l154
 15891  0051CA                     u6410:
 15892  0051CA  8281               	bsf	129,1,c	;volatile
 15893  0051CC  EFE9  F028         	goto	l5482
 15894  0051D0                     l154:
 15895  0051D0  9281               	bcf	129,1,c	;volatile
 15896  0051D2                     l5482:
 15897                           
 15898                           ;fs_lcd.c: 41:    if(a & 4) {PORTBbits.RB2 = 1;}
 15899  0051D2  A401               	btfss	Lcd_Port@a^0,2,c
 15900  0051D4  EFEE  F028         	goto	u6421
 15901  0051D8  EFF0  F028         	goto	u6420
 15902  0051DC                     u6421:
 15903  0051DC  EFF3  F028         	goto	l156
 15904  0051E0                     u6420:
 15905  0051E0  8481               	bsf	129,2,c	;volatile
 15906  0051E2  EFF4  F028         	goto	l5486
 15907  0051E6                     l156:
 15908  0051E6  9481               	bcf	129,2,c	;volatile
 15909  0051E8                     l5486:
 15910                           
 15911                           ;fs_lcd.c: 44:    if(a & 8) {PORTBbits.RB3 = 1;}
 15912  0051E8  A601               	btfss	Lcd_Port@a^0,3,c
 15913  0051EA  EFF9  F028         	goto	u6431
 15914  0051EE  EFFB  F028         	goto	u6430
 15915  0051F2                     u6431:
 15916  0051F2  EFFE  F028         	goto	l158
 15917  0051F6                     u6430:
 15918  0051F6  8681               	bsf	129,3,c	;volatile
 15919  0051F8  EFFF  F028         	goto	l160
 15920  0051FC                     l158:
 15921  0051FC  9681               	bcf	129,3,c	;volatile
 15922  0051FE                     l160:
 15923  0051FE  0012               	return		;funcret
 15924  005200                     __end_of_Lcd_Port:
 15925                           	callstack 0
 15926                           
 15927 ;; *************** function _adcInit *****************
 15928 ;; Defined at:
 15929 ;;		line 53 in file "fs_adc.c"
 15930 ;; Parameters:    Size  Location     Type
 15931 ;;		None
 15932 ;; Auto vars:     Size  Location     Type
 15933 ;;		None
 15934 ;; Return value:  Size  Location     Type
 15935 ;;                  1    wreg      void 
 15936 ;; Registers used:
 15937 ;;		wreg, status,2
 15938 ;; Tracked objects:
 15939 ;;		On entry : 0/0
 15940 ;;		On exit  : 0/0
 15941 ;;		Unchanged: 0/0
 15942 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 15943 ;;      Params:         0       0       0       0       0       0       0
 15944 ;;      Locals:         0       0       0       0       0       0       0
 15945 ;;      Temps:          0       0       0       0       0       0       0
 15946 ;;      Totals:         0       0       0       0       0       0       0
 15947 ;;Total ram usage:        0 bytes
 15948 ;; Hardware stack levels used:    1
 15949 ;; Hardware stack levels required when called:    1
 15950 ;; This function calls:
 15951 ;;		Nothing
 15952 ;; This function is called by:
 15953 ;;		_main
 15954 ;; This function uses a non-reentrant model
 15955 ;;
 15956                           
 15957                           	psect	text72
 15958  00548C                     __ptext72:
 15959                           	callstack 0
 15960  00548C                     _adcInit:
 15961                           	callstack 29
 15962  00548C                     
 15963                           ;fs_adc.c: 55:     TRISAbits.TRISA0 = 1;
 15964  00548C  8092               	bsf	146,0,c	;volatile
 15965                           
 15966                           ;fs_adc.c: 56:     ANSELAbits.ANSA0 = 1;
 15967  00548E  010F               	movlb	15	; () banked
 15968  005490  8138               	bsf	56,0,b	;volatile
 15969                           
 15970                           ;fs_adc.c: 58:     TRISAbits.TRISA1 = 1;
 15971  005492  8292               	bsf	146,1,c	;volatile
 15972                           
 15973                           ;fs_adc.c: 59:     ANSELAbits.ANSA1 = 1;
 15974  005494  8338               	bsf	56,1,b	;volatile
 15975                           
 15976                           ;fs_adc.c: 61:     TRISAbits.TRISA2 = 1;
 15977  005496  8492               	bsf	146,2,c	;volatile
 15978                           
 15979                           ;fs_adc.c: 62:     ANSELAbits.ANSA2 = 1;
 15980  005498  8538               	bsf	56,2,b	;volatile
 15981                           
 15982                           ;fs_adc.c: 64:     TRISAbits.TRISA3 = 1;
 15983  00549A  8692               	bsf	146,3,c	;volatile
 15984                           
 15985                           ;fs_adc.c: 65:     ANSELAbits.ANSA3 = 1;
 15986  00549C  8738               	bsf	56,3,b	;volatile
 15987                           
 15988                           ;fs_adc.c: 67:     TRISAbits.TRISA5 = 1;
 15989  00549E  8A92               	bsf	146,5,c	;volatile
 15990                           
 15991                           ;fs_adc.c: 68:     ANSELAbits.ANSA5 = 1;
 15992  0054A0  8B38               	bsf	56,5,b	;volatile
 15993                           
 15994                           ;fs_adc.c: 70:     TRISEbits.TRISE0 = 1;
 15995  0054A2  8096               	bsf	150,0,c	;volatile
 15996                           
 15997                           ;fs_adc.c: 71:     ANSELEbits.ANSE0 = 1;
 15998  0054A4  813C               	bsf	60,0,b	;volatile
 15999                           
 16000                           ;fs_adc.c: 73:     TRISEbits.TRISE1 = 1;
 16001  0054A6  8296               	bsf	150,1,c	;volatile
 16002                           
 16003                           ;fs_adc.c: 74:     ANSELEbits.ANSE1 = 1;
 16004  0054A8  833C               	bsf	60,1,b	;volatile
 16005                           
 16006                           ;fs_adc.c: 76:     TRISEbits.TRISE2 = 1;
 16007  0054AA  8496               	bsf	150,2,c	;volatile
 16008                           
 16009                           ;fs_adc.c: 77:     ANSELEbits.ANSE2 = 1;
 16010  0054AC  853C               	bsf	60,2,b	;volatile
 16011  0054AE                     
 16012                           ; BSR set to: 15
 16013                           ;fs_adc.c: 79:     ADCON0 = 0x01;
 16014  0054AE  0E01               	movlw	1
 16015  0054B0  6EC2               	movwf	194,c	;volatile
 16016                           
 16017                           ;fs_adc.c: 80:     ADCON1=0x00;
 16018  0054B2  0E00               	movlw	0
 16019  0054B4  6EC1               	movwf	193,c	;volatile
 16020  0054B6                     
 16021                           ; BSR set to: 15
 16022                           ;fs_adc.c: 81:  ADCON2bits.ADFM = 1;
 16023  0054B6  8EC0               	bsf	192,7,c	;volatile
 16024                           
 16025                           ;fs_adc.c: 82:     ADCON2bits.ACQT = 0b010;
 16026  0054B8  50C0               	movf	192,w,c	;volatile
 16027  0054BA  0BC7               	andlw	-57
 16028  0054BC  0910               	iorlw	16
 16029  0054BE  6EC0               	movwf	192,c	;volatile
 16030                           
 16031                           ;fs_adc.c: 83:     ADCON2bits.ADCS = 0b110;
 16032  0054C0  50C0               	movf	192,w,c	;volatile
 16033  0054C2  0BF8               	andlw	-8
 16034  0054C4  0906               	iorlw	6
 16035  0054C6  6EC0               	movwf	192,c	;volatile
 16036  0054C8                     
 16037                           ; BSR set to: 15
 16038  0054C8  0012               	return		;funcret
 16039  0054CA                     __end_of_adcInit:
 16040                           	callstack 0
 16041                           
 16042 ;; *************** function _PWM_Init *****************
 16043 ;; Defined at:
 16044 ;;		line 34 in file "fs_pwm.c"
 16045 ;; Parameters:    Size  Location     Type
 16046 ;;		None
 16047 ;; Auto vars:     Size  Location     Type
 16048 ;;		None
 16049 ;; Return value:  Size  Location     Type
 16050 ;;                  1    wreg      void 
 16051 ;; Registers used:
 16052 ;;		wreg, status,2
 16053 ;; Tracked objects:
 16054 ;;		On entry : 0/0
 16055 ;;		On exit  : 0/0
 16056 ;;		Unchanged: 0/0
 16057 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16058 ;;      Params:         0       0       0       0       0       0       0
 16059 ;;      Locals:         0       0       0       0       0       0       0
 16060 ;;      Temps:          0       0       0       0       0       0       0
 16061 ;;      Totals:         0       0       0       0       0       0       0
 16062 ;;Total ram usage:        0 bytes
 16063 ;; Hardware stack levels used:    1
 16064 ;; Hardware stack levels required when called:    1
 16065 ;; This function calls:
 16066 ;;		Nothing
 16067 ;; This function is called by:
 16068 ;;		_main
 16069 ;; This function uses a non-reentrant model
 16070 ;;
 16071                           
 16072                           	psect	text73
 16073  0056DC                     __ptext73:
 16074                           	callstack 0
 16075  0056DC                     _PWM_Init:
 16076                           	callstack 29
 16077  0056DC                     
 16078                           ;fs_pwm.c: 36:     TRISCbits.RC2 = 0;
 16079  0056DC  9494               	bcf	148,2,c	;volatile
 16080                           
 16081                           ;fs_pwm.c: 37:     TRISCbits.RC1 = 0;
 16082  0056DE  9294               	bcf	148,1,c	;volatile
 16083  0056E0                     
 16084                           ;fs_pwm.c: 40:     CCP1CON = 0b00001100;
 16085  0056E0  0E0C               	movlw	12
 16086  0056E2  6EBD               	movwf	189,c	;volatile
 16087                           
 16088                           ;fs_pwm.c: 42:     CCP2CON = 0b00001100;
 16089  0056E4  0E0C               	movlw	12
 16090  0056E6  6E66               	movwf	102,c	;volatile
 16091                           
 16092                           ;fs_pwm.c: 46:     T2CONbits.T2CKPS = 0b01;
 16093  0056E8  50BA               	movf	186,w,c	;volatile
 16094  0056EA  0BFC               	andlw	-4
 16095  0056EC  0901               	iorlw	1
 16096  0056EE  6EBA               	movwf	186,c	;volatile
 16097  0056F0                     
 16098                           ;fs_pwm.c: 47:     T2CONbits.TMR2ON = 1;
 16099  0056F0  84BA               	bsf	186,2,c	;volatile
 16100                           
 16101                           ;fs_pwm.c: 49:     TMR2 = 0;
 16102  0056F2  0E00               	movlw	0
 16103  0056F4  6EBC               	movwf	188,c	;volatile
 16104                           
 16105                           ;fs_pwm.c: 50:     PR2 = 199;
 16106  0056F6  0EC7               	movlw	199
 16107  0056F8  6EBB               	movwf	187,c	;volatile
 16108                           
 16109                           ;fs_pwm.c: 51:     CCPR1L = 0;
 16110  0056FA  0E00               	movlw	0
 16111  0056FC  6EBE               	movwf	190,c	;volatile
 16112                           
 16113                           ;fs_pwm.c: 52:     CCPR2L = 0;
 16114  0056FE  0E00               	movlw	0
 16115  005700  6E67               	movwf	103,c	;volatile
 16116  005702  0012               	return		;funcret
 16117  005704                     __end_of_PWM_Init:
 16118                           	callstack 0
 16119                           
 16120 ;; *************** function _TIMER0 *****************
 16121 ;; Defined at:
 16122 ;;		line 33 in file "fs_timer.c"
 16123 ;; Parameters:    Size  Location     Type
 16124 ;;		None
 16125 ;; Auto vars:     Size  Location     Type
 16126 ;;		None
 16127 ;; Return value:  Size  Location     Type
 16128 ;;                  1    wreg      void 
 16129 ;; Registers used:
 16130 ;;		wreg, status,2, status,0
 16131 ;; Tracked objects:
 16132 ;;		On entry : 0/0
 16133 ;;		On exit  : 0/0
 16134 ;;		Unchanged: 0/0
 16135 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5
 16136 ;;      Params:         0       0       0       0       0       0       0
 16137 ;;      Locals:         0       0       0       0       0       0       0
 16138 ;;      Temps:          0       0       0       0       0       0       0
 16139 ;;      Totals:         0       0       0       0       0       0       0
 16140 ;;Total ram usage:        0 bytes
 16141 ;; Hardware stack levels used:    1
 16142 ;; This function calls:
 16143 ;;		Nothing
 16144 ;; This function is called by:
 16145 ;;		Interrupt level 2
 16146 ;; This function uses a non-reentrant model
 16147 ;;
 16148                           
 16149                           	psect	intcode
 16150  000008                     __pintcode:
 16151                           	callstack 0
 16152  000008                     _TIMER0:
 16153                           	callstack 19
 16154                           
 16155                           ;incstack = 0
 16156  000008  825F               	bsf	int$flags,1,c	;set compiler interrupt flag (level 2)
 16157  00000A                     
 16158                           ;fs_timer.c: 35:     if ((INTCONbits.TMR0IF)&&(INTCONbits.TMR0IE))
 16159  00000A  A4F2               	btfss	242,2,c	;volatile
 16160  00000C  EF0A  F000         	goto	i2u791_41
 16161  000010  EF0C  F000         	goto	i2u791_40
 16162  000014                     i2u791_41:
 16163  000014  EF4B  F000         	goto	i2l685
 16164  000018                     i2u791_40:
 16165  000018  AAF2               	btfss	242,5,c	;volatile
 16166  00001A  EF11  F000         	goto	i2u792_41
 16167  00001E  EF13  F000         	goto	i2u792_40
 16168  000022                     i2u792_41:
 16169  000022  EF4B  F000         	goto	i2l685
 16170  000026                     i2u792_40:
 16171  000026                     
 16172                           ;fs_timer.c: 36:     {;fs_timer.c: 37:         INTCONbits.TMR0IF = 0;
 16173  000026  94F2               	bcf	242,2,c	;volatile
 16174  000028                     
 16175                           ;fs_timer.c: 38:         TMR0H = 0x63;
 16176  000028  0E63               	movlw	99
 16177  00002A  6ED7               	movwf	215,c	;volatile
 16178                           
 16179                           ;fs_timer.c: 39:         TMR0L = 0xC0;
 16180  00002C  0EC0               	movlw	192
 16181  00002E  6ED6               	movwf	214,c	;volatile
 16182  000030                     
 16183                           ;fs_timer.c: 41:         timer_value.adc_conversion_time++;
 16184  000030  0101               	movlb	1	; () banked
 16185  000032  2B94               	incf	(_timer_value+5)& (0+255),f,b
 16186  000034                     
 16187                           ; BSR set to: 1
 16188                           ;fs_timer.c: 43:         if (startIsClick == 1)
 16189  000034  0100               	movlb	0	; () banked
 16190  000036  05FE               	decf	_startIsClick& (0+255),w,b
 16191  000038  A4D8               	btfss	status,2,c
 16192  00003A  EF21  F000         	goto	i2u793_41
 16193  00003E  EF23  F000         	goto	i2u793_40
 16194  000042                     i2u793_41:
 16195  000042  EF26  F000         	goto	i2l6532
 16196  000046                     i2u793_40:
 16197  000046                     
 16198                           ; BSR set to: 0
 16199                           ;fs_timer.c: 44:         {;fs_timer.c: 45:             timer_value.second_counter++;
 16200  000046  0101               	movlb	1	; () banked
 16201  000048  4B95               	infsnz	(_timer_value+6)& (0+255),f,b
 16202  00004A  2B96               	incf	(_timer_value+7)& (0+255),f,b
 16203  00004C                     i2l6532:
 16204                           
 16205                           ;fs_timer.c: 48:         if(button_bounce_controller.menu == 1)
 16206  00004C  0101               	movlb	1	; () banked
 16207  00004E  059D               	decf	_button_bounce_controller& (0+255),w,b
 16208  000050  A4D8               	btfss	status,2,c
 16209  000052  EF2D  F000         	goto	i2u794_41
 16210  000056  EF2F  F000         	goto	i2u794_40
 16211  00005A                     i2u794_41:
 16212  00005A  EF30  F000         	goto	i2l6536
 16213  00005E                     i2u794_40:
 16214  00005E                     
 16215                           ; BSR set to: 1
 16216                           ;fs_timer.c: 49:         {;fs_timer.c: 50:              timer_value.menu_login_delay++;
 16217  00005E  2B93               	incf	(_timer_value+4)& (0+255),f,b
 16218  000060                     i2l6536:
 16219                           
 16220                           ; BSR set to: 1
 16221                           ;fs_timer.c: 52:         if(button_bounce_controller.menu == 0)
 16222  000060  519D               	movf	_button_bounce_controller& (0+255),w,b
 16223  000062  A4D8               	btfss	status,2,c
 16224  000064  EF36  F000         	goto	i2u795_41
 16225  000068  EF38  F000         	goto	i2u795_40
 16226  00006C                     i2u795_41:
 16227  00006C  EF3A  F000         	goto	i2l6540
 16228  000070                     i2u795_40:
 16229  000070                     
 16230                           ; BSR set to: 1
 16231                           ;fs_timer.c: 53:         {;fs_timer.c: 54:              timer_value.menu_login_delay = 0
      +                          ;
 16232  000070  0E00               	movlw	0
 16233  000072  6F93               	movwf	(_timer_value+4)& (0+255),b
 16234  000074                     i2l6540:
 16235                           
 16236                           ; BSR set to: 1
 16237                           ;fs_timer.c: 57:         if (timer_value.second_counter >= 100)
 16238  000074  5196               	movf	(_timer_value+7)& (0+255),w,b
 16239  000076  E109               	bnz	i2u796_40
 16240  000078  0E64               	movlw	100
 16241  00007A  5D95               	subwf	(_timer_value+6)& (0+255),w,b
 16242  00007C  A0D8               	btfss	status,0,c
 16243  00007E  EF43  F000         	goto	i2u796_41
 16244  000082  EF45  F000         	goto	i2u796_40
 16245  000086                     i2u796_41:
 16246  000086  EF4B  F000         	goto	i2l685
 16247  00008A                     i2u796_40:
 16248  00008A                     
 16249                           ; BSR set to: 1
 16250                           ;fs_timer.c: 58:         {;fs_timer.c: 59:             timer_value.second_counter = 0;
 16251  00008A  0E00               	movlw	0
 16252  00008C  6F96               	movwf	(_timer_value+7)& (0+255),b
 16253  00008E  0E00               	movlw	0
 16254  000090  6F95               	movwf	(_timer_value+6)& (0+255),b
 16255  000092                     
 16256                           ; BSR set to: 1
 16257                           ;fs_timer.c: 60:             timer_counter_flag.one_second_flag = 1;
 16258  000092  0100               	movlb	0	; () banked
 16259  000094  81FA               	bsf	_timer_counter_flag& (0+255),0,b
 16260  000096                     i2l685:
 16261  000096  925F               	bcf	int$flags,1,c	;clear compiler interrupt flag (level 2)
 16262  000098  0011               	retfie		f
 16263  00009A                     __end_of_TIMER0:
 16264                           	callstack 0
 16265                           
 16266                           	psect	rparam
 16267  0000                     
 16268                           	psect	temp
 16269  00005F                     btemp:
 16270                           	callstack 0
 16271  00005F                     	ds	1
 16272  0000                     int$flags	set	btemp
 16273  0000                     wtemp8	set	btemp+1
 16274  0000                     ttemp5	set	btemp+1
 16275  0000                     ttemp6	set	btemp+4
 16276  0000                     ttemp7	set	btemp+8
 16277                           
 16278                           	psect	idloc
 16279                           
 16280                           ;Config register IDLOC0 @ 0x200000
 16281                           ;	unspecified, using default values
 16282  200000                     	org	2097152
 16283  200000  FF                 	db	255
 16284                           
 16285                           ;Config register IDLOC1 @ 0x200001
 16286                           ;	unspecified, using default values
 16287  200001                     	org	2097153
 16288  200001  FF                 	db	255
 16289                           
 16290                           ;Config register IDLOC2 @ 0x200002
 16291                           ;	unspecified, using default values
 16292  200002                     	org	2097154
 16293  200002  FF                 	db	255
 16294                           
 16295                           ;Config register IDLOC3 @ 0x200003
 16296                           ;	unspecified, using default values
 16297  200003                     	org	2097155
 16298  200003  FF                 	db	255
 16299                           
 16300                           ;Config register IDLOC4 @ 0x200004
 16301                           ;	unspecified, using default values
 16302  200004                     	org	2097156
 16303  200004  FF                 	db	255
 16304                           
 16305                           ;Config register IDLOC5 @ 0x200005
 16306                           ;	unspecified, using default values
 16307  200005                     	org	2097157
 16308  200005  FF                 	db	255
 16309                           
 16310                           ;Config register IDLOC6 @ 0x200006
 16311                           ;	unspecified, using default values
 16312  200006                     	org	2097158
 16313  200006  FF                 	db	255
 16314                           
 16315                           ;Config register IDLOC7 @ 0x200007
 16316                           ;	unspecified, using default values
 16317  200007                     	org	2097159
 16318  200007  FF                 	db	255
 16319                           
 16320                           	psect	config
 16321                           
 16322                           ; Padding undefined space
 16323  300000                     	org	3145728
 16324  300000  FF                 	db	255
 16325                           
 16326                           ;Config register CONFIG1H @ 0x300001
 16327                           ;	Oscillator Selection bits
 16328                           ;	FOSC = INTIO67, Internal oscillator block
 16329                           ;	4X PLL Enable
 16330                           ;	PLLCFG = ON, Oscillator multiplied by 4
 16331                           ;	Primary clock enable bit
 16332                           ;	PRICLKEN = ON, Primary clock is always enabled
 16333                           ;	Fail-Safe Clock Monitor Enable bit
 16334                           ;	FCMEN = OFF, Fail-Safe Clock Monitor disabled
 16335                           ;	Internal/External Oscillator Switchover bit
 16336                           ;	IESO = ON, Oscillator Switchover mode enabled
 16337  300001                     	org	3145729
 16338  300001  B8                 	db	184
 16339                           
 16340                           ;Config register CONFIG2L @ 0x300002
 16341                           ;	Power-up Timer Enable bit
 16342                           ;	PWRTEN = OFF, Power up timer disabled
 16343                           ;	Brown-out Reset Enable bits
 16344                           ;	BOREN = SBORDIS, Brown-out Reset enabled in hardware only (SBOREN is disabled)
 16345                           ;	Brown Out Reset Voltage bits
 16346                           ;	BORV = 190, VBOR set to 1.90 V nominal
 16347  300002                     	org	3145730
 16348  300002  1F                 	db	31
 16349                           
 16350                           ;Config register CONFIG2H @ 0x300003
 16351                           ;	Watchdog Timer Enable bits
 16352                           ;	WDTEN = OFF, Watch dog timer is always disabled. SWDTEN has no effect.
 16353                           ;	Watchdog Timer Postscale Select bits
 16354                           ;	WDTPS = 32768, 1:32768
 16355  300003                     	org	3145731
 16356  300003  3C                 	db	60
 16357                           
 16358                           ; Padding undefined space
 16359  300004                     	org	3145732
 16360  300004  FF                 	db	255
 16361                           
 16362                           ;Config register CONFIG3H @ 0x300005
 16363                           ;	CCP2 MUX bit
 16364                           ;	CCP2MX = PORTC1, CCP2 input/output is multiplexed with RC1
 16365                           ;	PORTB A/D Enable bit
 16366                           ;	PBADEN = OFF, PORTB<5:0> pins are configured as digital I/O on Reset
 16367                           ;	P3A/CCP3 Mux bit
 16368                           ;	CCP3MX = PORTB5, P3A/CCP3 input/output is multiplexed with RB5
 16369                           ;	HFINTOSC Fast Start-up
 16370                           ;	HFOFST = ON, HFINTOSC output and ready status are not delayed by the oscillator stable
      +                           status
 16371                           ;	Timer3 Clock input mux bit
 16372                           ;	T3CMX = PORTC0, T3CKI is on RC0
 16373                           ;	ECCP2 B output mux bit
 16374                           ;	P2BMX = PORTD2, P2B is on RD2
 16375                           ;	MCLR Pin Enable bit
 16376                           ;	MCLRE = EXTMCLR, MCLR pin enabled, RE3 input pin disabled
 16377  300005                     	org	3145733
 16378  300005  BD                 	db	189
 16379                           
 16380                           ;Config register CONFIG4L @ 0x300006
 16381                           ;	Stack Full/Underflow Reset Enable bit
 16382                           ;	STVREN = OFF, Stack full/underflow will not cause Reset
 16383                           ;	Single-Supply ICSP Enable bit
 16384                           ;	LVP = ON, Single-Supply ICSP enabled if MCLRE is also 1
 16385                           ;	Extended Instruction Set Enable bit
 16386                           ;	XINST = OFF, Instruction set extension and Indexed Addressing mode disabled (Legacy mo
      +                          de)
 16387                           ;	Background Debug
 16388                           ;	DEBUG = 0x1, unprogrammed default
 16389  300006                     	org	3145734
 16390  300006  84                 	db	132
 16391                           
 16392                           ; Padding undefined space
 16393  300007                     	org	3145735
 16394  300007  FF                 	db	255
 16395                           
 16396                           ;Config register CONFIG5L @ 0x300008
 16397                           ;	Code Protection Block 0
 16398                           ;	CP0 = OFF, Block 0 (000800-001FFFh) not code-protected
 16399                           ;	Code Protection Block 1
 16400                           ;	CP1 = OFF, Block 1 (002000-003FFFh) not code-protected
 16401                           ;	Code Protection Block 2
 16402                           ;	CP2 = OFF, Block 2 (004000-005FFFh) not code-protected
 16403                           ;	Code Protection Block 3
 16404                           ;	CP3 = OFF, Block 3 (006000-007FFFh) not code-protected
 16405  300008                     	org	3145736
 16406  300008  0F                 	db	15
 16407                           
 16408                           ;Config register CONFIG5H @ 0x300009
 16409                           ;	Boot Block Code Protection bit
 16410                           ;	CPB = OFF, Boot block (000000-0007FFh) not code-protected
 16411                           ;	Data EEPROM Code Protection bit
 16412                           ;	CPD = OFF, Data EEPROM not code-protected
 16413  300009                     	org	3145737
 16414  300009  C0                 	db	192
 16415                           
 16416                           ;Config register CONFIG6L @ 0x30000A
 16417                           ;	Write Protection Block 0
 16418                           ;	WRT0 = OFF, Block 0 (000800-001FFFh) not write-protected
 16419                           ;	Write Protection Block 1
 16420                           ;	WRT1 = OFF, Block 1 (002000-003FFFh) not write-protected
 16421                           ;	Write Protection Block 2
 16422                           ;	WRT2 = OFF, Block 2 (004000-005FFFh) not write-protected
 16423                           ;	Write Protection Block 3
 16424                           ;	WRT3 = OFF, Block 3 (006000-007FFFh) not write-protected
 16425  30000A                     	org	3145738
 16426  30000A  0F                 	db	15
 16427                           
 16428                           ;Config register CONFIG6H @ 0x30000B
 16429                           ;	Configuration Register Write Protection bit
 16430                           ;	WRTC = OFF, Configuration registers (300000-3000FFh) not write-protected
 16431                           ;	Boot Block Write Protection bit
 16432                           ;	WRTB = OFF, Boot Block (000000-0007FFh) not write-protected
 16433                           ;	Data EEPROM Write Protection bit
 16434                           ;	WRTD = OFF, Data EEPROM not write-protected
 16435  30000B                     	org	3145739
 16436  30000B  E0                 	db	224
 16437                           
 16438                           ;Config register CONFIG7L @ 0x30000C
 16439                           ;	Table Read Protection Block 0
 16440                           ;	EBTR0 = OFF, Block 0 (000800-001FFFh) not protected from table reads executed in other
      +                           blocks
 16441                           ;	Table Read Protection Block 1
 16442                           ;	EBTR1 = OFF, Block 1 (002000-003FFFh) not protected from table reads executed in other
      +                           blocks
 16443                           ;	Table Read Protection Block 2
 16444                           ;	EBTR2 = OFF, Block 2 (004000-005FFFh) not protected from table reads executed in other
      +                           blocks
 16445                           ;	Table Read Protection Block 3
 16446                           ;	EBTR3 = OFF, Block 3 (006000-007FFFh) not protected from table reads executed in other
      +                           blocks
 16447  30000C                     	org	3145740
 16448  30000C  0F                 	db	15
 16449                           
 16450                           ;Config register CONFIG7H @ 0x30000D
 16451                           ;	Boot Block Table Read Protection bit
 16452                           ;	EBTRB = OFF, Boot Block (000000-0007FFh) not protected from table reads executed in ot
      +                          her blocks
 16453  30000D                     	org	3145741
 16454  30000D  40                 	db	64
 16455                           tosu	equ	0xFFF
 16456                           tosh	equ	0xFFE
 16457                           tosl	equ	0xFFD
 16458                           stkptr	equ	0xFFC
 16459                           pclatu	equ	0xFFB
 16460                           pclath	equ	0xFFA
 16461                           pcl	equ	0xFF9
 16462                           tblptru	equ	0xFF8
 16463                           tblptrh	equ	0xFF7
 16464                           tblptrl	equ	0xFF6
 16465                           tablat	equ	0xFF5
 16466                           prodh	equ	0xFF4
 16467                           prodl	equ	0xFF3
 16468                           indf0	equ	0xFEF
 16469                           postinc0	equ	0xFEE
 16470                           postdec0	equ	0xFED
 16471                           preinc0	equ	0xFEC
 16472                           plusw0	equ	0xFEB
 16473                           fsr0h	equ	0xFEA
 16474                           fsr0l	equ	0xFE9
 16475                           wreg	equ	0xFE8
 16476                           indf1	equ	0xFE7
 16477                           postinc1	equ	0xFE6
 16478                           postdec1	equ	0xFE5
 16479                           preinc1	equ	0xFE4
 16480                           plusw1	equ	0xFE3
 16481                           fsr1h	equ	0xFE2
 16482                           fsr1l	equ	0xFE1
 16483                           bsr	equ	0xFE0
 16484                           indf2	equ	0xFDF
 16485                           postinc2	equ	0xFDE
 16486                           postdec2	equ	0xFDD
 16487                           preinc2	equ	0xFDC
 16488                           plusw2	equ	0xFDB
 16489                           fsr2h	equ	0xFDA
 16490                           fsr2l	equ	0xFD9
 16491                           status	equ	0xFD8

Data Sizes:
    Strings     263
    Constant    0
    Data        64
    BSS         368
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           94     94      94
    BANK0           160    147     160
    BANK1           256      0     243
    BANK2           256      0     176
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0

Pointer List with Targets:

    strncmp@_r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@r	PTR const unsigned char  size(2) Largest target is 3
		 -> STR_29(CODE[3]), 

    strncmp@_l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strncmp@l	PTR const unsigned char  size(2) Largest target is 3
		 -> vfpfcnvrt@ct(BANK0[3]), 

    strlen@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strlen@a	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@dest	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@d	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    strcpy@src	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    strcpy@s	PTR const unsigned char  size(2) Largest target is 80
		 -> STR_24(CODE[4]), STR_23(CODE[4]), STR_20(CODE[4]), STR_19(CODE[4]), 
		 -> dbuf(BANK2[80]), 

    fputs@s	PTR const unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    fputs@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    fputc@fp.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    fputc@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    atoi@s	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfprintf@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfprintf@cfmt	PTR unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    vfpfcnvrt@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    vfpfcnvrt@ap	PTR PTR void  size(2) Largest target is 2
		 -> sprintf@ap(BANK0[2]), 

    vfpfcnvrt@fmt	PTR PTR unsigned char  size(2) Largest target is 2
		 -> vfprintf@cfmt(BANK0[2]), 

    efgtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    sp__strcpy	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    dtoa@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@fp	PTR struct _IO_FILE size(2) Largest target is 7
		 -> sprintf@f(BANK0[6]), 

    pad@buf	PTR unsigned char  size(2) Largest target is 80
		 -> dbuf(BANK2[80]), 

    sprintf@fmt	PTR const unsigned char  size(2) Largest target is 18
		 -> STR_18(CODE[18]), STR_16(CODE[16]), STR_14(CODE[18]), STR_12(CODE[13]), 
		 -> STR_10(CODE[14]), STR_8(CODE[16]), STR_6(CODE[16]), STR_4(CODE[15]), 

    sprintf@s	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    sprintf@ap	PTR void [1] size(2) Largest target is 2
		 -> ?_sprintf(BANK0[2]), 

    S2839_IO_FILE$buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    f.buffer	PTR unsigned char  size(2) Largest target is 16
		 -> driverTimeSettingMenu@textCursor2(BANK0[16]), stopTimeSettingMenu@textCursor2(BANK0[16]), speedLimitSettingMenu@textCursor2(BANK0[16]), secretMenu@textCursor2(BANK0[16]), 
		 -> pauseMenu@textCursor2(BANK0[16]), stopMenu@textCursor2(BANK0[16]), mainMenu@textCursor2(BANK0[16]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> STR_17(CODE[17]), driverTimeSettingMenu@textCursor2(BANK0[16]), STR_15(CODE[17]), stopTimeSettingMenu@textCursor2(BANK0[16]), 
		 -> STR_13(CODE[17]), speedLimitSettingMenu@textCursor2(BANK0[16]), STR_11(CODE[17]), STR_9(CODE[17]), 
		 -> secretMenu@textCursor2(BANK0[16]), STR_7(CODE[17]), pauseMenu@textCursor2(BANK0[16]), STR_5(CODE[17]), 
		 -> stopMenu@textCursor2(BANK0[16]), STR_3(CODE[17]), mainMenu@textCursor2(BANK0[16]), STR_2(CODE[17]), 
		 -> STR_1(CODE[16]), 


Critical Paths under _main in COMRAM

    _system_init->_eepromRead
    _openLCD_Script->_Lcd_Write_String
    _Lcd_Clear->_Lcd_Cmd
    _startMotor->_PWM1_setDC
    _startMotor->_PWM2_setDC
    _startMotor->_speedControl
    _speedControl->___fltol
    _scanAdcConversion->___fltol
    _calculatedAverageValue->___xxtofl
    _stopMotor->_PWM1_setDC
    _stopMotor->_PWM2_setDC
    _PWM2_setDC->___fltol
    _PWM1_setDC->___fltol
    _fabsf->___xxtofl
    ___xxtofl->___lldiv
    _vfpfcnvrt->_efgtoa
    _efgtoa->___fltol
    _efgtoa->_floorf
    _tolower->_isupper
    _floorf->___fldiv
    ___fltol->___fldiv
    ___flsub->___fladd
    ___fladd->___flmul
    ___flmul->___xxtofl
    ___flge->___flmul
    ___fldiv->___flmul
    _dtoa->_pad
    _pad->_fputs
    _fputs->_fputc
    _abs->___aomod
    _atoi->_isspace
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _lcd_init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _TIMER0 in COMRAM

    None.

Critical Paths under _main in BANK0

    _menuControl->_stateMachine
    _stateMachine->_driverTimeSettingMenu
    _stateMachine->_mainMenu
    _stateMachine->_pauseMenu
    _stateMachine->_secretMenu
    _stateMachine->_speedLimitSettingMenu
    _stateMachine->_stopMenu
    _stateMachine->_stopTimeSettingMenu
    _stopTimeSettingMenu->_sprintf
    _stopMenu->_sprintf
    _speedLimitSettingMenu->_sprintf
    _secretMenu->_sprintf
    _pauseMenu->_sprintf
    _mainMenu->_sprintf
    _startMotor->_speedControl
    _driverTimeSettingMenu->_sprintf
    _sprintf->_vfprintf
    _vfprintf->_vfpfcnvrt
    _vfpfcnvrt->_efgtoa
    _efgtoa->_floorf

Critical Paths under _TIMER0 in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _TIMER0 in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _TIMER0 in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _TIMER0 in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _TIMER0 in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _TIMER0 in BANK5

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 0     0      0  414325
                          _Lcd_Clear
                         _PWM1_setDC
                         _PWM2_setDC
                           _PWM_Init
                            _adcInit
                           _lcd_init
                           _mcu_init
                        _menuControl
                     _menuInitialize
                     _openLCD_Script
                        _system_init
                       _timer_0_init
 ---------------------------------------------------------------------------------
 (1) _timer_0_init                                         0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _system_init                                          2     2      0      22
                                              1 COMRAM     2     2      0
                         _eepromRead
 ---------------------------------------------------------------------------------
 (2) _eepromRead                                           1     1      0      22
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _openLCD_Script                                       2     2      0    3494
                                             10 COMRAM     2     2      0
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0     110
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _menuInitialize                                       0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _menuControl                                          0     0      0  404153
                 _buttonControlFlags
                       _stateMachine
 ---------------------------------------------------------------------------------
 (2) _stateMachine                                         2     2      0  404153
                                            145 BANK0      2     2      0
              _driverTimeSettingMenu
                           _exitLine
                           _mainMenu
                          _pauseMenu
                         _secretMenu
              _speedLimitSettingMenu
                          _startMenu
                           _stopMenu
                _stopTimeSettingMenu
 ---------------------------------------------------------------------------------
 (3) _stopTimeSettingMenu                                 16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _stopMenu                                            16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _startMenu                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _speedLimitSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _secretMenu                                          16    16      0   60426
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___fladd
                             ___flge
                            ___flsub
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _pauseMenu                                           16    16      0   52617
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (3) _mainMenu                                            16    16      0   79142
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _sprintf
                         _startMotor
 ---------------------------------------------------------------------------------
 (4) _startMotor                                           0     0      0   32873
                         _PWM1_setDC
                         _PWM2_setDC
             _calculatedAverageValue
                  _scanAdcConversion
                       _speedControl
 ---------------------------------------------------------------------------------
 (5) _speedControl                                        10     6      4   11063
                                             87 COMRAM     6     2      4
                                              0 BANK0      4     4      0
                            ___fladd
                            ___flmul
                            ___fltol
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (5) _scanAdcConversion                                    2     2      0   12556
                                             87 COMRAM     2     2      0
                            ___fldiv
                            ___flmul
                            ___fltol
                           ___xxtofl
                       _readAdcValue
 ---------------------------------------------------------------------------------
 (6) _readAdcValue                                         7     5      2      46
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (5) _calculatedAverageValue                              24    24      0    2906
                                             27 COMRAM    24    24      0
                            ___lldiv
                             ___lmul
                           ___xxtofl
 ---------------------------------------------------------------------------------
 (6) ___lmul                                              12     4      8    1282
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (6) ___lldiv                                             13     5      8     314
                                              0 COMRAM    13     5      8
 ---------------------------------------------------------------------------------
 (3) _exitLine                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (3) _driverTimeSettingMenu                               16    16      0   53117
                                            129 BANK0     16    16      0
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                        _eepromWrite
                            _sprintf
                          _stopMotor
 ---------------------------------------------------------------------------------
 (4) _stopMotor                                            0     0      0    6348
                         _PWM1_setDC
                         _PWM2_setDC
 ---------------------------------------------------------------------------------
 (5) _PWM2_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (5) _PWM1_setDC                                           6     4      2    3174
                                             87 COMRAM     6     4      2
                            ___fltol
                           ___xxtofl
                              _fabsf
 ---------------------------------------------------------------------------------
 (6) _fabsf                                                8     4      4     199
                                             27 COMRAM     8     4      4
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (6) ___xxtofl                                            14    10      4    1310
                                             13 COMRAM    14    10      4
                            ___lldiv (ARG)
 ---------------------------------------------------------------------------------
 (4) _sprintf                                             18    10      8   42834
                                            111 BANK0     18    10      8
                           _vfprintf
 ---------------------------------------------------------------------------------
 (5) _vfprintf                                             8     2      6   41409
                                            103 BANK0      8     2      6
                          _vfpfcnvrt
 ---------------------------------------------------------------------------------
 (6) _vfpfcnvrt                                           50    44      6   41025
                                             71 BANK0     32    26      6
                               _atoi
                               _dtoa
                             _efgtoa
                              _fputc
                            _isdigit
                            _isupper
                            _strncmp
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _strncmp                                             11     5      6     453
                                              0 COMRAM    11     5      6
 ---------------------------------------------------------------------------------
 (7) _efgtoa                                              68    61      7   30053
                                             87 COMRAM     7     0      7
                                             10 BANK0     61    61      0
                            ___awdiv
                            ___awmod
                            ___fladd
                            ___fldiv
                             ___fleq
                             ___flge
                            ___flmul
                            ___flneg
                            ___flsub
                            ___fltol
                      ___fpclassifyf
                             _floorf
                            _isupper
                                _pad
                             _strcpy
                            _tolower
 ---------------------------------------------------------------------------------
 (7) _tolower                                              8     6      2     944
                                              6 COMRAM     8     6      2
                            _isupper
 ---------------------------------------------------------------------------------
 (8) _isupper                                              6     4      2     465
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) _strcpy                                              10     6      4     856
                                              0 COMRAM    10     6      4
 ---------------------------------------------------------------------------------
 (8) _floorf                                              20    16      4     490
                                             77 COMRAM    10     6      4
                                              0 BANK0     10    10      0
                            ___fldiv (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fpclassifyf                                       14    10      4     287
                                              0 COMRAM    14    10      4
 ---------------------------------------------------------------------------------
 (6) ___fltol                                             10     6      4    1369
                                             77 COMRAM    10     6      4
                            ___fladd (ARG)
                            ___fldiv (ARG)
                            ___flmul (ARG)
                           ___xxtofl (ARG)
                              _fabsf (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flsub                                              8     0      8    3801
                                             68 COMRAM     8     0      8
                            ___fladd
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (9) ___fladd                                             16     8      8    3022
                                             52 COMRAM    16     8      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flneg                                              4     0      4     121
                                              0 COMRAM     4     0      4
 ---------------------------------------------------------------------------------
 (8) ___flmul                                             25    17      8    5240
                                             27 COMRAM    25    17      8
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___flge                                              12     4      8     942
                                             52 COMRAM    12     4      8
                            ___flmul (ARG)
 ---------------------------------------------------------------------------------
 (8) ___fleq                                              12     4      8     646
                                              0 COMRAM    12     4      8
 ---------------------------------------------------------------------------------
 (8) ___fldiv                                             25    17      8    4591
                                             52 COMRAM    25    17      8
                            ___flmul (ARG)
                           ___xxtofl (ARG)
 ---------------------------------------------------------------------------------
 (8) ___awmod                                              6     2      4     448
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (8) ___awdiv                                              8     4      4     452
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (7) _dtoa                                                36    26     10    5042
                                             27 COMRAM    36    26     10
                            ___aodiv
                            ___aomod
                                _abs
                                _pad
 ---------------------------------------------------------------------------------
 (8) _pad                                                 11     5      6    3393
                                             16 COMRAM    11     5      6
                              _fputc
                              _fputs
                             _strlen
 ---------------------------------------------------------------------------------
 (9) _strlen                                               4     2      2     166
                                              0 COMRAM     4     2      2
 ---------------------------------------------------------------------------------
 (9) _fputs                                                7     3      4    1235
                                              9 COMRAM     7     3      4
                              _fputc
 ---------------------------------------------------------------------------------
 (7) _fputc                                                9     5      4     834
                                              0 COMRAM     9     5      4
                              _putch
 ---------------------------------------------------------------------------------
 (8) _putch                                                1     1      0       0
 ---------------------------------------------------------------------------------
 (8) _abs                                                  4     2      2     142
                                             18 COMRAM     4     2      2
                            ___aomod (ARG)
 ---------------------------------------------------------------------------------
 (8) ___aomod                                             18     2     16     448
                                              0 COMRAM    18     2     16
 ---------------------------------------------------------------------------------
 (8) ___aodiv                                             26    10     16     452
                                              0 COMRAM    26    10     16
 ---------------------------------------------------------------------------------
 (7) _atoi                                                15    13      2    1396
                                              7 COMRAM    15    13      2
                             ___wmul
                            _isdigit
                            _isspace
 ---------------------------------------------------------------------------------
 (8) _isspace                                              7     5      2     207
                                              0 COMRAM     7     5      2
 ---------------------------------------------------------------------------------
 (7) _isdigit                                              6     4      2     313
                                              0 COMRAM     6     4      2
 ---------------------------------------------------------------------------------
 (8) ___wmul                                               6     2      4     403
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (4) _eepromWrite                                          2     1      1     500
                                              0 COMRAM     2     1      1
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1636
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     178
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1748
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _buttonControlFlags                                   0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _mcu_init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _lcd_init                                             2     2      0     198
                                              3 COMRAM     2     2      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0     110
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      88
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 (1) _adcInit                                              0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _PWM_Init                                             0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 9
 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (12) _TIMER0                                              0     0      0       0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 12
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _PWM1_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM2_setDC
     ___fltol
       ___fladd (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___fldiv (ARG)
         ___flmul (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___flmul (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
       ___xxtofl (ARG)
         ___lldiv (ARG)
       _fabsf (ARG)
         ___xxtofl (ARG)
           ___lldiv (ARG)
     ___xxtofl
       ___lldiv (ARG)
     _fabsf
       ___xxtofl (ARG)
         ___lldiv (ARG)
   _PWM_Init
   _adcInit
   _lcd_init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _mcu_init
   _menuControl
     _buttonControlFlags
     _stateMachine
       _driverTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _exitLine
       _mainMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _startMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _calculatedAverageValue
             ___lldiv
             ___lmul
             ___xxtofl
               ___lldiv (ARG)
           _scanAdcConversion
             ___fldiv
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _readAdcValue
           _speedControl
             ___fladd
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___flmul
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
       _pauseMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _secretMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         ___fladd
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___xxtofl (ARG)
             ___lldiv (ARG)
         ___flge
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         ___flsub
           ___fladd
             ___flmul (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
           ___flmul (ARG)
             ___xxtofl (ARG)
               ___lldiv (ARG)
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _speedLimitSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _startMenu
       _stopMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
       _stopTimeSettingMenu
         _Lcd_Set_Cursor
           _Lcd_Cmd
             _Lcd_Port
         _Lcd_Write_String
           _Lcd_Write_Char
             _Lcd_Port
         _eepromWrite
         _sprintf
           _vfprintf
             _vfpfcnvrt
               _atoi
                 ___wmul
                 _isdigit
                 _isspace
               _dtoa
                 ___aodiv
                 ___aomod
                 _abs
                   ___aomod (ARG)
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
               _efgtoa
                 ___awdiv
                 ___awmod
                 ___fladd
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fldiv
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___fleq
                 ___flge
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___flmul
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___flneg
                 ___flsub
                   ___fladd
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fltol
                   ___fladd (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___flmul (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                   _fabsf (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 ___fpclassifyf
                 _floorf
                   ___fldiv (ARG)
                     ___flmul (ARG)
                       ___xxtofl (ARG)
                         ___lldiv (ARG)
                     ___xxtofl (ARG)
                       ___lldiv (ARG)
                 _isupper
                 _pad
                   _fputc
                     _putch
                   _fputs
                     _fputc
                       _putch
                   _strlen
                 _strcpy
                 _tolower
                   _isupper
               _fputc
                 _putch
               _isdigit
               _isupper
               _strncmp
               _tolower
                 _isupper
         _stopMotor
           _PWM1_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
           _PWM2_setDC
             ___fltol
               ___fladd (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___fldiv (ARG)
                 ___flmul (ARG)
                   ___xxtofl (ARG)
                     ___lldiv (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___flmul (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
               ___xxtofl (ARG)
                 ___lldiv (ARG)
               _fabsf (ARG)
                 ___xxtofl (ARG)
                   ___lldiv (ARG)
             ___xxtofl
               ___lldiv (ARG)
             _fabsf
               ___xxtofl (ARG)
                 ___lldiv (ARG)
   _menuInitialize
   _openLCD_Script
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
   _system_init
     _eepromRead
   _timer_0_init

 _TIMER0 (ROOT)

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BIGRAM             5FF      0       0      16        0.0%
EEDATA             100      0       0       0        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK2           100      0       0       7        0.0%
BANK2              100      0      B0       8       68.8%
BITBANK1           100      0       0       5        0.0%
BANK1              100      0      F3       6       94.9%
BITBANK0            A0      0       0       3        0.0%
BANK0               A0     93      A0       4      100.0%
BITCOMRAM           5E      0       0       0        0.0%
COMRAM              5E     5E      5E       1      100.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%
STACK                0      0       0       2        0.0%
NULL                 0      0       0       0        0.0%
ABS                  0      0     2A1       9        0.0%
DATA                 0      0     2A1      17        0.0%
CODE                 0      0       0       0        0.0%


Microchip Technology PIC18 Macro Assembler V2.20 build 20200408173844 
Symbol Table                                                                                   Sun Aug 16 01:59:19 2020

                    ___fldiv@aexp 004D                      ___fldiv@bexp 004C  
                    ___fldiv@sign 0045                                l60 540A  
                              l63 54C8                                l57 53E2  
                              l76 1452                                l92 5736  
                              l94 5744                                _KD 01EB  
                              l79 29FA                                l95 5746  
                              l98 56A0                                _KP 01EF  
                    ___awdiv@sign 0006               ___wmul@multiplicand 0003  
             __end_of_system_init 409E                               l100 56AE  
                             l101 56B2          ??_calculatedAverageValue 001C  
                             l311 5786                               l160 51FE  
                             l152 51BA                               l320 533E  
                             l154 51D0                               l314 5794  
                             l163 5764                               l411 3218  
                             l156 51E6                               l172 50E6  
                             l413 3264                               l501 413E  
                             l317 409C                               l158 51FC  
                             l422 3394                               l166 57B4  
                             l175 4DC4                               l415 32B0  
                             l503 41A4                               l407 56DA  
                             l184 4E42                               l512 3F7C  
                             l417 32FC                               l178 55E4  
                             l442 4B30                               l419 3348  
                             l515 57B6                               l452 38A2  
                             l428 4FAC                               l630 5504  
                             l702 5006                               l703 5016  
                             l471 577E                      _startIsClick 00FE  
                             l448 37BE                               l464 3DB0  
                             l633 561A                               l449 380E  
                             l570 5702                               l627 3552  
                             l459 482A                               l468 3E54  
                             l805 3BBA                               l725 4D2E  
                             l485 2FB2                               l574 4F36  
                             l718 4D1E                               l494 43AE  
                             l818 3D1E                               l922 4A7E  
                             l578 4EBC                               l691 5728  
                             l950 4C8A                               l935 4BE0  
                             l688 57A6                               l961 44B2  
                             l956 446C                               l965 5574  
                             l988 42AA                               _PR2 000FBB  
                 ?_openLCD_Script 0001                               _abs 544C  
                             _pad 48F6                      ___awmod@sign 0006  
                             wreg 000FE8                      ___flmul@aexp 002D  
                    ___flmul@bexp 002E               stopMenu@textCursor2 00E1  
                    ___flmul@sign 0028                      ___flmul@temp 0033  
                    ___flmul@prod 002F                       _stopIsClick 00FD  
                    ___fltol@exp1 0057                              ?_abs 0013  
                            l1220 1C6E                              l1221 1C34  
                            l1312 220C                              l1305 2016  
                            l1322 233C                              l1314 2284  
                            l1315 2272                              l1219 1C80  
                            l1420 497E                              l1236 1D9A  
                            l1228 1F50                              l1309 237A  
                            l1245 1E6A                              l1261 5384  
                            l1422 49BA                              l1430 2AA4  
                            l1246 1E58                              l1510 0822  
                            l1360 369E                              l1601 548A  
                            l1417 493C                              l1273 2714  
                            l1353 3642                              l1346 35AA  
                            l1275 2574                              l1700 5650  
                            l1428 2A9C                              l1284 25BA  
                            l1349 3706                              l1286 2632  
                            l1278 2538                              l1374 52A2  
                            l1287 2620                              l1367 5684  
                            l1632 3A32                              l1448 2CDE  
                            l4200 1B10                              l5000 3040  
                            l1704 475C                              l1641 310C  
                            l4210 1B38                              l4202 1B12  
                            l5002 304E                              l5010 3130  
                            l1714 513E                              l1466 0C4C  
                            l4300 1D08                              l4220 1B72  
                            l4212 1B48                              l4204 1B18  
                            l5012 316C                              l1484 048A  
                            l5100 009E                              l1629 3A2A  
                            l5022 5576                              l5030 52BC  
                            l4310 1D7A                              l4302 1D0E  
                            l4230 1B9E                              l4222 1B84  
                            l4214 1B58                              l4206 1B26  
                            l5014 3180                              l5006 30C0  
                            l1638 31C8                              l1662 553C  
                            l5110 00F2                              l5102 00A8  
                            l1582 5078                              l1719 5146  
                            l1583 5080                              l1648 55AC  
                            l1656 52F4                              l5032 52EA  
                            l5040 2A1C                              l4320 1DD4  
                            l4304 1D34                              l4312 1D8A  
                            l4240 1BB2                              l4232 1BA2  
                            l4224 1B92                              l4216 1B5A  
                            l4208 1B28                              l5016 31A8  
                            l5008 30FC                              l5120 0136  
                            l5112 00FC                              l5104 00B8  
                            l1576 19D6                              l1568 1A90  
                            l6000 3EC0                              l1593 45B0  
                            l4402 5704                              l5034 52EE  
                            l5026 52A4                              l4410 3A38  
                            l4170 485A                              l5050 2A90  
                            l5042 2A44                              l4330 1E04  
                            l4322 1DDE                              l4314 1DB0  
                            l4306 1D68                              l4250 1BC6  
                            l4242 1BB6                              l4234 1BA6  
                            l4226 1B96                              l4218 1B62  
                            l5018 31B8                              l5210 050C  
                            l5122 0142                              l5130 0158  
                            l5114 0104                              l5106 00C6  
                            l6010 3EF0                              l6002 3EC4  
                            l4404 5720                              l5028 52A8  
                            l4420 3A98                              l4412 3A46  
                            l4172 4878                              l4164 482C  
                            l5060 2ADA                              l5052 2AAC  
                            l5044 2A64                              l4500 23C8  
                            l4340 1E2C                              l4332 1E08  
                            l4324 1DEC                              l4316 1DC0  
                            l4308 1D6A                              l4260 1C00  
                            l4252 1BCA                              l4244 1BBA  
                            l4236 1BAA                              l4228 1B9A  
                            l4180 1A9E                              l5300 0946  
                            l5220 0544                              l5212 0514  
                            l5204 04A8                              l5140 01E2  
                            l5132 017E                              l5124 014A  
                            l5116 0116                              l5108 00CE  
                            l6020 3F0E                              l6012 3EF6  
                            l6004 3EC8                              l6100 4334  
                            l1677 48F4                              l1685 53C8  
                            l4430 3AE2                              l4422 3A9C  
                            l4414 3A66                              l1598 5482  
                            l4174 48AE                              l4166 483E  
                            l5070 2B78                              l5062 2AE4  
                            l5054 2ABE                              l5046 2A74  
                            l5038 29FC                              l4510 23EE  
                            l4502 23CA                              l4350 1E86  
                            l4342 1E3A                              l4334 1E18  
                            l4326 1DEE                              l4270 1C52  
                            l4262 1C1C                              l4254 1BCE  
                            l4246 1BBE                              l4238 1BAE  
                            l4190 1ADE                              l4182 1AAC  
                            l1694 51A2                              l5310 097A  
                            l5302 094C                              l5230 058E  
                            l5222 0552                              l5206 04BA  
                            l5214 0518                              l5150 0252  
                            l5142 01FA                              l5126 014E  
                            l5118 0124                              l6030 3F36  
                            l6022 3F12                              l6014 3EFA  
                            l6006 3ECC                              l6110 435E  
                            l6102 433A                              l5400 38B8  
                            l4440 3B52                              l4432 3AF0  
                            l4424 3AA8                              l4416 3A6A  
                            l4408 3A34                              l1688 57B8  
                            l4168 4850                              l5080 2C48  
                            l5064 2AEA                              l5072 2BDC  
                            l5056 2ACC                              l5048 2A76  
                            l4600 2686                              l4520 242E  
                            l4512 23FC                              l4504 23D2  
                            l4360 1EF0                              l4352 1E94  
                            l4344 1E50                              l4328 1DFC  
                            l4336 1E1A                              l4280 1C9E  
                            l4272 1C60                              l4264 1C2C  
                            l4248 1BC2                              l4256 1BD2  
                            l4192 1AE0                              l4184 1AAE  
                            l5304 0952                              l5312 0980  
                            l5320 0A18                              l5240 05D4  
                            l5232 05A0                              l5224 0556  
                            l5216 0520                              l5208 04D6  
                            l5144 0204                              l5136 01B4  
                            l5128 0152                              l6032 3F52  
                            l6016 3F04                              l6008 3EDE  
                            l6024 3F16                              l6200 2CF0  
                            l6112 4368                              l6104 433E  
                            l6120 475E                              l6040 40AA  
                            l5410 3916                              l5402 38BC  
                            l4442 3B64                              l4434 3B02  
                            l4426 3AC6                              l4418 3A78  
                            l5090 2C92                              l5074 2BF6  
                            l5082 2C58                              l5066 2B6C  
                            l5058 2AD2                              l4610 26F0  
                            l4602 268A                              l4530 246E  
                            l4522 2430                              l4514 23FE  
                            l4506 23E2                              l4370 1F2A  
                            l4362 1F10                              l4354 1ECE  
                            l4290 1CDE                              l4338 1E28  
                            l4274 1C62                              l4266 1C42  
                            l4258 1BD6                              l4186 1ABE  
                            l4194 1AE8                              l4178 1A92  
                            l5330 0A82                              l5322 0A36  
                            l5314 09D8                              l5306 0964  
                            l5250 06E8                              l5242 0638  
                            l5226 0568                              l5234 05A8  
                            l5218 0532                              l5154 0288  
                            l5138 01C6                              l6034 3F5E  
                            l6026 3F20                              l6018 3F0A  
                            l6202 2D02                              l6210 2D1E  
                            l6114 4384                              l6106 4348  
                            l6130 4782                              l6122 476A  
                            l6050 40EE                              l6042 40AE  
                            l6300 325C                              l5420 3942  
                            l5404 38C0                              l4436 3B30  
                            l4428 3ACE                              l4444 3B6A  
                            l4460 3BF2                              l4452 3BBC  
                            l4380 5386                              l5092 2C9E  
                            l5084 2C6A                              l5076 2C14  
                            l5068 2B72                              l4612 26F4  
                            l4604 26A4                              l4540 249E  
                            l4532 2476                              l4516 240E  
                            l4524 2438                              l4508 23E8  
                            l4700 2166                              l4372 1F30  
                            l4364 1F14                              l4348 1E7A  
                            l4356 1ED0                              l4292 1CEA  
                            l4284 1CB2                              l4276 1C6C  
                            l4268 1C4E                              l4196 1AF8  
                            l4188 1ACE                              l5340 0AC0  
                            l5332 0A86                              l5324 0A52  
                            l5316 0A0C                              l5308 0976  
                            l5260 07A6                              l5252 071C  
                            l5244 0690                              l5236 05B0  
                            l5228 0576                              l5180 03EA  
                            l5172 0322                              l5156 029A  
                            l5148 022C                              l6036 3F72  
                            l6028 3F2C                              l5500 4FBE  
                            l6220 2D76                              l6212 2D30  
                            l6204 2D06                              l6116 4390  
                            l6108 4352                              l6140 47CC  
                            l6132 478E                              l6124 4770  
                            l6060 4128                              l6052 40F4  
                            l6044 40C0                              l6310 32A8  
                            l6302 3274                              l5430 39EA  
                            l5422 3976                              l5414 391C  
                            l5406 38DC                              l4446 3B7A  
                            l4438 3B50                              l4470 3C5A  
                            l4462 3C00                              l4454 3BC0  
                            l4382 5392                              l4390 5628  
                            l5094 2CA6                              l5086 2C7A  
                            l5078 2C2E                              l4614 2702  
                            l4606 26BA                              l4550 24DC  
                            l4542 249E                              l4534 247A  
                            l4526 2448                              l4518 241E  
                            l4710 21FC                              l4702 2190  
                            l4630 1F6C                              l4374 1F3E  
                            l4366 1F22                              l4358 1EE0  
                            l4294 1CEE                              l4286 1CC2  
                            l4278 1C8E                              l4198 1AFE  
                            l5350 0AF2                              l5342 0AC8  
                            l5334 0A96                              l5326 0A64  
                            l5318 0A14                              l5270 081A  
                            l5262 07B6                              l5254 074E  
                            l5246 06C4                              l5238 05C0  
                            l5190 044A                              l5182 03F2  
                            l5174 0356                              l5158 02B6  
                            l5166 02D2                              l5510 4C9C  
                            l5502 4FCC                              l6230 2E00  
                            l6222 2D82                              l6214 2D3A  
                            l6206 2D0A                              l6118 43A4  
                            l6150 4826                              l6142 47D8  
                            l6134 4794                              l6126 4774  
                            l6070 415E                              l6062 412E  
                            l6054 40FA                              l6046 40CA  
                            l6038 409E                              ?_pad 0011  
                            l6400 4DB2                              l6320 32F4  
                            l6312 32C0                              l6304 3282  
                            l5432 39FC                              l5416 3932  
                            l5408 3912                              l4448 3B9A  
                            l4472 3C68                              l4480 3CCE  
                            l4464 3C20                              l4456 3BCE  
                            l4384 53A4                              l4392 562C  
                            l5088 2C80                              l5096 2CB6  
                            l4800 4A6E                              l4616 2708  
                            l4608 26D4                              l4560 2528  
                            l4552 24EC                              l4528 245E  
                            l4720 223C                              l4712 220A  
                            l4704 21C6                              l4640 1FA4  
                            l4632 1F6E                              l4376 1F40  
                            l4368 1F28                              l4296 1CFC  
                            l4288 1CD0                              l5352 0AF8  
                            l5360 0B48                              l5344 0AD6  
                            l5336 0AA8                              l5328 0A72  
                            l5280 08D6                              l5272 083E  
                            l5264 07EA                              l5256 0764  
                            l5248 06CA                              l5192 045C  
                            l5176 035C                              l5184 0424  
                            l5168 02EC                              l5440 4688  
                            l5600 1590                              l5520 4CDE  
                            l5512 4CB2                              l5504 4FDC  
                            l6160 3D32                              l6240 2E6C  
                            l6232 2E12                              l6224 2D94  
                            l6216 2D46                              l6208 2D1A  
                            l6080 42B8                              l6152 5766  
                            l6144 47EA                              l6136 4798  
                            l6128 4778                              l6072 417A  
                            l6064 4134                              l6048 40DC  
                            l6056 4104                              l6402 4DB8  
                            l6330 3340                              l6322 330C  
                            l6314 32CE                              l6306 328A  
                            l5434 3A0E                              l5426 39AC  
                            l5418 393A                              l4482 3CDE  
                            l4474 3C96                              l4466 3C3E  
                            l4458 3BEE                              l4386 53A8  
                            l4394 5644                              l4802 4A76  
                            l4810 4B44                              l4618 270A  
                            l4570 2572                              l4562 2536  
                            l4554 24FC                              l4546 24B2  
                            l4538 248E                              l4490 2388  
                            l4730 22AE                              l4722 226A  
                            l4714 221C                              l4706 21D4  
                            l4650 1FD0                              l4642 1FB4  
                            l4634 1F7E                              l4626 1F52  
                            l4298 1CFE                              l5370 0B98  
                            l5362 0B5A                              l5354 0B1E  
                            l5346 0ADE                              l5338 0AB0  
                            l5290 091C                              l5282 08E4  
                            l5274 08A2                              l5266 07FA  
                            l5258 0796                              l5194 0464  
                            l5186 0434                              l5178 03B6  
                            l5450 46E4                              l5442 46B2  
                            l5610 1602                              l5602 15A2  
                            l5530 3556                              l5522 4CFC  
                            l5514 4CBA                              l5506 4FE6  
                            l6170 3D88                              l6162 3D3C  
                            l6250 2EBE                              l6242 2E76  
                            l6234 2E20                              l6226 2DC6  
                            l6218 2D50                              l6090 42FC  
                            l6082 42BC                              l6154 576A  
                            l6146 480A                              l6138 47A2  
                            l6074 4186                              l6066 4148  
                            l6058 4116                              l6410 56B4  
                            l6404 4DBE                              l6340 338C  
                            l6332 3358                              l6324 331A  
                            l6316 32D6                              l6308 3298  
                            l4484 3CFE                              l4476 3CB6  
                            l4468 3C46                              l4388 561C  
                            l4820 4B78                              l4812 4B4C  
                            l4580 25B8                              l4572 2584  
                            l4564 2542                              l4556 2504  
                            l4548 24CC                              l4492 2396  
                            l4740 2324                              l4732 22D8  
                            l4716 222A                              l4708 21F2  
                            l4660 2026                              l4652 1FE0  
                            l4644 1FBA                              l4636 1F8E  
                            l4628 1F5E                              l4900 420C  
                            l5372 0BA0                              l5364 0B74  
                            l5356 0B3A                              l5348 0AE6  
                            l5292 0920                              l5276 08B2  
                            l5284 08EC                              l5268 080E  
                            l5196 047E                              l5188 0438  
                            l5452 4700                              l5620 16B2  
                            l5612 163C                              l5604 15C6  
                            l5532 3566                              l5524 4D0C  
                            l5516 4CC6                              l5508 4C8C  
                            l5460 53CC                              l5700 0CCA  
                            l6180 3DF4                              l6172 3D9A  
                            l6164 3D48                              l6156 3D20  
                            l6260 2F4E                              l6252 2ED0  
                            l6244 2E82                              l6236 2E24  
                            l6228 2DCC                              l6092 4302  
                            l6084 42CE                              l6148 481C  
                            l6076 419A                              l6068 4154  
                            l6420 405C                              l6412 5796  
                            l6500 4630                              l6406 5780  
                            l6334 3366                              l6326 3322  
                            l6318 32E4                              l4478 3CC8  
                            l4830 4BB4                              l4822 4B80  
                            l4814 4B50                              l4806 4B32  
                            l4590 2618                              l4574 259A  
                            l4582 25CA                              l4566 2560  
                            l4558 2514                              l4494 2398  
                            l4742 2340                              l4750 2366  
                            l4726 2294                              l4734 22DC  
                            l4718 222E                              l4670 2060  
                            l4662 2036                              l4654 1FF0  
                            l4646 1FC0                              l4638 1F9E  
                            l4910 4236                              l4902 4210  
                            l4398 5506                              l5390 0C26  
                            l5382 0BF0                              l5374 0BB0  
                            l5366 0B7A                              l5358 0B42  
                            l5294 0926                              l5286 08FE  
                            l5278 08C4                              l5198 0496  
                            l5454 4712                              l5446 46BE  
                            l5630 1738                              l5614 165C  
                            l5606 15D0                              l5622 16C4  
                            l5550 362C                              l5542 35E4  
                            l5534 3574                              l5526 4D0E  
                            l5518 4CD4                              l5470 5402  
                            l5462 53CC                              l5710 0E30  
                            l5702 0D3A                              l6190 3E36  
                            l6182 3DF8                              l6174 3DC2  
                            l6166 3D52                              l6158 3D2C  
                            l6262 2F5C                              l6254 2F02  
                            l6246 2E8C                              l6238 2E58  
                            l6094 4306                              l6086 42D8  
                            l6078 42AC                              l6350 4A9C  
                            l6342 4A80                              l6270 572C  
                            l6430 4096                              l6422 4066  
                            l6414 57A2                              l6510 465E  
                            l6502 4640                              l6432 56DC  
                            l5480 51CA                              l6408 5784  
                            l6336 336E                              l6328 3330  
                            l6280 31CA                              l4832 4BBA  
                            l4824 4B88                              l4816 4B5E  
                            l4808 4B36                              l4584 25D8  
                            l4576 25A0                              l4568 2562  
                            l4496 23A8                              l4488 237C  
                            l4752 236A                              l4744 2350  
                            l4736 22F6                              l4728 22A0  
                            l4680 20B2                              l4672 2076  
                            l4656 2000                              l4648 1FCE  
                            l4920 425E                              l4912 4240  
                            l4904 421E                              l5392 0C2C  
                            l5384 0C02                              l5376 0BB6  
                            l5368 0B8C                              l5296 0932  
                            l5288 090C                              l5456 473A  
                            l5448 46CC                              l5632 176A  
                            l5624 16E6                              l5616 166A  
                            l5608 15DE                              l5560 36AC  
                            l5552 3638                              l5544 35EC  
                            l5536 35BA                              l5800 4ED6  
                            l5528 4D18                              l5464 53DE  
                            l5720 0FE6                              l5712 0E9A  
                            l5704 0D48                              l6192 3E46  
                            l6176 3DD2                              l6184 3E06  
                            l6168 3D7C                              l6264 2F60  
                            l6256 2F08                              l6248 2EB2  
                            l6088 42EA                              l6096 4310  
                            l6360 4AC4                              l6352 4AA4  
                            l6344 4A84                              l6440 5300  
                            l6272 5730                              l6424 4070  
                            l6416 57A4                              l6512 4668  
                            l6504 4644                              l6434 56E0  
                            l6370 548C                              l5482 51D2  
                            l5474 51A6                              l6338 337C  
                            l6290 3210                              l6282 31DC  
                            l4770 49DA                              l4762 49BC  
                            l4826 4B96                              l4834 4BC0  
                            l4818 4B66                              l4594 2642  
                            l4586 25DC                              l4578 25AA  
                            l4498 23B8                              l4850 4C5E  
                            l4842 4BE2                              l4746 235E  
                            l4738 230A                              l4690 20F8  
                            l4682 20C0                              l4674 2082  
                            l4666 204A                              l4658 2006  
                            l4922 426A                              l4914 424A  
                            l5386 0C0E                              l5378 0BBC  
                            l5298 0942                              l5650 1898  
                            l5642 1832                              l5634 178E  
                            l5626 16F6                              l5570 36F4  
                            l5562 36AE                              l5554 3674  
                            l5546 35F8                              l5538 35D0  
                            l5490 5652                              l5802 4F1E  
                            l5810 4EA4                              l5466 53E0  
                            l5730 114C                              l5722 1056  
                            l5714 0F06                              l5706 0DB2  
                            l6194 3E50                              l6186 3E1A  
                            l6178 3DE2                              l6258 2F3C  
                            l6266 2F94                              l6098 4322  
                            l6354 4AAC                              l6346 4A8C  
                            l6450 4F3C                              l6442 530C  
                            l6274 5732                              l6426 407A  
                            l6418 3F7E                              l6514 4678  
                            l6506 464A                              l6436 56F0  
                            l6372 54AE                              l5484 51E0  
                            l5476 51B4                              l6380 4D50  
                            l6292 3228                              l6284 31EA  
                            l6620 3960                              l4940 4934  
                            l4932 48F6                              l4780 4A0E  
                            l4772 49E8                              l4764 49C0  
                            l4836 4BD0                              l4828 4BAC  
                            l4596 264E                              l4588 25EA  
                            l4852 4C82                              l4844 4C10  
                            l4860 43DE                              l4748 2360  
                            l4692 2112                              l4684 20CC  
                            l4676 209A                              l4668 2056  
                            l4756 5340                              l4924 427A  
                            l5388 0C16                              l5660 1960  
                            l5644 1844                              l5636 17B2  
                            l5628 1728                              l5580 1486  
                            l5572 36F6                              l5564 36B2  
                            l5556 3680                              l5548 362A  
                            l5492 5672                              l5804 4E44  
                            l5468 53F0                              l5740 130E  
                            l5732 11B6                              l5724 1064  
                            l5716 0F6E                              l5708 0E22  
                            l5820 349C                              l5812 3396  
                            l6188 3E24                              l6268 2FA8  
                            l6196 2CE0                              l6356 4AB4  
                            l6348 4A94                              l6364 4ACC  
                            l6460 4F88                              l6452 4F40  
                            l6444 5322                              l6276 5734  
                            l6428 4092                              l6508 465C  
                            l6516 467C                              l6374 54B6  
                            l5486 51E8                              l5478 51BC  
                            l6390 4D94                              l6382 4D68  
                            l6294 3236                              l6286 31F2  
                            l5398 38A4                              l4950 49A2  
                            l4942 4948                              l4934 4906  
                            l4790 4A48                              l4782 4A16  
                            l4774 49F0                              l4766 49CE  
                            l4838 4BD8                              l4598 265C  
                            l4854 4C88                              l4846 4C20  
                            l4870 444C                              l4862 43EE  
                            l4694 2122                              l4686 20DC  
                            l4678 20A6                              l4758 5350  
                            l4926 428A                              l5662 1972  
                            l5670 19EA                              l5646 185A  
                            l5654 18C4                              l5638 17FA  
                            l5590 1508                              l5582 1498  
                            l5566 36D6                              l5558 368E  
                            l5494 5674                              l5806 4E44  
                            l5910 54EC                              l5742 131C  
                            l5734 1226                              l5726 10CE  
                            l5718 0F7C                              l5830 34E6  
                            l5822 34A4                              l5814 3396  
                            l5902 55E6                              l6198 2CEC  
                            l6358 4ABC                              l6462 4F9A  
                            l6454 4F52                              l6278 57A8  
                            l6446 533A                              l6438 52F6  
                            l6470 45B6                              l5488 51F6  
                            l6392 4D9A                              l6384 4D6E  
                            l6376 4D30                              l6296 323E  
                            l6288 3200                              l4944 495C  
                            l4936 491A                              l4792 4A50  
                            l4784 4A1E                              l4776 49F4  
                            l4768 49D6                              l4848 4C4E  
                            l4872 445A                              l4864 441C  
                            l4696 213E                              l4688 20E8  
                            l4880 553E                              l4928 429A  
                            l4960 44D4                              l5672 1A0E  
                            l5680 1A3E                              l5664 19A6  
                            l5656 18F2                              l5648 1868  
                            l5592 151A                              l5584 149E  
                            l5576 1454                              l5568 36E6  
                            l5808 4E5C                              l5912 54F8  
                            l5760 280E                              l5744 1386  
                            l5736 1234                              l5728 113E  
                            l5840 354A                              l5832 3502  
                            l5824 34B2                              l5816 3396  
                            l5904 55EA                              l5920 372A  
                            l6616 4AE2                              l6456 4F64  
                            l6448 4F38                              l6480 45CA  
                            l6472 45BA                              l5770 5752  
                            l6394 4DA0                              l6386 4D7E  
                            l6378 4D4A                              l6298 324C  
                            l5850 5688                              l4954 544C  
                            l4946 4960                              l4938 4928  
                            l4794 4A52                              l4786 4A2C  
                            l4778 49FC                              l4874 44AA  
                            l4866 442C                              l4858 43B0  
                            l4698 214A                              l4882 5554  
                            l4890 41BC                              l4962 4512  
                            l4970 4552                              l5682 1A4C  
                            l5674 1A1C                              l5594 153A  
                            l5586 14C2                              l5578 1478  
                            l5842 5018                              l5498 4FAE  
                            l5762 2908                              l6618 140C  
                            l5738 129E                              l5834 350A  
                            l5826 34C2                              l5818 33D6  
                            l5906 55EE                              l5930 378C  
                            l5922 3734                              l5914 3708  
                            l6458 4F76                              l6490 45EE  
                            l6482 45CE                              l6474 45BE  
                            l5772 5754                              l6396 4DA6  
                            l6388 4D84                              l5780 55BE  
                            l5860 5696                              l5852 568C  
                            l4956 5466                              l4948 498E  
                            l4796 4A58                              l4788 4A32  
                            l4876 44B0                              l4868 443A  
                            l4884 5564                              l4972 4564  
                            l4964 453A                              l4980 5148  
                            l5676 1A30                              l5596 1548  
                            l5588 14F8                              l5844 5020  
                            l5908 54CA                              l5764 29B0  
                            l5756 2716                              l5748 13F6  
                            l5836 3526                              l5828 34DE  
                            l5940 37F0                              l5932 37A2  
                            l5924 375E                              l5916 3714  
                            l6492 45FE                              l6484 45D2  
                            l6476 45C2                              l6468 45B2  
                            l5774 5762                              l5766 574A  
                            l6398 4DAC                              l5870 50A6  
                            l5790 55D8                              l5782 55C6  
                            l5862 569A                              l5854 5690  
                            l4798 4A5E                              l4894 41D0  
                            l4966 4546                              l4958 44B4  
                            l4982 5158                              l4990 5130  
                            l5686 1A5A                              l5846 502E  
                            l5758 2748                              l5694 0C4E  
                            l5838 352E                              l5950 381E  
                            l5942 3800                              l5934 37B2  
                            l5926 376A                              l5918 371E  
                            l6494 4600                              l6486 45DE  
                            l6478 45C6                              l5768 574C  
                            l5880 50E0                              l5872 50AC  
                            l5792 55DA                              l5784 55C8  
                            l5776 55B0                              l5864 569E  
                            l5856 5692                              l4896 41FA  
                            l4888 41A6                              l4976 45A8  
                            l4984 50E8                              l5688 1A7E  
                            l5848 505C                              l5696 0C52  
                            l5960 3860                              l5952 382E  
                            l5944 3804                              l5936 37D0  
                            l5928 377E                              l6496 4610  
                            l6488 45EA                              l5874 50B6  
                            l5866 5084                              l5794 55E2  
                            l5786 55D0                              l5778 55BC  
                            l5882 4DC6                              l5858 5694  
                            l4898 41FC                              l4994 2FB4  
                            l5890 5252                              l5698 0C60  
                            l5970 3888                              l5962 3862  
                            l5954 383E                              l5946 3806  
                            l5938 37E0                              l6498 4620  
                            l5876 50C8                              l5868 5094  
                            l5788 55D2                              l5884 4DD2  
                            l4996 2FD4                              l4988 511E  
                            l5892 5264                              l5796 4EBE  
                            l5980 3E56                              l5972 3898  
                            l5964 3864                              l5956 384E  
                            l5948 3808                              l5878 50DA  
                            l5886 4E02                              l4998 302C  
                            l5894 526C                              l5798 4EBE  
                            l5990 3E94                              l5982 3E62  
                            l5974 389C                              l5958 3852  
                            l5966 3866                              l5888 4E06  
                            l5896 5274                              l5992 3EA6  
                            l5984 3E66                              l5976 389E  
                            l5968 3878                              l5898 5290  
                            l5994 3EAC                              l5986 3E78  
                            l5978 38A0                              l5996 3EB0  
                            l5988 3E82                              l5998 3EBA  
                            STR_1 7FB1                              STR_2 7F80  
                            STR_3 7F2B                              STR_4 7FC1  
                            STR_5 7F3C                              STR_6 7FA1  
                            STR_7 7F4D                              STR_8 7FA1  
                            STR_9 7F09                              u4000 4850  
                            u4001 484C                              u4010 4878  
                            u4011 4874                              u4020 48AE  
                            u4100 1B84                              u4021 48AA  
                            u4101 1B80                              u4110 1B92  
                            u4030 1AAC                              u4111 1B8E  
                            u4031 1AA8                              u5000 235E  
                            u4200 1CD0                              u4120 1C00  
                            u4040 1ABE                              u5001 235A  
                            u4201 1CCC                              u4121 1BFC  
                            u4041 1ABA                              u5010 49CE  
                            u4210 1CDE                              u4130 1C18  
                            u4050 1ACE                              u5011 49CA  
                            u4211 1CDA                              u4131 1C12  
                            u4051 1ACA                              u5020 49E8  
                            u5100 4B96                              u4300 1E28  
                            u4220 1CFC                              u4140 1C1A  
                            u4060 1B10                              u5021 49E4  
                            u5101 4B92                              u4301 1E24  
                            u4221 1CF8                              u4061 1B0C  
                            u5030 4A0E                              u5110 4BAC  
                            u4310 1E3A                              u4230 1D34  
                            u4150 1C42                              u4070 1B26  
                            u5031 4A0A                              u5111 4BA8  
                            u4311 1E36                              u4231 1D30  
                            u4151 1C3E                              u4071 1B22  
                            u5040 4A2C                              u5120 4BD0  
                            u5200 44AA                              u4400 1F22  
                            u4320 1E50                              u4240 1D7A  
                            u4160 1C60                              u4080 1B38  
                            u6000 0568                              u5041 4A28  
                            u5121 4BCC                              u5201 44A6  
                            u4401 1F1E                              u4321 1E4C  
                            u4241 1D76                              u4161 1C5C  
                            u4081 1B34                              u6001 0564  
                            u5050 4A48                              u5130 4C10  
                            u5210 5554                              u4410 1F3E  
                            u4330 1E66                              u4250 1DB0  
                            u4170 1C80                              u4090 1B48  
                            u6010 0576                              u5051 4A44  
                            u5131 4C0C                              u5211 5550  
                            u4411 1F3A                              u4331 1E62  
                            u4251 1DAC                              u4171 1C7C  
                            u4091 1B44                              u6011 0572  
                            u4500 3AF0                              u4420 53C8  
                            u5300 4928                              u5060 4A6E  
                            u5140 4C4E                              u4340 1E7A  
                            u4260 1DC0                              u4180 1C8E  
                            u5220 41BC                              u6100 08D6  
                            u6020 05A0                              u4501 3AEC  
                            u4421 53C4                              u5301 4924  
                            u5061 4A6A                              u5141 4C4A  
                            u4341 1E76                              u4261 1DBC  
                            u4181 1C8A                              u5221 41B8  
                            u6101 08D2                              u6021 059C  
                            u4510 3B30                              u4430 5644  
                            u5310 497E                              u5070 4B44  
                            u5150 4C82                              u4350 1E94  
                            u4270 1DEC                              u4190 1C9E  
                            u5230 41F0                              u6110 08E4  
                            u6030 06E8                              u4511 3B2C  
                            u4431 5640                              u5311 497A  
                            u5071 4B40                              u5151 4C7E  
                            u4351 1E90                              u4271 1DE8  
                            u4191 1C9A                              u6111 08E0  
                            u6031 06E4                              u4520 3B7A  
                            u5320 498E                              u5080 4B5E  
                            u4600 23A8                              u5160 43DE  
                            u4360 1ECE                              u4280 1DFC  
                            u5240 421E                              u5400 45A0  
                            u4440 5536                              u6200 0AD6  
                            u6120 08FE                              u6040 074E  
                            u7000 3800                              u4521 3B76  
                            u5321 498A                              u5081 4B5A  
                            u4601 23A4                              u5161 43DA  
                            u4361 1ECA                              u4281 1DF8  
                            u5241 421A                              u4441 5530  
                            u6201 0AD2                              u6121 08FA  
                            u6041 074A                              u7001 37FC  
                            u4530 3BCE                              u5330 5466  
                            u5090 4B78                              u4610 23B8  
                            u5170 441C                              u4370 1EE0  
                            u4290 1E18                              u5250 4232  
                            u5410 5190                              u4450 5538  
                            u6210 0B5A                              u6130 090C  
                            u6050 0796                              u7010 381E  
                            u4531 3BCA                              u5331 5462  
                            u5091 4B74                              u4611 23B4  
                            u5171 4418                              u4371 1EDC  
                            u4291 1E14                              u5251 422E  
                            u5235 41E6                              u6211 0B56  
                            u6131 0908                              u6051 0792  
                            u7011 381A                              u6300 39E4  
                            u4460 3A46                              u4540 3C00  
                            u4700 2584                              u4620 23FC  
                            u5180 443A                              u4380 1EF0  
                            u5260 425A                              u5340 44F4  
                            u5500 30BC                              u5420 51A2  
                            u6220 0B74                              u6140 0964  
                            u6060 07A6                              u7100 3E94  
                            u7020 382E                              u6301 39DE  
                            u4461 3A42                              u4541 3BFC  
                            u4701 2580                              u4621 23F8  
                            u5181 4436                              u4381 1EEC  
                            u5261 4256                              u5501 30B8  
                            u5421 519E                              u6221 0B70  
                            u6141 0960                              u6061 07A2  
                            u7101 3E90                              u7021 382A  
                            u6310 39E6                              u4470 3A78  
                            u4550 3C3E                              u4710 259A  
                            u4630 240E                              u5190 445A  
                            u4390 1F10                              u5270 427A  
                            u5350 4512                              u5510 30E0  
                            u5430 5118                              u6230 0B8C  
                            u6150 0A36                              u6070 080E  
                            u7110 3EA6                              u7030 383E  
                            u4471 3A74                              u4551 3C3A  
                            u4711 2596                              u4631 240A  
                            u5191 4456                              u4391 1F0C  
                            u5271 4276                              u5351 450E  
                            u5431 5112                              u6231 0B88  
                            u6151 0A32                              u6071 080A  
                            u7111 3EA2                              u7031 383A  
                            u6400 51B4                              u6320 39FC  
                            u4560 3C68                              u5600 2A2C  
                            u4800 26D4                              u4720 25B8  
                            u4640 241E                              u5280 428A  
                            u5360 453A                              u5520 30FC  
                            u5440 511A                              u6240 0BEA  
                            u6160 0A52                              u6080 08B2  
                            u7120 3EDE                              u7040 384E  
                            u7200 4128                              u6401 51B0  
                            u6321 39F8                              u4481 3AA2  
                            u4561 3C64                              u5601 2A26  
                            u4801 26D0                              u4721 25B4  
                            u4641 241A                              u5281 4286  
                            u5361 4536                              u5345 44EA  
                            u5521 30F8                              u5417 5186  
                            u6241 0BE4                              u6161 0A4E  
                            u6081 08AE                              u7121 3EDA  
                            u7041 384A                              u7201 4124  
                            u6410 51CA                              u6330 3A0E  
                            u4490 3AC6                              u4570 3C96  
                            u5290 4906                              u5610 2A2E  
                            u4810 2702                              u4730 25D8  
                            u4650 245E                              u5370 4564  
                            u5530 3150                              u5450 5130  
                            u6250 0BEC                              u6170 0A64  
                            u6090 08C4                              u7130 3EF0  
                            u7050 3878                              u7210 419A  
                            u6411 51C6                              u6331 3A0A  
                            u4491 3AC2                              u4571 3C92  
                            u5291 4902                              u4811 26FE  
                            u4731 25D4                              u4651 245A  
                            u5371 4560                              u5515 30D6  
                            u5451 512C                              u6171 0A60  
                            u6091 08C0                              u7131 3EEC  
                            u7051 3874                              u7211 4196  
                            u6420 51E0                              u4580 3CDE  
                            u5700 2C48                              u5620 2A44  
                            u4740 25EA                              u4660 249E  
                            u4900 21B0                              u4820 1F6C  
                            u5540 316C                              u5460 2FFC  
                            u6260 0C02                              u6180 0A72  
                            u6340 46B2                              u6500 3574  
                            u7140 3F72                              u7060 3888  
                            u7300 47EA                              u6421 51DC  
                            u4581 3CDA                              u5701 2C44  
                            u5621 2A40                              u4741 25E6  
                            u4661 249A                              u4821 1F68  
                            u5541 3168                              u6261 0BFE  
                            u6181 0A6E                              u6341 46AE  
                            u6501 3570                              u7141 3F6E  
                            u7061 3884                              u7221 42B2  
                            u7301 47E6                              u6430 51F6  
                            u6270 38DC                              u5710 2C58  
                            u5630 2A74                              u4750 2618  
                            u4670 2514                              u4590 2396  
                            u4910 220A                              u4830 1F7E  
                            u5390 459E                              u5550 31A8  
                            u5470 302C                              u6190 0AA8  
                            u6350 46E4                              u6510 35D0  
                            u7070 3898                              u7230 42CE  
                            u7310 481C                              u6431 51F2  
                            u8007 55DC                              u6271 38D8  
                            u5711 2C54                              u5631 2A70  
                            u4751 2614                              u4671 2510  
                            u4591 2392                              u4911 2206  
                            u4831 1F7A                              u5391 4598  
                            u5551 31A4                              u5535 3146  
                            u5471 3028                              u6191 0AA4  
                            u6351 46E0                              u6511 35CC  
                            u7071 3894                              u7231 42CA  
                            u7311 4818                              u7151 40A4  
                            u5560 55A6                              u6280 3912  
                            u5720 2C6A                              u5640 2A90  
                            u4760 262E                              u4680 2536  
                            u4920 222A                              u4840 1F8E  
                            u5480 304E                              u5800 01AE  
                            u6360 4700                              u6600 14C2  
                            u6520 3626                              u6440 4FCC  
                            u7400 3E46                              u7240 42EA  
                            u7160 40C0                              u8017 4D5A  
                            u5561 55A0                              u6281 390E  
                            u5721 2C66                              u5641 2A8C  
                            u4761 262A                              u4681 2532  
                            u4921 2226                              u4905 21A6  
                            u4841 1F8A                              u5385 4576  
                            u5481 304A                              u5465 2FF2  
                            u5801 01A8                              u6361 46FC  
                            u6601 14BE                              u6521 3622  
                            u7081 3E5C                              u6441 4FC8  
                            u7401 3E42                              u7321 3D26  
                            u7241 42E6                              u7161 40BC  
                            u5570 55A8                              u6290 392E  
                            u5730 2C7A                              u5650 2ABE  
                            u4770 2642                              u4690 2560  
                            u4930 223C                              u4850 1FCE  
                            u5810 01B0                              u6370 4712  
                            u6610 1508                              u6530 3670  
                            u7090 3E78                              u6450 5006  
                            u7330 3D9A                              u7250 42FC  
                            u7170 40DC                              u8027 4D74  
                            u6291 392A                              u5731 2C76  
                            u5651 2ABA                              u4771 263E  
                            u4691 255C                              u4931 2238  
                            u4851 1FCA                              u6371 470E  
                            u6611 1504                              u6531 366C  
                            u7091 3E74                              u6451 5002  
                            u7331 3D96                              u7411 2CE6  
                            u7251 42F8                              u7171 40D8  
                            u5580 52BC                              u5740 2C92  
                            u5660 2ACC                              u4780 265C  
                            u4940 226A                              u4860 1FE0  
                            u5900 044A                              u5820 01C6  
                            u6380 473A                              u6700 16F6  
                            u6620 158A                              u6540 368E  
                            u6460 4CB2                              u7340 3DC2  
                            u7500 2ED0                              u7420 2D02  
                            u7260 4322                              u7180 40EE  
                            u8037 4D8A                              u5581 52B8  
                            u5741 2C8E                              u5661 2AC8  
                            u4781 2658                              u4941 2266  
                            u4861 1FDC                              u5901 0446  
                            u5821 01C2                              u6381 4736  
                            u6701 16F2                              u6621 1584  
                            u6541 368A                              u6461 4CAE  
                            u7341 3DBE                              u7501 2ECC  
                            u7421 2CFE                              u7261 431E  
                            u7181 40EA                              u5590 52EA  
                            u3990 483E                              u5670 2BF6  
                            u4790 26A4                              u4950 2280  
                            u4870 1FF0                              u5910 045C  
                            u5830 0252                              u5750 00C6  
                            u6710 1738                              u6630 158C  
                            u6550 369E                              u6470 4CD4  
                            u6390 53F0                              u7350 3DD2  
                            u7510 2F02                              u7430 2D1A  
                            u7270 4334                              u7190 4116  
                            u8047 575A                              u5591 52E6  
                            u3991 483A                              u5671 2BF2  
                            u4791 26A0                              u4951 227C  
                            u4871 1FEC                              u5495 3062  
                            u5911 0458                              u5831 024E  
                            u5751 00C2                              u6711 1734  
                            u6551 369A                              u6471 4CD0  
                            u6391 53EC                              u7351 3DCE  
                            u7511 2EFE                              u7431 2D16  
                            u7271 4330                              u7191 4112  
                            u7600 3228                              u5680 2C14  
                            u4960 2294                              u4880 2026  
                            u5496 306C                              u5920 047E  
                            u5840 0282                              u5760 0116  
                            u6720 178E                              u6640 15A2  
                            u6560 36AC                              u6800 4ED6  
                            u6480 4CFC                              u7360 3DE2  
                            u7520 2F4E                              u7440 2D30  
                            u7280 43A4                              u7601 3224  
                            u5681 2C10                              u4961 2290  
                            u4881 2022                              u5497 307C  
                            u5921 047A                              u5841 027C  
                            u5761 0112                              u6721 178A  
                            u6641 159E                              u6561 36A8  
                            u6801 4ED2                              u6481 4CF8  
                            u7361 3DDE                              u7521 2F4A  
                            u7441 2D2C                              u7281 43A0  
                            u7610 3236                              u5690 2C2E  
                            u4970 22AE                              u4890 2036  
                            u5930 04A4                              u5850 0284  
                            u5770 0124                              u6730 17B2  
                            u6650 15C6                              u6570 36E6  
                            u6490 3566                              u6810 4E5C  
                            u7370 3DF4                              u7530 2F5C  
                            u7450 2D94                              u7611 3232  
                            u5691 2C2A                              u4971 22AA  
                            u4891 2032                              u5931 04A0  
                            u5771 0120                              u6731 17AE  
                            u6651 15C2                              u6571 36E2  
                            u6491 3562                              u6811 4E58  
                            u7371 3DF0                              u7531 2F58  
                            u7451 2D90                              u7291 4764  
                            u7700 32E4                              u7620 324C  
                            u6900 4DFE                              u4980 22F6  
                            u5940 04BA                              u5860 029A  
                            u5780 0136                              u6740 1844  
                            u6660 1602                              u6580 36F4  
                            u6820 34DE                              u7380 3E1A  
                            u7540 2FA8                              u7460 2DC6  
                            u7701 32E0                              u7621 3248  
                            u4981 22F2                              u5941 04B6  
                            u5861 0296                              u5781 0132  
                            u6741 1840                              u6661 15FE  
                            u6581 36F0                              u6821 34DA  
                            u7381 3E16                              u7541 2FA4  
                            u7461 2DC2                              u7710 32F4  
                            u7630 325C                              u6910 4E32  
                            u4990 2324                              u5950 04D6  
                            u5870 031E                              u5790 017E  
                            u6750 18F2                              u6670 16AC  
                            u6590 1478                              u6830 3502  
                            u7390 3E36                              u7470 2E12  
                            u7550 5744                              u7711 32F0  
                            u7631 3258                              u4991 2320  
                            u5951 04D2                              u5871 031A  
                            u5791 017A                              u6751 18EE  
                            u6671 16A6                              u6591 1474  
                            u6831 34FE                              u7391 3E32  
                            u7471 2E0E                              u7551 5740  
                            u7800 5794                              u7720 330C  
                            u7640 3274                              u7560 31DC  
                            u6920 4E42                              u5960 050C  
                            u5880 03B2                              u6760 195A  
                            u6680 16AE                              u6840 3526  
                            u7480 2E20                              u7801 5790  
                            u7721 3308                              u7641 3270  
                            u7561 31D8                              u6921 4E3E  
                            u5961 0508                              u5881 03AE  
                            u6761 1954                              u6841 3522  
                            u7481 2E1C                              u7730 331A  
                            u7650 3282                              u7570 31EA  
                            u5970 0532                              u5890 0424  
                            u6770 195C                              u6690 16C4  
                            u6850 354A                              u7490 2E6C  
                            u7810 4F52                              u7731 3316  
                            u7651 327E                              u7571 31E6  
                            u6907 4DF4                              u5971 052E  
                            u5891 0420                              u6691 16C0  
                            u6851 3546                              u6931 370E  
                            u7491 2E68                              u7811 4F4E  
                            u7740 3330                              u7660 3298  
                            u7580 3200                              u5980 0544  
                            u6780 1972                              u6860 5078  
                            u6940 377E                              u7820 4F76  
                            u7900 4678                              u7741 332C  
                            u7661 3294                              u7581 31FC  
                            u6917 4E28                              u5981 0540  
                            u6781 196E                              u6861 5074  
                            u6941 377A                              u7821 4F72  
                            u7901 4674                              u7750 3340  
                            u7670 32A8                              u7590 3210  
                            u6870 56AE                              u5990 0552  
                            u6790 1A0E                              u6950 37A2  
                            u7830 4F9A                              u7751 333C  
                            u7671 32A4                              u7591 320C  
                            u6871 56AA                              u5991 054E  
                            u6791 1A0A                              u6951 379E  
                            u7831 4F96                              u7760 3358  
                            u7680 32C0                              u6880 5094  
                            u6960 37B2                              u7840 45FE  
                            u7761 3354                              u7681 32BC  
                            u6881 5090                              u6961 37AE  
                            u7841 45FA                              u7770 3366  
                            u7690 32CE                              u6890 50C8  
                            u6970 37D0                              u7850 4610  
                            u7771 3362                              u7691 32CA  
                            u6891 50C4                              u6971 37CC  
                            u7851 460C                              u7780 337C  
                            u6980 37E0                              u7860 4620  
                            u7781 3378                              u6981 37DC  
                            u7861 461C                              u7790 338C  
                            u6990 37F0                              u7870 4630  
                            u7791 3388                              u6991 37EC  
                            u7871 462C                              u7880 4640  
                            u7881 463C                              u7890 465C  
                            u7891 4658                              u7977 4084  
                            u7987 532C                              u7997 55CA  
                            _TMR2 000FBC             ??_stopTimeSettingMenu 005F  
                            abs@a 0013                 ?_Lcd_Write_String 0005  
                            _dbuf 0260                              _atoi 38A4  
                            _main 45B2                              _dtoa 29FC  
                            _prec 00F6                              _nout 01AF  
                            pad@i 0018                              pad@p 0015  
                            fsr1h 000FE2                              fsr2h 000FDA  
                            indf1 000FE7                              indf2 000FDF  
                            fsr1l 000FE1                              pad@w 001A  
                            fsr2l 000FD9                              btemp 005F  
                   ___fpclassifyf 44B4                              prodh 000FF4  
                            prodl 000FF3                              start 009A  
              ??_Lcd_Write_String 0007                   ___fldiv@new_exp 0046  
                 __end_of_Lcd_Cmd 5766                      _tolower$3141 000D  
                    ___param_bank 000000           ??_driverTimeSettingMenu 005F  
                           ??_abs 0015                             ??_pad 0017  
                    ?_menuControl 0001  speedLimitSettingMenu@textCursor2 00E1  
                   ___fltol@sign1 0056                   __end_of___aodiv 3BBC  
                           ?_atoi 0008                   __end_of___fladd 1F52  
                           ?_main 0001                             ?_dtoa 001C  
                 __end_of___aomod 3D20                   __end_of_adcInit 54CA  
                 __end_of___fldiv 2716                   __end_of___awdiv 4A80  
                 __end_of___flneg 5576                             _EEADR 000FA9  
                           STR_10 7FD0                             STR_11 7F09  
                           STR_20 7FF3                             STR_12 7FDE  
                           STR_13 7F1A                             STR_14 7EF7  
                           STR_23 7FEF                             STR_15 7F6F  
                           STR_24 7FF7                             STR_16 7F91  
                           STR_17 7F5E                             STR_18 7EF7  
                           STR_27 7FFB                             STR_19 7FEB  
                 __end_of___awmod 4BE2                             STR_29 7FFB  
                 __end_of___flmul 237C                   __end_of___flsub 5386  
                 __end_of___fltol 42AC                   __end_of___lldiv 4D30  
                           _T0CON 000FD5                   ___awdiv@divisor 0003  
                           i2l685 0096                   ___awdiv@counter 0005  
                    vfpfcnvrt@fmt 00A9                             _TMR0H 000FD7  
                           _TMR0L 000FD6           __size_of_Lcd_Set_Cursor 0066  
             ___lmul@multiplicand 0005                             _fabsf 5652  
                           _flags 00F8                             _fputc 482C  
                           _fputs 5386                   __end_of_isdigit 55AE  
                     ?_PWM1_setDC 0058                      _adc_raw_data 0173  
                     ?_PWM2_setDC 0058                             atoi@n 0015  
                           pad@fp 0011                             atoi@s 0008  
                           _width 01B1                             _putch 57B8  
                           dtoa@d 001E                             dtoa@i 003E  
                           dtoa@n 0036                             dtoa@p 0030  
                           dtoa@s 0034                             dtoa@w 0032  
                 __end_of_isspace 52F6                   __end_of_isupper 553E  
                __end_of_PWM_Init 5704                             tablat 000FF5  
                           ttemp5 0060                             ttemp6 0063  
                           ttemp7 0067                             status 000FD8  
          ?_speedLimitSettingMenu 0001                             wtemp8 0060  
                 __end_of_sprintf 52A4                    ?___fpclassifyf 0001  
                 __end_of_tolower 5148                   __end_of_strncmp 475E  
                   ?_readAdcValue 0001                  __end_of_Lcd_Port 5200  
                 __initialization 5200                       _system_init 3F7E  
                    __end_of_atoi 3A34                      __end_of_main 4688  
                    __end_of_dtoa 2CE0       _KP@fs_speed_controller$F949 01E7  
                          ??_atoi 000A                            ??_main 005F  
                          ??_dtoa 0026                __size_of_Lcd_Clear 000E  
                   __activetblptr 000002   __size_of_calculatedAverageValue 02E6  
        stopTimeSettingMenu@F6910 0210                            ?_fabsf 001C  
                          _ADCON0 000FC2                            _ADCON1 000FC1  
                          ?_fputc 0001                            ?_fputs 000A  
                          _ADRESH 000FC4                            _ADRESL 000FC3  
                          _EEDATA 000FA8                            _CCPR1L 000FBE  
                          _CCPR2L 000F67                            _EECON2 000FA7  
                ___awdiv@dividend 0001                            ?_putch 0001  
                          i2l6520 0018                            i2l6530 0046  
                          i2l6522 0026                            i2l6540 0074  
                          i2l6532 004C                            i2l6524 0028  
                          i2l6542 008A                            i2l6534 005E  
                          i2l6526 0030                            i2l6518 000A  
                          i2l6544 0092                            i2l6536 0060  
                          i2l6528 0034                            i2l6538 0070  
                       ??_Lcd_Cmd 0002                            _TIMER0 0008  
                  ??_readAdcValue 0003           __size_of_Lcd_Write_Char 0038  
                __end_of___xxtofl 3708                 _scanAdcConversion 0C4E  
              _timer_counter_flag 00FA                ?_scanAdcConversion 0001  
            __size_of_eepromWrite 002E                      vfprintf@cfmt 00CD  
                __end_of_lcd_init 4DC6                            ___flge 43B0  
                          ___fleq 4BE2                  __end_of_mainMenu 38A4  
                          ___lmul 4FAE                         ??___aodiv 0011  
                       ??___fladd 003D                         ??___aomod 0011  
                          ___wmul 5704                         ??_adcInit 0001  
                       ??___fldiv 003D                         ??___awdiv 0005  
                       ??___flneg 0005                         ??___awmod 0005  
                       ??___flmul 0024                         ??___flsub 004D  
                       ??___fltol 0052                         ??___lldiv 0009  
                          _efgtoa 009E                            _floorf 2FB4  
             __size_of_PWM1_setDC 007A                            fabsf@u 0020  
                          fabsf@x 001C                  __end_of_mcu_init 5796  
                __end_of_exitLine 57B8               __size_of_PWM2_setDC 007A  
               _secretMenuCounter 00FC               ??_scanAdcConversion 0058  
                          clear_0 5226                            clear_1 5232  
                          clear_2 523E                   eepromWrite@data 0001  
                ___awdiv@quotient 0007                   ___awmod@divisor 0003  
                 ___awmod@counter 0005                            pad@buf 0013  
                          dtoa@fp 001C                            _strcpy 5148  
                          _strlen 561C                            fputc@c 0001  
            readAdcValue@adcValue 0006                            fputs@c 000E  
                          fputs@i 000F                            fputs@s 000A  
                       ??_isdigit 0003                   ___fpclassifyf@e 0009  
                 ___fpclassifyf@u 000B                   ___fpclassifyf@x 0001  
                    __mediumconst 7EF6                         ??_isspace 0003  
                          tblptrh 000FF7                         ??_isupper 0003  
                          tblptrl 000FF6                            tblptru 000FF8  
                          putch@c 0001                  __end_of_vfprintf 5082  
                       ??_sprintf 005F                         ??_tolower 0009  
                __end_of_stopMenu 482C                         ??_strncmp 0007  
      __end_of_buttonControlFlags 3396                   Lcd_Set_Cursor@a 0005  
                 Lcd_Set_Cursor@b 0004                   Lcd_Set_Cursor@y 0007  
                 Lcd_Set_Cursor@z 0006                        ___flge@ff1 0035  
                      ___flge@ff2 0039                   ??___fpclassifyf 0005  
                    ___xxtofl@arg 0018                      ___xxtofl@exp 0017  
                    ___xxtofl@val 000E                        ___fleq@ff1 0001  
                      ___fleq@ff2 0005                     mainMenu@F6894 0163  
       __end_of_scanAdcConversion 1454                        __accesstop 0060  
         __end_of__initialization 5244                        ___flneg@f1 0001  
          _calculatedAverageValue 2716                 __end_of_Lcd_Clear 57B6  
                   ___rparam_used 000001                        ___fltol@f1 004E  
                  __pcstackCOMRAM 0001                      __pidataBANK1 540C  
      driverTimeSettingMenu@F6913 0200                     __end_of_fabsf 5686  
                ??_openLCD_Script 000B                     __end_of_fputc 48F6  
                   __end_of_fputs 53CA                     __end_of_putch 57BA  
                       ?_PWM_Init 0001                    _Lcd_Set_Cursor 5082  
    _KP@fs_speed_controller$F1163 01DF      _KP@fs_speed_controller$F2203 01BF  
    _KP@fs_speed_controller$F2072 01C7      _KP@fs_speed_controller$F1338 01D7  
    _KP@fs_speed_controller$F2356 01B7      _KP@fs_speed_controller$F1838 01CF  
               eepromRead@address 0001              __size_of_menuControl 0076  
                         ??_fabsf 0020                         ?_Lcd_Port 0001  
                         ??_fputc 0005                           ??_fputs 000E  
                         ??_putch 0001                        __pbssBANK0 00F3  
                      __pbssBANK1 0100                        __pbssBANK2 0200  
             PWM1_setDC@dutycycle 0058                           ?_TIMER0 0001  
                         ?___flge 0035                           ?___fleq 0001  
              __size_of_pauseMenu 0136                           ?___lmul 0001  
                         ?___wmul 0001                           ?_efgtoa 0058  
  __size_of_driverTimeSettingMenu 0128                           _CCP1CON 000FBD  
                         _CCP2CON 000F66                           ?_floorf 004E  
   __end_of_driverTimeSettingMenu 3F7E                    ___lmul@product 0009  
       __size_of_Lcd_Write_String 007E            __end_of_Lcd_Set_Cursor 50E8  
                      ??_PWM_Init 0001                           ?_strcpy 0001  
                         ?_strlen 0001              __end_of_readAdcValue 540C  
                      _eepromRead 572A                         ?___xxtofl 000E  
  stopTimeSettingMenu@textCursor2 00E1                __size_of_vfpfcnvrt 063E  
     __end_of_stopTimeSettingMenu 41A6                        ??_Lcd_Port 0001  
              __size_of_startMenu 001A                      ??_PWM1_setDC 005A  
                    ??_PWM2_setDC 005A                         ?_lcd_init 0001  
         __size_of_menuInitialize 0028           ??_speedLimitSettingMenu 005F  
                       ?_mainMenu 0001                     _menu_selected 00FB  
              __size_of_stopMotor 003C        __size_of_scanAdcConversion 0806  
                  _Lcd_Write_Char 55AE                           _Lcd_Cmd 5748  
                       ?_mcu_init 0001                         ?_exitLine 0001  
                 __size_of_TIMER0 0092                        _controller 0150  
                         __Hparam 0000                           __Lparam 0000  
             PWM2_setDC@dutycycle 0058                      ?_system_init 0001  
                 __size_of___flge 0104                   __size_of___fleq 00AA  
                         ___aodiv 3A34                           ___fladd 1A92  
                         ___aomod 3BBC                           _adcInit 548C  
                         ___fldiv 237C                           ___awdiv 49BC  
                         ___flneg 553E                   __size_of___lmul 006A  
                         ___awmod 4B32                           ___flmul 1F52  
                         ___flsub 5340                           ___fltol 41A6  
                         ___lldiv 4C8C                   __size_of___wmul 0026  
                       ?_vfprintf 00C7                   __size_of_efgtoa 0BB0  
                       ?_stopMenu 0001                   __size_of_floorf 0216  
                         __pcinit 5200                __end_of_PWM1_setDC 4F38  
                         __ramtop 0600                   ?_Lcd_Set_Cursor 0004  
              __end_of_PWM2_setDC 4EBE                           __ptext0 45B2  
                         __ptext1 5796                           __ptext2 3F7E  
                         __ptext3 572A                           __ptext4 52F6  
                         __ptext5 57A8                           __ptext6 56B4  
                         __ptext7 4F38                           __ptext8 4A80  
                         __ptext9 409E                        _menu_flags 0197  
                      _menu_value 00F3                   __size_of_strcpy 005C  
                 __size_of_strlen 0036                         _T2CONbits 000FBA  
                    __size_of_abs 0040                      __size_of_pad 00C6  
                         _isdigit 5576                        ??___xxtofl 0012  
                ___awmod@dividend 0001                           _isspace 52A4  
                         _isupper 5506                           efgtoa@c 005E  
                         efgtoa@d 0087                           efgtoa@e 009F  
                         efgtoa@f 005A                           efgtoa@g 009B  
                         efgtoa@h 0091                           efgtoa@i 0099  
                         efgtoa@l 0095                           efgtoa@m 0083  
                         efgtoa@n 00A1                           efgtoa@p 008B  
                         efgtoa@t 007F                           efgtoa@u 00A3  
                         efgtoa@w 008E                     ?_speedControl 0058  
                         atoi@neg 000E                     ?_timer_0_init 0001  
               __end_of_pauseMenu 3E56                           _sprintf 5252  
                         _tolower 50E8                        ??_lcd_init 0004  
          __end_of_Lcd_Write_Char 55E6                           _strncmp 4688  
            end_of_initialization 5244                        ??_mainMenu 005F  
            speedControl@position 0058                           floorf@e 0064  
                         floorf@m 0060                           floorf@u 0066  
                         floorf@x 004E                        _secretMenu 2CE0  
                         fputc@fp 0003                        ??_mcu_init 0001  
                      ??_exitLine 0001                     __Lmediumconst 7EF6  
                         fputs@fp 000C                   ___lldiv@divisor 0005  
                 ___lldiv@counter 000D                 __end_of_vfpfcnvrt 1A92  
                      efgtoa@mode 0090                        efgtoa@sign 0089  
                         postdec1 000FE5                           postdec2 000FDD  
                         postinc0 000FEE                           postinc1 000FE6  
                         postinc2 000FDE                         Lcd_Port@a 0001  
               __end_of_startMenu 5780                        ??_vfprintf 005F  
                      ??_stopMenu 005F                           strcpy@d 0009  
                         strlen@a 0003                           strcpy@s 0007  
                         strlen@s 0001                 __end_of_stopMotor 5506  
                       _PORTBbits 000F81                         _PORTDbits 000F83  
                     ?_eepromRead 0001                       ___fladd@grs 0044  
                   ___xxtofl@sign 0016                    pauseMenu@F6900 0240  
                       _TRISAbits 000F92                    ??_speedControl 005C  
                       _TRISBbits 000F93                         _TRISCbits 000F94  
                       _TRISDbits 000F95                         _TRISEbits 000F96  
                  ??_timer_0_init 0001              pauseMenu@textCursor2 00E1  
                     ___fldiv@grs 0048                       ___fldiv@rem 0041  
                      _startMotor 55E6                   ?_Lcd_Write_Char 0001  
         ?_calculatedAverageValue 0001                 Lcd_Write_String@a 0005  
               Lcd_Write_String@i 0009                       ___flmul@grs 0029  
                   ??_eepromWrite 0002          _button_bounce_controller 019D  
                  __end_of_TIMER0 009A               mainMenu@textCursor2 00E1  
                   ?_stateMachine 0001                _buttonControlFlags 31CA  
                       _Lcd_Clear 57A8                      _convert_data 0100  
           __size_of_readAdcValue 0042                    __end_of___flge 44B4  
                  __end_of___fleq 4C8C                    __end_of___lmul 5018  
                     vfpfcnvrt@ap 00AB                       vfpfcnvrt@ct 00C3  
                     vfpfcnvrt@fp 00A7                       vfpfcnvrt@ll 00B1  
                  __end_of___wmul 572A                  _Lcd_Write_String 4DC6  
                  __end_of_efgtoa 0C4E               ?_buttonControlFlags 0001  
                  __end_of_floorf 31CA                        floorf@F524 01A3  
                  __end_of_strcpy 51A4                    __end_of_strlen 5652  
               __size_of_PWM_Init 0028               start_initialization 5200  
                     __end_of_abs 548C                       __end_of_pad 49BC  
  __end_of_calculatedAverageValue 29FC                    _menuInitialize 56B4  
                    _driver_limit 0183                       ?_secretMenu 0001  
               __size_of_Lcd_Port 005C              ??_buttonControlFlags 0001  
                        ??_TIMER0 0001                     stopMenu@F6897 0250  
           __end_of___fpclassifyf 45B2                      _readAdcValue 53CA  
                  ??_stateMachine 00F1               __size_of_eepromRead 001E  
                     vfprintf@fmt 00C9                        ?_Lcd_Clear 0001  
                        ??___flge 003D                          ??___fleq 0009  
                        ??___lmul 0009               __end_of_eepromWrite 56B4  
                        ??___wmul 0005                          ??_efgtoa 006A  
                     __pdataBANK1 01B3                          ??_floorf 0052  
            __size_of_system_init 0120                   Lcd_Write_Char@a 0004  
                 Lcd_Write_Char@y 0003                     ??_menuControl 005F  
                        ??_strcpy 0005                          ??_strlen 0003  
                       ___fladd@a 0039                         ___fladd@b 0035  
                       ___fldiv@a 0039                         ___fldiv@b 0035  
                       ___flmul@a 0020                         ___flmul@b 001C  
                       ___flsub@a 0049                         ___flsub@b 0045  
          __end_of_menuInitialize 56DC                     __pcstackBANK0 0060  
                ___aodiv@dividend 0001                 __size_of___xxtofl 01B4  
                     ?_startMotor 0001    __size_of_speedLimitSettingMenu 0104  
   __end_of_speedLimitSettingMenu 43B0                          ?_Lcd_Cmd 0001  
               __size_of_lcd_init 0096                 __size_of_mainMenu 019C  
                       _atoi$3046 0010                         _atoi$3047 0014  
                       _atoi$3048 0012                   secretMenu@F6904 0230  
               __size_of_mcu_init 0016                 __size_of_exitLine 0002  
                     _efgtoa$2980 0075                       _efgtoa$2990 007D  
                     _efgtoa$2984 0077                       _efgtoa$2979 0073  
                     _efgtoa$2988 0079                       _efgtoa$2989 007B  
                       _dtoa$2955 002E              __end_of_speedControl 3554  
                ??_Lcd_Set_Cursor 0005                         __pintcode 0008  
                   __pmediumconst 7EF6              __end_of_timer_0_init 57A8  
                        ?___aodiv 0001                          ?___fladd 0035  
                        ?___aomod 0001                          ?_adcInit 0001  
                        ?___fldiv 0035                          ?___awdiv 0001  
                ___aodiv@quotient 0013                          ?___flneg 0001  
                        ?___awmod 0001                          ?___flmul 001C  
                        ?___flsub 0045                          ?___fltol 004E  
                        ?___lldiv 0001               __size_of_secretMenu 02D4  
               __size_of_vfprintf 006A             _driverTimeSettingMenu 3E56  
               __size_of_stopMenu 00CE                         fabsf@F463 01AB  
                        ?_isdigit 0001                          ?_isspace 0001  
                 ?_menuInitialize 0001                          ?_isupper 0001  
         __size_of_openLCD_Script 004A               __end_of_menuControl 4FAE  
                  __size_of_fabsf 0034                          ?_sprintf 00CF  
                        ?_tolower 0007                    __size_of_fputc 00CA  
                  __size_of_fputs 0044                          ?_strncmp 0001  
                  __size_of_putch 0002                eepromWrite@address 0002  
                       _pauseMenu 3D20                    ___wmul@product 0005  
    __size_of_stopTimeSettingMenu 0108                          _LATCbits 000F8B  
                        _LATDbits 000F8C                       _eepromWrite 5686  
                  PWM1_setDC@duty 005C                          Lcd_Cmd@a 0003  
                        _PIR2bits 000FA1                          i2u791_40 0018  
                        i2u791_41 0014                          i2u792_40 0026  
                        i2u792_41 0022                          i2u793_40 0046  
                        i2u793_41 0042                          i2u794_40 005E  
                        i2u794_41 005A                          i2u795_40 0070  
                        i2u795_41 006C                          i2u796_40 008A  
                        i2u796_41 0086                       ??_Lcd_Clear 0004  
                    _pauseIsClick 00FF               __size_of_startMotor 0036  
                       _vfpfcnvrt 1454                        _ADCON0bits 000FC2  
                      _ADCON2bits 000FC0                          _PWM_Init 56DC  
               ___wmul@multiplier 0001                         _startMenu 5766  
driverTimeSettingMenu@textCursor2 00E1                      ??_eepromRead 0001  
                ??_Lcd_Write_Char 0002                    PWM2_setDC@duty 005C  
                       _stopMotor 54CA        speedLimitSettingMenu@F6907 0220  
            __end_of_stateMachine 4B32                      _isspace$3077 0007  
                        _Lcd_Port 51A4                        vfpfcnvrt@c 00C6  
                      vfpfcnvrt@f 00BF                 ___lmul@multiplier 0001  
                       copy_data0 5214          __end_of_Lcd_Write_String 4E44  
                      ?_pauseMenu 0001                  __size_of_Lcd_Cmd 001E  
                      _EECON1bits 000FA6                          __Hrparam 0000  
                      vfprintf@ap 00CB                          __Lrparam 0000  
                      vfprintf@fp 00C7                __end_of_eepromRead 5748  
                __size_of___aodiv 0188                  __size_of___fladd 04C0  
                __size_of___aomod 0164                  __size_of_adcInit 003E  
                __size_of___fldiv 039A                  __size_of___awdiv 00C4  
                __size_of___flneg 0038                  __size_of___awmod 00B0  
                __size_of___flmul 042A                  __size_of___flsub 0046  
                __size_of___fltol 0106                  __size_of___lldiv 00A4  
                      ?_vfpfcnvrt 00A7            ?_driverTimeSettingMenu 0001  
                     _menuControl 4F38                   ___aodiv@divisor 0009  
                 ___aodiv@counter 0011                        ?_startMenu 0001  
                      _ANSELAbits 000F38                        _ANSELBbits 000F39  
                      _ANSELCbits 000F3A                        _ANSELDbits 000F3B  
                      _ANSELEbits 000F3C                ___fpclassifyf@F463 01A7  
                      sprintf@fmt 00D1                          ___xxtofl 3554  
                      ?_stopMotor 0001                  __size_of_isdigit 0038  
                __size_of_isspace 0052                          __ptext10 475E  
                        __ptext11 5766                          __ptext20 2716  
                        __ptext12 42AC                          __ptext21 4FAE  
                        __ptext13 2CE0                          __ptext30 5252  
                        __ptext22 4C8C                          __ptext14 3D20  
                        __ptext31 5018                          __ptext23 57B6  
                        __ptext15 3708                          __ptext40 41A6  
                        __ptext32 1454                          __ptext24 3E56  
                        __ptext16 55E6                          __ptext41 5340  
                        __ptext33 4688                          __ptext25 54CA  
                        __ptext17 3396                          __ptext50 29FC  
                        __ptext42 1A92                          __ptext34 009E  
                        __ptext26 4E44                          __ptext18 0C4E  
                        __ptext51 48F6                          __ptext43 553E  
                        __ptext35 50E8                          __ptext27 4EBE  
                        __ptext19 53CA                          __ptext60 52A4  
                        __ptext52 561C                          __ptext44 1F52  
                        __ptext36 5506                          __ptext28 5652  
                        __ptext61 5576                          __ptext53 5386  
                        __ptext45 43B0                          __ptext37 5148  
                        __ptext29 3554                          __ptext70 5748  
                        __ptext62 5704                          __ptext54 482C  
                        __ptext46 4BE2                          __ptext38 2FB4  
                        __ptext71 51A4                          __ptext63 5686  
                        __ptext55 57B8                          __ptext47 237C  
                        __ptext39 44B4                          __ptext72 548C  
                        __ptext64 4DC6                          __ptext56 544C  
                        __ptext48 4B32                          __ptext73 56DC  
                        __ptext65 55AE                          __ptext57 3BBC  
                        __ptext49 49BC                          __ptext66 5082  
                        __ptext58 3A34                          __ptext67 31CA  
                        __ptext59 38A4                          __ptext68 5780  
                        __ptext69 4D30                  __size_of_isupper 0038  
                        _lcd_init 4D30                          _mainMenu 3708  
                __size_of_sprintf 0052                  __size_of_tolower 0060  
                    ??_secretMenu 005F                        strcpy@dest 0001  
                __size_of_strncmp 00D6                          _mcu_init 5780  
                        _exitLine 57B6                     __size_of_atoi 0190  
                   __size_of_main 00D6                     __size_of_dtoa 02E4  
           __size_of_speedControl 01BE             __size_of_timer_0_init 0012  
           secretMenu@textCursor2 00E1                          efgtoa@fp 0058  
                        efgtoa@ne 0085                          efgtoa@pp 0081  
                        efgtoa@ou 006F                          int$flags 005F  
                        _vfprintf 5018                          _stopMenu 475E  
          readAdcValue@adcChannel 0005                  ___aomod@dividend 0001  
              __end_of_secretMenu 2FB4                    _vfpfcnvrt$3010 00BD  
                  _vfpfcnvrt$3004 00B9                    _vfpfcnvrt$3005 00BB  
                     _OSCTUNEbits 000F9B                        _INTCONbits 000FF2  
                  _openLCD_Script 52F6      _KD@fs_speed_controller$F1164 01DB  
    _KD@fs_speed_controller$F2204 01BB      _KD@fs_speed_controller$F2073 01C3  
    _KD@fs_speed_controller$F1339 01D3      _KD@fs_speed_controller$F2357 01B3  
    _KD@fs_speed_controller$F1839 01CB                          isdigit@c 0001  
                    _speedControl 3396                      _timer_0_init 5796  
                    ??_startMotor 005E                Lcd_Write_Char@temp 0002  
                        intlevel2 0000                         sprintf@ap 00D9  
                     ??_pauseMenu 005F       __size_of_buttonControlFlags 01CC  
                        isspace@c 0001                  ___lldiv@dividend 0001  
                       strcpy@src 0003                          isupper@c 0001  
                       strncmp@_l 0001                         strncmp@_r 0003  
                      _OSCCONbits 000FD3                     ??_system_init 0002  
                     efgtoa@nmode 008D                      _procces_data 0130  
                 ___aomod@divisor 0009                       ??_vfpfcnvrt 00AD  
                 ___aomod@counter 0011                Lcd_Set_Cursor@temp 0008  
                ??_menuInitialize 0001                __end_of_startMotor 561C  
     _KD@fs_speed_controller$F950 01E3             __size_of_stateMachine 00B2  
                     ??_startMenu 0001               _stopTimeSettingMenu 409E  
          __end_of_openLCD_Script 5340                          sprintf@f 00DB  
                        tolower@c 0007                          sprintf@s 00CF  
          __size_of___fpclassifyf 00FE                  ___lldiv@quotient 0009  
                     ??_stopMotor 005E                          strncmp@l 0008  
                        strncmp@n 0005                          strncmp@r 000A  
                     _timer_value 018F                     ___fladd@signs 0041  
                      _PWM1_setDC 4EBE                        _PWM2_setDC 4E44  
                    ___aodiv@sign 0012                      ___fladd@aexp 0042  
                    ___fladd@bexp 0043              ?_stopTimeSettingMenu 0001  
                    ?_eepromWrite 0001             _speedLimitSettingMenu 42AC  
                    ___aomod@sign 0012                      _stateMachine 4A80  
